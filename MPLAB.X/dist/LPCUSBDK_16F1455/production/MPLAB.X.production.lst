

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Aug 02 23:48:04 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1455
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	swtext1,local,class=CONST,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	swtext2,local,class=CONST,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	swtext3,local,class=CONST,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	swtext4,local,class=CONST,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	swtext5,local,class=CONST,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,delta=2
    67                           	psect	intentry,global,class=CODE,delta=2
    68                           	dabs	1,0x20,32,_BDT
    69                           	dabs	1,0x48,8,_CtrlTrfData
    70                           	dabs	1,0x40,8,_SetupPkt
    71                           	dabs	1,0xA0,64,_ReceivedDataBuffer
    72                           	dabs	1,0x1A0,4,_midiData
    73                           	dabs	1,0x7E,2
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000E                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  008C                     	;# 
   100  008E                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010E                     	;# 
   117  0111                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0115                     	;# 
   122  0116                     	;# 
   123  0117                     	;# 
   124  0118                     	;# 
   125  0119                     	;# 
   126  011D                     	;# 
   127  018C                     	;# 
   128  018E                     	;# 
   129  0191                     	;# 
   130  0191                     	;# 
   131  0192                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0194                     	;# 
   135  0195                     	;# 
   136  0196                     	;# 
   137  0197                     	;# 
   138  0199                     	;# 
   139  019A                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019C                     	;# 
   143  019D                     	;# 
   144  019E                     	;# 
   145  019F                     	;# 
   146  020C                     	;# 
   147  0211                     	;# 
   148  0211                     	;# 
   149  0212                     	;# 
   150  0212                     	;# 
   151  0213                     	;# 
   152  0213                     	;# 
   153  0214                     	;# 
   154  0214                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0216                     	;# 
   160  0217                     	;# 
   161  0217                     	;# 
   162  0391                     	;# 
   163  0392                     	;# 
   164  0393                     	;# 
   165  039A                     	;# 
   166  039B                     	;# 
   167  0611                     	;# 
   168  0612                     	;# 
   169  0613                     	;# 
   170  0613                     	;# 
   171  0614                     	;# 
   172  0615                     	;# 
   173  0616                     	;# 
   174  0616                     	;# 
   175  0691                     	;# 
   176  0692                     	;# 
   177  0693                     	;# 
   178  0694                     	;# 
   179  0695                     	;# 
   180  0E8E                     	;# 
   181  0E8F                     	;# 
   182  0E90                     	;# 
   183  0E91                     	;# 
   184  0E92                     	;# 
   185  0E93                     	;# 
   186  0E94                     	;# 
   187  0E94                     	;# 
   188  0E95                     	;# 
   189  0E96                     	;# 
   190  0E97                     	;# 
   191  0E98                     	;# 
   192  0E99                     	;# 
   193  0E9A                     	;# 
   194  0E9B                     	;# 
   195  0E9C                     	;# 
   196  0E9D                     	;# 
   197  0E9E                     	;# 
   198  0E9F                     	;# 
   199  0FE4                     	;# 
   200  0FE5                     	;# 
   201  0FE6                     	;# 
   202  0FE7                     	;# 
   203  0FE8                     	;# 
   204  0FE9                     	;# 
   205  0FEA                     	;# 
   206  0FEB                     	;# 
   207  0FED                     	;# 
   208  0FEE                     	;# 
   209  0FEF                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000E                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  008C                     	;# 
   236  008E                     	;# 
   237  0091                     	;# 
   238  0092                     	;# 
   239  0095                     	;# 
   240  0096                     	;# 
   241  0097                     	;# 
   242  0098                     	;# 
   243  0099                     	;# 
   244  009A                     	;# 
   245  009B                     	;# 
   246  009B                     	;# 
   247  009C                     	;# 
   248  009D                     	;# 
   249  009E                     	;# 
   250  009F                     	;# 
   251  010C                     	;# 
   252  010E                     	;# 
   253  0111                     	;# 
   254  0112                     	;# 
   255  0113                     	;# 
   256  0114                     	;# 
   257  0115                     	;# 
   258  0116                     	;# 
   259  0117                     	;# 
   260  0118                     	;# 
   261  0119                     	;# 
   262  011D                     	;# 
   263  018C                     	;# 
   264  018E                     	;# 
   265  0191                     	;# 
   266  0191                     	;# 
   267  0192                     	;# 
   268  0193                     	;# 
   269  0193                     	;# 
   270  0194                     	;# 
   271  0195                     	;# 
   272  0196                     	;# 
   273  0197                     	;# 
   274  0199                     	;# 
   275  019A                     	;# 
   276  019B                     	;# 
   277  019B                     	;# 
   278  019C                     	;# 
   279  019D                     	;# 
   280  019E                     	;# 
   281  019F                     	;# 
   282  020C                     	;# 
   283  0211                     	;# 
   284  0211                     	;# 
   285  0212                     	;# 
   286  0212                     	;# 
   287  0213                     	;# 
   288  0213                     	;# 
   289  0214                     	;# 
   290  0214                     	;# 
   291  0215                     	;# 
   292  0215                     	;# 
   293  0215                     	;# 
   294  0216                     	;# 
   295  0216                     	;# 
   296  0217                     	;# 
   297  0217                     	;# 
   298  0391                     	;# 
   299  0392                     	;# 
   300  0393                     	;# 
   301  039A                     	;# 
   302  039B                     	;# 
   303  0611                     	;# 
   304  0612                     	;# 
   305  0613                     	;# 
   306  0613                     	;# 
   307  0614                     	;# 
   308  0615                     	;# 
   309  0616                     	;# 
   310  0616                     	;# 
   311  0691                     	;# 
   312  0692                     	;# 
   313  0693                     	;# 
   314  0694                     	;# 
   315  0695                     	;# 
   316  0E8E                     	;# 
   317  0E8F                     	;# 
   318  0E90                     	;# 
   319  0E91                     	;# 
   320  0E92                     	;# 
   321  0E93                     	;# 
   322  0E94                     	;# 
   323  0E94                     	;# 
   324  0E95                     	;# 
   325  0E96                     	;# 
   326  0E97                     	;# 
   327  0E98                     	;# 
   328  0E99                     	;# 
   329  0E9A                     	;# 
   330  0E9B                     	;# 
   331  0E9C                     	;# 
   332  0E9D                     	;# 
   333  0E9E                     	;# 
   334  0E9F                     	;# 
   335  0FE4                     	;# 
   336  0FE5                     	;# 
   337  0FE6                     	;# 
   338  0FE7                     	;# 
   339  0FE8                     	;# 
   340  0FE9                     	;# 
   341  0FEA                     	;# 
   342  0FEB                     	;# 
   343  0FED                     	;# 
   344  0FEE                     	;# 
   345  0FEF                     	;# 
   346  0000                     	;# 
   347  0001                     	;# 
   348  0002                     	;# 
   349  0003                     	;# 
   350  0004                     	;# 
   351  0005                     	;# 
   352  0006                     	;# 
   353  0007                     	;# 
   354  0008                     	;# 
   355  0009                     	;# 
   356  000A                     	;# 
   357  000B                     	;# 
   358  000C                     	;# 
   359  000E                     	;# 
   360  0011                     	;# 
   361  0012                     	;# 
   362  0015                     	;# 
   363  0016                     	;# 
   364  0016                     	;# 
   365  0017                     	;# 
   366  0018                     	;# 
   367  0019                     	;# 
   368  001A                     	;# 
   369  001B                     	;# 
   370  001C                     	;# 
   371  008C                     	;# 
   372  008E                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0095                     	;# 
   376  0096                     	;# 
   377  0097                     	;# 
   378  0098                     	;# 
   379  0099                     	;# 
   380  009A                     	;# 
   381  009B                     	;# 
   382  009B                     	;# 
   383  009C                     	;# 
   384  009D                     	;# 
   385  009E                     	;# 
   386  009F                     	;# 
   387  010C                     	;# 
   388  010E                     	;# 
   389  0111                     	;# 
   390  0112                     	;# 
   391  0113                     	;# 
   392  0114                     	;# 
   393  0115                     	;# 
   394  0116                     	;# 
   395  0117                     	;# 
   396  0118                     	;# 
   397  0119                     	;# 
   398  011D                     	;# 
   399  018C                     	;# 
   400  018E                     	;# 
   401  0191                     	;# 
   402  0191                     	;# 
   403  0192                     	;# 
   404  0193                     	;# 
   405  0193                     	;# 
   406  0194                     	;# 
   407  0195                     	;# 
   408  0196                     	;# 
   409  0197                     	;# 
   410  0199                     	;# 
   411  019A                     	;# 
   412  019B                     	;# 
   413  019B                     	;# 
   414  019C                     	;# 
   415  019D                     	;# 
   416  019E                     	;# 
   417  019F                     	;# 
   418  020C                     	;# 
   419  0211                     	;# 
   420  0211                     	;# 
   421  0212                     	;# 
   422  0212                     	;# 
   423  0213                     	;# 
   424  0213                     	;# 
   425  0214                     	;# 
   426  0214                     	;# 
   427  0215                     	;# 
   428  0215                     	;# 
   429  0215                     	;# 
   430  0216                     	;# 
   431  0216                     	;# 
   432  0217                     	;# 
   433  0217                     	;# 
   434  0391                     	;# 
   435  0392                     	;# 
   436  0393                     	;# 
   437  039A                     	;# 
   438  039B                     	;# 
   439  0611                     	;# 
   440  0612                     	;# 
   441  0613                     	;# 
   442  0613                     	;# 
   443  0614                     	;# 
   444  0615                     	;# 
   445  0616                     	;# 
   446  0616                     	;# 
   447  0691                     	;# 
   448  0692                     	;# 
   449  0693                     	;# 
   450  0694                     	;# 
   451  0695                     	;# 
   452  0E8E                     	;# 
   453  0E8F                     	;# 
   454  0E90                     	;# 
   455  0E91                     	;# 
   456  0E92                     	;# 
   457  0E93                     	;# 
   458  0E94                     	;# 
   459  0E94                     	;# 
   460  0E95                     	;# 
   461  0E96                     	;# 
   462  0E97                     	;# 
   463  0E98                     	;# 
   464  0E99                     	;# 
   465  0E9A                     	;# 
   466  0E9B                     	;# 
   467  0E9C                     	;# 
   468  0E9D                     	;# 
   469  0E9E                     	;# 
   470  0E9F                     	;# 
   471  0FE4                     	;# 
   472  0FE5                     	;# 
   473  0FE6                     	;# 
   474  0FE7                     	;# 
   475  0FE8                     	;# 
   476  0FE9                     	;# 
   477  0FEA                     	;# 
   478  0FEB                     	;# 
   479  0FED                     	;# 
   480  0FEE                     	;# 
   481  0FEF                     	;# 
   482  0000                     	;# 
   483  0001                     	;# 
   484  0002                     	;# 
   485  0003                     	;# 
   486  0004                     	;# 
   487  0005                     	;# 
   488  0006                     	;# 
   489  0007                     	;# 
   490  0008                     	;# 
   491  0009                     	;# 
   492  000A                     	;# 
   493  000B                     	;# 
   494  000C                     	;# 
   495  000E                     	;# 
   496  0011                     	;# 
   497  0012                     	;# 
   498  0015                     	;# 
   499  0016                     	;# 
   500  0016                     	;# 
   501  0017                     	;# 
   502  0018                     	;# 
   503  0019                     	;# 
   504  001A                     	;# 
   505  001B                     	;# 
   506  001C                     	;# 
   507  008C                     	;# 
   508  008E                     	;# 
   509  0091                     	;# 
   510  0092                     	;# 
   511  0095                     	;# 
   512  0096                     	;# 
   513  0097                     	;# 
   514  0098                     	;# 
   515  0099                     	;# 
   516  009A                     	;# 
   517  009B                     	;# 
   518  009B                     	;# 
   519  009C                     	;# 
   520  009D                     	;# 
   521  009E                     	;# 
   522  009F                     	;# 
   523  010C                     	;# 
   524  010E                     	;# 
   525  0111                     	;# 
   526  0112                     	;# 
   527  0113                     	;# 
   528  0114                     	;# 
   529  0115                     	;# 
   530  0116                     	;# 
   531  0117                     	;# 
   532  0118                     	;# 
   533  0119                     	;# 
   534  011D                     	;# 
   535  018C                     	;# 
   536  018E                     	;# 
   537  0191                     	;# 
   538  0191                     	;# 
   539  0192                     	;# 
   540  0193                     	;# 
   541  0193                     	;# 
   542  0194                     	;# 
   543  0195                     	;# 
   544  0196                     	;# 
   545  0197                     	;# 
   546  0199                     	;# 
   547  019A                     	;# 
   548  019B                     	;# 
   549  019B                     	;# 
   550  019C                     	;# 
   551  019D                     	;# 
   552  019E                     	;# 
   553  019F                     	;# 
   554  020C                     	;# 
   555  0211                     	;# 
   556  0211                     	;# 
   557  0212                     	;# 
   558  0212                     	;# 
   559  0213                     	;# 
   560  0213                     	;# 
   561  0214                     	;# 
   562  0214                     	;# 
   563  0215                     	;# 
   564  0215                     	;# 
   565  0215                     	;# 
   566  0216                     	;# 
   567  0216                     	;# 
   568  0217                     	;# 
   569  0217                     	;# 
   570  0391                     	;# 
   571  0392                     	;# 
   572  0393                     	;# 
   573  039A                     	;# 
   574  039B                     	;# 
   575  0611                     	;# 
   576  0612                     	;# 
   577  0613                     	;# 
   578  0613                     	;# 
   579  0614                     	;# 
   580  0615                     	;# 
   581  0616                     	;# 
   582  0616                     	;# 
   583  0691                     	;# 
   584  0692                     	;# 
   585  0693                     	;# 
   586  0694                     	;# 
   587  0695                     	;# 
   588  0E8E                     	;# 
   589  0E8F                     	;# 
   590  0E90                     	;# 
   591  0E91                     	;# 
   592  0E92                     	;# 
   593  0E93                     	;# 
   594  0E94                     	;# 
   595  0E94                     	;# 
   596  0E95                     	;# 
   597  0E96                     	;# 
   598  0E97                     	;# 
   599  0E98                     	;# 
   600  0E99                     	;# 
   601  0E9A                     	;# 
   602  0E9B                     	;# 
   603  0E9C                     	;# 
   604  0E9D                     	;# 
   605  0E9E                     	;# 
   606  0E9F                     	;# 
   607  0FE4                     	;# 
   608  0FE5                     	;# 
   609  0FE6                     	;# 
   610  0FE7                     	;# 
   611  0FE8                     	;# 
   612  0FE9                     	;# 
   613  0FEA                     	;# 
   614  0FEB                     	;# 
   615  0FED                     	;# 
   616  0FEE                     	;# 
   617  0FEF                     	;# 
   618  0000                     	;# 
   619  0001                     	;# 
   620  0002                     	;# 
   621  0003                     	;# 
   622  0004                     	;# 
   623  0005                     	;# 
   624  0006                     	;# 
   625  0007                     	;# 
   626  0008                     	;# 
   627  0009                     	;# 
   628  000A                     	;# 
   629  000B                     	;# 
   630  000C                     	;# 
   631  000E                     	;# 
   632  0011                     	;# 
   633  0012                     	;# 
   634  0015                     	;# 
   635  0016                     	;# 
   636  0016                     	;# 
   637  0017                     	;# 
   638  0018                     	;# 
   639  0019                     	;# 
   640  001A                     	;# 
   641  001B                     	;# 
   642  001C                     	;# 
   643  008C                     	;# 
   644  008E                     	;# 
   645  0091                     	;# 
   646  0092                     	;# 
   647  0095                     	;# 
   648  0096                     	;# 
   649  0097                     	;# 
   650  0098                     	;# 
   651  0099                     	;# 
   652  009A                     	;# 
   653  009B                     	;# 
   654  009B                     	;# 
   655  009C                     	;# 
   656  009D                     	;# 
   657  009E                     	;# 
   658  009F                     	;# 
   659  010C                     	;# 
   660  010E                     	;# 
   661  0111                     	;# 
   662  0112                     	;# 
   663  0113                     	;# 
   664  0114                     	;# 
   665  0115                     	;# 
   666  0116                     	;# 
   667  0117                     	;# 
   668  0118                     	;# 
   669  0119                     	;# 
   670  011D                     	;# 
   671  018C                     	;# 
   672  018E                     	;# 
   673  0191                     	;# 
   674  0191                     	;# 
   675  0192                     	;# 
   676  0193                     	;# 
   677  0193                     	;# 
   678  0194                     	;# 
   679  0195                     	;# 
   680  0196                     	;# 
   681  0197                     	;# 
   682  0199                     	;# 
   683  019A                     	;# 
   684  019B                     	;# 
   685  019B                     	;# 
   686  019C                     	;# 
   687  019D                     	;# 
   688  019E                     	;# 
   689  019F                     	;# 
   690  020C                     	;# 
   691  0211                     	;# 
   692  0211                     	;# 
   693  0212                     	;# 
   694  0212                     	;# 
   695  0213                     	;# 
   696  0213                     	;# 
   697  0214                     	;# 
   698  0214                     	;# 
   699  0215                     	;# 
   700  0215                     	;# 
   701  0215                     	;# 
   702  0216                     	;# 
   703  0216                     	;# 
   704  0217                     	;# 
   705  0217                     	;# 
   706  0391                     	;# 
   707  0392                     	;# 
   708  0393                     	;# 
   709  039A                     	;# 
   710  039B                     	;# 
   711  0611                     	;# 
   712  0612                     	;# 
   713  0613                     	;# 
   714  0613                     	;# 
   715  0614                     	;# 
   716  0615                     	;# 
   717  0616                     	;# 
   718  0616                     	;# 
   719  0691                     	;# 
   720  0692                     	;# 
   721  0693                     	;# 
   722  0694                     	;# 
   723  0695                     	;# 
   724  0E8E                     	;# 
   725  0E8F                     	;# 
   726  0E90                     	;# 
   727  0E91                     	;# 
   728  0E92                     	;# 
   729  0E93                     	;# 
   730  0E94                     	;# 
   731  0E94                     	;# 
   732  0E95                     	;# 
   733  0E96                     	;# 
   734  0E97                     	;# 
   735  0E98                     	;# 
   736  0E99                     	;# 
   737  0E9A                     	;# 
   738  0E9B                     	;# 
   739  0E9C                     	;# 
   740  0E9D                     	;# 
   741  0E9E                     	;# 
   742  0E9F                     	;# 
   743  0FE4                     	;# 
   744  0FE5                     	;# 
   745  0FE6                     	;# 
   746  0FE7                     	;# 
   747  0FE8                     	;# 
   748  0FE9                     	;# 
   749  0FEA                     	;# 
   750  0FEB                     	;# 
   751  0FED                     	;# 
   752  0FEE                     	;# 
   753  0FEF                     	;# 
   754  0000                     	;# 
   755  0001                     	;# 
   756  0002                     	;# 
   757  0003                     	;# 
   758  0004                     	;# 
   759  0005                     	;# 
   760  0006                     	;# 
   761  0007                     	;# 
   762  0008                     	;# 
   763  0009                     	;# 
   764  000A                     	;# 
   765  000B                     	;# 
   766  000C                     	;# 
   767  000E                     	;# 
   768  0011                     	;# 
   769  0012                     	;# 
   770  0015                     	;# 
   771  0016                     	;# 
   772  0016                     	;# 
   773  0017                     	;# 
   774  0018                     	;# 
   775  0019                     	;# 
   776  001A                     	;# 
   777  001B                     	;# 
   778  001C                     	;# 
   779  008C                     	;# 
   780  008E                     	;# 
   781  0091                     	;# 
   782  0092                     	;# 
   783  0095                     	;# 
   784  0096                     	;# 
   785  0097                     	;# 
   786  0098                     	;# 
   787  0099                     	;# 
   788  009A                     	;# 
   789  009B                     	;# 
   790  009B                     	;# 
   791  009C                     	;# 
   792  009D                     	;# 
   793  009E                     	;# 
   794  009F                     	;# 
   795  010C                     	;# 
   796  010E                     	;# 
   797  0111                     	;# 
   798  0112                     	;# 
   799  0113                     	;# 
   800  0114                     	;# 
   801  0115                     	;# 
   802  0116                     	;# 
   803  0117                     	;# 
   804  0118                     	;# 
   805  0119                     	;# 
   806  011D                     	;# 
   807  018C                     	;# 
   808  018E                     	;# 
   809  0191                     	;# 
   810  0191                     	;# 
   811  0192                     	;# 
   812  0193                     	;# 
   813  0193                     	;# 
   814  0194                     	;# 
   815  0195                     	;# 
   816  0196                     	;# 
   817  0197                     	;# 
   818  0199                     	;# 
   819  019A                     	;# 
   820  019B                     	;# 
   821  019B                     	;# 
   822  019C                     	;# 
   823  019D                     	;# 
   824  019E                     	;# 
   825  019F                     	;# 
   826  020C                     	;# 
   827  0211                     	;# 
   828  0211                     	;# 
   829  0212                     	;# 
   830  0212                     	;# 
   831  0213                     	;# 
   832  0213                     	;# 
   833  0214                     	;# 
   834  0214                     	;# 
   835  0215                     	;# 
   836  0215                     	;# 
   837  0215                     	;# 
   838  0216                     	;# 
   839  0216                     	;# 
   840  0217                     	;# 
   841  0217                     	;# 
   842  0391                     	;# 
   843  0392                     	;# 
   844  0393                     	;# 
   845  039A                     	;# 
   846  039B                     	;# 
   847  0611                     	;# 
   848  0612                     	;# 
   849  0613                     	;# 
   850  0613                     	;# 
   851  0614                     	;# 
   852  0615                     	;# 
   853  0616                     	;# 
   854  0616                     	;# 
   855  0691                     	;# 
   856  0692                     	;# 
   857  0693                     	;# 
   858  0694                     	;# 
   859  0695                     	;# 
   860  0E8E                     	;# 
   861  0E8F                     	;# 
   862  0E90                     	;# 
   863  0E91                     	;# 
   864  0E92                     	;# 
   865  0E93                     	;# 
   866  0E94                     	;# 
   867  0E94                     	;# 
   868  0E95                     	;# 
   869  0E96                     	;# 
   870  0E97                     	;# 
   871  0E98                     	;# 
   872  0E99                     	;# 
   873  0E9A                     	;# 
   874  0E9B                     	;# 
   875  0E9C                     	;# 
   876  0E9D                     	;# 
   877  0E9E                     	;# 
   878  0E9F                     	;# 
   879  0FE4                     	;# 
   880  0FE5                     	;# 
   881  0FE6                     	;# 
   882  0FE7                     	;# 
   883  0FE8                     	;# 
   884  0FE9                     	;# 
   885  0FEA                     	;# 
   886  0FEB                     	;# 
   887  0FED                     	;# 
   888  0FEE                     	;# 
   889  0FEF                     	;# 
   890  0000                     	;# 
   891  0001                     	;# 
   892  0002                     	;# 
   893  0003                     	;# 
   894  0004                     	;# 
   895  0005                     	;# 
   896  0006                     	;# 
   897  0007                     	;# 
   898  0008                     	;# 
   899  0009                     	;# 
   900  000A                     	;# 
   901  000B                     	;# 
   902  000C                     	;# 
   903  000E                     	;# 
   904  0011                     	;# 
   905  0012                     	;# 
   906  0015                     	;# 
   907  0016                     	;# 
   908  0016                     	;# 
   909  0017                     	;# 
   910  0018                     	;# 
   911  0019                     	;# 
   912  001A                     	;# 
   913  001B                     	;# 
   914  001C                     	;# 
   915  008C                     	;# 
   916  008E                     	;# 
   917  0091                     	;# 
   918  0092                     	;# 
   919  0095                     	;# 
   920  0096                     	;# 
   921  0097                     	;# 
   922  0098                     	;# 
   923  0099                     	;# 
   924  009A                     	;# 
   925  009B                     	;# 
   926  009B                     	;# 
   927  009C                     	;# 
   928  009D                     	;# 
   929  009E                     	;# 
   930  009F                     	;# 
   931  010C                     	;# 
   932  010E                     	;# 
   933  0111                     	;# 
   934  0112                     	;# 
   935  0113                     	;# 
   936  0114                     	;# 
   937  0115                     	;# 
   938  0116                     	;# 
   939  0117                     	;# 
   940  0118                     	;# 
   941  0119                     	;# 
   942  011D                     	;# 
   943  018C                     	;# 
   944  018E                     	;# 
   945  0191                     	;# 
   946  0191                     	;# 
   947  0192                     	;# 
   948  0193                     	;# 
   949  0193                     	;# 
   950  0194                     	;# 
   951  0195                     	;# 
   952  0196                     	;# 
   953  0197                     	;# 
   954  0199                     	;# 
   955  019A                     	;# 
   956  019B                     	;# 
   957  019B                     	;# 
   958  019C                     	;# 
   959  019D                     	;# 
   960  019E                     	;# 
   961  019F                     	;# 
   962  020C                     	;# 
   963  0211                     	;# 
   964  0211                     	;# 
   965  0212                     	;# 
   966  0212                     	;# 
   967  0213                     	;# 
   968  0213                     	;# 
   969  0214                     	;# 
   970  0214                     	;# 
   971  0215                     	;# 
   972  0215                     	;# 
   973  0215                     	;# 
   974  0216                     	;# 
   975  0216                     	;# 
   976  0217                     	;# 
   977  0217                     	;# 
   978  0391                     	;# 
   979  0392                     	;# 
   980  0393                     	;# 
   981  039A                     	;# 
   982  039B                     	;# 
   983  0611                     	;# 
   984  0612                     	;# 
   985  0613                     	;# 
   986  0613                     	;# 
   987  0614                     	;# 
   988  0615                     	;# 
   989  0616                     	;# 
   990  0616                     	;# 
   991  0691                     	;# 
   992  0692                     	;# 
   993  0693                     	;# 
   994  0694                     	;# 
   995  0695                     	;# 
   996  0E8E                     	;# 
   997  0E8F                     	;# 
   998  0E90                     	;# 
   999  0E91                     	;# 
  1000  0E92                     	;# 
  1001  0E93                     	;# 
  1002  0E94                     	;# 
  1003  0E94                     	;# 
  1004  0E95                     	;# 
  1005  0E96                     	;# 
  1006  0E97                     	;# 
  1007  0E98                     	;# 
  1008  0E99                     	;# 
  1009  0E9A                     	;# 
  1010  0E9B                     	;# 
  1011  0E9C                     	;# 
  1012  0E9D                     	;# 
  1013  0E9E                     	;# 
  1014  0E9F                     	;# 
  1015  0FE4                     	;# 
  1016  0FE5                     	;# 
  1017  0FE6                     	;# 
  1018  0FE7                     	;# 
  1019  0FE8                     	;# 
  1020  0FE9                     	;# 
  1021  0FEA                     	;# 
  1022  0FEB                     	;# 
  1023  0FED                     	;# 
  1024  0FEE                     	;# 
  1025  0FEF                     	;# 
  1026  0000                     	;# 
  1027  0001                     	;# 
  1028  0002                     	;# 
  1029  0003                     	;# 
  1030  0004                     	;# 
  1031  0005                     	;# 
  1032  0006                     	;# 
  1033  0007                     	;# 
  1034  0008                     	;# 
  1035  0009                     	;# 
  1036  000A                     	;# 
  1037  000B                     	;# 
  1038  000C                     	;# 
  1039  000E                     	;# 
  1040  0011                     	;# 
  1041  0012                     	;# 
  1042  0015                     	;# 
  1043  0016                     	;# 
  1044  0016                     	;# 
  1045  0017                     	;# 
  1046  0018                     	;# 
  1047  0019                     	;# 
  1048  001A                     	;# 
  1049  001B                     	;# 
  1050  001C                     	;# 
  1051  008C                     	;# 
  1052  008E                     	;# 
  1053  0091                     	;# 
  1054  0092                     	;# 
  1055  0095                     	;# 
  1056  0096                     	;# 
  1057  0097                     	;# 
  1058  0098                     	;# 
  1059  0099                     	;# 
  1060  009A                     	;# 
  1061  009B                     	;# 
  1062  009B                     	;# 
  1063  009C                     	;# 
  1064  009D                     	;# 
  1065  009E                     	;# 
  1066  009F                     	;# 
  1067  010C                     	;# 
  1068  010E                     	;# 
  1069  0111                     	;# 
  1070  0112                     	;# 
  1071  0113                     	;# 
  1072  0114                     	;# 
  1073  0115                     	;# 
  1074  0116                     	;# 
  1075  0117                     	;# 
  1076  0118                     	;# 
  1077  0119                     	;# 
  1078  011D                     	;# 
  1079  018C                     	;# 
  1080  018E                     	;# 
  1081  0191                     	;# 
  1082  0191                     	;# 
  1083  0192                     	;# 
  1084  0193                     	;# 
  1085  0193                     	;# 
  1086  0194                     	;# 
  1087  0195                     	;# 
  1088  0196                     	;# 
  1089  0197                     	;# 
  1090  0199                     	;# 
  1091  019A                     	;# 
  1092  019B                     	;# 
  1093  019B                     	;# 
  1094  019C                     	;# 
  1095  019D                     	;# 
  1096  019E                     	;# 
  1097  019F                     	;# 
  1098  020C                     	;# 
  1099  0211                     	;# 
  1100  0211                     	;# 
  1101  0212                     	;# 
  1102  0212                     	;# 
  1103  0213                     	;# 
  1104  0213                     	;# 
  1105  0214                     	;# 
  1106  0214                     	;# 
  1107  0215                     	;# 
  1108  0215                     	;# 
  1109  0215                     	;# 
  1110  0216                     	;# 
  1111  0216                     	;# 
  1112  0217                     	;# 
  1113  0217                     	;# 
  1114  0391                     	;# 
  1115  0392                     	;# 
  1116  0393                     	;# 
  1117  039A                     	;# 
  1118  039B                     	;# 
  1119  0611                     	;# 
  1120  0612                     	;# 
  1121  0613                     	;# 
  1122  0613                     	;# 
  1123  0614                     	;# 
  1124  0615                     	;# 
  1125  0616                     	;# 
  1126  0616                     	;# 
  1127  0691                     	;# 
  1128  0692                     	;# 
  1129  0693                     	;# 
  1130  0694                     	;# 
  1131  0695                     	;# 
  1132  0E8E                     	;# 
  1133  0E8F                     	;# 
  1134  0E90                     	;# 
  1135  0E91                     	;# 
  1136  0E92                     	;# 
  1137  0E93                     	;# 
  1138  0E94                     	;# 
  1139  0E94                     	;# 
  1140  0E95                     	;# 
  1141  0E96                     	;# 
  1142  0E97                     	;# 
  1143  0E98                     	;# 
  1144  0E99                     	;# 
  1145  0E9A                     	;# 
  1146  0E9B                     	;# 
  1147  0E9C                     	;# 
  1148  0E9D                     	;# 
  1149  0E9E                     	;# 
  1150  0E9F                     	;# 
  1151  0FE4                     	;# 
  1152  0FE5                     	;# 
  1153  0FE6                     	;# 
  1154  0FE7                     	;# 
  1155  0FE8                     	;# 
  1156  0FE9                     	;# 
  1157  0FEA                     	;# 
  1158  0FEB                     	;# 
  1159  0FED                     	;# 
  1160  0FEE                     	;# 
  1161  0FEF                     	;# 
  1162  0000                     	;# 
  1163  0001                     	;# 
  1164  0002                     	;# 
  1165  0003                     	;# 
  1166  0004                     	;# 
  1167  0005                     	;# 
  1168  0006                     	;# 
  1169  0007                     	;# 
  1170  0008                     	;# 
  1171  0009                     	;# 
  1172  000A                     	;# 
  1173  000B                     	;# 
  1174  000C                     	;# 
  1175  000E                     	;# 
  1176  0011                     	;# 
  1177  0012                     	;# 
  1178  0015                     	;# 
  1179  0016                     	;# 
  1180  0016                     	;# 
  1181  0017                     	;# 
  1182  0018                     	;# 
  1183  0019                     	;# 
  1184  001A                     	;# 
  1185  001B                     	;# 
  1186  001C                     	;# 
  1187  008C                     	;# 
  1188  008E                     	;# 
  1189  0091                     	;# 
  1190  0092                     	;# 
  1191  0095                     	;# 
  1192  0096                     	;# 
  1193  0097                     	;# 
  1194  0098                     	;# 
  1195  0099                     	;# 
  1196  009A                     	;# 
  1197  009B                     	;# 
  1198  009B                     	;# 
  1199  009C                     	;# 
  1200  009D                     	;# 
  1201  009E                     	;# 
  1202  009F                     	;# 
  1203  010C                     	;# 
  1204  010E                     	;# 
  1205  0111                     	;# 
  1206  0112                     	;# 
  1207  0113                     	;# 
  1208  0114                     	;# 
  1209  0115                     	;# 
  1210  0116                     	;# 
  1211  0117                     	;# 
  1212  0118                     	;# 
  1213  0119                     	;# 
  1214  011D                     	;# 
  1215  018C                     	;# 
  1216  018E                     	;# 
  1217  0191                     	;# 
  1218  0191                     	;# 
  1219  0192                     	;# 
  1220  0193                     	;# 
  1221  0193                     	;# 
  1222  0194                     	;# 
  1223  0195                     	;# 
  1224  0196                     	;# 
  1225  0197                     	;# 
  1226  0199                     	;# 
  1227  019A                     	;# 
  1228  019B                     	;# 
  1229  019B                     	;# 
  1230  019C                     	;# 
  1231  019D                     	;# 
  1232  019E                     	;# 
  1233  019F                     	;# 
  1234  020C                     	;# 
  1235  0211                     	;# 
  1236  0211                     	;# 
  1237  0212                     	;# 
  1238  0212                     	;# 
  1239  0213                     	;# 
  1240  0213                     	;# 
  1241  0214                     	;# 
  1242  0214                     	;# 
  1243  0215                     	;# 
  1244  0215                     	;# 
  1245  0215                     	;# 
  1246  0216                     	;# 
  1247  0216                     	;# 
  1248  0217                     	;# 
  1249  0217                     	;# 
  1250  0391                     	;# 
  1251  0392                     	;# 
  1252  0393                     	;# 
  1253  039A                     	;# 
  1254  039B                     	;# 
  1255  0611                     	;# 
  1256  0612                     	;# 
  1257  0613                     	;# 
  1258  0613                     	;# 
  1259  0614                     	;# 
  1260  0615                     	;# 
  1261  0616                     	;# 
  1262  0616                     	;# 
  1263  0691                     	;# 
  1264  0692                     	;# 
  1265  0693                     	;# 
  1266  0694                     	;# 
  1267  0695                     	;# 
  1268  0E8E                     	;# 
  1269  0E8F                     	;# 
  1270  0E90                     	;# 
  1271  0E91                     	;# 
  1272  0E92                     	;# 
  1273  0E93                     	;# 
  1274  0E94                     	;# 
  1275  0E94                     	;# 
  1276  0E95                     	;# 
  1277  0E96                     	;# 
  1278  0E97                     	;# 
  1279  0E98                     	;# 
  1280  0E99                     	;# 
  1281  0E9A                     	;# 
  1282  0E9B                     	;# 
  1283  0E9C                     	;# 
  1284  0E9D                     	;# 
  1285  0E9E                     	;# 
  1286  0E9F                     	;# 
  1287  0FE4                     	;# 
  1288  0FE5                     	;# 
  1289  0FE6                     	;# 
  1290  0FE7                     	;# 
  1291  0FE8                     	;# 
  1292  0FE9                     	;# 
  1293  0FEA                     	;# 
  1294  0FEB                     	;# 
  1295  0FED                     	;# 
  1296  0FEE                     	;# 
  1297  0FEF                     	;# 
  1298  0000                     	;# 
  1299  0001                     	;# 
  1300  0002                     	;# 
  1301  0003                     	;# 
  1302  0004                     	;# 
  1303  0005                     	;# 
  1304  0006                     	;# 
  1305  0007                     	;# 
  1306  0008                     	;# 
  1307  0009                     	;# 
  1308  000A                     	;# 
  1309  000B                     	;# 
  1310  000C                     	;# 
  1311  000E                     	;# 
  1312  0011                     	;# 
  1313  0012                     	;# 
  1314  0015                     	;# 
  1315  0016                     	;# 
  1316  0016                     	;# 
  1317  0017                     	;# 
  1318  0018                     	;# 
  1319  0019                     	;# 
  1320  001A                     	;# 
  1321  001B                     	;# 
  1322  001C                     	;# 
  1323  008C                     	;# 
  1324  008E                     	;# 
  1325  0091                     	;# 
  1326  0092                     	;# 
  1327  0095                     	;# 
  1328  0096                     	;# 
  1329  0097                     	;# 
  1330  0098                     	;# 
  1331  0099                     	;# 
  1332  009A                     	;# 
  1333  009B                     	;# 
  1334  009B                     	;# 
  1335  009C                     	;# 
  1336  009D                     	;# 
  1337  009E                     	;# 
  1338  009F                     	;# 
  1339  010C                     	;# 
  1340  010E                     	;# 
  1341  0111                     	;# 
  1342  0112                     	;# 
  1343  0113                     	;# 
  1344  0114                     	;# 
  1345  0115                     	;# 
  1346  0116                     	;# 
  1347  0117                     	;# 
  1348  0118                     	;# 
  1349  0119                     	;# 
  1350  011D                     	;# 
  1351  018C                     	;# 
  1352  018E                     	;# 
  1353  0191                     	;# 
  1354  0191                     	;# 
  1355  0192                     	;# 
  1356  0193                     	;# 
  1357  0193                     	;# 
  1358  0194                     	;# 
  1359  0195                     	;# 
  1360  0196                     	;# 
  1361  0197                     	;# 
  1362  0199                     	;# 
  1363  019A                     	;# 
  1364  019B                     	;# 
  1365  019B                     	;# 
  1366  019C                     	;# 
  1367  019D                     	;# 
  1368  019E                     	;# 
  1369  019F                     	;# 
  1370  020C                     	;# 
  1371  0211                     	;# 
  1372  0211                     	;# 
  1373  0212                     	;# 
  1374  0212                     	;# 
  1375  0213                     	;# 
  1376  0213                     	;# 
  1377  0214                     	;# 
  1378  0214                     	;# 
  1379  0215                     	;# 
  1380  0215                     	;# 
  1381  0215                     	;# 
  1382  0216                     	;# 
  1383  0216                     	;# 
  1384  0217                     	;# 
  1385  0217                     	;# 
  1386  0391                     	;# 
  1387  0392                     	;# 
  1388  0393                     	;# 
  1389  039A                     	;# 
  1390  039B                     	;# 
  1391  0611                     	;# 
  1392  0612                     	;# 
  1393  0613                     	;# 
  1394  0613                     	;# 
  1395  0614                     	;# 
  1396  0615                     	;# 
  1397  0616                     	;# 
  1398  0616                     	;# 
  1399  0691                     	;# 
  1400  0692                     	;# 
  1401  0693                     	;# 
  1402  0694                     	;# 
  1403  0695                     	;# 
  1404  0E8E                     	;# 
  1405  0E8F                     	;# 
  1406  0E90                     	;# 
  1407  0E91                     	;# 
  1408  0E92                     	;# 
  1409  0E93                     	;# 
  1410  0E94                     	;# 
  1411  0E94                     	;# 
  1412  0E95                     	;# 
  1413  0E96                     	;# 
  1414  0E97                     	;# 
  1415  0E98                     	;# 
  1416  0E99                     	;# 
  1417  0E9A                     	;# 
  1418  0E9B                     	;# 
  1419  0E9C                     	;# 
  1420  0E9D                     	;# 
  1421  0E9E                     	;# 
  1422  0E9F                     	;# 
  1423  0FE4                     	;# 
  1424  0FE5                     	;# 
  1425  0FE6                     	;# 
  1426  0FE7                     	;# 
  1427  0FE8                     	;# 
  1428  0FE9                     	;# 
  1429  0FEA                     	;# 
  1430  0FEB                     	;# 
  1431  0FED                     	;# 
  1432  0FEE                     	;# 
  1433  0FEF                     	;# 
  1434                           
  1435                           	psect	stringtext
  1436  0300                     __pstringtext:	
  1437  0300                     process_level@idx_midi_map:	
  1438  0300  3415               	retlw	21
  1439  0301  3416               	retlw	22
  1440  0302  3417               	retlw	23
  1441  0303  3418               	retlw	24
  1442  0304  3411               	retlw	17
  1443  0305  3412               	retlw	18
  1444  0306  3413               	retlw	19
  1445  0307  3414               	retlw	20
  1446  0308  340D               	retlw	13
  1447  0309  340E               	retlw	14
  1448  030A  340F               	retlw	15
  1449  030B  3410               	retlw	16
  1450  030C  3409               	retlw	9
  1451  030D  340A               	retlw	10
  1452  030E  340B               	retlw	11
  1453  030F  340C               	retlw	12
  1454  0310  3405               	retlw	5
  1455  0311  3406               	retlw	6
  1456  0312  3407               	retlw	7
  1457  0313  3408               	retlw	8
  1458  0314  3401               	retlw	1
  1459  0315  3402               	retlw	2
  1460  0316  3403               	retlw	3
  1461  0317  3404               	retlw	4
  1462  0318  3400               	retlw	0
  1463  0319  3400               	retlw	0
  1464  031A  3400               	retlw	0
  1465  031B  3400               	retlw	0
  1466  031C  3400               	retlw	0
  1467  031D  3400               	retlw	0
  1468  031E  3400               	retlw	0
  1469  031F  3400               	retlw	0
  1470  0320                     __end_ofprocess_level@idx_midi_map:	
  1471  0320                     _USB_SD_Ptr:	
  1472  0320  34F1               	retlw	low (_sd000| (0+32768))
  1473  0321  3483               	retlw	high (_sd000| (0+32768))
  1474  0322  3491               	retlw	low (_sd001| (0+32768))
  1475  0323  3483               	retlw	high (_sd001| (0+32768))
  1476  0324  34C5               	retlw	low (_sd002| (0+32768))
  1477  0325  3483               	retlw	high (_sd002| (0+32768))
  1478  0326                     __end_of_USB_SD_Ptr:	
  1479  0326                     _USB_CD_Ptr:	
  1480  0326  342C               	retlw	low (_configDescriptor1| (0+32768))
  1481  0327  3483               	retlw	high (_configDescriptor1| (0+32768))
  1482  0328                     __end_of_USB_CD_Ptr:	
  1483  0328                     process_level@L:	
  1484  0328  340A               	retlw	10
  1485  0329                     __end_ofprocess_level@L:	
  1486  0329                     process_level@key_off_threshold:	
  1487  0329  3405               	retlw	5
  1488  032A                     __end_ofprocess_level@key_off_threshold:	
  1489  032A                     process_level@key_on_threshold:	
  1490  032A  3407               	retlw	7
  1491  032B                     __end_ofprocess_level@key_on_threshold:	
  1492  032B                     process_level@midi_shift:	
  1493  032B  342F               	retlw	47
  1494  032C                     __end_ofprocess_level@midi_shift:	
  1495  032C                     _configDescriptor1:	
  1496  032C  3409               	retlw	9
  1497  032D  3402               	retlw	2
  1498  032E  3465               	retlw	101
  1499  032F  3400               	retlw	0
  1500  0330  3402               	retlw	2
  1501  0331  3401               	retlw	1
  1502  0332  3400               	retlw	0
  1503  0333  34C0               	retlw	192
  1504  0334  3432               	retlw	50
  1505  0335  3409               	retlw	9
  1506  0336  3404               	retlw	4
  1507  0337  3400               	retlw	0
  1508  0338  3400               	retlw	0
  1509  0339  3400               	retlw	0
  1510  033A  3401               	retlw	1
  1511  033B  3401               	retlw	1
  1512  033C  3400               	retlw	0
  1513  033D  3400               	retlw	0
  1514  033E  3409               	retlw	9
  1515  033F  3424               	retlw	36
  1516  0340  3401               	retlw	1
  1517  0341  3400               	retlw	0
  1518  0342  3401               	retlw	1
  1519  0343  3409               	retlw	9
  1520  0344  3400               	retlw	0
  1521  0345  3401               	retlw	1
  1522  0346  3401               	retlw	1
  1523  0347  3409               	retlw	9
  1524  0348  3404               	retlw	4
  1525  0349  3401               	retlw	1
  1526  034A  3400               	retlw	0
  1527  034B  3402               	retlw	2
  1528  034C  3401               	retlw	1
  1529  034D  3403               	retlw	3
  1530  034E  3400               	retlw	0
  1531  034F  3400               	retlw	0
  1532  0350  3407               	retlw	7
  1533  0351  3424               	retlw	36
  1534  0352  3401               	retlw	1
  1535  0353  3400               	retlw	0
  1536  0354  3401               	retlw	1
  1537  0355  3441               	retlw	65
  1538  0356  3400               	retlw	0
  1539  0357  3406               	retlw	6
  1540  0358  3424               	retlw	36
  1541  0359  3402               	retlw	2
  1542  035A  3401               	retlw	1
  1543  035B  3401               	retlw	1
  1544  035C  3400               	retlw	0
  1545  035D  3406               	retlw	6
  1546  035E  3424               	retlw	36
  1547  035F  3402               	retlw	2
  1548  0360  3402               	retlw	2
  1549  0361  3402               	retlw	2
  1550  0362  3400               	retlw	0
  1551  0363  3409               	retlw	9
  1552  0364  3424               	retlw	36
  1553  0365  3403               	retlw	3
  1554  0366  3401               	retlw	1
  1555  0367  3403               	retlw	3
  1556  0368  3401               	retlw	1
  1557  0369  3402               	retlw	2
  1558  036A  3401               	retlw	1
  1559  036B  3400               	retlw	0
  1560  036C  3409               	retlw	9
  1561  036D  3424               	retlw	36
  1562  036E  3403               	retlw	3
  1563  036F  3402               	retlw	2
  1564  0370  3404               	retlw	4
  1565  0371  3401               	retlw	1
  1566  0372  3401               	retlw	1
  1567  0373  3401               	retlw	1
  1568  0374  3400               	retlw	0
  1569  0375  3409               	retlw	9
  1570  0376  3405               	retlw	5
  1571  0377  3401               	retlw	1
  1572  0378  3402               	retlw	2
  1573  0379  3440               	retlw	64
  1574  037A  3400               	retlw	0
  1575  037B  3400               	retlw	0
  1576  037C  3400               	retlw	0
  1577  037D  3400               	retlw	0
  1578  037E  3405               	retlw	5
  1579  037F  3425               	retlw	37
  1580  0380  3401               	retlw	1
  1581  0381  3401               	retlw	1
  1582  0382  3401               	retlw	1
  1583  0383  3409               	retlw	9
  1584  0384  3405               	retlw	5
  1585  0385  3481               	retlw	129
  1586  0386  3402               	retlw	2
  1587  0387  3440               	retlw	64
  1588  0388  3400               	retlw	0
  1589  0389  3400               	retlw	0
  1590  038A  3400               	retlw	0
  1591  038B  3400               	retlw	0
  1592  038C  3405               	retlw	5
  1593  038D  3425               	retlw	37
  1594  038E  3401               	retlw	1
  1595  038F  3401               	retlw	1
  1596  0390  3403               	retlw	3
  1597  0391                     __end_of_configDescriptor1:	
  1598  0391                     _sd001:	
  1599  0391  3434               	retlw	52
  1600  0392  3403               	retlw	3
  1601  0393  344D               	retlw	77
  1602  0394  3400               	retlw	0
  1603  0395  3469               	retlw	105
  1604  0396  3400               	retlw	0
  1605  0397  3463               	retlw	99
  1606  0398  3400               	retlw	0
  1607  0399  3472               	retlw	114
  1608  039A  3400               	retlw	0
  1609  039B  346F               	retlw	111
  1610  039C  3400               	retlw	0
  1611  039D  3463               	retlw	99
  1612  039E  3400               	retlw	0
  1613  039F  3468               	retlw	104
  1614  03A0  3400               	retlw	0
  1615  03A1  3469               	retlw	105
  1616  03A2  3400               	retlw	0
  1617  03A3  3470               	retlw	112
  1618  03A4  3400               	retlw	0
  1619  03A5  3420               	retlw	32
  1620  03A6  3400               	retlw	0
  1621  03A7  3454               	retlw	84
  1622  03A8  3400               	retlw	0
  1623  03A9  3465               	retlw	101
  1624  03AA  3400               	retlw	0
  1625  03AB  3463               	retlw	99
  1626  03AC  3400               	retlw	0
  1627  03AD  3468               	retlw	104
  1628  03AE  3400               	retlw	0
  1629  03AF  346E               	retlw	110
  1630  03B0  3400               	retlw	0
  1631  03B1  346F               	retlw	111
  1632  03B2  3400               	retlw	0
  1633  03B3  346C               	retlw	108
  1634  03B4  3400               	retlw	0
  1635  03B5  346F               	retlw	111
  1636  03B6  3400               	retlw	0
  1637  03B7  3467               	retlw	103
  1638  03B8  3400               	retlw	0
  1639  03B9  3479               	retlw	121
  1640  03BA  3400               	retlw	0
  1641  03BB  3420               	retlw	32
  1642  03BC  3400               	retlw	0
  1643  03BD  3449               	retlw	73
  1644  03BE  3400               	retlw	0
  1645  03BF  346E               	retlw	110
  1646  03C0  3400               	retlw	0
  1647  03C1  3463               	retlw	99
  1648  03C2  3400               	retlw	0
  1649  03C3  342E               	retlw	46
  1650  03C4  3400               	retlw	0
  1651  03C5                     __end_of_sd001:	
  1652  03C5                     _sd002:	
  1653  03C5  341A               	retlw	26
  1654  03C6  3403               	retlw	3
  1655  03C7  344D               	retlw	77
  1656  03C8  3400               	retlw	0
  1657  03C9  3449               	retlw	73
  1658  03CA  3400               	retlw	0
  1659  03CB  3444               	retlw	68
  1660  03CC  3400               	retlw	0
  1661  03CD  3449               	retlw	73
  1662  03CE  3400               	retlw	0
  1663  03CF  3420               	retlw	32
  1664  03D0  3400               	retlw	0
  1665  03D1  3445               	retlw	69
  1666  03D2  3400               	retlw	0
  1667  03D3  3478               	retlw	120
  1668  03D4  3400               	retlw	0
  1669  03D5  3461               	retlw	97
  1670  03D6  3400               	retlw	0
  1671  03D7  346D               	retlw	109
  1672  03D8  3400               	retlw	0
  1673  03D9  3470               	retlw	112
  1674  03DA  3400               	retlw	0
  1675  03DB  346C               	retlw	108
  1676  03DC  3400               	retlw	0
  1677  03DD  3465               	retlw	101
  1678  03DE  3400               	retlw	0
  1679  03DF                     __end_of_sd002:	
  1680  03DF                     _device_dsc:	
  1681  03DF  3412               	retlw	18
  1682  03E0  3401               	retlw	1
  1683  03E1  3400               	retlw	0
  1684  03E2  3402               	retlw	2
  1685  03E3  3400               	retlw	0
  1686  03E4  3400               	retlw	0
  1687  03E5  3400               	retlw	0
  1688  03E6  3408               	retlw	8
  1689  03E7  34D8               	retlw	216
  1690  03E8  3404               	retlw	4
  1691  03E9  3459               	retlw	89
  1692  03EA  3400               	retlw	0
  1693  03EB  3402               	retlw	2
  1694  03EC  3400               	retlw	0
  1695  03ED  3401               	retlw	1
  1696  03EE  3402               	retlw	2
  1697  03EF  3400               	retlw	0
  1698  03F0  3401               	retlw	1
  1699  03F1                     __end_of_device_dsc:	
  1700  03F1                     _sd000:	
  1701  03F1  3404               	retlw	4
  1702  03F2  3403               	retlw	3
  1703  03F3  3409               	retlw	9
  1704  03F4  3404               	retlw	4
  1705  03F5                     __end_of_sd000:	
  1706  000B                     _INTCONbits	set	11
  1707  0012                     _PIR2bits	set	18
  1708  000C                     _PORTAbits	set	12
  1709  0015                     _TMR0	set	21
  1710  009D                     _ADCON0	set	157
  1711  009D                     _ADCON0bits	set	157
  1712  009E                     _ADCON1	set	158
  1713  009E                     _ADCON1bits	set	158
  1714  009F                     _ADCON2	set	159
  1715  009F                     _ADCON2bits	set	159
  1716  009C                     _ADRESH	set	156
  1717  009B                     _ADRESL	set	155
  1718  0095                     _OPTION_REGbits	set	149
  1719  0099                     _OSCCON	set	153
  1720  0091                     _PIE1bits	set	145
  1721  0092                     _PIE2bits	set	146
  1722  008C                     _TRISAbits	set	140
  1723  008E                     _TRISCbits	set	142
  1724  010E                     _LATCbits	set	270
  1725  018C                     _ANSELA	set	396
  1726  018C                     _ANSELAbits	set	396
  1727  018E                     _ANSELCbits	set	398
  1728  020C                     _WPUAbits	set	524
  1729  039B                     _ACTCON	set	923
  1730  0E96                     _UADDR	set	3734
  1731  0E91                     _UCFG	set	3729
  1732  0E8E                     _UCON	set	3726
  1733  0E8E                     _UCONbits	set	3726
  1734  0E97                     _UEIE	set	3735
  1735  0E93                     _UEIR	set	3731
  1736  0E98                     _UEP0bits	set	3736
  1737  0E92                     _UIE	set	3730
  1738  0E92                     _UIEbits	set	3730
  1739  0E90                     _UIR	set	3728
  1740  0E90                     _UIRbits	set	3728
  1741  0E8F                     _USTAT	set	3727
  1742  0E98                     _UEP0	set	3736
  1743  0E99                     _UEP1	set	3737
  1744                           
  1745                           ; #config settings
  1746  0000                     
  1747                           	psect	cinit
  1748  000D                     start_initialization:	
  1749  000D                     __initialization:	
  1750                           
  1751                           ; Clear objects allocated to COMMON
  1752  000D  01FC               	clrf	__pbssCOMMON& (0+127)
  1753                           
  1754                           ; Clear objects allocated to BANK0
  1755  000E  01EB               	clrf	__pbssBANK0& (0+127)
  1756  000F  01EC               	clrf	(__pbssBANK0+1)& (0+127)
  1757  0010  01ED               	clrf	(__pbssBANK0+2)& (0+127)
  1758  0011  01EE               	clrf	(__pbssBANK0+3)& (0+127)
  1759  0012  01EF               	clrf	(__pbssBANK0+4)& (0+127)
  1760                           
  1761                           ; Clear objects allocated to BANK1
  1762  0013  30E0               	movlw	low __pbssBANK1
  1763  0014  0084               	movwf	4
  1764  0015  3000               	movlw	high __pbssBANK1
  1765  0016  0085               	movwf	5
  1766  0017  3010               	movlw	16
  1767  0018  3189  211C  3180   	fcall	clear_ram0
  1768                           
  1769                           ; Clear objects allocated to BANK2
  1770  001B  3020               	movlw	low __pbssBANK2
  1771  001C  0084               	movwf	4
  1772  001D  3001               	movlw	high __pbssBANK2
  1773  001E  0085               	movwf	5
  1774  001F  303F               	movlw	63
  1775  0020  3189  211C  3180   	fcall	clear_ram0
  1776                           
  1777                           ; Clear objects allocated to BANK3
  1778  0023  30A4               	movlw	low __pbssBANK3
  1779  0024  0084               	movwf	4
  1780  0025  3001               	movlw	high __pbssBANK3
  1781  0026  0085               	movwf	5
  1782  0027  3040               	movlw	64
  1783  0028  3189  211C  3180   	fcall	clear_ram0
  1784                           
  1785                           ; Clear objects allocated to BANK4
  1786  002B  3020               	movlw	low __pbssBANK4
  1787  002C  0084               	movwf	4
  1788  002D  3002               	movlw	high __pbssBANK4
  1789  002E  0085               	movwf	5
  1790  002F  3020               	movlw	32
  1791  0030  3189  211C         	fcall	clear_ram0
  1792  0032                     end_of_initialization:	
  1793                           ;End of C runtime variable initialization code
  1794                           
  1795  0032                     __end_of__initialization:	
  1796  0032  0020               	movlb	0
  1797  0033  3189  2997         	ljmp	_main	;jump to C main() function
  1798                           
  1799                           	psect	bssCOMMON
  1800  007C                     __pbssCOMMON:	
  1801  007C                     _pBDTEntryEP0OutNext:	
  1802  007C                     	ds	1
  1803                           
  1804                           	psect	bssBANK0
  1805  006B                     __pbssBANK0:	
  1806  006B                     _pBDTEntryIn:	
  1807  006B                     	ds	2
  1808  006D                     _USBDeviceState:	
  1809  006D                     	ds	1
  1810  006E                     _pBDTEntryEP0OutCurrent:	
  1811  006E                     	ds	1
  1812  006F                     _USTATcopy:	
  1813  006F                     	ds	1
  1814                           
  1815                           	psect	bssBANK1
  1816  00E0                     __pbssBANK1:	
  1817  00E0                     APP_LEDUpdateUSBStatus@ledCount:	
  1818  00E0                     	ds	2
  1819  00E2                     _USBDeferStatusStagePacket:	
  1820  00E2                     	ds	1
  1821  00E3                     _USBTxHandle:	
  1822  00E3                     	ds	1
  1823  00E4                     _controlTransferState:	
  1824  00E4                     	ds	1
  1825  00E5                     _msCounter:	
  1826  00E5                     	ds	1
  1827  00E6                     _pitch:	
  1828  00E6                     	ds	1
  1829  00E7                     _shortPacketStatus:	
  1830  00E7                     	ds	1
  1831  00E8                     store_key_level@idx_key:	
  1832  00E8                     	ds	1
  1833  00E9                     _inPipes:	
  1834  00E9                     	ds	5
  1835  00EE                     _USBActiveConfiguration:	
  1836  00EE                     	ds	1
  1837  00EF                     _USBAlternateInterface:	
  1838  00EF                     	ds	1
  1839                           
  1840                           	psect	bssBANK2
  1841  0120                     __pbssBANK2:	
  1842  0120                     process_level@key_states:	
  1843  0120                     	ds	32
  1844  0140                     _outPipes:	
  1845  0140                     	ds	7
  1846  0147                     _ep_data_in:	
  1847  0147                     	ds	2
  1848  0149                     _ep_data_out:	
  1849  0149                     	ds	2
  1850  014B                     _note_event:	
  1851  014B                     	ds	2
  1852  014D                     _pBDTEntryOut:	
  1853  014D                     	ds	2
  1854  014F                     _BothEP0OutUOWNsSet:	
  1855  014F                     	ds	1
  1856  0150                     _RemoteWakeup:	
  1857  0150                     	ds	1
  1858  0151                     _USBBusIsSuspended:	
  1859  0151                     	ds	1
  1860  0152                     _USBDeferINDataStagePackets:	
  1861  0152                     	ds	1
  1862  0153                     _USBDeferOUTDataStagePackets:	
  1863  0153                     	ds	1
  1864  0154                     _USBRxHandle:	
  1865  0154                     	ds	1
  1866  0155                     _USBStatusStageEnabledFlag1:	
  1867  0155                     	ds	1
  1868  0156                     _USBStatusStageEnabledFlag2:	
  1869  0156                     	ds	1
  1870  0157                     _USBStatusStageTimeoutCounter:	
  1871  0157                     	ds	1
  1872  0158                     _endpoint_number:	
  1873  0158                     	ds	1
  1874  0159                     _is_initialized:	
  1875  0159                     	ds	1
  1876  015A                     _pDst:	
  1877  015A                     	ds	1
  1878  015B                     _sentNoteOff:	
  1879  015B                     	ds	1
  1880  015C                     _wait_timer:	
  1881  015C                     	ds	1
  1882  015D                     is_end_of_scan@scan_counter:	
  1883  015D                     	ds	1
  1884  015E                     scan_task@state:	
  1885  015E                     	ds	1
  1886                           
  1887                           	psect	bssBANK3
  1888  01A4                     __pbssBANK3:	
  1889  01A4                     process_level@key_off_counter:	
  1890  01A4                     	ds	32
  1891  01C4                     process_level@key_on_counter:	
  1892  01C4                     	ds	32
  1893                           
  1894                           	psect	bssBANK4
  1895  0220                     __pbssBANK4:	
  1896  0220                     _adc_levels:	
  1897  0220                     	ds	32
  1898                           
  1899                           	psect	clrtext
  1900  091C                     clear_ram0:	
  1901                           ;	Called with FSR0 containing the base address, and
  1902                           ;	WREG with the size to clear
  1903                           
  1904  091C  0064               	clrwdt	;clear the watchdog before getting into this loop
  1905  091D                     clrloop0:	
  1906  091D  0180               	clrf	0	;clear RAM location pointed to by FSR
  1907  091E  3101               	addfsr 0,1
  1908  091F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1909  0920  291D               	goto	clrloop0	;have we reached the end yet?
  1910  0921  3400               	retlw	0	;all done for this memory range, return
  1911                           
  1912                           	psect	cstackCOMMON
  1913  0070                     __pcstackCOMMON:	
  1914  0070                     ?_LED_Enable:	
  1915  0070                     ?_BUTTON_Enable:	
  1916                           ; 0 bytes @ 0x0
  1917                           
  1918  0070                     ?_LED_Off:	
  1919                           ; 0 bytes @ 0x0
  1920                           
  1921  0070                     ?_LED_On:	
  1922                           ; 0 bytes @ 0x0
  1923                           
  1924  0070                     ?_USBDeviceInit:	
  1925                           ; 0 bytes @ 0x0
  1926                           
  1927  0070                     ?_USBDeviceTasks:	
  1928                           ; 0 bytes @ 0x0
  1929                           
  1930  0070                     ?_APP_DeviceAudioMIDITasks:	
  1931                           ; 0 bytes @ 0x0
  1932                           
  1933  0070                     ?_APP_DeviceAudioMIDISOFHandler:	
  1934                           ; 0 bytes @ 0x0
  1935                           
  1936  0070                     ?_APP_DeviceAudioMIDIInitialize:	
  1937                           ; 0 bytes @ 0x0
  1938                           
  1939  0070                     ?_USBWakeFromSuspend:	
  1940                           ; 0 bytes @ 0x0
  1941                           
  1942  0070                     ?_USBSuspend:	
  1943                           ; 0 bytes @ 0x0
  1944                           
  1945  0070                     ?_USBCtrlEPAllowStatusStage:	
  1946                           ; 0 bytes @ 0x0
  1947                           
  1948  0070                     ?_USBStallHandler:	
  1949                           ; 0 bytes @ 0x0
  1950                           
  1951  0070                     ?_USBCtrlEPService:	
  1952                           ; 0 bytes @ 0x0
  1953                           
  1954  0070                     ?_USBCtrlTrfTxService:	
  1955                           ; 0 bytes @ 0x0
  1956                           
  1957  0070                     ?_USBCtrlTrfSetupHandler:	
  1958                           ; 0 bytes @ 0x0
  1959                           
  1960  0070                     ?_USBCtrlTrfOutHandler:	
  1961                           ; 0 bytes @ 0x0
  1962                           
  1963  0070                     ?_USBCtrlTrfInHandler:	
  1964                           ; 0 bytes @ 0x0
  1965                           
  1966  0070                     ?_USBCheckStdRequest:	
  1967                           ; 0 bytes @ 0x0
  1968                           
  1969  0070                     ?_USBStdFeatureReqHandler:	
  1970                           ; 0 bytes @ 0x0
  1971                           
  1972  0070                     ?_SYSTEM_Initialize:	
  1973                           ; 0 bytes @ 0x0
  1974                           
  1975  0070                     ?_SYS_InterruptHigh:	
  1976                           ; 0 bytes @ 0x0
  1977                           
  1978  0070                     ??_SYS_InterruptHigh:	
  1979                           ; 0 bytes @ 0x0
  1980                           
  1981  0070                     ?_APP_LEDUpdateUSBStatus:	
  1982                           ; 0 bytes @ 0x0
  1983                           
  1984  0070                     ?_main:	
  1985                           ; 0 bytes @ 0x0
  1986                           
  1987  0070                     ?_scan_init:	
  1988                           ; 0 bytes @ 0x0
  1989                           
  1990  0070                     ?_set_timer:	
  1991                           ; 0 bytes @ 0x0
  1992                           
  1993  0070                     ?_run_adc:	
  1994                           ; 0 bytes @ 0x0
  1995                           
  1996  0070                     ?_USBCtrlEPAllowDataStage:	
  1997                           ; 0 bytes @ 0x0
  1998                           
  1999  0070                     ?_USBCtrlEPServiceComplete:	
  2000                           ; 0 bytes @ 0x0
  2001                           
  2002  0070                     ?_USBCtrlTrfRxService:	
  2003                           ; 0 bytes @ 0x0
  2004                           
  2005  0070                     ?_USBStdSetCfgHandler:	
  2006                           ; 0 bytes @ 0x0
  2007                           
  2008  0070                     ?_USBStdGetDscHandler:	
  2009                           ; 0 bytes @ 0x0
  2010                           
  2011  0070                     ?_USBStdGetStatusHandler:	
  2012                           ; 0 bytes @ 0x0
  2013                           
  2014  0070                     ?_BUTTON_IsPressed:	
  2015                           ; 0 bytes @ 0x0
  2016                           
  2017  0070                     ?_waiting_for_timer:	
  2018                           ; 1 bytes @ 0x0
  2019                           
  2020  0070                     ?_get_data:	
  2021                           ; 1 bytes @ 0x0
  2022                           
  2023  0070                     ?_is_end_of_scan:	
  2024                           ; 1 bytes @ 0x0
  2025                           
  2026  0070                     ?_is_adc_ready:	
  2027                           ; 1 bytes @ 0x0
  2028                           
  2029  0070                     ?_get_adc:	
  2030                           ; 1 bytes @ 0x0
  2031                           
  2032                           
  2033                           ; 1 bytes @ 0x0
  2034  0070                     	ds	1
  2035  0071                     ??_LED_Enable:	
  2036  0071                     ??_BUTTON_Enable:	
  2037                           ; 0 bytes @ 0x1
  2038                           
  2039  0071                     ??_LED_Off:	
  2040                           ; 0 bytes @ 0x1
  2041                           
  2042  0071                     ??_LED_On:	
  2043                           ; 0 bytes @ 0x1
  2044                           
  2045  0071                     ??_USBDeviceInit:	
  2046                           ; 0 bytes @ 0x1
  2047                           
  2048  0071                     ??_APP_DeviceAudioMIDISOFHandler:	
  2049                           ; 0 bytes @ 0x1
  2050                           
  2051  0071                     ??_BUTTON_IsPressed:	
  2052                           ; 0 bytes @ 0x1
  2053                           
  2054  0071                     ??_USBCtrlEPAllowStatusStage:	
  2055                           ; 0 bytes @ 0x1
  2056                           
  2057  0071                     ??_USBStallHandler:	
  2058                           ; 0 bytes @ 0x1
  2059                           
  2060  0071                     ?_USBConfigureEndpoint:	
  2061                           ; 0 bytes @ 0x1
  2062                           
  2063  0071                     ??_USBCtrlTrfTxService:	
  2064                           ; 0 bytes @ 0x1
  2065                           
  2066  0071                     ??_scan_init:	
  2067                           ; 0 bytes @ 0x1
  2068                           
  2069  0071                     ??_set_timer:	
  2070                           ; 0 bytes @ 0x1
  2071                           
  2072  0071                     ??_waiting_for_timer:	
  2073                           ; 0 bytes @ 0x1
  2074                           
  2075  0071                     ?_set_clock_and_data:	
  2076                           ; 0 bytes @ 0x1
  2077                           
  2078  0071                     ??_get_data:	
  2079                           ; 0 bytes @ 0x1
  2080                           
  2081  0071                     ??_is_end_of_scan:	
  2082                           ; 0 bytes @ 0x1
  2083                           
  2084  0071                     ??_run_adc:	
  2085                           ; 0 bytes @ 0x1
  2086                           
  2087  0071                     ??_is_adc_ready:	
  2088                           ; 0 bytes @ 0x1
  2089                           
  2090  0071                     ??_get_adc:	
  2091                           ; 0 bytes @ 0x1
  2092                           
  2093  0071                     ??_USBStdGetDscHandler:	
  2094                           ; 0 bytes @ 0x1
  2095                           
  2096  0071                     ??_USBStdGetStatusHandler:	
  2097                           ; 0 bytes @ 0x1
  2098                           
  2099  0071                     ?_USBTransferOnePacket:	
  2100                           ; 0 bytes @ 0x1
  2101                           
  2102  0071                     ?_memset:	
  2103                           ; 1 bytes @ 0x1
  2104                           
  2105  0071                     _waiting_for_timer$845:	
  2106                           ; 1 bytes @ 0x1
  2107                           
  2108  0071                     set_clock_and_data@d:	
  2109                           ; 1 bytes @ 0x1
  2110                           
  2111  0071                     BUTTON_IsPressed@button:	
  2112                           ; 1 bytes @ 0x1
  2113                           
  2114  0071                     BUTTON_Enable@button:	
  2115                           ; 1 bytes @ 0x1
  2116                           
  2117  0071                     LED_On@led:	
  2118                           ; 1 bytes @ 0x1
  2119                           
  2120  0071                     LED_Off@led:	
  2121                           ; 1 bytes @ 0x1
  2122                           
  2123  0071                     LED_Enable@led:	
  2124                           ; 1 bytes @ 0x1
  2125                           
  2126  0071                     USBTransferOnePacket@dir:	
  2127                           ; 1 bytes @ 0x1
  2128                           
  2129  0071                     USBConfigureEndpoint@direction:	
  2130                           ; 1 bytes @ 0x1
  2131                           
  2132  0071                     memset@c:	
  2133                           ; 1 bytes @ 0x1
  2134                           
  2135                           
  2136                           ; 2 bytes @ 0x1
  2137  0071                     	ds	1
  2138  0072                     ??_USBConfigureEndpoint:	
  2139  0072                     ??_SYSTEM_Initialize:	
  2140                           ; 0 bytes @ 0x2
  2141                           
  2142  0072                     ??_APP_LEDUpdateUSBStatus:	
  2143                           ; 0 bytes @ 0x2
  2144                           
  2145  0072                     ??_set_clock_and_data:	
  2146                           ; 0 bytes @ 0x2
  2147                           
  2148  0072                     ?_process_level:	
  2149                           ; 0 bytes @ 0x2
  2150                           
  2151  0072                     SYSTEM_Initialize@state:	
  2152                           ; 0 bytes @ 0x2
  2153                           
  2154  0072                     set_clock_and_data@c:	
  2155                           ; 1 bytes @ 0x2
  2156                           
  2157  0072                     process_level@old_level:	
  2158                           ; 1 bytes @ 0x2
  2159                           
  2160  0072                     USBStdGetStatusHandler@p:	
  2161                           ; 1 bytes @ 0x2
  2162                           
  2163  0072                     USBDeviceInit@p:	
  2164                           ; 1 bytes @ 0x2
  2165                           
  2166  0072                     USBTransferOnePacket@data:	
  2167                           ; 2 bytes @ 0x2
  2168                           
  2169                           
  2170                           ; 2 bytes @ 0x2
  2171  0072                     	ds	1
  2172  0073                     ??_USBCtrlTrfRxService:	
  2173  0073                     is_end_of_scan@res:	
  2174                           ; 0 bytes @ 0x3
  2175                           
  2176  0073                     process_level@new_level:	
  2177                           ; 1 bytes @ 0x3
  2178                           
  2179  0073                     USBCtrlTrfTxService@byteToSend:	
  2180                           ; 1 bytes @ 0x3
  2181                           
  2182  0073                     memset@n:	
  2183                           ; 1 bytes @ 0x3
  2184                           
  2185                           
  2186                           ; 2 bytes @ 0x3
  2187  0073                     	ds	1
  2188  0074                     ??_USBCtrlTrfInHandler:	
  2189  0074                     ??_process_level:	
  2190                           ; 0 bytes @ 0x4
  2191                           
  2192  0074                     ??_USBCtrlEPAllowDataStage:	
  2193                           ; 0 bytes @ 0x4
  2194                           
  2195  0074                     USBDeviceInit@i_1659:	
  2196                           ; 0 bytes @ 0x4
  2197                           
  2198  0074                     USBTransferOnePacket@len:	
  2199                           ; 1 bytes @ 0x4
  2200                           
  2201                           
  2202                           ; 1 bytes @ 0x4
  2203  0074                     	ds	1
  2204  0075                     ??_USBTransferOnePacket:	
  2205  0075                     ??_memset:	
  2206                           ; 0 bytes @ 0x5
  2207                           
  2208  0075                     USBDeviceInit@i:	
  2209                           ; 0 bytes @ 0x5
  2210                           
  2211  0075                     USBCtrlTrfRxService@i:	
  2212                           ; 1 bytes @ 0x5
  2213                           
  2214                           
  2215                           ; 1 bytes @ 0x5
  2216  0075                     	ds	1
  2217  0076                     ??_USBCtrlEPServiceComplete:	
  2218  0076                     USBConfigureEndpoint@EPNum:	
  2219                           ; 0 bytes @ 0x6
  2220                           
  2221  0076                     USBCtrlTrfRxService@byteToRead:	
  2222                           ; 1 bytes @ 0x6
  2223                           
  2224  0076                     USBCtrlTrfInHandler@lastDTS:	
  2225                           ; 1 bytes @ 0x6
  2226                           
  2227  0076                     memset@p:	
  2228                           ; 1 bytes @ 0x6
  2229                           
  2230                           
  2231                           ; 1 bytes @ 0x6
  2232  0076                     	ds	1
  2233  0077                     ??_USBCtrlTrfOutHandler:	
  2234  0077                     ?_store_key_level:	
  2235                           ; 0 bytes @ 0x7
  2236                           
  2237  0077                     store_key_level@end_of_scan:	
  2238                           ; 1 bytes @ 0x7
  2239                           
  2240  0077                     USBTransferOnePacket@ep:	
  2241                           ; 1 bytes @ 0x7
  2242                           
  2243  0077                     USBConfigureEndpoint@handle:	
  2244                           ; 1 bytes @ 0x7
  2245                           
  2246  0077                     memset@p1:	
  2247                           ; 1 bytes @ 0x7
  2248                           
  2249                           
  2250                           ; 1 bytes @ 0x7
  2251  0077                     	ds	1
  2252  0078                     ?_USBEnableEndpoint:	
  2253  0078                     ??_store_key_level:	
  2254                           ; 0 bytes @ 0x8
  2255                           
  2256  0078                     USBEnableEndpoint@options:	
  2257                           ; 0 bytes @ 0x8
  2258                           
  2259  0078                     USBTransferOnePacket@handle:	
  2260                           ; 1 bytes @ 0x8
  2261                           
  2262                           
  2263                           ; 1 bytes @ 0x8
  2264  0078                     	ds	1
  2265  0079                     ??_USBEnableEndpoint:	
  2266                           
  2267                           ; 0 bytes @ 0x9
  2268  0079                     	ds	1
  2269  007A                     store_key_level@level:	
  2270                           
  2271                           ; 1 bytes @ 0xA
  2272  007A                     	ds	1
  2273  007B                     ??_scan_task:	
  2274  007B                     ??_USBWakeFromSuspend:	
  2275                           ; 0 bytes @ 0xB
  2276                           
  2277  007B                     ??_USBSuspend:	
  2278                           ; 0 bytes @ 0xB
  2279                           
  2280  007B                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2281                           ; 0 bytes @ 0xB
  2282                           
  2283  007B                     ??_USBStdSetCfgHandler:	
  2284                           ; 0 bytes @ 0xB
  2285                           
  2286                           
  2287                           ; 0 bytes @ 0xB
  2288  007B                     	ds	1
  2289  007C                     ??_main:	
  2290                           
  2291                           	psect	cstackBANK0
  2292  0050                     __pcstackBANK0:	
  2293                           ; 0 bytes @ 0xC
  2294                           
  2295  0050                     process_level@old_state:	
  2296  0050                     USBEnableEndpoint@p:	
  2297                           ; 2 bytes @ 0x0
  2298                           
  2299                           
  2300                           ; 2 bytes @ 0x0
  2301  0050                     	ds	2
  2302  0052                     USBEnableEndpoint@ep:	
  2303  0052                     process_level@current_state:	
  2304                           ; 1 bytes @ 0x2
  2305                           
  2306                           
  2307                           ; 2 bytes @ 0x2
  2308  0052                     	ds	1
  2309  0053                     ??_APP_DeviceAudioMIDIInitialize:	
  2310                           
  2311                           ; 0 bytes @ 0x3
  2312  0053                     	ds	1
  2313  0054                     _process_level$883:	
  2314                           
  2315                           ; 2 bytes @ 0x4
  2316  0054                     	ds	1
  2317  0055                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  2318  0055                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2319                           ; 1 bytes @ 0x5
  2320                           
  2321                           
  2322                           ; 2 bytes @ 0x5
  2323  0055                     	ds	1
  2324  0056                     process_level@off_flag:	
  2325                           
  2326                           ; 1 bytes @ 0x6
  2327  0056                     	ds	1
  2328  0057                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2329  0057                     _process_level$882:	
  2330                           ; 1 bytes @ 0x7
  2331                           
  2332                           
  2333                           ; 1 bytes @ 0x7
  2334  0057                     	ds	1
  2335  0058                     process_level@on_flag:	
  2336  0058                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2337                           ; 1 bytes @ 0x8
  2338                           
  2339                           
  2340                           ; 2 bytes @ 0x8
  2341  0058                     	ds	1
  2342  0059                     process_level@filtered_state:	
  2343                           
  2344                           ; 1 bytes @ 0x9
  2345  0059                     	ds	1
  2346  005A                     ??_USBStdFeatureReqHandler:	
  2347  005A                     process_level@idx_key:	
  2348                           ; 0 bytes @ 0xA
  2349                           
  2350  005A                     USBStdSetCfgHandler@p:	
  2351                           ; 1 bytes @ 0xA
  2352                           
  2353                           
  2354                           ; 2 bytes @ 0xA
  2355  005A                     	ds	1
  2356  005B                     ?_scan_task:	
  2357  005B                     scan_task@velocity:	
  2358                           ; 1 bytes @ 0xB
  2359                           
  2360                           
  2361                           ; 1 bytes @ 0xB
  2362  005B                     	ds	1
  2363  005C                     USBStdSetCfgHandler@i_1990:	
  2364  005C                     _scan_task$901:	
  2365                           ; 1 bytes @ 0xC
  2366                           
  2367  005C                     USBStdFeatureReqHandler@pUEP:	
  2368                           ; 2 bytes @ 0xC
  2369                           
  2370                           
  2371                           ; 2 bytes @ 0xC
  2372  005C                     	ds	1
  2373  005D                     USBStdSetCfgHandler@i:	
  2374                           
  2375                           ; 1 bytes @ 0xD
  2376  005D                     	ds	1
  2377  005E                     USBStdFeatureReqHandler@current_ep_data:	
  2378  005E                     _scan_task$905:	
  2379                           ; 1 bytes @ 0xE
  2380                           
  2381                           
  2382                           ; 2 bytes @ 0xE
  2383  005E                     	ds	1
  2384  005F                     USBStdFeatureReqHandler@p:	
  2385                           
  2386                           ; 1 bytes @ 0xF
  2387  005F                     	ds	1
  2388  0060                     ??_USBCheckStdRequest:	
  2389  0060                     scan_task@note:	
  2390                           ; 0 bytes @ 0x10
  2391                           
  2392                           
  2393                           ; 1 bytes @ 0x10
  2394  0060                     	ds	1
  2395  0061                     ??_APP_DeviceAudioMIDITasks:	
  2396  0061                     ??_USBCtrlTrfSetupHandler:	
  2397                           ; 0 bytes @ 0x11
  2398                           
  2399                           
  2400                           ; 0 bytes @ 0x11
  2401  0061                     	ds	1
  2402  0062                     ??_USBCtrlEPService:	
  2403                           
  2404                           ; 0 bytes @ 0x12
  2405  0062                     	ds	1
  2406  0063                     _APP_DeviceAudioMIDITasks$485:	
  2407                           
  2408                           ; 2 bytes @ 0x13
  2409  0063                     	ds	2
  2410  0065                     USBCtrlEPService@setup_cnt:	
  2411  0065                     _APP_DeviceAudioMIDITasks$526:	
  2412                           ; 1 bytes @ 0x15
  2413                           
  2414                           
  2415                           ; 2 bytes @ 0x15
  2416  0065                     	ds	1
  2417  0066                     ??_USBDeviceTasks:	
  2418                           
  2419                           ; 0 bytes @ 0x16
  2420  0066                     	ds	1
  2421  0067                     _APP_DeviceAudioMIDITasks$527:	
  2422                           
  2423                           ; 2 bytes @ 0x17
  2424  0067                     	ds	1
  2425  0068                     USBDeviceTasks@i:	
  2426                           
  2427                           ; 1 bytes @ 0x18
  2428  0068                     	ds	1
  2429  0069                     APP_DeviceAudioMIDITasks@scan_pitch:	
  2430                           
  2431                           ; 1 bytes @ 0x19
  2432  0069                     	ds	1
  2433  006A                     APP_DeviceAudioMIDITasks@velocity:	
  2434                           
  2435                           ; 1 bytes @ 0x1A
  2436  006A                     	ds	1
  2437                           
  2438                           	psect	maintext
  2439  0997                     __pmaintext:	
  2440 ;;
  2441 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2442 ;;
  2443 ;; *************** function _main *****************
  2444 ;; Defined at:
  2445 ;;		line 34 in file "../src/main.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;		None
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;		None
  2450 ;; Return value:  Size  Location     Type
  2451 ;;		None               void
  2452 ;; Registers used:
  2453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2454 ;; Tracked objects:
  2455 ;;		On entry : B1F/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2463 ;;Total ram usage:        0 bytes
  2464 ;; Hardware stack levels required when called:   10
  2465 ;; This function calls:
  2466 ;;		_APP_DeviceAudioMIDITasks
  2467 ;;		_SYSTEM_Initialize
  2468 ;;		_USBDeviceInit
  2469 ;;		_USBDeviceTasks
  2470 ;; This function is called by:
  2471 ;;		Startup code after reset
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           
  2476                           ;psect for function _main
  2477  0997                     _main:	
  2478                           
  2479                           ;main.c: 36: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  2480                           
  2481                           ;incstack = 0
  2482                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2483  0997  3000               	movlw	0
  2484  0998  318A  2297  3189   	fcall	_SYSTEM_Initialize
  2485                           
  2486                           ;main.c: 38: USBDeviceInit();
  2487  099B  3186  266D  3189   	fcall	_USBDeviceInit
  2488  099E                     l4618:	
  2489                           ;main.c: 39: ;
  2490                           ;main.c: 41: while(1)
  2491                           
  2492                           ;main.c: 75: {
  2493                           ;main.c: 77: continue;
  2494                           
  2495                           ;main.c: 65: {
  2496                           ;main.c: 67: continue;
  2497                           
  2498                           
  2499                           ;main.c: 42: {
  2500                           ;main.c: 43: ;
  2501                           ;main.c: 58: USBDeviceTasks();
  2502  099E  3183  23F5  3189   	fcall	_USBDeviceTasks
  2503                           
  2504                           ;main.c: 64: if( USBDeviceState < CONFIGURED_STATE )
  2505  09A1  3020               	movlw	32
  2506  09A2  0020               	movlb	0	; select bank0
  2507  09A3  026D               	subwf	_USBDeviceState,w
  2508  09A4  1C03               	btfss	3,0
  2509  09A5  299E               	goto	l4618
  2510                           
  2511                           ;main.c: 68: }
  2512                           ;main.c: 74: if( UCONbits.SUSPND == 1 )
  2513  09A6  003D               	movlb	29	; select bank29
  2514  09A7  188E               	btfsc	14,1	;volatile
  2515  09A8  299E               	goto	l4618
  2516                           
  2517                           ;main.c: 78: }
  2518                           ;main.c: 81: APP_DeviceAudioMIDITasks();
  2519  09A9  3180  2035  3189   	fcall	_APP_DeviceAudioMIDITasks
  2520  09AC  299E               	goto	l4618
  2521  09AD                     __end_of_main:	
  2522                           
  2523                           	psect	text1
  2524  03F5                     __ptext1:	
  2525 ;; *************** function _USBDeviceTasks *****************
  2526 ;; Defined at:
  2527 ;;		line 489 in file "../../../../../../framework/usb/src/usb_device.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;		None
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;  i               1   24[BANK0 ] unsigned char 
  2532 ;; Return value:  Size  Location     Type
  2533 ;;		None               void
  2534 ;; Registers used:
  2535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2542 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2543 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2544 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2545 ;;Total ram usage:        3 bytes
  2546 ;; Hardware stack levels used:    1
  2547 ;; Hardware stack levels required when called:    9
  2548 ;; This function calls:
  2549 ;;		_USBCtrlEPAllowStatusStage
  2550 ;;		_USBCtrlEPService
  2551 ;;		_USBDeviceInit
  2552 ;;		_USBStallHandler
  2553 ;;		_USBSuspend
  2554 ;;		_USBWakeFromSuspend
  2555 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  2556 ;; This function is called by:
  2557 ;;		_main
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           
  2562                           ;psect for function _USBDeviceTasks
  2563  03F5                     _USBDeviceTasks:	
  2564                           
  2565                           ;usb_device.c: 556: }
  2566                           ;usb_device.c: 578: if(USBDeviceState == DETACHED_STATE)
  2567                           
  2568                           ;usb_device.c: 555: return;
  2569                           
  2570                           ;usb_device.c: 554: PIR2bits.USBIF = 0;;
  2571                           
  2572                           ;usb_device.c: 526: USBDeviceState = DETACHED_STATE;
  2573                           
  2574                           ;usb_device.c: 523: UIE = 0;
  2575                           
  2576                           ;usb_device.c: 518: {
  2577                           ;usb_device.c: 520: UCON = 0;
  2578                           
  2579                           ;usb_device.c: 491: uint8_t i;
  2580                           ;usb_device.c: 517: if (1 != 1)
  2581                           
  2582                           ;incstack = 0
  2583                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2584  03F5  0020               	movlb	0	; select bank0
  2585  03F6  086D               	movf	_USBDeviceState,w
  2586  03F7  1D03               	btfss	3,2
  2587  03F8  2C09               	goto	l4514
  2588                           
  2589                           ;usb_device.c: 579: {
  2590                           ;usb_device.c: 581: UCON = 0;
  2591  03F9  003D               	movlb	29	; select bank29
  2592  03FA  018E               	clrf	14	;volatile
  2593                           
  2594                           ;usb_device.c: 584: UIE = 0;
  2595  03FB  0192               	clrf	18	;volatile
  2596                           
  2597                           ;usb_device.c: 588: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  2598  03FC  3016               	movlw	22
  2599  03FD  0091               	movwf	17	;volatile
  2600  03FE  309F               	movlw	159
  2601  03FF  0097               	movwf	23	;volatile
  2602  0400  307B               	movlw	123
  2603  0401  0092               	movwf	18	;volatile
  2604  0402                     l561:	
  2605                           ;usb_device.c: 591: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  2606                           
  2607  0402  198E               	btfsc	14,3	;volatile
  2608  0403  2C06               	goto	l563
  2609  0404  158E               	bsf	14,3	;volatile
  2610  0405  2C02               	goto	l561
  2611  0406                     l563:	
  2612                           
  2613                           ;usb_device.c: 594: USBDeviceState = ATTACHED_STATE;
  2614  0406  0020               	movlb	0	; select bank0
  2615  0407  01ED               	clrf	_USBDeviceState
  2616  0408  0AED               	incf	_USBDeviceState,f
  2617  0409                     l4514:	
  2618                           
  2619                           ;usb_device.c: 599: }
  2620                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
  2621  0409  036D               	decf	_USBDeviceState,w
  2622  040A  1D03               	btfss	3,2
  2623  040B  2C18               	goto	l4526
  2624                           
  2625                           ;usb_device.c: 603: {
  2626                           ;usb_device.c: 613: if(!UCONbits.SE0)
  2627  040C  003D               	movlb	29	; select bank29
  2628  040D  1A8E               	btfsc	14,5	;volatile
  2629  040E  2C18               	goto	l4526
  2630                           
  2631                           ;usb_device.c: 614: {
  2632                           ;usb_device.c: 615: {UIR = 0;};
  2633  040F  0190               	clrf	16	;volatile
  2634                           
  2635                           ;usb_device.c: 617: UIE=0;
  2636  0410  0192               	clrf	18	;volatile
  2637                           
  2638                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
  2639  0411  1412               	bsf	18,0	;volatile
  2640                           
  2641                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
  2642  0412  1612               	bsf	18,4	;volatile
  2643                           
  2644                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
  2645  0413  3002               	movlw	2
  2646  0414  0020               	movlb	0	; select bank0
  2647  0415  00E6               	movwf	??_USBDeviceTasks
  2648  0416  0866               	movf	??_USBDeviceTasks,w
  2649  0417  00ED               	movwf	_USBDeviceState
  2650  0418                     l4526:	
  2651                           
  2652                           ;usb_device.c: 622: }
  2653                           ;usb_device.c: 623: }
  2654                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  2655  0418  003D               	movlb	29	; select bank29
  2656  0419  1910               	btfsc	16,2	;volatile
  2657  041A  1D12               	btfss	18,2	;volatile
  2658  041B  2C25               	goto	l4534
  2659                           
  2660                           ;usb_device.c: 640: {
  2661                           ;usb_device.c: 641: (UIR &= 0xFB);
  2662  041C  30FB               	movlw	251
  2663  041D  0020               	movlb	0	; select bank0
  2664  041E  00E6               	movwf	??_USBDeviceTasks
  2665  041F  0866               	movf	??_USBDeviceTasks,w
  2666  0420  003D               	movlb	29	; select bank29
  2667  0421  0590               	andwf	16,f	;volatile
  2668                           
  2669                           ;usb_device.c: 645: USBWakeFromSuspend();
  2670  0422  3189  21AD  3183   	fcall	_USBWakeFromSuspend
  2671  0425                     l4534:	
  2672                           
  2673                           ;usb_device.c: 647: }
  2674                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
  2675  0425  003D               	movlb	29	; select bank29
  2676  0426  1C8E               	btfss	14,1	;volatile
  2677  0427  2C2B               	goto	l567
  2678                           
  2679                           ;usb_device.c: 653: {
  2680                           ;usb_device.c: 654: PIR2bits.USBIF = 0;;
  2681  0428  0020               	movlb	0	; select bank0
  2682  0429  1112               	bcf	18,2	;volatile
  2683                           
  2684                           ;usb_device.c: 655: return;
  2685  042A  0008               	return
  2686  042B                     l567:	
  2687                           
  2688                           ;usb_device.c: 656: }
  2689                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
  2690  042B  1810               	btfsc	16,0	;volatile
  2691  042C  1C12               	btfss	18,0	;volatile
  2692  042D  2C3B               	goto	l4546
  2693                           
  2694                           ;usb_device.c: 669: {
  2695                           ;usb_device.c: 670: USBDeviceInit();
  2696  042E  3186  266D  3183   	fcall	_USBDeviceInit
  2697                           
  2698                           ;usb_device.c: 674: ;
  2699                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
  2700  0431  3004               	movlw	4
  2701  0432  0020               	movlb	0	; select bank0
  2702  0433  00E6               	movwf	??_USBDeviceTasks
  2703  0434  0866               	movf	??_USBDeviceTasks,w
  2704  0435  00ED               	movwf	_USBDeviceState
  2705                           
  2706                           ;usb_device.c: 686: (UIR &= 0xFE);
  2707  0436  30FE               	movlw	254
  2708  0437  00E6               	movwf	??_USBDeviceTasks
  2709  0438  0866               	movf	??_USBDeviceTasks,w
  2710  0439  003D               	movlb	29	; select bank29
  2711  043A  0590               	andwf	16,f	;volatile
  2712  043B                     l4546:	
  2713                           
  2714                           ;usb_device.c: 687: }
  2715                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  2716  043B  1A10               	btfsc	16,4	;volatile
  2717  043C  1E12               	btfss	18,4	;volatile
  2718  043D  2C47               	goto	l4554
  2719                           
  2720                           ;usb_device.c: 693: {
  2721                           ;usb_device.c: 698: USBSuspend();
  2722  043E  3189  2181  3183   	fcall	_USBSuspend
  2723                           
  2724                           ;usb_device.c: 701: (UIR &= 0xEF);
  2725  0441  30EF               	movlw	239
  2726  0442  0020               	movlb	0	; select bank0
  2727  0443  00E6               	movwf	??_USBDeviceTasks
  2728  0444  0866               	movf	??_USBDeviceTasks,w
  2729  0445  003D               	movlb	29	; select bank29
  2730  0446  0590               	andwf	16,f	;volatile
  2731  0447                     l4554:	
  2732                           
  2733                           ;usb_device.c: 702: }
  2734                           ;usb_device.c: 704: if(UIRbits.SOFIF)
  2735  0447  1F10               	btfss	16,6	;volatile
  2736  0448  2C6A               	goto	l4568
  2737                           
  2738                           ;usb_device.c: 705: {
  2739                           ;usb_device.c: 706: if(UIEbits.SOFIE)
  2740  0449  1F12               	btfss	18,6	;volatile
  2741  044A  2C58               	goto	l4560
  2742                           
  2743                           ;usb_device.c: 707: {
  2744                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  2745  044B  3073               	movlw	115
  2746  044C  0020               	movlb	0	; select bank0
  2747  044D  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  2748  044E  3000               	movlw	0
  2749  044F  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  2750  0450  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  2751  0451  3001               	movlw	1
  2752  0452  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  2753  0453  3000               	movlw	0
  2754  0454  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  2755  0455  318B  2347  3183   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  2756  0458                     l4560:	
  2757                           
  2758                           ;usb_device.c: 709: }
  2759                           ;usb_device.c: 710: (UIR &= 0xBF);
  2760  0458  30BF               	movlw	191
  2761  0459  0020               	movlb	0	; select bank0
  2762  045A  00E6               	movwf	??_USBDeviceTasks
  2763  045B  0866               	movf	??_USBDeviceTasks,w
  2764  045C  003D               	movlb	29	; select bank29
  2765  045D  0590               	andwf	16,f	;volatile
  2766                           
  2767                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  2768  045E  0022               	movlb	2	; select bank2
  2769  045F  0857               	movf	_USBStatusStageTimeoutCounter^(0+256),w
  2770  0460  1903               	btfsc	3,2
  2771  0461  2C64               	goto	l572
  2772                           
  2773                           ;usb_device.c: 736: {
  2774                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  2775  0462  3001               	movlw	1
  2776  0463  02D7               	subwf	_USBStatusStageTimeoutCounter^(0+256),f
  2777  0464                     l572:	
  2778                           
  2779                           ;usb_device.c: 738: }
  2780                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  2781  0464  0857               	movf	_USBStatusStageTimeoutCounter^(0+256),w
  2782  0465  1D03               	btfss	3,2
  2783  0466  2C6A               	goto	l4568
  2784                           
  2785                           ;usb_device.c: 745: {
  2786                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  2787  0467  318D  25A5  3183   	fcall	_USBCtrlEPAllowStatusStage
  2788  046A                     l4568:	
  2789                           
  2790                           ;usb_device.c: 747: }
  2791                           ;usb_device.c: 749: }
  2792                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  2793  046A  003D               	movlb	29	; select bank29
  2794  046B  1A90               	btfsc	16,5	;volatile
  2795  046C  1E92               	btfss	18,5	;volatile
  2796  046D  2C71               	goto	l4574
  2797                           
  2798                           ;usb_device.c: 752: {
  2799                           ;usb_device.c: 753: USBStallHandler();
  2800  046E  318A  2273  3183   	fcall	_USBStallHandler
  2801  0471                     l4574:	
  2802                           
  2803                           ;usb_device.c: 754: }
  2804                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  2805  0471  003D               	movlb	29	; select bank29
  2806  0472  1890               	btfsc	16,1	;volatile
  2807  0473  1C92               	btfss	18,1	;volatile
  2808  0474  2C84               	goto	l4582
  2809                           
  2810                           ;usb_device.c: 757: {
  2811                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  2812  0475  30FF               	movlw	255
  2813  0476  0020               	movlb	0	; select bank0
  2814  0477  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  2815  0478  307F               	movlw	127
  2816  0479  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  2817  047A  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  2818  047B  3001               	movlw	1
  2819  047C  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  2820  047D  3000               	movlw	0
  2821  047E  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  2822  047F  318B  2347  3183   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  2823                           
  2824                           ;usb_device.c: 759: {UEIR = 0;};
  2825  0482  003D               	movlb	29	; select bank29
  2826  0483  0193               	clrf	19	;volatile
  2827  0484                     l4582:	
  2828                           
  2829                           ;usb_device.c: 767: }
  2830                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  2831  0484  3004               	movlw	4
  2832  0485  0020               	movlb	0	; select bank0
  2833  0486  026D               	subwf	_USBDeviceState,w
  2834  0487  1803               	skipnc
  2835  0488  2C8B               	goto	l576
  2836                           
  2837                           ;usb_device.c: 775: {
  2838                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  2839  0489  1112               	bcf	18,2	;volatile
  2840                           
  2841                           ;usb_device.c: 777: return;
  2842  048A  0008               	return
  2843  048B                     l576:	
  2844                           
  2845                           ;usb_device.c: 778: }
  2846                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  2847  048B  003D               	movlb	29	; select bank29
  2848  048C  1D92               	btfss	18,3	;volatile
  2849  048D  2CE0               	goto	l577
  2850                           
  2851                           ;usb_device.c: 784: {
  2852                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  2853  048E  0020               	movlb	0	; select bank0
  2854  048F  01E8               	clrf	USBDeviceTasks@i
  2855  0490  2CD9               	goto	L2
  2856  0491                     l4592:	
  2857                           
  2858                           ;usb_device.c: 788: {
  2859                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  2860  0491  080F               	movf	15,w	;volatile
  2861  0492  0020               	movlb	0	; select bank0
  2862  0493  00E6               	movwf	??_USBDeviceTasks
  2863  0494  0866               	movf	??_USBDeviceTasks,w
  2864  0495  00EF               	movwf	_USTATcopy
  2865                           
  2866                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  2867  0496  0C6F               	rrf	_USTATcopy,w
  2868  0497  00E6               	movwf	??_USBDeviceTasks
  2869  0498  0CE6               	rrf	??_USBDeviceTasks,f
  2870  0499  0C66               	rrf	??_USBDeviceTasks,w
  2871  049A  390F               	andlw	15
  2872  049B  00E7               	movwf	??_USBDeviceTasks+1
  2873  049C  0867               	movf	??_USBDeviceTasks+1,w
  2874  049D  0022               	movlb	2	; select bank2
  2875  049E  00D8               	movwf	_endpoint_number^(0+256)
  2876                           
  2877                           ;usb_device.c: 793: (UIR &= 0xF7);
  2878  049F  30F7               	movlw	247
  2879  04A0  0020               	movlb	0	; select bank0
  2880  04A1  00E6               	movwf	??_USBDeviceTasks
  2881  04A2  0866               	movf	??_USBDeviceTasks,w
  2882  04A3  003D               	movlb	29	; select bank29
  2883  04A4  0590               	andwf	16,f	;volatile
  2884                           
  2885                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  2886  04A5  0020               	movlb	0	; select bank0
  2887  04A6  196F               	btfsc	_USTATcopy,2
  2888  04A7  2CAC               	goto	l4602
  2889                           
  2890                           ;usb_device.c: 799: {
  2891                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  2892  04A8  0022               	movlb	2	; select bank2
  2893  04A9  0858               	movf	_endpoint_number^(0+256),w
  2894  04AA  3E49               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  2895  04AB  2CAF               	goto	L1
  2896  04AC                     l4602:	
  2897                           ;usb_device.c: 801: }
  2898                           
  2899                           
  2900                           ;usb_device.c: 802: else
  2901                           ;usb_device.c: 803: {
  2902                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  2903  04AC  0022               	movlb	2	; select bank2
  2904  04AD  0858               	movf	_endpoint_number^(0+256),w
  2905  04AE  3E47               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  2906  04AF                     L1:	
  2907  04AF  0086               	movwf	6
  2908  04B0  3001               	movlw	1	; select bank2/3
  2909  04B1  0087               	movwf	7
  2910  04B2  0801               	movf	1,w
  2911  04B3  3901               	andlw	1
  2912  04B4  0020               	movlb	0	; select bank0
  2913  04B5  00E6               	movwf	??_USBDeviceTasks
  2914  04B6  3001               	movlw	1
  2915  04B7  06E6               	xorwf	??_USBDeviceTasks,f
  2916  04B8  0801               	movf	1,w
  2917  04B9  0666               	xorwf	??_USBDeviceTasks,w
  2918  04BA  39FE               	andlw	-2
  2919  04BB  0666               	xorwf	??_USBDeviceTasks,w
  2920  04BC  0081               	movwf	1
  2921                           
  2922                           ;usb_device.c: 805: }
  2923                           ;usb_device.c: 810: if(endpoint_number == 0)
  2924  04BD  0022               	movlb	2	; select bank2
  2925  04BE  0858               	movf	_endpoint_number^(0+256),w
  2926  04BF  1D03               	btfss	3,2
  2927  04C0  2CC5               	goto	l4608
  2928                           
  2929                           ;usb_device.c: 811: {
  2930                           ;usb_device.c: 812: USBCtrlEPService();
  2931  04C1  3182  2285  3183   	fcall	_USBCtrlEPService
  2932                           
  2933                           ;usb_device.c: 813: }
  2934  04C4  2CD4               	goto	l4610
  2935  04C5                     l4608:	
  2936                           
  2937                           ;usb_device.c: 814: else
  2938                           ;usb_device.c: 815: {
  2939                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  2940  04C5  3072               	movlw	114
  2941  04C6  0020               	movlb	0	; select bank0
  2942  04C7  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  2943  04C8  3000               	movlw	0
  2944  04C9  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  2945  04CA  306F               	movlw	(low (_USTATcopy| 0))& (0+255)
  2946  04CB  00E6               	movwf	??_USBDeviceTasks
  2947  04CC  0866               	movf	??_USBDeviceTasks,w
  2948  04CD  00D7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  2949  04CE  3000               	movlw	0
  2950  04CF  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  2951  04D0  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  2952  04D1  318B  2347  3183   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  2953  04D4                     l4610:	
  2954                           ;usb_device.c: 819: else
  2955                           ;usb_device.c: 820: {
  2956                           ;usb_device.c: 821: break;
  2957                           
  2958                           ;usb_device.c: 817: }
  2959                           ;usb_device.c: 818: }
  2960                           
  2961  04D4  3001               	movlw	1
  2962  04D5  0020               	movlb	0	; select bank0
  2963  04D6  00E6               	movwf	??_USBDeviceTasks
  2964  04D7  0866               	movf	??_USBDeviceTasks,w
  2965  04D8  07E8               	addwf	USBDeviceTasks@i,f
  2966  04D9                     L2:	
  2967  04D9  3004               	movlw	4
  2968  04DA  0268               	subwf	USBDeviceTasks@i,w
  2969  04DB  1803               	btfsc	3,0
  2970  04DC  2CE0               	goto	l577
  2971                           
  2972                           ;usb_device.c: 786: {
  2973                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  2974  04DD  003D               	movlb	29	; select bank29
  2975  04DE  1990               	btfsc	16,3	;volatile
  2976  04DF  2C91               	goto	l4592
  2977  04E0                     l577:	
  2978                           
  2979                           ;usb_device.c: 822: }
  2980                           ;usb_device.c: 823: }
  2981                           ;usb_device.c: 824: }
  2982                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  2983  04E0  0020               	movlb	0	; select bank0
  2984  04E1  1112               	bcf	18,2	;volatile
  2985  04E2  0008               	return
  2986  04E3                     __end_of_USBDeviceTasks:	
  2987                           
  2988                           	psect	text2
  2989  09AD                     __ptext2:	
  2990 ;; *************** function _USBWakeFromSuspend *****************
  2991 ;; Defined at:
  2992 ;;		line 2302 in file "../../../../../../framework/usb/src/usb_device.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;		None
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;		None
  2997 ;; Return value:  Size  Location     Type
  2998 ;;		None               void
  2999 ;; Registers used:
  3000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3008 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3009 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3010 ;;Total ram usage:        1 bytes
  3011 ;; Hardware stack levels used:    1
  3012 ;; Hardware stack levels required when called:    5
  3013 ;; This function calls:
  3014 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3015 ;; This function is called by:
  3016 ;;		_USBDeviceTasks
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           
  3021                           ;psect for function _USBWakeFromSuspend
  3022  09AD                     _USBWakeFromSuspend:	
  3023                           
  3024                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
  3025                           
  3026                           ;incstack = 0
  3027                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3028  09AD  0022               	movlb	2	; select bank2
  3029  09AE  01D1               	clrf	_USBBusIsSuspended^(0+256)
  3030                           
  3031                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  3032  09AF  3074               	movlw	116
  3033  09B0  0020               	movlb	0	; select bank0
  3034  09B1  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3035  09B2  3000               	movlw	0
  3036  09B3  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3037  09B4  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3038  09B5  3000               	movlw	0
  3039  09B6  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3040  09B7  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3041  09B8  318B  2347  3189   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3042                           
  3043                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
  3044  09BB  003D               	movlb	29	; select bank29
  3045  09BC  108E               	bcf	14,1	;volatile
  3046                           
  3047                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
  3048  09BD  1112               	bcf	18,2	;volatile
  3049  09BE                     l4450:	
  3050                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
  3051                           
  3052  09BE  1D10               	btfss	16,2	;volatile
  3053  09BF  0008               	return
  3054                           
  3055                           ;usb_device.c: 2342: {
  3056                           ;usb_device.c: 2343: (UIR &= 0xFB);
  3057  09C0  30FB               	movlw	251
  3058  09C1  00FB               	movwf	??_USBWakeFromSuspend
  3059  09C2  087B               	movf	??_USBWakeFromSuspend,w
  3060  09C3  0590               	andwf	16,f	;volatile
  3061  09C4  29BE               	goto	l4450
  3062  09C5                     __end_of_USBWakeFromSuspend:	
  3063                           
  3064                           	psect	text3
  3065  0981                     __ptext3:	
  3066 ;; *************** function _USBSuspend *****************
  3067 ;; Defined at:
  3068 ;;		line 2245 in file "../../../../../../framework/usb/src/usb_device.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;		None
  3073 ;; Return value:  Size  Location     Type
  3074 ;;		None               void
  3075 ;; Registers used:
  3076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3084 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3085 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3086 ;;Total ram usage:        1 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; Hardware stack levels required when called:    5
  3089 ;; This function calls:
  3090 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3091 ;; This function is called by:
  3092 ;;		_USBDeviceTasks
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           
  3097                           ;psect for function _USBSuspend
  3098  0981                     _USBSuspend:	
  3099                           
  3100                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  3101                           
  3102                           ;incstack = 0
  3103                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3104  0981  003D               	movlb	29	; select bank29
  3105  0982  1512               	bsf	18,2	;volatile
  3106                           
  3107                           ;usb_device.c: 2271: (UIR &= 0xEF);
  3108  0983  30EF               	movlw	239
  3109  0984  00FB               	movwf	??_USBSuspend
  3110  0985  087B               	movf	??_USBSuspend,w
  3111  0986  0590               	andwf	16,f	;volatile
  3112                           
  3113                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  3114  0987  148E               	bsf	14,1	;volatile
  3115                           
  3116                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  3117  0988  0022               	movlb	2	; select bank2
  3118  0989  01D1               	clrf	_USBBusIsSuspended^(0+256)
  3119  098A  0AD1               	incf	_USBBusIsSuspended^(0+256),f
  3120                           
  3121                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  3122  098B  3075               	movlw	117
  3123  098C  0020               	movlb	0	; select bank0
  3124  098D  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3125  098E  3000               	movlw	0
  3126  098F  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3127  0990  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3128  0991  3000               	movlw	0
  3129  0992  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3130  0993  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3131  0994  318B  2347         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3132  0996  0008               	return
  3133  0997                     __end_of_USBSuspend:	
  3134                           
  3135                           	psect	text4
  3136  0A73                     __ptext4:	
  3137 ;; *************** function _USBStallHandler *****************
  3138 ;; Defined at:
  3139 ;;		line 2202 in file "../../../../../../framework/usb/src/usb_device.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;		None
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;		None
  3144 ;; Return value:  Size  Location     Type
  3145 ;;		None               void
  3146 ;; Registers used:
  3147 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3155 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3156 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3157 ;;Total ram usage:        1 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; Hardware stack levels required when called:    1
  3160 ;; This function calls:
  3161 ;;		Nothing
  3162 ;; This function is called by:
  3163 ;;		_USBDeviceTasks
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           
  3168                           ;psect for function _USBStallHandler
  3169  0A73                     _USBStallHandler:	
  3170                           
  3171                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  3172                           
  3173                           ;incstack = 0
  3174                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  3175  0A73  003D               	movlb	29	; select bank29
  3176  0A74  1C18               	btfss	24,0	;volatile
  3177  0A75  2A92               	goto	l3772
  3178                           
  3179                           ;usb_device.c: 2215: {
  3180                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  3181  0A76  0020               	movlb	0	; select bank0
  3182  0A77  086E               	movf	_pBDTEntryEP0OutCurrent,w
  3183  0A78  0086               	movwf	6
  3184  0A79  0187               	clrf	7
  3185  0A7A  3080               	movlw	128
  3186  0A7B  0601               	xorwf	1,w
  3187  0A7C  1D03               	btfss	3,2
  3188  0A7D  2A90               	goto	l3770
  3189  0A7E  086B               	movf	_pBDTEntryIn,w
  3190  0A7F  0086               	movwf	6
  3191  0A80  0187               	clrf	7
  3192  0A81  3084               	movlw	132
  3193  0A82  0601               	xorwf	1,w
  3194  0A83  1D03               	btfss	3,2
  3195  0A84  2A90               	goto	l3770
  3196                           
  3197                           ;usb_device.c: 2218: {
  3198                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  3199  0A85  300C               	movlw	12
  3200  0A86  00F1               	movwf	??_USBStallHandler
  3201  0A87  086E               	movf	_pBDTEntryEP0OutCurrent,w
  3202  0A88  0086               	movwf	6
  3203  0A89  0187               	clrf	7
  3204  0A8A  0871               	movf	??_USBStallHandler,w
  3205  0A8B  0081               	movwf	1
  3206                           
  3207                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  3208  0A8C  086E               	movf	_pBDTEntryEP0OutCurrent,w
  3209  0A8D  0086               	movwf	6
  3210  0A8E  0187               	clrf	7
  3211  0A8F  1781               	bsf	1,7
  3212  0A90                     l3770:	
  3213                           
  3214                           ;usb_device.c: 2222: }
  3215                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  3216  0A90  003D               	movlb	29	; select bank29
  3217  0A91  1018               	bcf	24,0	;volatile
  3218  0A92                     l3772:	
  3219                           
  3220                           ;usb_device.c: 2224: }
  3221                           ;usb_device.c: 2226: (UIR &= 0xDF);
  3222  0A92  30DF               	movlw	223
  3223  0A93  00F1               	movwf	??_USBStallHandler
  3224  0A94  0871               	movf	??_USBStallHandler,w
  3225  0A95  0590               	andwf	16,f	;volatile
  3226  0A96  0008               	return
  3227  0A97                     __end_of_USBStallHandler:	
  3228                           
  3229                           	psect	text5
  3230  066D                     __ptext5:	
  3231 ;; *************** function _USBDeviceInit *****************
  3232 ;; Defined at:
  3233 ;;		line 298 in file "../../../../../../framework/usb/src/usb_device.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;		None
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;  p               2    2[COMMON] PTR unsigned char 
  3238 ;;		 -> UEP1(1), 
  3239 ;;  i               1    4[COMMON] unsigned char 
  3240 ;;  i               1    5[COMMON] unsigned char 
  3241 ;; Return value:  Size  Location     Type
  3242 ;;		None               void
  3243 ;; Registers used:
  3244 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3245 ;; Tracked objects:
  3246 ;;		On entry : 0/0
  3247 ;;		On exit  : 0/0
  3248 ;;		Unchanged: 0/0
  3249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3251 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3252 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3253 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3254 ;;Total ram usage:        5 bytes
  3255 ;; Hardware stack levels used:    1
  3256 ;; Hardware stack levels required when called:    1
  3257 ;; This function calls:
  3258 ;;		Nothing
  3259 ;; This function is called by:
  3260 ;;		_main
  3261 ;;		_USBDeviceTasks
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265                           
  3266                           ;psect for function _USBDeviceInit
  3267  066D                     _USBDeviceInit:	
  3268                           
  3269                           ;usb_device.c: 300: uint8_t i;
  3270                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
  3271                           
  3272                           ;incstack = 0
  3273                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  3274  066D  0021               	movlb	1	; select bank1
  3275  066E  1112               	bcf	18,2	;volatile
  3276                           
  3277                           ;usb_device.c: 305: {UEIR = 0;};
  3278  066F  003D               	movlb	29	; select bank29
  3279  0670  0193               	clrf	19	;volatile
  3280                           
  3281                           ;usb_device.c: 308: {UIR = 0;};
  3282  0671  0190               	clrf	16	;volatile
  3283                           
  3284                           ;usb_device.c: 311: UEP0 = 0;
  3285  0672  0198               	clrf	24	;volatile
  3286                           
  3287                           ;usb_device.c: 313: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 0
      +                          ; };
  3288  0673  300E               	movlw	14
  3289  0674  00F3               	movwf	USBDeviceInit@p+1
  3290  0675  3099               	movlw	153
  3291  0676  00F2               	movwf	USBDeviceInit@p
  3292  0677  01F4               	clrf	USBDeviceInit@i_1659
  3293  0678  0874               	movf	USBDeviceInit@i_1659,w
  3294  0679  1D03               	btfss	3,2
  3295  067A  2E8B               	goto	l3606
  3296  067B                     l3598:	
  3297  067B  0872               	movf	USBDeviceInit@p,w
  3298  067C  0086               	movwf	6
  3299  067D  0873               	movf	USBDeviceInit@p+1,w
  3300  067E  0087               	movwf	7
  3301  067F  0181               	clrf	1
  3302  0680  3001               	movlw	1
  3303  0681  07F2               	addwf	USBDeviceInit@p,f
  3304  0682  3000               	movlw	0
  3305  0683  3DF3               	addwfc	USBDeviceInit@p+1,f
  3306  0684  3001               	movlw	1
  3307  0685  00F1               	movwf	??_USBDeviceInit
  3308  0686  0871               	movf	??_USBDeviceInit,w
  3309  0687  07F4               	addwf	USBDeviceInit@i_1659,f
  3310  0688  0874               	movf	USBDeviceInit@i_1659,w
  3311  0689  1903               	btfsc	3,2
  3312  068A  2E7B               	goto	l3598
  3313  068B                     l3606:	
  3314                           
  3315                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  3316  068B  3016               	movlw	22
  3317  068C  003D               	movlb	29	; select bank29
  3318  068D  0091               	movwf	17	;volatile
  3319  068E  309F               	movlw	159
  3320  068F  0097               	movwf	23	;volatile
  3321  0690  307B               	movlw	123
  3322  0691  0092               	movwf	18	;volatile
  3323                           
  3324                           ;usb_device.c: 318: ;
  3325                           ;usb_device.c: 321: ;
  3326                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  3327  0692  01F5               	clrf	USBDeviceInit@i
  3328  0693  3008               	movlw	8
  3329  0694  0275               	subwf	USBDeviceInit@i,w
  3330  0695  1803               	btfsc	3,0
  3331  0696  2EB0               	goto	l549
  3332  0697                     l3614:	
  3333                           
  3334                           ;usb_device.c: 325: {
  3335                           ;usb_device.c: 326: BDT[i].Val = 0x00;
  3336  0697  0875               	movf	USBDeviceInit@i,w
  3337  0698  00F1               	movwf	??_USBDeviceInit
  3338  0699  3001               	movlw	1
  3339  069A                     u3095:	
  3340  069A  35F1               	lslf	??_USBDeviceInit,f
  3341  069B  3EFF               	addlw	-1
  3342  069C  1D03               	skipz
  3343  069D  2E9A               	goto	u3095
  3344  069E  3571               	lslf	??_USBDeviceInit,w
  3345  069F  3E20               	addlw	32
  3346  06A0  0086               	movwf	6
  3347  06A1  0187               	clrf	7
  3348  06A2  3000               	movlw	0
  3349  06A3  3FC0               	movwi [0]fsr1
  3350  06A4  3000               	movlw	0
  3351  06A5  3FC1               	movwi [1]fsr1
  3352  06A6  3FC2               	movwi [2]fsr1
  3353  06A7  3FC3               	movwi [3]fsr1
  3354  06A8  3001               	movlw	1
  3355  06A9  00F1               	movwf	??_USBDeviceInit
  3356  06AA  0871               	movf	??_USBDeviceInit,w
  3357  06AB  07F5               	addwf	USBDeviceInit@i,f
  3358  06AC  3008               	movlw	8
  3359  06AD  0275               	subwf	USBDeviceInit@i,w
  3360  06AE  1C03               	skipc
  3361  06AF  2E97               	goto	l3614
  3362  06B0                     l549:	
  3363                           
  3364                           ;usb_device.c: 327: }
  3365                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
  3366  06B0  003D               	movlb	29	; select bank29
  3367  06B1  170E               	bsf	14,6	;volatile
  3368                           
  3369                           ;usb_device.c: 333: UADDR = 0x00;
  3370  06B2  0196               	clrf	22	;volatile
  3371                           
  3372                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
  3373  06B3  120E               	bcf	14,4	;volatile
  3374                           
  3375                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
  3376  06B4  130E               	bcf	14,6	;volatile
  3377  06B5                     l3634:	
  3378                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
  3379                           
  3380  06B5  003D               	movlb	29	; select bank29
  3381  06B6  1D90               	btfss	16,3	;volatile
  3382  06B7  2EC3               	goto	l3636
  3383                           
  3384                           ;usb_device.c: 343: {
  3385                           ;usb_device.c: 344: (UIR &= 0xF7);
  3386  06B8  30F7               	movlw	247
  3387  06B9  00F1               	movwf	??_USBDeviceInit
  3388  06BA  0871               	movf	??_USBDeviceInit,w
  3389  06BB  0590               	andwf	16,f	;volatile
  3390                           
  3391                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
  3392  06BC  0021               	movlb	1	; select bank1
  3393  06BD  01EB               	clrf	(_inPipes^(0+128)+2)
  3394                           
  3395                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
  3396  06BE  0022               	movlb	2	; select bank2
  3397  06BF  01C2               	clrf	(_outPipes^(0+256)+2)
  3398                           
  3399                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
  3400  06C0  01C3               	clrf	(_outPipes^(0+256)+3)
  3401  06C1  01C4               	clrf	((_outPipes+1)^(0+256)+3)
  3402  06C2  2EB5               	goto	l3634
  3403  06C3                     l3636:	
  3404                           
  3405                           ;usb_device.c: 349: }
  3406                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
  3407  06C3  3001               	movlw	1
  3408  06C4  00F1               	movwf	??_USBDeviceInit
  3409  06C5  0871               	movf	??_USBDeviceInit,w
  3410  06C6  0022               	movlb	2	; select bank2
  3411  06C7  00D5               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  3412                           
  3413                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
  3414  06C8  3001               	movlw	1
  3415  06C9  00F1               	movwf	??_USBDeviceInit
  3416  06CA  0871               	movf	??_USBDeviceInit,w
  3417  06CB  00D6               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  3418                           
  3419                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
  3420  06CC  01D2               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  3421                           
  3422                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
  3423  06CD  01D3               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  3424                           
  3425                           ;usb_device.c: 358: USBBusIsSuspended = 0;
  3426  06CE  01D1               	clrf	_USBBusIsSuspended^(0+256)
  3427                           
  3428                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(1+1u); i++)
  3429  06CF  01F5               	clrf	USBDeviceInit@i
  3430  06D0  3002               	movlw	2
  3431  06D1  0275               	subwf	USBDeviceInit@i,w
  3432  06D2  1803               	btfsc	3,0
  3433  06D3  2EF3               	goto	l3654
  3434  06D4                     l3648:	
  3435                           
  3436                           ;usb_device.c: 363: {
  3437                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
  3438  06D4  0875               	movf	USBDeviceInit@i,w
  3439  06D5  3E6B               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  3440  06D6  0086               	movwf	6
  3441  06D7  0187               	clrf	7
  3442  06D8  0181               	clrf	1
  3443                           
  3444                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
  3445  06D9  0875               	movf	USBDeviceInit@i,w
  3446  06DA  3E4D               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3447  06DB  0086               	movwf	6
  3448  06DC  3001               	movlw	1	; select bank2/3
  3449  06DD  0087               	movwf	7
  3450  06DE  0181               	clrf	1
  3451                           
  3452                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
  3453  06DF  0875               	movf	USBDeviceInit@i,w
  3454  06E0  3E47               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  3455  06E1  0086               	movwf	6
  3456  06E2  3001               	movlw	1	; select bank2/3
  3457  06E3  0087               	movwf	7
  3458  06E4  0181               	clrf	1
  3459                           
  3460                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
  3461  06E5  0875               	movf	USBDeviceInit@i,w
  3462  06E6  3E49               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  3463  06E7  0086               	movwf	6
  3464  06E8  3001               	movlw	1	; select bank2/3
  3465  06E9  0087               	movwf	7
  3466  06EA  0181               	clrf	1
  3467  06EB  3001               	movlw	1
  3468  06EC  00F1               	movwf	??_USBDeviceInit
  3469  06ED  0871               	movf	??_USBDeviceInit,w
  3470  06EE  07F5               	addwf	USBDeviceInit@i,f
  3471  06EF  3002               	movlw	2
  3472  06F0  0275               	subwf	USBDeviceInit@i,w
  3473  06F1  1C03               	skipc
  3474  06F2  2ED4               	goto	l3648
  3475  06F3                     l3654:	
  3476                           
  3477                           ;usb_device.c: 368: }
  3478                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  3479  06F3  3028               	movlw	40
  3480  06F4  00F1               	movwf	??_USBDeviceInit
  3481  06F5  0871               	movf	??_USBDeviceInit,w
  3482  06F6  0020               	movlb	0	; select bank0
  3483  06F7  00EB               	movwf	_pBDTEntryIn
  3484                           
  3485                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
  3486  06F8  3016               	movlw	22
  3487  06F9  003D               	movlb	29	; select bank29
  3488  06FA  0098               	movwf	24	;volatile
  3489                           
  3490                           ;usb_device.c: 375: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3491  06FB  3000               	movlw	0
  3492  06FC  0020               	movlb	0	; select bank0
  3493  06FD  00A3               	movwf	35	;volatile
  3494  06FE  3040               	movlw	64
  3495  06FF  00A2               	movwf	34	;volatile
  3496                           
  3497                           ;usb_device.c: 376: BDT[0].CNT = 8;
  3498  0700  3008               	movlw	8
  3499  0701  00A1               	movwf	33	;volatile
  3500                           
  3501                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
  3502  0702  3004               	movlw	4
  3503  0703  00F1               	movwf	??_USBDeviceInit
  3504  0704  0871               	movf	??_USBDeviceInit,w
  3505  0705  00A0               	movwf	32	;volatile
  3506                           
  3507                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
  3508  0706  17A0               	bsf	32,7	;volatile
  3509                           
  3510                           ;usb_device.c: 381: USBActiveConfiguration = 0;
  3511  0707  0021               	movlb	1	; select bank1
  3512  0708  01EE               	clrf	_USBActiveConfiguration^(0+128)
  3513                           
  3514                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
  3515  0709  0020               	movlb	0	; select bank0
  3516  070A  01ED               	clrf	_USBDeviceState
  3517  070B  0008               	return
  3518  070C                     __end_of_USBDeviceInit:	
  3519                           
  3520                           	psect	text6
  3521  0285                     __ptext6:	
  3522 ;; *************** function _USBCtrlEPService *****************
  3523 ;; Defined at:
  3524 ;;		line 2369 in file "../../../../../../framework/usb/src/usb_device.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;		None
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  setup_cnt       1   21[BANK0 ] unsigned char 
  3529 ;; Return value:  Size  Location     Type
  3530 ;;		None               void
  3531 ;; Registers used:
  3532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3539 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3540 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3541 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3542 ;;Total ram usage:        4 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:    8
  3545 ;; This function calls:
  3546 ;;		_USBCtrlTrfInHandler
  3547 ;;		_USBCtrlTrfOutHandler
  3548 ;;		_USBCtrlTrfSetupHandler
  3549 ;; This function is called by:
  3550 ;;		_USBDeviceTasks
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           
  3555                           ;psect for function _USBCtrlEPService
  3556  0285                     _USBCtrlEPService:	
  3557                           
  3558                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
  3559                           
  3560                           ;incstack = 0
  3561                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3562  0285  302D               	movlw	45
  3563  0286  0020               	movlb	0	; select bank0
  3564  0287  00E2               	movwf	??_USBCtrlEPService
  3565  0288  0862               	movf	??_USBCtrlEPService,w
  3566  0289  0022               	movlb	2	; select bank2
  3567  028A  00D7               	movwf	_USBStatusStageTimeoutCounter^(0+256)
  3568                           
  3569                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
  3570  028B  0020               	movlb	0	; select bank0
  3571  028C  086F               	movf	_USTATcopy,w
  3572  028D  39FD               	andlw	253
  3573  028E  1D03               	btfss	3,2
  3574  028F  2AEA               	goto	l4492
  3575                           
  3576                           ;usb_device.c: 2380: {
  3577                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  3578  0290  366F               	lsrf	_USTATcopy,w
  3579  0291  393F               	andlw	63
  3580  0292  00E2               	movwf	??_USBCtrlEPService
  3581  0293  3001               	movlw	1
  3582  0294                     u4075:	
  3583  0294  35E2               	lslf	??_USBCtrlEPService,f
  3584  0295  3EFF               	addlw	-1
  3585  0296  1D03               	skipz
  3586  0297  2A94               	goto	u4075
  3587  0298  3562               	lslf	??_USBCtrlEPService,w
  3588  0299  3E20               	addlw	32
  3589  029A  00E3               	movwf	??_USBCtrlEPService+1
  3590  029B  0863               	movf	??_USBCtrlEPService+1,w
  3591  029C  00EE               	movwf	_pBDTEntryEP0OutCurrent
  3592                           
  3593                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  3594  029D  086E               	movf	_pBDTEntryEP0OutCurrent,w
  3595  029E  00E2               	movwf	??_USBCtrlEPService
  3596  029F  0862               	movf	??_USBCtrlEPService,w
  3597  02A0  00FC               	movwf	_pBDTEntryEP0OutNext
  3598                           
  3599                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  3600  02A1  3004               	movlw	4
  3601  02A2  00E2               	movwf	??_USBCtrlEPService
  3602  02A3  0862               	movf	??_USBCtrlEPService,w
  3603  02A4  06FC               	xorwf	_pBDTEntryEP0OutNext,f
  3604                           
  3605                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  3606  02A5  086E               	movf	_pBDTEntryEP0OutCurrent,w
  3607  02A6  0086               	movwf	6
  3608  02A7  0187               	clrf	7
  3609  02A8  0C01               	rrf	1,w
  3610  02A9  0C89               	rrf	9,f
  3611  02AA  390F               	andlw	15
  3612  02AB  3A0D               	xorlw	13
  3613  02AC  1D03               	skipz
  3614  02AD  2AE7               	goto	l4490
  3615                           
  3616                           ;usb_device.c: 2397: {
  3617                           ;usb_device.c: 2398: unsigned char setup_cnt;
  3618                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  3619  02AE  01E5               	clrf	USBCtrlEPService@setup_cnt
  3620  02AF  3008               	movlw	8
  3621  02B0  0265               	subwf	USBCtrlEPService@setup_cnt,w
  3622  02B1  1803               	btfsc	3,0
  3623  02B2  2AD8               	goto	l4486
  3624  02B3                     l4480:	
  3625                           
  3626                           ;usb_device.c: 2405: {
  3627                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
  3628  02B3  086E               	movf	_pBDTEntryEP0OutCurrent,w
  3629  02B4  3E02               	addlw	2
  3630  02B5  0086               	movwf	6
  3631  02B6  0187               	clrf	7
  3632  02B7  3F40               	moviw [0]fsr1
  3633  02B8  00E2               	movwf	??_USBCtrlEPService
  3634  02B9  3F41               	moviw [1]fsr1
  3635  02BA  00E3               	movwf	??_USBCtrlEPService+1
  3636  02BB  0862               	movf	??_USBCtrlEPService,w
  3637  02BC  0086               	movwf	6
  3638  02BD  0863               	movf	??_USBCtrlEPService+1,w
  3639  02BE  0087               	movwf	7
  3640  02BF  0801               	movf	1,w
  3641  02C0  00E4               	movwf	??_USBCtrlEPService+2
  3642  02C1  0865               	movf	USBCtrlEPService@setup_cnt,w
  3643  02C2  3E40               	addlw	64
  3644  02C3  0086               	movwf	6
  3645  02C4  0187               	clrf	7
  3646  02C5  0864               	movf	??_USBCtrlEPService+2,w
  3647  02C6  0081               	movwf	1
  3648                           
  3649                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
  3650  02C7  086E               	movf	_pBDTEntryEP0OutCurrent,w
  3651  02C8  3E02               	addlw	2
  3652  02C9  0086               	movwf	6
  3653  02CA  0187               	clrf	7
  3654  02CB  3001               	movlw	1
  3655  02CC  0781               	addwf	1,f
  3656  02CD  3141               	addfsr 1,1
  3657  02CE  1803               	skipnc
  3658  02CF  0A81               	incf	1,f
  3659  02D0  3001               	movlw	1
  3660  02D1  00E2               	movwf	??_USBCtrlEPService
  3661  02D2  0862               	movf	??_USBCtrlEPService,w
  3662  02D3  07E5               	addwf	USBCtrlEPService@setup_cnt,f
  3663  02D4  3008               	movlw	8
  3664  02D5  0265               	subwf	USBCtrlEPService@setup_cnt,w
  3665  02D6  1C03               	skipc
  3666  02D7  2AB3               	goto	l4480
  3667  02D8                     l4486:	
  3668                           
  3669                           ;usb_device.c: 2408: }
  3670                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3671  02D8  3040               	movlw	64
  3672  02D9  00E2               	movwf	??_USBCtrlEPService
  3673  02DA  3000               	movlw	0
  3674  02DB  00E3               	movwf	??_USBCtrlEPService+1
  3675  02DC  086E               	movf	_pBDTEntryEP0OutCurrent,w
  3676  02DD  3E02               	addlw	2
  3677  02DE  0086               	movwf	6
  3678  02DF  0187               	clrf	7
  3679  02E0  0862               	movf	??_USBCtrlEPService,w
  3680  02E1  3FC0               	movwi [0]fsr1
  3681  02E2  0863               	movf	??_USBCtrlEPService+1,w
  3682  02E3  3FC1               	movwi [1]fsr1
  3683                           
  3684                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
  3685  02E4  318B  23BF         	fcall	_USBCtrlTrfSetupHandler
  3686                           
  3687                           ;usb_device.c: 2413: }
  3688  02E6  0008               	return
  3689  02E7                     l4490:	
  3690                           
  3691                           ;usb_device.c: 2414: else
  3692                           ;usb_device.c: 2415: {
  3693                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
  3694  02E7  318A  22E8         	fcall	_USBCtrlTrfOutHandler
  3695                           
  3696                           ;usb_device.c: 2418: }
  3697                           ;usb_device.c: 2419: }
  3698  02E9  0008               	return
  3699  02EA                     l4492:	
  3700                           
  3701                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
  3702  02EA  30FD               	movlw	253
  3703  02EB  0020               	movlb	0	; select bank0
  3704  02EC  056F               	andwf	_USTATcopy,w
  3705  02ED  00E2               	movwf	??_USBCtrlEPService
  3706  02EE  3004               	movlw	4
  3707  02EF  0662               	xorwf	??_USBCtrlEPService,w
  3708  02F0  1D03               	btfss	3,2
  3709  02F1  0008               	return
  3710                           
  3711                           ;usb_device.c: 2421: {
  3712                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
  3713  02F2  318D  253E         	fcall	_USBCtrlTrfInHandler
  3714  02F4  0008               	return
  3715  02F5                     __end_of_USBCtrlEPService:	
  3716                           
  3717                           	psect	text7
  3718  0BBF                     __ptext7:	
  3719 ;; *************** function _USBCtrlTrfSetupHandler *****************
  3720 ;; Defined at:
  3721 ;;		line 2469 in file "../../../../../../framework/usb/src/usb_device.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;		None
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;		None
  3726 ;; Return value:  Size  Location     Type
  3727 ;;		None               void
  3728 ;; Registers used:
  3729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3737 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3738 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3739 ;;Total ram usage:        1 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; Hardware stack levels required when called:    7
  3742 ;; This function calls:
  3743 ;;		_USBCheckStdRequest
  3744 ;;		_USBCtrlEPServiceComplete
  3745 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3746 ;; This function is called by:
  3747 ;;		_USBCtrlEPService
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           
  3752                           ;psect for function _USBCtrlTrfSetupHandler
  3753  0BBF                     _USBCtrlTrfSetupHandler:	
  3754                           
  3755                           ;usb_device.c: 2474: shortPacketStatus = 0;
  3756                           
  3757                           ;incstack = 0
  3758                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3759  0BBF  0021               	movlb	1	; select bank1
  3760  0BC0  01E7               	clrf	_shortPacketStatus^(0+128)
  3761                           
  3762                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
  3763  0BC1  01E2               	clrf	_USBDeferStatusStagePacket^(0+128)	;volatile
  3764                           
  3765                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
  3766  0BC2  0022               	movlb	2	; select bank2
  3767  0BC3  01D2               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  3768                           
  3769                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
  3770  0BC4  01D3               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  3771                           
  3772                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
  3773  0BC5  01CF               	clrf	_BothEP0OutUOWNsSet^(0+256)
  3774                           
  3775                           ;usb_device.c: 2479: controlTransferState = 0;
  3776  0BC6  0021               	movlb	1	; select bank1
  3777  0BC7  01E4               	clrf	_controlTransferState^(0+128)
  3778                           
  3779                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  3780  0BC8  307F               	movlw	127
  3781  0BC9  0020               	movlb	0	; select bank0
  3782  0BCA  00E1               	movwf	??_USBCtrlTrfSetupHandler
  3783  0BCB  086B               	movf	_pBDTEntryIn,w
  3784  0BCC  0086               	movwf	6
  3785  0BCD  0187               	clrf	7
  3786  0BCE  0861               	movf	??_USBCtrlTrfSetupHandler,w
  3787  0BCF  0581               	andwf	1,f
  3788                           
  3789                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  3790  0BD0  3004               	movlw	4
  3791  0BD1  00E1               	movwf	??_USBCtrlTrfSetupHandler
  3792  0BD2  0861               	movf	??_USBCtrlTrfSetupHandler,w
  3793  0BD3  06EB               	xorwf	_pBDTEntryIn,f
  3794                           
  3795                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  3796  0BD4  307F               	movlw	127
  3797  0BD5  00E1               	movwf	??_USBCtrlTrfSetupHandler
  3798  0BD6  086B               	movf	_pBDTEntryIn,w
  3799  0BD7  0086               	movwf	6
  3800  0BD8  0187               	clrf	7
  3801  0BD9  0861               	movf	??_USBCtrlTrfSetupHandler,w
  3802  0BDA  0581               	andwf	1,f
  3803                           
  3804                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  3805  0BDB  3004               	movlw	4
  3806  0BDC  00E1               	movwf	??_USBCtrlTrfSetupHandler
  3807  0BDD  0861               	movf	??_USBCtrlTrfSetupHandler,w
  3808  0BDE  06EB               	xorwf	_pBDTEntryIn,f
  3809                           
  3810                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  3811  0BDF  307F               	movlw	127
  3812  0BE0  00E1               	movwf	??_USBCtrlTrfSetupHandler
  3813  0BE1  087C               	movf	_pBDTEntryEP0OutNext,w
  3814  0BE2  0086               	movwf	6
  3815  0BE3  0187               	clrf	7
  3816  0BE4  0861               	movf	??_USBCtrlTrfSetupHandler,w
  3817  0BE5  0581               	andwf	1,f
  3818                           
  3819                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
  3820  0BE6  0021               	movlb	1	; select bank1
  3821  0BE7  01EB               	clrf	(_inPipes^(0+128)+2)
  3822                           
  3823                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
  3824  0BE8  01EC               	clrf	(_inPipes^(0+128)+3)
  3825  0BE9  01ED               	clrf	((_inPipes+1)^(0+128)+3)
  3826                           
  3827                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
  3828  0BEA  0022               	movlb	2	; select bank2
  3829  0BEB  01C2               	clrf	(_outPipes^(0+256)+2)
  3830                           
  3831                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
  3832  0BEC  01C3               	clrf	(_outPipes^(0+256)+3)
  3833  0BED  01C4               	clrf	((_outPipes+1)^(0+256)+3)
  3834                           
  3835                           ;usb_device.c: 2503: USBCheckStdRequest();
  3836  0BEE  3187  279E  318B   	fcall	_USBCheckStdRequest
  3837                           
  3838                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  3839  0BF1  3000               	movlw	0
  3840  0BF2  0020               	movlb	0	; select bank0
  3841  0BF3  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3842  0BF4  3003               	movlw	3
  3843  0BF5  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3844  0BF6  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3845  0BF7  3000               	movlw	0
  3846  0BF8  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3847  0BF9  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3848  0BFA  318B  2347  318B   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3849                           
  3850                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
  3851  0BFD  318F  277A         	fcall	_USBCtrlEPServiceComplete
  3852  0BFF  0008               	return
  3853  0C00                     __end_of_USBCtrlTrfSetupHandler:	
  3854                           
  3855                           	psect	text8
  3856  0F7A                     __ptext8:	
  3857 ;; *************** function _USBCtrlEPServiceComplete *****************
  3858 ;; Defined at:
  3859 ;;		line 1616 in file "../../../../../../framework/usb/src/usb_device.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;		None
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;		None               void
  3866 ;; Registers used:
  3867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3875 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3876 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3877 ;;Total ram usage:        2 bytes
  3878 ;; Hardware stack levels used:    1
  3879 ;; Hardware stack levels required when called:    3
  3880 ;; This function calls:
  3881 ;;		_USBCtrlEPAllowDataStage
  3882 ;;		_USBCtrlEPAllowStatusStage
  3883 ;; This function is called by:
  3884 ;;		_USBCtrlTrfSetupHandler
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           
  3889                           ;psect for function _USBCtrlEPServiceComplete
  3890  0F7A                     _USBCtrlEPServiceComplete:	
  3891                           
  3892                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  3893                           
  3894                           ;incstack = 0
  3895                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3896  0F7A  003D               	movlb	29	; select bank29
  3897  0F7B  120E               	bcf	14,4	;volatile
  3898                           
  3899                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  3900  0F7C  0021               	movlb	1	; select bank1
  3901  0F7D  1BEB               	btfsc	(_inPipes^(0+128)+2),7
  3902  0F7E  2FBC               	goto	l629
  3903                           
  3904                           ;usb_device.c: 1629: {
  3905                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  3906  0F7F  0022               	movlb	2	; select bank2
  3907  0F80  1FC2               	btfss	(_outPipes^(0+256)+2),7
  3908  0F81  2F91               	goto	l3282
  3909                           
  3910                           ;usb_device.c: 1631: {
  3911                           ;usb_device.c: 1632: controlTransferState = 2;
  3912  0F82  3002               	movlw	2
  3913  0F83  00F6               	movwf	??_USBCtrlEPServiceComplete
  3914  0F84  0876               	movf	??_USBCtrlEPServiceComplete,w
  3915  0F85  0021               	movlb	1	; select bank1
  3916  0F86  00E4               	movwf	_controlTransferState^(0+128)
  3917                           
  3918                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  3919  0F87  0022               	movlb	2	; select bank2
  3920  0F88  0853               	movf	_USBDeferOUTDataStagePackets^(0+256),w	;volatile
  3921  0F89  1D03               	btfss	3,2
  3922  0F8A  2F8D               	goto	l3278
  3923                           
  3924                           ;usb_device.c: 1644: {
  3925                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  3926  0F8B  318C  24EA         	fcall	_USBCtrlEPAllowDataStage
  3927  0F8D                     l3278:	
  3928                           
  3929                           ;usb_device.c: 1646: }
  3930                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  3931  0F8D  0022               	movlb	2	; select bank2
  3932  0F8E  01D6               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  3933                           
  3934                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  3935  0F8F  01D5               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  3936                           
  3937                           ;usb_device.c: 1652: }
  3938  0F90  0008               	return
  3939  0F91                     l3282:	
  3940                           
  3941                           ;usb_device.c: 1653: else
  3942                           ;usb_device.c: 1654: {
  3943                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  3944  0F91  3008               	movlw	8
  3945  0F92  00F6               	movwf	??_USBCtrlEPServiceComplete
  3946  0F93  0A7C               	incf	_pBDTEntryEP0OutNext,w
  3947  0F94  0086               	movwf	6
  3948  0F95  0187               	clrf	7
  3949  0F96  0876               	movf	??_USBCtrlEPServiceComplete,w
  3950  0F97  0081               	movwf	1
  3951                           
  3952                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3953  0F98  3040               	movlw	64
  3954  0F99  00F6               	movwf	??_USBCtrlEPServiceComplete
  3955  0F9A  3000               	movlw	0
  3956  0F9B  00F7               	movwf	??_USBCtrlEPServiceComplete+1
  3957  0F9C  087C               	movf	_pBDTEntryEP0OutNext,w
  3958  0F9D  3E02               	addlw	2
  3959  0F9E  0086               	movwf	6
  3960  0F9F  0187               	clrf	7
  3961  0FA0  0876               	movf	??_USBCtrlEPServiceComplete,w
  3962  0FA1  3FC0               	movwi [0]fsr1
  3963  0FA2  0877               	movf	??_USBCtrlEPServiceComplete+1,w
  3964  0FA3  3FC1               	movwi [1]fsr1
  3965                           
  3966                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  3967  0FA4  300C               	movlw	12
  3968  0FA5  00F6               	movwf	??_USBCtrlEPServiceComplete
  3969  0FA6  087C               	movf	_pBDTEntryEP0OutNext,w
  3970  0FA7  0086               	movwf	6
  3971  0FA8  0187               	clrf	7
  3972  0FA9  0876               	movf	??_USBCtrlEPServiceComplete,w
  3973  0FAA  0081               	movwf	1
  3974                           
  3975                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3976  0FAB  087C               	movf	_pBDTEntryEP0OutNext,w
  3977  0FAC  0086               	movwf	6
  3978  0FAD  0187               	clrf	7
  3979  0FAE  1781               	bsf	1,7
  3980                           
  3981                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  3982  0FAF  3004               	movlw	4
  3983  0FB0  00F6               	movwf	??_USBCtrlEPServiceComplete
  3984  0FB1  0020               	movlb	0	; select bank0
  3985  0FB2  086B               	movf	_pBDTEntryIn,w
  3986  0FB3  0086               	movwf	6
  3987  0FB4  0187               	clrf	7
  3988  0FB5  0876               	movf	??_USBCtrlEPServiceComplete,w
  3989  0FB6  0081               	movwf	1
  3990                           
  3991                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  3992  0FB7  086B               	movf	_pBDTEntryIn,w
  3993  0FB8  0086               	movwf	6
  3994  0FB9  0187               	clrf	7
  3995  0FBA  1781               	bsf	1,7
  3996                           
  3997                           ;usb_device.c: 1665: }
  3998                           ;usb_device.c: 1666: }
  3999  0FBB  0008               	return
  4000  0FBC                     l629:	
  4001                           
  4002                           ;usb_device.c: 1667: else
  4003                           ;usb_device.c: 1668: {
  4004                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  4005  0FBC  0020               	movlb	0	; select bank0
  4006  0FBD  1FC0               	btfss	64,7	;volatile
  4007  0FBE  2FD3               	goto	l3308
  4008                           
  4009                           ;usb_device.c: 1670: {
  4010                           ;usb_device.c: 1671: controlTransferState = 1;
  4011  0FBF  0021               	movlb	1	; select bank1
  4012  0FC0  01E4               	clrf	_controlTransferState^(0+128)
  4013  0FC1  0AE4               	incf	_controlTransferState^(0+128),f
  4014                           
  4015                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  4016  0FC2  0022               	movlb	2	; select bank2
  4017  0FC3  0852               	movf	_USBDeferINDataStagePackets^(0+256),w	;volatile
  4018  0FC4  1D03               	btfss	3,2
  4019  0FC5  2FC9               	goto	l3300
  4020                           
  4021                           ;usb_device.c: 1686: {
  4022                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  4023  0FC6  318C  24EA  318F   	fcall	_USBCtrlEPAllowDataStage
  4024  0FC9                     l3300:	
  4025                           
  4026                           ;usb_device.c: 1688: }
  4027                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  4028  0FC9  0022               	movlb	2	; select bank2
  4029  0FCA  01D6               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  4030                           
  4031                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  4032  0FCB  01D5               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  4033                           
  4034                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  4035  0FCC  0021               	movlb	1	; select bank1
  4036  0FCD  0862               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
  4037  0FCE  1D03               	btfss	3,2
  4038  0FCF  0008               	return
  4039                           
  4040                           ;usb_device.c: 1713: {
  4041                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  4042  0FD0  318D  25A5         	fcall	_USBCtrlEPAllowStatusStage
  4043                           
  4044                           ;usb_device.c: 1715: }
  4045                           ;usb_device.c: 1716: }
  4046  0FD2  0008               	return
  4047  0FD3                     l3308:	
  4048                           
  4049                           ;usb_device.c: 1717: else
  4050                           ;usb_device.c: 1718: {
  4051                           ;usb_device.c: 1729: controlTransferState = 2;
  4052  0FD3  3002               	movlw	2
  4053  0FD4  00F6               	movwf	??_USBCtrlEPServiceComplete
  4054  0FD5  0876               	movf	??_USBCtrlEPServiceComplete,w
  4055  0FD6  0021               	movlb	1	; select bank1
  4056  0FD7  00E4               	movwf	_controlTransferState^(0+128)
  4057                           
  4058                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  4059  0FD8  3008               	movlw	8
  4060  0FD9  00F6               	movwf	??_USBCtrlEPServiceComplete
  4061  0FDA  0A7C               	incf	_pBDTEntryEP0OutNext,w
  4062  0FDB  0086               	movwf	6
  4063  0FDC  0187               	clrf	7
  4064  0FDD  0876               	movf	??_USBCtrlEPServiceComplete,w
  4065  0FDE  0081               	movwf	1
  4066                           
  4067                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4068  0FDF  3040               	movlw	64
  4069  0FE0  00F6               	movwf	??_USBCtrlEPServiceComplete
  4070  0FE1  3000               	movlw	0
  4071  0FE2  00F7               	movwf	??_USBCtrlEPServiceComplete+1
  4072  0FE3  087C               	movf	_pBDTEntryEP0OutNext,w
  4073  0FE4  3E02               	addlw	2
  4074  0FE5  0086               	movwf	6
  4075  0FE6  0187               	clrf	7
  4076  0FE7  0876               	movf	??_USBCtrlEPServiceComplete,w
  4077  0FE8  3FC0               	movwi [0]fsr1
  4078  0FE9  0877               	movf	??_USBCtrlEPServiceComplete+1,w
  4079  0FEA  3FC1               	movwi [1]fsr1
  4080                           
  4081                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  4082  0FEB  3004               	movlw	4
  4083  0FEC  00F6               	movwf	??_USBCtrlEPServiceComplete
  4084  0FED  087C               	movf	_pBDTEntryEP0OutNext,w
  4085  0FEE  0086               	movwf	6
  4086  0FEF  0187               	clrf	7
  4087  0FF0  0876               	movf	??_USBCtrlEPServiceComplete,w
  4088  0FF1  0081               	movwf	1
  4089                           
  4090                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  4091  0FF2  087C               	movf	_pBDTEntryEP0OutNext,w
  4092  0FF3  0086               	movwf	6
  4093  0FF4  0187               	clrf	7
  4094  0FF5  1781               	bsf	1,7
  4095                           
  4096                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  4097  0FF6  0022               	movlb	2	; select bank2
  4098  0FF7  01D6               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  4099                           
  4100                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  4101  0FF8  01D5               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  4102                           
  4103                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  4104  0FF9  0021               	movlb	1	; select bank1
  4105  0FFA  0862               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
  4106  0FFB  1D03               	btfss	3,2
  4107  0FFC  0008               	return
  4108                           
  4109                           ;usb_device.c: 1741: {
  4110                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
  4111  0FFD  318D  25A5         	fcall	_USBCtrlEPAllowStatusStage
  4112  0FFF  0008               	return
  4113  1000                     __end_of_USBCtrlEPServiceComplete:	
  4114                           
  4115                           	psect	text9
  4116  0CEA                     __ptext9:	
  4117 ;; *************** function _USBCtrlEPAllowDataStage *****************
  4118 ;; Defined at:
  4119 ;;		line 1488 in file "../../../../../../framework/usb/src/usb_device.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;		None
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;		None
  4124 ;; Return value:  Size  Location     Type
  4125 ;;		None               void
  4126 ;; Registers used:
  4127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4135 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4136 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4137 ;;Total ram usage:        2 bytes
  4138 ;; Hardware stack levels used:    1
  4139 ;; Hardware stack levels required when called:    2
  4140 ;; This function calls:
  4141 ;;		_USBCtrlTrfTxService
  4142 ;; This function is called by:
  4143 ;;		_USBCtrlEPServiceComplete
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147                           
  4148                           ;psect for function _USBCtrlEPAllowDataStage
  4149  0CEA                     _USBCtrlEPAllowDataStage:	
  4150                           
  4151                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  4152                           
  4153                           ;incstack = 0
  4154                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4155  0CEA  0022               	movlb	2	; select bank2
  4156  0CEB  01D2               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  4157                           
  4158                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  4159  0CEC  01D3               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  4160                           
  4161                           ;usb_device.c: 1493: if(controlTransferState == 2)
  4162  0CED  3002               	movlw	2
  4163  0CEE  0021               	movlb	1	; select bank1
  4164  0CEF  0664               	xorwf	_controlTransferState^(0+128),w
  4165  0CF0  1D03               	btfss	3,2
  4166  0CF1  2D11               	goto	l3016
  4167                           
  4168                           ;usb_device.c: 1494: {
  4169                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  4170  0CF2  3008               	movlw	8
  4171  0CF3  00F4               	movwf	??_USBCtrlEPAllowDataStage
  4172  0CF4  0A7C               	incf	_pBDTEntryEP0OutNext,w
  4173  0CF5  0086               	movwf	6
  4174  0CF6  0187               	clrf	7
  4175  0CF7  0874               	movf	??_USBCtrlEPAllowDataStage,w
  4176  0CF8  0081               	movwf	1
  4177                           
  4178                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  4179  0CF9  3048               	movlw	72
  4180  0CFA  00F4               	movwf	??_USBCtrlEPAllowDataStage
  4181  0CFB  3000               	movlw	0
  4182  0CFC  00F5               	movwf	??_USBCtrlEPAllowDataStage+1
  4183  0CFD  087C               	movf	_pBDTEntryEP0OutNext,w
  4184  0CFE  3E02               	addlw	2
  4185  0CFF  0086               	movwf	6
  4186  0D00  0187               	clrf	7
  4187  0D01  0874               	movf	??_USBCtrlEPAllowDataStage,w
  4188  0D02  3FC0               	movwi [0]fsr1
  4189  0D03  0875               	movf	??_USBCtrlEPAllowDataStage+1,w
  4190  0D04  3FC1               	movwi [1]fsr1
  4191                           
  4192                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  4193  0D05  3048               	movlw	72
  4194  0D06  00F4               	movwf	??_USBCtrlEPAllowDataStage
  4195  0D07  087C               	movf	_pBDTEntryEP0OutNext,w
  4196  0D08  0086               	movwf	6
  4197  0D09  0187               	clrf	7
  4198  0D0A  0874               	movf	??_USBCtrlEPAllowDataStage,w
  4199  0D0B  0081               	movwf	1
  4200                           
  4201                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  4202  0D0C  087C               	movf	_pBDTEntryEP0OutNext,w
  4203  0D0D  0086               	movwf	6
  4204  0D0E  0187               	clrf	7
  4205  0D0F  1781               	bsf	1,7
  4206                           
  4207                           ;usb_device.c: 1500: }
  4208  0D10  0008               	return
  4209  0D11                     l3016:	
  4210                           
  4211                           ;usb_device.c: 1501: else
  4212                           ;usb_device.c: 1502: {
  4213                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  4214  0D11  086D               	movf	((_inPipes+1)^(0+128)+3),w
  4215  0D12  0020               	movlb	0	; select bank0
  4216  0D13  0247               	subwf	71,w	;volatile
  4217  0D14  1D03               	skipz
  4218  0D15  2D1A               	goto	u2225
  4219  0D16  0021               	movlb	1	; select bank1
  4220  0D17  086C               	movf	(_inPipes^(0+128)+3),w
  4221  0D18  0020               	movlb	0	; select bank0
  4222  0D19  0246               	subwf	70,w	;volatile
  4223  0D1A                     u2225:	
  4224  0D1A  1803               	skipnc
  4225  0D1B  2D23               	goto	l3020
  4226                           
  4227                           ;usb_device.c: 1506: {
  4228                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  4229  0D1C  0847               	movf	71,w	;volatile
  4230  0D1D  0021               	movlb	1	; select bank1
  4231  0D1E  00ED               	movwf	((_inPipes+1)^(0+128)+3)
  4232  0D1F  0020               	movlb	0	; select bank0
  4233  0D20  0846               	movf	70,w	;volatile
  4234  0D21  0021               	movlb	1	; select bank1
  4235  0D22  00EC               	movwf	(_inPipes^(0+128)+3)
  4236  0D23                     l3020:	
  4237                           
  4238                           ;usb_device.c: 1508: }
  4239                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  4240  0D23  318E  260D         	fcall	_USBCtrlTrfTxService
  4241                           
  4242                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  4243  0D25  3048               	movlw	72
  4244  0D26  00F4               	movwf	??_USBCtrlEPAllowDataStage
  4245  0D27  3000               	movlw	0
  4246  0D28  00F5               	movwf	??_USBCtrlEPAllowDataStage+1
  4247  0D29  0020               	movlb	0	; select bank0
  4248  0D2A  086B               	movf	_pBDTEntryIn,w
  4249  0D2B  3E02               	addlw	2
  4250  0D2C  0086               	movwf	6
  4251  0D2D  0187               	clrf	7
  4252  0D2E  0874               	movf	??_USBCtrlEPAllowDataStage,w
  4253  0D2F  3FC0               	movwi [0]fsr1
  4254  0D30  0875               	movf	??_USBCtrlEPAllowDataStage+1,w
  4255  0D31  3FC1               	movwi [1]fsr1
  4256                           
  4257                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  4258  0D32  3048               	movlw	72
  4259  0D33  00F4               	movwf	??_USBCtrlEPAllowDataStage
  4260  0D34  086B               	movf	_pBDTEntryIn,w
  4261  0D35  0086               	movwf	6
  4262  0D36  0187               	clrf	7
  4263  0D37  0874               	movf	??_USBCtrlEPAllowDataStage,w
  4264  0D38  0081               	movwf	1
  4265                           
  4266                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  4267  0D39  086B               	movf	_pBDTEntryIn,w
  4268  0D3A  0086               	movwf	6
  4269  0D3B  0187               	clrf	7
  4270  0D3C  1781               	bsf	1,7
  4271  0D3D  0008               	return
  4272  0D3E                     __end_of_USBCtrlEPAllowDataStage:	
  4273                           
  4274                           	psect	text10
  4275  079E                     __ptext10:	
  4276 ;; *************** function _USBCheckStdRequest *****************
  4277 ;; Defined at:
  4278 ;;		line 2689 in file "../../../../../../framework/usb/src/usb_device.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;		None
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;		None
  4283 ;; Return value:  Size  Location     Type
  4284 ;;		None               void
  4285 ;; Registers used:
  4286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4294 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4295 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4296 ;;Total ram usage:        1 bytes
  4297 ;; Hardware stack levels used:    1
  4298 ;; Hardware stack levels required when called:    6
  4299 ;; This function calls:
  4300 ;;		_USBStdFeatureReqHandler
  4301 ;;		_USBStdGetDscHandler
  4302 ;;		_USBStdGetStatusHandler
  4303 ;;		_USBStdSetCfgHandler
  4304 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4305 ;; This function is called by:
  4306 ;;		_USBCtrlTrfSetupHandler
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310                           
  4311                           ;psect for function _USBCheckStdRequest
  4312  079E                     _USBCheckStdRequest:	
  4313                           
  4314                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
  4315                           
  4316                           ;incstack = 0
  4317                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4318  079E  0020               	movlb	0	; select bank0
  4319  079F  0E40               	swapf	64,w	;volatile
  4320  07A0  0C89               	rrf	9,f
  4321  07A1  3903               	andlw	3
  4322  07A2  3A00               	xorlw	0
  4323  07A3  1D03               	btfss	3,2
  4324  07A4  0008               	return
  4325  07A5  2FE9               	goto	l4408
  4326  07A6                     l758:	
  4327                           ;usb_device.c: 2694: {
  4328                           ;usb_device.c: 2695: case 5:
  4329                           
  4330                           ;usb_device.c: 2693: switch(SetupPkt.bRequest)
  4331                           
  4332                           
  4333                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
  4334  07A6  0021               	movlb	1	; select bank1
  4335  07A7  17EB               	bsf	(_inPipes^(0+128)+2),7
  4336                           
  4337                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
  4338  07A8  3008               	movlw	8
  4339  07A9  0020               	movlb	0	; select bank0
  4340  07AA  00E0               	movwf	??_USBCheckStdRequest
  4341  07AB  0860               	movf	??_USBCheckStdRequest,w
  4342  07AC  00ED               	movwf	_USBDeviceState
  4343                           
  4344                           ;usb_device.c: 2699: break;
  4345  07AD  0008               	return
  4346  07AE                     l4378:	
  4347                           ;usb_device.c: 2700: case 6:
  4348                           
  4349                           
  4350                           ;usb_device.c: 2701: USBStdGetDscHandler();
  4351  07AE  318E  267C         	fcall	_USBStdGetDscHandler
  4352                           
  4353                           ;usb_device.c: 2702: break;
  4354  07B0  0008               	return
  4355  07B1                     l4380:	
  4356                           ;usb_device.c: 2703: case 9:
  4357                           
  4358                           
  4359                           ;usb_device.c: 2704: USBStdSetCfgHandler();
  4360  07B1  318E  26FB         	fcall	_USBStdSetCfgHandler
  4361                           
  4362                           ;usb_device.c: 2705: break;
  4363  07B3  0008               	return
  4364  07B4                     l4382:	
  4365                           ;usb_device.c: 2706: case 8:
  4366                           
  4367                           
  4368                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  4369  07B4  30EE               	movlw	low _USBActiveConfiguration
  4370  07B5  0021               	movlb	1	; select bank1
  4371  07B6  00E9               	movwf	_inPipes^(0+128)
  4372  07B7  3000               	movlw	high _USBActiveConfiguration
  4373  07B8  00EA               	movwf	(_inPipes+1)^(0+128)
  4374                           
  4375                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  4376  07B9  146B               	bsf	(_inPipes^(0+128)+2),0
  4377                           
  4378                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
  4379  07BA  01EC               	clrf	(_inPipes^(0+128)+3)
  4380  07BB  0AEC               	incf	(_inPipes^(0+128)+3),f
  4381                           
  4382                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  4383  07BC  17EB               	bsf	(_inPipes^(0+128)+2),7
  4384                           
  4385                           ;usb_device.c: 2711: break;
  4386  07BD  0008               	return
  4387  07BE                     l4390:	
  4388                           ;usb_device.c: 2712: case 0:
  4389                           
  4390                           
  4391                           ;usb_device.c: 2713: USBStdGetStatusHandler();
  4392  07BE  318C  244D         	fcall	_USBStdGetStatusHandler
  4393                           
  4394                           ;usb_device.c: 2714: break;
  4395  07C0  0008               	return
  4396  07C1                     l4392:	
  4397                           ;usb_device.c: 2715: case 1:
  4398                           
  4399                           
  4400                           ;usb_device.c: 2716: case 3:
  4401                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
  4402  07C1  3181  217F         	fcall	_USBStdFeatureReqHandler
  4403                           
  4404                           ;usb_device.c: 2718: break;
  4405  07C3  0008               	return
  4406  07C4                     l4394:	
  4407                           ;usb_device.c: 2719: case 10:
  4408                           
  4409                           
  4410                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  4411  07C4  30EF               	movlw	(low (_USBAlternateInterface| 0))& (0+255)
  4412  07C5  0020               	movlb	0	; select bank0
  4413  07C6  0744               	addwf	68,w	;volatile
  4414  07C7  00E0               	movwf	??_USBCheckStdRequest
  4415  07C8  0860               	movf	??_USBCheckStdRequest,w
  4416  07C9  0021               	movlb	1	; select bank1
  4417  07CA  00E9               	movwf	_inPipes^(0+128)
  4418  07CB  3000               	movlw	0
  4419  07CC  00EA               	movwf	(_inPipes+1)^(0+128)
  4420                           
  4421                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  4422  07CD  146B               	bsf	(_inPipes^(0+128)+2),0
  4423                           
  4424                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
  4425  07CE  01EC               	clrf	(_inPipes^(0+128)+3)
  4426  07CF  0AEC               	incf	(_inPipes^(0+128)+3),f
  4427                           
  4428                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  4429  07D0  17EB               	bsf	(_inPipes^(0+128)+2),7
  4430                           
  4431                           ;usb_device.c: 2724: break;
  4432  07D1  0008               	return
  4433  07D2                     l767:	
  4434                           ;usb_device.c: 2725: case 11:
  4435                           
  4436                           
  4437                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
  4438  07D2  0021               	movlb	1	; select bank1
  4439  07D3  17EB               	bsf	(_inPipes^(0+128)+2),7
  4440                           
  4441                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  4442  07D4  0020               	movlb	0	; select bank0
  4443  07D5  0842               	movf	66,w	;volatile
  4444  07D6  00E0               	movwf	??_USBCheckStdRequest
  4445  07D7  0844               	movf	68,w	;volatile
  4446  07D8  3EEF               	addlw	(low (_USBAlternateInterface| 0))& (0+255)
  4447  07D9  0086               	movwf	6
  4448  07DA  0187               	clrf	7
  4449  07DB  0860               	movf	??_USBCheckStdRequest,w
  4450  07DC  0081               	movwf	1
  4451                           
  4452                           ;usb_device.c: 2728: break;
  4453  07DD  0008               	return
  4454  07DE                     l4404:	
  4455                           ;usb_device.c: 2729: case 7:
  4456                           
  4457                           
  4458                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  4459  07DE  3000               	movlw	0
  4460  07DF  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4461  07E0  3002               	movlw	2
  4462  07E1  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4463  07E2  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4464  07E3  3000               	movlw	0
  4465  07E4  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4466  07E5  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4467  07E6  318B  2347         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4468                           
  4469                           ;usb_device.c: 2735: }
  4470                           
  4471                           ;usb_device.c: 2734: break;
  4472                           
  4473                           ;usb_device.c: 2733: default:
  4474                           
  4475                           ;usb_device.c: 2732: case 12:
  4476                           
  4477                           ;usb_device.c: 2731: break;
  4478  07E8  0008               	return
  4479  07E9                     l4408:	
  4480  07E9  0020               	movlb	0	; select bank0
  4481  07EA  0841               	movf	65,w	;volatile
  4482                           
  4483                           ; Switch size 1, requested type "space"
  4484                           ; Number of cases is 11, Range of values is 0 to 12
  4485                           ; switch strategies available:
  4486                           ; Name         Instructions Cycles
  4487                           ; direct_byte           32     6 (fixed)
  4488                           ; simple_byte           34    18 (average)
  4489                           ; jumptable            260     6 (fixed)
  4490                           ;	Chosen strategy is direct_byte
  4491  07EB  0084               	movwf	4
  4492  07EC  300D               	movlw	13
  4493  07ED  0204               	subwf	4,w
  4494  07EE  1803               	skipnc
  4495  07EF  0008               	return
  4496  07F0  3188               	movlp	high S4768
  4497  07F1  3504               	lslf	4,w
  4498  07F2  3E00               	addlw	low S4768
  4499  07F3  0082               	movwf	2
  4500  07F4                     l756:	
  4501  07F4  0008               	return
  4502  07F5                     __end_of_USBCheckStdRequest:	
  4503                           
  4504                           	psect	swtext1
  4505  0800                     __pswtext1:	
  4506  0800                     S4768:	
  4507  0800  3187  2FBE         	ljmp	l4390
  4508  0802  3187  2FC1         	ljmp	l4392
  4509  0804  3187  2FF4         	ljmp	l756
  4510  0806  3187  2FC1         	ljmp	l4392
  4511  0808  3187  2FF4         	ljmp	l756
  4512  080A  3187  2FA6         	ljmp	l758
  4513  080C  3187  2FAE         	ljmp	l4378
  4514  080E  3187  2FDE         	ljmp	l4404
  4515  0810  3187  2FB4         	ljmp	l4382
  4516  0812  3187  2FB1         	ljmp	l4380
  4517  0814  3187  2FC4         	ljmp	l4394
  4518  0816  3187  2FD2         	ljmp	l767
  4519  0818  3187  2FF4         	ljmp	l756
  4520                           
  4521                           	psect	text11
  4522  0EFB                     __ptext11:	
  4523 ;; *************** function _USBStdSetCfgHandler *****************
  4524 ;; Defined at:
  4525 ;;		line 1968 in file "../../../../../../framework/usb/src/usb_device.c"
  4526 ;; Parameters:    Size  Location     Type
  4527 ;;		None
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;  p               2   10[BANK0 ] PTR unsigned char 
  4530 ;;		 -> UEP1(1), 
  4531 ;;  i               1   12[BANK0 ] unsigned char 
  4532 ;;  i               1   13[BANK0 ] unsigned char 
  4533 ;; Return value:  Size  Location     Type
  4534 ;;		None               void
  4535 ;; Registers used:
  4536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4543 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4544 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4545 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4546 ;;Total ram usage:        5 bytes
  4547 ;; Hardware stack levels used:    1
  4548 ;; Hardware stack levels required when called:    5
  4549 ;; This function calls:
  4550 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4551 ;;		_memset
  4552 ;; This function is called by:
  4553 ;;		_USBCheckStdRequest
  4554 ;; This function uses a non-reentrant model
  4555 ;;
  4556                           
  4557                           
  4558                           ;psect for function _USBStdSetCfgHandler
  4559  0EFB                     _USBStdSetCfgHandler:	
  4560                           
  4561                           ;usb_device.c: 1970: uint8_t i;
  4562                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  4563                           
  4564                           ;incstack = 0
  4565                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4566  0EFB  0021               	movlb	1	; select bank1
  4567  0EFC  17EB               	bsf	(_inPipes^(0+128)+2),7
  4568                           
  4569                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 
      +                          0; };
  4570  0EFD  300E               	movlw	14
  4571  0EFE  0020               	movlb	0	; select bank0
  4572  0EFF  00DB               	movwf	USBStdSetCfgHandler@p+1
  4573  0F00  3099               	movlw	153
  4574  0F01  00DA               	movwf	USBStdSetCfgHandler@p
  4575  0F02  01DC               	clrf	USBStdSetCfgHandler@i_1990
  4576  0F03  085C               	movf	USBStdSetCfgHandler@i_1990,w
  4577  0F04  1D03               	btfss	3,2
  4578  0F05  2F16               	goto	l4256
  4579  0F06                     l4248:	
  4580  0F06  085A               	movf	USBStdSetCfgHandler@p,w
  4581  0F07  0086               	movwf	6
  4582  0F08  085B               	movf	USBStdSetCfgHandler@p+1,w
  4583  0F09  0087               	movwf	7
  4584  0F0A  0181               	clrf	1
  4585  0F0B  3001               	movlw	1
  4586  0F0C  07DA               	addwf	USBStdSetCfgHandler@p,f
  4587  0F0D  3000               	movlw	0
  4588  0F0E  3DDB               	addwfc	USBStdSetCfgHandler@p+1,f
  4589  0F0F  3001               	movlw	1
  4590  0F10  00FB               	movwf	??_USBStdSetCfgHandler
  4591  0F11  087B               	movf	??_USBStdSetCfgHandler,w
  4592  0F12  07DC               	addwf	USBStdSetCfgHandler@i_1990,f
  4593  0F13  085C               	movf	USBStdSetCfgHandler@i_1990,w
  4594  0F14  1903               	btfsc	3,2
  4595  0F15  2F06               	goto	l4248
  4596  0F16                     l4256:	
  4597                           
  4598                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  4599  0F16  3000               	movlw	0
  4600  0F17  00F1               	movwf	memset@c
  4601  0F18  00F2               	movwf	memset@c+1
  4602  0F19  3020               	movlw	32
  4603  0F1A  00F3               	movwf	memset@n
  4604  0F1B  3000               	movlw	0
  4605  0F1C  00F4               	movwf	memset@n+1
  4606  0F1D  3020               	movlw	32
  4607  0F1E  3189  21C5  318E   	fcall	_memset
  4608                           
  4609                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  4610  0F21  003D               	movlb	29	; select bank29
  4611  0F22  170E               	bsf	14,6	;volatile
  4612                           
  4613                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(1+1u); i++)
  4614  0F23  0020               	movlb	0	; select bank0
  4615  0F24  01DD               	clrf	USBStdSetCfgHandler@i
  4616  0F25  3002               	movlw	2
  4617  0F26  025D               	subwf	USBStdSetCfgHandler@i,w
  4618  0F27  1803               	btfsc	3,0
  4619  0F28  2F3D               	goto	l4272
  4620  0F29                     l4266:	
  4621                           
  4622                           ;usb_device.c: 1988: {
  4623                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  4624  0F29  085D               	movf	USBStdSetCfgHandler@i,w
  4625  0F2A  3E47               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4626  0F2B  0086               	movwf	6
  4627  0F2C  3001               	movlw	1	; select bank2/3
  4628  0F2D  0087               	movwf	7
  4629  0F2E  0181               	clrf	1
  4630                           
  4631                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  4632  0F2F  085D               	movf	USBStdSetCfgHandler@i,w
  4633  0F30  3E49               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4634  0F31  0086               	movwf	6
  4635  0F32  3001               	movlw	1	; select bank2/3
  4636  0F33  0087               	movwf	7
  4637  0F34  0181               	clrf	1
  4638  0F35  3001               	movlw	1
  4639  0F36  00FB               	movwf	??_USBStdSetCfgHandler
  4640  0F37  087B               	movf	??_USBStdSetCfgHandler,w
  4641  0F38  07DD               	addwf	USBStdSetCfgHandler@i,f
  4642  0F39  3002               	movlw	2
  4643  0F3A  025D               	subwf	USBStdSetCfgHandler@i,w
  4644  0F3B  1C03               	skipc
  4645  0F3C  2F29               	goto	l4266
  4646  0F3D                     l4272:	
  4647                           
  4648                           ;usb_device.c: 1991: }
  4649                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,1);
  4650  0F3D  3000               	movlw	0
  4651  0F3E  00F1               	movwf	memset@c
  4652  0F3F  00F2               	movwf	memset@c+1
  4653  0F40  3001               	movlw	1
  4654  0F41  00F3               	movwf	memset@n
  4655  0F42  3000               	movlw	0
  4656  0F43  00F4               	movwf	memset@n+1
  4657  0F44  30EF               	movlw	(low (_USBAlternateInterface| 0))& (0+255)
  4658  0F45  3189  21C5  318E   	fcall	_memset
  4659                           
  4660                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  4661  0F48  003D               	movlb	29	; select bank29
  4662  0F49  130E               	bcf	14,6	;volatile
  4663                           
  4664                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  4665  0F4A  3028               	movlw	40
  4666  0F4B  00FB               	movwf	??_USBStdSetCfgHandler
  4667  0F4C  087B               	movf	??_USBStdSetCfgHandler,w
  4668  0F4D  0020               	movlb	0	; select bank0
  4669  0F4E  00EB               	movwf	_pBDTEntryIn
  4670                           
  4671                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  4672  0F4F  3020               	movlw	32
  4673  0F50  00FB               	movwf	??_USBStdSetCfgHandler
  4674  0F51  087B               	movf	??_USBStdSetCfgHandler,w
  4675  0F52  00EE               	movwf	_pBDTEntryEP0OutCurrent
  4676                           
  4677                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  4678  0F53  086E               	movf	_pBDTEntryEP0OutCurrent,w
  4679  0F54  00FB               	movwf	??_USBStdSetCfgHandler
  4680  0F55  087B               	movf	??_USBStdSetCfgHandler,w
  4681  0F56  00FC               	movwf	_pBDTEntryEP0OutNext
  4682                           
  4683                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  4684  0F57  0842               	movf	66,w	;volatile
  4685  0F58  00FB               	movwf	??_USBStdSetCfgHandler
  4686  0F59  087B               	movf	??_USBStdSetCfgHandler,w
  4687  0F5A  0021               	movlb	1	; select bank1
  4688  0F5B  00EE               	movwf	_USBActiveConfiguration^(0+128)
  4689                           
  4690                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  4691  0F5C  086E               	movf	_USBActiveConfiguration^(0+128),w
  4692  0F5D  1D03               	btfss	3,2
  4693  0F5E  2F65               	goto	l4288
  4694                           
  4695                           ;usb_device.c: 2010: {
  4696                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  4697  0F5F  3010               	movlw	16
  4698  0F60  00FB               	movwf	??_USBStdSetCfgHandler
  4699  0F61  087B               	movf	??_USBStdSetCfgHandler,w
  4700  0F62  0020               	movlb	0	; select bank0
  4701  0F63  00ED               	movwf	_USBDeviceState
  4702                           
  4703                           ;usb_device.c: 2013: }
  4704  0F64  0008               	return
  4705  0F65                     l4288:	
  4706                           
  4707                           ;usb_device.c: 2014: else
  4708                           ;usb_device.c: 2015: {
  4709                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  4710  0F65  3000               	movlw	0
  4711  0F66  0020               	movlb	0	; select bank0
  4712  0F67  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4713  0F68  3001               	movlw	1
  4714  0F69  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4715  0F6A  30EE               	movlw	(low (_USBActiveConfiguration| 0))& (0+255)
  4716  0F6B  00FB               	movwf	??_USBStdSetCfgHandler
  4717  0F6C  087B               	movf	??_USBStdSetCfgHandler,w
  4718  0F6D  00D7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4719  0F6E  3001               	movlw	1
  4720  0F6F  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4721  0F70  3000               	movlw	0
  4722  0F71  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4723  0F72  318B  2347         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4724                           
  4725                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  4726  0F74  3020               	movlw	32
  4727  0F75  00FB               	movwf	??_USBStdSetCfgHandler
  4728  0F76  087B               	movf	??_USBStdSetCfgHandler,w
  4729  0F77  0020               	movlb	0	; select bank0
  4730  0F78  00ED               	movwf	_USBDeviceState
  4731  0F79  0008               	return
  4732  0F7A                     __end_of_USBStdSetCfgHandler:	
  4733                           
  4734                           	psect	text12
  4735  09C5                     __ptext12:	
  4736 ;; *************** function _memset *****************
  4737 ;; Defined at:
  4738 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\memset.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;  p1              1    wreg     PTR void 
  4741 ;;		 -> USBAlternateInterface(1), BDT(32), 
  4742 ;;  c               2    1[COMMON] int 
  4743 ;;  n               2    3[COMMON] unsigned int 
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;  p1              1    7[COMMON] PTR void 
  4746 ;;		 -> USBAlternateInterface(1), BDT(32), 
  4747 ;;  p               1    6[COMMON] PTR unsigned char 
  4748 ;;		 -> USBAlternateInterface(1), BDT(32), 
  4749 ;; Return value:  Size  Location     Type
  4750 ;;                  1    wreg      PTR void 
  4751 ;; Registers used:
  4752 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4753 ;; Tracked objects:
  4754 ;;		On entry : 0/0
  4755 ;;		On exit  : 0/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4758 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4759 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4760 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4761 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4762 ;;Total ram usage:        7 bytes
  4763 ;; Hardware stack levels used:    1
  4764 ;; Hardware stack levels required when called:    1
  4765 ;; This function calls:
  4766 ;;		Nothing
  4767 ;; This function is called by:
  4768 ;;		_USBStdSetCfgHandler
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           
  4773                           ;psect for function _memset
  4774  09C5                     _memset:	
  4775                           
  4776                           ;incstack = 0
  4777                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  4778                           ;memset@p1 stored from wreg
  4779  09C5  00F7               	movwf	memset@p1
  4780  09C6  0877               	movf	memset@p1,w
  4781  09C7  00F5               	movwf	??_memset
  4782  09C8  0875               	movf	??_memset,w
  4783  09C9  00F6               	movwf	memset@p
  4784  09CA                     l2966:	
  4785  09CA  3001               	movlw	1
  4786  09CB  02F3               	subwf	memset@n,f
  4787  09CC  3000               	movlw	0
  4788  09CD  3BF4               	subwfb	memset@n+1,f
  4789  09CE  0A73               	incf	memset@n,w
  4790  09CF  1903               	btfsc	3,2
  4791  09D0  0A74               	incf	memset@n+1,w
  4792  09D1  1903               	btfsc	3,2
  4793  09D2  0008               	return
  4794  09D3  0871               	movf	memset@c,w
  4795  09D4  00F5               	movwf	??_memset
  4796  09D5  0876               	movf	memset@p,w
  4797  09D6  0086               	movwf	6
  4798  09D7  0187               	clrf	7
  4799  09D8  0875               	movf	??_memset,w
  4800  09D9  0081               	movwf	1
  4801  09DA  3001               	movlw	1
  4802  09DB  00F5               	movwf	??_memset
  4803  09DC  0875               	movf	??_memset,w
  4804  09DD  07F6               	addwf	memset@p,f
  4805  09DE  29CA               	goto	l2966
  4806  09DF                     __end_of_memset:	
  4807                           ;	Return value of _memset is never used
  4808                           
  4809                           
  4810                           	psect	text13
  4811  0C4D                     __ptext13:	
  4812 ;; *************** function _USBStdGetStatusHandler *****************
  4813 ;; Defined at:
  4814 ;;		line 2129 in file "../../../../../../framework/usb/src/usb_device.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;		None
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;  p               1    2[COMMON] PTR struct __BDT
  4819 ;;		 -> BDT(32), NULL(0), 
  4820 ;; Return value:  Size  Location     Type
  4821 ;;		None               void
  4822 ;; Registers used:
  4823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4830 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4831 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4832 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4833 ;;Total ram usage:        2 bytes
  4834 ;; Hardware stack levels used:    1
  4835 ;; Hardware stack levels required when called:    1
  4836 ;; This function calls:
  4837 ;;		Nothing
  4838 ;; This function is called by:
  4839 ;;		_USBCheckStdRequest
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           
  4844                           ;psect for function _USBStdGetStatusHandler
  4845  0C4D                     _USBStdGetStatusHandler:	
  4846                           
  4847                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  4848                           
  4849                           ;incstack = 0
  4850                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  4851  0C4D  0020               	movlb	0	; select bank0
  4852  0C4E  01C8               	clrf	72	;volatile
  4853                           
  4854                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  4855  0C4F  01C9               	clrf	73	;volatile
  4856                           
  4857                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  4858  0C50  2C81               	goto	l3130
  4859  0C51                     l694:	
  4860                           ;usb_device.c: 2135: {
  4861                           ;usb_device.c: 2136: case (0x00):
  4862                           
  4863                           
  4864                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  4865  0C51  0021               	movlb	1	; select bank1
  4866  0C52  17EB               	bsf	(_inPipes^(0+128)+2),7
  4867                           
  4868                           ;usb_device.c: 2145: }
  4869                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  4870                           
  4871                           ;usb_device.c: 2143: {
  4872                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
  4873                           
  4874                           ;usb_device.c: 2142: if(0 == 1)
  4875  0C53  0022               	movlb	2	; select bank2
  4876  0C54  0350               	decf	_RemoteWakeup^(0+256),w
  4877  0C55  1D03               	btfss	3,2
  4878  0C56  2C8D               	goto	l697
  4879                           
  4880                           ;usb_device.c: 2148: {
  4881                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  4882  0C57  0020               	movlb	0	; select bank0
  4883  0C58  14C8               	bsf	72,1	;volatile
  4884                           
  4885                           ;usb_device.c: 2150: }
  4886                           ;usb_device.c: 2151: break;
  4887  0C59  2C8D               	goto	l697
  4888  0C5A                     l698:	
  4889                           ;usb_device.c: 2152: case (0x01):
  4890                           
  4891                           
  4892                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  4893  0C5A  0021               	movlb	1	; select bank1
  4894  0C5B  17EB               	bsf	(_inPipes^(0+128)+2),7
  4895                           
  4896                           ;usb_device.c: 2154: break;
  4897  0C5C  2C8D               	goto	l697
  4898  0C5D                     l699:	
  4899                           ;usb_device.c: 2155: case (0x02):
  4900                           
  4901                           
  4902                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  4903  0C5D  0021               	movlb	1	; select bank1
  4904  0C5E  17EB               	bsf	(_inPipes^(0+128)+2),7
  4905                           
  4906                           ;usb_device.c: 2160: {
  4907                           ;usb_device.c: 2161: BDT_ENTRY *p;
  4908                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  4909  0C5F  0020               	movlb	0	; select bank0
  4910  0C60  1BC4               	btfsc	68,7	;volatile
  4911  0C61  2C69               	goto	l3120
  4912                           
  4913                           ;usb_device.c: 2164: {
  4914                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  4915  0C62  0844               	movf	68,w	;volatile
  4916  0C63  390F               	andlw	15
  4917  0C64  3E4D               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4918  0C65  0086               	movwf	6
  4919  0C66  3001               	movlw	1	; select bank2/3
  4920  0C67  0087               	movwf	7
  4921  0C68  2C6E               	goto	L3
  4922  0C69                     l3120:	
  4923                           ;usb_device.c: 2166: }
  4924                           
  4925                           
  4926                           ;usb_device.c: 2167: else
  4927                           ;usb_device.c: 2168: {
  4928                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  4929  0C69  0844               	movf	68,w	;volatile
  4930  0C6A  390F               	andlw	15
  4931  0C6B  3E6B               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  4932  0C6C  0086               	movwf	6
  4933  0C6D  0187               	clrf	7
  4934  0C6E                     L3:	
  4935  0C6E  0801               	movf	1,w
  4936  0C6F  00F1               	movwf	??_USBStdGetStatusHandler
  4937  0C70  0871               	movf	??_USBStdGetStatusHandler,w
  4938  0C71  00F2               	movwf	USBStdGetStatusHandler@p
  4939                           
  4940                           ;usb_device.c: 2170: }
  4941                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  4942  0C72  0872               	movf	USBStdGetStatusHandler@p,w
  4943  0C73  0086               	movwf	6
  4944  0C74  0187               	clrf	7
  4945  0C75  1F81               	btfss	1,7
  4946  0C76  2C8D               	goto	l697
  4947  0C77  0872               	movf	USBStdGetStatusHandler@p,w
  4948  0C78  0086               	movwf	6
  4949  0C79  0187               	clrf	7
  4950  0C7A  1D01               	btfss	1,2
  4951  0C7B  2C8D               	goto	l697
  4952                           
  4953                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  4954  0C7C  3001               	movlw	1
  4955  0C7D  00F1               	movwf	??_USBStdGetStatusHandler
  4956  0C7E  0871               	movf	??_USBStdGetStatusHandler,w
  4957  0C7F  00C8               	movwf	72	;volatile
  4958                           
  4959                           ;usb_device.c: 2175: }
  4960                           ;usb_device.c: 2176: }
  4961                           
  4962                           ;usb_device.c: 2174: break;
  4963  0C80  2C8D               	goto	l697
  4964  0C81                     l3130:	
  4965  0C81  0840               	movf	64,w	;volatile
  4966  0C82  391F               	andlw	31
  4967                           
  4968                           ; Switch size 1, requested type "space"
  4969                           ; Number of cases is 3, Range of values is 0 to 2
  4970                           ; switch strategies available:
  4971                           ; Name         Instructions Cycles
  4972                           ; simple_byte           10     6 (average)
  4973                           ; direct_byte           12     6 (fixed)
  4974                           ; jumptable            260     6 (fixed)
  4975                           ;	Chosen strategy is simple_byte
  4976  0C83  3A00               	xorlw	0	; case 0
  4977  0C84  1903               	skipnz
  4978  0C85  2C51               	goto	l694
  4979  0C86  3A01               	xorlw	1	; case 1
  4980  0C87  1903               	skipnz
  4981  0C88  2C5A               	goto	l698
  4982  0C89  3A03               	xorlw	3	; case 2
  4983  0C8A  1903               	skipnz
  4984  0C8B  2C5D               	goto	l699
  4985  0C8C  2C8D               	goto	l697
  4986  0C8D                     l697:	
  4987                           
  4988                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  4989  0C8D  0021               	movlb	1	; select bank1
  4990  0C8E  1FEB               	btfss	(_inPipes^(0+128)+2),7
  4991  0C8F  0008               	return
  4992                           
  4993                           ;usb_device.c: 2179: {
  4994                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  4995  0C90  3048               	movlw	72
  4996  0C91  00E9               	movwf	_inPipes^(0+128)
  4997  0C92  3000               	movlw	0
  4998  0C93  00EA               	movwf	(_inPipes+1)^(0+128)
  4999                           
  5000                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5001  0C94  146B               	bsf	(_inPipes^(0+128)+2),0
  5002                           
  5003                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  5004  0C95  3002               	movlw	2
  5005  0C96  00F1               	movwf	??_USBStdGetStatusHandler
  5006  0C97  0871               	movf	??_USBStdGetStatusHandler,w
  5007  0C98  00EC               	movwf	(_inPipes^(0+128)+3)
  5008  0C99  0008               	return
  5009  0C9A                     __end_of_USBStdGetStatusHandler:	
  5010                           
  5011                           	psect	text14
  5012  0E7C                     __ptext14:	
  5013 ;; *************** function _USBStdGetDscHandler *****************
  5014 ;; Defined at:
  5015 ;;		line 2043 in file "../../../../../../framework/usb/src/usb_device.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;		None
  5018 ;; Auto vars:     Size  Location     Type
  5019 ;;		None
  5020 ;; Return value:  Size  Location     Type
  5021 ;;		None               void
  5022 ;; Registers used:
  5023 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5031 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5032 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5033 ;;Total ram usage:        3 bytes
  5034 ;; Hardware stack levels used:    1
  5035 ;; Hardware stack levels required when called:    1
  5036 ;; This function calls:
  5037 ;;		Nothing
  5038 ;; This function is called by:
  5039 ;;		_USBCheckStdRequest
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           
  5044                           ;psect for function _USBStdGetDscHandler
  5045  0E7C                     _USBStdGetDscHandler:	
  5046                           
  5047                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  5048                           
  5049                           ;incstack = 0
  5050                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  5051  0E7C  3080               	movlw	128
  5052  0E7D  0020               	movlb	0	; select bank0
  5053  0E7E  0640               	xorwf	64,w	;volatile
  5054  0E7F  1D03               	btfss	3,2
  5055  0E80  0008               	return
  5056                           
  5057                           ;usb_device.c: 2046: {
  5058                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  5059  0E81  30C0               	movlw	192
  5060  0E82  00F1               	movwf	??_USBStdGetDscHandler
  5061  0E83  0871               	movf	??_USBStdGetDscHandler,w
  5062  0E84  0021               	movlb	1	; select bank1
  5063  0E85  00EB               	movwf	(_inPipes^(0+128)+2)
  5064                           
  5065                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  5066  0E86  2EEE               	goto	l3108
  5067  0E87                     l3084:	
  5068                           ;usb_device.c: 2050: {
  5069                           ;usb_device.c: 2051: case 0x01:
  5070                           
  5071                           
  5072                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  5073  0E87  30DF               	movlw	low (_device_dsc| (0+32768))
  5074  0E88  0021               	movlb	1	; select bank1
  5075  0E89  00E9               	movwf	_inPipes^(0+128)
  5076  0E8A  3083               	movlw	high (_device_dsc| (0+32768))
  5077  0E8B  00EA               	movwf	(_inPipes^(0+128)+1)
  5078                           
  5079                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  5080  0E8C  3012               	movlw	18
  5081  0E8D  00EC               	movwf	(_inPipes^(0+128)+3)
  5082  0E8E  3000               	movlw	0
  5083  0E8F  00ED               	movwf	(_inPipes^(0+128)+4)
  5084                           
  5085                           ;usb_device.c: 2058: break;
  5086  0E90  0008               	return
  5087  0E91                     l3086:	
  5088                           ;usb_device.c: 2059: case 0x02:
  5089                           
  5090                           
  5091                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  5092  0E91  0020               	movlb	0	; select bank0
  5093  0E92  0842               	movf	66,w	;volatile
  5094  0E93  1D03               	btfss	3,2
  5095  0E94  2EC4               	goto	l3094
  5096                           
  5097                           ;usb_device.c: 2064: {
  5098                           ;usb_device.c: 2066: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  5099  0E95  0842               	movf	66,w	;volatile
  5100  0E96  00F1               	movwf	??_USBStdGetDscHandler
  5101  0E97  01F2               	clrf	??_USBStdGetDscHandler+1
  5102  0E98  35F1               	lslf	??_USBStdGetDscHandler,f
  5103  0E99  0DF2               	rlf	??_USBStdGetDscHandler+1,f
  5104  0E9A  3026               	movlw	low (_USB_CD_Ptr| (0+32768))
  5105  0E9B  0771               	addwf	??_USBStdGetDscHandler,w
  5106  0E9C  0084               	movwf	4
  5107  0E9D  3083               	movlw	high (_USB_CD_Ptr| (0+32768))
  5108  0E9E  3D72               	addwfc	??_USBStdGetDscHandler+1,w
  5109  0E9F  0085               	movwf	5
  5110  0EA0  3F00               	moviw [0]fsr0
  5111  0EA1  0021               	movlb	1	; select bank1
  5112  0EA2  00E9               	movwf	_inPipes^(0+128)
  5113  0EA3  3F01               	moviw [1]fsr0
  5114  0EA4  00EA               	movwf	(_inPipes+1)^(0+128)
  5115                           
  5116                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  5117  0EA5  086A               	movf	(_inPipes+1)^(0+128),w
  5118  0EA6  00F2               	movwf	??_USBStdGetDscHandler+1
  5119  0EA7  0869               	movf	_inPipes^(0+128),w
  5120  0EA8  00F1               	movwf	??_USBStdGetDscHandler
  5121  0EA9  3002               	movlw	2
  5122  0EAA  0771               	addwf	??_USBStdGetDscHandler,w
  5123  0EAB  0084               	movwf	4
  5124  0EAC  0872               	movf	??_USBStdGetDscHandler+1,w
  5125  0EAD  1803               	skipnc
  5126  0EAE  0A72               	incf	??_USBStdGetDscHandler+1,w
  5127  0EAF  0085               	movwf	5
  5128  0EB0  0800               	movf	0,w	;code access
  5129  0EB1  00F3               	movwf	??_USBStdGetDscHandler+2
  5130  0EB2  0873               	movf	??_USBStdGetDscHandler+2,w
  5131  0EB3  00EC               	movwf	(_inPipes^(0+128)+3)
  5132                           
  5133                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  5134  0EB4  086A               	movf	(_inPipes+1)^(0+128),w
  5135  0EB5  00F2               	movwf	??_USBStdGetDscHandler+1
  5136  0EB6  0869               	movf	_inPipes^(0+128),w
  5137  0EB7  00F1               	movwf	??_USBStdGetDscHandler
  5138  0EB8  3003               	movlw	3
  5139  0EB9  0771               	addwf	??_USBStdGetDscHandler,w
  5140  0EBA  0084               	movwf	4
  5141  0EBB  0872               	movf	??_USBStdGetDscHandler+1,w
  5142  0EBC  1803               	skipnc
  5143  0EBD  0A72               	incf	??_USBStdGetDscHandler+1,w
  5144  0EBE  0085               	movwf	5
  5145  0EBF  0800               	movf	0,w	;code access
  5146  0EC0  00F3               	movwf	??_USBStdGetDscHandler+2
  5147  0EC1  0873               	movf	??_USBStdGetDscHandler+2,w
  5148  0EC2  00ED               	movwf	(_inPipes^(0+128)+4)
  5149                           
  5150                           ;usb_device.c: 2076: }
  5151  0EC3  0008               	return
  5152  0EC4                     l3094:	
  5153                           
  5154                           ;usb_device.c: 2077: else
  5155                           ;usb_device.c: 2078: {
  5156                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  5157  0EC4  0021               	movlb	1	; select bank1
  5158  0EC5  01EB               	clrf	(_inPipes^(0+128)+2)
  5159                           
  5160                           ;usb_device.c: 2080: }
  5161                           ;usb_device.c: 2081: break;
  5162  0EC6  0008               	return
  5163  0EC7                     l3096:	
  5164                           ;usb_device.c: 2082: case 0x03:
  5165                           
  5166                           
  5167                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  5168  0EC7  3003               	movlw	3
  5169  0EC8  0020               	movlb	0	; select bank0
  5170  0EC9  0242               	subwf	66,w	;volatile
  5171  0ECA  1803               	skipnc
  5172  0ECB  2EE8               	goto	l3102
  5173                           
  5174                           ;usb_device.c: 2087: {
  5175                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  5176  0ECC  0842               	movf	66,w	;volatile
  5177  0ECD  00F1               	movwf	??_USBStdGetDscHandler
  5178  0ECE  01F2               	clrf	??_USBStdGetDscHandler+1
  5179  0ECF  35F1               	lslf	??_USBStdGetDscHandler,f
  5180  0ED0  0DF2               	rlf	??_USBStdGetDscHandler+1,f
  5181  0ED1  3020               	movlw	low (_USB_SD_Ptr| (0+32768))
  5182  0ED2  0771               	addwf	??_USBStdGetDscHandler,w
  5183  0ED3  0084               	movwf	4
  5184  0ED4  3083               	movlw	high (_USB_SD_Ptr| (0+32768))
  5185  0ED5  3D72               	addwfc	??_USBStdGetDscHandler+1,w
  5186  0ED6  0085               	movwf	5
  5187  0ED7  3F00               	moviw [0]fsr0
  5188  0ED8  0021               	movlb	1	; select bank1
  5189  0ED9  00E9               	movwf	_inPipes^(0+128)
  5190  0EDA  3F01               	moviw [1]fsr0
  5191  0EDB  00EA               	movwf	(_inPipes+1)^(0+128)
  5192                           
  5193                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  5194  0EDC  0869               	movf	_inPipes^(0+128),w
  5195  0EDD  0084               	movwf	4
  5196  0EDE  086A               	movf	(_inPipes+1)^(0+128),w
  5197  0EDF  0085               	movwf	5
  5198  0EE0  0800               	movf	0,w	;code access
  5199  0EE1  00F1               	movwf	??_USBStdGetDscHandler
  5200  0EE2  01F2               	clrf	??_USBStdGetDscHandler+1
  5201  0EE3  0871               	movf	??_USBStdGetDscHandler,w
  5202  0EE4  00EC               	movwf	(_inPipes^(0+128)+3)
  5203  0EE5  0872               	movf	??_USBStdGetDscHandler+1,w
  5204  0EE6  00ED               	movwf	((_inPipes+1)^(0+128)+3)
  5205                           
  5206                           ;usb_device.c: 2092: }
  5207  0EE7  0008               	return
  5208  0EE8                     l3102:	
  5209                           
  5210                           ;usb_device.c: 2102: else
  5211                           ;usb_device.c: 2103: {
  5212                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  5213  0EE8  0021               	movlb	1	; select bank1
  5214  0EE9  01EB               	clrf	(_inPipes^(0+128)+2)
  5215                           
  5216                           ;usb_device.c: 2105: }
  5217                           ;usb_device.c: 2106: break;
  5218  0EEA  0008               	return
  5219  0EEB                     l3104:	
  5220                           ;usb_device.c: 2107: default:
  5221                           
  5222                           
  5223                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  5224  0EEB  0021               	movlb	1	; select bank1
  5225  0EEC  01EB               	clrf	(_inPipes^(0+128)+2)
  5226                           
  5227                           ;usb_device.c: 2110: }
  5228                           
  5229                           ;usb_device.c: 2109: break;
  5230  0EED  0008               	return
  5231  0EEE                     l3108:	
  5232  0EEE  0020               	movlb	0	; select bank0
  5233  0EEF  0843               	movf	67,w	;volatile
  5234                           
  5235                           ; Switch size 1, requested type "space"
  5236                           ; Number of cases is 3, Range of values is 1 to 3
  5237                           ; switch strategies available:
  5238                           ; Name         Instructions Cycles
  5239                           ; simple_byte           10     6 (average)
  5240                           ; direct_byte           15     9 (fixed)
  5241                           ; jumptable            263     9 (fixed)
  5242                           ;	Chosen strategy is simple_byte
  5243  0EF0  3A01               	xorlw	1	; case 1
  5244  0EF1  1903               	skipnz
  5245  0EF2  2E87               	goto	l3084
  5246  0EF3  3A03               	xorlw	3	; case 2
  5247  0EF4  1903               	skipnz
  5248  0EF5  2E91               	goto	l3086
  5249  0EF6  3A01               	xorlw	1	; case 3
  5250  0EF7  1903               	skipnz
  5251  0EF8  2EC7               	goto	l3096
  5252  0EF9  2EEB               	goto	l3104
  5253  0EFA  0008               	return
  5254  0EFB                     __end_of_USBStdGetDscHandler:	
  5255                           
  5256                           	psect	text15
  5257  017F                     __ptext15:	
  5258 ;; *************** function _USBStdFeatureReqHandler *****************
  5259 ;; Defined at:
  5260 ;;		line 2757 in file "../../../../../../framework/usb/src/usb_device.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;		None
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;  pUEP            2   12[BANK0 ] PTR unsigned char 
  5265 ;;		 -> UEP0(1), 
  5266 ;;  p               1   15[BANK0 ] PTR struct __BDT
  5267 ;;		 -> BDT(32), NULL(0), 
  5268 ;;  current_ep_d    1   14[BANK0 ] struct .
  5269 ;; Return value:  Size  Location     Type
  5270 ;;		None               void
  5271 ;; Registers used:
  5272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5279 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5280 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5281 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5282 ;;Total ram usage:        6 bytes
  5283 ;; Hardware stack levels used:    1
  5284 ;; Hardware stack levels required when called:    5
  5285 ;; This function calls:
  5286 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5287 ;; This function is called by:
  5288 ;;		_USBCheckStdRequest
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291                           
  5292                           
  5293                           ;psect for function _USBStdFeatureReqHandler
  5294  017F                     _USBStdFeatureReqHandler:	
  5295                           
  5296                           ;usb_device.c: 2759: BDT_ENTRY *p;
  5297                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
  5298                           ;usb_device.c: 2764: unsigned char* pUEP;
  5299                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
  5300                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
  5301                           
  5302                           ;incstack = 0
  5303                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5304  017F  0020               	movlb	0	; select bank0
  5305  0180  0342               	decf	66,w	;volatile
  5306  0181  1D03               	btfss	3,2
  5307  0182  2995               	goto	l4304
  5308  0183  0840               	movf	64,w	;volatile
  5309  0184  391F               	andlw	31
  5310  0185  3A00               	xorlw	0
  5311  0186  1D03               	skipz
  5312  0187  2995               	goto	l4304
  5313                           
  5314                           ;usb_device.c: 2804: {
  5315                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
  5316  0188  0021               	movlb	1	; select bank1
  5317  0189  17EB               	bsf	(_inPipes^(0+128)+2),7
  5318                           
  5319                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
  5320  018A  3003               	movlw	3
  5321  018B  0020               	movlb	0	; select bank0
  5322  018C  0641               	xorwf	65,w	;volatile
  5323  018D  1D03               	btfss	3,2
  5324  018E  2993               	goto	l4302
  5325                           
  5326                           ;usb_device.c: 2807: RemoteWakeup = 1;
  5327  018F  0022               	movlb	2	; select bank2
  5328  0190  01D0               	clrf	_RemoteWakeup^(0+256)
  5329  0191  0AD0               	incf	_RemoteWakeup^(0+256),f
  5330  0192  2995               	goto	l4304
  5331  0193                     l4302:	
  5332                           
  5333                           ;usb_device.c: 2808: else
  5334                           ;usb_device.c: 2809: RemoteWakeup = 0;
  5335  0193  0022               	movlb	2	; select bank2
  5336  0194  01D0               	clrf	_RemoteWakeup^(0+256)
  5337  0195                     l4304:	
  5338                           
  5339                           ;usb_device.c: 2810: }
  5340                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
  5341                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
  5342                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
  5343                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
  5344  0195  0020               	movlb	0	; select bank0
  5345  0196  0842               	movf	66,w	;volatile
  5346  0197  1D03               	btfss	3,2
  5347  0198  0008               	return
  5348  0199  0840               	movf	64,w	;volatile
  5349  019A  391F               	andlw	31
  5350  019B  3A02               	xorlw	2
  5351  019C  1D03               	skipz
  5352  019D  0008               	return
  5353  019E  0844               	movf	68,w	;volatile
  5354  019F  390F               	andlw	15
  5355  01A0  3A00               	xorlw	0
  5356  01A1  1903               	skipnz
  5357  01A2  0008               	return
  5358  01A3  0844               	movf	68,w	;volatile
  5359  01A4  390F               	andlw	15
  5360  01A5  00DA               	movwf	??_USBStdFeatureReqHandler
  5361  01A6  3002               	movlw	2
  5362  01A7  025A               	subwf	??_USBStdFeatureReqHandler,w
  5363  01A8  1803               	skipnc
  5364  01A9  0008               	return
  5365  01AA  3020               	movlw	32
  5366  01AB  066D               	xorwf	_USBDeviceState,w
  5367  01AC  1D03               	btfss	3,2
  5368  01AD  0008               	return
  5369                           
  5370                           ;usb_device.c: 2817: {
  5371                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
  5372  01AE  0021               	movlb	1	; select bank1
  5373  01AF  17EB               	bsf	(_inPipes^(0+128)+2),7
  5374                           
  5375                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
  5376  01B0  0020               	movlb	0	; select bank0
  5377  01B1  1BC4               	btfsc	68,7	;volatile
  5378  01B2  29C1               	goto	l4318
  5379                           
  5380                           ;usb_device.c: 2824: {
  5381                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  5382  01B3  0844               	movf	68,w	;volatile
  5383  01B4  390F               	andlw	15
  5384  01B5  3E4D               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5385  01B6  0086               	movwf	6
  5386  01B7  3001               	movlw	1	; select bank2/3
  5387  01B8  0087               	movwf	7
  5388  01B9  0801               	movf	1,w
  5389  01BA  00DA               	movwf	??_USBStdFeatureReqHandler
  5390  01BB  085A               	movf	??_USBStdFeatureReqHandler,w
  5391  01BC  00DF               	movwf	USBStdFeatureReqHandler@p
  5392                           
  5393                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  5394  01BD  0844               	movf	68,w	;volatile
  5395  01BE  390F               	andlw	15
  5396  01BF  3E49               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5397  01C0  29CD               	goto	L4
  5398  01C1                     l4318:	
  5399                           ;usb_device.c: 2827: }
  5400                           
  5401                           
  5402                           ;usb_device.c: 2828: else
  5403                           ;usb_device.c: 2829: {
  5404                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  5405  01C1  0844               	movf	68,w	;volatile
  5406  01C2  390F               	andlw	15
  5407  01C3  3E6B               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  5408  01C4  0086               	movwf	6
  5409  01C5  0187               	clrf	7
  5410  01C6  0801               	movf	1,w
  5411  01C7  00DA               	movwf	??_USBStdFeatureReqHandler
  5412  01C8  085A               	movf	??_USBStdFeatureReqHandler,w
  5413  01C9  00DF               	movwf	USBStdFeatureReqHandler@p
  5414                           
  5415                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  5416  01CA  0844               	movf	68,w	;volatile
  5417  01CB  390F               	andlw	15
  5418  01CC  3E47               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5419  01CD                     L4:	
  5420  01CD  0086               	movwf	6
  5421  01CE  3001               	movlw	1	; select bank2/3
  5422  01CF  0087               	movwf	7
  5423  01D0  0801               	movf	1,w
  5424  01D1  00DA               	movwf	??_USBStdFeatureReqHandler
  5425  01D2  085A               	movf	??_USBStdFeatureReqHandler,w
  5426  01D3  00DE               	movwf	USBStdFeatureReqHandler@current_ep_data
  5427                           
  5428                           ;usb_device.c: 2832: }
  5429                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
  5430  01D4  185E               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  5431  01D5  29DB               	goto	l779
  5432                           
  5433                           ;usb_device.c: 2839: {
  5434                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  5435  01D6  30FB               	movlw	251
  5436  01D7  00DA               	movwf	??_USBStdFeatureReqHandler
  5437  01D8  085A               	movf	??_USBStdFeatureReqHandler,w
  5438  01D9  05DF               	andwf	USBStdFeatureReqHandler@p,f
  5439                           
  5440                           ;usb_device.c: 2841: }
  5441  01DA  29DC               	goto	l780
  5442  01DB                     l779:	
  5443                           
  5444                           ;usb_device.c: 2842: else
  5445                           ;usb_device.c: 2843: {
  5446                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  5447  01DB  155F               	bsf	USBStdFeatureReqHandler@p,2
  5448  01DC                     l780:	
  5449                           
  5450                           ;usb_device.c: 2845: }
  5451                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
  5452  01DC  1BC4               	btfsc	68,7	;volatile
  5453  01DD  29E7               	goto	l4326
  5454                           
  5455                           ;usb_device.c: 2851: {
  5456                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  5457  01DE  085F               	movf	USBStdFeatureReqHandler@p,w
  5458  01DF  00DA               	movwf	??_USBStdFeatureReqHandler
  5459  01E0  0844               	movf	68,w	;volatile
  5460  01E1  390F               	andlw	15
  5461  01E2  3E4D               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5462  01E3  0086               	movwf	6
  5463  01E4  3001               	movlw	1	; select bank2/3
  5464  01E5  0087               	movwf	7
  5465  01E6  29EE               	goto	L5
  5466  01E7                     l4326:	
  5467                           ;usb_device.c: 2853: }
  5468                           
  5469                           
  5470                           ;usb_device.c: 2854: else
  5471                           ;usb_device.c: 2855: {
  5472                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  5473  01E7  085F               	movf	USBStdFeatureReqHandler@p,w
  5474  01E8  00DA               	movwf	??_USBStdFeatureReqHandler
  5475  01E9  0844               	movf	68,w	;volatile
  5476  01EA  390F               	andlw	15
  5477  01EB  3E6B               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  5478  01EC  0086               	movwf	6
  5479  01ED  0187               	clrf	7
  5480  01EE                     L5:	
  5481  01EE  085A               	movf	??_USBStdFeatureReqHandler,w
  5482  01EF  0081               	movwf	1
  5483                           
  5484                           ;usb_device.c: 2857: }
  5485                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
  5486  01F0  3003               	movlw	3
  5487  01F1  0641               	xorwf	65,w	;volatile
  5488  01F2  1D03               	btfss	3,2
  5489  01F3  2A0F               	goto	l4342
  5490                           
  5491                           ;usb_device.c: 2861: {
  5492                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
  5493  01F4  085F               	movf	USBStdFeatureReqHandler@p,w
  5494  01F5  0086               	movwf	6
  5495  01F6  0187               	clrf	7
  5496  01F7  1F81               	btfss	1,7
  5497  01F8  2A06               	goto	l4338
  5498                           
  5499                           ;usb_device.c: 2863: {
  5500                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
  5501  01F9  1BC4               	btfsc	68,7	;volatile
  5502  01FA  29FF               	goto	l4336
  5503                           
  5504                           ;usb_device.c: 2867: {
  5505                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  5506  01FB  0844               	movf	68,w	;volatile
  5507  01FC  390F               	andlw	15
  5508  01FD  3E49               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5509  01FE  2A02               	goto	L6
  5510  01FF                     l4336:	
  5511                           ;usb_device.c: 2869: }
  5512                           
  5513                           
  5514                           ;usb_device.c: 2870: else
  5515                           ;usb_device.c: 2871: {
  5516                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  5517  01FF  0844               	movf	68,w	;volatile
  5518  0200  390F               	andlw	15
  5519  0201  3E47               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5520  0202                     L6:	
  5521  0202  0086               	movwf	6
  5522  0203  3001               	movlw	1	; select bank2/3
  5523  0204  0087               	movwf	7
  5524  0205  1481               	bsf	1,1
  5525  0206                     l4338:	
  5526                           
  5527                           ;usb_device.c: 2873: }
  5528                           ;usb_device.c: 2874: }
  5529                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
  5530  0206  085F               	movf	USBStdFeatureReqHandler@p,w
  5531  0207  0086               	movwf	6
  5532  0208  0187               	clrf	7
  5533  0209  1501               	bsf	1,2
  5534                           
  5535                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
  5536  020A  085F               	movf	USBStdFeatureReqHandler@p,w
  5537  020B  0086               	movwf	6
  5538  020C  0187               	clrf	7
  5539  020D  1781               	bsf	1,7
  5540                           
  5541                           ;usb_device.c: 2879: }
  5542  020E  0008               	return
  5543  020F                     l4342:	
  5544                           
  5545                           ;usb_device.c: 2880: else
  5546                           ;usb_device.c: 2881: {
  5547                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  5548  020F  3004               	movlw	4
  5549  0210  00DA               	movwf	??_USBStdFeatureReqHandler
  5550  0211  085A               	movf	??_USBStdFeatureReqHandler,w
  5551  0212  06DF               	xorwf	USBStdFeatureReqHandler@p,f
  5552                           
  5553                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
  5554  0213  085F               	movf	USBStdFeatureReqHandler@p,w
  5555  0214  0086               	movwf	6
  5556  0215  0187               	clrf	7
  5557  0216  1F81               	btfss	1,7
  5558  0217  2A33               	goto	l4352
  5559                           
  5560                           ;usb_device.c: 2888: {
  5561                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
  5562  0218  307F               	movlw	127
  5563  0219  00DA               	movwf	??_USBStdFeatureReqHandler
  5564  021A  085F               	movf	USBStdFeatureReqHandler@p,w
  5565  021B  0086               	movwf	6
  5566  021C  0187               	clrf	7
  5567  021D  085A               	movf	??_USBStdFeatureReqHandler,w
  5568  021E  0581               	andwf	1,f
  5569                           
  5570                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
  5571  021F  085F               	movf	USBStdFeatureReqHandler@p,w
  5572  0220  0086               	movwf	6
  5573  0221  0187               	clrf	7
  5574  0222  1701               	bsf	1,6
  5575                           
  5576                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  5577  0223  3000               	movlw	0
  5578  0224  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5579  0225  3005               	movlw	5
  5580  0226  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5581  0227  085F               	movf	USBStdFeatureReqHandler@p,w
  5582  0228  00DA               	movwf	??_USBStdFeatureReqHandler
  5583  0229  085A               	movf	??_USBStdFeatureReqHandler,w
  5584  022A  00D7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5585  022B  3001               	movlw	1
  5586  022C  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5587  022D  3000               	movlw	0
  5588  022E  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5589  022F  318B  2347  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5590                           
  5591                           ;usb_device.c: 2894: }
  5592  0232  2A38               	goto	l4354
  5593  0233                     l4352:	
  5594                           
  5595                           ;usb_device.c: 2895: else
  5596                           ;usb_device.c: 2896: {
  5597                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
  5598  0233  0020               	movlb	0	; select bank0
  5599  0234  085F               	movf	USBStdFeatureReqHandler@p,w
  5600  0235  0086               	movwf	6
  5601  0236  0187               	clrf	7
  5602  0237  1701               	bsf	1,6
  5603  0238                     l4354:	
  5604                           
  5605                           ;usb_device.c: 2899: }
  5606                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  5607  0238  3004               	movlw	4
  5608  0239  0020               	movlb	0	; select bank0
  5609  023A  00DA               	movwf	??_USBStdFeatureReqHandler
  5610  023B  085A               	movf	??_USBStdFeatureReqHandler,w
  5611  023C  06DF               	xorwf	USBStdFeatureReqHandler@p,f
  5612                           
  5613                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  5614  023D  18DE               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  5615  023E  2A44               	goto	l792
  5616  023F  085F               	movf	USBStdFeatureReqHandler@p,w
  5617  0240  0086               	movwf	6
  5618  0241  0187               	clrf	7
  5619  0242  1F81               	btfss	1,7
  5620  0243  2A68               	goto	l4366
  5621  0244                     l792:	
  5622                           
  5623                           ;usb_device.c: 2910: {
  5624                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
  5625  0244  1BC4               	btfsc	68,7	;volatile
  5626  0245  2A4A               	goto	l4362
  5627                           
  5628                           ;usb_device.c: 2912: {
  5629                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  5630  0246  0844               	movf	68,w	;volatile
  5631  0247  390F               	andlw	15
  5632  0248  3E49               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5633  0249  2A4D               	goto	L7
  5634  024A                     l4362:	
  5635                           ;usb_device.c: 2914: }
  5636                           
  5637                           
  5638                           ;usb_device.c: 2915: else
  5639                           ;usb_device.c: 2916: {
  5640                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  5641  024A  0844               	movf	68,w	;volatile
  5642  024B  390F               	andlw	15
  5643  024C  3E47               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5644  024D                     L7:	
  5645  024D  0086               	movwf	6
  5646  024E  3001               	movlw	1	; select bank2/3
  5647  024F  0087               	movwf	7
  5648  0250  1081               	bcf	1,1
  5649                           
  5650                           ;usb_device.c: 2918: }
  5651                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  5652  0251  303B               	movlw	59
  5653  0252  00DA               	movwf	??_USBStdFeatureReqHandler
  5654  0253  085F               	movf	USBStdFeatureReqHandler@p,w
  5655  0254  0086               	movwf	6
  5656  0255  0187               	clrf	7
  5657  0256  085A               	movf	??_USBStdFeatureReqHandler,w
  5658  0257  0581               	andwf	1,f
  5659                           
  5660                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  5661  0258  3000               	movlw	0
  5662  0259  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5663  025A  3005               	movlw	5
  5664  025B  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5665  025C  085F               	movf	USBStdFeatureReqHandler@p,w
  5666  025D  00DA               	movwf	??_USBStdFeatureReqHandler
  5667  025E  085A               	movf	??_USBStdFeatureReqHandler,w
  5668  025F  00D7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5669  0260  3001               	movlw	1
  5670  0261  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5671  0262  3000               	movlw	0
  5672  0263  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5673  0264  318B  2347  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5674                           
  5675                           ;usb_device.c: 2924: }
  5676  0267  2A70               	goto	l4368
  5677  0268                     l4366:	
  5678                           
  5679                           ;usb_device.c: 2925: else
  5680                           ;usb_device.c: 2926: {
  5681                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  5682  0268  303B               	movlw	59
  5683  0269  0020               	movlb	0	; select bank0
  5684  026A  00DA               	movwf	??_USBStdFeatureReqHandler
  5685  026B  085F               	movf	USBStdFeatureReqHandler@p,w
  5686  026C  0086               	movwf	6
  5687  026D  0187               	clrf	7
  5688  026E  085A               	movf	??_USBStdFeatureReqHandler,w
  5689  026F  0581               	andwf	1,f
  5690  0270                     l4368:	
  5691                           
  5692                           ;usb_device.c: 2929: }
  5693                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  5694  0270  0020               	movlb	0	; select bank0
  5695  0271  0844               	movf	68,w	;volatile
  5696  0272  390F               	andlw	15
  5697  0273  3E98               	addlw	152
  5698  0274  00DA               	movwf	??_USBStdFeatureReqHandler
  5699  0275  01DB               	clrf	??_USBStdFeatureReqHandler+1
  5700  0276  300E               	movlw	14
  5701  0277  3DDB               	addwfc	??_USBStdFeatureReqHandler+1,f
  5702  0278  085A               	movf	??_USBStdFeatureReqHandler,w
  5703  0279  00DC               	movwf	USBStdFeatureReqHandler@pUEP
  5704  027A  085B               	movf	??_USBStdFeatureReqHandler+1,w
  5705  027B  00DD               	movwf	USBStdFeatureReqHandler@pUEP+1
  5706                           
  5707                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
  5708  027C  30FE               	movlw	254
  5709  027D  00DA               	movwf	??_USBStdFeatureReqHandler
  5710  027E  085C               	movf	USBStdFeatureReqHandler@pUEP,w
  5711  027F  0086               	movwf	6
  5712  0280  085D               	movf	USBStdFeatureReqHandler@pUEP+1,w
  5713  0281  0087               	movwf	7
  5714  0282  085A               	movf	??_USBStdFeatureReqHandler,w
  5715  0283  0581               	andwf	1,f
  5716  0284  0008               	return
  5717  0285                     __end_of_USBStdFeatureReqHandler:	
  5718                           
  5719                           	psect	text16
  5720  0B47                     __ptext16:	
  5721 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  5722 ;; Defined at:
  5723 ;;		line 87 in file "../src/main.c"
  5724 ;; Parameters:    Size  Location     Type
  5725 ;;  event           2    5[BANK0 ] enum E2511
  5726 ;;  pdata           1    7[BANK0 ] PTR void 
  5727 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(32), NULL(0), 
  5728 ;;  size            2    8[BANK0 ] unsigned int 
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;		None
  5731 ;; Return value:  Size  Location     Type
  5732 ;;                  1    wreg      unsigned char 
  5733 ;; Registers used:
  5734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5735 ;; Tracked objects:
  5736 ;;		On entry : 0/0
  5737 ;;		On exit  : 0/0
  5738 ;;		Unchanged: 0/0
  5739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5740 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5743 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5744 ;;Total ram usage:        5 bytes
  5745 ;; Hardware stack levels used:    1
  5746 ;; Hardware stack levels required when called:    4
  5747 ;; This function calls:
  5748 ;;		_APP_DeviceAudioMIDIInitialize
  5749 ;;		_APP_DeviceAudioMIDISOFHandler
  5750 ;;		_APP_LEDUpdateUSBStatus
  5751 ;; This function is called by:
  5752 ;;		_USBDeviceTasks
  5753 ;;		_USBStdSetCfgHandler
  5754 ;;		_USBSuspend
  5755 ;;		_USBWakeFromSuspend
  5756 ;;		_USBCtrlTrfSetupHandler
  5757 ;;		_USBCheckStdRequest
  5758 ;;		_USBStdFeatureReqHandler
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761                           
  5762                           
  5763                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  5764  0B47                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  5765                           
  5766                           ;main.c: 89: switch( (int) event )
  5767                           
  5768                           ;incstack = 0
  5769                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  5770  0B47  2B57               	goto	l4230
  5771  0B48                     l4218:	
  5772                           ;main.c: 94: case EVENT_SOF:
  5773                           
  5774                           ;main.c: 92: break;
  5775                           
  5776                           ;main.c: 90: {
  5777                           ;main.c: 91: case EVENT_TRANSFER:
  5778                           
  5779                           
  5780                           ;main.c: 97: APP_LEDUpdateUSBStatus();
  5781  0B48  318C  2400  318B   	fcall	_APP_LEDUpdateUSBStatus
  5782                           
  5783                           ;main.c: 98: APP_DeviceAudioMIDISOFHandler();
  5784  0B4B  3189  2130         	fcall	_APP_DeviceAudioMIDISOFHandler
  5785                           
  5786                           ;main.c: 99: break;
  5787  0B4D  0008               	return
  5788  0B4E                     l4222:	
  5789                           ;main.c: 101: case EVENT_SUSPEND:
  5790                           
  5791                           
  5792                           ;main.c: 103: APP_LEDUpdateUSBStatus();
  5793  0B4E  318C  2400         	fcall	_APP_LEDUpdateUSBStatus
  5794                           
  5795                           ;main.c: 104: break;
  5796  0B50  0008               	return
  5797  0B51                     l4224:	
  5798                           ;main.c: 106: case EVENT_RESUME:
  5799                           
  5800                           
  5801                           ;main.c: 108: APP_LEDUpdateUSBStatus();
  5802  0B51  318C  2400         	fcall	_APP_LEDUpdateUSBStatus
  5803                           
  5804                           ;main.c: 109: break;
  5805  0B53  0008               	return
  5806  0B54                     l4226:	
  5807                           ;main.c: 111: case EVENT_CONFIGURED:
  5808                           
  5809                           
  5810                           ;main.c: 114: APP_DeviceAudioMIDIInitialize();
  5811  0B54  318A  22BD         	fcall	_APP_DeviceAudioMIDIInitialize
  5812                           
  5813                           ;main.c: 131: }
  5814                           
  5815                           ;main.c: 130: break;
  5816                           
  5817                           ;main.c: 129: default:
  5818                           
  5819                           ;main.c: 127: break;
  5820                           
  5821                           ;main.c: 126: case EVENT_TRANSFER_TERMINATED:
  5822                           
  5823                           ;main.c: 124: break;
  5824                           
  5825                           ;main.c: 123: case EVENT_BUS_ERROR:
  5826                           
  5827                           ;main.c: 121: break;
  5828                           
  5829                           ;main.c: 120: case EVENT_EP0_REQUEST:
  5830                           
  5831                           ;main.c: 118: break;
  5832                           
  5833                           ;main.c: 117: case EVENT_SET_DESCRIPTOR:
  5834                           
  5835                           ;main.c: 115: break;
  5836  0B56  0008               	return
  5837  0B57                     l4230:	
  5838                           
  5839                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  5840                           ; Switch size 1, requested type "space"
  5841                           ; Number of cases is 2, Range of values is 0 to 127
  5842                           ; switch strategies available:
  5843                           ; Name         Instructions Cycles
  5844                           ; simple_byte            7     4 (average)
  5845                           ; direct_byte          262     6 (fixed)
  5846                           ; jumptable            260     6 (fixed)
  5847                           ;	Chosen strategy is simple_byte
  5848  0B57  0020               	movlb	0	; select bank0
  5849  0B58  0856               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  5850  0B59  3A00               	xorlw	0	; case 0
  5851  0B5A  1903               	skipnz
  5852  0B5B  2B60               	goto	l4770
  5853  0B5C  3A7F               	xorlw	127	; case 127
  5854  0B5D  1903               	skipnz
  5855  0B5E  2B7A               	goto	l4772
  5856  0B5F  2B7F               	goto	l92
  5857  0B60                     l4770:	
  5858                           
  5859                           ; Switch size 1, requested type "space"
  5860                           ; Number of cases is 8, Range of values is 1 to 117
  5861                           ; switch strategies available:
  5862                           ; Name         Instructions Cycles
  5863                           ; simple_byte           25    13 (average)
  5864                           ; direct_byte          243     9 (fixed)
  5865                           ; jumptable            263     9 (fixed)
  5866                           ;	Chosen strategy is simple_byte
  5867  0B60  0855               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  5868  0B61  3A01               	xorlw	1	; case 1
  5869  0B62  1903               	skipnz
  5870  0B63  2B54               	goto	l4226
  5871  0B64  3A03               	xorlw	3	; case 2
  5872  0B65  1903               	skipnz
  5873  0B66  2B7F               	goto	l92
  5874  0B67  3A01               	xorlw	1	; case 3
  5875  0B68  1903               	skipnz
  5876  0B69  2B7F               	goto	l92
  5877  0B6A  3A06               	xorlw	6	; case 5
  5878  0B6B  1903               	skipnz
  5879  0B6C  2B7F               	goto	l92
  5880  0B6D  3A77               	xorlw	119	; case 114
  5881  0B6E  1903               	skipnz
  5882  0B6F  2B7F               	goto	l92
  5883  0B70  3A01               	xorlw	1	; case 115
  5884  0B71  1903               	skipnz
  5885  0B72  2B48               	goto	l4218
  5886  0B73  3A07               	xorlw	7	; case 116
  5887  0B74  1903               	skipnz
  5888  0B75  2B51               	goto	l4224
  5889  0B76  3A01               	xorlw	1	; case 117
  5890  0B77  1903               	skipnz
  5891  0B78  2B4E               	goto	l4222
  5892  0B79  2B7F               	goto	l92
  5893  0B7A                     l4772:	
  5894                           
  5895                           ; Switch size 1, requested type "space"
  5896                           ; Number of cases is 1, Range of values is 255 to 255
  5897                           ; switch strategies available:
  5898                           ; Name         Instructions Cycles
  5899                           ; simple_byte            4     3 (average)
  5900                           ; direct_byte            7     5 (fixed)
  5901                           ; jumptable            263     9 (fixed)
  5902                           ;	Chosen strategy is simple_byte
  5903  0B7A  0855               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  5904  0B7B  3AFF               	xorlw	255	; case 255
  5905  0B7C  1903               	skipnz
  5906  0B7D  2B7F               	goto	l92
  5907  0B7E  2B7F               	goto	l92
  5908  0B7F                     l92:	
  5909                           ;main.c: 132: return 1;
  5910                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  5911                           
  5912  0B7F  0008               	return
  5913  0B80                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  5914                           
  5915                           	psect	text17
  5916  0C00                     __ptext17:	
  5917 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  5918 ;; Defined at:
  5919 ;;		line 23 in file "../src/app_led_usb_status.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;		None
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;		None
  5924 ;; Return value:  Size  Location     Type
  5925 ;;		None               void
  5926 ;; Registers used:
  5927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5937 ;;Total ram usage:        0 bytes
  5938 ;; Hardware stack levels used:    1
  5939 ;; Hardware stack levels required when called:    2
  5940 ;; This function calls:
  5941 ;;		_LED_Off
  5942 ;;		_LED_On
  5943 ;; This function is called by:
  5944 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5945 ;; This function uses a non-reentrant model
  5946 ;;
  5947                           
  5948                           
  5949                           ;psect for function _APP_LEDUpdateUSBStatus
  5950  0C00                     _APP_LEDUpdateUSBStatus:	
  5951                           
  5952                           ;app_led_usb_status.c: 25: static uint16_t ledCount = 0;
  5953                           ;app_led_usb_status.c: 27: if(UCONbits.SUSPND == 1)
  5954                           
  5955                           ;incstack = 0
  5956                           ; Regs used in _APP_LEDUpdateUSBStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5957  0C00  003D               	movlb	29	; select bank29
  5958  0C01  1C8E               	btfss	14,1	;volatile
  5959  0C02  2C41               	goto	l2876
  5960                           
  5961                           ;app_led_usb_status.c: 28: {
  5962                           ;app_led_usb_status.c: 29: LED_Off(0);
  5963  0C03  3000               	movlw	0
  5964  0C04  3189  21DF         	fcall	_LED_Off
  5965                           
  5966                           ;app_led_usb_status.c: 30: return;
  5967  0C06  0008               	return
  5968  0C07                     l2850:	
  5969                           ;app_led_usb_status.c: 34: {
  5970                           ;app_led_usb_status.c: 35: case CONFIGURED_STATE:
  5971                           
  5972                           ;app_led_usb_status.c: 31: }
  5973                           ;app_led_usb_status.c: 33: switch(USBDeviceState)
  5974                           
  5975                           
  5976                           ;app_led_usb_status.c: 38: if(ledCount == 1)
  5977  0C07  0021               	movlb	1	; select bank1
  5978  0C08  0360               	decf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  5979  0C09  0461               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  5980  0C0A  1D03               	btfss	3,2
  5981  0C0B  2C11               	goto	l2854
  5982                           
  5983                           ;app_led_usb_status.c: 39: {
  5984                           ;app_led_usb_status.c: 40: LED_On(0);
  5985  0C0C  3000               	movlw	0
  5986  0C0D  3189  21FB  318C   	fcall	_LED_On
  5987                           
  5988                           ;app_led_usb_status.c: 41: }
  5989  0C10  2C47               	goto	l2878
  5990  0C11                     l2854:	
  5991                           
  5992                           ;app_led_usb_status.c: 42: else if(ledCount == 75)
  5993  0C11  304B               	movlw	75
  5994  0C12  0021               	movlb	1	; select bank1
  5995  0C13  0660               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  5996  0C14  0461               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  5997  0C15  1D03               	btfss	3,2
  5998  0C16  2C1C               	goto	l2858
  5999                           
  6000                           ;app_led_usb_status.c: 43: {
  6001                           ;app_led_usb_status.c: 44: LED_Off(0);
  6002  0C17  3000               	movlw	0
  6003  0C18  3189  21DF  318C   	fcall	_LED_Off
  6004                           
  6005                           ;app_led_usb_status.c: 45: }
  6006  0C1B  2C47               	goto	l2878
  6007  0C1C                     l2858:	
  6008                           
  6009                           ;app_led_usb_status.c: 46: else if(ledCount > 150)
  6010  0C1C  3000               	movlw	0
  6011  0C1D  0021               	movlb	1	; select bank1
  6012  0C1E  0261               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  6013  0C1F  3097               	movlw	151
  6014  0C20  2C3A               	goto	L8
  6015  0C21                     l2862:	
  6016                           ;app_led_usb_status.c: 52: default:
  6017                           
  6018                           ;app_led_usb_status.c: 49: }
  6019                           ;app_led_usb_status.c: 50: break;
  6020                           
  6021                           ;app_led_usb_status.c: 47: {
  6022                           ;app_led_usb_status.c: 48: ledCount = 0;
  6023                           
  6024                           
  6025                           ;app_led_usb_status.c: 55: if(ledCount == 1)
  6026  0C21  0021               	movlb	1	; select bank1
  6027  0C22  0360               	decf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  6028  0C23  0461               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  6029  0C24  1D03               	btfss	3,2
  6030  0C25  2C2B               	goto	l2866
  6031                           
  6032                           ;app_led_usb_status.c: 56: {
  6033                           ;app_led_usb_status.c: 57: LED_On(0);
  6034  0C26  3000               	movlw	0
  6035  0C27  3189  21FB  318C   	fcall	_LED_On
  6036                           
  6037                           ;app_led_usb_status.c: 58: }
  6038  0C2A  2C47               	goto	l2878
  6039  0C2B                     l2866:	
  6040                           
  6041                           ;app_led_usb_status.c: 59: else if(ledCount == 50)
  6042  0C2B  3032               	movlw	50
  6043  0C2C  0021               	movlb	1	; select bank1
  6044  0C2D  0660               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  6045  0C2E  0461               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  6046  0C2F  1D03               	btfss	3,2
  6047  0C30  2C36               	goto	l2870
  6048                           
  6049                           ;app_led_usb_status.c: 60: {
  6050                           ;app_led_usb_status.c: 61: LED_Off(0);
  6051  0C31  3000               	movlw	0
  6052  0C32  3189  21DF  318C   	fcall	_LED_Off
  6053                           
  6054                           ;app_led_usb_status.c: 62: }
  6055  0C35  2C47               	goto	l2878
  6056  0C36                     l2870:	
  6057                           
  6058                           ;app_led_usb_status.c: 63: else if(ledCount > 950)
  6059  0C36  3003               	movlw	3
  6060  0C37  0021               	movlb	1	; select bank1
  6061  0C38  0261               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  6062  0C39  30B7               	movlw	183
  6063  0C3A                     L8:	
  6064  0C3A  1903               	skipnz
  6065  0C3B  0260               	subwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  6066  0C3C  1C03               	skipc
  6067  0C3D  2C47               	goto	l2878
  6068                           
  6069                           ;app_led_usb_status.c: 64: {
  6070                           ;app_led_usb_status.c: 65: ledCount = 0;
  6071  0C3E  01E0               	clrf	APP_LEDUpdateUSBStatus@ledCount^(0+128)
  6072  0C3F  01E1               	clrf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128)
  6073                           
  6074                           ;app_led_usb_status.c: 68: }
  6075                           
  6076                           ;app_led_usb_status.c: 66: }
  6077                           ;app_led_usb_status.c: 67: break;
  6078  0C40  2C47               	goto	l2878
  6079  0C41                     l2876:	
  6080  0C41  0020               	movlb	0	; select bank0
  6081  0C42  086D               	movf	_USBDeviceState,w
  6082                           
  6083                           ; Switch size 1, requested type "space"
  6084                           ; Number of cases is 1, Range of values is 32 to 32
  6085                           ; switch strategies available:
  6086                           ; Name         Instructions Cycles
  6087                           ; simple_byte            4     3 (average)
  6088                           ; direct_byte           11     9 (fixed)
  6089                           ; jumptable            263     9 (fixed)
  6090                           ;	Chosen strategy is simple_byte
  6091  0C43  3A20               	xorlw	32	; case 32
  6092  0C44  1903               	skipnz
  6093  0C45  2C07               	goto	l2850
  6094  0C46  2C21               	goto	l2862
  6095  0C47                     l2878:	
  6096                           
  6097                           ;app_led_usb_status.c: 71: ledCount++;
  6098  0C47  3001               	movlw	1
  6099  0C48  0021               	movlb	1	; select bank1
  6100  0C49  07E0               	addwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),f
  6101  0C4A  3000               	movlw	0
  6102  0C4B  3DE1               	addwfc	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),f
  6103  0C4C  0008               	return
  6104  0C4D                     __end_of_APP_LEDUpdateUSBStatus:	
  6105                           
  6106                           	psect	text18
  6107  0930                     __ptext18:	
  6108 ;; *************** function _APP_DeviceAudioMIDISOFHandler *****************
  6109 ;; Defined at:
  6110 ;;		line 53 in file "../src/app_device_audio_midi.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;		None
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;		None
  6115 ;; Return value:  Size  Location     Type
  6116 ;;		None               void
  6117 ;; Registers used:
  6118 ;;		wreg, status,2, status,0
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6128 ;;Total ram usage:        0 bytes
  6129 ;; Hardware stack levels used:    1
  6130 ;; Hardware stack levels required when called:    1
  6131 ;; This function calls:
  6132 ;;		Nothing
  6133 ;; This function is called by:
  6134 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138                           
  6139                           ;psect for function _APP_DeviceAudioMIDISOFHandler
  6140  0930                     _APP_DeviceAudioMIDISOFHandler:	
  6141                           
  6142                           ;app_device_audio_midi.c: 54: if(msCounter != 0) msCounter--;
  6143                           
  6144                           ;incstack = 0
  6145                           ; Regs used in _APP_DeviceAudioMIDISOFHandler: [wreg+status,2+status,0]
  6146  0930  0021               	movlb	1	; select bank1
  6147  0931  0865               	movf	_msCounter^(0+128),w
  6148  0932  1903               	btfsc	3,2
  6149  0933  0008               	return
  6150  0934  3001               	movlw	1
  6151  0935  02E5               	subwf	_msCounter^(0+128),f
  6152  0936  0008               	return
  6153  0937                     __end_of_APP_DeviceAudioMIDISOFHandler:	
  6154                           
  6155                           	psect	text19
  6156  0ABD                     __ptext19:	
  6157 ;; *************** function _APP_DeviceAudioMIDIInitialize *****************
  6158 ;; Defined at:
  6159 ;;		line 40 in file "../src/app_device_audio_midi.c"
  6160 ;; Parameters:    Size  Location     Type
  6161 ;;		None
  6162 ;; Auto vars:     Size  Location     Type
  6163 ;;		None
  6164 ;; Return value:  Size  Location     Type
  6165 ;;		None               void
  6166 ;; Registers used:
  6167 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6168 ;; Tracked objects:
  6169 ;;		On entry : 0/0
  6170 ;;		On exit  : 0/0
  6171 ;;		Unchanged: 0/0
  6172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6175 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6176 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6177 ;;Total ram usage:        2 bytes
  6178 ;; Hardware stack levels used:    1
  6179 ;; Hardware stack levels required when called:    3
  6180 ;; This function calls:
  6181 ;;		_USBEnableEndpoint
  6182 ;;		_USBTransferOnePacket
  6183 ;; This function is called by:
  6184 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6185 ;; This function uses a non-reentrant model
  6186 ;;
  6187                           
  6188                           
  6189                           ;psect for function _APP_DeviceAudioMIDIInitialize
  6190  0ABD                     _APP_DeviceAudioMIDIInitialize:	
  6191                           
  6192                           ;app_device_audio_midi.c: 42: USBTxHandle = (0);
  6193                           
  6194                           ;incstack = 0
  6195                           ; Regs used in _APP_DeviceAudioMIDIInitialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
  6196  0ABD  0021               	movlb	1	; select bank1
  6197  0ABE  01E3               	clrf	_USBTxHandle^(0+128)
  6198                           
  6199                           ;app_device_audio_midi.c: 43: USBRxHandle = (0);
  6200  0ABF  0022               	movlb	2	; select bank2
  6201  0AC0  01D4               	clrf	_USBRxHandle^(0+256)
  6202                           
  6203                           ;app_device_audio_midi.c: 44: pitch = 0x3C;
  6204  0AC1  303C               	movlw	60
  6205  0AC2  0020               	movlb	0	; select bank0
  6206  0AC3  00D3               	movwf	??_APP_DeviceAudioMIDIInitialize
  6207  0AC4  0853               	movf	??_APP_DeviceAudioMIDIInitialize,w
  6208  0AC5  0021               	movlb	1	; select bank1
  6209  0AC6  00E6               	movwf	_pitch^(0+128)
  6210                           
  6211                           ;app_device_audio_midi.c: 45: sentNoteOff = 1;
  6212  0AC7  0022               	movlb	2	; select bank2
  6213  0AC8  01DB               	clrf	_sentNoteOff^(0+256)
  6214  0AC9  0ADB               	incf	_sentNoteOff^(0+256),f
  6215                           
  6216                           ;app_device_audio_midi.c: 46: msCounter = 0;
  6217  0ACA  0021               	movlb	1	; select bank1
  6218  0ACB  01E5               	clrf	_msCounter^(0+128)
  6219                           
  6220                           ;app_device_audio_midi.c: 48: USBEnableEndpoint(1,0x04|0x02|0x10|0x08);
  6221  0ACC  301E               	movlw	30
  6222  0ACD  0020               	movlb	0	; select bank0
  6223  0ACE  00D3               	movwf	??_APP_DeviceAudioMIDIInitialize
  6224  0ACF  0853               	movf	??_APP_DeviceAudioMIDIInitialize,w
  6225  0AD0  00F8               	movwf	USBEnableEndpoint@options
  6226  0AD1  3001               	movlw	1
  6227  0AD2  318A  2250  318A   	fcall	_USBEnableEndpoint
  6228                           
  6229                           ;app_device_audio_midi.c: 50: USBRxHandle = USBTransferOnePacket(1,0,(uint8_t*)&Received
      +                          DataBuffer,64);
  6230  0AD5  01F1               	clrf	USBTransferOnePacket@dir
  6231  0AD6  30A0               	movlw	160
  6232  0AD7  00F2               	movwf	USBTransferOnePacket@data
  6233  0AD8  3000               	movlw	0
  6234  0AD9  00F3               	movwf	USBTransferOnePacket@data+1
  6235  0ADA  3040               	movlw	64
  6236  0ADB  0020               	movlb	0	; select bank0
  6237  0ADC  00D3               	movwf	??_APP_DeviceAudioMIDIInitialize
  6238  0ADD  0853               	movf	??_APP_DeviceAudioMIDIInitialize,w
  6239  0ADE  00F4               	movwf	USBTransferOnePacket@len
  6240  0ADF  3001               	movlw	1
  6241  0AE0  318C  249A         	fcall	_USBTransferOnePacket
  6242  0AE2  0020               	movlb	0	; select bank0
  6243  0AE3  00D4               	movwf	??_APP_DeviceAudioMIDIInitialize+1
  6244  0AE4  0854               	movf	??_APP_DeviceAudioMIDIInitialize+1,w
  6245  0AE5  0022               	movlb	2	; select bank2
  6246  0AE6  00D4               	movwf	_USBRxHandle^(0+256)
  6247  0AE7  0008               	return
  6248  0AE8                     __end_of_APP_DeviceAudioMIDIInitialize:	
  6249                           
  6250                           	psect	text20
  6251  0A50                     __ptext20:	
  6252 ;; *************** function _USBEnableEndpoint *****************
  6253 ;; Defined at:
  6254 ;;		line 878 in file "../../../../../../framework/usb/src/usb_device.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;  ep              1    wreg     unsigned char 
  6257 ;;  options         1    8[COMMON] unsigned char 
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;  ep              1    2[BANK0 ] unsigned char 
  6260 ;;  p               2    0[BANK0 ] PTR unsigned char 
  6261 ;;		 -> UEP0(1), 
  6262 ;; Return value:  Size  Location     Type
  6263 ;;		None               void
  6264 ;; Registers used:
  6265 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6266 ;; Tracked objects:
  6267 ;;		On entry : 0/0
  6268 ;;		On exit  : 0/0
  6269 ;;		Unchanged: 0/0
  6270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6271 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6272 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6273 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6274 ;;      Totals:         3       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6275 ;;Total ram usage:        6 bytes
  6276 ;; Hardware stack levels used:    1
  6277 ;; Hardware stack levels required when called:    2
  6278 ;; This function calls:
  6279 ;;		_USBConfigureEndpoint
  6280 ;; This function is called by:
  6281 ;;		_APP_DeviceAudioMIDIInitialize
  6282 ;; This function uses a non-reentrant model
  6283 ;;
  6284                           
  6285                           
  6286                           ;psect for function _USBEnableEndpoint
  6287  0A50                     _USBEnableEndpoint:	
  6288                           
  6289                           ;incstack = 0
  6290                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6291                           ;USBEnableEndpoint@ep stored from wreg
  6292  0A50  0020               	movlb	0	; select bank0
  6293  0A51  00D2               	movwf	USBEnableEndpoint@ep
  6294                           
  6295                           ;usb_device.c: 880: unsigned char* p;
  6296                           ;usb_device.c: 884: if(options & 0x04)
  6297  0A52  1D78               	btfss	USBEnableEndpoint@options,2
  6298  0A53  2A59               	goto	l2808
  6299                           
  6300                           ;usb_device.c: 885: {
  6301                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  6302  0A54  01F1               	clrf	USBConfigureEndpoint@direction
  6303  0A55  0852               	movf	USBEnableEndpoint@ep,w
  6304  0A56  318B  2380  318A   	fcall	_USBConfigureEndpoint
  6305  0A59                     l2808:	
  6306                           
  6307                           ;usb_device.c: 887: }
  6308                           ;usb_device.c: 888: if(options & 0x02)
  6309  0A59  1CF8               	btfss	USBEnableEndpoint@options,1
  6310  0A5A  2A61               	goto	l2812
  6311                           
  6312                           ;usb_device.c: 889: {
  6313                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  6314  0A5B  01F1               	clrf	USBConfigureEndpoint@direction
  6315  0A5C  0AF1               	incf	USBConfigureEndpoint@direction,f
  6316  0A5D  0020               	movlb	0	; select bank0
  6317  0A5E  0852               	movf	USBEnableEndpoint@ep,w
  6318  0A5F  318B  2380         	fcall	_USBConfigureEndpoint
  6319  0A61                     l2812:	
  6320                           
  6321                           ;usb_device.c: 891: }
  6322                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  6323  0A61  0020               	movlb	0	; select bank0
  6324  0A62  0852               	movf	USBEnableEndpoint@ep,w
  6325  0A63  3E98               	addlw	152
  6326  0A64  00F9               	movwf	??_USBEnableEndpoint
  6327  0A65  01FA               	clrf	??_USBEnableEndpoint+1
  6328  0A66  300E               	movlw	14
  6329  0A67  3DFA               	addwfc	??_USBEnableEndpoint+1,f
  6330  0A68  0879               	movf	??_USBEnableEndpoint,w
  6331  0A69  00D0               	movwf	USBEnableEndpoint@p
  6332  0A6A  087A               	movf	??_USBEnableEndpoint+1,w
  6333  0A6B  00D1               	movwf	USBEnableEndpoint@p+1
  6334                           
  6335                           ;usb_device.c: 901: *p = options;
  6336  0A6C  0850               	movf	USBEnableEndpoint@p,w
  6337  0A6D  0086               	movwf	6
  6338  0A6E  0851               	movf	USBEnableEndpoint@p+1,w
  6339  0A6F  0087               	movwf	7
  6340  0A70  0878               	movf	USBEnableEndpoint@options,w
  6341  0A71  0081               	movwf	1
  6342  0A72  0008               	return
  6343  0A73                     __end_of_USBEnableEndpoint:	
  6344                           
  6345                           	psect	text21
  6346  0B80                     __ptext21:	
  6347 ;; *************** function _USBConfigureEndpoint *****************
  6348 ;; Defined at:
  6349 ;;		line 1543 in file "../../../../../../framework/usb/src/usb_device.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;  EPNum           1    wreg     unsigned char 
  6352 ;;  direction       1    1[COMMON] unsigned char 
  6353 ;; Auto vars:     Size  Location     Type
  6354 ;;  EPNum           1    6[COMMON] unsigned char 
  6355 ;;  handle          1    7[COMMON] PTR volatile struct __BD
  6356 ;;		 -> BDT(32), 
  6357 ;; Return value:  Size  Location     Type
  6358 ;;		None               void
  6359 ;; Registers used:
  6360 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6366 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6367 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6368 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6369 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6370 ;;Total ram usage:        7 bytes
  6371 ;; Hardware stack levels used:    1
  6372 ;; Hardware stack levels required when called:    1
  6373 ;; This function calls:
  6374 ;;		Nothing
  6375 ;; This function is called by:
  6376 ;;		_USBEnableEndpoint
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379                           
  6380                           
  6381                           ;psect for function _USBConfigureEndpoint
  6382  0B80                     _USBConfigureEndpoint:	
  6383                           
  6384                           ;incstack = 0
  6385                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  6386                           ;USBConfigureEndpoint@EPNum stored from wreg
  6387  0B80  00F6               	movwf	USBConfigureEndpoint@EPNum
  6388                           
  6389                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  6390                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  6391  0B81  3020               	movlw	32
  6392  0B82  00F2               	movwf	??_USBConfigureEndpoint
  6393  0B83  0872               	movf	??_USBConfigureEndpoint,w
  6394  0B84  00F7               	movwf	USBConfigureEndpoint@handle
  6395                           
  6396                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  6397  0B85  0871               	movf	USBConfigureEndpoint@direction,w
  6398  0B86  00F2               	movwf	??_USBConfigureEndpoint
  6399  0B87  3001               	movlw	1
  6400  0B88                     u1935:	
  6401  0B88  35F2               	lslf	??_USBConfigureEndpoint,f
  6402  0B89  0B89               	decfsz	9,f
  6403  0B8A  2B88               	goto	u1935
  6404  0B8B  0876               	movf	USBConfigureEndpoint@EPNum,w
  6405  0B8C  00F3               	movwf	??_USBConfigureEndpoint+1
  6406  0B8D  3001               	movlw	1
  6407  0B8E                     u1945:	
  6408  0B8E  35F3               	lslf	??_USBConfigureEndpoint+1,f
  6409  0B8F  3EFF               	addlw	-1
  6410  0B90  1D03               	skipz
  6411  0B91  2B8E               	goto	u1945
  6412  0B92  3573               	lslf	??_USBConfigureEndpoint+1,w
  6413  0B93  0772               	addwf	??_USBConfigureEndpoint,w
  6414  0B94  00F4               	movwf	??_USBConfigureEndpoint+2
  6415  0B95  3001               	movlw	1
  6416  0B96                     u1955:	
  6417  0B96  35F4               	lslf	??_USBConfigureEndpoint+2,f
  6418  0B97  3EFF               	addlw	-1
  6419  0B98  1D03               	skipz
  6420  0B99  2B96               	goto	u1955
  6421  0B9A  3574               	lslf	??_USBConfigureEndpoint+2,w
  6422  0B9B  00F5               	movwf	??_USBConfigureEndpoint+3
  6423  0B9C  0875               	movf	??_USBConfigureEndpoint+3,w
  6424  0B9D  07F7               	addwf	USBConfigureEndpoint@handle,f
  6425                           
  6426                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  6427  0B9E  0877               	movf	USBConfigureEndpoint@handle,w
  6428  0B9F  0086               	movwf	6
  6429  0BA0  0187               	clrf	7
  6430  0BA1  1381               	bcf	1,7
  6431                           
  6432                           ;usb_device.c: 1557: if(direction == 0)
  6433  0BA2  0871               	movf	USBConfigureEndpoint@direction,w
  6434  0BA3  1D03               	btfss	3,2
  6435  0BA4  2BAD               	goto	l2778
  6436                           
  6437                           ;usb_device.c: 1558: {
  6438                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  6439  0BA5  0877               	movf	USBConfigureEndpoint@handle,w
  6440  0BA6  00F2               	movwf	??_USBConfigureEndpoint
  6441  0BA7  0876               	movf	USBConfigureEndpoint@EPNum,w
  6442  0BA8  3E4D               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6443  0BA9  0086               	movwf	6
  6444  0BAA  3001               	movlw	1	; select bank2/3
  6445  0BAB  0087               	movwf	7
  6446  0BAC  2BB3               	goto	L9
  6447  0BAD                     l2778:	
  6448                           ;usb_device.c: 1560: }
  6449                           
  6450                           
  6451                           ;usb_device.c: 1561: else
  6452                           ;usb_device.c: 1562: {
  6453                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  6454  0BAD  0877               	movf	USBConfigureEndpoint@handle,w
  6455  0BAE  00F2               	movwf	??_USBConfigureEndpoint
  6456  0BAF  0876               	movf	USBConfigureEndpoint@EPNum,w
  6457  0BB0  3E6B               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  6458  0BB1  0086               	movwf	6
  6459  0BB2  0187               	clrf	7
  6460  0BB3                     L9:	
  6461  0BB3  0872               	movf	??_USBConfigureEndpoint,w
  6462  0BB4  0081               	movwf	1
  6463                           
  6464                           ;usb_device.c: 1564: }
  6465                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  6466  0BB5  0877               	movf	USBConfigureEndpoint@handle,w
  6467  0BB6  0086               	movwf	6
  6468  0BB7  0187               	clrf	7
  6469  0BB8  1301               	bcf	1,6
  6470                           
  6471                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  6472  0BB9  0877               	movf	USBConfigureEndpoint@handle,w
  6473  0BBA  3E04               	addlw	4
  6474  0BBB  0086               	movwf	6
  6475  0BBC  0187               	clrf	7
  6476  0BBD  1701               	bsf	1,6
  6477  0BBE  0008               	return
  6478  0BBF                     __end_of_USBConfigureEndpoint:	
  6479                           
  6480                           	psect	text22
  6481  0AE8                     __ptext22:	
  6482 ;; *************** function _USBCtrlTrfOutHandler *****************
  6483 ;; Defined at:
  6484 ;;		line 2541 in file "../../../../../../framework/usb/src/usb_device.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;		None
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;		None
  6489 ;; Return value:  Size  Location     Type
  6490 ;;		None               void
  6491 ;; Registers used:
  6492 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6500 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6501 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6502 ;;Total ram usage:        2 bytes
  6503 ;; Hardware stack levels used:    1
  6504 ;; Hardware stack levels required when called:    3
  6505 ;; This function calls:
  6506 ;;		_USBCtrlTrfRxService
  6507 ;; This function is called by:
  6508 ;;		_USBCtrlEPService
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           
  6513                           ;psect for function _USBCtrlTrfOutHandler
  6514  0AE8                     _USBCtrlTrfOutHandler:	
  6515                           
  6516                           ;usb_device.c: 2543: if(controlTransferState == 2)
  6517                           
  6518                           ;incstack = 0
  6519                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6520  0AE8  3002               	movlw	2
  6521  0AE9  0021               	movlb	1	; select bank1
  6522  0AEA  0664               	xorwf	_controlTransferState^(0+128),w
  6523  0AEB  1D03               	btfss	3,2
  6524  0AEC  2AF0               	goto	l3524
  6525                           
  6526                           ;usb_device.c: 2544: {
  6527                           ;usb_device.c: 2545: USBCtrlTrfRxService();
  6528  0AED  3187  270C         	fcall	_USBCtrlTrfRxService
  6529                           
  6530                           ;usb_device.c: 2546: }
  6531  0AEF  0008               	return
  6532  0AF0                     l3524:	
  6533                           
  6534                           ;usb_device.c: 2547: else
  6535                           ;usb_device.c: 2548: {
  6536                           ;usb_device.c: 2551: controlTransferState = 0;
  6537  0AF0  0021               	movlb	1	; select bank1
  6538  0AF1  01E4               	clrf	_controlTransferState^(0+128)
  6539                           
  6540                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
  6541  0AF2  0022               	movlb	2	; select bank2
  6542  0AF3  084F               	movf	_BothEP0OutUOWNsSet^(0+256),w
  6543  0AF4  1D03               	btfss	3,2
  6544  0AF5  2B15               	goto	l3536
  6545                           
  6546                           ;usb_device.c: 2559: {
  6547                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
  6548  0AF6  3008               	movlw	8
  6549  0AF7  00F7               	movwf	??_USBCtrlTrfOutHandler
  6550  0AF8  0A7C               	incf	_pBDTEntryEP0OutNext,w
  6551  0AF9  0086               	movwf	6
  6552  0AFA  0187               	clrf	7
  6553  0AFB  0877               	movf	??_USBCtrlTrfOutHandler,w
  6554  0AFC  0081               	movwf	1
  6555                           
  6556                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6557  0AFD  3040               	movlw	64
  6558  0AFE  00F7               	movwf	??_USBCtrlTrfOutHandler
  6559  0AFF  3000               	movlw	0
  6560  0B00  00F8               	movwf	??_USBCtrlTrfOutHandler+1
  6561  0B01  087C               	movf	_pBDTEntryEP0OutNext,w
  6562  0B02  3E02               	addlw	2
  6563  0B03  0086               	movwf	6
  6564  0B04  0187               	clrf	7
  6565  0B05  0877               	movf	??_USBCtrlTrfOutHandler,w
  6566  0B06  3FC0               	movwi [0]fsr1
  6567  0B07  0878               	movf	??_USBCtrlTrfOutHandler+1,w
  6568  0B08  3FC1               	movwi [1]fsr1
  6569                           
  6570                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6571  0B09  300C               	movlw	12
  6572  0B0A  00F7               	movwf	??_USBCtrlTrfOutHandler
  6573  0B0B  087C               	movf	_pBDTEntryEP0OutNext,w
  6574  0B0C  0086               	movwf	6
  6575  0B0D  0187               	clrf	7
  6576  0B0E  0877               	movf	??_USBCtrlTrfOutHandler,w
  6577  0B0F  0081               	movwf	1
  6578                           
  6579                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6580  0B10  087C               	movf	_pBDTEntryEP0OutNext,w
  6581  0B11  0086               	movwf	6
  6582  0B12  0187               	clrf	7
  6583  0B13  1781               	bsf	1,7
  6584                           
  6585                           ;usb_device.c: 2564: }
  6586  0B14  0008               	return
  6587  0B15                     l3536:	
  6588                           
  6589                           ;usb_device.c: 2565: else
  6590                           ;usb_device.c: 2566: {
  6591                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
  6592  0B15  01CF               	clrf	_BothEP0OutUOWNsSet^(0+256)
  6593  0B16  0008               	return
  6594  0B17                     __end_of_USBCtrlTrfOutHandler:	
  6595                           
  6596                           	psect	text23
  6597  070C                     __ptext23:	
  6598 ;; *************** function _USBCtrlTrfRxService *****************
  6599 ;; Defined at:
  6600 ;;		line 1852 in file "../../../../../../framework/usb/src/usb_device.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;		None
  6603 ;; Auto vars:     Size  Location     Type
  6604 ;;  byteToRead      1    6[COMMON] unsigned char 
  6605 ;;  i               1    5[COMMON] unsigned char 
  6606 ;; Return value:  Size  Location     Type
  6607 ;;		None               void
  6608 ;; Registers used:
  6609 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6610 ;; Tracked objects:
  6611 ;;		On entry : 0/0
  6612 ;;		On exit  : 0/0
  6613 ;;		Unchanged: 0/0
  6614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6616 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6617 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6618 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6619 ;;Total ram usage:        4 bytes
  6620 ;; Hardware stack levels used:    1
  6621 ;; Hardware stack levels required when called:    2
  6622 ;; This function calls:
  6623 ;;		_USBCtrlEPAllowStatusStage
  6624 ;; This function is called by:
  6625 ;;		_USBCtrlTrfOutHandler
  6626 ;; This function uses a non-reentrant model
  6627 ;;
  6628                           
  6629                           
  6630                           ;psect for function _USBCtrlTrfRxService
  6631  070C                     _USBCtrlTrfRxService:	
  6632                           
  6633                           ;usb_device.c: 1854: uint8_t byteToRead;
  6634                           ;usb_device.c: 1855: uint8_t i;
  6635                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  6636                           
  6637                           ;incstack = 0
  6638                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6639  070C  0020               	movlb	0	; select bank0
  6640  070D  086E               	movf	_pBDTEntryEP0OutCurrent,w
  6641  070E  0086               	movwf	6
  6642  070F  0187               	clrf	7
  6643  0710  3F41               	moviw [1]fsr1
  6644  0711  00F6               	movwf	USBCtrlTrfRxService@byteToRead
  6645                           
  6646                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  6647  0712  0876               	movf	USBCtrlTrfRxService@byteToRead,w
  6648  0713  00F3               	movwf	??_USBCtrlTrfRxService
  6649  0714  01F4               	clrf	??_USBCtrlTrfRxService+1
  6650  0715  0874               	movf	??_USBCtrlTrfRxService+1,w
  6651  0716  0022               	movlb	2	; select bank2
  6652  0717  0244               	subwf	((_outPipes+1)^(0+256)+3),w
  6653  0718  1D03               	skipz
  6654  0719  2F1C               	goto	u2795
  6655  071A  0873               	movf	??_USBCtrlTrfRxService,w
  6656  071B  0243               	subwf	(_outPipes^(0+256)+3),w
  6657  071C                     u2795:	
  6658  071C  1803               	skipnc
  6659  071D  2F22               	goto	l657
  6660                           
  6661                           ;usb_device.c: 1866: {
  6662                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  6663  071E  0843               	movf	(_outPipes^(0+256)+3),w
  6664  071F  00F3               	movwf	??_USBCtrlTrfRxService
  6665  0720  0873               	movf	??_USBCtrlTrfRxService,w
  6666  0721  00F6               	movwf	USBCtrlTrfRxService@byteToRead
  6667  0722                     l657:	
  6668                           
  6669                           ;usb_device.c: 1868: }
  6670                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  6671  0722  0876               	movf	USBCtrlTrfRxService@byteToRead,w
  6672  0723  00F3               	movwf	??_USBCtrlTrfRxService
  6673  0724  01F4               	clrf	??_USBCtrlTrfRxService+1
  6674  0725  0873               	movf	??_USBCtrlTrfRxService,w
  6675  0726  02C3               	subwf	(_outPipes^(0+256)+3),f
  6676  0727  0874               	movf	??_USBCtrlTrfRxService+1,w
  6677  0728  3BC4               	subwfb	((_outPipes+1)^(0+256)+3),f
  6678                           
  6679                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  6680  0729  01F5               	clrf	USBCtrlTrfRxService@i
  6681  072A                     l3338:	
  6682  072A  0876               	movf	USBCtrlTrfRxService@byteToRead,w
  6683  072B  0275               	subwf	USBCtrlTrfRxService@i,w
  6684  072C  1803               	btfsc	3,0
  6685  072D  2F42               	goto	l3340
  6686                           
  6687                           ;usb_device.c: 1875: {
  6688                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  6689  072E  0875               	movf	USBCtrlTrfRxService@i,w
  6690  072F  3E48               	addlw	72
  6691  0730  0086               	movwf	6
  6692  0731  0187               	clrf	7
  6693  0732  0801               	movf	1,w
  6694  0733  00F3               	movwf	??_USBCtrlTrfRxService
  6695  0734  0840               	movf	_outPipes^(0+256),w
  6696  0735  0086               	movwf	6
  6697  0736  0187               	clrf	7
  6698  0737  0873               	movf	??_USBCtrlTrfRxService,w
  6699  0738  0081               	movwf	1
  6700  0739  3001               	movlw	1
  6701  073A  00F3               	movwf	??_USBCtrlTrfRxService
  6702  073B  0873               	movf	??_USBCtrlTrfRxService,w
  6703  073C  07C0               	addwf	_outPipes^(0+256),f
  6704  073D  3001               	movlw	1
  6705  073E  00F3               	movwf	??_USBCtrlTrfRxService
  6706  073F  0873               	movf	??_USBCtrlTrfRxService,w
  6707  0740  07F5               	addwf	USBCtrlTrfRxService@i,f
  6708  0741  2F2A               	goto	l3338
  6709  0742                     l3340:	
  6710                           
  6711                           ;usb_device.c: 1877: }
  6712                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  6713  0742  0843               	movf	(_outPipes^(0+256)+3),w
  6714  0743  0444               	iorwf	((_outPipes+1)^(0+256)+3),w
  6715  0744  1903               	btfsc	3,2
  6716  0745  2F77               	goto	l3352
  6717                           
  6718                           ;usb_device.c: 1882: {
  6719                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  6720  0746  3008               	movlw	8
  6721  0747  00F3               	movwf	??_USBCtrlTrfRxService
  6722  0748  0A7C               	incf	_pBDTEntryEP0OutNext,w
  6723  0749  0086               	movwf	6
  6724  074A  0187               	clrf	7
  6725  074B  0873               	movf	??_USBCtrlTrfRxService,w
  6726  074C  0081               	movwf	1
  6727                           
  6728                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  6729  074D  3048               	movlw	72
  6730  074E  00F3               	movwf	??_USBCtrlTrfRxService
  6731  074F  3000               	movlw	0
  6732  0750  00F4               	movwf	??_USBCtrlTrfRxService+1
  6733  0751  087C               	movf	_pBDTEntryEP0OutNext,w
  6734  0752  3E02               	addlw	2
  6735  0753  0086               	movwf	6
  6736  0754  0187               	clrf	7
  6737  0755  0873               	movf	??_USBCtrlTrfRxService,w
  6738  0756  3FC0               	movwi [0]fsr1
  6739  0757  0874               	movf	??_USBCtrlTrfRxService+1,w
  6740  0758  3FC1               	movwi [1]fsr1
  6741                           
  6742                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  6743  0759  0020               	movlb	0	; select bank0
  6744  075A  086E               	movf	_pBDTEntryEP0OutCurrent,w
  6745  075B  0086               	movwf	6
  6746  075C  0187               	clrf	7
  6747  075D  1B01               	btfsc	1,6
  6748  075E  2F6B               	goto	l3350
  6749                           
  6750                           ;usb_device.c: 1886: {
  6751                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  6752  075F  3048               	movlw	72
  6753  0760  00F3               	movwf	??_USBCtrlTrfRxService
  6754  0761  087C               	movf	_pBDTEntryEP0OutNext,w
  6755  0762  0086               	movwf	6
  6756  0763  0187               	clrf	7
  6757  0764  0873               	movf	??_USBCtrlTrfRxService,w
  6758  0765  0081               	movwf	1
  6759                           
  6760                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6761  0766  087C               	movf	_pBDTEntryEP0OutNext,w
  6762  0767  0086               	movwf	6
  6763  0768  0187               	clrf	7
  6764  0769  1781               	bsf	1,7
  6765                           
  6766                           ;usb_device.c: 1889: }
  6767  076A  0008               	return
  6768  076B                     l3350:	
  6769                           
  6770                           ;usb_device.c: 1890: else
  6771                           ;usb_device.c: 1891: {
  6772                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  6773  076B  3008               	movlw	8
  6774  076C  00F3               	movwf	??_USBCtrlTrfRxService
  6775  076D  087C               	movf	_pBDTEntryEP0OutNext,w
  6776  076E  0086               	movwf	6
  6777  076F  0187               	clrf	7
  6778  0770  0873               	movf	??_USBCtrlTrfRxService,w
  6779  0771  0081               	movwf	1
  6780                           
  6781                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6782  0772  087C               	movf	_pBDTEntryEP0OutNext,w
  6783  0773  0086               	movwf	6
  6784  0774  0187               	clrf	7
  6785  0775  1781               	bsf	1,7
  6786                           
  6787                           ;usb_device.c: 1894: }
  6788                           ;usb_device.c: 1895: }
  6789  0776  0008               	return
  6790  0777                     l3352:	
  6791                           
  6792                           ;usb_device.c: 1896: else
  6793                           ;usb_device.c: 1897: {
  6794                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  6795  0777  3008               	movlw	8
  6796  0778  00F3               	movwf	??_USBCtrlTrfRxService
  6797  0779  0A7C               	incf	_pBDTEntryEP0OutNext,w
  6798  077A  0086               	movwf	6
  6799  077B  0187               	clrf	7
  6800  077C  0873               	movf	??_USBCtrlTrfRxService,w
  6801  077D  0081               	movwf	1
  6802                           
  6803                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6804  077E  3040               	movlw	64
  6805  077F  00F3               	movwf	??_USBCtrlTrfRxService
  6806  0780  3000               	movlw	0
  6807  0781  00F4               	movwf	??_USBCtrlTrfRxService+1
  6808  0782  087C               	movf	_pBDTEntryEP0OutNext,w
  6809  0783  3E02               	addlw	2
  6810  0784  0086               	movwf	6
  6811  0785  0187               	clrf	7
  6812  0786  0873               	movf	??_USBCtrlTrfRxService,w
  6813  0787  3FC0               	movwi [0]fsr1
  6814  0788  0874               	movf	??_USBCtrlTrfRxService+1,w
  6815  0789  3FC1               	movwi [1]fsr1
  6816                           
  6817                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  6818  078A  3004               	movlw	4
  6819  078B  00F3               	movwf	??_USBCtrlTrfRxService
  6820  078C  087C               	movf	_pBDTEntryEP0OutNext,w
  6821  078D  0086               	movwf	6
  6822  078E  0187               	clrf	7
  6823  078F  0873               	movf	??_USBCtrlTrfRxService,w
  6824  0790  0081               	movwf	1
  6825                           
  6826                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6827  0791  087C               	movf	_pBDTEntryEP0OutNext,w
  6828  0792  0086               	movwf	6
  6829  0793  0187               	clrf	7
  6830  0794  1781               	bsf	1,7
  6831                           
  6832                           ;usb_device.c: 1926: }
  6833                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  6834  0795  0022               	movlb	2	; select bank2
  6835  0796  13C2               	bcf	(_outPipes^(0+256)+2),7
  6836                           
  6837                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  6838  0797  0021               	movlb	1	; select bank1
  6839  0798  0862               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
  6840  0799  1D03               	btfss	3,2
  6841  079A  0008               	return
  6842                           
  6843                           ;usb_device.c: 1942: {
  6844                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  6845  079B  318D  25A5         	fcall	_USBCtrlEPAllowStatusStage
  6846  079D  0008               	return
  6847  079E                     __end_of_USBCtrlTrfRxService:	
  6848                           
  6849                           	psect	text24
  6850  0DA5                     __ptext24:	
  6851 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  6852 ;; Defined at:
  6853 ;;		line 1416 in file "../../../../../../framework/usb/src/usb_device.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;		None
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;		None
  6858 ;; Return value:  Size  Location     Type
  6859 ;;		None               void
  6860 ;; Registers used:
  6861 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6869 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6870 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6871 ;;Total ram usage:        2 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; Hardware stack levels required when called:    1
  6874 ;; This function calls:
  6875 ;;		Nothing
  6876 ;; This function is called by:
  6877 ;;		_USBDeviceTasks
  6878 ;;		_USBCtrlEPServiceComplete
  6879 ;;		_USBCtrlTrfRxService
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           
  6884                           ;psect for function _USBCtrlEPAllowStatusStage
  6885  0DA5                     _USBCtrlEPAllowStatusStage:	
  6886                           
  6887                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  6888                           
  6889                           ;incstack = 0
  6890                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  6891  0DA5  0022               	movlb	2	; select bank2
  6892  0DA6  0855               	movf	_USBStatusStageEnabledFlag1^(0+256),w	;volatile
  6893  0DA7  1D03               	btfss	3,2
  6894  0DA8  0008               	return
  6895                           
  6896                           ;usb_device.c: 1424: {
  6897                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  6898  0DA9  3001               	movlw	1
  6899  0DAA  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  6900  0DAB  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  6901  0DAC  00D5               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  6902                           
  6903                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  6904  0DAD  0856               	movf	_USBStatusStageEnabledFlag2^(0+256),w	;volatile
  6905  0DAE  1D03               	btfss	3,2
  6906  0DAF  0008               	return
  6907                           
  6908                           ;usb_device.c: 1427: {
  6909                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  6910  0DB0  3001               	movlw	1
  6911  0DB1  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  6912  0DB2  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  6913  0DB3  00D6               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  6914                           
  6915                           ;usb_device.c: 1432: if(controlTransferState == 2)
  6916  0DB4  3002               	movlw	2
  6917  0DB5  0021               	movlb	1	; select bank1
  6918  0DB6  0664               	xorwf	_controlTransferState^(0+128),w
  6919  0DB7  1D03               	btfss	3,2
  6920  0DB8  2DCA               	goto	l2984
  6921                           
  6922                           ;usb_device.c: 1433: {
  6923                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  6924  0DB9  0020               	movlb	0	; select bank0
  6925  0DBA  0A6B               	incf	_pBDTEntryIn,w
  6926  0DBB  0086               	movwf	6
  6927  0DBC  0187               	clrf	7
  6928  0DBD  0181               	clrf	1
  6929                           
  6930                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  6931  0DBE  3048               	movlw	72
  6932  0DBF  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  6933  0DC0  086B               	movf	_pBDTEntryIn,w
  6934  0DC1  0086               	movwf	6
  6935  0DC2  0187               	clrf	7
  6936  0DC3  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  6937  0DC4  0081               	movwf	1
  6938                           
  6939                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6940  0DC5  086B               	movf	_pBDTEntryIn,w
  6941  0DC6  0086               	movwf	6
  6942  0DC7  0187               	clrf	7
  6943  0DC8  1781               	bsf	1,7
  6944                           
  6945                           ;usb_device.c: 1437: }
  6946  0DC9  0008               	return
  6947  0DCA                     l2984:	
  6948                           
  6949                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  6950  0DCA  0021               	movlb	1	; select bank1
  6951  0DCB  0364               	decf	_controlTransferState^(0+128),w
  6952  0DCC  1D03               	btfss	3,2
  6953  0DCD  0008               	return
  6954                           
  6955                           ;usb_device.c: 1439: {
  6956                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  6957  0DCE  0022               	movlb	2	; select bank2
  6958  0DCF  01CF               	clrf	_BothEP0OutUOWNsSet^(0+256)
  6959                           
  6960                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
  6961  0DD0  3008               	movlw	8
  6962  0DD1  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  6963  0DD2  0020               	movlb	0	; select bank0
  6964  0DD3  0A6E               	incf	_pBDTEntryEP0OutCurrent,w
  6965  0DD4  0086               	movwf	6
  6966  0DD5  0187               	clrf	7
  6967  0DD6  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  6968  0DD7  0081               	movwf	1
  6969                           
  6970                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6971  0DD8  3040               	movlw	64
  6972  0DD9  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  6973  0DDA  3000               	movlw	0
  6974  0DDB  00F2               	movwf	??_USBCtrlEPAllowStatusStage+1
  6975  0DDC  086E               	movf	_pBDTEntryEP0OutCurrent,w
  6976  0DDD  3E02               	addlw	2
  6977  0DDE  0086               	movwf	6
  6978  0DDF  0187               	clrf	7
  6979  0DE0  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  6980  0DE1  3FC0               	movwi [0]fsr1
  6981  0DE2  0872               	movf	??_USBCtrlEPAllowStatusStage+1,w
  6982  0DE3  3FC1               	movwi [1]fsr1
  6983                           
  6984                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  6985  0DE4  3004               	movlw	4
  6986  0DE5  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  6987  0DE6  086E               	movf	_pBDTEntryEP0OutCurrent,w
  6988  0DE7  0086               	movwf	6
  6989  0DE8  0187               	clrf	7
  6990  0DE9  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  6991  0DEA  0081               	movwf	1
  6992                           
  6993                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  6994  0DEB  086E               	movf	_pBDTEntryEP0OutCurrent,w
  6995  0DEC  0086               	movwf	6
  6996  0DED  0187               	clrf	7
  6997  0DEE  1781               	bsf	1,7
  6998                           
  6999                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  7000  0DEF  0022               	movlb	2	; select bank2
  7001  0DF0  01CF               	clrf	_BothEP0OutUOWNsSet^(0+256)
  7002  0DF1  0ACF               	incf	_BothEP0OutUOWNsSet^(0+256),f
  7003                           
  7004                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
  7005  0DF2  3008               	movlw	8
  7006  0DF3  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7007  0DF4  0A7C               	incf	_pBDTEntryEP0OutNext,w
  7008  0DF5  0086               	movwf	6
  7009  0DF6  0187               	clrf	7
  7010  0DF7  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7011  0DF8  0081               	movwf	1
  7012                           
  7013                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7014  0DF9  3040               	movlw	64
  7015  0DFA  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7016  0DFB  3000               	movlw	0
  7017  0DFC  00F2               	movwf	??_USBCtrlEPAllowStatusStage+1
  7018  0DFD  087C               	movf	_pBDTEntryEP0OutNext,w
  7019  0DFE  3E02               	addlw	2
  7020  0DFF  0086               	movwf	6
  7021  0E00  0187               	clrf	7
  7022  0E01  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7023  0E02  3FC0               	movwi [0]fsr1
  7024  0E03  0872               	movf	??_USBCtrlEPAllowStatusStage+1,w
  7025  0E04  3FC1               	movwi [1]fsr1
  7026                           
  7027                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  7028  0E05  3080               	movlw	128
  7029  0E06  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7030  0E07  087C               	movf	_pBDTEntryEP0OutNext,w
  7031  0E08  0086               	movwf	6
  7032  0E09  0187               	clrf	7
  7033  0E0A  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7034  0E0B  0081               	movwf	1
  7035  0E0C  0008               	return
  7036  0E0D                     __end_of_USBCtrlEPAllowStatusStage:	
  7037                           
  7038                           	psect	text25
  7039  0D3E                     __ptext25:	
  7040 ;; *************** function _USBCtrlTrfInHandler *****************
  7041 ;; Defined at:
  7042 ;;		line 2595 in file "../../../../../../framework/usb/src/usb_device.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;		None
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;  lastDTS         1    6[COMMON] unsigned char 
  7047 ;; Return value:  Size  Location     Type
  7048 ;;		None               void
  7049 ;; Registers used:
  7050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7051 ;; Tracked objects:
  7052 ;;		On entry : 0/0
  7053 ;;		On exit  : 0/0
  7054 ;;		Unchanged: 0/0
  7055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7057 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7058 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7059 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7060 ;;Total ram usage:        3 bytes
  7061 ;; Hardware stack levels used:    1
  7062 ;; Hardware stack levels required when called:    2
  7063 ;; This function calls:
  7064 ;;		_USBCtrlTrfTxService
  7065 ;; This function is called by:
  7066 ;;		_USBCtrlEPService
  7067 ;; This function uses a non-reentrant model
  7068 ;;
  7069                           
  7070                           
  7071                           ;psect for function _USBCtrlTrfInHandler
  7072  0D3E                     _USBCtrlTrfInHandler:	
  7073                           
  7074                           ;usb_device.c: 2597: uint8_t lastDTS;
  7075                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  7076                           
  7077                           ;incstack = 0
  7078                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7079  0D3E  0020               	movlb	0	; select bank0
  7080  0D3F  086B               	movf	_pBDTEntryIn,w
  7081  0D40  0086               	movwf	6
  7082  0D41  0187               	clrf	7
  7083  0D42  3000               	movlw	0
  7084  0D43  1B01               	btfsc	1,6
  7085  0D44  3001               	movlw	1
  7086  0D45  00F6               	movwf	USBCtrlTrfInHandler@lastDTS
  7087                           
  7088                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  7089  0D46  3004               	movlw	4
  7090  0D47  00F4               	movwf	??_USBCtrlTrfInHandler
  7091  0D48  0874               	movf	??_USBCtrlTrfInHandler,w
  7092  0D49  06EB               	xorwf	_pBDTEntryIn,f
  7093                           
  7094                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
  7095  0D4A  3008               	movlw	8
  7096  0D4B  066D               	xorwf	_USBDeviceState,w
  7097  0D4C  1D03               	btfss	3,2
  7098  0D4D  2D5C               	goto	l3552
  7099                           
  7100                           ;usb_device.c: 2608: {
  7101                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
  7102  0D4E  0842               	movf	66,w	;volatile
  7103  0D4F  397F               	andlw	127
  7104  0D50  003D               	movlb	29	; select bank29
  7105  0D51  0096               	movwf	22	;volatile
  7106                           
  7107                           ;usb_device.c: 2610: if(UADDR != 0u)
  7108  0D52  0816               	movf	22,w	;volatile
  7109  0D53  1903               	btfsc	3,2
  7110  0D54  2D57               	goto	l3550
  7111                           
  7112                           ;usb_device.c: 2611: {
  7113                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
  7114  0D55  3010               	movlw	16
  7115  0D56  2D58               	goto	L10
  7116  0D57                     l3550:	
  7117                           ;usb_device.c: 2613: }
  7118                           
  7119                           
  7120                           ;usb_device.c: 2614: else
  7121                           ;usb_device.c: 2615: {
  7122                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
  7123  0D57  3004               	movlw	4
  7124  0D58                     L10:	
  7125  0D58  00F4               	movwf	??_USBCtrlTrfInHandler
  7126  0D59  0874               	movf	??_USBCtrlTrfInHandler,w
  7127  0D5A  0020               	movlb	0	; select bank0
  7128  0D5B  00ED               	movwf	_USBDeviceState
  7129  0D5C                     l3552:	
  7130                           
  7131                           ;usb_device.c: 2617: }
  7132                           ;usb_device.c: 2618: }
  7133                           ;usb_device.c: 2621: if(controlTransferState == 1)
  7134  0D5C  0021               	movlb	1	; select bank1
  7135  0D5D  0364               	decf	_controlTransferState^(0+128),w
  7136  0D5E  1D03               	btfss	3,2
  7137  0D5F  2D9F               	goto	l744
  7138                           
  7139                           ;usb_device.c: 2622: {
  7140                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  7141  0D60  3048               	movlw	72
  7142  0D61  00F4               	movwf	??_USBCtrlTrfInHandler
  7143  0D62  3000               	movlw	0
  7144  0D63  00F5               	movwf	??_USBCtrlTrfInHandler+1
  7145  0D64  0020               	movlb	0	; select bank0
  7146  0D65  086B               	movf	_pBDTEntryIn,w
  7147  0D66  3E02               	addlw	2
  7148  0D67  0086               	movwf	6
  7149  0D68  0187               	clrf	7
  7150  0D69  0874               	movf	??_USBCtrlTrfInHandler,w
  7151  0D6A  3FC0               	movwi [0]fsr1
  7152  0D6B  0875               	movf	??_USBCtrlTrfInHandler+1,w
  7153  0D6C  3FC1               	movwi [1]fsr1
  7154                           
  7155                           ;usb_device.c: 2624: USBCtrlTrfTxService();
  7156  0D6D  318E  260D  318D   	fcall	_USBCtrlTrfTxService
  7157                           
  7158                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
  7159  0D70  3002               	movlw	2
  7160  0D71  0021               	movlb	1	; select bank1
  7161  0D72  0667               	xorwf	_shortPacketStatus^(0+128),w
  7162  0D73  1D03               	btfss	3,2
  7163  0D74  2D82               	goto	l3562
  7164                           
  7165                           ;usb_device.c: 2631: {
  7166                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
  7167  0D75  3004               	movlw	4
  7168  0D76  00F4               	movwf	??_USBCtrlTrfInHandler
  7169  0D77  0020               	movlb	0	; select bank0
  7170  0D78  086B               	movf	_pBDTEntryIn,w
  7171  0D79  0086               	movwf	6
  7172  0D7A  0187               	clrf	7
  7173  0D7B  0874               	movf	??_USBCtrlTrfInHandler,w
  7174  0D7C  0081               	movwf	1
  7175                           
  7176                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7177  0D7D  086B               	movf	_pBDTEntryIn,w
  7178  0D7E  0086               	movwf	6
  7179  0D7F  0187               	clrf	7
  7180  0D80  1781               	bsf	1,7
  7181                           
  7182                           ;usb_device.c: 2636: }
  7183  0D81  0008               	return
  7184  0D82                     l3562:	
  7185                           
  7186                           ;usb_device.c: 2637: else
  7187                           ;usb_device.c: 2638: {
  7188                           ;usb_device.c: 2639: if(lastDTS == 0)
  7189  0D82  0876               	movf	USBCtrlTrfInHandler@lastDTS,w
  7190  0D83  1D03               	btfss	3,2
  7191  0D84  2D92               	goto	l3566
  7192                           
  7193                           ;usb_device.c: 2640: {
  7194                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  7195  0D85  3048               	movlw	72
  7196  0D86  00F4               	movwf	??_USBCtrlTrfInHandler
  7197  0D87  0020               	movlb	0	; select bank0
  7198  0D88  086B               	movf	_pBDTEntryIn,w
  7199  0D89  0086               	movwf	6
  7200  0D8A  0187               	clrf	7
  7201  0D8B  0874               	movf	??_USBCtrlTrfInHandler,w
  7202  0D8C  0081               	movwf	1
  7203                           
  7204                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7205  0D8D  086B               	movf	_pBDTEntryIn,w
  7206  0D8E  0086               	movwf	6
  7207  0D8F  0187               	clrf	7
  7208  0D90  1781               	bsf	1,7
  7209                           
  7210                           ;usb_device.c: 2643: }
  7211  0D91  0008               	return
  7212  0D92                     l3566:	
  7213                           
  7214                           ;usb_device.c: 2644: else
  7215                           ;usb_device.c: 2645: {
  7216                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  7217  0D92  3008               	movlw	8
  7218  0D93  00F4               	movwf	??_USBCtrlTrfInHandler
  7219  0D94  0020               	movlb	0	; select bank0
  7220  0D95  086B               	movf	_pBDTEntryIn,w
  7221  0D96  0086               	movwf	6
  7222  0D97  0187               	clrf	7
  7223  0D98  0874               	movf	??_USBCtrlTrfInHandler,w
  7224  0D99  0081               	movwf	1
  7225                           
  7226                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7227  0D9A  086B               	movf	_pBDTEntryIn,w
  7228  0D9B  0086               	movwf	6
  7229  0D9C  0187               	clrf	7
  7230  0D9D  1781               	bsf	1,7
  7231                           
  7232                           ;usb_device.c: 2648: }
  7233                           ;usb_device.c: 2649: }
  7234                           ;usb_device.c: 2650: }
  7235  0D9E  0008               	return
  7236  0D9F                     l744:	
  7237                           
  7238                           ;usb_device.c: 2651: else
  7239                           ;usb_device.c: 2652: {
  7240                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
  7241  0D9F  0022               	movlb	2	; select bank2
  7242  0DA0  1BC2               	btfsc	(_outPipes^(0+256)+2),7
  7243                           
  7244                           ;usb_device.c: 2661: }
  7245                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
  7246  0DA1  13C2               	bcf	(_outPipes^(0+256)+2),7
  7247                           
  7248                           ;usb_device.c: 2663: }
  7249                           ;usb_device.c: 2665: controlTransferState = 0;
  7250  0DA2  0021               	movlb	1	; select bank1
  7251  0DA3  01E4               	clrf	_controlTransferState^(0+128)
  7252  0DA4  0008               	return
  7253  0DA5                     __end_of_USBCtrlTrfInHandler:	
  7254                           
  7255                           	psect	text26
  7256  0E0D                     __ptext26:	
  7257 ;; *************** function _USBCtrlTrfTxService *****************
  7258 ;; Defined at:
  7259 ;;		line 1771 in file "../../../../../../framework/usb/src/usb_device.c"
  7260 ;; Parameters:    Size  Location     Type
  7261 ;;		None
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;  byteToSend      1    3[COMMON] unsigned char 
  7264 ;; Return value:  Size  Location     Type
  7265 ;;		None               void
  7266 ;; Registers used:
  7267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/0
  7270 ;;		On exit  : 0/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7274 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7275 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7276 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7277 ;;Total ram usage:        3 bytes
  7278 ;; Hardware stack levels used:    1
  7279 ;; Hardware stack levels required when called:    1
  7280 ;; This function calls:
  7281 ;;		Nothing
  7282 ;; This function is called by:
  7283 ;;		_USBCtrlEPAllowDataStage
  7284 ;;		_USBCtrlTrfInHandler
  7285 ;; This function uses a non-reentrant model
  7286 ;;
  7287                           
  7288                           
  7289                           ;psect for function _USBCtrlTrfTxService
  7290  0E0D                     _USBCtrlTrfTxService:	
  7291                           
  7292                           ;usb_device.c: 1773: uint8_t byteToSend;
  7293                           ;usb_device.c: 1777: byteToSend = 8;
  7294                           
  7295                           ;incstack = 0
  7296                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  7297  0E0D  3008               	movlw	8
  7298  0E0E  00F1               	movwf	??_USBCtrlTrfTxService
  7299  0E0F  0871               	movf	??_USBCtrlTrfTxService,w
  7300  0E10  00F3               	movwf	USBCtrlTrfTxService@byteToSend
  7301                           
  7302                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
  7303  0E11  3000               	movlw	0
  7304  0E12  0021               	movlb	1	; select bank1
  7305  0E13  026D               	subwf	((_inPipes+1)^(0+128)+3),w
  7306  0E14  3008               	movlw	8
  7307  0E15  1903               	skipnz
  7308  0E16  026C               	subwf	(_inPipes^(0+128)+3),w
  7309  0E17  1803               	skipnc
  7310  0E18  2E2A               	goto	l642
  7311                           
  7312                           ;usb_device.c: 1779: {
  7313                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
  7314  0E19  086C               	movf	(_inPipes^(0+128)+3),w
  7315  0E1A  00F1               	movwf	??_USBCtrlTrfTxService
  7316  0E1B  0871               	movf	??_USBCtrlTrfTxService,w
  7317  0E1C  00F3               	movwf	USBCtrlTrfTxService@byteToSend
  7318                           
  7319                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
  7320  0E1D  0867               	movf	_shortPacketStatus^(0+128),w
  7321  0E1E  1D03               	btfss	3,2
  7322  0E1F  2E23               	goto	l2928
  7323                           
  7324                           ;usb_device.c: 1788: {
  7325                           ;usb_device.c: 1789: shortPacketStatus = 1;
  7326  0E20  01E7               	clrf	_shortPacketStatus^(0+128)
  7327  0E21  0AE7               	incf	_shortPacketStatus^(0+128),f
  7328                           
  7329                           ;usb_device.c: 1790: }
  7330  0E22  2E2A               	goto	l642
  7331  0E23                     l2928:	
  7332                           
  7333                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
  7334  0E23  0367               	decf	_shortPacketStatus^(0+128),w
  7335  0E24  1D03               	btfss	3,2
  7336  0E25  2E2A               	goto	l642
  7337                           
  7338                           ;usb_device.c: 1792: {
  7339                           ;usb_device.c: 1793: shortPacketStatus = 2;
  7340  0E26  3002               	movlw	2
  7341  0E27  00F1               	movwf	??_USBCtrlTrfTxService
  7342  0E28  0871               	movf	??_USBCtrlTrfTxService,w
  7343  0E29  00E7               	movwf	_shortPacketStatus^(0+128)
  7344  0E2A                     l642:	
  7345                           
  7346                           ;usb_device.c: 1794: }
  7347                           ;usb_device.c: 1795: }
  7348                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
  7349  0E2A  0873               	movf	USBCtrlTrfTxService@byteToSend,w
  7350  0E2B  00F1               	movwf	??_USBCtrlTrfTxService
  7351  0E2C  01F2               	clrf	??_USBCtrlTrfTxService+1
  7352  0E2D  0871               	movf	??_USBCtrlTrfTxService,w
  7353  0E2E  02EC               	subwf	(_inPipes^(0+128)+3),f
  7354  0E2F  0872               	movf	??_USBCtrlTrfTxService+1,w
  7355  0E30  3BED               	subwfb	((_inPipes+1)^(0+128)+3),f
  7356                           
  7357                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
  7358  0E31  0873               	movf	USBCtrlTrfTxService@byteToSend,w
  7359  0E32  00F1               	movwf	??_USBCtrlTrfTxService
  7360  0E33  0020               	movlb	0	; select bank0
  7361  0E34  0A6B               	incf	_pBDTEntryIn,w
  7362  0E35  0086               	movwf	6
  7363  0E36  0187               	clrf	7
  7364  0E37  0871               	movf	??_USBCtrlTrfTxService,w
  7365  0E38  0081               	movwf	1
  7366                           
  7367                           ;usb_device.c: 1808: pDst = ( uint8_t*)CtrlTrfData;
  7368  0E39  3048               	movlw	72
  7369  0E3A  00F1               	movwf	??_USBCtrlTrfTxService
  7370  0E3B  0871               	movf	??_USBCtrlTrfTxService,w
  7371  0E3C  0022               	movlb	2	; select bank2
  7372  0E3D  00DA               	movwf	_pDst^(0+256)
  7373                           
  7374                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  7375  0E3E  0021               	movlb	1	; select bank1
  7376  0E3F  1C6B               	btfss	(_inPipes^(0+128)+2),0
  7377  0E40  2E5B               	goto	l2948
  7378  0E41  2E78               	goto	l2958
  7379  0E42                     l2940:	
  7380                           ;usb_device.c: 1810: {
  7381                           ;usb_device.c: 1811: while(byteToSend)
  7382                           
  7383                           
  7384                           ;usb_device.c: 1812: {
  7385                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
  7386  0E42  0021               	movlb	1	; select bank1
  7387  0E43  0869               	movf	_inPipes^(0+128),w
  7388  0E44  0084               	movwf	4
  7389  0E45  086A               	movf	(_inPipes+1)^(0+128),w
  7390  0E46  0085               	movwf	5
  7391  0E47  0800               	movf	0,w	;code access
  7392  0E48  00F1               	movwf	??_USBCtrlTrfTxService
  7393  0E49  0022               	movlb	2	; select bank2
  7394  0E4A  085A               	movf	_pDst^(0+256),w
  7395  0E4B  0086               	movwf	6
  7396  0E4C  0187               	clrf	7
  7397  0E4D  0871               	movf	??_USBCtrlTrfTxService,w
  7398  0E4E  0081               	movwf	1
  7399  0E4F  3001               	movlw	1
  7400  0E50  0021               	movlb	1	; select bank1
  7401  0E51  07E9               	addwf	_inPipes^(0+128),f
  7402  0E52  3000               	movlw	0
  7403  0E53  3DEA               	addwfc	(_inPipes+1)^(0+128),f
  7404  0E54  3001               	movlw	1
  7405  0E55  00F1               	movwf	??_USBCtrlTrfTxService
  7406  0E56  0871               	movf	??_USBCtrlTrfTxService,w
  7407  0E57  0022               	movlb	2	; select bank2
  7408  0E58  07DA               	addwf	_pDst^(0+256),f
  7409                           
  7410                           ;usb_device.c: 1814: byteToSend--;
  7411  0E59  3001               	movlw	1
  7412  0E5A  02F3               	subwf	USBCtrlTrfTxService@byteToSend,f
  7413  0E5B                     l2948:	
  7414  0E5B  0873               	movf	USBCtrlTrfTxService@byteToSend,w
  7415  0E5C  1903               	btfsc	3,2
  7416  0E5D  0008               	return
  7417  0E5E  2E42               	goto	l2940
  7418  0E5F                     l2950:	
  7419                           ;usb_device.c: 1817: else
  7420                           ;usb_device.c: 1818: {
  7421                           ;usb_device.c: 1819: while(byteToSend)
  7422                           
  7423                           ;usb_device.c: 1815: }
  7424                           ;usb_device.c: 1816: }
  7425                           
  7426                           
  7427                           ;usb_device.c: 1820: {
  7428                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
  7429  0E5F  0021               	movlb	1	; select bank1
  7430  0E60  0869               	movf	_inPipes^(0+128),w
  7431  0E61  0084               	movwf	4
  7432  0E62  086A               	movf	(_inPipes+1)^(0+128),w
  7433  0E63  0085               	movwf	5
  7434  0E64  0800               	movf	0,w	;code access
  7435  0E65  00F1               	movwf	??_USBCtrlTrfTxService
  7436  0E66  0022               	movlb	2	; select bank2
  7437  0E67  085A               	movf	_pDst^(0+256),w
  7438  0E68  0086               	movwf	6
  7439  0E69  0187               	clrf	7
  7440  0E6A  0871               	movf	??_USBCtrlTrfTxService,w
  7441  0E6B  0081               	movwf	1
  7442  0E6C  3001               	movlw	1
  7443  0E6D  0021               	movlb	1	; select bank1
  7444  0E6E  07E9               	addwf	_inPipes^(0+128),f
  7445  0E6F  3000               	movlw	0
  7446  0E70  3DEA               	addwfc	(_inPipes+1)^(0+128),f
  7447  0E71  3001               	movlw	1
  7448  0E72  00F1               	movwf	??_USBCtrlTrfTxService
  7449  0E73  0871               	movf	??_USBCtrlTrfTxService,w
  7450  0E74  0022               	movlb	2	; select bank2
  7451  0E75  07DA               	addwf	_pDst^(0+256),f
  7452                           
  7453                           ;usb_device.c: 1822: byteToSend--;
  7454  0E76  3001               	movlw	1
  7455  0E77  02F3               	subwf	USBCtrlTrfTxService@byteToSend,f
  7456  0E78                     l2958:	
  7457  0E78  0873               	movf	USBCtrlTrfTxService@byteToSend,w
  7458  0E79  1903               	btfsc	3,2
  7459  0E7A  0008               	return
  7460  0E7B  2E5F               	goto	l2950
  7461  0E7C                     __end_of_USBCtrlTrfTxService:	
  7462                           
  7463                           	psect	text27
  7464  0A97                     __ptext27:	
  7465 ;; *************** function _SYSTEM_Initialize *****************
  7466 ;; Defined at:
  7467 ;;		line 62 in file "../src/system_config/low_pin_count_usb_development_kit/pic16f1455/system.c"
  7468 ;; Parameters:    Size  Location     Type
  7469 ;;  state           1    wreg     enum E2461
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;  state           1    2[COMMON] enum E2461
  7472 ;; Return value:  Size  Location     Type
  7473 ;;		None               void
  7474 ;; Registers used:
  7475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7476 ;; Tracked objects:
  7477 ;;		On entry : 0/0
  7478 ;;		On exit  : 0/0
  7479 ;;		Unchanged: 0/0
  7480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7482 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7484 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7485 ;;Total ram usage:        1 bytes
  7486 ;; Hardware stack levels used:    1
  7487 ;; Hardware stack levels required when called:    2
  7488 ;; This function calls:
  7489 ;;		_BUTTON_Enable
  7490 ;;		_LED_Enable
  7491 ;; This function is called by:
  7492 ;;		_main
  7493 ;; This function uses a non-reentrant model
  7494 ;;
  7495                           
  7496                           
  7497                           ;psect for function _SYSTEM_Initialize
  7498  0A97                     _SYSTEM_Initialize:	
  7499                           
  7500                           ;incstack = 0
  7501                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7502                           ;SYSTEM_Initialize@state stored from wreg
  7503  0A97  00F2               	movwf	SYSTEM_Initialize@state
  7504                           
  7505                           ;system.c: 65: OPTION_REGbits.nWPUEN = 0;
  7506  0A98  0021               	movlb	1	; select bank1
  7507  0A99  1395               	bcf	21,7	;volatile
  7508                           
  7509                           ;system.c: 66: WPUAbits.WPUA3 = 0;
  7510  0A9A  0024               	movlb	4	; select bank4
  7511  0A9B  118C               	bcf	12,3	;volatile
  7512                           
  7513                           ;system.c: 67: WPUAbits.WPUA4 = 0;
  7514  0A9C  120C               	bcf	12,4	;volatile
  7515                           
  7516                           ;system.c: 68: WPUAbits.WPUA5 = 0;
  7517  0A9D  128C               	bcf	12,5	;volatile
  7518                           
  7519                           ;system.c: 70: switch(state)
  7520  0A9E  2AB1               	goto	l3820
  7521  0A9F                     l3810:	
  7522                           ;system.c: 71: {
  7523                           ;system.c: 72: case SYSTEM_STATE_USB_START:
  7524                           
  7525                           
  7526                           ;system.c: 76: OSCCON = 0xFC;
  7527  0A9F  30FC               	movlw	252
  7528  0AA0  0021               	movlb	1	; select bank1
  7529  0AA1  0099               	movwf	25	;volatile
  7530                           
  7531                           ;system.c: 77: ACTCON = 0x90;
  7532  0AA2  3090               	movlw	144
  7533  0AA3  0027               	movlb	7	; select bank7
  7534  0AA4  009B               	movwf	27	;volatile
  7535                           
  7536                           ;system.c: 79: LED_Enable(0);
  7537  0AA5  3000               	movlw	0
  7538  0AA6  318A  2217  318A   	fcall	_LED_Enable
  7539                           
  7540                           ;system.c: 80: LED_Enable(LED_C2);
  7541  0AA9  3001               	movlw	1
  7542  0AAA  318A  2217  318A   	fcall	_LED_Enable
  7543                           
  7544                           ;system.c: 81: BUTTON_Enable(BUTTON_S1);
  7545  0AAD  3001               	movlw	1
  7546  0AAE  3189  2137         	fcall	_BUTTON_Enable
  7547                           
  7548                           ;system.c: 89: }
  7549                           
  7550                           ;system.c: 88: break;
  7551                           
  7552                           ;system.c: 87: case SYSTEM_STATE_USB_RESUME:
  7553                           
  7554                           ;system.c: 85: break;
  7555                           
  7556                           ;system.c: 84: case SYSTEM_STATE_USB_SUSPEND:
  7557                           
  7558                           ;system.c: 82: break;
  7559  0AB0  0008               	return
  7560  0AB1                     l3820:	
  7561  0AB1  0872               	movf	SYSTEM_Initialize@state,w
  7562                           
  7563                           ; Switch size 1, requested type "space"
  7564                           ; Number of cases is 3, Range of values is 0 to 2
  7565                           ; switch strategies available:
  7566                           ; Name         Instructions Cycles
  7567                           ; simple_byte           10     6 (average)
  7568                           ; direct_byte           12     6 (fixed)
  7569                           ; jumptable            260     6 (fixed)
  7570                           ;	Chosen strategy is simple_byte
  7571  0AB2  3A00               	xorlw	0	; case 0
  7572  0AB3  1903               	skipnz
  7573  0AB4  2A9F               	goto	l3810
  7574  0AB5  3A01               	xorlw	1	; case 1
  7575  0AB6  1903               	skipnz
  7576  0AB7  2ABC               	goto	l20
  7577  0AB8  3A03               	xorlw	3	; case 2
  7578  0AB9  1903               	skipnz
  7579  0ABA  2ABC               	goto	l20
  7580  0ABB  2ABC               	goto	l20
  7581  0ABC                     l20:	
  7582  0ABC  0008               	return
  7583  0ABD                     __end_of_SYSTEM_Initialize:	
  7584                           
  7585                           	psect	text28
  7586  0A17                     __ptext28:	
  7587 ;; *************** function _LED_Enable *****************
  7588 ;; Defined at:
  7589 ;;		line 215 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1455/leds.c"
  7590 ;; Parameters:    Size  Location     Type
  7591 ;;  led             1    wreg     enum E2
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;  led             1    1[COMMON] enum E2
  7594 ;; Return value:  Size  Location     Type
  7595 ;;		None               void
  7596 ;; Registers used:
  7597 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7598 ;; Tracked objects:
  7599 ;;		On entry : 0/0
  7600 ;;		On exit  : 0/0
  7601 ;;		Unchanged: 0/0
  7602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7606 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7607 ;;Total ram usage:        1 bytes
  7608 ;; Hardware stack levels used:    1
  7609 ;; Hardware stack levels required when called:    1
  7610 ;; This function calls:
  7611 ;;		Nothing
  7612 ;; This function is called by:
  7613 ;;		_SYSTEM_Initialize
  7614 ;; This function uses a non-reentrant model
  7615 ;;
  7616                           
  7617                           
  7618                           ;psect for function _LED_Enable
  7619  0A17                     _LED_Enable:	
  7620                           
  7621                           ;incstack = 0
  7622                           ; Regs used in _LED_Enable: [wreg-fsr0h+status,2+status,0]
  7623                           ;LED_Enable@led stored from wreg
  7624  0A17  00F1               	movwf	LED_Enable@led
  7625                           
  7626                           ;leds.c: 217: switch(led)
  7627  0A18  2A28               	goto	l3576
  7628  0A19                     l414:	
  7629                           ;leds.c: 218: {
  7630                           ;leds.c: 219: case LED_C2:
  7631                           
  7632                           
  7633                           ;leds.c: 220: TRISCbits.TRISC2 = 0;
  7634  0A19  0021               	movlb	1	; select bank1
  7635  0A1A  110E               	bcf	14,2	;volatile
  7636                           
  7637                           ;leds.c: 221: break;
  7638  0A1B  0008               	return
  7639  0A1C                     l416:	
  7640                           ;leds.c: 223: case LED_D1:
  7641                           
  7642                           
  7643                           ;leds.c: 224: TRISCbits.TRISC0 = 0;
  7644  0A1C  0021               	movlb	1	; select bank1
  7645  0A1D  100E               	bcf	14,0	;volatile
  7646                           
  7647                           ;leds.c: 225: break;
  7648  0A1E  0008               	return
  7649  0A1F                     l417:	
  7650                           ;leds.c: 227: case LED_D2:
  7651                           
  7652                           
  7653                           ;leds.c: 228: TRISCbits.TRISC1 = 0;
  7654  0A1F  0021               	movlb	1	; select bank1
  7655  0A20  108E               	bcf	14,1	;volatile
  7656                           
  7657                           ;leds.c: 229: break;
  7658  0A21  0008               	return
  7659  0A22                     l418:	
  7660                           ;leds.c: 231: case LED_D3:
  7661                           
  7662                           
  7663                           ;leds.c: 232: TRISCbits.TRISC2 = 0;
  7664  0A22  0021               	movlb	1	; select bank1
  7665  0A23  110E               	bcf	14,2	;volatile
  7666                           
  7667                           ;leds.c: 233: break;
  7668  0A24  0008               	return
  7669  0A25                     l419:	
  7670                           ;leds.c: 235: case LED_D4:
  7671                           
  7672                           
  7673                           ;leds.c: 236: TRISCbits.TRISC3 = 0;
  7674  0A25  0021               	movlb	1	; select bank1
  7675  0A26  118E               	bcf	14,3	;volatile
  7676                           
  7677                           ;leds.c: 241: }
  7678                           
  7679                           ;leds.c: 240: break;
  7680                           
  7681                           ;leds.c: 239: case LED_NONE:
  7682                           
  7683                           ;leds.c: 237: break;
  7684  0A27  0008               	return
  7685  0A28                     l3576:	
  7686  0A28  0871               	movf	LED_Enable@led,w
  7687                           
  7688                           ; Switch size 1, requested type "space"
  7689                           ; Number of cases is 6, Range of values is 0 to 5
  7690                           ; switch strategies available:
  7691                           ; Name         Instructions Cycles
  7692                           ; direct_byte           18     6 (fixed)
  7693                           ; simple_byte           19    10 (average)
  7694                           ; jumptable            260     6 (fixed)
  7695                           ;	Chosen strategy is direct_byte
  7696  0A29  0084               	movwf	4
  7697  0A2A  3006               	movlw	6
  7698  0A2B  0204               	subwf	4,w
  7699  0A2C  1803               	skipnc
  7700  0A2D  0008               	return
  7701  0A2E  3188               	movlp	high S4774
  7702  0A2F  3504               	lslf	4,w
  7703  0A30  3E1A               	addlw	low S4774
  7704  0A31  0082               	movwf	2
  7705  0A32                     l421:	
  7706  0A32  0008               	return
  7707  0A33                     __end_of_LED_Enable:	
  7708                           
  7709                           	psect	swtext2
  7710  081A                     __pswtext2:	
  7711  081A                     S4774:	
  7712  081A  318A  2A32         	ljmp	l421
  7713  081C  318A  2A19         	ljmp	l414
  7714  081E  318A  2A1C         	ljmp	l416
  7715  0820  318A  2A1F         	ljmp	l417
  7716  0822  318A  2A22         	ljmp	l418
  7717  0824  318A  2A25         	ljmp	l419
  7718                           
  7719                           	psect	text29
  7720  0937                     __ptext29:	
  7721 ;; *************** function _BUTTON_Enable *****************
  7722 ;; Defined at:
  7723 ;;		line 63 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1455/buttons.c"
  7724 ;; Parameters:    Size  Location     Type
  7725 ;;  button          1    wreg     enum E2429
  7726 ;; Auto vars:     Size  Location     Type
  7727 ;;  button          1    1[COMMON] enum E2429
  7728 ;; Return value:  Size  Location     Type
  7729 ;;		None               void
  7730 ;; Registers used:
  7731 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7732 ;; Tracked objects:
  7733 ;;		On entry : 0/0
  7734 ;;		On exit  : 0/0
  7735 ;;		Unchanged: 0/0
  7736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7738 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7740 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7741 ;;Total ram usage:        1 bytes
  7742 ;; Hardware stack levels used:    1
  7743 ;; Hardware stack levels required when called:    1
  7744 ;; This function calls:
  7745 ;;		Nothing
  7746 ;; This function is called by:
  7747 ;;		_SYSTEM_Initialize
  7748 ;; This function uses a non-reentrant model
  7749 ;;
  7750                           
  7751                           
  7752                           ;psect for function _BUTTON_Enable
  7753  0937                     _BUTTON_Enable:	
  7754                           
  7755                           ;incstack = 0
  7756                           ; Regs used in _BUTTON_Enable: [wreg-fsr0h+status,2+status,0]
  7757                           ;BUTTON_Enable@button stored from wreg
  7758  0937  00F1               	movwf	BUTTON_Enable@button
  7759                           
  7760                           ;buttons.c: 65: switch(button)
  7761  0938  293C               	goto	l3586
  7762  0939                     l359:	
  7763                           ;buttons.c: 66: {
  7764                           ;buttons.c: 67: case BUTTON_S1:
  7765                           
  7766                           
  7767                           ;buttons.c: 68: WPUAbits.WPUA5 = 1;
  7768  0939  0024               	movlb	4	; select bank4
  7769  093A  168C               	bsf	12,5	;volatile
  7770                           
  7771                           ;buttons.c: 73: }
  7772                           
  7773                           ;buttons.c: 72: break;
  7774                           
  7775                           ;buttons.c: 71: case BUTTON_NONE:
  7776                           
  7777                           ;buttons.c: 69: break;
  7778  093B  0008               	return
  7779  093C                     l3586:	
  7780  093C  0871               	movf	BUTTON_Enable@button,w
  7781                           
  7782                           ; Switch size 1, requested type "space"
  7783                           ; Number of cases is 2, Range of values is 0 to 1
  7784                           ; switch strategies available:
  7785                           ; Name         Instructions Cycles
  7786                           ; simple_byte            7     4 (average)
  7787                           ; direct_byte           10     6 (fixed)
  7788                           ; jumptable            260     6 (fixed)
  7789                           ;	Chosen strategy is simple_byte
  7790  093D  3A00               	xorlw	0	; case 0
  7791  093E  1903               	skipnz
  7792  093F  2944               	goto	l362
  7793  0940  3A01               	xorlw	1	; case 1
  7794  0941  1903               	skipnz
  7795  0942  2939               	goto	l359
  7796  0943  2944               	goto	l362
  7797  0944                     l362:	
  7798  0944  0008               	return
  7799  0945                     __end_of_BUTTON_Enable:	
  7800                           
  7801                           	psect	text30
  7802  0035                     __ptext30:	
  7803 ;; *************** function _APP_DeviceAudioMIDITasks *****************
  7804 ;; Defined at:
  7805 ;;		line 57 in file "../src/app_device_audio_midi.c"
  7806 ;; Parameters:    Size  Location     Type
  7807 ;;		None
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;  velocity        1   26[BANK0 ] unsigned char 
  7810 ;;  scan_pitch      1   25[BANK0 ] unsigned char 
  7811 ;; Return value:  Size  Location     Type
  7812 ;;		None               void
  7813 ;; Registers used:
  7814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7821 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7822 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7823 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7824 ;;Total ram usage:       10 bytes
  7825 ;; Hardware stack levels used:    1
  7826 ;; Hardware stack levels required when called:    5
  7827 ;; This function calls:
  7828 ;;		_BUTTON_IsPressed
  7829 ;;		_USBTransferOnePacket
  7830 ;;		_scan_task
  7831 ;; This function is called by:
  7832 ;;		_main
  7833 ;; This function uses a non-reentrant model
  7834 ;;
  7835                           
  7836                           
  7837                           ;psect for function _APP_DeviceAudioMIDITasks
  7838  0035                     _APP_DeviceAudioMIDITasks:	
  7839                           
  7840                           ;app_device_audio_midi.c: 59: if( USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND)
  7841                           
  7842                           ;incstack = 0
  7843                           ; Regs used in _APP_DeviceAudioMIDITasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7844  0035  3020               	movlw	32
  7845  0036  0020               	movlb	0	; select bank0
  7846  0037  026D               	subwf	_USBDeviceState,w
  7847  0038  1C03               	skipc
  7848  0039  0008               	return
  7849  003A  003D               	movlb	29	; select bank29
  7850  003B  188E               	btfsc	14,1	;volatile
  7851  003C  0008               	return
  7852                           
  7853                           ;app_device_audio_midi.c: 62: if(!(USBRxHandle==0?0:((volatile BDT_ENTRY*)USBRxHandle)->
      +                          STAT.UOWN))
  7854                           
  7855                           ;app_device_audio_midi.c: 60: return;
  7856  003D  0022               	movlb	2	; select bank2
  7857  003E  0854               	movf	_USBRxHandle^(0+256),w
  7858  003F  1903               	btfsc	3,2
  7859  0040  284F               	goto	l3948
  7860  0041  0854               	movf	_USBRxHandle^(0+256),w
  7861  0042  0086               	movwf	6
  7862  0043  0187               	clrf	7
  7863  0044  0D01               	rlf	1,w
  7864  0045  0D01               	rlf	1,w
  7865  0046  3901               	andlw	1
  7866  0047  0020               	movlb	0	; select bank0
  7867  0048  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  7868  0049  01E2               	clrf	??_APP_DeviceAudioMIDITasks+1
  7869  004A  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  7870  004B  00E3               	movwf	_APP_DeviceAudioMIDITasks$485
  7871  004C  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  7872  004D  00E4               	movwf	_APP_DeviceAudioMIDITasks$485+1
  7873  004E  2852               	goto	l3950
  7874  004F                     l3948:	
  7875  004F  0020               	movlb	0	; select bank0
  7876  0050  01E3               	clrf	_APP_DeviceAudioMIDITasks$485
  7877  0051  01E4               	clrf	_APP_DeviceAudioMIDITasks$485+1
  7878  0052                     l3950:	
  7879  0052  0863               	movf	_APP_DeviceAudioMIDITasks$485,w
  7880  0053  0464               	iorwf	_APP_DeviceAudioMIDITasks$485+1,w
  7881  0054  1D03               	btfss	3,2
  7882  0055  2868               	goto	l3954
  7883                           
  7884                           ;app_device_audio_midi.c: 63: {
  7885                           ;app_device_audio_midi.c: 70: USBRxHandle = USBTransferOnePacket(1,0,(uint8_t*)&Received
      +                          DataBuffer,64);
  7886  0056  01F1               	clrf	USBTransferOnePacket@dir
  7887  0057  30A0               	movlw	160
  7888  0058  00F2               	movwf	USBTransferOnePacket@data
  7889  0059  3000               	movlw	0
  7890  005A  00F3               	movwf	USBTransferOnePacket@data+1
  7891  005B  3040               	movlw	64
  7892  005C  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  7893  005D  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  7894  005E  00F4               	movwf	USBTransferOnePacket@len
  7895  005F  3001               	movlw	1
  7896  0060  318C  249A  3180   	fcall	_USBTransferOnePacket
  7897  0063  0020               	movlb	0	; select bank0
  7898  0064  00E2               	movwf	??_APP_DeviceAudioMIDITasks+1
  7899  0065  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  7900  0066  0022               	movlb	2	; select bank2
  7901  0067  00D4               	movwf	_USBRxHandle^(0+256)
  7902  0068                     l3954:	
  7903                           
  7904                           ;app_device_audio_midi.c: 71: }
  7905                           ;app_device_audio_midi.c: 73: {
  7906                           ;app_device_audio_midi.c: 74: uint8_t scan_pitch = 0x3C, velocity = 0;
  7907  0068  303C               	movlw	60
  7908  0069  0020               	movlb	0	; select bank0
  7909  006A  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  7910  006B  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  7911  006C  00E9               	movwf	APP_DeviceAudioMIDITasks@scan_pitch
  7912  006D  01EA               	clrf	APP_DeviceAudioMIDITasks@velocity
  7913                           
  7914                           ;app_device_audio_midi.c: 75: if (scan_task(&scan_pitch, &velocity)) {
  7915  006E  306A               	movlw	(low (APP_DeviceAudioMIDITasks@velocity| 0))& (0+255)
  7916  006F  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  7917  0070  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  7918  0071  00DB               	movwf	scan_task@velocity
  7919  0072  3069               	movlw	(low (APP_DeviceAudioMIDITasks@scan_pitch| 0))& (0+255)
  7920  0073  3185  25C0  3180   	fcall	_scan_task
  7921  0076  3A00               	xorlw	0
  7922  0077  1903               	skipnz
  7923  0078  28AE               	goto	l3968
  7924                           
  7925                           ;app_device_audio_midi.c: 76: midiData.Val = 0;
  7926  0079  3000               	movlw	0
  7927  007A  0023               	movlb	3	; select bank3
  7928  007B  00A3               	movwf	35
  7929  007C  3000               	movlw	0
  7930  007D  00A2               	movwf	34
  7931  007E  3000               	movlw	0
  7932  007F  00A1               	movwf	33
  7933  0080  3000               	movlw	0
  7934  0081  00A0               	movwf	32
  7935                           
  7936                           ;app_device_audio_midi.c: 77: midiData.CableNumber = 0;
  7937  0082  300F               	movlw	-241
  7938  0083  05A0               	andwf	32,f
  7939                           
  7940                           ;app_device_audio_midi.c: 78: midiData.CodeIndexNumber = 0x9;
  7941  0084  0820               	movf	32,w
  7942  0085  39F0               	andlw	-16
  7943  0086  3809               	iorlw	9
  7944  0087  00A0               	movwf	32
  7945                           
  7946                           ;app_device_audio_midi.c: 79: midiData.DATA_0 = 0x90;
  7947  0088  3090               	movlw	144
  7948  0089  0020               	movlb	0	; select bank0
  7949  008A  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  7950  008B  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  7951  008C  0023               	movlb	3	; select bank3
  7952  008D  00A1               	movwf	33
  7953                           
  7954                           ;app_device_audio_midi.c: 80: midiData.DATA_1 = scan_pitch;
  7955  008E  0020               	movlb	0	; select bank0
  7956  008F  0869               	movf	APP_DeviceAudioMIDITasks@scan_pitch,w
  7957  0090  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  7958  0091  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  7959  0092  0023               	movlb	3	; select bank3
  7960  0093  00A2               	movwf	34
  7961                           
  7962                           ;app_device_audio_midi.c: 81: midiData.DATA_2 = velocity;
  7963  0094  0020               	movlb	0	; select bank0
  7964  0095  086A               	movf	APP_DeviceAudioMIDITasks@velocity,w
  7965  0096  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  7966  0097  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  7967  0098  0023               	movlb	3	; select bank3
  7968  0099  00A3               	movwf	35
  7969                           
  7970                           ;app_device_audio_midi.c: 82: USBTxHandle = USBTransferOnePacket(1,1,(uint8_t*)&midiData
      +                          ,4);
  7971  009A  01F1               	clrf	USBTransferOnePacket@dir
  7972  009B  0AF1               	incf	USBTransferOnePacket@dir,f
  7973  009C  30A0               	movlw	160
  7974  009D  00F2               	movwf	USBTransferOnePacket@data
  7975  009E  3001               	movlw	1
  7976  009F  00F3               	movwf	USBTransferOnePacket@data+1
  7977  00A0  3004               	movlw	4
  7978  00A1  0020               	movlb	0	; select bank0
  7979  00A2  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  7980  00A3  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  7981  00A4  00F4               	movwf	USBTransferOnePacket@len
  7982  00A5  3001               	movlw	1
  7983  00A6  318C  249A  3180   	fcall	_USBTransferOnePacket
  7984  00A9  0020               	movlb	0	; select bank0
  7985  00AA  00E2               	movwf	??_APP_DeviceAudioMIDITasks+1
  7986  00AB  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  7987  00AC  0021               	movlb	1	; select bank1
  7988  00AD  00E3               	movwf	_USBTxHandle^(0+128)
  7989  00AE                     l3968:	
  7990                           
  7991                           ;app_device_audio_midi.c: 83: }
  7992                           ;app_device_audio_midi.c: 84: }
  7993                           ;app_device_audio_midi.c: 87: if(BUTTON_IsPressed(BUTTON_S1))
  7994  00AE  3001               	movlw	1
  7995  00AF  3189  2157  3180   	fcall	_BUTTON_IsPressed
  7996  00B2  3A00               	xorlw	0
  7997  00B3  1903               	skipnz
  7998  00B4  2913               	goto	l3992
  7999                           
  8000                           ;app_device_audio_midi.c: 88: {
  8001                           ;app_device_audio_midi.c: 92: if(msCounter == 0 && sentNoteOff && !(USBTxHandle==0?0:((v
      +                          olatile BDT_ENTRY*)USBTxHandle)->STAT.UOWN)) {
  8002  00B5  0021               	movlb	1	; select bank1
  8003  00B6  0865               	movf	_msCounter^(0+128),w
  8004  00B7  1D03               	btfss	3,2
  8005  00B8  0008               	return
  8006  00B9  0022               	movlb	2	; select bank2
  8007  00BA  085B               	movf	_sentNoteOff^(0+256),w
  8008  00BB  1903               	btfsc	3,2
  8009  00BC  0008               	return
  8010  00BD  0021               	movlb	1	; select bank1
  8011  00BE  0863               	movf	_USBTxHandle^(0+128),w
  8012  00BF  1903               	btfsc	3,2
  8013  00C0  28CF               	goto	l3978
  8014  00C1  0863               	movf	_USBTxHandle^(0+128),w
  8015  00C2  0086               	movwf	6
  8016  00C3  0187               	clrf	7
  8017  00C4  0D01               	rlf	1,w
  8018  00C5  0D01               	rlf	1,w
  8019  00C6  3901               	andlw	1
  8020  00C7  0020               	movlb	0	; select bank0
  8021  00C8  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8022  00C9  01E2               	clrf	??_APP_DeviceAudioMIDITasks+1
  8023  00CA  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8024  00CB  00E5               	movwf	_APP_DeviceAudioMIDITasks$526
  8025  00CC  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  8026  00CD  00E6               	movwf	_APP_DeviceAudioMIDITasks$526+1
  8027  00CE  28D2               	goto	l3980
  8028  00CF                     l3978:	
  8029  00CF  0020               	movlb	0	; select bank0
  8030  00D0  01E5               	clrf	_APP_DeviceAudioMIDITasks$526
  8031  00D1  01E6               	clrf	_APP_DeviceAudioMIDITasks$526+1
  8032  00D2                     l3980:	
  8033  00D2  0865               	movf	_APP_DeviceAudioMIDITasks$526,w
  8034  00D3  0466               	iorwf	_APP_DeviceAudioMIDITasks$526+1,w
  8035  00D4  1D03               	btfss	3,2
  8036  00D5  0008               	return
  8037                           
  8038                           ;app_device_audio_midi.c: 94: msCounter = 100;
  8039  00D6  3064               	movlw	100
  8040  00D7  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8041  00D8  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8042  00D9  0021               	movlb	1	; select bank1
  8043  00DA  00E5               	movwf	_msCounter^(0+128)
  8044                           
  8045                           ;app_device_audio_midi.c: 95: midiData.Val = 0;
  8046  00DB  3000               	movlw	0
  8047  00DC  0023               	movlb	3	; select bank3
  8048  00DD  00A3               	movwf	35
  8049  00DE  3000               	movlw	0
  8050  00DF  00A2               	movwf	34
  8051  00E0  3000               	movlw	0
  8052  00E1  00A1               	movwf	33
  8053  00E2  3000               	movlw	0
  8054  00E3  00A0               	movwf	32
  8055                           
  8056                           ;app_device_audio_midi.c: 97: midiData.CableNumber = 0;
  8057  00E4  300F               	movlw	-241
  8058  00E5  05A0               	andwf	32,f
  8059                           
  8060                           ;app_device_audio_midi.c: 98: midiData.CodeIndexNumber = 0x9;
  8061  00E6  0820               	movf	32,w
  8062  00E7  39F0               	andlw	-16
  8063  00E8  3809               	iorlw	9
  8064  00E9  00A0               	movwf	32
  8065                           
  8066                           ;app_device_audio_midi.c: 99: midiData.DATA_0 = 0x90;
  8067  00EA  3090               	movlw	144
  8068  00EB  0020               	movlb	0	; select bank0
  8069  00EC  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8070  00ED  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8071  00EE  0023               	movlb	3	; select bank3
  8072  00EF  00A1               	movwf	33
  8073                           
  8074                           ;app_device_audio_midi.c: 100: midiData.DATA_1 = pitch;
  8075  00F0  0021               	movlb	1	; select bank1
  8076  00F1  0866               	movf	_pitch^(0+128),w
  8077  00F2  0020               	movlb	0	; select bank0
  8078  00F3  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8079  00F4  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8080  00F5  0023               	movlb	3	; select bank3
  8081  00F6  00A2               	movwf	34
  8082                           
  8083                           ;app_device_audio_midi.c: 101: midiData.DATA_2 = 0x7F;
  8084  00F7  307F               	movlw	127
  8085  00F8  0020               	movlb	0	; select bank0
  8086  00F9  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8087  00FA  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8088  00FB  0023               	movlb	3	; select bank3
  8089  00FC  00A3               	movwf	35
  8090                           
  8091                           ;app_device_audio_midi.c: 102: USBTxHandle = USBTransferOnePacket(1,1,(uint8_t*)&midiDat
      +                          a,4);
  8092  00FD  01F1               	clrf	USBTransferOnePacket@dir
  8093  00FE  0AF1               	incf	USBTransferOnePacket@dir,f
  8094  00FF  30A0               	movlw	160
  8095  0100  00F2               	movwf	USBTransferOnePacket@data
  8096  0101  3001               	movlw	1
  8097  0102  00F3               	movwf	USBTransferOnePacket@data+1
  8098  0103  3004               	movlw	4
  8099  0104  0020               	movlb	0	; select bank0
  8100  0105  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8101  0106  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8102  0107  00F4               	movwf	USBTransferOnePacket@len
  8103  0108  3001               	movlw	1
  8104  0109  318C  249A         	fcall	_USBTransferOnePacket
  8105  010B  0020               	movlb	0	; select bank0
  8106  010C  00E2               	movwf	??_APP_DeviceAudioMIDITasks+1
  8107  010D  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  8108  010E  0021               	movlb	1	; select bank1
  8109  010F  00E3               	movwf	_USBTxHandle^(0+128)
  8110                           
  8111                           ;app_device_audio_midi.c: 104: sentNoteOff = 0;
  8112  0110  0022               	movlb	2	; select bank2
  8113  0111  01DB               	clrf	_sentNoteOff^(0+256)
  8114                           
  8115                           ;app_device_audio_midi.c: 105: }
  8116                           ;app_device_audio_midi.c: 106: }
  8117  0112  0008               	return
  8118  0113                     l3992:	
  8119                           
  8120                           ;app_device_audio_midi.c: 107: else if (msCounter == 0 && !sentNoteOff && !(USBTxHandle=
      +                          =0?0:((volatile BDT_ENTRY*)USBTxHandle)->STAT.UOWN)) {
  8121  0113  0021               	movlb	1	; select bank1
  8122  0114  0865               	movf	_msCounter^(0+128),w
  8123  0115  1D03               	btfss	3,2
  8124  0116  0008               	return
  8125  0117  0022               	movlb	2	; select bank2
  8126  0118  085B               	movf	_sentNoteOff^(0+256),w
  8127  0119  1D03               	btfss	3,2
  8128  011A  0008               	return
  8129  011B  0021               	movlb	1	; select bank1
  8130  011C  0863               	movf	_USBTxHandle^(0+128),w
  8131  011D  1903               	btfsc	3,2
  8132  011E  292D               	goto	l4000
  8133  011F  0863               	movf	_USBTxHandle^(0+128),w
  8134  0120  0086               	movwf	6
  8135  0121  0187               	clrf	7
  8136  0122  0D01               	rlf	1,w
  8137  0123  0D01               	rlf	1,w
  8138  0124  3901               	andlw	1
  8139  0125  0020               	movlb	0	; select bank0
  8140  0126  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8141  0127  01E2               	clrf	??_APP_DeviceAudioMIDITasks+1
  8142  0128  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8143  0129  00E7               	movwf	_APP_DeviceAudioMIDITasks$527
  8144  012A  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  8145  012B  00E8               	movwf	_APP_DeviceAudioMIDITasks$527+1
  8146  012C  2930               	goto	l4002
  8147  012D                     l4000:	
  8148  012D  0020               	movlb	0	; select bank0
  8149  012E  01E7               	clrf	_APP_DeviceAudioMIDITasks$527
  8150  012F  01E8               	clrf	_APP_DeviceAudioMIDITasks$527+1
  8151  0130                     l4002:	
  8152  0130  0867               	movf	_APP_DeviceAudioMIDITasks$527,w
  8153  0131  0468               	iorwf	_APP_DeviceAudioMIDITasks$527+1,w
  8154  0132  1D03               	btfss	3,2
  8155  0133  0008               	return
  8156                           
  8157                           ;app_device_audio_midi.c: 109: msCounter = 100;
  8158  0134  3064               	movlw	100
  8159  0135  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8160  0136  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8161  0137  0021               	movlb	1	; select bank1
  8162  0138  00E5               	movwf	_msCounter^(0+128)
  8163                           
  8164                           ;app_device_audio_midi.c: 110: midiData.Val = 0;
  8165  0139  3000               	movlw	0
  8166  013A  0023               	movlb	3	; select bank3
  8167  013B  00A3               	movwf	35
  8168  013C  3000               	movlw	0
  8169  013D  00A2               	movwf	34
  8170  013E  3000               	movlw	0
  8171  013F  00A1               	movwf	33
  8172  0140  3000               	movlw	0
  8173  0141  00A0               	movwf	32
  8174                           
  8175                           ;app_device_audio_midi.c: 112: midiData.CableNumber = 0;
  8176  0142  300F               	movlw	-241
  8177  0143  05A0               	andwf	32,f
  8178                           
  8179                           ;app_device_audio_midi.c: 113: midiData.CodeIndexNumber = 0x9;
  8180  0144  0820               	movf	32,w
  8181  0145  39F0               	andlw	-16
  8182  0146  3809               	iorlw	9
  8183  0147  00A0               	movwf	32
  8184                           
  8185                           ;app_device_audio_midi.c: 114: midiData.DATA_0 = 0x90;
  8186  0148  3090               	movlw	144
  8187  0149  0020               	movlb	0	; select bank0
  8188  014A  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8189  014B  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8190  014C  0023               	movlb	3	; select bank3
  8191  014D  00A1               	movwf	33
  8192                           
  8193                           ;app_device_audio_midi.c: 115: midiData.DATA_1 = pitch++;
  8194  014E  0021               	movlb	1	; select bank1
  8195  014F  0866               	movf	_pitch^(0+128),w
  8196  0150  0020               	movlb	0	; select bank0
  8197  0151  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8198  0152  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8199  0153  0023               	movlb	3	; select bank3
  8200  0154  00A2               	movwf	34
  8201  0155  3001               	movlw	1
  8202  0156  0020               	movlb	0	; select bank0
  8203  0157  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8204  0158  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8205  0159  0021               	movlb	1	; select bank1
  8206  015A  07E6               	addwf	_pitch^(0+128),f
  8207                           
  8208                           ;app_device_audio_midi.c: 116: midiData.DATA_2 = 0x00;
  8209  015B  0023               	movlb	3	; select bank3
  8210  015C  01A3               	clrf	35
  8211                           
  8212                           ;app_device_audio_midi.c: 118: if(pitch == 0x49)
  8213  015D  3049               	movlw	73
  8214  015E  0021               	movlb	1	; select bank1
  8215  015F  0666               	xorwf	_pitch^(0+128),w
  8216  0160  1D03               	btfss	3,2
  8217  0161  2968               	goto	l4018
  8218                           
  8219                           ;app_device_audio_midi.c: 119: pitch = 0x3C;
  8220  0162  303C               	movlw	60
  8221  0163  0020               	movlb	0	; select bank0
  8222  0164  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8223  0165  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8224  0166  0021               	movlb	1	; select bank1
  8225  0167  00E6               	movwf	_pitch^(0+128)
  8226  0168                     l4018:	
  8227                           
  8228                           ;app_device_audio_midi.c: 120: USBTxHandle = USBTransferOnePacket(1,1,(uint8_t*)&midiDat
      +                          a,4);
  8229  0168  01F1               	clrf	USBTransferOnePacket@dir
  8230  0169  0AF1               	incf	USBTransferOnePacket@dir,f
  8231  016A  30A0               	movlw	160
  8232  016B  00F2               	movwf	USBTransferOnePacket@data
  8233  016C  3001               	movlw	1
  8234  016D  00F3               	movwf	USBTransferOnePacket@data+1
  8235  016E  3004               	movlw	4
  8236  016F  0020               	movlb	0	; select bank0
  8237  0170  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8238  0171  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8239  0172  00F4               	movwf	USBTransferOnePacket@len
  8240  0173  3001               	movlw	1
  8241  0174  318C  249A         	fcall	_USBTransferOnePacket
  8242  0176  0020               	movlb	0	; select bank0
  8243  0177  00E2               	movwf	??_APP_DeviceAudioMIDITasks+1
  8244  0178  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  8245  0179  0021               	movlb	1	; select bank1
  8246  017A  00E3               	movwf	_USBTxHandle^(0+128)
  8247                           
  8248                           ;app_device_audio_midi.c: 121: sentNoteOff = 1;
  8249  017B  0022               	movlb	2	; select bank2
  8250  017C  01DB               	clrf	_sentNoteOff^(0+256)
  8251  017D  0ADB               	incf	_sentNoteOff^(0+256),f
  8252  017E  0008               	return
  8253  017F                     __end_of_APP_DeviceAudioMIDITasks:	
  8254                           
  8255                           	psect	text31
  8256  05C0                     __ptext31:	
  8257 ;; *************** function _scan_task *****************
  8258 ;; Defined at:
  8259 ;;		line 209 in file "../src/scan.c"
  8260 ;; Parameters:    Size  Location     Type
  8261 ;;  note            1    wreg     PTR unsigned char 
  8262 ;;		 -> APP_DeviceAudioMIDITasks@scan_pitch(1), 
  8263 ;;  velocity        1   11[BANK0 ] PTR unsigned char 
  8264 ;;		 -> APP_DeviceAudioMIDITasks@velocity(1), 
  8265 ;; Auto vars:     Size  Location     Type
  8266 ;;  note            1   16[BANK0 ] PTR unsigned char 
  8267 ;;		 -> APP_DeviceAudioMIDITasks@scan_pitch(1), 
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  1    wreg      unsigned char 
  8270 ;; Registers used:
  8271 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8277 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8278 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8279 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8280 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8281 ;;Total ram usage:        7 bytes
  8282 ;; Hardware stack levels used:    1
  8283 ;; Hardware stack levels required when called:    4
  8284 ;; This function calls:
  8285 ;;		_get_adc
  8286 ;;		_get_data
  8287 ;;		_is_adc_ready
  8288 ;;		_is_end_of_scan
  8289 ;;		_run_adc
  8290 ;;		_scan_init
  8291 ;;		_set_clock_and_data
  8292 ;;		_set_timer
  8293 ;;		_store_key_level
  8294 ;;		_waiting_for_timer
  8295 ;; This function is called by:
  8296 ;;		_APP_DeviceAudioMIDITasks
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           
  8301                           ;psect for function _scan_task
  8302  05C0                     _scan_task:	
  8303                           
  8304                           ;incstack = 0
  8305                           ; Regs used in _scan_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8306                           ;scan_task@note stored from wreg
  8307  05C0  0020               	movlb	0	; select bank0
  8308  05C1  00E0               	movwf	scan_task@note
  8309                           
  8310                           ;scan.c: 210: static uint8_t state = S_INIT;
  8311                           ;scan.c: 212: note_event.pitch = note_event.velocity = 0;
  8312  05C2  0022               	movlb	2	; select bank2
  8313  05C3  01CC               	clrf	(_note_event^(0+256)+1)
  8314  05C4  01CB               	clrf	_note_event^(0+256)
  8315                           
  8316                           ;scan.c: 213: *note = *velocity = 0;
  8317  05C5  0020               	movlb	0	; select bank0
  8318  05C6  085B               	movf	scan_task@velocity,w
  8319  05C7  0086               	movwf	6
  8320  05C8  0187               	clrf	7
  8321  05C9  0181               	clrf	1
  8322  05CA  0860               	movf	scan_task@note,w
  8323  05CB  0086               	movwf	6
  8324  05CC  0187               	clrf	7
  8325  05CD  0181               	clrf	1
  8326                           
  8327                           ;scan.c: 215: if (!is_initialized)
  8328  05CE  0022               	movlb	2	; select bank2
  8329  05CF  0859               	movf	_is_initialized^(0+256),w
  8330  05D0  1D03               	btfss	3,2
  8331  05D1  2DD5               	goto	l279
  8332                           
  8333                           ;scan.c: 216: scan_init();
  8334  05D2  318A  2233  3185   	fcall	_scan_init
  8335  05D5                     l279:	
  8336                           
  8337                           ;scan.c: 218: if (waiting_for_timer()) return 0;
  8338  05D5  3187  27F5  3185   	fcall	_waiting_for_timer
  8339  05D8  3A00               	xorlw	0
  8340  05D9  1903               	skipnz
  8341  05DA  2E48               	goto	l3710
  8342  05DB  3000               	movlw	0
  8343  05DC  0008               	return
  8344  05DD                     l3678:	
  8345                           ;scan.c: 221: case(S_INIT):
  8346                           
  8347                           ;scan.c: 220: switch(state) {
  8348                           
  8349                           
  8350                           ;scan.c: 222: set_clock_and_data(0,1);
  8351  05DD  01F1               	clrf	set_clock_and_data@d
  8352  05DE  0AF1               	incf	set_clock_and_data@d,f
  8353  05DF  3000               	movlw	0
  8354  05E0  3189  2145  3185   	fcall	_set_clock_and_data
  8355                           
  8356                           ;scan.c: 223: state = S_GO;
  8357  05E3  0022               	movlb	2	; select bank2
  8358  05E4  01DE               	clrf	scan_task@state^(0+256)
  8359  05E5  0ADE               	incf	scan_task@state^(0+256),f
  8360                           
  8361                           ;scan.c: 224: set_timer();
  8362  05E6  3182  22F5  3185   	fcall	_set_timer
  8363                           
  8364                           ;scan.c: 225: break;
  8365  05E9  2E53               	goto	l3712
  8366  05EA                     l3684:	
  8367                           ;scan.c: 227: case(S_GO):
  8368                           
  8369                           
  8370                           ;scan.c: 228: set_clock_and_data(0,1);
  8371  05EA  01F1               	clrf	set_clock_and_data@d
  8372  05EB  0AF1               	incf	set_clock_and_data@d,f
  8373  05EC  3000               	movlw	0
  8374  05ED  3189  2145  3185   	fcall	_set_clock_and_data
  8375                           
  8376                           ;scan.c: 229: state = S_CLOCK_RAISE;
  8377  05F0  3002               	movlw	2
  8378  05F1  00FB               	movwf	??_scan_task
  8379  05F2  087B               	movf	??_scan_task,w
  8380  05F3  0022               	movlb	2	; select bank2
  8381  05F4  00DE               	movwf	scan_task@state^(0+256)
  8382                           
  8383                           ;scan.c: 230: set_timer();
  8384  05F5  3182  22F5  3185   	fcall	_set_timer
  8385                           
  8386                           ;scan.c: 231: break;
  8387  05F8  2E53               	goto	l3712
  8388  05F9                     l3688:	
  8389                           ;scan.c: 233: case(S_CLOCK_RAISE):
  8390                           
  8391                           
  8392                           ;scan.c: 234: set_clock_and_data(1, get_data());
  8393  05F9  3189  2117  3185   	fcall	_get_data
  8394  05FC  00FB               	movwf	??_scan_task
  8395  05FD  087B               	movf	??_scan_task,w
  8396  05FE  00F1               	movwf	set_clock_and_data@d
  8397  05FF  3001               	movlw	1
  8398  0600  3189  2145  3185   	fcall	_set_clock_and_data
  8399                           
  8400                           ;scan.c: 235: state = S_CLOCK_FALL;
  8401  0603  3003               	movlw	3
  8402  0604  00FB               	movwf	??_scan_task
  8403  0605  087B               	movf	??_scan_task,w
  8404  0606  0022               	movlb	2	; select bank2
  8405  0607  00DE               	movwf	scan_task@state^(0+256)
  8406                           
  8407                           ;scan.c: 236: set_timer();
  8408  0608  3182  22F5  3185   	fcall	_set_timer
  8409                           
  8410                           ;scan.c: 237: break;
  8411  060B  2E53               	goto	l3712
  8412  060C                     l3692:	
  8413                           ;scan.c: 239: case(S_CLOCK_FALL):
  8414                           
  8415                           
  8416                           ;scan.c: 240: set_clock_and_data(0,0);
  8417  060C  01F1               	clrf	set_clock_and_data@d
  8418  060D  3000               	movlw	0
  8419  060E  3189  2145  3185   	fcall	_set_clock_and_data
  8420                           
  8421                           ;scan.c: 241: run_adc();
  8422  0611  3189  2129  3185   	fcall	_run_adc
  8423                           
  8424                           ;scan.c: 242: state = S_ADC_WAIT;
  8425  0614  3004               	movlw	4
  8426  0615  00FB               	movwf	??_scan_task
  8427  0616  087B               	movf	??_scan_task,w
  8428  0617  0022               	movlb	2	; select bank2
  8429  0618  00DE               	movwf	scan_task@state^(0+256)
  8430                           
  8431                           ;scan.c: 243: set_timer();
  8432  0619  3182  22F5  3185   	fcall	_set_timer
  8433                           
  8434                           ;scan.c: 244: break;
  8435  061C  2E53               	goto	l3712
  8436  061D                     l3696:	
  8437                           ;scan.c: 246: case(S_ADC_WAIT):
  8438                           
  8439                           
  8440                           ;scan.c: 247: state = (is_adc_ready()? S_ADC_READ : S_ADC_WAIT);
  8441  061D  3189  2122  3185   	fcall	_is_adc_ready
  8442  0620  3A00               	xorlw	0
  8443  0621  1D03               	skipz
  8444  0622  2E25               	goto	l3700
  8445  0623  3004               	movlw	4
  8446  0624  2E26               	goto	L11
  8447  0625                     l3700:	
  8448  0625  3005               	movlw	5
  8449  0626                     L11:	
  8450  0626  0020               	movlb	0	; select bank0
  8451  0627  00DC               	movwf	_scan_task$901
  8452  0628  3000               	movlw	0
  8453  0629  00DD               	movwf	_scan_task$901+1
  8454  062A  085C               	movf	_scan_task$901,w
  8455  062B  2E43               	goto	L12
  8456  062C                     l3702:	
  8457                           ;scan.c: 250: case(S_ADC_READ):
  8458                           
  8459                           ;scan.c: 248: break;
  8460                           
  8461                           
  8462                           ;scan.c: 251: state = (store_key_level(get_adc(), is_end_of_scan())? S_GO : S_CLOCK_RAIS
      +                          E);
  8463  062C  3189  216C  3185   	fcall	_is_end_of_scan
  8464  062F  00FB               	movwf	??_scan_task
  8465  0630  087B               	movf	??_scan_task,w
  8466  0631  00F7               	movwf	store_key_level@end_of_scan
  8467  0632  3189  2114  3185   	fcall	_get_adc
  8468  0635  318B  2317  3185   	fcall	_store_key_level
  8469  0638  3A00               	xorlw	0
  8470  0639  1D03               	skipz
  8471  063A  2E3D               	goto	l3706
  8472  063B  3002               	movlw	2
  8473  063C  2E3E               	goto	L13
  8474  063D                     l3706:	
  8475  063D  3001               	movlw	1
  8476  063E                     L13:	
  8477  063E  0020               	movlb	0	; select bank0
  8478  063F  00DE               	movwf	_scan_task$905
  8479  0640  3000               	movlw	0
  8480  0641  00DF               	movwf	_scan_task$905+1
  8481  0642  085E               	movf	_scan_task$905,w
  8482  0643                     L12:	
  8483  0643  00FB               	movwf	??_scan_task
  8484  0644  087B               	movf	??_scan_task,w
  8485  0645  0022               	movlb	2	; select bank2
  8486  0646  00DE               	movwf	scan_task@state^(0+256)
  8487                           
  8488                           ;scan.c: 253: }
  8489                           
  8490                           ;scan.c: 252: break;
  8491  0647  2E53               	goto	l3712
  8492  0648                     l3710:	
  8493  0648  0022               	movlb	2	; select bank2
  8494  0649  085E               	movf	scan_task@state^(0+256),w
  8495                           
  8496                           ; Switch size 1, requested type "space"
  8497                           ; Number of cases is 6, Range of values is 0 to 5
  8498                           ; switch strategies available:
  8499                           ; Name         Instructions Cycles
  8500                           ; direct_byte           18     6 (fixed)
  8501                           ; simple_byte           19    10 (average)
  8502                           ; jumptable            260     6 (fixed)
  8503                           ;	Chosen strategy is direct_byte
  8504  064A  0084               	movwf	4
  8505  064B  3006               	movlw	6
  8506  064C  0204               	subwf	4,w
  8507  064D  1803               	skipnc
  8508  064E  2E53               	goto	l3712
  8509  064F  3188               	movlp	high S4776
  8510  0650  3504               	lslf	4,w
  8511  0651  3E26               	addlw	low S4776
  8512  0652  0082               	movwf	2
  8513  0653                     l3712:	
  8514                           
  8515                           ;scan.c: 255: *note = note_event.pitch;
  8516  0653  0022               	movlb	2	; select bank2
  8517  0654  084B               	movf	_note_event^(0+256),w
  8518  0655  00FB               	movwf	??_scan_task
  8519  0656  0020               	movlb	0	; select bank0
  8520  0657  0860               	movf	scan_task@note,w
  8521  0658  0086               	movwf	6
  8522  0659  0187               	clrf	7
  8523  065A  087B               	movf	??_scan_task,w
  8524  065B  0081               	movwf	1
  8525                           
  8526                           ;scan.c: 256: *velocity = note_event.velocity;
  8527  065C  0022               	movlb	2	; select bank2
  8528  065D  084C               	movf	(_note_event^(0+256)+1),w
  8529  065E  00FB               	movwf	??_scan_task
  8530  065F  0020               	movlb	0	; select bank0
  8531  0660  085B               	movf	scan_task@velocity,w
  8532  0661  0086               	movwf	6
  8533  0662  0187               	clrf	7
  8534  0663  087B               	movf	??_scan_task,w
  8535  0664  0081               	movwf	1
  8536                           
  8537                           ;scan.c: 257: return !! note_event.pitch;
  8538  0665  0022               	movlb	2	; select bank2
  8539  0666  084B               	movf	_note_event^(0+256),w
  8540  0667  1903               	btfsc	3,2
  8541  0668  2E6B               	goto	u3180
  8542  0669  3001               	movlw	1
  8543  066A  0008               	return
  8544  066B                     u3180:	
  8545  066B  3000               	movlw	0
  8546  066C  0008               	return
  8547  066D                     __end_of_scan_task:	
  8548                           
  8549                           	psect	swtext3
  8550  0826                     __pswtext3:	
  8551  0826                     S4776:	
  8552  0826  3185  2DDD         	ljmp	l3678
  8553  0828  3185  2DEA         	ljmp	l3684
  8554  082A  3185  2DF9         	ljmp	l3688
  8555  082C  3186  2E0C         	ljmp	l3692
  8556  082E  3186  2E1D         	ljmp	l3696
  8557  0830  3186  2E2C         	ljmp	l3702
  8558                           
  8559                           	psect	text32
  8560  07F5                     __ptext32:	
  8561 ;; *************** function _waiting_for_timer *****************
  8562 ;; Defined at:
  8563 ;;		line 63 in file "../src/scan.c"
  8564 ;; Parameters:    Size  Location     Type
  8565 ;;		None
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;		None
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  1    wreg      unsigned char 
  8570 ;; Registers used:
  8571 ;;		wreg, status,2, status,0
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8578 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8580 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8581 ;;Total ram usage:        1 bytes
  8582 ;; Hardware stack levels used:    1
  8583 ;; Hardware stack levels required when called:    1
  8584 ;; This function calls:
  8585 ;;		Nothing
  8586 ;; This function is called by:
  8587 ;;		_scan_task
  8588 ;; This function uses a non-reentrant model
  8589 ;;
  8590                           
  8591                           
  8592                           ;psect for function _waiting_for_timer
  8593  07F5                     _waiting_for_timer:	
  8594                           
  8595                           ;scan.c: 64: return (wait_timer = wait_timer && !INTCONbits.TMR0IF);
  8596                           
  8597                           ;incstack = 0
  8598                           ; Regs used in _waiting_for_timer: [wreg+status,2+status,0]
  8599  07F5  01F1               	clrf	_waiting_for_timer$845
  8600  07F6  0022               	movlb	2	; select bank2
  8601  07F7  085C               	movf	_wait_timer^(0+256),w
  8602  07F8  1D03               	btfss	3,2
  8603  07F9  190B               	btfsc	11,2	;volatile
  8604  07FA  2FFD               	goto	l3446
  8605  07FB  01F1               	clrf	_waiting_for_timer$845
  8606  07FC  0AF1               	incf	_waiting_for_timer$845,f
  8607  07FD                     l3446:	
  8608  07FD  0871               	movf	_waiting_for_timer$845,w
  8609  07FE  00DC               	movwf	_wait_timer^(0+256)
  8610  07FF  0008               	return
  8611  0800                     __end_of_waiting_for_timer:	
  8612                           
  8613                           	psect	text33
  8614  0B17                     __ptext33:	
  8615 ;; *************** function _store_key_level *****************
  8616 ;; Defined at:
  8617 ;;		line 191 in file "../src/scan.c"
  8618 ;; Parameters:    Size  Location     Type
  8619 ;;  level           1    wreg     unsigned char 
  8620 ;;  end_of_scan     1    7[COMMON] unsigned char 
  8621 ;; Auto vars:     Size  Location     Type
  8622 ;;  level           1   10[COMMON] unsigned char 
  8623 ;; Return value:  Size  Location     Type
  8624 ;;                  1    wreg      unsigned char 
  8625 ;; Registers used:
  8626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8627 ;; Tracked objects:
  8628 ;;		On entry : 0/0
  8629 ;;		On exit  : 0/0
  8630 ;;		Unchanged: 0/0
  8631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8632 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8633 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8634 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8635 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8636 ;;Total ram usage:        4 bytes
  8637 ;; Hardware stack levels used:    1
  8638 ;; Hardware stack levels required when called:    3
  8639 ;; This function calls:
  8640 ;;		_process_level
  8641 ;; This function is called by:
  8642 ;;		_scan_task
  8643 ;; This function uses a non-reentrant model
  8644 ;;
  8645                           
  8646                           
  8647                           ;psect for function _store_key_level
  8648  0B17                     _store_key_level:	
  8649                           
  8650                           ;incstack = 0
  8651                           ; Regs used in _store_key_level: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8652                           ;store_key_level@level stored from wreg
  8653  0B17  00FA               	movwf	store_key_level@level
  8654                           
  8655                           ;scan.c: 192: static uint8_t idx_key = 0;
  8656                           ;scan.c: 193: process_level(idx_key, adc_levels[idx_key], level);
  8657  0B18  0021               	movlb	1	; select bank1
  8658  0B19  0868               	movf	store_key_level@idx_key^(0+128),w
  8659  0B1A  3E20               	addlw	(low (_adc_levels| (0+512)))& (0+255)
  8660  0B1B  0086               	movwf	6
  8661  0B1C  3002               	movlw	2	; select bank4/5
  8662  0B1D  0087               	movwf	7
  8663  0B1E  0801               	movf	1,w
  8664  0B1F  00F8               	movwf	??_store_key_level
  8665  0B20  0878               	movf	??_store_key_level,w
  8666  0B21  00F2               	movwf	process_level@old_level
  8667  0B22  087A               	movf	store_key_level@level,w
  8668  0B23  00F9               	movwf	??_store_key_level+1
  8669  0B24  0879               	movf	??_store_key_level+1,w
  8670  0B25  00F3               	movwf	process_level@new_level
  8671  0B26  0868               	movf	store_key_level@idx_key^(0+128),w
  8672  0B27  3184  24E3  318B   	fcall	_process_level
  8673                           
  8674                           ;scan.c: 194: adc_levels[idx_key] = level;
  8675  0B2A  087A               	movf	store_key_level@level,w
  8676  0B2B  00F8               	movwf	??_store_key_level
  8677  0B2C  0021               	movlb	1	; select bank1
  8678  0B2D  0868               	movf	store_key_level@idx_key^(0+128),w
  8679  0B2E  3E20               	addlw	(low (_adc_levels| (0+512)))& (0+255)
  8680  0B2F  0086               	movwf	6
  8681  0B30  3002               	movlw	2	; select bank4/5
  8682  0B31  0087               	movwf	7
  8683  0B32  0878               	movf	??_store_key_level,w
  8684  0B33  0081               	movwf	1
  8685                           
  8686                           ;scan.c: 195: idx_key ++;
  8687  0B34  3001               	movlw	1
  8688  0B35  00F8               	movwf	??_store_key_level
  8689  0B36  0878               	movf	??_store_key_level,w
  8690  0B37  07E8               	addwf	store_key_level@idx_key^(0+128),f
  8691                           
  8692                           ;scan.c: 196: if (idx_key >= N_KEYS || end_of_scan) idx_key = 0;
  8693  0B38  3020               	movlw	32
  8694  0B39  0268               	subwf	store_key_level@idx_key^(0+128),w
  8695  0B3A  1803               	skipnc
  8696  0B3B  2B3F               	goto	l3488
  8697  0B3C  0877               	movf	store_key_level@end_of_scan,w
  8698  0B3D  1903               	btfsc	3,2
  8699  0B3E  2B40               	goto	l3490
  8700  0B3F                     l3488:	
  8701  0B3F  01E8               	clrf	store_key_level@idx_key^(0+128)
  8702  0B40                     l3490:	
  8703                           
  8704                           ;scan.c: 197: return idx_key == 0;
  8705  0B40  0868               	movf	store_key_level@idx_key^(0+128),w
  8706  0B41  1D03               	btfss	3,2
  8707  0B42  2B45               	goto	u2960
  8708  0B43  3001               	movlw	1
  8709  0B44  0008               	return
  8710  0B45                     u2960:	
  8711  0B45  3000               	movlw	0
  8712  0B46  0008               	return
  8713  0B47                     __end_of_store_key_level:	
  8714                           
  8715                           	psect	text34
  8716  04E3                     __ptext34:	
  8717 ;; *************** function _process_level *****************
  8718 ;; Defined at:
  8719 ;;		line 144 in file "../src/scan.c"
  8720 ;; Parameters:    Size  Location     Type
  8721 ;;  idx_key         1    wreg     unsigned char 
  8722 ;;  old_level       1    2[COMMON] const unsigned char 
  8723 ;;  new_level       1    3[COMMON] const unsigned char 
  8724 ;; Auto vars:     Size  Location     Type
  8725 ;;  idx_key         1   10[BANK0 ] unsigned char 
  8726 ;;  filtered_sta    1    9[BANK0 ] unsigned char 
  8727 ;;  on_flag         1    8[BANK0 ] unsigned char 
  8728 ;;  off_flag        1    6[BANK0 ] unsigned char 
  8729 ;;  current_stat    2    2[BANK0 ] int 
  8730 ;;  old_state       2    0[BANK0 ] int 
  8731 ;; Return value:  Size  Location     Type
  8732 ;;		None               void
  8733 ;; Registers used:
  8734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8735 ;; Tracked objects:
  8736 ;;		On entry : 0/0
  8737 ;;		On exit  : 0/0
  8738 ;;		Unchanged: 0/0
  8739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8740 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8741 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8742 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8743 ;;      Totals:         5      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8744 ;;Total ram usage:       16 bytes
  8745 ;; Hardware stack levels used:    1
  8746 ;; Hardware stack levels required when called:    2
  8747 ;; This function calls:
  8748 ;;		_LED_Off
  8749 ;;		_LED_On
  8750 ;; This function is called by:
  8751 ;;		_store_key_level
  8752 ;; This function uses a non-reentrant model
  8753 ;;
  8754                           
  8755                           
  8756                           ;psect for function _process_level
  8757  04E3                     _process_level:	
  8758                           
  8759                           ;incstack = 0
  8760                           ; Regs used in _process_level: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8761                           ;process_level@idx_key stored from wreg
  8762  04E3  0020               	movlb	0	; select bank0
  8763  04E4  00DA               	movwf	process_level@idx_key
  8764                           
  8765                           ;scan.c: 145: static const uint8_t L = 0x0A;
  8766                           ;scan.c: 146: static const uint8_t idx_midi_map[N_KEYS] = {
  8767                           ;scan.c: 147: 21, 22, 23, 24, 17, 18, 19, 20, 13, 14, 15, 16,
  8768                           ;scan.c: 148: 9, 10, 11, 12, 5, 6, 7, 8, 1, 2, 3, 4
  8769                           ;scan.c: 149: };
  8770                           ;scan.c: 150: static bool key_states[N_KEYS] = {0, };
  8771                           ;scan.c: 151: static const uint8_t midi_shift = 47;
  8772                           ;scan.c: 152: static const uint8_t
  8773                           ;scan.c: 153: key_off_threshold = 5,
  8774                           ;scan.c: 154: key_on_threshold = 7;
  8775                           ;scan.c: 156: static uint8_t key_off_counter[N_KEYS] = {0,};
  8776                           ;scan.c: 157: static uint8_t key_on_counter[N_KEYS] = {0,};
  8777  04E5  3028               	movlw	low (process_level@L| (0+32768))
  8778  04E6  0084               	movwf	4
  8779  04E7  3083               	movlw	high (process_level@L| (0+32768))
  8780  04E8  0085               	movwf	5
  8781  04E9  0800               	movf	0,w	;code access
  8782  04EA  00F4               	movwf	??_process_level
  8783  04EB  0872               	movf	process_level@old_level,w
  8784  04EC  0274               	subwf	??_process_level,w
  8785  04ED  1803               	btfsc	3,0
  8786  04EE  2CF1               	goto	u2540
  8787  04EF  3001               	movlw	1
  8788  04F0  2CF2               	goto	u2550
  8789  04F1                     u2540:	
  8790  04F1  3000               	movlw	0
  8791  04F2                     u2550:	
  8792  04F2  00F5               	movwf	??_process_level+1
  8793  04F3  01F6               	clrf	??_process_level+2
  8794  04F4  0875               	movf	??_process_level+1,w
  8795  04F5  00D0               	movwf	process_level@old_state
  8796  04F6  0876               	movf	??_process_level+2,w
  8797  04F7  00D1               	movwf	process_level@old_state+1
  8798                           
  8799                           ;scan.c: 160: int current_state = (new_level > L);
  8800  04F8  3028               	movlw	low (process_level@L| (0+32768))
  8801  04F9  0084               	movwf	4
  8802  04FA  3083               	movlw	high (process_level@L| (0+32768))
  8803  04FB  0085               	movwf	5
  8804  04FC  0800               	movf	0,w	;code access
  8805  04FD  00F4               	movwf	??_process_level
  8806  04FE  0873               	movf	process_level@new_level,w
  8807  04FF  0274               	subwf	??_process_level,w
  8808  0500  1803               	btfsc	3,0
  8809  0501  2D04               	goto	u2560
  8810  0502  3001               	movlw	1
  8811  0503  2D05               	goto	u2570
  8812  0504                     u2560:	
  8813  0504  3000               	movlw	0
  8814  0505                     u2570:	
  8815  0505  00F5               	movwf	??_process_level+1
  8816  0506  01F6               	clrf	??_process_level+2
  8817  0507  0875               	movf	??_process_level+1,w
  8818  0508  00D2               	movwf	process_level@current_state
  8819  0509  0876               	movf	??_process_level+2,w
  8820  050A  00D3               	movwf	process_level@current_state+1
  8821                           
  8822                           ;scan.c: 162: note_event.pitch = 0;
  8823  050B  0022               	movlb	2	; select bank2
  8824  050C  01CB               	clrf	_note_event^(0+256)
  8825                           
  8826                           ;scan.c: 163: note_event.velocity = 0;
  8827  050D  01CC               	clrf	(_note_event^(0+256)+1)
  8828                           
  8829                           ;scan.c: 165: if (current_state) {
  8830  050E  0020               	movlb	0	; select bank0
  8831  050F  0852               	movf	process_level@current_state,w
  8832  0510  0453               	iorwf	process_level@current_state+1,w
  8833  0511  1903               	btfsc	3,2
  8834  0512  2D1E               	goto	l3228
  8835                           
  8836                           ;scan.c: 166: key_off_counter[idx_key] = 0;
  8837  0513  085A               	movf	process_level@idx_key,w
  8838  0514  3EA4               	addlw	(low (process_level@key_off_counter| (0+256)))& (0+255)
  8839  0515  0086               	movwf	6
  8840  0516  3001               	movlw	1	; select bank3/4
  8841  0517  0087               	movwf	7
  8842  0518  0181               	clrf	1
  8843                           
  8844                           ;scan.c: 167: key_on_counter [idx_key] ++;
  8845  0519  3001               	movlw	1
  8846  051A  00F4               	movwf	??_process_level
  8847  051B  085A               	movf	process_level@idx_key,w
  8848  051C  3EC4               	addlw	(low (process_level@key_on_counter| (0+256)))& (0+255)
  8849  051D  2D28               	goto	L14
  8850  051E                     l3228:	
  8851                           ;scan.c: 168: }
  8852                           
  8853                           
  8854                           ;scan.c: 169: else {
  8855                           ;scan.c: 170: key_on_counter[idx_key] = 0;
  8856  051E  085A               	movf	process_level@idx_key,w
  8857  051F  3EC4               	addlw	(low (process_level@key_on_counter| (0+256)))& (0+255)
  8858  0520  0086               	movwf	6
  8859  0521  3001               	movlw	1	; select bank3/4
  8860  0522  0087               	movwf	7
  8861  0523  0181               	clrf	1
  8862                           
  8863                           ;scan.c: 171: key_off_counter [idx_key] ++;
  8864  0524  3001               	movlw	1
  8865  0525  00F4               	movwf	??_process_level
  8866  0526  085A               	movf	process_level@idx_key,w
  8867  0527  3EA4               	addlw	(low (process_level@key_off_counter| (0+256)))& (0+255)
  8868  0528                     L14:	
  8869  0528  0086               	movwf	6
  8870  0529  3001               	movlw	1	; select bank3/4
  8871  052A  0087               	movwf	7
  8872  052B  0874               	movf	??_process_level,w
  8873  052C  0781               	addwf	1,f
  8874                           
  8875                           ;scan.c: 172: }
  8876                           ;scan.c: 174: {
  8877                           ;scan.c: 175: bool
  8878                           ;scan.c: 176: on_flag = key_on_counter [idx_key] >= key_on_threshold,
  8879  052D  085A               	movf	process_level@idx_key,w
  8880  052E  3EC4               	addlw	(low (process_level@key_on_counter| (0+256)))& (0+255)
  8881  052F  0086               	movwf	6
  8882  0530  3001               	movlw	1	; select bank3/4
  8883  0531  0087               	movwf	7
  8884  0532  302A               	movlw	low (process_level@key_on_threshold| (0+32768))
  8885  0533  0084               	movwf	4
  8886  0534  3083               	movlw	high (process_level@key_on_threshold| (0+32768))
  8887  0535  0085               	movwf	5
  8888  0536  0800               	movf	0,w	;code access
  8889  0537  0201               	subwf	1,w
  8890  0538  1C03               	btfss	3,0
  8891  0539  2D3C               	goto	u2590
  8892  053A  3001               	movlw	1
  8893  053B  2D3D               	goto	u2600
  8894  053C                     u2590:	
  8895  053C  3000               	movlw	0
  8896  053D                     u2600:	
  8897  053D  00F4               	movwf	??_process_level
  8898  053E  0874               	movf	??_process_level,w
  8899  053F  00D8               	movwf	process_level@on_flag
  8900                           
  8901                           ;scan.c: 177: off_flag = key_off_counter[idx_key] >= key_off_threshold,
  8902  0540  085A               	movf	process_level@idx_key,w
  8903  0541  3EA4               	addlw	(low (process_level@key_off_counter| (0+256)))& (0+255)
  8904  0542  0086               	movwf	6
  8905  0543  3001               	movlw	1	; select bank3/4
  8906  0544  0087               	movwf	7
  8907  0545  3029               	movlw	low (process_level@key_off_threshold| (0+32768))
  8908  0546  0084               	movwf	4
  8909  0547  3083               	movlw	high (process_level@key_off_threshold| (0+32768))
  8910  0548  0085               	movwf	5
  8911  0549  0800               	movf	0,w	;code access
  8912  054A  0201               	subwf	1,w
  8913  054B  1C03               	btfss	3,0
  8914  054C  2D4F               	goto	u2610
  8915  054D  3001               	movlw	1
  8916  054E  2D50               	goto	u2620
  8917  054F                     u2610:	
  8918  054F  3000               	movlw	0
  8919  0550                     u2620:	
  8920  0550  00F4               	movwf	??_process_level
  8921  0551  0874               	movf	??_process_level,w
  8922  0552  00D6               	movwf	process_level@off_flag
  8923                           
  8924                           ;scan.c: 178: filtered_state = on_flag || !on_flag && !off_flag && key_states[idx_key];
  8925  0553  01D7               	clrf	_process_level$882
  8926  0554  0AD7               	incf	_process_level$882,f
  8927  0555  0858               	movf	process_level@on_flag,w
  8928  0556  1D03               	btfss	3,2
  8929  0557  2D66               	goto	l3246
  8930  0558  0858               	movf	process_level@on_flag,w
  8931  0559  1D03               	btfss	3,2
  8932  055A  2D65               	goto	l3244
  8933  055B  0856               	movf	process_level@off_flag,w
  8934  055C  1D03               	btfss	3,2
  8935  055D  2D65               	goto	l3244
  8936  055E  085A               	movf	process_level@idx_key,w
  8937  055F  3E20               	addlw	(low (process_level@key_states| (0+256)))& (0+255)
  8938  0560  0086               	movwf	6
  8939  0561  3001               	movlw	1	; select bank2/3
  8940  0562  0087               	movwf	7
  8941  0563  0801               	movf	1,w
  8942  0564  1903               	btfsc	3,2
  8943  0565                     l3244:	
  8944  0565  01D7               	clrf	_process_level$882
  8945  0566                     l3246:	
  8946  0566  0857               	movf	_process_level$882,w
  8947  0567  00F4               	movwf	??_process_level
  8948  0568  0874               	movf	??_process_level,w
  8949  0569  00D9               	movwf	process_level@filtered_state
  8950                           
  8951                           ;scan.c: 180: if (!key_states[idx_key] != !filtered_state) {
  8952  056A  0859               	movf	process_level@filtered_state,w
  8953  056B  1D03               	btfss	3,2
  8954  056C  2D6F               	goto	u2670
  8955  056D  3001               	movlw	1
  8956  056E  2D70               	goto	u2672
  8957  056F                     u2670:	
  8958  056F  3000               	movlw	0
  8959  0570                     u2672:	
  8960  0570  00F4               	movwf	??_process_level
  8961  0571  085A               	movf	process_level@idx_key,w
  8962  0572  3E20               	addlw	(low (process_level@key_states| (0+256)))& (0+255)
  8963  0573  0086               	movwf	6
  8964  0574  3001               	movlw	1	; select bank2/3
  8965  0575  0087               	movwf	7
  8966  0576  0801               	movf	1,w
  8967  0577  1D03               	btfss	3,2
  8968  0578  2D7B               	goto	u2680
  8969  0579  3001               	movlw	1
  8970  057A  2D7C               	goto	u2682
  8971  057B                     u2680:	
  8972  057B  3000               	movlw	0
  8973  057C                     u2682:	
  8974  057C  0674               	xorwf	??_process_level,w
  8975  057D  1903               	skipnz
  8976  057E  2DB5               	goto	l3266
  8977                           
  8978                           ;scan.c: 181: note_event.pitch = midi_shift + idx_midi_map[idx_key];
  8979  057F  302B               	movlw	low (process_level@midi_shift| (0+32768))
  8980  0580  0084               	movwf	4
  8981  0581  3083               	movlw	high (process_level@midi_shift| (0+32768))
  8982  0582  0085               	movwf	5
  8983  0583  0800               	movf	0,w	;code access
  8984  0584  00F4               	movwf	??_process_level
  8985  0585  085A               	movf	process_level@idx_key,w
  8986  0586  3E00               	addlw	low (process_level@idx_midi_map| (0+32768))
  8987  0587  0084               	movwf	4
  8988  0588  3083               	movlw	high (process_level@idx_midi_map| (0+32768))
  8989  0589  1803               	skipnc
  8990  058A  3E01               	addlw	1
  8991  058B  0085               	movwf	5
  8992  058C  0800               	movf	0,w	;code access
  8993  058D  0774               	addwf	??_process_level,w
  8994  058E  00F5               	movwf	??_process_level+1
  8995  058F  0875               	movf	??_process_level+1,w
  8996  0590  0022               	movlb	2	; select bank2
  8997  0591  00CB               	movwf	_note_event^(0+256)
  8998                           
  8999                           ;scan.c: 182: note_event.velocity = (filtered_state? (new_level * 2 + 5): 0);
  9000  0592  0020               	movlb	0	; select bank0
  9001  0593  0859               	movf	process_level@filtered_state,w
  9002  0594  1D03               	btfss	3,2
  9003  0595  2D99               	goto	l3256
  9004  0596  01D4               	clrf	_process_level$883
  9005  0597  01D5               	clrf	_process_level$883+1
  9006  0598  2DA4               	goto	l3258
  9007  0599                     l3256:	
  9008  0599  0873               	movf	process_level@new_level,w
  9009  059A  00F4               	movwf	??_process_level
  9010  059B  01F5               	clrf	??_process_level+1
  9011  059C  35F4               	lslf	??_process_level,f
  9012  059D  0DF5               	rlf	??_process_level+1,f
  9013  059E  0874               	movf	??_process_level,w
  9014  059F  3E05               	addlw	5
  9015  05A0  00D4               	movwf	_process_level$883
  9016  05A1  3000               	movlw	0
  9017  05A2  3D75               	addwfc	??_process_level+1,w
  9018  05A3  00D5               	movwf	_process_level$883+1
  9019  05A4                     l3258:	
  9020  05A4  0854               	movf	_process_level$883,w
  9021  05A5  00F4               	movwf	??_process_level
  9022  05A6  0874               	movf	??_process_level,w
  9023  05A7  0022               	movlb	2	; select bank2
  9024  05A8  00CC               	movwf	(_note_event^(0+256)+1)
  9025                           
  9026                           ;scan.c: 183: if (filtered_state) LED_On(LED_C2);
  9027  05A9  0020               	movlb	0	; select bank0
  9028  05AA  0859               	movf	process_level@filtered_state,w
  9029  05AB  1903               	btfsc	3,2
  9030  05AC  2DB2               	goto	l3264
  9031  05AD  3001               	movlw	1
  9032  05AE  3189  21FB  3184   	fcall	_LED_On
  9033  05B1  2DB5               	goto	l3266
  9034  05B2                     l3264:	
  9035                           
  9036                           ;scan.c: 184: else LED_Off(LED_C2);
  9037  05B2  3001               	movlw	1
  9038  05B3  3189  21DF         	fcall	_LED_Off
  9039  05B5                     l3266:	
  9040                           
  9041                           ;scan.c: 185: }
  9042                           ;scan.c: 186: key_states[idx_key] = filtered_state;
  9043  05B5  0020               	movlb	0	; select bank0
  9044  05B6  0859               	movf	process_level@filtered_state,w
  9045  05B7  00F4               	movwf	??_process_level
  9046  05B8  085A               	movf	process_level@idx_key,w
  9047  05B9  3E20               	addlw	(low (process_level@key_states| (0+256)))& (0+255)
  9048  05BA  0086               	movwf	6
  9049  05BB  3001               	movlw	1	; select bank2/3
  9050  05BC  0087               	movwf	7
  9051  05BD  0874               	movf	??_process_level,w
  9052  05BE  0081               	movwf	1
  9053  05BF  0008               	return
  9054  05C0                     __end_of_process_level:	
  9055                           
  9056                           	psect	text35
  9057  09FB                     __ptext35:	
  9058 ;; *************** function _LED_On *****************
  9059 ;; Defined at:
  9060 ;;		line 39 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1455/leds.c"
  9061 ;; Parameters:    Size  Location     Type
  9062 ;;  led             1    wreg     enum E2
  9063 ;; Auto vars:     Size  Location     Type
  9064 ;;  led             1    1[COMMON] enum E2
  9065 ;; Return value:  Size  Location     Type
  9066 ;;		None               void
  9067 ;; Registers used:
  9068 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9069 ;; Tracked objects:
  9070 ;;		On entry : 0/0
  9071 ;;		On exit  : 0/0
  9072 ;;		Unchanged: 0/0
  9073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9077 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9078 ;;Total ram usage:        1 bytes
  9079 ;; Hardware stack levels used:    1
  9080 ;; Hardware stack levels required when called:    1
  9081 ;; This function calls:
  9082 ;;		Nothing
  9083 ;; This function is called by:
  9084 ;;		_APP_LEDUpdateUSBStatus
  9085 ;;		_process_level
  9086 ;; This function uses a non-reentrant model
  9087 ;;
  9088                           
  9089                           
  9090                           ;psect for function _LED_On
  9091  09FB                     _LED_On:	
  9092                           
  9093                           ;incstack = 0
  9094                           ; Regs used in _LED_On: [wreg-fsr0h+status,2+status,0]
  9095                           ;LED_On@led stored from wreg
  9096  09FB  00F1               	movwf	LED_On@led
  9097                           
  9098                           ;leds.c: 41: switch(led)
  9099  09FC  2A0C               	goto	l2798
  9100  09FD                     l370:	
  9101                           ;leds.c: 42: {
  9102                           ;leds.c: 43: case LED_C2:
  9103                           
  9104                           
  9105                           ;leds.c: 44: LATCbits.LATC2 = 1;
  9106  09FD  0022               	movlb	2	; select bank2
  9107  09FE  150E               	bsf	14,2	;volatile
  9108                           
  9109                           ;leds.c: 45: break;
  9110  09FF  0008               	return
  9111  0A00                     l372:	
  9112                           ;leds.c: 47: case LED_D1:
  9113                           
  9114                           
  9115                           ;leds.c: 48: LATCbits.LATC0 = 1;
  9116  0A00  0022               	movlb	2	; select bank2
  9117  0A01  140E               	bsf	14,0	;volatile
  9118                           
  9119                           ;leds.c: 49: break;
  9120  0A02  0008               	return
  9121  0A03                     l373:	
  9122                           ;leds.c: 51: case LED_D2:
  9123                           
  9124                           
  9125                           ;leds.c: 52: LATCbits.LATC1 = 1;
  9126  0A03  0022               	movlb	2	; select bank2
  9127  0A04  148E               	bsf	14,1	;volatile
  9128                           
  9129                           ;leds.c: 53: break;
  9130  0A05  0008               	return
  9131  0A06                     l374:	
  9132                           ;leds.c: 55: case LED_D3:
  9133                           
  9134                           
  9135                           ;leds.c: 56: LATCbits.LATC2 = 1;
  9136  0A06  0022               	movlb	2	; select bank2
  9137  0A07  150E               	bsf	14,2	;volatile
  9138                           
  9139                           ;leds.c: 57: break;
  9140  0A08  0008               	return
  9141  0A09                     l375:	
  9142                           ;leds.c: 59: case LED_D4:
  9143                           
  9144                           
  9145                           ;leds.c: 60: LATCbits.LATC3 = 1;
  9146  0A09  0022               	movlb	2	; select bank2
  9147  0A0A  158E               	bsf	14,3	;volatile
  9148                           
  9149                           ;leds.c: 65: }
  9150                           
  9151                           ;leds.c: 64: break;
  9152                           
  9153                           ;leds.c: 63: case LED_NONE:
  9154                           
  9155                           ;leds.c: 61: break;
  9156  0A0B  0008               	return
  9157  0A0C                     l2798:	
  9158  0A0C  0871               	movf	LED_On@led,w
  9159                           
  9160                           ; Switch size 1, requested type "space"
  9161                           ; Number of cases is 6, Range of values is 0 to 5
  9162                           ; switch strategies available:
  9163                           ; Name         Instructions Cycles
  9164                           ; direct_byte           18     6 (fixed)
  9165                           ; simple_byte           19    10 (average)
  9166                           ; jumptable            260     6 (fixed)
  9167                           ;	Chosen strategy is direct_byte
  9168  0A0D  0084               	movwf	4
  9169  0A0E  3006               	movlw	6
  9170  0A0F  0204               	subwf	4,w
  9171  0A10  1803               	skipnc
  9172  0A11  0008               	return
  9173  0A12  3188               	movlp	high S4778
  9174  0A13  3504               	lslf	4,w
  9175  0A14  3E32               	addlw	low S4778
  9176  0A15  0082               	movwf	2
  9177  0A16                     l377:	
  9178  0A16  0008               	return
  9179  0A17                     __end_of_LED_On:	
  9180                           
  9181                           	psect	swtext4
  9182  0832                     __pswtext4:	
  9183  0832                     S4778:	
  9184  0832  318A  2A16         	ljmp	l377
  9185  0834  3189  29FD         	ljmp	l370
  9186  0836  318A  2A00         	ljmp	l372
  9187  0838  318A  2A03         	ljmp	l373
  9188  083A  318A  2A06         	ljmp	l374
  9189  083C  318A  2A09         	ljmp	l375
  9190                           
  9191                           	psect	text36
  9192  09DF                     __ptext36:	
  9193 ;; *************** function _LED_Off *****************
  9194 ;; Defined at:
  9195 ;;		line 84 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1455/leds.c"
  9196 ;; Parameters:    Size  Location     Type
  9197 ;;  led             1    wreg     enum E2
  9198 ;; Auto vars:     Size  Location     Type
  9199 ;;  led             1    1[COMMON] enum E2
  9200 ;; Return value:  Size  Location     Type
  9201 ;;		None               void
  9202 ;; Registers used:
  9203 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9204 ;; Tracked objects:
  9205 ;;		On entry : 0/0
  9206 ;;		On exit  : 0/0
  9207 ;;		Unchanged: 0/0
  9208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9210 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9212 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9213 ;;Total ram usage:        1 bytes
  9214 ;; Hardware stack levels used:    1
  9215 ;; Hardware stack levels required when called:    1
  9216 ;; This function calls:
  9217 ;;		Nothing
  9218 ;; This function is called by:
  9219 ;;		_APP_LEDUpdateUSBStatus
  9220 ;;		_process_level
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           
  9225                           ;psect for function _LED_Off
  9226  09DF                     _LED_Off:	
  9227                           
  9228                           ;incstack = 0
  9229                           ; Regs used in _LED_Off: [wreg-fsr0h+status,2+status,0]
  9230                           ;LED_Off@led stored from wreg
  9231  09DF  00F1               	movwf	LED_Off@led
  9232                           
  9233                           ;leds.c: 86: switch(led)
  9234  09E0  29F0               	goto	l2788
  9235  09E1                     l381:	
  9236                           ;leds.c: 87: {
  9237                           ;leds.c: 88: case LED_C2:
  9238                           
  9239                           
  9240                           ;leds.c: 89: LATCbits.LATC2 = 0;
  9241  09E1  0022               	movlb	2	; select bank2
  9242  09E2  110E               	bcf	14,2	;volatile
  9243                           
  9244                           ;leds.c: 90: break;
  9245  09E3  0008               	return
  9246  09E4                     l383:	
  9247                           ;leds.c: 92: case LED_D1:
  9248                           
  9249                           
  9250                           ;leds.c: 93: LATCbits.LATC0 = 0;
  9251  09E4  0022               	movlb	2	; select bank2
  9252  09E5  100E               	bcf	14,0	;volatile
  9253                           
  9254                           ;leds.c: 94: break;
  9255  09E6  0008               	return
  9256  09E7                     l384:	
  9257                           ;leds.c: 96: case LED_D2:
  9258                           
  9259                           
  9260                           ;leds.c: 97: LATCbits.LATC1 = 0;
  9261  09E7  0022               	movlb	2	; select bank2
  9262  09E8  108E               	bcf	14,1	;volatile
  9263                           
  9264                           ;leds.c: 98: break;
  9265  09E9  0008               	return
  9266  09EA                     l385:	
  9267                           ;leds.c: 100: case LED_D3:
  9268                           
  9269                           
  9270                           ;leds.c: 101: LATCbits.LATC2 = 0;
  9271  09EA  0022               	movlb	2	; select bank2
  9272  09EB  110E               	bcf	14,2	;volatile
  9273                           
  9274                           ;leds.c: 102: break;
  9275  09EC  0008               	return
  9276  09ED                     l386:	
  9277                           ;leds.c: 104: case LED_D4:
  9278                           
  9279                           
  9280                           ;leds.c: 105: LATCbits.LATC3 = 0;
  9281  09ED  0022               	movlb	2	; select bank2
  9282  09EE  118E               	bcf	14,3	;volatile
  9283                           
  9284                           ;leds.c: 110: }
  9285                           
  9286                           ;leds.c: 109: break;
  9287                           
  9288                           ;leds.c: 108: case LED_NONE:
  9289                           
  9290                           ;leds.c: 106: break;
  9291  09EF  0008               	return
  9292  09F0                     l2788:	
  9293  09F0  0871               	movf	LED_Off@led,w
  9294                           
  9295                           ; Switch size 1, requested type "space"
  9296                           ; Number of cases is 6, Range of values is 0 to 5
  9297                           ; switch strategies available:
  9298                           ; Name         Instructions Cycles
  9299                           ; direct_byte           18     6 (fixed)
  9300                           ; simple_byte           19    10 (average)
  9301                           ; jumptable            260     6 (fixed)
  9302                           ;	Chosen strategy is direct_byte
  9303  09F1  0084               	movwf	4
  9304  09F2  3006               	movlw	6
  9305  09F3  0204               	subwf	4,w
  9306  09F4  1803               	skipnc
  9307  09F5  0008               	return
  9308  09F6  3188               	movlp	high S4780
  9309  09F7  3504               	lslf	4,w
  9310  09F8  3E3E               	addlw	low S4780
  9311  09F9  0082               	movwf	2
  9312  09FA                     l388:	
  9313  09FA  0008               	return
  9314  09FB                     __end_of_LED_Off:	
  9315                           
  9316                           	psect	swtext5
  9317  083E                     __pswtext5:	
  9318  083E                     S4780:	
  9319  083E  3189  29FA         	ljmp	l388
  9320  0840  3189  29E1         	ljmp	l381
  9321  0842  3189  29E4         	ljmp	l383
  9322  0844  3189  29E7         	ljmp	l384
  9323  0846  3189  29EA         	ljmp	l385
  9324  0848  3189  29ED         	ljmp	l386
  9325                           
  9326                           	psect	text37
  9327  02F5                     __ptext37:	
  9328 ;; *************** function _set_timer *****************
  9329 ;; Defined at:
  9330 ;;		line 54 in file "../src/scan.c"
  9331 ;; Parameters:    Size  Location     Type
  9332 ;;		None
  9333 ;; Auto vars:     Size  Location     Type
  9334 ;;		None
  9335 ;; Return value:  Size  Location     Type
  9336 ;;		None               void
  9337 ;; Registers used:
  9338 ;;		status,2
  9339 ;; Tracked objects:
  9340 ;;		On entry : 0/0
  9341 ;;		On exit  : 0/0
  9342 ;;		Unchanged: 0/0
  9343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9348 ;;Total ram usage:        0 bytes
  9349 ;; Hardware stack levels used:    1
  9350 ;; Hardware stack levels required when called:    1
  9351 ;; This function calls:
  9352 ;;		Nothing
  9353 ;; This function is called by:
  9354 ;;		_scan_task
  9355 ;; This function uses a non-reentrant model
  9356 ;;
  9357                           
  9358                           
  9359                           ;psect for function _set_timer
  9360  02F5                     _set_timer:	
  9361                           
  9362                           ;scan.c: 55: wait_timer = 1;
  9363                           
  9364                           ;incstack = 0
  9365                           ; Regs used in _set_timer: [status,2]
  9366  02F5  0022               	movlb	2	; select bank2
  9367  02F6  01DC               	clrf	_wait_timer^(0+256)
  9368  02F7  0ADC               	incf	_wait_timer^(0+256),f
  9369                           
  9370                           ;scan.c: 56: OPTION_REGbits.TMR0CS = 0;
  9371  02F8  0021               	movlb	1	; select bank1
  9372  02F9  1295               	bcf	21,5	;volatile
  9373                           
  9374                           ;scan.c: 57: OPTION_REGbits.PSA = 1;
  9375  02FA  1595               	bsf	21,3	;volatile
  9376                           
  9377                           ;scan.c: 58: INTCONbits.TMR0IE = 0;
  9378  02FB  128B               	bcf	11,5	;volatile
  9379                           
  9380                           ;scan.c: 59: INTCONbits.TMR0IF = 0;
  9381  02FC  110B               	bcf	11,2	;volatile
  9382                           
  9383                           ;scan.c: 60: TMR0 = 0;
  9384  02FD  0020               	movlb	0	; select bank0
  9385  02FE  0195               	clrf	21	;volatile
  9386  02FF  0008               	return
  9387  0300                     __end_of_set_timer:	
  9388                           
  9389                           	psect	text38
  9390  0945                     __ptext38:	
  9391 ;; *************** function _set_clock_and_data *****************
  9392 ;; Defined at:
  9393 ;;		line 67 in file "../src/scan.c"
  9394 ;; Parameters:    Size  Location     Type
  9395 ;;  c               1    wreg     const unsigned char 
  9396 ;;  d               1    1[COMMON] const unsigned char 
  9397 ;; Auto vars:     Size  Location     Type
  9398 ;;  c               1    2[COMMON] const unsigned char 
  9399 ;; Return value:  Size  Location     Type
  9400 ;;		None               void
  9401 ;; Registers used:
  9402 ;;		wreg, status,2, status,0
  9403 ;; Tracked objects:
  9404 ;;		On entry : 0/0
  9405 ;;		On exit  : 0/0
  9406 ;;		Unchanged: 0/0
  9407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9408 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9409 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9411 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9412 ;;Total ram usage:        2 bytes
  9413 ;; Hardware stack levels used:    1
  9414 ;; Hardware stack levels required when called:    1
  9415 ;; This function calls:
  9416 ;;		Nothing
  9417 ;; This function is called by:
  9418 ;;		_scan_task
  9419 ;; This function uses a non-reentrant model
  9420 ;;
  9421                           
  9422                           
  9423                           ;psect for function _set_clock_and_data
  9424  0945                     _set_clock_and_data:	
  9425                           
  9426                           ;incstack = 0
  9427                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  9428                           ;set_clock_and_data@c stored from wreg
  9429  0945  00F2               	movwf	set_clock_and_data@c
  9430                           
  9431                           ;scan.c: 68: LATCbits.LATC4 = !!c;
  9432  0946  0872               	movf	set_clock_and_data@c,w
  9433  0947  1903               	btfsc	3,2
  9434  0948  294C               	goto	u2870
  9435  0949  0022               	movlb	2	; select bank2
  9436  094A  160E               	bsf	14,4	;volatile
  9437  094B  294E               	goto	u2884
  9438  094C                     u2870:	
  9439  094C  0022               	movlb	2	; select bank2
  9440  094D  120E               	bcf	14,4	;volatile
  9441  094E                     u2884:	
  9442                           
  9443                           ;scan.c: 69: LATCbits.LATC5 = !!d;
  9444  094E  0871               	movf	set_clock_and_data@d,w
  9445  094F  1903               	btfsc	3,2
  9446  0950  2954               	goto	u2890
  9447  0951  0022               	movlb	2	; select bank2
  9448  0952  168E               	bsf	14,5	;volatile
  9449  0953  0008               	return
  9450  0954                     u2890:	
  9451  0954  0022               	movlb	2	; select bank2
  9452  0955  128E               	bcf	14,5	;volatile
  9453  0956  0008               	return
  9454  0957                     __end_of_set_clock_and_data:	
  9455                           
  9456                           	psect	text39
  9457  0A33                     __ptext39:	
  9458 ;; *************** function _scan_init *****************
  9459 ;; Defined at:
  9460 ;;		line 31 in file "../src/scan.c"
  9461 ;; Parameters:    Size  Location     Type
  9462 ;;		None
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;		None
  9465 ;; Return value:  Size  Location     Type
  9466 ;;		None               void
  9467 ;; Registers used:
  9468 ;;		wreg, status,2, status,0
  9469 ;; Tracked objects:
  9470 ;;		On entry : 0/0
  9471 ;;		On exit  : 0/0
  9472 ;;		Unchanged: 0/0
  9473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9478 ;;Total ram usage:        0 bytes
  9479 ;; Hardware stack levels used:    1
  9480 ;; Hardware stack levels required when called:    1
  9481 ;; This function calls:
  9482 ;;		Nothing
  9483 ;; This function is called by:
  9484 ;;		_scan_task
  9485 ;; This function uses a non-reentrant model
  9486 ;;
  9487                           
  9488                           
  9489                           ;psect for function _scan_init
  9490  0A33                     _scan_init:	
  9491                           
  9492                           ;scan.c: 32: is_initialized = 1;
  9493                           
  9494                           ;incstack = 0
  9495                           ; Regs used in _scan_init: [wreg+status,2+status,0]
  9496  0A33  0022               	movlb	2	; select bank2
  9497  0A34  01D9               	clrf	_is_initialized^(0+256)
  9498  0A35  0AD9               	incf	_is_initialized^(0+256),f
  9499                           
  9500                           ;scan.c: 33: TRISCbits.TRISC3 = PIN_INPUT;
  9501  0A36  0021               	movlb	1	; select bank1
  9502  0A37  158E               	bsf	14,3	;volatile
  9503                           
  9504                           ;scan.c: 34: TRISCbits.TRISC4 = PIN_OUTPUT;
  9505  0A38  120E               	bcf	14,4	;volatile
  9506                           
  9507                           ;scan.c: 35: TRISCbits.TRISC5 = PIN_OUTPUT;
  9508  0A39  128E               	bcf	14,5	;volatile
  9509                           
  9510                           ;scan.c: 37: ANSELA = 0;
  9511  0A3A  0023               	movlb	3	; select bank3
  9512  0A3B  018C               	clrf	12	;volatile
  9513                           
  9514                           ;scan.c: 39: ANSELCbits.ANSC3 = PIN_ANALOG;
  9515  0A3C  158E               	bsf	14,3	;volatile
  9516                           
  9517                           ;scan.c: 40: LATCbits.LATC4 = 0;
  9518  0A3D  0022               	movlb	2	; select bank2
  9519  0A3E  120E               	bcf	14,4	;volatile
  9520                           
  9521                           ;scan.c: 41: LATCbits.LATC5 = 0;
  9522  0A3F  128E               	bcf	14,5	;volatile
  9523                           
  9524                           ;scan.c: 43: ANSELAbits.ANSA4 = PIN_DIGITAL;
  9525  0A40  0023               	movlb	3	; select bank3
  9526  0A41  120C               	bcf	12,4	;volatile
  9527                           
  9528                           ;scan.c: 44: TRISAbits.TRISA4 = PIN_INPUT;
  9529  0A42  0021               	movlb	1	; select bank1
  9530  0A43  160C               	bsf	12,4	;volatile
  9531                           
  9532                           ;scan.c: 46: PIE1bits.ADIE = 0;
  9533  0A44  1311               	bcf	17,6	;volatile
  9534                           
  9535                           ;scan.c: 47: ADCON0bits.ADON = 1;
  9536  0A45  141D               	bsf	29,0	;volatile
  9537                           
  9538                           ;scan.c: 48: ADCON1bits.ADFM = 0;
  9539  0A46  139E               	bcf	30,7	;volatile
  9540                           
  9541                           ;scan.c: 49: ADCON1bits.ADCS = 0b110;
  9542  0A47  081E               	movf	30,w	;volatile
  9543  0A48  398F               	andlw	-113
  9544  0A49  3860               	iorlw	96
  9545  0A4A  009E               	movwf	30	;volatile
  9546                           
  9547                           ;scan.c: 50: ADCON1bits.ADPREF = 0;
  9548  0A4B  30FC               	movlw	-4
  9549  0A4C  059E               	andwf	30,f	;volatile
  9550                           
  9551                           ;scan.c: 51: ADCON2bits.TRIGSEL = 0;
  9552  0A4D  308F               	movlw	-113
  9553  0A4E  059F               	andwf	31,f	;volatile
  9554  0A4F  0008               	return
  9555  0A50                     __end_of_scan_init:	
  9556                           
  9557                           	psect	text40
  9558  0929                     __ptext40:	
  9559 ;; *************** function _run_adc *****************
  9560 ;; Defined at:
  9561 ;;		line 84 in file "../src/scan.c"
  9562 ;; Parameters:    Size  Location     Type
  9563 ;;		None
  9564 ;; Auto vars:     Size  Location     Type
  9565 ;;		None
  9566 ;; Return value:  Size  Location     Type
  9567 ;;		None               void
  9568 ;; Registers used:
  9569 ;;		wreg, status,2, status,0
  9570 ;; Tracked objects:
  9571 ;;		On entry : 0/0
  9572 ;;		On exit  : 0/0
  9573 ;;		Unchanged: 0/0
  9574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9579 ;;Total ram usage:        0 bytes
  9580 ;; Hardware stack levels used:    1
  9581 ;; Hardware stack levels required when called:    1
  9582 ;; This function calls:
  9583 ;;		Nothing
  9584 ;; This function is called by:
  9585 ;;		_scan_task
  9586 ;; This function uses a non-reentrant model
  9587 ;;
  9588                           
  9589                           
  9590                           ;psect for function _run_adc
  9591  0929                     _run_adc:	
  9592                           
  9593                           ;scan.c: 85: ADCON0bits.CHS = 7;
  9594                           
  9595                           ;incstack = 0
  9596                           ; Regs used in _run_adc: [wreg+status,2+status,0]
  9597  0929  0021               	movlb	1	; select bank1
  9598  092A  081D               	movf	29,w	;volatile
  9599  092B  3983               	andlw	-125
  9600  092C  381C               	iorlw	28
  9601  092D  009D               	movwf	29	;volatile
  9602                           
  9603                           ;scan.c: 86: ADCON0bits.GO = 1;
  9604  092E  149D               	bsf	29,1	;volatile
  9605  092F  0008               	return
  9606  0930                     __end_of_run_adc:	
  9607                           
  9608                           	psect	text41
  9609  096C                     __ptext41:	
  9610 ;; *************** function _is_end_of_scan *****************
  9611 ;; Defined at:
  9612 ;;		line 76 in file "../src/scan.c"
  9613 ;; Parameters:    Size  Location     Type
  9614 ;;		None
  9615 ;; Auto vars:     Size  Location     Type
  9616 ;;  res             1    3[COMMON] unsigned char 
  9617 ;; Return value:  Size  Location     Type
  9618 ;;                  1    wreg      unsigned char 
  9619 ;; Registers used:
  9620 ;;		wreg, status,2, status,0
  9621 ;; Tracked objects:
  9622 ;;		On entry : 0/0
  9623 ;;		On exit  : 0/0
  9624 ;;		Unchanged: 0/0
  9625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9627 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9628 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9629 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9630 ;;Total ram usage:        3 bytes
  9631 ;; Hardware stack levels used:    1
  9632 ;; Hardware stack levels required when called:    1
  9633 ;; This function calls:
  9634 ;;		Nothing
  9635 ;; This function is called by:
  9636 ;;		_scan_task
  9637 ;; This function uses a non-reentrant model
  9638 ;;
  9639                           
  9640                           
  9641                           ;psect for function _is_end_of_scan
  9642  096C                     _is_end_of_scan:	
  9643                           
  9644                           ;scan.c: 78: static uint8_t scan_counter = 0;
  9645                           ;scan.c: 79: bool res = (++scan_counter) >= N_KEYS;
  9646                           
  9647                           ;incstack = 0
  9648                           ; Regs used in _is_end_of_scan: [wreg+status,2+status,0]
  9649  096C  3001               	movlw	1
  9650  096D  00F1               	movwf	??_is_end_of_scan
  9651  096E  0871               	movf	??_is_end_of_scan,w
  9652  096F  0022               	movlb	2	; select bank2
  9653  0970  07DD               	addwf	is_end_of_scan@scan_counter^(0+256),f
  9654  0971  3020               	movlw	32
  9655  0972  025D               	subwf	is_end_of_scan@scan_counter^(0+256),w
  9656  0973  1C03               	btfss	3,0
  9657  0974  2977               	goto	u2910
  9658  0975  3001               	movlw	1
  9659  0976  2978               	goto	u2920
  9660  0977                     u2910:	
  9661  0977  3000               	movlw	0
  9662  0978                     u2920:	
  9663  0978  00F2               	movwf	??_is_end_of_scan+1
  9664  0979  0872               	movf	??_is_end_of_scan+1,w
  9665  097A  00F3               	movwf	is_end_of_scan@res
  9666                           
  9667                           ;scan.c: 80: if (scan_counter >= N_KEYS) scan_counter = 0;
  9668  097B  3020               	movlw	32
  9669  097C  025D               	subwf	is_end_of_scan@scan_counter^(0+256),w
  9670  097D  1803               	btfsc	3,0
  9671  097E  01DD               	clrf	is_end_of_scan@scan_counter^(0+256)
  9672                           
  9673                           ;scan.c: 81: return res;
  9674  097F  0873               	movf	is_end_of_scan@res,w
  9675  0980  0008               	return
  9676  0981                     __end_of_is_end_of_scan:	
  9677                           
  9678                           	psect	text42
  9679  0922                     __ptext42:	
  9680 ;; *************** function _is_adc_ready *****************
  9681 ;; Defined at:
  9682 ;;		line 89 in file "../src/scan.c"
  9683 ;; Parameters:    Size  Location     Type
  9684 ;;		None
  9685 ;; Auto vars:     Size  Location     Type
  9686 ;;		None
  9687 ;; Return value:  Size  Location     Type
  9688 ;;                  1    wreg      unsigned char 
  9689 ;; Registers used:
  9690 ;;		wreg, status,0
  9691 ;; Tracked objects:
  9692 ;;		On entry : 0/0
  9693 ;;		On exit  : 0/0
  9694 ;;		Unchanged: 0/0
  9695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9700 ;;Total ram usage:        0 bytes
  9701 ;; Hardware stack levels used:    1
  9702 ;; Hardware stack levels required when called:    1
  9703 ;; This function calls:
  9704 ;;		Nothing
  9705 ;; This function is called by:
  9706 ;;		_scan_task
  9707 ;; This function uses a non-reentrant model
  9708 ;;
  9709                           
  9710                           
  9711                           ;psect for function _is_adc_ready
  9712  0922                     _is_adc_ready:	
  9713                           
  9714                           ;scan.c: 90: return !ADCON0bits.GO_nDONE;
  9715                           
  9716                           ;incstack = 0
  9717                           ; Regs used in _is_adc_ready: [wreg+status,0]
  9718  0922  1003               	clrc
  9719  0923  0021               	movlb	1	; select bank1
  9720  0924  1C9D               	btfss	29,1	;volatile
  9721  0925  1403               	setc
  9722  0926  3000               	movlw	0
  9723  0927  3D09               	addwfc	9,w
  9724  0928  0008               	return
  9725  0929                     __end_of_is_adc_ready:	
  9726                           
  9727                           	psect	text43
  9728  0917                     __ptext43:	
  9729 ;; *************** function _get_data *****************
  9730 ;; Defined at:
  9731 ;;		line 72 in file "../src/scan.c"
  9732 ;; Parameters:    Size  Location     Type
  9733 ;;		None
  9734 ;; Auto vars:     Size  Location     Type
  9735 ;;		None
  9736 ;; Return value:  Size  Location     Type
  9737 ;;                  1    wreg      unsigned char 
  9738 ;; Registers used:
  9739 ;;		wreg, status,2, status,0
  9740 ;; Tracked objects:
  9741 ;;		On entry : 0/0
  9742 ;;		On exit  : 0/0
  9743 ;;		Unchanged: 0/0
  9744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9749 ;;Total ram usage:        0 bytes
  9750 ;; Hardware stack levels used:    1
  9751 ;; Hardware stack levels required when called:    1
  9752 ;; This function calls:
  9753 ;;		Nothing
  9754 ;; This function is called by:
  9755 ;;		_scan_task
  9756 ;; This function uses a non-reentrant model
  9757 ;;
  9758                           
  9759                           
  9760                           ;psect for function _get_data
  9761  0917                     _get_data:	
  9762                           
  9763                           ;scan.c: 73: return LATCbits.LATC5;
  9764                           
  9765                           ;incstack = 0
  9766                           ; Regs used in _get_data: [wreg+status,2+status,0]
  9767  0917  0022               	movlb	2	; select bank2
  9768  0918  0E0E               	swapf	14,w	;volatile
  9769  0919  0C89               	rrf	9,f
  9770  091A  3901               	andlw	1
  9771  091B  0008               	return
  9772  091C                     __end_of_get_data:	
  9773                           
  9774                           	psect	text44
  9775  0914                     __ptext44:	
  9776 ;; *************** function _get_adc *****************
  9777 ;; Defined at:
  9778 ;;		line 93 in file "../src/scan.c"
  9779 ;; Parameters:    Size  Location     Type
  9780 ;;		None
  9781 ;; Auto vars:     Size  Location     Type
  9782 ;;		None
  9783 ;; Return value:  Size  Location     Type
  9784 ;;                  1    wreg      unsigned char 
  9785 ;; Registers used:
  9786 ;;		wreg
  9787 ;; Tracked objects:
  9788 ;;		On entry : 0/0
  9789 ;;		On exit  : 0/0
  9790 ;;		Unchanged: 0/0
  9791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9796 ;;Total ram usage:        0 bytes
  9797 ;; Hardware stack levels used:    1
  9798 ;; Hardware stack levels required when called:    1
  9799 ;; This function calls:
  9800 ;;		Nothing
  9801 ;; This function is called by:
  9802 ;;		_scan_task
  9803 ;; This function uses a non-reentrant model
  9804 ;;
  9805                           
  9806                           
  9807                           ;psect for function _get_adc
  9808  0914                     _get_adc:	
  9809                           
  9810                           ;scan.c: 94: return ADRESH;
  9811                           
  9812                           ;incstack = 0
  9813                           ; Regs used in _get_adc: [wreg]
  9814  0914  0021               	movlb	1	; select bank1
  9815  0915  081C               	movf	28,w	;volatile
  9816  0916  0008               	return
  9817  0917                     __end_of_get_adc:	
  9818                           
  9819                           	psect	text45
  9820  0C9A                     __ptext45:	
  9821 ;; *************** function _USBTransferOnePacket *****************
  9822 ;; Defined at:
  9823 ;;		line 995 in file "../../../../../../framework/usb/src/usb_device.c"
  9824 ;; Parameters:    Size  Location     Type
  9825 ;;  ep              1    wreg     unsigned char 
  9826 ;;  dir             1    1[COMMON] unsigned char 
  9827 ;;  data            2    2[COMMON] PTR unsigned char 
  9828 ;;		 -> midiData(4), ReceivedDataBuffer(64), 
  9829 ;;  len             1    4[COMMON] unsigned char 
  9830 ;; Auto vars:     Size  Location     Type
  9831 ;;  ep              1    7[COMMON] unsigned char 
  9832 ;;  handle          1    8[COMMON] PTR volatile struct __BD
  9833 ;;		 -> BDT(32), NULL(0), 
  9834 ;; Return value:  Size  Location     Type
  9835 ;;                  1    wreg      PTR void 
  9836 ;; Registers used:
  9837 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9838 ;; Tracked objects:
  9839 ;;		On entry : 0/0
  9840 ;;		On exit  : 0/0
  9841 ;;		Unchanged: 0/0
  9842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9843 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9844 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9845 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9846 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9847 ;;Total ram usage:        8 bytes
  9848 ;; Hardware stack levels used:    1
  9849 ;; Hardware stack levels required when called:    1
  9850 ;; This function calls:
  9851 ;;		Nothing
  9852 ;; This function is called by:
  9853 ;;		_APP_DeviceAudioMIDIInitialize
  9854 ;;		_APP_DeviceAudioMIDITasks
  9855 ;; This function uses a non-reentrant model
  9856 ;;
  9857                           
  9858                           
  9859                           ;psect for function _USBTransferOnePacket
  9860  0C9A                     _USBTransferOnePacket:	
  9861                           
  9862                           ;incstack = 0
  9863                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  9864                           ;USBTransferOnePacket@ep stored from wreg
  9865  0C9A  00F7               	movwf	USBTransferOnePacket@ep
  9866                           
  9867                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  9868                           ;usb_device.c: 1000: if(dir != 0)
  9869  0C9B  0871               	movf	USBTransferOnePacket@dir,w
  9870  0C9C  1903               	btfsc	3,2
  9871  0C9D  2CA3               	goto	l2820
  9872                           
  9873                           ;usb_device.c: 1001: {
  9874                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  9875  0C9E  0877               	movf	USBTransferOnePacket@ep,w
  9876  0C9F  3E6B               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  9877  0CA0  0086               	movwf	6
  9878  0CA1  0187               	clrf	7
  9879  0CA2  2CA8               	goto	L15
  9880  0CA3                     l2820:	
  9881                           ;usb_device.c: 1004: }
  9882                           
  9883                           
  9884                           ;usb_device.c: 1005: else
  9885                           ;usb_device.c: 1006: {
  9886                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  9887  0CA3  0877               	movf	USBTransferOnePacket@ep,w
  9888  0CA4  3E4D               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  9889  0CA5  0086               	movwf	6
  9890  0CA6  3001               	movlw	1	; select bank2/3
  9891  0CA7  0087               	movwf	7
  9892  0CA8                     L15:	
  9893  0CA8  0801               	movf	1,w
  9894  0CA9  00F5               	movwf	??_USBTransferOnePacket
  9895  0CAA  0875               	movf	??_USBTransferOnePacket,w
  9896  0CAB  00F8               	movwf	USBTransferOnePacket@handle
  9897                           
  9898                           ;usb_device.c: 1009: }
  9899                           ;usb_device.c: 1013: if(handle == 0)
  9900  0CAC  0878               	movf	USBTransferOnePacket@handle,w
  9901  0CAD  1D03               	btfss	3,2
  9902  0CAE  2CB1               	goto	l2828
  9903                           
  9904                           ;usb_device.c: 1014: {
  9905                           ;usb_device.c: 1015: return 0;
  9906  0CAF  3000               	movlw	0
  9907  0CB0  0008               	return
  9908  0CB1                     l2828:	
  9909                           
  9910                           ;usb_device.c: 1016: }
  9911                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  9912  0CB1  30FF               	movlw	255
  9913  0CB2  0572               	andwf	USBTransferOnePacket@data,w
  9914  0CB3  00F5               	movwf	??_USBTransferOnePacket
  9915  0CB4  307F               	movlw	127
  9916  0CB5  0573               	andwf	USBTransferOnePacket@data+1,w
  9917  0CB6  00F6               	movwf	??_USBTransferOnePacket+1
  9918  0CB7  0878               	movf	USBTransferOnePacket@handle,w
  9919  0CB8  3E02               	addlw	2
  9920  0CB9  0086               	movwf	6
  9921  0CBA  0187               	clrf	7
  9922  0CBB  0875               	movf	??_USBTransferOnePacket,w
  9923  0CBC  3FC0               	movwi [0]fsr1
  9924  0CBD  0876               	movf	??_USBTransferOnePacket+1,w
  9925  0CBE  3FC1               	movwi [1]fsr1
  9926                           
  9927                           ;usb_device.c: 1030: handle->CNT = len;
  9928  0CBF  0874               	movf	USBTransferOnePacket@len,w
  9929  0CC0  00F5               	movwf	??_USBTransferOnePacket
  9930  0CC1  0A78               	incf	USBTransferOnePacket@handle,w
  9931  0CC2  0086               	movwf	6
  9932  0CC3  0187               	clrf	7
  9933  0CC4  0875               	movf	??_USBTransferOnePacket,w
  9934  0CC5  0081               	movwf	1
  9935                           
  9936                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  9937  0CC6  3040               	movlw	64
  9938  0CC7  00F5               	movwf	??_USBTransferOnePacket
  9939  0CC8  0878               	movf	USBTransferOnePacket@handle,w
  9940  0CC9  0086               	movwf	6
  9941  0CCA  0187               	clrf	7
  9942  0CCB  0875               	movf	??_USBTransferOnePacket,w
  9943  0CCC  0581               	andwf	1,f
  9944                           
  9945                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  9946  0CCD  0878               	movf	USBTransferOnePacket@handle,w
  9947  0CCE  0086               	movwf	6
  9948  0CCF  0187               	clrf	7
  9949  0CD0  1581               	bsf	1,3
  9950                           
  9951                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  9952  0CD1  0878               	movf	USBTransferOnePacket@handle,w
  9953  0CD2  0086               	movwf	6
  9954  0CD3  0187               	clrf	7
  9955  0CD4  1781               	bsf	1,7
  9956                           
  9957                           ;usb_device.c: 1036: if(dir != 0)
  9958  0CD5  0871               	movf	USBTransferOnePacket@dir,w
  9959  0CD6  1903               	btfsc	3,2
  9960  0CD7  2CDF               	goto	l2838
  9961                           
  9962                           ;usb_device.c: 1037: {
  9963                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  9964  0CD8  3004               	movlw	4
  9965  0CD9  00F5               	movwf	??_USBTransferOnePacket
  9966  0CDA  0877               	movf	USBTransferOnePacket@ep,w
  9967  0CDB  3E6B               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  9968  0CDC  0086               	movwf	6
  9969  0CDD  0187               	clrf	7
  9970  0CDE  2CE6               	goto	L16
  9971  0CDF                     l2838:	
  9972                           ;usb_device.c: 1040: }
  9973                           
  9974                           
  9975                           ;usb_device.c: 1041: else
  9976                           ;usb_device.c: 1042: {
  9977                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  9978  0CDF  3004               	movlw	4
  9979  0CE0  00F5               	movwf	??_USBTransferOnePacket
  9980  0CE1  0877               	movf	USBTransferOnePacket@ep,w
  9981  0CE2  3E4D               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  9982  0CE3  0086               	movwf	6
  9983  0CE4  3001               	movlw	1	; select bank2/3
  9984  0CE5  0087               	movwf	7
  9985  0CE6                     L16:	
  9986  0CE6  0875               	movf	??_USBTransferOnePacket,w
  9987  0CE7  0681               	xorwf	1,f
  9988                           
  9989                           ;usb_device.c: 1045: }
  9990                           ;usb_device.c: 1046: return (void*)handle;
  9991  0CE8  0878               	movf	USBTransferOnePacket@handle,w
  9992  0CE9  0008               	return
  9993  0CEA                     __end_of_USBTransferOnePacket:	
  9994                           
  9995                           	psect	text46
  9996  0957                     __ptext46:	
  9997 ;; *************** function _BUTTON_IsPressed *****************
  9998 ;; Defined at:
  9999 ;;		line 33 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1455/buttons.c"
 10000 ;; Parameters:    Size  Location     Type
 10001 ;;  button          1    wreg     enum E2429
 10002 ;; Auto vars:     Size  Location     Type
 10003 ;;  button          1    1[COMMON] enum E2429
 10004 ;; Return value:  Size  Location     Type
 10005 ;;                  1    wreg      unsigned char 
 10006 ;; Registers used:
 10007 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10008 ;; Tracked objects:
 10009 ;;		On entry : 0/0
 10010 ;;		On exit  : 0/0
 10011 ;;		Unchanged: 0/0
 10012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10014 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10016 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10017 ;;Total ram usage:        1 bytes
 10018 ;; Hardware stack levels used:    1
 10019 ;; Hardware stack levels required when called:    1
 10020 ;; This function calls:
 10021 ;;		Nothing
 10022 ;; This function is called by:
 10023 ;;		_APP_DeviceAudioMIDITasks
 10024 ;; This function uses a non-reentrant model
 10025 ;;
 10026                           
 10027                           
 10028                           ;psect for function _BUTTON_IsPressed
 10029  0957                     _BUTTON_IsPressed:	
 10030                           
 10031                           ;incstack = 0
 10032                           ; Regs used in _BUTTON_IsPressed: [wreg-fsr0h+status,2+status,0]
 10033                           ;BUTTON_IsPressed@button stored from wreg
 10034  0957  00F1               	movwf	BUTTON_IsPressed@button
 10035                           
 10036                           ;buttons.c: 35: switch(button)
 10037  0958  2962               	goto	l3734
 10038  0959                     l3724:	
 10039                           ;buttons.c: 36: {
 10040                           ;buttons.c: 37: case BUTTON_S1:
 10041                           
 10042                           
 10043                           ;buttons.c: 38: return ( (PORTAbits.RA5 == 0) ? 1 : 0);
 10044  0959  1003               	clrc
 10045  095A  0020               	movlb	0	; select bank0
 10046  095B  1E8C               	btfss	12,5	;volatile
 10047  095C  1403               	setc
 10048  095D  3000               	movlw	0
 10049  095E  3D09               	addwfc	9,w
 10050  095F  0008               	return
 10051  0960                     l3728:	
 10052                           ;buttons.c: 40: case BUTTON_NONE:
 10053                           
 10054                           
 10055                           ;buttons.c: 41: return 0;
 10056  0960  3000               	movlw	0
 10057  0961  0008               	return
 10058  0962                     l3734:	
 10059                           ;buttons.c: 42: }
 10060                           
 10061  0962  0871               	movf	BUTTON_IsPressed@button,w
 10062                           
 10063                           ; Switch size 1, requested type "space"
 10064                           ; Number of cases is 2, Range of values is 0 to 1
 10065                           ; switch strategies available:
 10066                           ; Name         Instructions Cycles
 10067                           ; simple_byte            7     4 (average)
 10068                           ; direct_byte           10     6 (fixed)
 10069                           ; jumptable            260     6 (fixed)
 10070                           ;	Chosen strategy is simple_byte
 10071  0963  3A00               	xorlw	0	; case 0
 10072  0964  1903               	skipnz
 10073  0965  2960               	goto	l3728
 10074  0966  3A01               	xorlw	1	; case 1
 10075  0967  1903               	skipnz
 10076  0968  2959               	goto	l3724
 10077  0969  296A               	goto	l3736
 10078  096A                     l3736:	
 10079                           
 10080                           ;buttons.c: 44: return 0;
 10081  096A  3000               	movlw	0
 10082  096B  0008               	return
 10083  096C                     __end_of_BUTTON_IsPressed:	
 10084                           
 10085                           	psect	intentry
 10086  0004                     __pintentry:	
 10087 ;; *************** function _SYS_InterruptHigh *****************
 10088 ;; Defined at:
 10089 ;;		line 94 in file "../src/system_config/low_pin_count_usb_development_kit/pic16f1455/system.c"
 10090 ;; Parameters:    Size  Location     Type
 10091 ;;		None
 10092 ;; Auto vars:     Size  Location     Type
 10093 ;;		None
 10094 ;; Return value:  Size  Location     Type
 10095 ;;		None               void
 10096 ;; Registers used:
 10097 ;;		None
 10098 ;; Tracked objects:
 10099 ;;		On entry : 0/0
 10100 ;;		On exit  : 0/0
 10101 ;;		Unchanged: 0/0
 10102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10105 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10106 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10107 ;;Total ram usage:        1 bytes
 10108 ;; Hardware stack levels used:    1
 10109 ;; This function calls:
 10110 ;;		Nothing
 10111 ;; This function is called by:
 10112 ;;		Interrupt level 1
 10113 ;; This function uses a non-reentrant model
 10114 ;;
 10115                           
 10116  0004                     _SYS_InterruptHigh:	
 10117                           
 10118                           ;incstack = 0
 10119                           ; Regs used in _SYS_InterruptHigh: []
 10120  0004  3180               	pagesel	$
 10121  0005  0020               	movlb	0	; select bank0
 10122  0006  087F               	movf	127,w
 10123  0007  00F0               	movwf	??_SYS_InterruptHigh
 10124  0008  0870               	movf	??_SYS_InterruptHigh,w
 10125  0009  00FF               	movwf	127
 10126  000A  0009               	retfie
 10127  000B                     __end_of_SYS_InterruptHigh:	
 10128  007E                     btemp	set	126	;btemp
 10129  007E                     wtemp	set	126
 10130  007E                     wtemp0	set	126
 10131  0080                     wtemp1	set	128
 10132  0082                     wtemp2	set	130
 10133  0084                     wtemp3	set	132
 10134  0086                     wtemp4	set	134
 10135  0088                     wtemp5	set	136
 10136  007F                     wtemp6	set	127
 10137  007E                     ttemp	set	126
 10138  007E                     ttemp0	set	126
 10139  0081                     ttemp1	set	129
 10140  0084                     ttemp2	set	132
 10141  0087                     ttemp3	set	135
 10142  007F                     ttemp4	set	127
 10143  007E                     ltemp	set	126
 10144  007E                     ltemp0	set	126
 10145  0082                     ltemp1	set	130
 10146  0086                     ltemp2	set	134
 10147  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    245
    Data        0
    BSS         181
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            32     27      32
    BANK1            16      0      16
    BANK2            80      0      63
    BANK3            76      0      64
    BANK4            80      0      32
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(1) Largest target is 32
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK1[1]), BDT(BANK0[32]), NULL(NULL[0]), 

    memset@p1	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    memset@p	PTR unsigned char  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    sp__memset	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> midiData(BANK3[4]), ReceivedDataBuffer(BANK1[64]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    S1130$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S1120$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S1120$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S1096$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S1096$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S1096$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S1096$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    scan_task@velocity	PTR unsigned char  size(1) Largest target is 1
		 -> APP_DeviceAudioMIDITasks@velocity(BANK0[1]), 

    scan_task@note	PTR unsigned char  size(1) Largest target is 1
		 -> APP_DeviceAudioMIDITasks@scan_pitch(BANK0[1]), 

    sp__USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBRxHandle	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBTxHandle	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[26]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 101
		 -> configDescriptor1(CODE[101]), 


Critical Paths under _main in COMMON

    _USBDeviceTasks->_USBSuspend
    _USBDeviceTasks->_USBWakeFromSuspend
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdSetCfgHandler
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _APP_DeviceAudioMIDIInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _SYSTEM_Initialize->_BUTTON_Enable
    _SYSTEM_Initialize->_LED_Enable
    _APP_DeviceAudioMIDITasks->_scan_task
    _scan_task->_store_key_level
    _store_key_level->_process_level
    _process_level->_LED_Off
    _process_level->_LED_On

Critical Paths under _SYS_InterruptHigh in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_APP_DeviceAudioMIDITasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_APP_DeviceAudioMIDIInitialize
    _APP_DeviceAudioMIDIInitialize->_USBEnableEndpoint
    _APP_DeviceAudioMIDITasks->_scan_task
    _store_key_level->_process_level

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   44485
           _APP_DeviceAudioMIDITasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       3     3      0   40661
                                             22 BANK0      3     3      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   1     1      0    5506
                                             11 COMMON     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           1     1      0    5506
                                             11 COMMON     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        5     5      0     272
                                              1 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     4     4      0   23803
                                             18 BANK0      4     4      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               1     1      0   23475
                                             17 BANK0      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             2     2      0      92
                                              6 COMMON     2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              4 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   1     1      0   17877
                                             16 BANK0      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  5     5      0    6265
                                             11 COMMON     1     1      0
                                             10 BANK0      4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               7     3      4     524
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               2     2      0      46
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  3     3      0       0
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0    6060
                                             10 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      5     0      5    5506
                                              5 BANK0      5     0      5
      _APP_DeviceAudioMIDIInitialize
      _APP_DeviceAudioMIDISOFHandler
             _APP_LEDUpdateUSBStatus
 ---------------------------------------------------------------------------------
 (3) _APP_LEDUpdateUSBStatus                               0     0      0      44
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceAudioMIDISOFHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceAudioMIDIInitialize                        2     2      0    2311
                                              3 BANK0      2     2      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    6     5      1     644
                                              8 COMMON     3     2      1
                                              0 BANK0      3     3      0
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 7     6      1     400
                                              1 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 2     2      0     114
                                              7 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  4     4      0     114
                                              3 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  3     3      0     115
                                              4 COMMON     3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  3     3      0      92
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      66
                                              2 COMMON     1     1      0
                      _BUTTON_Enable
                         _LED_Enable
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTON_Enable                                        1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceAudioMIDITasks                            10    10      0    3486
                                             17 BANK0     10    10      0
                   _BUTTON_IsPressed
               _USBTransferOnePacket
                          _scan_task
 ---------------------------------------------------------------------------------
 (2) _scan_task                                            7     6      1    1627
                                             11 COMMON     1     1      0
                                             11 BANK0      6     5      1
                            _get_adc
                           _get_data
                       _is_adc_ready
                     _is_end_of_scan
                            _run_adc
                          _scan_init
                 _set_clock_and_data
                          _set_timer
                    _store_key_level
                  _waiting_for_timer
 ---------------------------------------------------------------------------------
 (3) _waiting_for_timer                                    1     1      0      24
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _store_key_level                                      4     3      1     892
                                              7 COMMON     4     3      1
                            _get_adc (ARG)
                     _is_end_of_scan (ARG)
                      _process_level
 ---------------------------------------------------------------------------------
 (4) _process_level                                       16    14      2     737
                                              2 COMMON     5     3      2
                                              0 BANK0     11    11      0
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (4) _LED_On                                               1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LED_Off                                              1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _set_timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _set_clock_and_data                                   2     1      1     400
                                              1 COMMON     2     1      1
                           _get_data (ARG)
 ---------------------------------------------------------------------------------
 (3) _scan_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _run_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _is_end_of_scan                                       3     3      0      23
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _is_adc_ready                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get_data                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 8     4      4    1667
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _BUTTON_IsPressed                                     1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SYS_InterruptHigh                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceAudioMIDITasks
     _BUTTON_IsPressed
     _USBTransferOnePacket
     _scan_task
       _get_adc
       _get_data
       _is_adc_ready
       _is_end_of_scan
       _run_adc
       _scan_init
       _set_clock_and_data
         _get_data (ARG)
       _set_timer
       _store_key_level
         _get_adc (ARG)
         _is_end_of_scan (ARG)
         _process_level (ARG)
           _LED_Off
           _LED_On
       _waiting_for_timer
   _SYSTEM_Initialize
     _BUTTON_Enable
     _LED_Enable
   _USBDeviceInit
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceAudioMIDIInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceAudioMIDISOFHandler
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceAudioMIDIInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceAudioMIDISOFHandler
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceAudioMIDIInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceAudioMIDISOFHandler
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceAudioMIDIInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceAudioMIDISOFHandler
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
     _USBDeviceInit
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceAudioMIDIInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceAudioMIDISOFHandler
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceAudioMIDIInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceAudioMIDISOFHandler
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceAudioMIDIInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceAudioMIDISOFHandler
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On

 _SYS_InterruptHigh (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            20      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               20     1B      20       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10      0      10       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3F       9       78.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            4C      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               4C      0      40      11       84.2%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      20      13       40.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      DC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      DC      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Aug 02 23:48:04 2015

                              _USB_SD_Ptr 0320                                         pc 0002  
                             __CFG_CP$OFF 0000                                        l20 0ABC  
                                      l92 0B7F                               ?_LED_Enable 0070  
                           _USBDeviceInit 066D      USER_USB_CALLBACK_EVENT_HANDLER@event 0055  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 0057                                       l421 0A32  
                                     l414 0A19               __end_of_USBStdGetDscHandler 0EFB  
                                     l416 0A1C                                       l417 0A1F  
                                     l370 09FD                                       l362 0944  
                                     l418 0A22                                       l419 0A25  
                                     l372 0A00                                       l381 09E1  
                                     l373 0A03                                       l374 0A06  
                                     l383 09E4                                       l375 0A09  
                                     l279 05D5                                       l359 0939  
                                     l384 09E7                                       l385 09EA  
                                     l377 0A16                                       l561 0402  
                                     l386 09ED                                       l642 0E2A  
                                     l563 0406                                       l388 09FA  
                                     l572 0464                                       l629 0FBC  
                                     l549 06B0                                       l567 042B  
                                     l744 0D9F                                       l576 048B  
                                     l657 0722                                       l577 04E0  
                                     l780 01DC                                       l756 07F4  
                                     _BDT 0020                                       l694 0C51  
                                     l758 07A6                                       l767 07D2  
                                     l792 0244                                       l697 0C8D  
                                     l698 0C5A                                       l779 01DB  
                                     l699 0C5D                                       _UIE 0E92  
                                     _UIR 0E90                    _APP_LEDUpdateUSBStatus 0C00  
                              _USBSuspend 0981                      USBStdSetCfgHandler@i 005D  
                    USBStdSetCfgHandler@p 005A                               _USBRxHandle 0154  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                          _USBDeviceTasks 03F5                            _USBDeviceState 006D  
                             _USBTxHandle 00E3                             _BUTTON_Enable 0937  
                                    S4780 083E                                      S4774 081A  
                                    S4776 0826                                      S4768 0800  
                                    S4778 0832                     ??_USBCtrlTrfRxService 0073  
                USBEnableEndpoint@options 0078                              __CFG_LVP$OFF 0000  
                         __end_of_LED_Off 09FB                                      l3020 0D23  
                                    l3102 0EE8                                      l4000 012D  
                                    l3104 0EEB                                      l3120 0C69  
                                    l3016 0D11                                      l4002 0130  
                                    l3130 0C81                                      l3108 0EEE  
                                    l3300 0FC9                                      l4018 0168  
                                    l3244 0565                                      l3228 051E  
                                    l3340 0742                                      l3084 0E87  
                                    l3308 0FD3                USBConfigureEndpoint@handle 0077  
                                    l3246 0566                                      l3350 076B  
                                    l4222 0B4E                                      l4230 0B57  
                                    l4302 0193                                      l3094 0EC4  
                                    l3086 0E91                                      l3264 05B2  
                                    l3256 0599                                      l3352 0777  
                                    l4224 0B51                                      l4304 0195  
                                    l3096 0EC7                                      l3258 05A4  
                                    l3266 05B5                                      l3338 072A  
                                    l4226 0B54                                      l4218 0B48  
                                    l3282 0F91                                      l2820 0CA3  
                                    l3700 0625                                      l3524 0AF0  
                                    l2812 0A61                                      l4404 07DE  
                                    l3446 07FD                                      l3702 062C  
                                    l3710 0648                                      l3550 0D57  
                                    l4342 020F                                      l4326 01E7  
                                    l4318 01C1                                      l3278 0F8D  
                                    l3614 0697                                      l3606 068B  
                                    l3712 0653                                      l3552 0D5C  
                                    l3536 0B15                                      l2808 0A59  
                                    l4352 0233                                      l4336 01FF  
                                    l4272 0F3D                                      l4256 0F16  
                                    l4248 0F06                                      l4408 07E9  
                                    l3490 0B40                                      l3706 063D  
                                    l3810 0A9F                                      l3562 0D82  
                                    l2850 0C07                                      l4362 024A  
                                    l4354 0238                                      l4338 0206  
                                    l4266 0F29                                      l3634 06B5  
                                    l4450 09BE                                      l4610 04D4  
                                    l4602 04AC                                      l4514 0409  
                                    l3724 0959                                      l2828 0CB1  
                                    l3820 0AB1                                      l2940 0E42  
                                    l4380 07B1                                      l3636 06C3  
                                    l3734 0962                                      l2838 0CDF  
                                    l2950 0E5F                                      l3566 0D92  
                                    l2870 0C36                                      l2862 0C21  
                                    l2854 0C11                                      l4366 0268  
                                    l4390 07BE                                      l4382 07B4  
                                    l3654 06F3                                      l4534 0425  
                                    l4526 0418                                      l3736 096A  
                                    l3728 0960                                      l3488 0B3F  
                                    l3576 0A28                                      l2928 0E23  
                                    l4368 0270                                      l4288 0F65  
                                    l4392 07C1                                      l4480 02B3  
                                    l3648 06D4                                      l4608 04C5  
                                    l4560 0458                                      l3586 093C  
                                    l2778 0BAD                                      l2866 0C2B  
                                    l2858 0C1C                                      l4394 07C4  
                                    l4378 07AE                                      l4490 02E7  
                                    l3770 0A90                                      l4554 0447  
                                    l4546 043B                                      l4618 099E  
                                    l2788 09F0                                      l3692 060C  
                                    l3684 05EA                                      l2948 0E5B  
                                    l2876 0C41                                      l4492 02EA  
                                    l3772 0A92                                      l2798 0A0C  
                                    l3678 05DD                                      l3950 0052  
                                    l2958 0E78                                      l2878 0C47  
                                    l2966 09CA                                      l4486 02D8  
                                    l3598 067B                                      l4582 0484  
                                    l4574 0471                                      l3696 061D  
                                    l3688 05F9                                      l2984 0DCA  
                                    l4592 0491                                      l4568 046A  
                                    l3954 0068                                      l4770 0B60  
                                    l3980 00D2                                      l3948 004F  
                                    l4772 0B7A                                      l3992 0113  
                                    l3968 00AE                                      l3978 00CF  
                                    u2225 0D1A                                      u2600 053D  
                                    u2610 054F                                      u2620 0550  
                                    u2540 04F1                                      u3180 066B  
                                    u2550 04F2                                      u3095 069A  
                                    u2560 0504                                      u2570 0505  
                                    u4075 0294                                      u2910 0977  
                                    u2670 056F                                      u2590 053C  
                                    u1935 0B88                                      u2920 0978  
                                    u2680 057B                                      u2672 0570  
                                    u1945 0B8E                                      u2682 057C  
                                    u1955 0B96                                      u2870 094C  
                                    u2960 0B45                                      u2890 0954  
                                    u2795 071C                                      u2884 094E  
                   ??_USBCtrlTrfTxService 0071                                      _UCFG 0E91  
                                    _UEP0 0E98                                      _UEP1 0E99  
                                    _UEIE 0E97                                      _UEIR 0E93  
                                    _UCON 0E8E                                      _TMR0 0015  
                            __CFG_WRT$OFF 0000    USBStdFeatureReqHandler@current_ep_data 005E  
                                    _pDst 015A                                      _main 0997  
                                    fsr0h 0005                                      fsr1h 0007  
                                    fsr0l 0004                                      indf0 0000  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                                    ltemp 007E                                      start 000B  
                                    ttemp 007E                                      wtemp 007E  
                           __CFG_IESO$OFF 0000                process_level@current_state 0052  
                    process_level@idx_key 005A                __end_of_USBCheckStdRequest 07F5  
                  ??_USBCtrlTrfOutHandler 0077                 ??_USBStdFeatureReqHandler 005A  
                     USBDeviceInit@i_1659 0074                      process_level@on_flag 0058  
                ??_USBStdGetStatusHandler 0071                            ?_USBDeviceInit 0070  
             process_level@key_on_counter 01C4                                     ?_main 0070  
                           __CFG_WDTE$OFF 0000         __size_of_USBCtrlEPServiceComplete 0086  
                  __end_of_USBDeviceTasks 04E3                 ?_USBCtrlEPServiceComplete 0070  
                                   _UADDR 0E96                                     _USTAT 0E8F  
      __size_of_USBCtrlEPAllowStatusStage 0068                            __CFG_FCMEN$OFF 0000  
                          ?_BUTTON_Enable 0070                           __end_of_get_adc 0917  
         __end_of_USBCtrlEPAllowDataStage 0D3E                                     _sd000 03F1  
                                   _sd001 0391                                     _sd002 03C5  
                           ?_is_adc_ready 0070     __end_of_APP_DeviceAudioMIDIInitialize 0AE8  
  __size_of_APP_DeviceAudioMIDIInitialize 002B             _APP_DeviceAudioMIDIInitialize 0ABD  
                         _store_key_level 0B17               __size_of_set_clock_and_data 0012  
                                   _pitch 00E6                 __size_of_BUTTON_IsPressed 0015  
                         ??_process_level 0074                                     ltemp0 007E  
                                   ltemp1 0082                                     ltemp2 0086  
                                   ltemp3 0080                       __size_of_LED_Enable 001C  
                         __end_of_run_adc 0930                                     ttemp0 007E  
                                   ttemp1 0081                                     ttemp2 0084  
                                   ttemp3 0087                                     ttemp4 007F  
      APP_DeviceAudioMIDITasks@scan_pitch 0069                                     status 0003  
                                   wtemp0 007E                                     wtemp1 0080  
                                   wtemp2 0082                                     wtemp3 0084  
                                   wtemp4 0086                                     wtemp5 0088  
                                   wtemp6 007F              __size_of_USBStdSetCfgHandler 007F  
                   process_level@off_flag 0056                            __CFG_MCLRE$OFF 0000  
                         __initialization 000D                is_end_of_scan@scan_counter 015D  
                            __end_of_main 09AD                ??_APP_DeviceAudioMIDITasks 0061  
                          __CFG_LPBOR$OFF 0000                             scan_task@note 0060  
               __size_of_USBCtrlEPService 0070                                    ??_main 007C  
                         ?_USBDeviceTasks 0070     __end_ofprocess_level@key_on_threshold 032B  
           process_level@key_on_threshold 032A                               ?_USBSuspend 0070  
                               ??_LED_Off 0071                       __CFG_USBLSCLK$48MHz 0000  
                          ??_is_adc_ready 0071                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _ADCON2 009F  
                                  _ACTCON 039B                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _ANSELA 018C  
                  SYSTEM_Initialize@state 0072                                    _LED_On 09FB  
                     set_clock_and_data@c 0072                       set_clock_and_data@d 0071  
                                  _OSCCON 0099                            __CFG_PWRTE$OFF 0000  
                       _shortPacketStatus 00E7                          __end_of_get_data 091C  
                         USBDeviceTasks@i 0068               USBStdFeatureReqHandler@pUEP 005C  
                USBTransferOnePacket@data 0072                USBCtrlTrfInHandler@lastDTS 0076  
                         ??_USBDeviceInit 0071                            __CFG_STVREN$ON 0000  
                       _USBEnableEndpoint 0A50           __size_of_USBStdGetStatusHandler 004D  
                                  _memset 09C5                        ?_USBEnableEndpoint 0078  
                               ??_get_adc 0071                   __end_of_store_key_level 0B47  
           __size_of_USBTransferOnePacket 0050                           ??_BUTTON_Enable 0071  
                     ??_USBEnableEndpoint 0079                            process_level@L 0328  
                               ??_run_adc 0071                               _CtrlTrfData 0048  
                 __size_of_is_end_of_scan 0015                      _controlTransferState 00E4  
                       _SYSTEM_Initialize 0A97                   __end_of__initialization 0032  
                      ?_SYSTEM_Initialize 0070                  __size_of_USBStallHandler 0024  
                     __size_of_USBSuspend 0016                            __pcstackCOMMON 0070  
               __end_of_USBEnableEndpoint 0A73              _APP_DeviceAudioMIDITasks$526 0065  
            _APP_DeviceAudioMIDITasks$527 0067              _APP_DeviceAudioMIDITasks$485 0063  
                           __end_of_sd000 03F5                             __end_of_sd001 03C5  
                           __end_of_sd002 03DF                       ??_SYSTEM_Initialize 0072  
                               LED_On@led 0071          __size_of_USBCtrlEPAllowDataStage 0054  
                              _adc_levels 0220                    process_level@old_level 0072  
                  process_level@new_level 0073                              ??_LED_Enable 0071  
           __size_of_USBConfigureEndpoint 003F                    process_level@old_state 0050  
             __end_of_USBCtrlTrfInHandler 0DA5                   ?_APP_LEDUpdateUSBStatus 0070  
                  store_key_level@idx_key 00E8                    __end_ofprocess_level@L 0329  
                          _OPTION_REGbits 0095                            scan_task@state 015E  
              store_key_level@end_of_scan 0077                  ??_USBCtrlTrfSetupHandler 0061  
               __end_of_SYSTEM_Initialize 0ABD                          _BUTTON_IsPressed 0957  
                  _USBStdGetStatusHandler 0C4D                                __pbssBANK0 006B  
                              __pbssBANK1 00E0                                __pbssBANK2 0120  
                              __pbssBANK3 01A4                                __pbssBANK4 0220  
                                 ?_LED_On 0070                        __end_of_LED_Enable 0A33  
                    store_key_level@level 007A               __size_of_USBWakeFromSuspend 0018  
                             _pBDTEntryIn 006B          __end_of_USBCtrlEPServiceComplete 1000  
                      __size_of_scan_init 001D                                __pmaintext 0997  
                      __size_of_scan_task 00AD                      USBCtrlTrfRxService@i 0075  
                    __end_of_is_adc_ready 0929                             LED_Enable@led 0071  
                         __CFG_PLLMULT$3x 0000            __end_of_APP_LEDUpdateUSBStatus 0C4D  
                              __pintentry 0004                                   ?_memset 0071  
                              _device_dsc 03DF                          _USBCtrlEPService 0285  
                              _ep_data_in 0147                        __size_of_set_timer 000B  
             __end_of_USBCtrlTrfRxService 079E                        _USBCheckStdRequest 079E  
                        ?_store_key_level 0077                         _configDescriptor1 032C  
                       scan_task@velocity 005B                                   _LED_Off 09DF  
             __end_of_USBCtrlTrfTxService 0E7C                       _USBStdSetCfgHandler 0EFB  
                               ?_get_data 0070                       ?_USBCheckStdRequest 0070  
            __size_of_USBStdGetDscHandler 007F                                   _UIEbits 0E92  
                                 _UIRbits 0E90                           __size_of_LED_On 001C  
                       is_end_of_scan@res 0073            APP_LEDUpdateUSBStatus@ledCount 00E0  
                    ?_USBStdSetCfgHandler 0070                __size_of_USBEnableEndpoint 0023  
                    ??_USBCheckStdRequest 0060             __size_of_USBCtrlTrfOutHandler 002F  
                        ??_USBDeviceTasks 0066                         ??_USBStallHandler 0071  
                         __size_of_memset 001A                 __end_of_configDescriptor1 0391  
                                 __ptext1 03F5                                   __ptext2 09AD  
                                 __ptext3 0981                                   __ptext4 0A73  
                                 __ptext5 066D                                   __ptext6 0285  
                                 __ptext7 0BBF                                   __ptext8 0F7A  
                                 __ptext9 0CEA                                   _inPipes 00E9  
                                 _get_adc 0914               _USBDeferOUTDataStagePackets 0153  
                            ??_USBSuspend 007B                             _scan_task$901 005C  
                           _scan_task$905 005E                __end_of_set_clock_and_data 0957  
                       __end_of_scan_init 0A50                         __end_of_scan_task 066D  
                                 _run_adc 0929                        __end_of_USB_CD_Ptr 0328  
                              ??_get_data 0071                __size_of_SYSTEM_Initialize 0026  
         __size_of_USBCtrlTrfSetupHandler 0041                                   clrloop0 091D  
                          _is_end_of_scan 096C                      end_of_initialization 0032  
                      __end_of_USB_SD_Ptr 0326                       _pBDTEntryEP0OutNext 007C  
                                 memset@c 0071                                   memset@n 0073  
                                 memset@p 0076                     __end_of_process_level 05C0  
                ?_USBStdFeatureReqHandler 0070                         __end_of_set_timer 0300  
                   ??_USBStdSetCfgHandler 007B                                _note_event 014B  
                      __end_of_USBSuspend 0997                   _USBCtrlEPAllowDataStage 0CEA  
                            __pstringtext 0300                  _USBCtrlEPServiceComplete 0F7A  
                              _wait_timer 015C                _USBStatusStageEnabledFlag1 0155  
              _USBStatusStageEnabledFlag2 0156                        USBEnableEndpoint@p 0050  
                               _PORTAbits 000C            ?_APP_DeviceAudioMIDISOFHandler 0070  
                        __CFG_FOSC$INTOSC 0000                                 _TRISAbits 008C  
                               _TRISCbits 008E                        _ReceivedDataBuffer 00A0  
                  __end_of_is_end_of_scan 0981                        _BothEP0OutUOWNsSet 014F  
               USBStdSetCfgHandler@i_1990 005C                 USBConfigureEndpoint@EPNum 0076  
       __size_of_APP_DeviceAudioMIDITasks 014A                ?_USBCtrlEPAllowStatusStage 0070  
               ?_APP_DeviceAudioMIDITasks 0070       USER_USB_CALLBACK_EVENT_HANDLER@size 0058  
                               _USTATcopy 006F              __end_of_USBTransferOnePacket 0CEA  
                          __end_of_LED_On 0A17                     __size_of_is_adc_ready 0007  
                 process_level@midi_shift 032B               process_level@filtered_state 0059  
                      __CFG_PLLEN$ENABLED 0000                    _USBCtrlTrfSetupHandler 0BBF  
                 process_level@key_states 0120                  __end_of_BUTTON_IsPressed 096C  
                   __end_of_USBDeviceInit 070C                                LED_Off@led 0071  
                          __end_of_memset 09DF                         _USBBusIsSuspended 0151  
                     start_initialization 000D                   ?_USBStdGetStatusHandler 0070  
                   __end_of_BUTTON_Enable 0945             USBCtrlTrfRxService@byteToRead 0076  
                         ?_is_end_of_scan 0070                            _is_initialized 0159  
                            _is_adc_ready 0922              __end_of_USBConfigureEndpoint 0BBF  
         __end_of_USBStdFeatureReqHandler 0285                                  ??_LED_On 0071  
       __end_of_USBCtrlEPAllowStatusStage 0E0D                  __end_of_USBCtrlEPService 02F5  
               ??_USBCtrlEPAllowDataStage 0074                            USBDeviceInit@i 0075  
                          USBDeviceInit@p 0072                    _pBDTEntryEP0OutCurrent 006E  
                 USBTransferOnePacket@dir 0071                   USBTransferOnePacket@len 0074  
                     _USBStdGetDscHandler 0E7C                                  ??_memset 0075  
  __end_ofprocess_level@key_off_threshold 032A            process_level@key_off_threshold 0329  
                  BUTTON_IsPressed@button 0071                    _USBActiveConfiguration 00EE  
          __end_of_USBStdGetStatusHandler 0C9A                 process_level@idx_midi_map 0300  
                   _waiting_for_timer$845 0071                                  ?_LED_Off 0070  
                             __pbssCOMMON 007C                                 ___latbits 0002  
                           __pcstackBANK0 0050              __size_of_USBCtrlTrfInHandler 0067  
                    ?_USBStdGetDscHandler 0070                         __size_of_get_data 0005  
              __end_of_USBWakeFromSuspend 09C5                           _USBStallHandler 0A73  
                            _pBDTEntryOut 014D            ?_APP_DeviceAudioMIDIInitialize 0070  
                               __pswtext1 0800                                 __pswtext2 081A  
                               __pswtext3 0826                                 __pswtext4 0832  
                               __pswtext5 083E                                  ?_get_adc 0070  
                    _USBTransferOnePacket 0C9A                                 _msCounter 00E5  
            process_level@key_off_counter 01A4              __end_of_USBCtrlTrfOutHandler 0B17  
                   ??_USBStdGetDscHandler 0071                               _ep_data_out 0149  
                                ?_run_adc 0070              __size_of_USBCtrlTrfRxService 0092  
           USBConfigureEndpoint@direction 0071                  __size_of_store_key_level 0030  
                               _scan_init 0A33                                 _scan_task 05C0  
            __size_of_USBCtrlTrfTxService 006F                                  _LATCbits 010E  
              ??_USBCtrlEPServiceComplete 0076                                 clear_ram0 091C  
                      _set_clock_and_data 0945                                  _PIE1bits 0091  
                                _PIE2bits 0092                         _waiting_for_timer 07F5  
                                _PIR2bits 0012                 USBCtrlEPService@setup_cnt 0065  
                      ?_waiting_for_timer 0070                                 _set_timer 02F5  
                                _UEP0bits 0E98                _USBDeferINDataStagePackets 0152  
             __size_of_USBCheckStdRequest 0057                       ?_set_clock_and_data 0071  
                                _UCONbits 0E8E                      _USBConfigureEndpoint 0B80  
         __end_ofprocess_level@midi_shift 032C          __size_of_USBStdFeatureReqHandler 0106  
        __end_of_APP_DeviceAudioMIDITasks 017F                       ??_waiting_for_timer 0071  
                              _ADCON0bits 009D                                _ADCON1bits 009E  
                              _ADCON2bits 009F                     ?_USBTransferOnePacket 0071  
                       _SYS_InterruptHigh 0004                                  _WPUAbits 020C  
                            _RemoteWakeup 0150                          __size_of_LED_Off 001C  
                      ?_SYS_InterruptHigh 0070                   __end_of_USBStallHandler 0A97  
                       _process_level$882 0057                         _process_level$883 0054  
                    ??_set_clock_and_data 0072               ??_USBCtrlEPAllowStatusStage 0071  
             __end_of_USBStdSetCfgHandler 0F7A                                ?_scan_init 0070  
                              ?_scan_task 005B                       ??_SYS_InterruptHigh 0070  
               __end_of_waiting_for_timer 0800           ??_APP_DeviceAudioMIDISOFHandler 0071  
                      __end_of_device_dsc 03F1                  ??_APP_LEDUpdateUSBStatus 0072  
                 ?_USBCtrlTrfSetupHandler 0070                   USBStdGetStatusHandler@p 0072  
                  USBTransferOnePacket@ep 0077                                ?_set_timer 0070  
                                _SetupPkt 0040                     ?_USBConfigureEndpoint 0071  
                       ?_BUTTON_IsPressed 0070                 __end_of_SYS_InterruptHigh 000B  
                      ??_BUTTON_IsPressed 0071                          ??_is_end_of_scan 0071  
                              _ANSELAbits 018C                                _ANSELCbits 018E  
                        __size_of_get_adc 0003                    __size_of_process_level 00DD  
                 __size_of_USBDeviceTasks 00EE                                  __ptext10 079E  
                                __ptext11 0EFB                                  __ptext20 0A50  
                                __ptext12 09C5                                  __ptext21 0B80  
                                __ptext13 0C4D                                  __ptext30 0035  
                                __ptext22 0AE8                                  __ptext14 0E7C  
                                __ptext31 05C0                                  __ptext23 070C  
                                __ptext15 017F                                  __ptext40 0929  
                                __ptext32 07F5                                  __ptext24 0DA5  
                                __ptext16 0B47                                  __ptext41 096C  
                                __ptext33 0B17                                  __ptext25 0D3E  
                                __ptext17 0C00                                  __ptext42 0922  
                                __ptext34 04E3                                  __ptext26 0E0D  
                                __ptext18 0930                                  __ptext43 0917  
                                __ptext35 09FB                                  __ptext27 0A97  
                                __ptext19 0ABD                                  __ptext44 0914  
                                __ptext36 09DF                                  __ptext28 0A17  
                                __ptext45 0C9A                                  __ptext37 02F5  
                                __ptext29 0937                                  __ptext46 0957  
                                __ptext38 0945                                  __ptext39 0A33  
                                _get_data 0917                          __size_of_run_adc 0007  
                                _midiData 01A0            __end_of_USBCtrlTrfSetupHandler 0C00  
                           __size_of_main 0016                         ?_USBCtrlEPService 0070  
                      ??_USBCtrlEPService 0062                         ??_store_key_level 0078  
                     _USBCtrlTrfInHandler 0D3E                       BUTTON_Enable@button 0071  
                                _outPipes 0140                      _USBCtrlTrfOutHandler 0AE8  
               _USBCtrlEPAllowStatusStage 0DA5                                _LED_Enable 0A17  
                  ??_USBTransferOnePacket 0075                 _USBDeferStatusStagePacket 00E2  
                              _INTCONbits 000B                      ?_USBCtrlTrfInHandler 0070  
                _APP_DeviceAudioMIDITasks 0035             USBCtrlTrfTxService@byteToSend 0073  
                                memset@p1 0077                          ?_USBStallHandler 0070  
                USBStdFeatureReqHandler@p 005F                                  intlevel1 0000  
                             ??_scan_init 0071                               ??_scan_task 007B  
                  __size_of_USBDeviceInit 009F   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0B80  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 0039          ?_USER_USB_CALLBACK_EVENT_HANDLER 0055  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 007B           _USER_USB_CALLBACK_EVENT_HANDLER 0B47  
              __size_of_waiting_for_timer 000B         __end_ofprocess_level@idx_midi_map 0320  
                       __CFG_CLKOUTEN$OFF 0000                             _process_level 04E3  
                             _sentNoteOff 015B           __size_of_APP_LEDUpdateUSBStatus 004D  
   __end_of_APP_DeviceAudioMIDISOFHandler 0937    __size_of_APP_DeviceAudioMIDISOFHandler 0007  
           _APP_DeviceAudioMIDISOFHandler 0930                               ??_set_timer 0071  
                  ??_USBConfigureEndpoint 0072                     ?_USBCtrlTrfOutHandler 0070  
                  __size_of_BUTTON_Enable 000E                      __CFG_CPUDIV$NOCLKDIV 0000  
                     _USBCtrlTrfRxService 070C                        _USBWakeFromSuspend 09AD  
                 _USBStdFeatureReqHandler 017F                       _USBCtrlTrfTxService 0E0D  
              __size_of_SYS_InterruptHigh 0007           ??_APP_DeviceAudioMIDIInitialize 0053  
                     ?_USBWakeFromSuspend 0070                     ??_USBCtrlTrfInHandler 0074  
                   _USBAlternateInterface 00EF                       USBEnableEndpoint@ep 0052  
                         _endpoint_number 0158                      ?_USBCtrlTrfRxService 0070  
                ?_USBCtrlEPAllowDataStage 0070                      ?_USBCtrlTrfTxService 0070  
                          ?_process_level 0072              _USBStatusStageTimeoutCounter 0157  
                    ??_USBWakeFromSuspend 007B                USBTransferOnePacket@handle 0078  
                              _USB_CD_Ptr 0326          APP_DeviceAudioMIDITasks@velocity 006A  
