

Microchip Technology PIC PRO Macro Assembler V1.20 build 52243 
                                                                                               Sun May 22 01:42:16 2016

Microchip Technology Omniscient Code Generator (PRO mode) build 52243
     1                           	processor	16F1459
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	text10,local,class=CODE,merge=1,delta=2
    16                           	psect	text11,local,class=CODE,merge=1,delta=2
    17                           	psect	text26,local,class=CODE,merge=1,delta=2
    18                           	psect	swtext2,local,class=CONST,delta=2
    19                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	swtext3,local,class=CONST,delta=2
    22                           	psect	swtext4,local,class=CONST,delta=2
    23                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    24                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	swtext5,local,class=CONST,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	pa_nodes,global,class=CODE,delta=2
    34                           	dabs	1,0x20,32,_BDT
    35                           	dabs	1,0x48,8,_CtrlTrfData
    36                           	dabs	1,0x40,8,_SetupPkt
    37                           	dabs	1,0xA0,64,_ReceivedDataBuffer
    38                           	dabs	1,0x1A0,4,_midiData
    39                           	dabs	1,0x7E,2
    40  0000                     	;# 
    41  0001                     	;# 
    42  0002                     	;# 
    43  0003                     	;# 
    44  0004                     	;# 
    45  0005                     	;# 
    46  0006                     	;# 
    47  0007                     	;# 
    48  0008                     	;# 
    49  0009                     	;# 
    50  000A                     	;# 
    51  000B                     	;# 
    52  000C                     	;# 
    53  000D                     	;# 
    54  000E                     	;# 
    55  0011                     	;# 
    56  0012                     	;# 
    57  0015                     	;# 
    58  0016                     	;# 
    59  0016                     	;# 
    60  0017                     	;# 
    61  0018                     	;# 
    62  0019                     	;# 
    63  001A                     	;# 
    64  001B                     	;# 
    65  001C                     	;# 
    66  008C                     	;# 
    67  008D                     	;# 
    68  008E                     	;# 
    69  0091                     	;# 
    70  0092                     	;# 
    71  0095                     	;# 
    72  0096                     	;# 
    73  0097                     	;# 
    74  0098                     	;# 
    75  0099                     	;# 
    76  009A                     	;# 
    77  009B                     	;# 
    78  009B                     	;# 
    79  009C                     	;# 
    80  009D                     	;# 
    81  009E                     	;# 
    82  009F                     	;# 
    83  010C                     	;# 
    84  010D                     	;# 
    85  010E                     	;# 
    86  0111                     	;# 
    87  0112                     	;# 
    88  0113                     	;# 
    89  0114                     	;# 
    90  0115                     	;# 
    91  0116                     	;# 
    92  0117                     	;# 
    93  0118                     	;# 
    94  0119                     	;# 
    95  011D                     	;# 
    96  018C                     	;# 
    97  018D                     	;# 
    98  018E                     	;# 
    99  0191                     	;# 
   100  0191                     	;# 
   101  0192                     	;# 
   102  0193                     	;# 
   103  0193                     	;# 
   104  0194                     	;# 
   105  0195                     	;# 
   106  0196                     	;# 
   107  0197                     	;# 
   108  0199                     	;# 
   109  019A                     	;# 
   110  019B                     	;# 
   111  019C                     	;# 
   112  019D                     	;# 
   113  019E                     	;# 
   114  019F                     	;# 
   115  020C                     	;# 
   116  020D                     	;# 
   117  0211                     	;# 
   118  0211                     	;# 
   119  0212                     	;# 
   120  0212                     	;# 
   121  0213                     	;# 
   122  0213                     	;# 
   123  0214                     	;# 
   124  0214                     	;# 
   125  0215                     	;# 
   126  0215                     	;# 
   127  0215                     	;# 
   128  0216                     	;# 
   129  0216                     	;# 
   130  0217                     	;# 
   131  0217                     	;# 
   132  0391                     	;# 
   133  0392                     	;# 
   134  0393                     	;# 
   135  0394                     	;# 
   136  0395                     	;# 
   137  0396                     	;# 
   138  039A                     	;# 
   139  039B                     	;# 
   140  0611                     	;# 
   141  0612                     	;# 
   142  0613                     	;# 
   143  0613                     	;# 
   144  0614                     	;# 
   145  0615                     	;# 
   146  0616                     	;# 
   147  0616                     	;# 
   148  0691                     	;# 
   149  0692                     	;# 
   150  0693                     	;# 
   151  0694                     	;# 
   152  0695                     	;# 
   153  0E8E                     	;# 
   154  0E8F                     	;# 
   155  0E90                     	;# 
   156  0E91                     	;# 
   157  0E92                     	;# 
   158  0E93                     	;# 
   159  0E94                     	;# 
   160  0E94                     	;# 
   161  0E95                     	;# 
   162  0E96                     	;# 
   163  0E97                     	;# 
   164  0E98                     	;# 
   165  0E99                     	;# 
   166  0E9A                     	;# 
   167  0E9B                     	;# 
   168  0E9C                     	;# 
   169  0E9D                     	;# 
   170  0E9E                     	;# 
   171  0E9F                     	;# 
   172  0FE4                     	;# 
   173  0FE5                     	;# 
   174  0FE6                     	;# 
   175  0FE7                     	;# 
   176  0FE8                     	;# 
   177  0FE9                     	;# 
   178  0FEA                     	;# 
   179  0FEB                     	;# 
   180  0FED                     	;# 
   181  0FEE                     	;# 
   182  0FEF                     	;# 
   183  0000                     	;# 
   184  0001                     	;# 
   185  0002                     	;# 
   186  0003                     	;# 
   187  0004                     	;# 
   188  0005                     	;# 
   189  0006                     	;# 
   190  0007                     	;# 
   191  0008                     	;# 
   192  0009                     	;# 
   193  000A                     	;# 
   194  000B                     	;# 
   195  000C                     	;# 
   196  000D                     	;# 
   197  000E                     	;# 
   198  0011                     	;# 
   199  0012                     	;# 
   200  0015                     	;# 
   201  0016                     	;# 
   202  0016                     	;# 
   203  0017                     	;# 
   204  0018                     	;# 
   205  0019                     	;# 
   206  001A                     	;# 
   207  001B                     	;# 
   208  001C                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  0091                     	;# 
   213  0092                     	;# 
   214  0095                     	;# 
   215  0096                     	;# 
   216  0097                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009A                     	;# 
   220  009B                     	;# 
   221  009B                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  009F                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  0111                     	;# 
   230  0112                     	;# 
   231  0113                     	;# 
   232  0114                     	;# 
   233  0115                     	;# 
   234  0116                     	;# 
   235  0117                     	;# 
   236  0118                     	;# 
   237  0119                     	;# 
   238  011D                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  018E                     	;# 
   242  0191                     	;# 
   243  0191                     	;# 
   244  0192                     	;# 
   245  0193                     	;# 
   246  0193                     	;# 
   247  0194                     	;# 
   248  0195                     	;# 
   249  0196                     	;# 
   250  0197                     	;# 
   251  0199                     	;# 
   252  019A                     	;# 
   253  019B                     	;# 
   254  019C                     	;# 
   255  019D                     	;# 
   256  019E                     	;# 
   257  019F                     	;# 
   258  020C                     	;# 
   259  020D                     	;# 
   260  0211                     	;# 
   261  0211                     	;# 
   262  0212                     	;# 
   263  0212                     	;# 
   264  0213                     	;# 
   265  0213                     	;# 
   266  0214                     	;# 
   267  0214                     	;# 
   268  0215                     	;# 
   269  0215                     	;# 
   270  0215                     	;# 
   271  0216                     	;# 
   272  0216                     	;# 
   273  0217                     	;# 
   274  0217                     	;# 
   275  0391                     	;# 
   276  0392                     	;# 
   277  0393                     	;# 
   278  0394                     	;# 
   279  0395                     	;# 
   280  0396                     	;# 
   281  039A                     	;# 
   282  039B                     	;# 
   283  0611                     	;# 
   284  0612                     	;# 
   285  0613                     	;# 
   286  0613                     	;# 
   287  0614                     	;# 
   288  0615                     	;# 
   289  0616                     	;# 
   290  0616                     	;# 
   291  0691                     	;# 
   292  0692                     	;# 
   293  0693                     	;# 
   294  0694                     	;# 
   295  0695                     	;# 
   296  0E8E                     	;# 
   297  0E8F                     	;# 
   298  0E90                     	;# 
   299  0E91                     	;# 
   300  0E92                     	;# 
   301  0E93                     	;# 
   302  0E94                     	;# 
   303  0E94                     	;# 
   304  0E95                     	;# 
   305  0E96                     	;# 
   306  0E97                     	;# 
   307  0E98                     	;# 
   308  0E99                     	;# 
   309  0E9A                     	;# 
   310  0E9B                     	;# 
   311  0E9C                     	;# 
   312  0E9D                     	;# 
   313  0E9E                     	;# 
   314  0E9F                     	;# 
   315  0FE4                     	;# 
   316  0FE5                     	;# 
   317  0FE6                     	;# 
   318  0FE7                     	;# 
   319  0FE8                     	;# 
   320  0FE9                     	;# 
   321  0FEA                     	;# 
   322  0FEB                     	;# 
   323  0FED                     	;# 
   324  0FEE                     	;# 
   325  0FEF                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0015                     	;# 
   344  0016                     	;# 
   345  0016                     	;# 
   346  0017                     	;# 
   347  0018                     	;# 
   348  0019                     	;# 
   349  001A                     	;# 
   350  001B                     	;# 
   351  001C                     	;# 
   352  008C                     	;# 
   353  008D                     	;# 
   354  008E                     	;# 
   355  0091                     	;# 
   356  0092                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  0111                     	;# 
   373  0112                     	;# 
   374  0113                     	;# 
   375  0114                     	;# 
   376  0115                     	;# 
   377  0116                     	;# 
   378  0117                     	;# 
   379  0118                     	;# 
   380  0119                     	;# 
   381  011D                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384  018E                     	;# 
   385  0191                     	;# 
   386  0191                     	;# 
   387  0192                     	;# 
   388  0193                     	;# 
   389  0193                     	;# 
   390  0194                     	;# 
   391  0195                     	;# 
   392  0196                     	;# 
   393  0197                     	;# 
   394  0199                     	;# 
   395  019A                     	;# 
   396  019B                     	;# 
   397  019C                     	;# 
   398  019D                     	;# 
   399  019E                     	;# 
   400  019F                     	;# 
   401  020C                     	;# 
   402  020D                     	;# 
   403  0211                     	;# 
   404  0211                     	;# 
   405  0212                     	;# 
   406  0212                     	;# 
   407  0213                     	;# 
   408  0213                     	;# 
   409  0214                     	;# 
   410  0214                     	;# 
   411  0215                     	;# 
   412  0215                     	;# 
   413  0215                     	;# 
   414  0216                     	;# 
   415  0216                     	;# 
   416  0217                     	;# 
   417  0217                     	;# 
   418  0391                     	;# 
   419  0392                     	;# 
   420  0393                     	;# 
   421  0394                     	;# 
   422  0395                     	;# 
   423  0396                     	;# 
   424  039A                     	;# 
   425  039B                     	;# 
   426  0611                     	;# 
   427  0612                     	;# 
   428  0613                     	;# 
   429  0613                     	;# 
   430  0614                     	;# 
   431  0615                     	;# 
   432  0616                     	;# 
   433  0616                     	;# 
   434  0691                     	;# 
   435  0692                     	;# 
   436  0693                     	;# 
   437  0694                     	;# 
   438  0695                     	;# 
   439  0E8E                     	;# 
   440  0E8F                     	;# 
   441  0E90                     	;# 
   442  0E91                     	;# 
   443  0E92                     	;# 
   444  0E93                     	;# 
   445  0E94                     	;# 
   446  0E94                     	;# 
   447  0E95                     	;# 
   448  0E96                     	;# 
   449  0E97                     	;# 
   450  0E98                     	;# 
   451  0E99                     	;# 
   452  0E9A                     	;# 
   453  0E9B                     	;# 
   454  0E9C                     	;# 
   455  0E9D                     	;# 
   456  0E9E                     	;# 
   457  0E9F                     	;# 
   458  0FE4                     	;# 
   459  0FE5                     	;# 
   460  0FE6                     	;# 
   461  0FE7                     	;# 
   462  0FE8                     	;# 
   463  0FE9                     	;# 
   464  0FEA                     	;# 
   465  0FEB                     	;# 
   466  0FED                     	;# 
   467  0FEE                     	;# 
   468  0FEF                     	;# 
   469  0000                     	;# 
   470  0001                     	;# 
   471  0002                     	;# 
   472  0003                     	;# 
   473  0004                     	;# 
   474  0005                     	;# 
   475  0006                     	;# 
   476  0007                     	;# 
   477  0008                     	;# 
   478  0009                     	;# 
   479  000A                     	;# 
   480  000B                     	;# 
   481  000C                     	;# 
   482  000D                     	;# 
   483  000E                     	;# 
   484  0011                     	;# 
   485  0012                     	;# 
   486  0015                     	;# 
   487  0016                     	;# 
   488  0016                     	;# 
   489  0017                     	;# 
   490  0018                     	;# 
   491  0019                     	;# 
   492  001A                     	;# 
   493  001B                     	;# 
   494  001C                     	;# 
   495  008C                     	;# 
   496  008D                     	;# 
   497  008E                     	;# 
   498  0091                     	;# 
   499  0092                     	;# 
   500  0095                     	;# 
   501  0096                     	;# 
   502  0097                     	;# 
   503  0098                     	;# 
   504  0099                     	;# 
   505  009A                     	;# 
   506  009B                     	;# 
   507  009B                     	;# 
   508  009C                     	;# 
   509  009D                     	;# 
   510  009E                     	;# 
   511  009F                     	;# 
   512  010C                     	;# 
   513  010D                     	;# 
   514  010E                     	;# 
   515  0111                     	;# 
   516  0112                     	;# 
   517  0113                     	;# 
   518  0114                     	;# 
   519  0115                     	;# 
   520  0116                     	;# 
   521  0117                     	;# 
   522  0118                     	;# 
   523  0119                     	;# 
   524  011D                     	;# 
   525  018C                     	;# 
   526  018D                     	;# 
   527  018E                     	;# 
   528  0191                     	;# 
   529  0191                     	;# 
   530  0192                     	;# 
   531  0193                     	;# 
   532  0193                     	;# 
   533  0194                     	;# 
   534  0195                     	;# 
   535  0196                     	;# 
   536  0197                     	;# 
   537  0199                     	;# 
   538  019A                     	;# 
   539  019B                     	;# 
   540  019C                     	;# 
   541  019D                     	;# 
   542  019E                     	;# 
   543  019F                     	;# 
   544  020C                     	;# 
   545  020D                     	;# 
   546  0211                     	;# 
   547  0211                     	;# 
   548  0212                     	;# 
   549  0212                     	;# 
   550  0213                     	;# 
   551  0213                     	;# 
   552  0214                     	;# 
   553  0214                     	;# 
   554  0215                     	;# 
   555  0215                     	;# 
   556  0215                     	;# 
   557  0216                     	;# 
   558  0216                     	;# 
   559  0217                     	;# 
   560  0217                     	;# 
   561  0391                     	;# 
   562  0392                     	;# 
   563  0393                     	;# 
   564  0394                     	;# 
   565  0395                     	;# 
   566  0396                     	;# 
   567  039A                     	;# 
   568  039B                     	;# 
   569  0611                     	;# 
   570  0612                     	;# 
   571  0613                     	;# 
   572  0613                     	;# 
   573  0614                     	;# 
   574  0615                     	;# 
   575  0616                     	;# 
   576  0616                     	;# 
   577  0691                     	;# 
   578  0692                     	;# 
   579  0693                     	;# 
   580  0694                     	;# 
   581  0695                     	;# 
   582  0E8E                     	;# 
   583  0E8F                     	;# 
   584  0E90                     	;# 
   585  0E91                     	;# 
   586  0E92                     	;# 
   587  0E93                     	;# 
   588  0E94                     	;# 
   589  0E94                     	;# 
   590  0E95                     	;# 
   591  0E96                     	;# 
   592  0E97                     	;# 
   593  0E98                     	;# 
   594  0E99                     	;# 
   595  0E9A                     	;# 
   596  0E9B                     	;# 
   597  0E9C                     	;# 
   598  0E9D                     	;# 
   599  0E9E                     	;# 
   600  0E9F                     	;# 
   601  0FE4                     	;# 
   602  0FE5                     	;# 
   603  0FE6                     	;# 
   604  0FE7                     	;# 
   605  0FE8                     	;# 
   606  0FE9                     	;# 
   607  0FEA                     	;# 
   608  0FEB                     	;# 
   609  0FED                     	;# 
   610  0FEE                     	;# 
   611  0FEF                     	;# 
   612  0000                     	;# 
   613  0001                     	;# 
   614  0002                     	;# 
   615  0003                     	;# 
   616  0004                     	;# 
   617  0005                     	;# 
   618  0006                     	;# 
   619  0007                     	;# 
   620  0008                     	;# 
   621  0009                     	;# 
   622  000A                     	;# 
   623  000B                     	;# 
   624  000C                     	;# 
   625  000D                     	;# 
   626  000E                     	;# 
   627  0011                     	;# 
   628  0012                     	;# 
   629  0015                     	;# 
   630  0016                     	;# 
   631  0016                     	;# 
   632  0017                     	;# 
   633  0018                     	;# 
   634  0019                     	;# 
   635  001A                     	;# 
   636  001B                     	;# 
   637  001C                     	;# 
   638  008C                     	;# 
   639  008D                     	;# 
   640  008E                     	;# 
   641  0091                     	;# 
   642  0092                     	;# 
   643  0095                     	;# 
   644  0096                     	;# 
   645  0097                     	;# 
   646  0098                     	;# 
   647  0099                     	;# 
   648  009A                     	;# 
   649  009B                     	;# 
   650  009B                     	;# 
   651  009C                     	;# 
   652  009D                     	;# 
   653  009E                     	;# 
   654  009F                     	;# 
   655  010C                     	;# 
   656  010D                     	;# 
   657  010E                     	;# 
   658  0111                     	;# 
   659  0112                     	;# 
   660  0113                     	;# 
   661  0114                     	;# 
   662  0115                     	;# 
   663  0116                     	;# 
   664  0117                     	;# 
   665  0118                     	;# 
   666  0119                     	;# 
   667  011D                     	;# 
   668  018C                     	;# 
   669  018D                     	;# 
   670  018E                     	;# 
   671  0191                     	;# 
   672  0191                     	;# 
   673  0192                     	;# 
   674  0193                     	;# 
   675  0193                     	;# 
   676  0194                     	;# 
   677  0195                     	;# 
   678  0196                     	;# 
   679  0197                     	;# 
   680  0199                     	;# 
   681  019A                     	;# 
   682  019B                     	;# 
   683  019C                     	;# 
   684  019D                     	;# 
   685  019E                     	;# 
   686  019F                     	;# 
   687  020C                     	;# 
   688  020D                     	;# 
   689  0211                     	;# 
   690  0211                     	;# 
   691  0212                     	;# 
   692  0212                     	;# 
   693  0213                     	;# 
   694  0213                     	;# 
   695  0214                     	;# 
   696  0214                     	;# 
   697  0215                     	;# 
   698  0215                     	;# 
   699  0215                     	;# 
   700  0216                     	;# 
   701  0216                     	;# 
   702  0217                     	;# 
   703  0217                     	;# 
   704  0391                     	;# 
   705  0392                     	;# 
   706  0393                     	;# 
   707  0394                     	;# 
   708  0395                     	;# 
   709  0396                     	;# 
   710  039A                     	;# 
   711  039B                     	;# 
   712  0611                     	;# 
   713  0612                     	;# 
   714  0613                     	;# 
   715  0613                     	;# 
   716  0614                     	;# 
   717  0615                     	;# 
   718  0616                     	;# 
   719  0616                     	;# 
   720  0691                     	;# 
   721  0692                     	;# 
   722  0693                     	;# 
   723  0694                     	;# 
   724  0695                     	;# 
   725  0E8E                     	;# 
   726  0E8F                     	;# 
   727  0E90                     	;# 
   728  0E91                     	;# 
   729  0E92                     	;# 
   730  0E93                     	;# 
   731  0E94                     	;# 
   732  0E94                     	;# 
   733  0E95                     	;# 
   734  0E96                     	;# 
   735  0E97                     	;# 
   736  0E98                     	;# 
   737  0E99                     	;# 
   738  0E9A                     	;# 
   739  0E9B                     	;# 
   740  0E9C                     	;# 
   741  0E9D                     	;# 
   742  0E9E                     	;# 
   743  0E9F                     	;# 
   744  0FE4                     	;# 
   745  0FE5                     	;# 
   746  0FE6                     	;# 
   747  0FE7                     	;# 
   748  0FE8                     	;# 
   749  0FE9                     	;# 
   750  0FEA                     	;# 
   751  0FEB                     	;# 
   752  0FED                     	;# 
   753  0FEE                     	;# 
   754  0FEF                     	;# 
   755  0000                     	;# 
   756  0001                     	;# 
   757  0002                     	;# 
   758  0003                     	;# 
   759  0004                     	;# 
   760  0005                     	;# 
   761  0006                     	;# 
   762  0007                     	;# 
   763  0008                     	;# 
   764  0009                     	;# 
   765  000A                     	;# 
   766  000B                     	;# 
   767  000C                     	;# 
   768  000D                     	;# 
   769  000E                     	;# 
   770  0011                     	;# 
   771  0012                     	;# 
   772  0015                     	;# 
   773  0016                     	;# 
   774  0016                     	;# 
   775  0017                     	;# 
   776  0018                     	;# 
   777  0019                     	;# 
   778  001A                     	;# 
   779  001B                     	;# 
   780  001C                     	;# 
   781  008C                     	;# 
   782  008D                     	;# 
   783  008E                     	;# 
   784  0091                     	;# 
   785  0092                     	;# 
   786  0095                     	;# 
   787  0096                     	;# 
   788  0097                     	;# 
   789  0098                     	;# 
   790  0099                     	;# 
   791  009A                     	;# 
   792  009B                     	;# 
   793  009B                     	;# 
   794  009C                     	;# 
   795  009D                     	;# 
   796  009E                     	;# 
   797  009F                     	;# 
   798  010C                     	;# 
   799  010D                     	;# 
   800  010E                     	;# 
   801  0111                     	;# 
   802  0112                     	;# 
   803  0113                     	;# 
   804  0114                     	;# 
   805  0115                     	;# 
   806  0116                     	;# 
   807  0117                     	;# 
   808  0118                     	;# 
   809  0119                     	;# 
   810  011D                     	;# 
   811  018C                     	;# 
   812  018D                     	;# 
   813  018E                     	;# 
   814  0191                     	;# 
   815  0191                     	;# 
   816  0192                     	;# 
   817  0193                     	;# 
   818  0193                     	;# 
   819  0194                     	;# 
   820  0195                     	;# 
   821  0196                     	;# 
   822  0197                     	;# 
   823  0199                     	;# 
   824  019A                     	;# 
   825  019B                     	;# 
   826  019C                     	;# 
   827  019D                     	;# 
   828  019E                     	;# 
   829  019F                     	;# 
   830  020C                     	;# 
   831  020D                     	;# 
   832  0211                     	;# 
   833  0211                     	;# 
   834  0212                     	;# 
   835  0212                     	;# 
   836  0213                     	;# 
   837  0213                     	;# 
   838  0214                     	;# 
   839  0214                     	;# 
   840  0215                     	;# 
   841  0215                     	;# 
   842  0215                     	;# 
   843  0216                     	;# 
   844  0216                     	;# 
   845  0217                     	;# 
   846  0217                     	;# 
   847  0391                     	;# 
   848  0392                     	;# 
   849  0393                     	;# 
   850  0394                     	;# 
   851  0395                     	;# 
   852  0396                     	;# 
   853  039A                     	;# 
   854  039B                     	;# 
   855  0611                     	;# 
   856  0612                     	;# 
   857  0613                     	;# 
   858  0613                     	;# 
   859  0614                     	;# 
   860  0615                     	;# 
   861  0616                     	;# 
   862  0616                     	;# 
   863  0691                     	;# 
   864  0692                     	;# 
   865  0693                     	;# 
   866  0694                     	;# 
   867  0695                     	;# 
   868  0E8E                     	;# 
   869  0E8F                     	;# 
   870  0E90                     	;# 
   871  0E91                     	;# 
   872  0E92                     	;# 
   873  0E93                     	;# 
   874  0E94                     	;# 
   875  0E94                     	;# 
   876  0E95                     	;# 
   877  0E96                     	;# 
   878  0E97                     	;# 
   879  0E98                     	;# 
   880  0E99                     	;# 
   881  0E9A                     	;# 
   882  0E9B                     	;# 
   883  0E9C                     	;# 
   884  0E9D                     	;# 
   885  0E9E                     	;# 
   886  0E9F                     	;# 
   887  0FE4                     	;# 
   888  0FE5                     	;# 
   889  0FE6                     	;# 
   890  0FE7                     	;# 
   891  0FE8                     	;# 
   892  0FE9                     	;# 
   893  0FEA                     	;# 
   894  0FEB                     	;# 
   895  0FED                     	;# 
   896  0FEE                     	;# 
   897  0FEF                     	;# 
   898  0000                     	;# 
   899  0001                     	;# 
   900  0002                     	;# 
   901  0003                     	;# 
   902  0004                     	;# 
   903  0005                     	;# 
   904  0006                     	;# 
   905  0007                     	;# 
   906  0008                     	;# 
   907  0009                     	;# 
   908  000A                     	;# 
   909  000B                     	;# 
   910  000C                     	;# 
   911  000D                     	;# 
   912  000E                     	;# 
   913  0011                     	;# 
   914  0012                     	;# 
   915  0015                     	;# 
   916  0016                     	;# 
   917  0016                     	;# 
   918  0017                     	;# 
   919  0018                     	;# 
   920  0019                     	;# 
   921  001A                     	;# 
   922  001B                     	;# 
   923  001C                     	;# 
   924  008C                     	;# 
   925  008D                     	;# 
   926  008E                     	;# 
   927  0091                     	;# 
   928  0092                     	;# 
   929  0095                     	;# 
   930  0096                     	;# 
   931  0097                     	;# 
   932  0098                     	;# 
   933  0099                     	;# 
   934  009A                     	;# 
   935  009B                     	;# 
   936  009B                     	;# 
   937  009C                     	;# 
   938  009D                     	;# 
   939  009E                     	;# 
   940  009F                     	;# 
   941  010C                     	;# 
   942  010D                     	;# 
   943  010E                     	;# 
   944  0111                     	;# 
   945  0112                     	;# 
   946  0113                     	;# 
   947  0114                     	;# 
   948  0115                     	;# 
   949  0116                     	;# 
   950  0117                     	;# 
   951  0118                     	;# 
   952  0119                     	;# 
   953  011D                     	;# 
   954  018C                     	;# 
   955  018D                     	;# 
   956  018E                     	;# 
   957  0191                     	;# 
   958  0191                     	;# 
   959  0192                     	;# 
   960  0193                     	;# 
   961  0193                     	;# 
   962  0194                     	;# 
   963  0195                     	;# 
   964  0196                     	;# 
   965  0197                     	;# 
   966  0199                     	;# 
   967  019A                     	;# 
   968  019B                     	;# 
   969  019C                     	;# 
   970  019D                     	;# 
   971  019E                     	;# 
   972  019F                     	;# 
   973  020C                     	;# 
   974  020D                     	;# 
   975  0211                     	;# 
   976  0211                     	;# 
   977  0212                     	;# 
   978  0212                     	;# 
   979  0213                     	;# 
   980  0213                     	;# 
   981  0214                     	;# 
   982  0214                     	;# 
   983  0215                     	;# 
   984  0215                     	;# 
   985  0215                     	;# 
   986  0216                     	;# 
   987  0216                     	;# 
   988  0217                     	;# 
   989  0217                     	;# 
   990  0391                     	;# 
   991  0392                     	;# 
   992  0393                     	;# 
   993  0394                     	;# 
   994  0395                     	;# 
   995  0396                     	;# 
   996  039A                     	;# 
   997  039B                     	;# 
   998  0611                     	;# 
   999  0612                     	;# 
  1000  0613                     	;# 
  1001  0613                     	;# 
  1002  0614                     	;# 
  1003  0615                     	;# 
  1004  0616                     	;# 
  1005  0616                     	;# 
  1006  0691                     	;# 
  1007  0692                     	;# 
  1008  0693                     	;# 
  1009  0694                     	;# 
  1010  0695                     	;# 
  1011  0E8E                     	;# 
  1012  0E8F                     	;# 
  1013  0E90                     	;# 
  1014  0E91                     	;# 
  1015  0E92                     	;# 
  1016  0E93                     	;# 
  1017  0E94                     	;# 
  1018  0E94                     	;# 
  1019  0E95                     	;# 
  1020  0E96                     	;# 
  1021  0E97                     	;# 
  1022  0E98                     	;# 
  1023  0E99                     	;# 
  1024  0E9A                     	;# 
  1025  0E9B                     	;# 
  1026  0E9C                     	;# 
  1027  0E9D                     	;# 
  1028  0E9E                     	;# 
  1029  0E9F                     	;# 
  1030  0FE4                     	;# 
  1031  0FE5                     	;# 
  1032  0FE6                     	;# 
  1033  0FE7                     	;# 
  1034  0FE8                     	;# 
  1035  0FE9                     	;# 
  1036  0FEA                     	;# 
  1037  0FEB                     	;# 
  1038  0FED                     	;# 
  1039  0FEE                     	;# 
  1040  0FEF                     	;# 
  1041  0000                     	;# 
  1042  0001                     	;# 
  1043  0002                     	;# 
  1044  0003                     	;# 
  1045  0004                     	;# 
  1046  0005                     	;# 
  1047  0006                     	;# 
  1048  0007                     	;# 
  1049  0008                     	;# 
  1050  0009                     	;# 
  1051  000A                     	;# 
  1052  000B                     	;# 
  1053  000C                     	;# 
  1054  000D                     	;# 
  1055  000E                     	;# 
  1056  0011                     	;# 
  1057  0012                     	;# 
  1058  0015                     	;# 
  1059  0016                     	;# 
  1060  0016                     	;# 
  1061  0017                     	;# 
  1062  0018                     	;# 
  1063  0019                     	;# 
  1064  001A                     	;# 
  1065  001B                     	;# 
  1066  001C                     	;# 
  1067  008C                     	;# 
  1068  008D                     	;# 
  1069  008E                     	;# 
  1070  0091                     	;# 
  1071  0092                     	;# 
  1072  0095                     	;# 
  1073  0096                     	;# 
  1074  0097                     	;# 
  1075  0098                     	;# 
  1076  0099                     	;# 
  1077  009A                     	;# 
  1078  009B                     	;# 
  1079  009B                     	;# 
  1080  009C                     	;# 
  1081  009D                     	;# 
  1082  009E                     	;# 
  1083  009F                     	;# 
  1084  010C                     	;# 
  1085  010D                     	;# 
  1086  010E                     	;# 
  1087  0111                     	;# 
  1088  0112                     	;# 
  1089  0113                     	;# 
  1090  0114                     	;# 
  1091  0115                     	;# 
  1092  0116                     	;# 
  1093  0117                     	;# 
  1094  0118                     	;# 
  1095  0119                     	;# 
  1096  011D                     	;# 
  1097  018C                     	;# 
  1098  018D                     	;# 
  1099  018E                     	;# 
  1100  0191                     	;# 
  1101  0191                     	;# 
  1102  0192                     	;# 
  1103  0193                     	;# 
  1104  0193                     	;# 
  1105  0194                     	;# 
  1106  0195                     	;# 
  1107  0196                     	;# 
  1108  0197                     	;# 
  1109  0199                     	;# 
  1110  019A                     	;# 
  1111  019B                     	;# 
  1112  019C                     	;# 
  1113  019D                     	;# 
  1114  019E                     	;# 
  1115  019F                     	;# 
  1116  020C                     	;# 
  1117  020D                     	;# 
  1118  0211                     	;# 
  1119  0211                     	;# 
  1120  0212                     	;# 
  1121  0212                     	;# 
  1122  0213                     	;# 
  1123  0213                     	;# 
  1124  0214                     	;# 
  1125  0214                     	;# 
  1126  0215                     	;# 
  1127  0215                     	;# 
  1128  0215                     	;# 
  1129  0216                     	;# 
  1130  0216                     	;# 
  1131  0217                     	;# 
  1132  0217                     	;# 
  1133  0391                     	;# 
  1134  0392                     	;# 
  1135  0393                     	;# 
  1136  0394                     	;# 
  1137  0395                     	;# 
  1138  0396                     	;# 
  1139  039A                     	;# 
  1140  039B                     	;# 
  1141  0611                     	;# 
  1142  0612                     	;# 
  1143  0613                     	;# 
  1144  0613                     	;# 
  1145  0614                     	;# 
  1146  0615                     	;# 
  1147  0616                     	;# 
  1148  0616                     	;# 
  1149  0691                     	;# 
  1150  0692                     	;# 
  1151  0693                     	;# 
  1152  0694                     	;# 
  1153  0695                     	;# 
  1154  0E8E                     	;# 
  1155  0E8F                     	;# 
  1156  0E90                     	;# 
  1157  0E91                     	;# 
  1158  0E92                     	;# 
  1159  0E93                     	;# 
  1160  0E94                     	;# 
  1161  0E94                     	;# 
  1162  0E95                     	;# 
  1163  0E96                     	;# 
  1164  0E97                     	;# 
  1165  0E98                     	;# 
  1166  0E99                     	;# 
  1167  0E9A                     	;# 
  1168  0E9B                     	;# 
  1169  0E9C                     	;# 
  1170  0E9D                     	;# 
  1171  0E9E                     	;# 
  1172  0E9F                     	;# 
  1173  0FE4                     	;# 
  1174  0FE5                     	;# 
  1175  0FE6                     	;# 
  1176  0FE7                     	;# 
  1177  0FE8                     	;# 
  1178  0FE9                     	;# 
  1179  0FEA                     	;# 
  1180  0FEB                     	;# 
  1181  0FED                     	;# 
  1182  0FEE                     	;# 
  1183  0FEF                     	;# 
  1184  0000                     	;# 
  1185  0001                     	;# 
  1186  0002                     	;# 
  1187  0003                     	;# 
  1188  0004                     	;# 
  1189  0005                     	;# 
  1190  0006                     	;# 
  1191  0007                     	;# 
  1192  0008                     	;# 
  1193  0009                     	;# 
  1194  000A                     	;# 
  1195  000B                     	;# 
  1196  000C                     	;# 
  1197  000D                     	;# 
  1198  000E                     	;# 
  1199  0011                     	;# 
  1200  0012                     	;# 
  1201  0015                     	;# 
  1202  0016                     	;# 
  1203  0016                     	;# 
  1204  0017                     	;# 
  1205  0018                     	;# 
  1206  0019                     	;# 
  1207  001A                     	;# 
  1208  001B                     	;# 
  1209  001C                     	;# 
  1210  008C                     	;# 
  1211  008D                     	;# 
  1212  008E                     	;# 
  1213  0091                     	;# 
  1214  0092                     	;# 
  1215  0095                     	;# 
  1216  0096                     	;# 
  1217  0097                     	;# 
  1218  0098                     	;# 
  1219  0099                     	;# 
  1220  009A                     	;# 
  1221  009B                     	;# 
  1222  009B                     	;# 
  1223  009C                     	;# 
  1224  009D                     	;# 
  1225  009E                     	;# 
  1226  009F                     	;# 
  1227  010C                     	;# 
  1228  010D                     	;# 
  1229  010E                     	;# 
  1230  0111                     	;# 
  1231  0112                     	;# 
  1232  0113                     	;# 
  1233  0114                     	;# 
  1234  0115                     	;# 
  1235  0116                     	;# 
  1236  0117                     	;# 
  1237  0118                     	;# 
  1238  0119                     	;# 
  1239  011D                     	;# 
  1240  018C                     	;# 
  1241  018D                     	;# 
  1242  018E                     	;# 
  1243  0191                     	;# 
  1244  0191                     	;# 
  1245  0192                     	;# 
  1246  0193                     	;# 
  1247  0193                     	;# 
  1248  0194                     	;# 
  1249  0195                     	;# 
  1250  0196                     	;# 
  1251  0197                     	;# 
  1252  0199                     	;# 
  1253  019A                     	;# 
  1254  019B                     	;# 
  1255  019C                     	;# 
  1256  019D                     	;# 
  1257  019E                     	;# 
  1258  019F                     	;# 
  1259  020C                     	;# 
  1260  020D                     	;# 
  1261  0211                     	;# 
  1262  0211                     	;# 
  1263  0212                     	;# 
  1264  0212                     	;# 
  1265  0213                     	;# 
  1266  0213                     	;# 
  1267  0214                     	;# 
  1268  0214                     	;# 
  1269  0215                     	;# 
  1270  0215                     	;# 
  1271  0215                     	;# 
  1272  0216                     	;# 
  1273  0216                     	;# 
  1274  0217                     	;# 
  1275  0217                     	;# 
  1276  0391                     	;# 
  1277  0392                     	;# 
  1278  0393                     	;# 
  1279  0394                     	;# 
  1280  0395                     	;# 
  1281  0396                     	;# 
  1282  039A                     	;# 
  1283  039B                     	;# 
  1284  0611                     	;# 
  1285  0612                     	;# 
  1286  0613                     	;# 
  1287  0613                     	;# 
  1288  0614                     	;# 
  1289  0615                     	;# 
  1290  0616                     	;# 
  1291  0616                     	;# 
  1292  0691                     	;# 
  1293  0692                     	;# 
  1294  0693                     	;# 
  1295  0694                     	;# 
  1296  0695                     	;# 
  1297  0E8E                     	;# 
  1298  0E8F                     	;# 
  1299  0E90                     	;# 
  1300  0E91                     	;# 
  1301  0E92                     	;# 
  1302  0E93                     	;# 
  1303  0E94                     	;# 
  1304  0E94                     	;# 
  1305  0E95                     	;# 
  1306  0E96                     	;# 
  1307  0E97                     	;# 
  1308  0E98                     	;# 
  1309  0E99                     	;# 
  1310  0E9A                     	;# 
  1311  0E9B                     	;# 
  1312  0E9C                     	;# 
  1313  0E9D                     	;# 
  1314  0E9E                     	;# 
  1315  0E9F                     	;# 
  1316  0FE4                     	;# 
  1317  0FE5                     	;# 
  1318  0FE6                     	;# 
  1319  0FE7                     	;# 
  1320  0FE8                     	;# 
  1321  0FE9                     	;# 
  1322  0FEA                     	;# 
  1323  0FEB                     	;# 
  1324  0FED                     	;# 
  1325  0FEE                     	;# 
  1326  0FEF                     	;# 
  1327  0000                     	;# 
  1328  0001                     	;# 
  1329  0002                     	;# 
  1330  0003                     	;# 
  1331  0004                     	;# 
  1332  0005                     	;# 
  1333  0006                     	;# 
  1334  0007                     	;# 
  1335  0008                     	;# 
  1336  0009                     	;# 
  1337  000A                     	;# 
  1338  000B                     	;# 
  1339  000C                     	;# 
  1340  000D                     	;# 
  1341  000E                     	;# 
  1342  0011                     	;# 
  1343  0012                     	;# 
  1344  0015                     	;# 
  1345  0016                     	;# 
  1346  0016                     	;# 
  1347  0017                     	;# 
  1348  0018                     	;# 
  1349  0019                     	;# 
  1350  001A                     	;# 
  1351  001B                     	;# 
  1352  001C                     	;# 
  1353  008C                     	;# 
  1354  008D                     	;# 
  1355  008E                     	;# 
  1356  0091                     	;# 
  1357  0092                     	;# 
  1358  0095                     	;# 
  1359  0096                     	;# 
  1360  0097                     	;# 
  1361  0098                     	;# 
  1362  0099                     	;# 
  1363  009A                     	;# 
  1364  009B                     	;# 
  1365  009B                     	;# 
  1366  009C                     	;# 
  1367  009D                     	;# 
  1368  009E                     	;# 
  1369  009F                     	;# 
  1370  010C                     	;# 
  1371  010D                     	;# 
  1372  010E                     	;# 
  1373  0111                     	;# 
  1374  0112                     	;# 
  1375  0113                     	;# 
  1376  0114                     	;# 
  1377  0115                     	;# 
  1378  0116                     	;# 
  1379  0117                     	;# 
  1380  0118                     	;# 
  1381  0119                     	;# 
  1382  011D                     	;# 
  1383  018C                     	;# 
  1384  018D                     	;# 
  1385  018E                     	;# 
  1386  0191                     	;# 
  1387  0191                     	;# 
  1388  0192                     	;# 
  1389  0193                     	;# 
  1390  0193                     	;# 
  1391  0194                     	;# 
  1392  0195                     	;# 
  1393  0196                     	;# 
  1394  0197                     	;# 
  1395  0199                     	;# 
  1396  019A                     	;# 
  1397  019B                     	;# 
  1398  019C                     	;# 
  1399  019D                     	;# 
  1400  019E                     	;# 
  1401  019F                     	;# 
  1402  020C                     	;# 
  1403  020D                     	;# 
  1404  0211                     	;# 
  1405  0211                     	;# 
  1406  0212                     	;# 
  1407  0212                     	;# 
  1408  0213                     	;# 
  1409  0213                     	;# 
  1410  0214                     	;# 
  1411  0214                     	;# 
  1412  0215                     	;# 
  1413  0215                     	;# 
  1414  0215                     	;# 
  1415  0216                     	;# 
  1416  0216                     	;# 
  1417  0217                     	;# 
  1418  0217                     	;# 
  1419  0391                     	;# 
  1420  0392                     	;# 
  1421  0393                     	;# 
  1422  0394                     	;# 
  1423  0395                     	;# 
  1424  0396                     	;# 
  1425  039A                     	;# 
  1426  039B                     	;# 
  1427  0611                     	;# 
  1428  0612                     	;# 
  1429  0613                     	;# 
  1430  0613                     	;# 
  1431  0614                     	;# 
  1432  0615                     	;# 
  1433  0616                     	;# 
  1434  0616                     	;# 
  1435  0691                     	;# 
  1436  0692                     	;# 
  1437  0693                     	;# 
  1438  0694                     	;# 
  1439  0695                     	;# 
  1440  0E8E                     	;# 
  1441  0E8F                     	;# 
  1442  0E90                     	;# 
  1443  0E91                     	;# 
  1444  0E92                     	;# 
  1445  0E93                     	;# 
  1446  0E94                     	;# 
  1447  0E94                     	;# 
  1448  0E95                     	;# 
  1449  0E96                     	;# 
  1450  0E97                     	;# 
  1451  0E98                     	;# 
  1452  0E99                     	;# 
  1453  0E9A                     	;# 
  1454  0E9B                     	;# 
  1455  0E9C                     	;# 
  1456  0E9D                     	;# 
  1457  0E9E                     	;# 
  1458  0E9F                     	;# 
  1459  0FE4                     	;# 
  1460  0FE5                     	;# 
  1461  0FE6                     	;# 
  1462  0FE7                     	;# 
  1463  0FE8                     	;# 
  1464  0FE9                     	;# 
  1465  0FEA                     	;# 
  1466  0FEB                     	;# 
  1467  0FED                     	;# 
  1468  0FEE                     	;# 
  1469  0FEF                     	;# 
  1470  0000                     	;# 
  1471  0001                     	;# 
  1472  0002                     	;# 
  1473  0003                     	;# 
  1474  0004                     	;# 
  1475  0005                     	;# 
  1476  0006                     	;# 
  1477  0007                     	;# 
  1478  0008                     	;# 
  1479  0009                     	;# 
  1480  000A                     	;# 
  1481  000B                     	;# 
  1482  000C                     	;# 
  1483  000D                     	;# 
  1484  000E                     	;# 
  1485  0011                     	;# 
  1486  0012                     	;# 
  1487  0015                     	;# 
  1488  0016                     	;# 
  1489  0016                     	;# 
  1490  0017                     	;# 
  1491  0018                     	;# 
  1492  0019                     	;# 
  1493  001A                     	;# 
  1494  001B                     	;# 
  1495  001C                     	;# 
  1496  008C                     	;# 
  1497  008D                     	;# 
  1498  008E                     	;# 
  1499  0091                     	;# 
  1500  0092                     	;# 
  1501  0095                     	;# 
  1502  0096                     	;# 
  1503  0097                     	;# 
  1504  0098                     	;# 
  1505  0099                     	;# 
  1506  009A                     	;# 
  1507  009B                     	;# 
  1508  009B                     	;# 
  1509  009C                     	;# 
  1510  009D                     	;# 
  1511  009E                     	;# 
  1512  009F                     	;# 
  1513  010C                     	;# 
  1514  010D                     	;# 
  1515  010E                     	;# 
  1516  0111                     	;# 
  1517  0112                     	;# 
  1518  0113                     	;# 
  1519  0114                     	;# 
  1520  0115                     	;# 
  1521  0116                     	;# 
  1522  0117                     	;# 
  1523  0118                     	;# 
  1524  0119                     	;# 
  1525  011D                     	;# 
  1526  018C                     	;# 
  1527  018D                     	;# 
  1528  018E                     	;# 
  1529  0191                     	;# 
  1530  0191                     	;# 
  1531  0192                     	;# 
  1532  0193                     	;# 
  1533  0193                     	;# 
  1534  0194                     	;# 
  1535  0195                     	;# 
  1536  0196                     	;# 
  1537  0197                     	;# 
  1538  0199                     	;# 
  1539  019A                     	;# 
  1540  019B                     	;# 
  1541  019C                     	;# 
  1542  019D                     	;# 
  1543  019E                     	;# 
  1544  019F                     	;# 
  1545  020C                     	;# 
  1546  020D                     	;# 
  1547  0211                     	;# 
  1548  0211                     	;# 
  1549  0212                     	;# 
  1550  0212                     	;# 
  1551  0213                     	;# 
  1552  0213                     	;# 
  1553  0214                     	;# 
  1554  0214                     	;# 
  1555  0215                     	;# 
  1556  0215                     	;# 
  1557  0215                     	;# 
  1558  0216                     	;# 
  1559  0216                     	;# 
  1560  0217                     	;# 
  1561  0217                     	;# 
  1562  0391                     	;# 
  1563  0392                     	;# 
  1564  0393                     	;# 
  1565  0394                     	;# 
  1566  0395                     	;# 
  1567  0396                     	;# 
  1568  039A                     	;# 
  1569  039B                     	;# 
  1570  0611                     	;# 
  1571  0612                     	;# 
  1572  0613                     	;# 
  1573  0613                     	;# 
  1574  0614                     	;# 
  1575  0615                     	;# 
  1576  0616                     	;# 
  1577  0616                     	;# 
  1578  0691                     	;# 
  1579  0692                     	;# 
  1580  0693                     	;# 
  1581  0694                     	;# 
  1582  0695                     	;# 
  1583  0E8E                     	;# 
  1584  0E8F                     	;# 
  1585  0E90                     	;# 
  1586  0E91                     	;# 
  1587  0E92                     	;# 
  1588  0E93                     	;# 
  1589  0E94                     	;# 
  1590  0E94                     	;# 
  1591  0E95                     	;# 
  1592  0E96                     	;# 
  1593  0E97                     	;# 
  1594  0E98                     	;# 
  1595  0E99                     	;# 
  1596  0E9A                     	;# 
  1597  0E9B                     	;# 
  1598  0E9C                     	;# 
  1599  0E9D                     	;# 
  1600  0E9E                     	;# 
  1601  0E9F                     	;# 
  1602  0FE4                     	;# 
  1603  0FE5                     	;# 
  1604  0FE6                     	;# 
  1605  0FE7                     	;# 
  1606  0FE8                     	;# 
  1607  0FE9                     	;# 
  1608  0FEA                     	;# 
  1609  0FEB                     	;# 
  1610  0FED                     	;# 
  1611  0FEE                     	;# 
  1612  0FEF                     	;# 
  1613  0000                     	;# 
  1614  0001                     	;# 
  1615  0002                     	;# 
  1616  0003                     	;# 
  1617  0004                     	;# 
  1618  0005                     	;# 
  1619  0006                     	;# 
  1620  0007                     	;# 
  1621  0008                     	;# 
  1622  0009                     	;# 
  1623  000A                     	;# 
  1624  000B                     	;# 
  1625  000C                     	;# 
  1626  000D                     	;# 
  1627  000E                     	;# 
  1628  0011                     	;# 
  1629  0012                     	;# 
  1630  0015                     	;# 
  1631  0016                     	;# 
  1632  0016                     	;# 
  1633  0017                     	;# 
  1634  0018                     	;# 
  1635  0019                     	;# 
  1636  001A                     	;# 
  1637  001B                     	;# 
  1638  001C                     	;# 
  1639  008C                     	;# 
  1640  008D                     	;# 
  1641  008E                     	;# 
  1642  0091                     	;# 
  1643  0092                     	;# 
  1644  0095                     	;# 
  1645  0096                     	;# 
  1646  0097                     	;# 
  1647  0098                     	;# 
  1648  0099                     	;# 
  1649  009A                     	;# 
  1650  009B                     	;# 
  1651  009B                     	;# 
  1652  009C                     	;# 
  1653  009D                     	;# 
  1654  009E                     	;# 
  1655  009F                     	;# 
  1656  010C                     	;# 
  1657  010D                     	;# 
  1658  010E                     	;# 
  1659  0111                     	;# 
  1660  0112                     	;# 
  1661  0113                     	;# 
  1662  0114                     	;# 
  1663  0115                     	;# 
  1664  0116                     	;# 
  1665  0117                     	;# 
  1666  0118                     	;# 
  1667  0119                     	;# 
  1668  011D                     	;# 
  1669  018C                     	;# 
  1670  018D                     	;# 
  1671  018E                     	;# 
  1672  0191                     	;# 
  1673  0191                     	;# 
  1674  0192                     	;# 
  1675  0193                     	;# 
  1676  0193                     	;# 
  1677  0194                     	;# 
  1678  0195                     	;# 
  1679  0196                     	;# 
  1680  0197                     	;# 
  1681  0199                     	;# 
  1682  019A                     	;# 
  1683  019B                     	;# 
  1684  019C                     	;# 
  1685  019D                     	;# 
  1686  019E                     	;# 
  1687  019F                     	;# 
  1688  020C                     	;# 
  1689  020D                     	;# 
  1690  0211                     	;# 
  1691  0211                     	;# 
  1692  0212                     	;# 
  1693  0212                     	;# 
  1694  0213                     	;# 
  1695  0213                     	;# 
  1696  0214                     	;# 
  1697  0214                     	;# 
  1698  0215                     	;# 
  1699  0215                     	;# 
  1700  0215                     	;# 
  1701  0216                     	;# 
  1702  0216                     	;# 
  1703  0217                     	;# 
  1704  0217                     	;# 
  1705  0391                     	;# 
  1706  0392                     	;# 
  1707  0393                     	;# 
  1708  0394                     	;# 
  1709  0395                     	;# 
  1710  0396                     	;# 
  1711  039A                     	;# 
  1712  039B                     	;# 
  1713  0611                     	;# 
  1714  0612                     	;# 
  1715  0613                     	;# 
  1716  0613                     	;# 
  1717  0614                     	;# 
  1718  0615                     	;# 
  1719  0616                     	;# 
  1720  0616                     	;# 
  1721  0691                     	;# 
  1722  0692                     	;# 
  1723  0693                     	;# 
  1724  0694                     	;# 
  1725  0695                     	;# 
  1726  0E8E                     	;# 
  1727  0E8F                     	;# 
  1728  0E90                     	;# 
  1729  0E91                     	;# 
  1730  0E92                     	;# 
  1731  0E93                     	;# 
  1732  0E94                     	;# 
  1733  0E94                     	;# 
  1734  0E95                     	;# 
  1735  0E96                     	;# 
  1736  0E97                     	;# 
  1737  0E98                     	;# 
  1738  0E99                     	;# 
  1739  0E9A                     	;# 
  1740  0E9B                     	;# 
  1741  0E9C                     	;# 
  1742  0E9D                     	;# 
  1743  0E9E                     	;# 
  1744  0E9F                     	;# 
  1745  0FE4                     	;# 
  1746  0FE5                     	;# 
  1747  0FE6                     	;# 
  1748  0FE7                     	;# 
  1749  0FE8                     	;# 
  1750  0FE9                     	;# 
  1751  0FEA                     	;# 
  1752  0FEB                     	;# 
  1753  0FED                     	;# 
  1754  0FEE                     	;# 
  1755  0FEF                     	;# 
  1756  0000                     	;# 
  1757  0001                     	;# 
  1758  0002                     	;# 
  1759  0003                     	;# 
  1760  0004                     	;# 
  1761  0005                     	;# 
  1762  0006                     	;# 
  1763  0007                     	;# 
  1764  0008                     	;# 
  1765  0009                     	;# 
  1766  000A                     	;# 
  1767  000B                     	;# 
  1768  000C                     	;# 
  1769  000D                     	;# 
  1770  000E                     	;# 
  1771  0011                     	;# 
  1772  0012                     	;# 
  1773  0015                     	;# 
  1774  0016                     	;# 
  1775  0016                     	;# 
  1776  0017                     	;# 
  1777  0018                     	;# 
  1778  0019                     	;# 
  1779  001A                     	;# 
  1780  001B                     	;# 
  1781  001C                     	;# 
  1782  008C                     	;# 
  1783  008D                     	;# 
  1784  008E                     	;# 
  1785  0091                     	;# 
  1786  0092                     	;# 
  1787  0095                     	;# 
  1788  0096                     	;# 
  1789  0097                     	;# 
  1790  0098                     	;# 
  1791  0099                     	;# 
  1792  009A                     	;# 
  1793  009B                     	;# 
  1794  009B                     	;# 
  1795  009C                     	;# 
  1796  009D                     	;# 
  1797  009E                     	;# 
  1798  009F                     	;# 
  1799  010C                     	;# 
  1800  010D                     	;# 
  1801  010E                     	;# 
  1802  0111                     	;# 
  1803  0112                     	;# 
  1804  0113                     	;# 
  1805  0114                     	;# 
  1806  0115                     	;# 
  1807  0116                     	;# 
  1808  0117                     	;# 
  1809  0118                     	;# 
  1810  0119                     	;# 
  1811  011D                     	;# 
  1812  018C                     	;# 
  1813  018D                     	;# 
  1814  018E                     	;# 
  1815  0191                     	;# 
  1816  0191                     	;# 
  1817  0192                     	;# 
  1818  0193                     	;# 
  1819  0193                     	;# 
  1820  0194                     	;# 
  1821  0195                     	;# 
  1822  0196                     	;# 
  1823  0197                     	;# 
  1824  0199                     	;# 
  1825  019A                     	;# 
  1826  019B                     	;# 
  1827  019C                     	;# 
  1828  019D                     	;# 
  1829  019E                     	;# 
  1830  019F                     	;# 
  1831  020C                     	;# 
  1832  020D                     	;# 
  1833  0211                     	;# 
  1834  0211                     	;# 
  1835  0212                     	;# 
  1836  0212                     	;# 
  1837  0213                     	;# 
  1838  0213                     	;# 
  1839  0214                     	;# 
  1840  0214                     	;# 
  1841  0215                     	;# 
  1842  0215                     	;# 
  1843  0215                     	;# 
  1844  0216                     	;# 
  1845  0216                     	;# 
  1846  0217                     	;# 
  1847  0217                     	;# 
  1848  0391                     	;# 
  1849  0392                     	;# 
  1850  0393                     	;# 
  1851  0394                     	;# 
  1852  0395                     	;# 
  1853  0396                     	;# 
  1854  039A                     	;# 
  1855  039B                     	;# 
  1856  0611                     	;# 
  1857  0612                     	;# 
  1858  0613                     	;# 
  1859  0613                     	;# 
  1860  0614                     	;# 
  1861  0615                     	;# 
  1862  0616                     	;# 
  1863  0616                     	;# 
  1864  0691                     	;# 
  1865  0692                     	;# 
  1866  0693                     	;# 
  1867  0694                     	;# 
  1868  0695                     	;# 
  1869  0E8E                     	;# 
  1870  0E8F                     	;# 
  1871  0E90                     	;# 
  1872  0E91                     	;# 
  1873  0E92                     	;# 
  1874  0E93                     	;# 
  1875  0E94                     	;# 
  1876  0E94                     	;# 
  1877  0E95                     	;# 
  1878  0E96                     	;# 
  1879  0E97                     	;# 
  1880  0E98                     	;# 
  1881  0E99                     	;# 
  1882  0E9A                     	;# 
  1883  0E9B                     	;# 
  1884  0E9C                     	;# 
  1885  0E9D                     	;# 
  1886  0E9E                     	;# 
  1887  0E9F                     	;# 
  1888  0FE4                     	;# 
  1889  0FE5                     	;# 
  1890  0FE6                     	;# 
  1891  0FE7                     	;# 
  1892  0FE8                     	;# 
  1893  0FE9                     	;# 
  1894  0FEA                     	;# 
  1895  0FEB                     	;# 
  1896  0FED                     	;# 
  1897  0FEE                     	;# 
  1898  0FEF                     	;# 
  1899  0000                     	;# 
  1900  0001                     	;# 
  1901  0002                     	;# 
  1902  0003                     	;# 
  1903  0004                     	;# 
  1904  0005                     	;# 
  1905  0006                     	;# 
  1906  0007                     	;# 
  1907  0008                     	;# 
  1908  0009                     	;# 
  1909  000A                     	;# 
  1910  000B                     	;# 
  1911  000C                     	;# 
  1912  000D                     	;# 
  1913  000E                     	;# 
  1914  0011                     	;# 
  1915  0012                     	;# 
  1916  0015                     	;# 
  1917  0016                     	;# 
  1918  0016                     	;# 
  1919  0017                     	;# 
  1920  0018                     	;# 
  1921  0019                     	;# 
  1922  001A                     	;# 
  1923  001B                     	;# 
  1924  001C                     	;# 
  1925  008C                     	;# 
  1926  008D                     	;# 
  1927  008E                     	;# 
  1928  0091                     	;# 
  1929  0092                     	;# 
  1930  0095                     	;# 
  1931  0096                     	;# 
  1932  0097                     	;# 
  1933  0098                     	;# 
  1934  0099                     	;# 
  1935  009A                     	;# 
  1936  009B                     	;# 
  1937  009B                     	;# 
  1938  009C                     	;# 
  1939  009D                     	;# 
  1940  009E                     	;# 
  1941  009F                     	;# 
  1942  010C                     	;# 
  1943  010D                     	;# 
  1944  010E                     	;# 
  1945  0111                     	;# 
  1946  0112                     	;# 
  1947  0113                     	;# 
  1948  0114                     	;# 
  1949  0115                     	;# 
  1950  0116                     	;# 
  1951  0117                     	;# 
  1952  0118                     	;# 
  1953  0119                     	;# 
  1954  011D                     	;# 
  1955  018C                     	;# 
  1956  018D                     	;# 
  1957  018E                     	;# 
  1958  0191                     	;# 
  1959  0191                     	;# 
  1960  0192                     	;# 
  1961  0193                     	;# 
  1962  0193                     	;# 
  1963  0194                     	;# 
  1964  0195                     	;# 
  1965  0196                     	;# 
  1966  0197                     	;# 
  1967  0199                     	;# 
  1968  019A                     	;# 
  1969  019B                     	;# 
  1970  019C                     	;# 
  1971  019D                     	;# 
  1972  019E                     	;# 
  1973  019F                     	;# 
  1974  020C                     	;# 
  1975  020D                     	;# 
  1976  0211                     	;# 
  1977  0211                     	;# 
  1978  0212                     	;# 
  1979  0212                     	;# 
  1980  0213                     	;# 
  1981  0213                     	;# 
  1982  0214                     	;# 
  1983  0214                     	;# 
  1984  0215                     	;# 
  1985  0215                     	;# 
  1986  0215                     	;# 
  1987  0216                     	;# 
  1988  0216                     	;# 
  1989  0217                     	;# 
  1990  0217                     	;# 
  1991  0391                     	;# 
  1992  0392                     	;# 
  1993  0393                     	;# 
  1994  0394                     	;# 
  1995  0395                     	;# 
  1996  0396                     	;# 
  1997  039A                     	;# 
  1998  039B                     	;# 
  1999  0611                     	;# 
  2000  0612                     	;# 
  2001  0613                     	;# 
  2002  0613                     	;# 
  2003  0614                     	;# 
  2004  0615                     	;# 
  2005  0616                     	;# 
  2006  0616                     	;# 
  2007  0691                     	;# 
  2008  0692                     	;# 
  2009  0693                     	;# 
  2010  0694                     	;# 
  2011  0695                     	;# 
  2012  0E8E                     	;# 
  2013  0E8F                     	;# 
  2014  0E90                     	;# 
  2015  0E91                     	;# 
  2016  0E92                     	;# 
  2017  0E93                     	;# 
  2018  0E94                     	;# 
  2019  0E94                     	;# 
  2020  0E95                     	;# 
  2021  0E96                     	;# 
  2022  0E97                     	;# 
  2023  0E98                     	;# 
  2024  0E99                     	;# 
  2025  0E9A                     	;# 
  2026  0E9B                     	;# 
  2027  0E9C                     	;# 
  2028  0E9D                     	;# 
  2029  0E9E                     	;# 
  2030  0E9F                     	;# 
  2031  0FE4                     	;# 
  2032  0FE5                     	;# 
  2033  0FE6                     	;# 
  2034  0FE7                     	;# 
  2035  0FE8                     	;# 
  2036  0FE9                     	;# 
  2037  0FEA                     	;# 
  2038  0FEB                     	;# 
  2039  0FED                     	;# 
  2040  0FEE                     	;# 
  2041  0FEF                     	;# 
  2042                           
  2043                           	psect	stringtext
  2044  1000                     __pstringtext:	
  2045  1000                     __stringtab:	
  2046  1000  3400               	retlw	0
  2047  1001                     __end_of__stringtab:	
  2048  1001                     process_level@idx_midi_map:	
  2049  1001  343F               	retlw	63
  2050  1002  3418               	retlw	24
  2051  1003  3418               	retlw	24
  2052  1004  3418               	retlw	24
  2053  1005  3418               	retlw	24
  2054  1006  3447               	retlw	71
  2055  1007  3418               	retlw	24
  2056  1008  3418               	retlw	24
  2057  1009  3418               	retlw	24
  2058  100A  3418               	retlw	24
  2059  100B  3418               	retlw	24
  2060  100C  3418               	retlw	24
  2061  100D  3418               	retlw	24
  2062  100E  3444               	retlw	68
  2063  100F  3445               	retlw	69
  2064  1010  3446               	retlw	70
  2065  1011  3431               	retlw	49
  2066  1012  3432               	retlw	50
  2067  1013  3418               	retlw	24
  2068  1014  3418               	retlw	24
  2069  1015  3430               	retlw	48
  2070  1016  3441               	retlw	65
  2071  1017  3442               	retlw	66
  2072  1018  3443               	retlw	67
  2073  1019  3418               	retlw	24
  2074  101A  3418               	retlw	24
  2075  101B  3436               	retlw	54
  2076  101C  3438               	retlw	56
  2077  101D  3434               	retlw	52
  2078  101E  343B               	retlw	59
  2079  101F  343D               	retlw	61
  2080  1020  3440               	retlw	64
  2081  1021  3433               	retlw	51
  2082  1022  3435               	retlw	53
  2083  1023  3437               	retlw	55
  2084  1024  3439               	retlw	57
  2085  1025  343A               	retlw	58
  2086  1026  343C               	retlw	60
  2087  1027  343E               	retlw	62
  2088  1028                     __end_ofprocess_level@idx_midi_map:	
  2089  1028                     _USB_SD_Ptr:	
  2090  1028  34F5               	retlw	low (_sd000| (0+32768))
  2091  1029  3490               	retlw	high (_sd000| (0+32768))
  2092  102A  3495               	retlw	low (_sd001| (0+32768))
  2093  102B  3490               	retlw	high (_sd001| (0+32768))
  2094  102C  34C9               	retlw	low (_sd002| (0+32768))
  2095  102D  3490               	retlw	high (_sd002| (0+32768))
  2096  102E                     __end_of_USB_SD_Ptr:	
  2097  102E                     _USB_CD_Ptr:	
  2098  102E  3430               	retlw	low (_configDescriptor1| (0+32768))
  2099  102F  3490               	retlw	high (_configDescriptor1| (0+32768))
  2100  1030                     __end_of_USB_CD_Ptr:	
  2101  1030                     _configDescriptor1:	
  2102  1030  3409               	retlw	9
  2103  1031  3402               	retlw	2
  2104  1032  3465               	retlw	101
  2105  1033  3400               	retlw	0
  2106  1034  3402               	retlw	2
  2107  1035  3401               	retlw	1
  2108  1036  3400               	retlw	0
  2109  1037  34C0               	retlw	192
  2110  1038  3432               	retlw	50
  2111  1039  3409               	retlw	9
  2112  103A  3404               	retlw	4
  2113  103B  3400               	retlw	0
  2114  103C  3400               	retlw	0
  2115  103D  3400               	retlw	0
  2116  103E  3401               	retlw	1
  2117  103F  3401               	retlw	1
  2118  1040  3400               	retlw	0
  2119  1041  3400               	retlw	0
  2120  1042  3409               	retlw	9
  2121  1043  3424               	retlw	36
  2122  1044  3401               	retlw	1
  2123  1045  3400               	retlw	0
  2124  1046  3401               	retlw	1
  2125  1047  3409               	retlw	9
  2126  1048  3400               	retlw	0
  2127  1049  3401               	retlw	1
  2128  104A  3401               	retlw	1
  2129  104B  3409               	retlw	9
  2130  104C  3404               	retlw	4
  2131  104D  3401               	retlw	1
  2132  104E  3400               	retlw	0
  2133  104F  3402               	retlw	2
  2134  1050  3401               	retlw	1
  2135  1051  3403               	retlw	3
  2136  1052  3400               	retlw	0
  2137  1053  3400               	retlw	0
  2138  1054  3407               	retlw	7
  2139  1055  3424               	retlw	36
  2140  1056  3401               	retlw	1
  2141  1057  3400               	retlw	0
  2142  1058  3401               	retlw	1
  2143  1059  3441               	retlw	65
  2144  105A  3400               	retlw	0
  2145  105B  3406               	retlw	6
  2146  105C  3424               	retlw	36
  2147  105D  3402               	retlw	2
  2148  105E  3401               	retlw	1
  2149  105F  3401               	retlw	1
  2150  1060  3400               	retlw	0
  2151  1061  3406               	retlw	6
  2152  1062  3424               	retlw	36
  2153  1063  3402               	retlw	2
  2154  1064  3402               	retlw	2
  2155  1065  3402               	retlw	2
  2156  1066  3400               	retlw	0
  2157  1067  3409               	retlw	9
  2158  1068  3424               	retlw	36
  2159  1069  3403               	retlw	3
  2160  106A  3401               	retlw	1
  2161  106B  3403               	retlw	3
  2162  106C  3401               	retlw	1
  2163  106D  3402               	retlw	2
  2164  106E  3401               	retlw	1
  2165  106F  3400               	retlw	0
  2166  1070  3409               	retlw	9
  2167  1071  3424               	retlw	36
  2168  1072  3403               	retlw	3
  2169  1073  3402               	retlw	2
  2170  1074  3404               	retlw	4
  2171  1075  3401               	retlw	1
  2172  1076  3401               	retlw	1
  2173  1077  3401               	retlw	1
  2174  1078  3400               	retlw	0
  2175  1079  3409               	retlw	9
  2176  107A  3405               	retlw	5
  2177  107B  3401               	retlw	1
  2178  107C  3402               	retlw	2
  2179  107D  3440               	retlw	64
  2180  107E  3400               	retlw	0
  2181  107F  3400               	retlw	0
  2182  1080  3400               	retlw	0
  2183  1081  3400               	retlw	0
  2184  1082  3405               	retlw	5
  2185  1083  3425               	retlw	37
  2186  1084  3401               	retlw	1
  2187  1085  3401               	retlw	1
  2188  1086  3401               	retlw	1
  2189  1087  3409               	retlw	9
  2190  1088  3405               	retlw	5
  2191  1089  3481               	retlw	129
  2192  108A  3402               	retlw	2
  2193  108B  3440               	retlw	64
  2194  108C  3400               	retlw	0
  2195  108D  3400               	retlw	0
  2196  108E  3400               	retlw	0
  2197  108F  3400               	retlw	0
  2198  1090  3405               	retlw	5
  2199  1091  3425               	retlw	37
  2200  1092  3401               	retlw	1
  2201  1093  3401               	retlw	1
  2202  1094  3403               	retlw	3
  2203  1095                     __end_of_configDescriptor1:	
  2204  1095                     _sd001:	
  2205  1095  3434               	retlw	52
  2206  1096  3403               	retlw	3
  2207  1097  344D               	retlw	77
  2208  1098  3400               	retlw	0
  2209  1099  3469               	retlw	105
  2210  109A  3400               	retlw	0
  2211  109B  3463               	retlw	99
  2212  109C  3400               	retlw	0
  2213  109D  3472               	retlw	114
  2214  109E  3400               	retlw	0
  2215  109F  346F               	retlw	111
  2216  10A0  3400               	retlw	0
  2217  10A1  3463               	retlw	99
  2218  10A2  3400               	retlw	0
  2219  10A3  3468               	retlw	104
  2220  10A4  3400               	retlw	0
  2221  10A5  3469               	retlw	105
  2222  10A6  3400               	retlw	0
  2223  10A7  3470               	retlw	112
  2224  10A8  3400               	retlw	0
  2225  10A9  3420               	retlw	32
  2226  10AA  3400               	retlw	0
  2227  10AB  3454               	retlw	84
  2228  10AC  3400               	retlw	0
  2229  10AD  3465               	retlw	101
  2230  10AE  3400               	retlw	0
  2231  10AF  3463               	retlw	99
  2232  10B0  3400               	retlw	0
  2233  10B1  3468               	retlw	104
  2234  10B2  3400               	retlw	0
  2235  10B3  346E               	retlw	110
  2236  10B4  3400               	retlw	0
  2237  10B5  346F               	retlw	111
  2238  10B6  3400               	retlw	0
  2239  10B7  346C               	retlw	108
  2240  10B8  3400               	retlw	0
  2241  10B9  346F               	retlw	111
  2242  10BA  3400               	retlw	0
  2243  10BB  3467               	retlw	103
  2244  10BC  3400               	retlw	0
  2245  10BD  3479               	retlw	121
  2246  10BE  3400               	retlw	0
  2247  10BF  3420               	retlw	32
  2248  10C0  3400               	retlw	0
  2249  10C1  3449               	retlw	73
  2250  10C2  3400               	retlw	0
  2251  10C3  346E               	retlw	110
  2252  10C4  3400               	retlw	0
  2253  10C5  3463               	retlw	99
  2254  10C6  3400               	retlw	0
  2255  10C7  342E               	retlw	46
  2256  10C8  3400               	retlw	0
  2257  10C9                     __end_of_sd001:	
  2258  10C9                     _sd002:	
  2259  10C9  341A               	retlw	26
  2260  10CA  3403               	retlw	3
  2261  10CB  344D               	retlw	77
  2262  10CC  3400               	retlw	0
  2263  10CD  3449               	retlw	73
  2264  10CE  3400               	retlw	0
  2265  10CF  3444               	retlw	68
  2266  10D0  3400               	retlw	0
  2267  10D1  3449               	retlw	73
  2268  10D2  3400               	retlw	0
  2269  10D3  3420               	retlw	32
  2270  10D4  3400               	retlw	0
  2271  10D5  3445               	retlw	69
  2272  10D6  3400               	retlw	0
  2273  10D7  3478               	retlw	120
  2274  10D8  3400               	retlw	0
  2275  10D9  3461               	retlw	97
  2276  10DA  3400               	retlw	0
  2277  10DB  346D               	retlw	109
  2278  10DC  3400               	retlw	0
  2279  10DD  3470               	retlw	112
  2280  10DE  3400               	retlw	0
  2281  10DF  346C               	retlw	108
  2282  10E0  3400               	retlw	0
  2283  10E1  3465               	retlw	101
  2284  10E2  3400               	retlw	0
  2285  10E3                     __end_of_sd002:	
  2286  10E3                     _device_dsc:	
  2287  10E3  3412               	retlw	18
  2288  10E4  3401               	retlw	1
  2289  10E5  3400               	retlw	0
  2290  10E6  3402               	retlw	2
  2291  10E7  3400               	retlw	0
  2292  10E8  3400               	retlw	0
  2293  10E9  3400               	retlw	0
  2294  10EA  3408               	retlw	8
  2295  10EB  34D8               	retlw	216
  2296  10EC  3404               	retlw	4
  2297  10ED  3459               	retlw	89
  2298  10EE  3400               	retlw	0
  2299  10EF  3402               	retlw	2
  2300  10F0  3400               	retlw	0
  2301  10F1  3401               	retlw	1
  2302  10F2  3402               	retlw	2
  2303  10F3  3400               	retlw	0
  2304  10F4  3401               	retlw	1
  2305  10F5                     __end_of_device_dsc:	
  2306  10F5                     _sd000:	
  2307  10F5  3404               	retlw	4
  2308  10F6  3403               	retlw	3
  2309  10F7  3409               	retlw	9
  2310  10F8  3404               	retlw	4
  2311  10F9                     __end_of_sd000:	
  2312  10F9                     process_level@midi_shift:	
  2313  10F9  3400               	retlw	0
  2314  10FA                     __end_ofprocess_level@midi_shift:	
  2315  000B                     _INTCONbits	set	11
  2316  0012                     _PIR2bits	set	18
  2317  0015                     _TMR0	set	21
  2318  009D                     _ADCON0bits	set	157
  2319  009E                     _ADCON1bits	set	158
  2320  009F                     _ADCON2bits	set	159
  2321  009C                     _ADRESH	set	156
  2322  0095                     _OPTION_REGbits	set	149
  2323  0099                     _OSCCON	set	153
  2324  0091                     _PIE1bits	set	145
  2325  0092                     _PIE2bits	set	146
  2326  008C                     _TRISAbits	set	140
  2327  008D                     _TRISBbits	set	141
  2328  008E                     _TRISCbits	set	142
  2329  010E                     _LATCbits	set	270
  2330  018C                     _ANSELA	set	396
  2331  018C                     _ANSELAbits	set	396
  2332  018E                     _ANSELCbits	set	398
  2333  0215                     _SSP1CON1	set	533
  2334  0217                     _SSP1CON3	set	535
  2335  0214                     _SSP1STAT	set	532
  2336  039B                     _ACTCON	set	923
  2337  0E96                     _UADDR	set	3734
  2338  0E91                     _UCFG	set	3729
  2339  0E8E                     _UCON	set	3726
  2340  0E8E                     _UCONbits	set	3726
  2341  0E97                     _UEIE	set	3735
  2342  0E93                     _UEIR	set	3731
  2343  0E98                     _UEP0bits	set	3736
  2344  0E92                     _UIE	set	3730
  2345  0E92                     _UIEbits	set	3730
  2346  0E90                     _UIR	set	3728
  2347  0E90                     _UIRbits	set	3728
  2348  0E8F                     _USTAT	set	3727
  2349  0E98                     _UEP0	set	3736
  2350  0E99                     _UEP1	set	3737
  2351                           
  2352                           ; #config settings
  2353  0000                     
  2354                           	psect	bssBANK0
  2355  0050                     __pbssBANK0:	
  2356  0050                     _pBDTEntryIn:	
  2357  0050                     	ds	2
  2358  0052                     _USBDeferStatusStagePacket:	
  2359  0052                     	ds	1
  2360  0053                     _USBDeviceState:	
  2361  0053                     	ds	1
  2362  0054                     _USBRxHandle:	
  2363  0054                     	ds	1
  2364  0055                     _controlTransferState:	
  2365  0055                     	ds	1
  2366  0056                     _pBDTEntryEP0OutCurrent:	
  2367  0056                     	ds	1
  2368  0057                     _pBDTEntryEP0OutNext:	
  2369  0057                     	ds	1
  2370  0058                     store_key_level@idx_key:	
  2371  0058                     	ds	1
  2372  0059                     _inPipes:	
  2373  0059                     	ds	5
  2374  005E                     _USBActiveConfiguration:	
  2375  005E                     	ds	1
  2376  005F                     _USTATcopy:	
  2377  005F                     	ds	1
  2378                           
  2379                           	psect	bssBANK1
  2380  00E0                     __pbssBANK1:	
  2381  00E0                     APP_LEDUpdateUSBStatus@ledCount:	
  2382  00E0                     	ds	2
  2383  00E2                     _USBDeferINDataStagePackets:	
  2384  00E2                     	ds	1
  2385  00E3                     _USBDeferOUTDataStagePackets:	
  2386  00E3                     	ds	1
  2387  00E4                     _USBStatusStageEnabledFlag1:	
  2388  00E4                     	ds	1
  2389  00E5                     _USBStatusStageEnabledFlag2:	
  2390  00E5                     	ds	1
  2391  00E6                     _USBStatusStageTimeoutCounter:	
  2392  00E6                     	ds	1
  2393  00E7                     _USBTxHandle:	
  2394  00E7                     	ds	1
  2395  00E8                     _endpoint_number:	
  2396  00E8                     	ds	1
  2397  00E9                     _msCounter:	
  2398  00E9                     	ds	1
  2399  00EA                     _pDst:	
  2400  00EA                     	ds	1
  2401  00EB                     _pitch:	
  2402  00EB                     	ds	1
  2403  00EC                     _sentNoteOff:	
  2404  00EC                     	ds	1
  2405  00ED                     _shortPacketStatus:	
  2406  00ED                     	ds	1
  2407  00EE                     is_end_of_scan@scan_counter:	
  2408  00EE                     	ds	1
  2409  00EF                     _USBAlternateInterface:	
  2410  00EF                     	ds	1
  2411                           
  2412                           	psect	bssBANK2
  2413  0120                     __pbssBANK2:	
  2414  0120                     process_level@key_states:	
  2415  0120                     	ds	39
  2416  0147                     _outPipes:	
  2417  0147                     	ds	6
  2418  014D                     _ep_data_in:	
  2419  014D                     	ds	2
  2420  014F                     _ep_data_out:	
  2421  014F                     	ds	2
  2422  0151                     _note_event:	
  2423  0151                     	ds	2
  2424  0153                     _pBDTEntryOut:	
  2425  0153                     	ds	2
  2426  0155                     _BothEP0OutUOWNsSet:	
  2427  0155                     	ds	1
  2428  0156                     _RemoteWakeup:	
  2429  0156                     	ds	1
  2430  0157                     _USBBusIsSuspended:	
  2431  0157                     	ds	1
  2432  0158                     _USBTicksSinceSuspendEnd:	
  2433  0158                     	ds	1
  2434  0159                     _is_initialized:	
  2435  0159                     	ds	1
  2436  015A                     _wait_timer:	
  2437  015A                     	ds	1
  2438  015B                     scan_task@state:	
  2439  015B                     	ds	1
  2440                           
  2441                           	psect	bssBANK3
  2442  01A4                     __pbssBANK3:	
  2443  01A4                     process_level@key_off_counter:	
  2444  01A4                     	ds	39
  2445                           
  2446                           	psect	bssBANK4
  2447  0220                     __pbssBANK4:	
  2448  0220                     _adc_levels:	
  2449  0220                     	ds	39
  2450  0247                     process_level@key_on_counter:	
  2451  0247                     	ds	39
  2452                           
  2453                           	psect	clrtext
  2454  0D88                     clear_ram0:	
  2455                           ;	Called with FSR0 containing the base address, and
  2456                           ;	WREG with the size to clear
  2457                           
  2458  0D88  0064               	clrwdt	;clear the watchdog before getting into this loop
  2459  0D89                     clrloop0:	
  2460  0D89  0180               	clrf	0	;clear RAM location pointed to by FSR
  2461  0D8A  3101               	addfsr 0,1
  2462  0D8B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2463  0D8C  2D89               	goto	clrloop0	;have we reached the end yet?
  2464  0D8D  3400               	retlw	0	;all done for this memory range, return
  2465                           
  2466                           	psect	cstackCOMMON
  2467  0070                     __pcstackCOMMON:	
  2468  0070                     ?_LED_Enable:	
  2469  0070                     ??_LED_Enable:	
  2470                           ; 0 bytes @ 0x0
  2471                           
  2472  0070                     ?_LED_Off:	
  2473                           ; 0 bytes @ 0x0
  2474                           
  2475  0070                     ??_LED_Off:	
  2476                           ; 0 bytes @ 0x0
  2477                           
  2478  0070                     ?_LED_On:	
  2479                           ; 0 bytes @ 0x0
  2480                           
  2481  0070                     ??_LED_On:	
  2482                           ; 0 bytes @ 0x0
  2483                           
  2484  0070                     ?_USBDeviceInit:	
  2485                           ; 0 bytes @ 0x0
  2486                           
  2487  0070                     ??_USBDeviceInit:	
  2488                           ; 0 bytes @ 0x0
  2489                           
  2490  0070                     ?_BLEDeviceInit:	
  2491                           ; 0 bytes @ 0x0
  2492                           
  2493  0070                     ??_BLEDeviceInit:	
  2494                           ; 0 bytes @ 0x0
  2495                           
  2496  0070                     ?_APP_DeviceAudioMIDITasks:	
  2497                           ; 0 bytes @ 0x0
  2498                           
  2499  0070                     ?_USBDeviceTasks:	
  2500                           ; 0 bytes @ 0x0
  2501                           
  2502  0070                     ?_APP_DeviceAudioMIDISOFHandler:	
  2503                           ; 0 bytes @ 0x0
  2504                           
  2505  0070                     ??_APP_DeviceAudioMIDISOFHandler:	
  2506                           ; 0 bytes @ 0x0
  2507                           
  2508  0070                     ?_APP_DeviceAudioMIDIInitialize:	
  2509                           ; 0 bytes @ 0x0
  2510                           
  2511  0070                     ?_PIN_MANAGER_Initialize:	
  2512                           ; 0 bytes @ 0x0
  2513                           
  2514  0070                     ??_PIN_MANAGER_Initialize:	
  2515                           ; 0 bytes @ 0x0
  2516                           
  2517  0070                     ?_SPI_Initialize:	
  2518                           ; 0 bytes @ 0x0
  2519                           
  2520  0070                     ??_SPI_Initialize:	
  2521                           ; 0 bytes @ 0x0
  2522                           
  2523  0070                     ?_USBWakeFromSuspend:	
  2524                           ; 0 bytes @ 0x0
  2525                           
  2526  0070                     ?_USBSuspend:	
  2527                           ; 0 bytes @ 0x0
  2528                           
  2529  0070                     ?_USBIncrement1msInternalTimers:	
  2530                           ; 0 bytes @ 0x0
  2531                           
  2532  0070                     ??_USBIncrement1msInternalTimers:	
  2533                           ; 0 bytes @ 0x0
  2534                           
  2535  0070                     ?_USBCtrlEPAllowStatusStage:	
  2536                           ; 0 bytes @ 0x0
  2537                           
  2538  0070                     ??_USBCtrlEPAllowStatusStage:	
  2539                           ; 0 bytes @ 0x0
  2540                           
  2541  0070                     ?_USBStallHandler:	
  2542                           ; 0 bytes @ 0x0
  2543                           
  2544  0070                     ??_USBStallHandler:	
  2545                           ; 0 bytes @ 0x0
  2546                           
  2547  0070                     ?_USBCtrlEPService:	
  2548                           ; 0 bytes @ 0x0
  2549                           
  2550  0070                     ?_USBConfigureEndpoint:	
  2551                           ; 0 bytes @ 0x0
  2552                           
  2553  0070                     ?_USBCtrlTrfTxService:	
  2554                           ; 0 bytes @ 0x0
  2555                           
  2556  0070                     ??_USBCtrlTrfTxService:	
  2557                           ; 0 bytes @ 0x0
  2558                           
  2559  0070                     ?_USBCtrlTrfSetupHandler:	
  2560                           ; 0 bytes @ 0x0
  2561                           
  2562  0070                     ?_USBCtrlTrfOutHandler:	
  2563                           ; 0 bytes @ 0x0
  2564                           
  2565  0070                     ?_USBCtrlTrfInHandler:	
  2566                           ; 0 bytes @ 0x0
  2567                           
  2568  0070                     ?_USBCheckStdRequest:	
  2569                           ; 0 bytes @ 0x0
  2570                           
  2571  0070                     ?_USBStdFeatureReqHandler:	
  2572                           ; 0 bytes @ 0x0
  2573                           
  2574  0070                     ?_SYSTEM_Initialize:	
  2575                           ; 0 bytes @ 0x0
  2576                           
  2577  0070                     ?_SYS_InterruptHigh:	
  2578                           ; 0 bytes @ 0x0
  2579                           
  2580  0070                     ??_SYS_InterruptHigh:	
  2581                           ; 0 bytes @ 0x0
  2582                           
  2583  0070                     ?_APP_LEDUpdateUSBStatus:	
  2584                           ; 0 bytes @ 0x0
  2585                           
  2586  0070                     ?_main:	
  2587                           ; 0 bytes @ 0x0
  2588                           
  2589  0070                     ?_scan_init:	
  2590                           ; 0 bytes @ 0x0
  2591                           
  2592  0070                     ??_scan_init:	
  2593                           ; 0 bytes @ 0x0
  2594                           
  2595  0070                     ?_set_timer:	
  2596                           ; 0 bytes @ 0x0
  2597                           
  2598  0070                     ??_set_timer:	
  2599                           ; 0 bytes @ 0x0
  2600                           
  2601  0070                     ??_waiting_for_timer:	
  2602                           ; 0 bytes @ 0x0
  2603                           
  2604  0070                     ?_set_clock_and_data:	
  2605                           ; 0 bytes @ 0x0
  2606                           
  2607  0070                     ??_get_data:	
  2608                           ; 0 bytes @ 0x0
  2609                           
  2610  0070                     ??_is_end_of_scan:	
  2611                           ; 0 bytes @ 0x0
  2612                           
  2613  0070                     ?_run_adc:	
  2614                           ; 0 bytes @ 0x0
  2615                           
  2616  0070                     ??_run_adc:	
  2617                           ; 0 bytes @ 0x0
  2618                           
  2619  0070                     ??_is_adc_ready:	
  2620                           ; 0 bytes @ 0x0
  2621                           
  2622  0070                     ??_get_adc:	
  2623                           ; 0 bytes @ 0x0
  2624                           
  2625  0070                     ?_USBCtrlEPAllowDataStage:	
  2626                           ; 0 bytes @ 0x0
  2627                           
  2628  0070                     ?_USBCtrlEPServiceComplete:	
  2629                           ; 0 bytes @ 0x0
  2630                           
  2631  0070                     ?_USBCtrlTrfRxService:	
  2632                           ; 0 bytes @ 0x0
  2633                           
  2634  0070                     ?_USBStdSetCfgHandler:	
  2635                           ; 0 bytes @ 0x0
  2636                           
  2637  0070                     ?_USBStdGetDscHandler:	
  2638                           ; 0 bytes @ 0x0
  2639                           
  2640  0070                     ??_USBStdGetDscHandler:	
  2641                           ; 0 bytes @ 0x0
  2642                           
  2643  0070                     ?_USBStdGetStatusHandler:	
  2644                           ; 0 bytes @ 0x0
  2645                           
  2646  0070                     ??_USBStdGetStatusHandler:	
  2647                           ; 0 bytes @ 0x0
  2648                           
  2649  0070                     ?_USBTransferOnePacket:	
  2650                           ; 0 bytes @ 0x0
  2651                           
  2652  0070                     ?_memset:	
  2653                           ; 1 bytes @ 0x0
  2654                           
  2655  0070                     ?_waiting_for_timer:	
  2656                           ; 1 bytes @ 0x0
  2657                           
  2658  0070                     ?_get_data:	
  2659                           ; 1 bytes @ 0x0
  2660                           
  2661  0070                     ?_is_end_of_scan:	
  2662                           ; 1 bytes @ 0x0
  2663                           
  2664  0070                     ?_is_adc_ready:	
  2665                           ; 1 bytes @ 0x0
  2666                           
  2667  0070                     ?_get_adc:	
  2668                           ; 1 bytes @ 0x0
  2669                           
  2670  0070                     _waiting_for_timer$810:	
  2671                           ; 1 bytes @ 0x0
  2672                           
  2673  0070                     set_clock_and_data@d:	
  2674                           ; 1 bytes @ 0x0
  2675                           
  2676  0070                     is_end_of_scan@res:	
  2677                           ; 1 bytes @ 0x0
  2678                           
  2679  0070                     LED_On@led:	
  2680                           ; 1 bytes @ 0x0
  2681                           
  2682  0070                     LED_Off@led:	
  2683                           ; 1 bytes @ 0x0
  2684                           
  2685  0070                     LED_Enable@led:	
  2686                           ; 1 bytes @ 0x0
  2687                           
  2688  0070                     USBTransferOnePacket@dir:	
  2689                           ; 1 bytes @ 0x0
  2690                           
  2691  0070                     USBConfigureEndpoint@direction:	
  2692                           ; 1 bytes @ 0x0
  2693                           
  2694  0070                     USBCtrlTrfTxService@byteToSend:	
  2695                           ; 1 bytes @ 0x0
  2696                           
  2697  0070                     USBStdGetStatusHandler@p:	
  2698                           ; 1 bytes @ 0x0
  2699                           
  2700  0070                     memset@c:	
  2701                           ; 1 bytes @ 0x0
  2702                           
  2703                           
  2704                           ; 2 bytes @ 0x0
  2705  0070                     	ds	1
  2706  0071                     ??_USBConfigureEndpoint:	
  2707  0071                     ??_USBCtrlTrfInHandler:	
  2708                           ; 0 bytes @ 0x1
  2709                           
  2710  0071                     ??_SYSTEM_Initialize:	
  2711                           ; 0 bytes @ 0x1
  2712                           
  2713  0071                     ??_APP_LEDUpdateUSBStatus:	
  2714                           ; 0 bytes @ 0x1
  2715                           
  2716  0071                     ??_set_clock_and_data:	
  2717                           ; 0 bytes @ 0x1
  2718                           
  2719  0071                     ?_process_level:	
  2720                           ; 0 bytes @ 0x1
  2721                           
  2722  0071                     ??_USBCtrlEPAllowDataStage:	
  2723                           ; 0 bytes @ 0x1
  2724                           
  2725  0071                     SYSTEM_Initialize@state:	
  2726                           ; 0 bytes @ 0x1
  2727                           
  2728  0071                     process_level@old_level:	
  2729                           ; 1 bytes @ 0x1
  2730                           
  2731  0071                     USBTransferOnePacket@data:	
  2732                           ; 1 bytes @ 0x1
  2733                           
  2734                           
  2735                           ; 2 bytes @ 0x1
  2736  0071                     	ds	1
  2737  0072                     ??_USBCtrlTrfRxService:	
  2738  0072                     set_clock_and_data@c:	
  2739                           ; 0 bytes @ 0x2
  2740                           
  2741  0072                     process_level@new_level:	
  2742                           ; 1 bytes @ 0x2
  2743                           
  2744  0072                     USBConfigureEndpoint@EPNum:	
  2745                           ; 1 bytes @ 0x2
  2746                           
  2747  0072                     USBDeviceInit@p:	
  2748                           ; 1 bytes @ 0x2
  2749                           
  2750  0072                     memset@n:	
  2751                           ; 2 bytes @ 0x2
  2752                           
  2753                           
  2754                           ; 2 bytes @ 0x2
  2755  0072                     	ds	1
  2756  0073                     ??_process_level:	
  2757  0073                     ??_USBCtrlEPServiceComplete:	
  2758                           ; 0 bytes @ 0x3
  2759                           
  2760  0073                     USBTransferOnePacket@len:	
  2761                           ; 0 bytes @ 0x3
  2762                           
  2763  0073                     USBConfigureEndpoint@handle:	
  2764                           ; 1 bytes @ 0x3
  2765                           
  2766  0073                     USBCtrlTrfInHandler@lastDTS:	
  2767                           ; 1 bytes @ 0x3
  2768                           
  2769                           
  2770                           ; 1 bytes @ 0x3
  2771  0073                     	ds	1
  2772  0074                     ?_USBEnableEndpoint:	
  2773  0074                     ??_USBTransferOnePacket:	
  2774                           ; 0 bytes @ 0x4
  2775                           
  2776  0074                     ??_memset:	
  2777                           ; 0 bytes @ 0x4
  2778                           
  2779  0074                     USBDeviceInit@i_1882:	
  2780                           ; 0 bytes @ 0x4
  2781                           
  2782  0074                     USBEnableEndpoint@options:	
  2783                           ; 1 bytes @ 0x4
  2784                           
  2785  0074                     USBCtrlTrfRxService@i:	
  2786                           ; 1 bytes @ 0x4
  2787                           
  2788  0074                     memset@p1:	
  2789                           ; 1 bytes @ 0x4
  2790                           
  2791  0074                     process_level@current_state:	
  2792                           ; 1 bytes @ 0x4
  2793                           
  2794                           
  2795                           ; 2 bytes @ 0x4
  2796  0074                     	ds	1
  2797  0075                     ??_USBEnableEndpoint:	
  2798  0075                     USBDeviceInit@i:	
  2799                           ; 0 bytes @ 0x5
  2800                           
  2801  0075                     USBCtrlTrfRxService@byteToRead:	
  2802                           ; 1 bytes @ 0x5
  2803                           
  2804  0075                     memset@p:	
  2805                           ; 1 bytes @ 0x5
  2806                           
  2807                           
  2808                           ; 1 bytes @ 0x5
  2809  0075                     	ds	1
  2810  0076                     ??_USBCtrlTrfOutHandler:	
  2811  0076                     process_level@off_flag:	
  2812                           ; 0 bytes @ 0x6
  2813                           
  2814  0076                     USBTransferOnePacket@ep:	
  2815                           ; 1 bytes @ 0x6
  2816                           
  2817                           
  2818                           ; 1 bytes @ 0x6
  2819  0076                     	ds	1
  2820  0077                     _process_level$847:	
  2821  0077                     USBTransferOnePacket@handle:	
  2822                           ; 1 bytes @ 0x7
  2823                           
  2824  0077                     USBEnableEndpoint@p:	
  2825                           ; 1 bytes @ 0x7
  2826                           
  2827                           
  2828                           ; 2 bytes @ 0x7
  2829  0077                     	ds	1
  2830  0078                     _process_level$848:	
  2831                           
  2832                           ; 2 bytes @ 0x8
  2833  0078                     	ds	1
  2834  0079                     USBEnableEndpoint@ep:	
  2835                           
  2836                           ; 1 bytes @ 0x9
  2837  0079                     	ds	1
  2838  007A                     ??_APP_DeviceAudioMIDIInitialize:	
  2839  007A                     ??_USBWakeFromSuspend:	
  2840                           ; 0 bytes @ 0xA
  2841                           
  2842  007A                     ??_USBSuspend:	
  2843                           ; 0 bytes @ 0xA
  2844                           
  2845  007A                     ??_USBStdFeatureReqHandler:	
  2846                           ; 0 bytes @ 0xA
  2847                           
  2848  007A                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2849                           ; 0 bytes @ 0xA
  2850                           
  2851  007A                     ??_USBStdSetCfgHandler:	
  2852                           ; 0 bytes @ 0xA
  2853                           
  2854  007A                     process_level@on_flag:	
  2855                           ; 0 bytes @ 0xA
  2856                           
  2857  007A                     USBStdSetCfgHandler@p:	
  2858                           ; 1 bytes @ 0xA
  2859                           
  2860                           
  2861                           ; 2 bytes @ 0xA
  2862  007A                     	ds	1
  2863  007B                     process_level@filtered_state:	
  2864                           
  2865                           ; 1 bytes @ 0xB
  2866  007B                     	ds	1
  2867  007C                     process_level@idx_key:	
  2868  007C                     USBStdSetCfgHandler@i_2210:	
  2869                           ; 1 bytes @ 0xC
  2870                           
  2871                           
  2872                           ; 1 bytes @ 0xC
  2873  007C                     	ds	1
  2874  007D                     ?_store_key_level:	
  2875  007D                     store_key_level@end_of_scan:	
  2876                           ; 1 bytes @ 0xD
  2877                           
  2878  007D                     USBStdSetCfgHandler@i:	
  2879                           ; 1 bytes @ 0xD
  2880                           
  2881                           
  2882                           ; 1 bytes @ 0xD
  2883  007D                     	ds	1
  2884  007E                     ??_APP_DeviceAudioMIDITasks:	
  2885  007E                     ??_scan_task:	
  2886                           ; 0 bytes @ 0xE
  2887                           
  2888  007E                     ??_USBCtrlTrfSetupHandler:	
  2889                           ; 0 bytes @ 0xE
  2890                           
  2891  007E                     ??_USBCheckStdRequest:	
  2892                           ; 0 bytes @ 0xE
  2893                           
  2894  007E                     ??_main:	
  2895                           ; 0 bytes @ 0xE
  2896                           
  2897  007E                     ??_store_key_level:	
  2898                           ; 0 bytes @ 0xE
  2899                           
  2900                           
  2901                           	psect	cstackBANK0
  2902  0060                     __pcstackBANK0:	
  2903                           ; 0 bytes @ 0xE
  2904                           
  2905  0060                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  2906  0060                     store_key_level@level:	
  2907                           ; 1 bytes @ 0x0
  2908                           
  2909  0060                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2910                           ; 1 bytes @ 0x0
  2911                           
  2912                           
  2913                           ; 2 bytes @ 0x0
  2914  0060                     	ds	1
  2915  0061                     ?_scan_task:	
  2916  0061                     scan_task@velocity:	
  2917                           ; 1 bytes @ 0x1
  2918                           
  2919                           
  2920                           ; 1 bytes @ 0x1
  2921  0061                     	ds	1
  2922  0062                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2923  0062                     _scan_task$858:	
  2924                           ; 1 bytes @ 0x2
  2925                           
  2926                           
  2927                           ; 2 bytes @ 0x2
  2928  0062                     	ds	1
  2929  0063                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2930                           
  2931                           ; 2 bytes @ 0x3
  2932  0063                     	ds	1
  2933  0064                     _scan_task$859:	
  2934                           
  2935                           ; 2 bytes @ 0x4
  2936  0064                     	ds	1
  2937  0065                     USBStdFeatureReqHandler@pUEP:	
  2938                           
  2939                           ; 2 bytes @ 0x5
  2940  0065                     	ds	1
  2941  0066                     scan_task@note:	
  2942                           
  2943                           ; 1 bytes @ 0x6
  2944  0066                     	ds	1
  2945  0067                     USBStdFeatureReqHandler@current_ep_data:	
  2946  0067                     _APP_DeviceAudioMIDITasks$417:	
  2947                           ; 1 bytes @ 0x7
  2948                           
  2949                           
  2950                           ; 2 bytes @ 0x7
  2951  0067                     	ds	1
  2952  0068                     USBStdFeatureReqHandler@p:	
  2953                           
  2954                           ; 1 bytes @ 0x8
  2955  0068                     	ds	1
  2956  0069                     ??_USBCtrlEPService:	
  2957  0069                     _APP_DeviceAudioMIDITasks$451:	
  2958                           ; 0 bytes @ 0x9
  2959                           
  2960                           
  2961                           ; 2 bytes @ 0x9
  2962  0069                     	ds	2
  2963  006B                     USBCtrlEPService@setup_cnt:	
  2964  006B                     _APP_DeviceAudioMIDITasks$452:	
  2965                           ; 1 bytes @ 0xB
  2966                           
  2967                           
  2968                           ; 2 bytes @ 0xB
  2969  006B                     	ds	1
  2970  006C                     ??_USBDeviceTasks:	
  2971                           
  2972                           ; 0 bytes @ 0xC
  2973  006C                     	ds	1
  2974  006D                     APP_DeviceAudioMIDITasks@bscan:	
  2975  006D                     USBDeviceTasks@i:	
  2976                           ; 1 bytes @ 0xD
  2977                           
  2978                           
  2979                           ; 1 bytes @ 0xD
  2980  006D                     	ds	1
  2981  006E                     APP_DeviceAudioMIDITasks@scan_pitch:	
  2982                           
  2983                           ; 1 bytes @ 0xE
  2984  006E                     	ds	1
  2985  006F                     APP_DeviceAudioMIDITasks@velocity:	
  2986                           
  2987                           ; 1 bytes @ 0xF
  2988  006F                     	ds	1
  2989                           
  2990                           	psect	text3
  2991  0E50                     __ptext3:	
  2992 ;; *************** function _USBCtrlTrfInHandler *****************
  2993 ;; Defined at:
  2994 ;;		line 2618 in file "../framework/usb/usb_device.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;		None
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  lastDTS         1    3[COMMON] unsigned char 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;		None               void
  3001 ;; Registers used:
  3002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3003 ;; Tracked objects:
  3004 ;;		On entry : 1F/0
  3005 ;;		On exit  : 1F/0
  3006 ;;		Unchanged: FFFE0/0
  3007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3009 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3010 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3011 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3012 ;;Total ram usage:        3 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:    2
  3015 ;; This function calls:
  3016 ;;		_USBCtrlTrfTxService
  3017 ;; This function is called by:
  3018 ;;		_USBCtrlEPService
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           
  3023                           ;psect for function _USBCtrlTrfInHandler
  3024  0E50                     _USBCtrlTrfInHandler:	
  3025  0E50                     l3793:	
  3026                           ;incstack = 0
  3027                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3028                           
  3029                           
  3030                           ;usb_device.c: 2619: uint8_t lastDTS;
  3031                           ;usb_device.c: 2621: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  3032  0E50  0850               	movf	_pBDTEntryIn,w
  3033  0E51  0086               	movwf	6
  3034  0E52  3000               	movlw	0
  3035  0E53  0187               	clrf	7
  3036  0E54  1B01               	btfsc	1,6
  3037  0E55  3001               	movlw	1
  3038  0E56  00F3               	movwf	USBCtrlTrfInHandler@lastDTS
  3039                           
  3040                           ;usb_device.c: 2624: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  3041  0E57  3004               	movlw	4
  3042  0E58  06D0               	xorwf	_pBDTEntryIn,f
  3043                           
  3044                           ;usb_device.c: 2629: if(USBDeviceState == ADR_PENDING_STATE)
  3045  0E59  0853               	movf	_USBDeviceState,w
  3046  0E5A  3A08               	xorlw	8
  3047  0E5B  1D03               	skipz
  3048  0E5C  2E69               	goto	l873
  3049                           
  3050                           ;usb_device.c: 2630: {
  3051                           ;usb_device.c: 2631: UADDR = (SetupPkt.bDevADR & 0x7F);
  3052  0E5D  0842               	movf	66,w	;volatile
  3053  0E5E  397F               	andlw	127
  3054  0E5F  003D               	movlb	29	; select bank29
  3055  0E60  0096               	movwf	22	;volatile
  3056                           
  3057                           ;usb_device.c: 2632: if(UADDR != 0u)
  3058  0E61  0816               	movf	22,w
  3059  0E62  1903               	btfsc	3,2
  3060  0E63  2E66               	goto	l3805
  3061                           
  3062                           ;usb_device.c: 2633: {
  3063                           ;usb_device.c: 2634: USBDeviceState=ADDRESS_STATE;
  3064  0E64  3010               	movlw	16
  3065  0E65  2E67               	goto	L2
  3066  0E66                     l3805:	
  3067                           ;usb_device.c: 2635: }
  3068                           
  3069                           
  3070                           ;usb_device.c: 2636: else
  3071                           ;usb_device.c: 2637: {
  3072                           ;usb_device.c: 2638: USBDeviceState=DEFAULT_STATE;
  3073  0E66  3004               	movlw	4
  3074  0E67                     L2:	
  3075  0E67  0020               	movlb	0	; select bank0
  3076  0E68  00D3               	movwf	_USBDeviceState
  3077  0E69                     l873:	
  3078                           
  3079                           ;usb_device.c: 2639: }
  3080                           ;usb_device.c: 2640: }
  3081                           ;usb_device.c: 2643: if(controlTransferState == 1)
  3082  0E69  0B55               	decfsz	_controlTransferState,w
  3083  0E6A  2E92               	goto	l876
  3084                           
  3085                           ;usb_device.c: 2644: {
  3086                           ;usb_device.c: 2645: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  3087  0E6B  3048               	movlw	72
  3088  0E6C  00F1               	movwf	??_USBCtrlTrfInHandler
  3089  0E6D  01F2               	clrf	??_USBCtrlTrfInHandler+1
  3090  0E6E  0850               	movf	_pBDTEntryIn,w
  3091  0E6F  3E02               	addlw	2
  3092  0E70  0086               	movwf	6
  3093  0E71  0187               	clrf	7
  3094  0E72  0871               	movf	??_USBCtrlTrfInHandler,w
  3095  0E73  3FC0               	movwi [0]fsr1
  3096  0E74  0872               	movf	??_USBCtrlTrfInHandler+1,w
  3097  0E75  3FC1               	movwi [1]fsr1
  3098                           
  3099                           ;usb_device.c: 2646: USBCtrlTrfTxService();
  3100  0E76  2716  318E         	fcall	_USBCtrlTrfTxService
  3101                           
  3102                           ;usb_device.c: 2652: if(shortPacketStatus == 2)
  3103  0E78  0021               	movlb	1	; select bank1
  3104  0E79  086D               	movf	_shortPacketStatus^(0+128),w
  3105  0E7A  3A02               	xorlw	2
  3106  0E7B  1D03               	skipz
  3107  0E7C  2E83               	goto	l3815
  3108                           
  3109                           ;usb_device.c: 2653: {
  3110                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val = 0x04;
  3111  0E7D  0020               	movlb	0	; select bank0
  3112  0E7E  0850               	movf	_pBDTEntryIn,w
  3113  0E7F  0086               	movwf	6
  3114  0E80  3004               	movlw	4
  3115  0E81  0187               	clrf	7
  3116                           
  3117                           ;usb_device.c: 2657: pBDTEntryIn[0]->STAT.Val |= 0x80;
  3118                           
  3119                           ;usb_device.c: 2658: }
  3120  0E82  2F6C               	ljmp	PL226	;call to abstracted procedure
  3121  0E83                     l3815:	
  3122                           
  3123                           ;usb_device.c: 2659: else
  3124                           ;usb_device.c: 2660: {
  3125                           ;usb_device.c: 2661: if(lastDTS == 0)
  3126  0E83  08F3               	movf	USBCtrlTrfInHandler@lastDTS,f
  3127  0E84  1D03               	skipz
  3128  0E85  2E8C               	goto	l3819
  3129                           
  3130                           ;usb_device.c: 2662: {
  3131                           ;usb_device.c: 2663: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  3132  0E86  0020               	movlb	0	; select bank0
  3133  0E87  0850               	movf	_pBDTEntryIn,w
  3134  0E88  0086               	movwf	6
  3135  0E89  3048               	movlw	72
  3136  0E8A  0187               	clrf	7
  3137                           
  3138                           ;usb_device.c: 2664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  3139                           
  3140                           ;usb_device.c: 2665: }
  3141  0E8B  2F6C               	ljmp	PL226	;call to abstracted procedure
  3142  0E8C                     l3819:	
  3143                           
  3144                           ;usb_device.c: 2666: else
  3145                           ;usb_device.c: 2667: {
  3146                           ;usb_device.c: 2668: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  3147  0E8C  0020               	movlb	0	; select bank0
  3148  0E8D  0850               	movf	_pBDTEntryIn,w
  3149  0E8E  0086               	movwf	6
  3150  0E8F  3008               	movlw	8
  3151  0E90  0187               	clrf	7
  3152                           
  3153                           ;usb_device.c: 2669: pBDTEntryIn[0]->STAT.Val |= 0x80;
  3154  0E91  2F6C               	ljmp	PL226	;call to abstracted procedure
  3155  0E92                     l876:	
  3156                           
  3157                           ;usb_device.c: 2673: else
  3158                           ;usb_device.c: 2674: {
  3159                           ;usb_device.c: 2678: if(outPipes[0].info.bits.busy == 1)
  3160  0E92  0022               	movlb	2	; select bank2
  3161  0E93  1FC9               	btfss	(_outPipes^(0+256)+2),7
  3162  0E94  2E9C               	goto	l3827
  3163                           
  3164                           ;usb_device.c: 2679: {
  3165                           ;usb_device.c: 2680: if(outPipes[0].pFunc != (0))
  3166  0E95  084C               	movf	(_outPipes+5)^(0+256),w
  3167  0E96  1903               	btfsc	3,2
  3168  0E97  2E9B               	goto	l3825
  3169                           
  3170                           ;usb_device.c: 2681: {
  3171                           ;usb_device.c: 2682: outPipes[0].pFunc();
  3172  0E98  084C               	movf	(_outPipes+5)^(0+256),w
  3173  0E99  318E  2E50         	ljmp	$	;if you get stuck here, you called an invalid pointer
  3174  0E9B                     l3825:	
  3175                           
  3176                           ;usb_device.c: 2683: }
  3177                           ;usb_device.c: 2684: outPipes[0].info.bits.busy = 0;
  3178  0E9B  13C9               	bcf	(_outPipes^(0+256)+2),7
  3179  0E9C                     l3827:	
  3180                           
  3181                           ;usb_device.c: 2685: }
  3182                           ;usb_device.c: 2687: controlTransferState = 0;
  3183  0E9C  0020               	movlb	0	; select bank0
  3184  0E9D  01D5               	clrf	_controlTransferState
  3185  0E9E  0008               	return
  3186  0E9F                     __end_of_USBCtrlTrfInHandler:	
  3187  0E9F                     __ptext13:	
  3188 ;; *************** function _USBCtrlEPServiceComplete *****************
  3189 ;; Defined at:
  3190 ;;		line 1636 in file "../framework/usb/usb_device.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;		None
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;		None
  3195 ;; Return value:  Size  Location     Type
  3196 ;;		None               void
  3197 ;; Registers used:
  3198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/2
  3201 ;;		On exit  : 1E/0
  3202 ;;		Unchanged: FFFE0/0
  3203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3206 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3207 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3208 ;;Total ram usage:        2 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; Hardware stack levels required when called:    3
  3211 ;; This function calls:
  3212 ;;		_USBCtrlEPAllowStatusStage
  3213 ;;		_USBCtrlEPAllowDataStage
  3214 ;; This function is called by:
  3215 ;;		_USBCtrlTrfSetupHandler
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           
  3220                           ;psect for function _USBCtrlEPServiceComplete
  3221  0E9F                     _USBCtrlEPServiceComplete:	
  3222  0E9F                     l3551:	
  3223                           ;incstack = 0
  3224                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3225                           
  3226                           
  3227                           ;usb_device.c: 1641: UCONbits.PKTDIS = 0;
  3228  0E9F  003D               	movlb	29	; select bank29
  3229  0EA0  120E               	bcf	14,4	;volatile
  3230                           
  3231                           ;usb_device.c: 1647: if(inPipes[0].info.bits.busy == 0)
  3232  0EA1  0020               	movlb	0	; select bank0
  3233  0EA2  1BDB               	btfsc	_inPipes+2,7
  3234  0EA3  2EC0               	goto	l761
  3235                           
  3236                           ;usb_device.c: 1648: {
  3237                           ;usb_device.c: 1649: if(outPipes[0].info.bits.busy == 1)
  3238  0EA4  0022               	movlb	2	; select bank2
  3239  0EA5  1FC9               	btfss	(_outPipes^(0+256)+2),7
  3240  0EA6  2EB3               	goto	l3565
  3241                           
  3242                           ;usb_device.c: 1650: {
  3243                           ;usb_device.c: 1651: controlTransferState = 2;
  3244  0EA7  3002               	movlw	2
  3245  0EA8  0020               	movlb	0	; select bank0
  3246  0EA9  00D5               	movwf	_controlTransferState
  3247                           
  3248                           ;usb_device.c: 1662: if(USBDeferOUTDataStagePackets == 0)
  3249  0EAA  0021               	movlb	1	; select bank1
  3250  0EAB  08E3               	movf	_USBDeferOUTDataStagePackets^(0+128),f
  3251  0EAC  1D03               	skipz
  3252  0EAD  2EAF               	goto	l3561
  3253                           
  3254                           ;usb_device.c: 1663: {
  3255                           ;usb_device.c: 1664: USBCtrlEPAllowDataStage();
  3256  0EAE  26DE               	fcall	_USBCtrlEPAllowDataStage
  3257  0EAF                     l3561:	
  3258                           
  3259                           ;usb_device.c: 1665: }
  3260                           ;usb_device.c: 1669: USBStatusStageEnabledFlag2 = 0;
  3261  0EAF  0021               	movlb	1	; select bank1
  3262  0EB0  01E5               	clrf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  3263                           
  3264                           ;usb_device.c: 1670: USBStatusStageEnabledFlag1 = 0;
  3265  0EB1  01E4               	clrf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  3266                           
  3267                           ;usb_device.c: 1671: }
  3268  0EB2  0008               	return
  3269  0EB3                     l3565:	
  3270                           
  3271                           ;usb_device.c: 1672: else
  3272                           ;usb_device.c: 1673: {
  3273                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->CNT = 8;
  3274  0EB3  0020               	movlb	0	; select bank0
  3275  0EB4  0A57               	incf	_pBDTEntryEP0OutNext,w
  3276                           
  3277                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3278                           
  3279                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  3280  0EB5  275B  318E         	fcall	PL222	;call to abstracted procedure
  3281  0EB7  300C               	movlw	12
  3282  0EB8  0081               	movwf	1
  3283                           
  3284                           ;usb_device.c: 1681: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3285  0EB9  0857               	movf	_pBDTEntryEP0OutNext,w
  3286  0EBA  0086               	movwf	6
  3287  0EBB  1781               	bsf	1,7
  3288                           
  3289                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val = 0x04;
  3290  0EBC  0850               	movf	_pBDTEntryIn,w
  3291  0EBD  0086               	movwf	6
  3292  0EBE  3004               	movlw	4
  3293                           
  3294                           ;usb_device.c: 1683: pBDTEntryIn[0]->STAT.Val |= 0x80;
  3295  0EBF  2F6C               	ljmp	PL226	;call to abstracted procedure
  3296  0EC0                     l761:	
  3297                           
  3298                           ;usb_device.c: 1686: else
  3299                           ;usb_device.c: 1687: {
  3300                           ;usb_device.c: 1688: if(SetupPkt.DataDir == (0x80>>7))
  3301  0EC0  1FC0               	btfss	64,7	;volatile
  3302  0EC1  2ED3               	goto	l3581
  3303                           
  3304                           ;usb_device.c: 1689: {
  3305                           ;usb_device.c: 1690: controlTransferState = 1;
  3306  0EC2  01D5               	clrf	_controlTransferState
  3307  0EC3  0AD5               	incf	_controlTransferState,f
  3308                           
  3309                           ;usb_device.c: 1704: if(USBDeferINDataStagePackets == 0)
  3310  0EC4  0021               	movlb	1	; select bank1
  3311  0EC5  08E2               	movf	_USBDeferINDataStagePackets^(0+128),f
  3312  0EC6  1D03               	skipz
  3313  0EC7  2ECA               	goto	l3573
  3314                           
  3315                           ;usb_device.c: 1705: {
  3316                           ;usb_device.c: 1706: USBCtrlEPAllowDataStage();
  3317  0EC8  26DE  318E         	fcall	_USBCtrlEPAllowDataStage
  3318  0ECA                     l3573:	
  3319                           
  3320                           ;usb_device.c: 1707: }
  3321                           ;usb_device.c: 1729: USBStatusStageEnabledFlag2 = 0;
  3322  0ECA  0021               	movlb	1	; select bank1
  3323  0ECB  01E5               	clrf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  3324                           
  3325                           ;usb_device.c: 1730: USBStatusStageEnabledFlag1 = 0;
  3326  0ECC  01E4               	clrf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  3327                           
  3328                           ;usb_device.c: 1731: if(USBDeferStatusStagePacket == 0)
  3329  0ECD  0020               	movlb	0	; select bank0
  3330  0ECE  08D2               	movf	_USBDeferStatusStagePacket,f
  3331  0ECF  1D03               	skipz
  3332  0ED0  0008               	return
  3333                           
  3334                           ;usb_device.c: 1732: {
  3335                           ;usb_device.c: 1733: USBCtrlEPAllowStatusStage();
  3336  0ED1  3185  2DF8         	ljmp	l3395
  3337  0ED3                     l3581:	
  3338                           
  3339                           ;usb_device.c: 1736: else
  3340                           ;usb_device.c: 1737: {
  3341                           ;usb_device.c: 1748: controlTransferState = 2;
  3342  0ED3  3002               	movlw	2
  3343  0ED4  00D5               	movwf	_controlTransferState
  3344                           
  3345                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->CNT = 8;
  3346  0ED5  0A57               	incf	_pBDTEntryEP0OutNext,w
  3347                           
  3348                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3349                           
  3350                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  3351  0ED6  275B  318E         	fcall	PL222	;call to abstracted procedure
  3352  0ED8  3004               	movlw	4
  3353  0ED9  0081               	movwf	1
  3354                           
  3355                           ;usb_device.c: 1754: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3356  0EDA  0857               	movf	_pBDTEntryEP0OutNext,w
  3357  0EDB  0086               	movwf	6
  3358  0EDC  1781               	bsf	1,7
  3359  0EDD  2ECA               	goto	l3573
  3360  0EDE                     __end_of_USBCtrlEPServiceComplete:	
  3361                           ;usb_device.c: 1759: if(USBDeferStatusStagePacket == 0)
  3362                           
  3363                           ;usb_device.c: 1758: USBStatusStageEnabledFlag1 = 0;
  3364                           
  3365                           ;usb_device.c: 1757: USBStatusStageEnabledFlag2 = 0;
  3366                           
  3367  0EDE                     __ptext14:	
  3368 ;; *************** function _USBCtrlEPAllowDataStage *****************
  3369 ;; Defined at:
  3370 ;;		line 1508 in file "../framework/usb/usb_device.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;		None
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;		None
  3375 ;; Return value:  Size  Location     Type
  3376 ;;		None               void
  3377 ;; Registers used:
  3378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3379 ;; Tracked objects:
  3380 ;;		On entry : 1F/1
  3381 ;;		On exit  : 1F/0
  3382 ;;		Unchanged: FFFE0/0
  3383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3386 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3387 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3388 ;;Total ram usage:        2 bytes
  3389 ;; Hardware stack levels used:    1
  3390 ;; Hardware stack levels required when called:    2
  3391 ;; This function calls:
  3392 ;;		_USBCtrlTrfTxService
  3393 ;; This function is called by:
  3394 ;;		_USBCtrlEPServiceComplete
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398                           
  3399                           ;psect for function _USBCtrlEPAllowDataStage
  3400  0EDE                     _USBCtrlEPAllowDataStage:	
  3401                           
  3402                           ;usb_device.c: 1509: USBDeferINDataStagePackets = 0;
  3403                           
  3404                           ;incstack = 0
  3405                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3406  0EDE  01E2               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  3407                           
  3408                           ;usb_device.c: 1510: USBDeferOUTDataStagePackets = 0;
  3409  0EDF  01E3               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  3410                           
  3411                           ;usb_device.c: 1512: if(controlTransferState == 2)
  3412  0EE0  0020               	movlb	0	; select bank0
  3413  0EE1  0855               	movf	_controlTransferState,w
  3414  0EE2  3A02               	xorlw	2
  3415  0EE3  1D03               	skipz
  3416  0EE4  2EF8               	goto	l3499
  3417                           
  3418                           ;usb_device.c: 1513: {
  3419                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->CNT = 8;
  3420  0EE5  0A57               	incf	_pBDTEntryEP0OutNext,w
  3421  0EE6  0086               	movwf	6
  3422  0EE7  3008               	movlw	8
  3423  0EE8  0187               	clrf	7
  3424  0EE9  0081               	movwf	1
  3425                           
  3426                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  3427  0EEA  3048               	movlw	72
  3428  0EEB  00F1               	movwf	??_USBCtrlEPAllowDataStage
  3429  0EEC  01F2               	clrf	??_USBCtrlEPAllowDataStage+1
  3430  0EED  0857               	movf	_pBDTEntryEP0OutNext,w
  3431  0EEE  3E02               	addlw	2
  3432  0EEF  0086               	movwf	6
  3433  0EF0  0871               	movf	??_USBCtrlEPAllowDataStage,w
  3434  0EF1  3FC0               	movwi [0]fsr1
  3435  0EF2  0872               	movf	??_USBCtrlEPAllowDataStage+1,w
  3436  0EF3  3FC1               	movwi [1]fsr1
  3437                           
  3438                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  3439  0EF4  0857               	movf	_pBDTEntryEP0OutNext,w
  3440  0EF5  0086               	movwf	6
  3441  0EF6  3048               	movlw	72
  3442                           
  3443                           ;usb_device.c: 1518: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3444                           
  3445                           ;usb_device.c: 1519: }
  3446  0EF7  2FFB               	ljmp	PL234	;call to abstracted procedure
  3447  0EF8                     l3499:	
  3448                           
  3449                           ;usb_device.c: 1520: else
  3450                           ;usb_device.c: 1521: {
  3451                           ;usb_device.c: 1524: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  3452  0EF8  085D               	movf	_inPipes+4,w
  3453  0EF9  0247               	subwf	71,w	;volatile
  3454  0EFA  1D03               	skipz
  3455  0EFB  2EFE               	goto	u2455
  3456  0EFC  085C               	movf	_inPipes+3,w
  3457  0EFD  0246               	subwf	70,w	;volatile
  3458  0EFE                     u2455:	
  3459  0EFE  1803               	skipnc
  3460  0EFF  2F04               	goto	l3503
  3461                           
  3462                           ;usb_device.c: 1525: {
  3463                           ;usb_device.c: 1526: inPipes[0].wCount.Val = SetupPkt.wLength;
  3464  0F00  0847               	movf	71,w	;volatile
  3465  0F01  00DD               	movwf	_inPipes+4
  3466  0F02  0846               	movf	70,w	;volatile
  3467  0F03  00DC               	movwf	_inPipes+3
  3468  0F04                     l3503:	
  3469                           
  3470                           ;usb_device.c: 1527: }
  3471                           ;usb_device.c: 1528: USBCtrlTrfTxService();
  3472  0F04  2716  318E         	fcall	_USBCtrlTrfTxService
  3473                           
  3474                           ;usb_device.c: 1533: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  3475  0F06  3048               	movlw	72
  3476  0F07  00F1               	movwf	??_USBCtrlEPAllowDataStage
  3477  0F08  01F2               	clrf	??_USBCtrlEPAllowDataStage+1
  3478  0F09  0020               	movlb	0	; select bank0
  3479  0F0A  0850               	movf	_pBDTEntryIn,w
  3480  0F0B  3E02               	addlw	2
  3481  0F0C  0086               	movwf	6
  3482  0F0D  0187               	clrf	7
  3483  0F0E  0871               	movf	??_USBCtrlEPAllowDataStage,w
  3484  0F0F  3FC0               	movwi [0]fsr1
  3485  0F10  0872               	movf	??_USBCtrlEPAllowDataStage+1,w
  3486  0F11  3FC1               	movwi [1]fsr1
  3487                           
  3488                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  3489  0F12  0850               	movf	_pBDTEntryIn,w
  3490  0F13  0086               	movwf	6
  3491  0F14  3048               	movlw	72
  3492                           
  3493                           ;usb_device.c: 1535: pBDTEntryIn[0]->STAT.Val |= 0x80;
  3494  0F15  2F6C               	ljmp	PL226	;call to abstracted procedure
  3495  0F16                     __end_of_USBCtrlEPAllowDataStage:	
  3496  0F16                     __ptext15:	
  3497 ;; *************** function _USBCtrlTrfTxService *****************
  3498 ;; Defined at:
  3499 ;;		line 1791 in file "../framework/usb/usb_device.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;		None
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;  byteToSend      1    0[COMMON] unsigned char 
  3504 ;; Return value:  Size  Location     Type
  3505 ;;		None               void
  3506 ;; Registers used:
  3507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3508 ;; Tracked objects:
  3509 ;;		On entry : 1F/0
  3510 ;;		On exit  : 1E/0
  3511 ;;		Unchanged: FFFE0/0
  3512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3514 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3516 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3517 ;;Total ram usage:        1 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; Hardware stack levels required when called:    1
  3520 ;; This function calls:
  3521 ;;		Nothing
  3522 ;; This function is called by:
  3523 ;;		_USBCtrlEPAllowDataStage
  3524 ;;		_USBCtrlTrfInHandler
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           
  3529                           ;psect for function _USBCtrlTrfTxService
  3530  0F16                     _USBCtrlTrfTxService:	
  3531                           
  3532                           ;usb_device.c: 1792: uint8_t byteToSend;
  3533                           ;usb_device.c: 1796: byteToSend = 8;
  3534                           
  3535                           ;incstack = 0
  3536                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  3537  0F16  3008               	movlw	8
  3538  0F17  00F0               	movwf	USBCtrlTrfTxService@byteToSend
  3539                           
  3540                           ;usb_device.c: 1797: if(inPipes[0].wCount.Val < (uint8_t)8)
  3541  0F18  3000               	movlw	0
  3542  0F19  025D               	subwf	_inPipes+4,w
  3543  0F1A  3008               	movlw	8
  3544  0F1B  1903               	skipnz
  3545  0F1C  025C               	subwf	_inPipes+3,w
  3546  0F1D  1803               	skipnc
  3547  0F1E  2F2C               	goto	l774
  3548                           
  3549                           ;usb_device.c: 1798: {
  3550                           ;usb_device.c: 1799: byteToSend = inPipes[0].wCount.Val;
  3551  0F1F  085C               	movf	_inPipes+3,w
  3552  0F20  00F0               	movwf	USBCtrlTrfTxService@byteToSend
  3553                           
  3554                           ;usb_device.c: 1806: if(shortPacketStatus == 0)
  3555  0F21  0021               	movlb	1	; select bank1
  3556  0F22  08ED               	movf	_shortPacketStatus^(0+128),f
  3557  0F23  1D03               	skipz
  3558  0F24  2F28               	goto	l3519
  3559                           
  3560                           ;usb_device.c: 1807: {
  3561                           ;usb_device.c: 1808: shortPacketStatus = 1;
  3562  0F25  01ED               	clrf	_shortPacketStatus^(0+128)
  3563  0F26  0AED               	incf	_shortPacketStatus^(0+128),f
  3564                           
  3565                           ;usb_device.c: 1809: }
  3566  0F27  2F2C               	goto	l774
  3567  0F28                     l3519:	
  3568                           
  3569                           ;usb_device.c: 1810: else if(shortPacketStatus == 1)
  3570  0F28  0B6D               	decfsz	_shortPacketStatus^(0+128),w
  3571  0F29  2F2C               	goto	l774
  3572                           
  3573                           ;usb_device.c: 1811: {
  3574                           ;usb_device.c: 1812: shortPacketStatus = 2;
  3575  0F2A  3002               	movlw	2
  3576  0F2B  00ED               	movwf	_shortPacketStatus^(0+128)
  3577  0F2C                     l774:	
  3578                           
  3579                           ;usb_device.c: 1813: }
  3580                           ;usb_device.c: 1814: }
  3581                           ;usb_device.c: 1818: inPipes[0].wCount.Val -= byteToSend;
  3582  0F2C  0870               	movf	USBCtrlTrfTxService@byteToSend,w
  3583  0F2D  0020               	movlb	0	; select bank0
  3584  0F2E  02DC               	subwf	_inPipes+3,f
  3585  0F2F  1C03               	skipc
  3586  0F30  03DD               	decf	_inPipes+4,f
  3587                           
  3588                           ;usb_device.c: 1823: pBDTEntryIn[0]->CNT = byteToSend;
  3589  0F31  0A50               	incf	_pBDTEntryIn,w
  3590  0F32  0086               	movwf	6
  3591  0F33  0187               	clrf	7
  3592  0F34  0870               	movf	USBCtrlTrfTxService@byteToSend,w
  3593  0F35  0081               	movwf	1
  3594                           
  3595                           ;usb_device.c: 1827: pDst = ( uint8_t*)CtrlTrfData;
  3596  0F36  3048               	movlw	72
  3597  0F37  0021               	movlb	1	; select bank1
  3598  0F38  00EA               	movwf	_pDst^(0+128)
  3599                           
  3600                           ;usb_device.c: 1828: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  3601  0F39  0020               	movlb	0	; select bank0
  3602  0F3A  1C5B               	btfss	_inPipes+2,0
  3603  0F3B  2F3F               	goto	l3539
  3604  0F3C  2F45               	goto	l3549
  3605  0F3D                     l3531:	
  3606                           
  3607                           ;usb_device.c: 1831: {
  3608                           ;usb_device.c: 1832: *pDst++ = *inPipes[0].pSrc.bRom++;
  3609                           
  3610                           ;usb_device.c: 1833: byteToSend--;
  3611  0F3D  2749  318E         	fcall	PL220	;call to abstracted procedure
  3612  0F3F                     l3539:	
  3613  0F3F  08F0               	movf	USBCtrlTrfTxService@byteToSend,f
  3614  0F40  1903               	btfsc	3,2
  3615  0F41  0008               	return
  3616  0F42  2F3D               	goto	l3531
  3617  0F43                     l3541:	
  3618                           
  3619                           ;usb_device.c: 1839: {
  3620                           ;usb_device.c: 1840: *pDst++ = *inPipes[0].pSrc.bRam++;
  3621                           
  3622                           ;usb_device.c: 1841: byteToSend--;
  3623  0F43  2749  318E         	fcall	PL220	;call to abstracted procedure
  3624  0F45                     l3549:	
  3625  0F45  08F0               	movf	USBCtrlTrfTxService@byteToSend,f
  3626  0F46  1903               	btfsc	3,2
  3627  0F47  0008               	return
  3628  0F48  2F43               	goto	l3541
  3629  0F49                     __end_of_USBCtrlTrfTxService:	
  3630  0F49                     PL220:	
  3631  0F49  0021               	movlb	1	; select bank1
  3632  0F4A  086A               	movf	_pDst^(0+128),w
  3633  0F4B  0086               	movwf	6
  3634  0F4C  0187               	clrf	7
  3635  0F4D  0020               	movlb	0	; select bank0
  3636  0F4E  0859               	movf	_inPipes,w
  3637  0F4F  0084               	movwf	4
  3638  0F50  085A               	movf	_inPipes+1,w
  3639  0F51  0085               	movwf	5
  3640  0F52  0800               	movf	0,w	;code access
  3641  0F53  0081               	movwf	1
  3642  0F54  0AD9               	incf	_inPipes,f
  3643  0F55  1903               	skipnz
  3644  0F56  0ADA               	incf	_inPipes+1,f
  3645  0F57  0021               	movlb	1	; select bank1
  3646  0F58  0AEA               	incf	_pDst^(0+128),f
  3647  0F59  03F0               	decf	USBCtrlTrfTxService@byteToSend,f
  3648  0F5A  0008               	return
  3649  0F5B                     __end_ofPL220:	
  3650  0F5B                     PL222:	
  3651  0F5B  0086               	movwf	6
  3652  0F5C  3008               	movlw	8
  3653  0F5D  0187               	clrf	7
  3654  0F5E  0081               	movwf	1
  3655  0F5F  3040               	movlw	64
  3656  0F60  00F3               	movwf	??_USBCtrlEPServiceComplete
  3657  0F61  01F4               	clrf	??_USBCtrlEPServiceComplete+1
  3658  0F62  0857               	movf	_pBDTEntryEP0OutNext,w
  3659  0F63  3E02               	addlw	2
  3660  0F64  0086               	movwf	6
  3661  0F65  0873               	movf	??_USBCtrlEPServiceComplete,w
  3662  0F66  3FC0               	movwi [0]fsr1
  3663  0F67  0874               	movf	??_USBCtrlEPServiceComplete+1,w
  3664  0F68  3FC1               	movwi [1]fsr1
  3665  0F69  0857               	movf	_pBDTEntryEP0OutNext,w
  3666  0F6A  0086               	movwf	6
  3667  0F6B  0008               	return
  3668  0F6C                     __end_ofPL222:	
  3669  0F6C                     PL226:	
  3670  0F6C  0081               	movwf	1
  3671  0F6D  0850               	movf	_pBDTEntryIn,w
  3672  0F6E  0086               	movwf	6
  3673  0F6F  1781               	bsf	1,7
  3674  0F70  0008               	return
  3675  0F71                     __end_ofPL226:	
  3676  0F71                     __ptext4:	
  3677 ;; *************** function _USBCtrlTrfOutHandler *****************
  3678 ;; Defined at:
  3679 ;;		line 2564 in file "../framework/usb/usb_device.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;		None
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;		None               void
  3686 ;; Registers used:
  3687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 1F/0
  3690 ;;		On exit  : 1C/0
  3691 ;;		Unchanged: FFFE0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3695 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3696 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3697 ;;Total ram usage:        2 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    3
  3700 ;; This function calls:
  3701 ;;		_USBCtrlTrfRxService
  3702 ;; This function is called by:
  3703 ;;		_USBCtrlEPService
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           
  3708                           ;psect for function _USBCtrlTrfOutHandler
  3709  0F71                     _USBCtrlTrfOutHandler:	
  3710  0F71                     l3781:	
  3711                           ;incstack = 0
  3712                           ; Regs used in _USBCtrlTrfOutHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3713                           
  3714                           
  3715                           ;usb_device.c: 2565: if(controlTransferState == 2)
  3716  0F71  0855               	movf	_controlTransferState,w
  3717  0F72  3A02               	xorlw	2
  3718  0F73  1D03               	skipz
  3719  0F74  2F76               	goto	l3785
  3720                           
  3721                           ;usb_device.c: 2566: {
  3722                           ;usb_device.c: 2567: USBCtrlTrfRxService();
  3723  0F75  2F8E               	ljmp	l3599
  3724  0F76                     l3785:	
  3725                           ;usb_device.c: 2568: }
  3726                           
  3727                           
  3728                           ;usb_device.c: 2569: else
  3729                           ;usb_device.c: 2570: {
  3730                           ;usb_device.c: 2573: controlTransferState = 0;
  3731  0F76  01D5               	clrf	_controlTransferState
  3732                           
  3733                           ;usb_device.c: 2580: if(BothEP0OutUOWNsSet == 0)
  3734  0F77  0022               	movlb	2	; select bank2
  3735  0F78  08D5               	movf	_BothEP0OutUOWNsSet^(0+256),f
  3736  0F79  1D03               	skipz
  3737  0F7A  2F8C               	goto	l3791
  3738                           
  3739                           ;usb_device.c: 2581: {
  3740                           ;usb_device.c: 2582: pBDTEntryEP0OutNext->CNT = 8;
  3741  0F7B  0020               	movlb	0	; select bank0
  3742  0F7C  27EB  318E         	fcall	PL228	;call to abstracted procedure
  3743                           
  3744                           ;usb_device.c: 2583: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3745  0F7E  3040               	movlw	64
  3746  0F7F  00F6               	movwf	??_USBCtrlTrfOutHandler
  3747  0F80  01F7               	clrf	??_USBCtrlTrfOutHandler+1
  3748  0F81  0857               	movf	_pBDTEntryEP0OutNext,w
  3749  0F82  3E02               	addlw	2
  3750  0F83  0086               	movwf	6
  3751  0F84  0876               	movf	??_USBCtrlTrfOutHandler,w
  3752  0F85  3FC0               	movwi [0]fsr1
  3753  0F86  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  3754  0F87  3FC1               	movwi [1]fsr1
  3755                           
  3756                           ;usb_device.c: 2584: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  3757  0F88  0857               	movf	_pBDTEntryEP0OutNext,w
  3758  0F89  0086               	movwf	6
  3759  0F8A  300C               	movlw	12
  3760                           
  3761                           ;usb_device.c: 2585: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3762                           
  3763                           ;usb_device.c: 2586: }
  3764  0F8B  2FFB               	ljmp	PL234	;call to abstracted procedure
  3765  0F8C                     l3791:	
  3766                           
  3767                           ;usb_device.c: 2587: else
  3768                           ;usb_device.c: 2588: {
  3769                           ;usb_device.c: 2589: BothEP0OutUOWNsSet = 0;
  3770  0F8C  01D5               	clrf	_BothEP0OutUOWNsSet^(0+256)
  3771  0F8D  0008               	return
  3772  0F8E                     __end_of_USBCtrlTrfOutHandler:	
  3773  0F8E                     __ptext5:	
  3774 ;; *************** function _USBCtrlTrfRxService *****************
  3775 ;; Defined at:
  3776 ;;		line 1872 in file "../framework/usb/usb_device.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;		None
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;  byteToRead      1    5[COMMON] unsigned char 
  3781 ;;  i               1    4[COMMON] unsigned char 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;		None               void
  3784 ;; Registers used:
  3785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3786 ;; Tracked objects:
  3787 ;;		On entry : 1F/0
  3788 ;;		On exit  : 1E/0
  3789 ;;		Unchanged: FFFE0/0
  3790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3792 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3793 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3794 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3795 ;;Total ram usage:        4 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; Hardware stack levels required when called:    2
  3798 ;; This function calls:
  3799 ;;		_USBCtrlEPAllowStatusStage
  3800 ;; This function is called by:
  3801 ;;		_USBCtrlTrfOutHandler
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           
  3806                           ;psect for function _USBCtrlTrfRxService
  3807  0F8E                     _USBCtrlTrfRxService:	
  3808  0F8E                     l3599:	
  3809                           ;incstack = 0
  3810                           ; Regs used in _USBCtrlTrfRxService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3811                           
  3812                           
  3813                           ;usb_device.c: 1873: uint8_t byteToRead;
  3814                           ;usb_device.c: 1874: uint8_t i;
  3815                           ;usb_device.c: 1878: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  3816  0F8E  0856               	movf	_pBDTEntryEP0OutCurrent,w
  3817  0F8F  0086               	movwf	6
  3818  0F90  0187               	clrf	7
  3819  0F91  3F41               	moviw [1]fsr1
  3820  0F92  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  3821                           
  3822                           ;usb_device.c: 1884: if(byteToRead > outPipes[0].wCount.Val)
  3823  0F93  00F2               	movwf	??_USBCtrlTrfRxService
  3824  0F94  01F3               	clrf	??_USBCtrlTrfRxService+1
  3825  0F95  0873               	movf	??_USBCtrlTrfRxService+1,w
  3826  0F96  0022               	movlb	2	; select bank2
  3827  0F97  024B               	subwf	((_outPipes+1)^(0+256)+3),w
  3828  0F98  1D03               	skipz
  3829  0F99  2F9C               	goto	u2595
  3830  0F9A  0872               	movf	??_USBCtrlTrfRxService,w
  3831  0F9B  024A               	subwf	(_outPipes^(0+256)+3),w
  3832  0F9C                     u2595:	
  3833  0F9C  1803               	skipnc
  3834  0F9D  2FA0               	goto	l789
  3835                           
  3836                           ;usb_device.c: 1885: {
  3837                           ;usb_device.c: 1886: byteToRead = outPipes[0].wCount.Val;
  3838  0F9E  084A               	movf	(_outPipes^(0+256)+3),w
  3839  0F9F  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  3840  0FA0                     l789:	
  3841                           
  3842                           ;usb_device.c: 1887: }
  3843                           ;usb_device.c: 1889: outPipes[0].wCount.Val -= byteToRead;
  3844  0FA0  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  3845  0FA1  02CA               	subwf	(_outPipes^(0+256)+3),f
  3846  0FA2  1C03               	skipc
  3847  0FA3  03CB               	decf	((_outPipes+1)^(0+256)+3),f
  3848                           
  3849                           ;usb_device.c: 1893: for(i=0;i<byteToRead;i++)
  3850  0FA4  01F4               	clrf	USBCtrlTrfRxService@i
  3851  0FA5                     l3613:	
  3852  0FA5  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  3853  0FA6  0274               	subwf	USBCtrlTrfRxService@i,w
  3854  0FA7  1803               	btfsc	3,0
  3855  0FA8  2FB5               	goto	l3615
  3856                           
  3857                           ;usb_device.c: 1894: {
  3858                           ;usb_device.c: 1895: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  3859  0FA9  0847               	movf	_outPipes^(0+256),w
  3860  0FAA  0086               	movwf	6
  3861  0FAB  0187               	clrf	7
  3862  0FAC  0874               	movf	USBCtrlTrfRxService@i,w
  3863  0FAD  3E48               	addlw	72
  3864  0FAE  0084               	movwf	4
  3865  0FAF  0185               	clrf	5
  3866  0FB0  0800               	movf	0,w
  3867  0FB1  0081               	movwf	1
  3868  0FB2  0AC7               	incf	_outPipes^(0+256),f
  3869  0FB3  0AF4               	incf	USBCtrlTrfRxService@i,f
  3870  0FB4  2FA5               	goto	l3613
  3871  0FB5                     l3615:	
  3872                           
  3873                           ;usb_device.c: 1896: }
  3874                           ;usb_device.c: 1900: if(outPipes[0].wCount.Val > 0)
  3875  0FB5  3003               	movlw	3
  3876  0FB6  3E47               	addlw	_outPipes& (0+255)
  3877  0FB7  0086               	movwf	6
  3878  0FB8  3001               	movlw	1	; select bank2/3
  3879  0FB9  0087               	movwf	7
  3880  0FBA  0016               	moviw fsr1++
  3881  0FBB  0401               	iorwf	1,w
  3882  0FBC  1903               	skipnz
  3883  0FBD  2FD0               	goto	l3623
  3884                           
  3885                           ;usb_device.c: 1901: {
  3886                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->CNT = 8;
  3887  0FBE  0020               	movlb	0	; select bank0
  3888  0FBF  27EB  318E         	fcall	PL228	;call to abstracted procedure
  3889                           
  3890                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  3891  0FC1  3048               	movlw	72
  3892  0FC2  27F1  318E         	fcall	PL230	;call to abstracted procedure
  3893                           
  3894                           ;usb_device.c: 1904: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  3895  0FC4  0856               	movf	_pBDTEntryEP0OutCurrent,w
  3896  0FC5  0086               	movwf	6
  3897                           
  3898                           ;usb_device.c: 1905: {
  3899                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  3900  0FC6  0857               	movf	_pBDTEntryEP0OutNext,w
  3901  0FC7  1B01               	btfsc	1,6
  3902  0FC8  2FCC               	goto	L3
  3903  0FC9  0086               	movwf	6
  3904  0FCA  3048               	movlw	72
  3905                           
  3906                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3907                           
  3908                           ;usb_device.c: 1908: }
  3909  0FCB  2FFB               	ljmp	PL234	;call to abstracted procedure
  3910  0FCC                     L3:	
  3911                           ;usb_device.c: 1909: else
  3912                           ;usb_device.c: 1910: {
  3913                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  3914                           
  3915  0FCC  0086               	movwf	6
  3916  0FCD  3008               	movlw	8
  3917  0FCE  0187               	clrf	7
  3918                           
  3919                           ;usb_device.c: 1912: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3920  0FCF  2FFB               	ljmp	PL234	;call to abstracted procedure
  3921  0FD0                     l3623:	
  3922                           
  3923                           ;usb_device.c: 1915: else
  3924                           ;usb_device.c: 1916: {
  3925                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->CNT = 8;
  3926  0FD0  0020               	movlb	0	; select bank0
  3927  0FD1  27EB  318E         	fcall	PL228	;call to abstracted procedure
  3928                           
  3929                           ;usb_device.c: 1921: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3930  0FD3  3040               	movlw	64
  3931  0FD4  27F1  318E         	fcall	PL230	;call to abstracted procedure
  3932                           
  3933                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  3934  0FD6  0857               	movf	_pBDTEntryEP0OutNext,w
  3935  0FD7  0086               	movwf	6
  3936  0FD8  3004               	movlw	4
  3937  0FD9  0081               	movwf	1
  3938                           
  3939                           ;usb_device.c: 1926: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3940  0FDA  0857               	movf	_pBDTEntryEP0OutNext,w
  3941  0FDB  0086               	movwf	6
  3942  0FDC  1781               	bsf	1,7
  3943                           
  3944                           ;usb_device.c: 1933: if(outPipes[0].pFunc != (0))
  3945  0FDD  0022               	movlb	2	; select bank2
  3946  0FDE  084C               	movf	(_outPipes+5)^(0+256),w
  3947  0FDF  1903               	btfsc	3,2
  3948  0FE0  2FE4               	goto	l3629
  3949                           
  3950                           ;usb_device.c: 1934: {
  3951                           ;usb_device.c: 1940: outPipes[0].pFunc();
  3952  0FE1  084C               	movf	(_outPipes+5)^(0+256),w
  3953  0FE2  318E  2E50         	ljmp	$	;if you get stuck here, you called an invalid pointer
  3954  0FE4                     l3629:	
  3955                           
  3956                           ;usb_device.c: 1945: }
  3957                           ;usb_device.c: 1946: outPipes[0].info.bits.busy = 0;
  3958  0FE4  13C9               	bcf	(_outPipes^(0+256)+2),7
  3959                           
  3960                           ;usb_device.c: 1960: if(USBDeferStatusStagePacket == 0)
  3961  0FE5  0020               	movlb	0	; select bank0
  3962  0FE6  08D2               	movf	_USBDeferStatusStagePacket,f
  3963  0FE7  1D03               	skipz
  3964  0FE8  0008               	return
  3965                           
  3966                           ;usb_device.c: 1961: {
  3967                           ;usb_device.c: 1962: USBCtrlEPAllowStatusStage();
  3968  0FE9  3185  2DF8         	ljmp	l3395
  3969  0FEB                     __end_of_USBCtrlTrfRxService:	
  3970  0FEB                     PL228:	
  3971  0FEB  0A57               	incf	_pBDTEntryEP0OutNext,w
  3972  0FEC  0086               	movwf	6
  3973  0FED  3008               	movlw	8
  3974  0FEE  0187               	clrf	7
  3975  0FEF  0081               	movwf	1
  3976  0FF0  0008               	return
  3977  0FF1                     __end_ofPL228:	
  3978  0FF1                     PL230:	
  3979  0FF1  00F2               	movwf	??_USBCtrlTrfRxService
  3980  0FF2  01F3               	clrf	??_USBCtrlTrfRxService+1
  3981  0FF3  0857               	movf	_pBDTEntryEP0OutNext,w
  3982  0FF4  3E02               	addlw	2
  3983  0FF5  0086               	movwf	6
  3984  0FF6  0872               	movf	??_USBCtrlTrfRxService,w
  3985  0FF7  3FC0               	movwi [0]fsr1
  3986  0FF8  0873               	movf	??_USBCtrlTrfRxService+1,w
  3987  0FF9  3FC1               	movwi [1]fsr1
  3988  0FFA  0008               	return
  3989  0FFB                     __end_ofPL230:	
  3990  0FFB                     PL234:	
  3991  0FFB  0081               	movwf	1
  3992  0FFC  0857               	movf	_pBDTEntryEP0OutNext,w
  3993  0FFD  0086               	movwf	6
  3994  0FFE  1781               	bsf	1,7
  3995  0FFF  0008               	return
  3996  1000                     __end_ofPL234:	
  3997                           
  3998                           	psect	swtext1
  3999  07DB                     __pswtext1:	
  4000  07DB                     S4101:	
  4001  07DB  3187  2F34         	ljmp	l3847
  4002  07DD  3187  2F35         	ljmp	l3849
  4003  07DF  3187  2F22         	ljmp	l888
  4004  07E1  3187  2F35         	ljmp	l3849
  4005  07E3  3187  2F22         	ljmp	l888
  4006  07E5  3187  2F23         	ljmp	l890
  4007  07E7  3187  2F27         	ljmp	l3835
  4008  07E9  3187  2F44         	ljmp	l3861
  4009  07EB  3187  2F2B         	ljmp	l3839
  4010  07ED  3187  2F29         	ljmp	l3837
  4011  07EF  3187  2F36         	ljmp	l3851
  4012  07F1  3187  2F3C         	ljmp	l899
  4013  07F3  3187  2F22         	ljmp	l888
  4014                           
  4015                           	psect	text10
  4016  0D8E                     __ptext10:	
  4017 ;; *************** function _USBStdGetDscHandler *****************
  4018 ;; Defined at:
  4019 ;;		line 2063 in file "../framework/usb/usb_device.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;		None
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;		None
  4024 ;; Return value:  Size  Location     Type
  4025 ;;		None               void
  4026 ;; Registers used:
  4027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4028 ;; Tracked objects:
  4029 ;;		On entry : 1D/0
  4030 ;;		On exit  : 1F/0
  4031 ;;		Unchanged: FFFE0/0
  4032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4035 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4036 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4037 ;;Total ram usage:        2 bytes
  4038 ;; Hardware stack levels used:    1
  4039 ;; Hardware stack levels required when called:    1
  4040 ;; This function calls:
  4041 ;;		Nothing
  4042 ;; This function is called by:
  4043 ;;		_USBCheckStdRequest
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           
  4048                           ;psect for function _USBStdGetDscHandler
  4049  0D8E                     _USBStdGetDscHandler:	
  4050  0D8E                     l3695:	
  4051                           ;incstack = 0
  4052                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  4053                           
  4054                           
  4055                           ;usb_device.c: 2064: if(SetupPkt.bmRequestType == 0x80)
  4056  0D8E  0020               	movlb	0	; select bank0
  4057  0D8F  0840               	movf	64,w	;volatile
  4058  0D90  3A80               	xorlw	128
  4059  0D91  1D03               	skipz
  4060  0D92  0008               	return
  4061                           
  4062                           ;usb_device.c: 2065: {
  4063                           ;usb_device.c: 2066: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  4064  0D93  30C0               	movlw	192
  4065  0D94  00DB               	movwf	_inPipes+2
  4066                           
  4067                           ;usb_device.c: 2068: switch(SetupPkt.bDescriptorType)
  4068  0D95  2DCD               	goto	l3723
  4069  0D96                     l3699:	
  4070                           
  4071                           ;usb_device.c: 2074: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  4072  0D96  30E3               	movlw	low (_device_dsc| (0+32768))
  4073  0D97  00D9               	movwf	_inPipes
  4074  0D98  3090               	movlw	high (_device_dsc| (0+32768))
  4075  0D99  00DA               	movwf	_inPipes+1
  4076                           
  4077                           ;usb_device.c: 2076: inPipes[0].wCount.Val = sizeof(device_dsc);
  4078  0D9A  3012               	movlw	18
  4079  0D9B  00DC               	movwf	_inPipes+3
  4080  0D9C  01DD               	clrf	_inPipes+4
  4081                           
  4082                           ;usb_device.c: 2077: break;
  4083  0D9D  0008               	return
  4084  0D9E                     l3701:	
  4085                           
  4086                           ;usb_device.c: 2082: if(SetupPkt.bDscIndex < 1)
  4087  0D9E  0842               	movf	66,w
  4088  0D9F  1D03               	skipz
  4089  0DA0  2DB8               	goto	l3709
  4090                           
  4091                           ;usb_device.c: 2083: {
  4092                           ;usb_device.c: 2085: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  4093  0DA1  0842               	movf	66,w	;volatile
  4094  0DA2  00F0               	movwf	??_USBStdGetDscHandler
  4095  0DA3  302E               	movlw	low (_USB_CD_Ptr| (0+32768))
  4096  0DA4  25E7  318D         	fcall	PL256	;call to abstracted procedure
  4097  0DA6  3090               	movlw	high (_USB_CD_Ptr| (0+32768))
  4098  0DA7  25D9  318D         	fcall	PL248	;call to abstracted procedure
  4099                           
  4100                           ;usb_device.c: 2093: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  4101  0DA9  00F1               	movwf	??_USBStdGetDscHandler+1
  4102  0DAA  0859               	movf	_inPipes,w
  4103  0DAB  00F0               	movwf	??_USBStdGetDscHandler
  4104  0DAC  3E02               	addlw	2
  4105  0DAD  25E0  318D         	fcall	PL252	;call to abstracted procedure
  4106  0DAF  00DC               	movwf	_inPipes+3
  4107                           
  4108                           ;usb_device.c: 2094: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  4109  0DB0  085A               	movf	_inPipes+1,w
  4110  0DB1  00F1               	movwf	??_USBStdGetDscHandler+1
  4111  0DB2  0859               	movf	_inPipes,w
  4112  0DB3  00F0               	movwf	??_USBStdGetDscHandler
  4113  0DB4  3E03               	addlw	3
  4114  0DB5  25E0               	fcall	PL252	;call to abstracted procedure
  4115  0DB6  00DD               	movwf	_inPipes+4
  4116                           
  4117                           ;usb_device.c: 2095: }
  4118  0DB7  0008               	return
  4119  0DB8                     l3709:	
  4120                           
  4121                           ;usb_device.c: 2096: else
  4122                           ;usb_device.c: 2097: {
  4123                           ;usb_device.c: 2098: inPipes[0].info.Val = 0;
  4124  0DB8  01DB               	clrf	_inPipes+2
  4125  0DB9  0008               	return
  4126  0DBA                     l3711:	
  4127                           
  4128                           ;usb_device.c: 2105: if(SetupPkt.bDscIndex<3)
  4129  0DBA  3003               	movlw	3
  4130  0DBB  0242               	subwf	66,w	;volatile
  4131  0DBC  1803               	skipnc
  4132  0DBD  2DB8               	goto	l3709
  4133                           
  4134                           ;usb_device.c: 2106: {
  4135                           ;usb_device.c: 2108: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  4136  0DBE  0842               	movf	66,w	;volatile
  4137  0DBF  00F0               	movwf	??_USBStdGetDscHandler
  4138  0DC0  3028               	movlw	low (_USB_SD_Ptr| (0+32768))
  4139  0DC1  25E7  318D         	fcall	PL256	;call to abstracted procedure
  4140  0DC3  3090               	movlw	high (_USB_SD_Ptr| (0+32768))
  4141  0DC4  25D9               	fcall	PL248	;call to abstracted procedure
  4142                           
  4143                           ;usb_device.c: 2110: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  4144  0DC5  0859               	movf	_inPipes,w
  4145  0DC6  0084               	movwf	4
  4146  0DC7  085A               	movf	_inPipes+1,w
  4147  0DC8  0085               	movwf	5
  4148  0DC9  0800               	movf	0,w	;code access
  4149  0DCA  00DC               	movwf	_inPipes+3
  4150  0DCB  01DD               	clrf	_inPipes+4
  4151                           
  4152                           ;usb_device.c: 2111: }
  4153  0DCC  0008               	return
  4154  0DCD                     l3723:	
  4155  0DCD  0843               	movf	67,w	;volatile
  4156                           
  4157                           ; Switch size 1, requested type "space"
  4158                           ; Number of cases is 3, Range of values is 1 to 3
  4159                           ; switch strategies available:
  4160                           ; Name         Instructions Cycles
  4161                           ; simple_byte           10     6 (average)
  4162                           ; direct_byte           15     9 (fixed)
  4163                           ; jumptable            263     9 (fixed)
  4164                           ;	Chosen strategy is simple_byte
  4165  0DCE  3A01               	xorlw	1	; case 1
  4166  0DCF  1903               	skipnz
  4167  0DD0  2D96               	goto	l3699
  4168  0DD1  3A03               	xorlw	3	; case 2
  4169  0DD2  1903               	skipnz
  4170  0DD3  2D9E               	goto	l3701
  4171  0DD4  3A01               	xorlw	1	; case 3
  4172  0DD5  1903               	skipnz
  4173  0DD6  2DBA               	goto	l3711
  4174  0DD7  2DB8               	goto	l3709
  4175  0DD8  0008               	return
  4176  0DD9                     __end_of_USBStdGetDscHandler:	
  4177  0DD9                     PL248:	
  4178  0DD9  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  4179  0DDA  0085               	movwf	5
  4180  0DDB  3F00               	moviw [0]fsr0
  4181  0DDC  00D9               	movwf	_inPipes
  4182  0DDD  3F01               	moviw [1]fsr0
  4183  0DDE  00DA               	movwf	_inPipes+1
  4184  0DDF  0008               	return
  4185  0DE0                     __end_ofPL248:	
  4186  0DE0                     PL252:	
  4187  0DE0  0084               	movwf	4
  4188  0DE1  0871               	movf	??_USBStdGetDscHandler+1,w
  4189  0DE2  1803               	skipnc
  4190  0DE3  0A71               	incf	??_USBStdGetDscHandler+1,w
  4191  0DE4  0085               	movwf	5
  4192  0DE5  0800               	movf	0,w	;code access
  4193  0DE6  0008               	return
  4194  0DE7                     __end_ofPL252:	
  4195  0DE7                     PL256:	
  4196  0DE7  01F1               	clrf	??_USBStdGetDscHandler+1
  4197  0DE8  35F0               	lslf	??_USBStdGetDscHandler,f
  4198  0DE9  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  4199  0DEA  0770               	addwf	??_USBStdGetDscHandler,w
  4200  0DEB  0084               	movwf	4
  4201  0DEC  0008               	return
  4202  0DED                     __end_ofPL256:	
  4203                           
  4204                           	psect	text11
  4205  0DED                     __ptext11:	
  4206 ;; *************** function _USBStdSetCfgHandler *****************
  4207 ;; Defined at:
  4208 ;;		line 1988 in file "../framework/usb/usb_device.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;		None
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;  p               2   10[COMMON] PTR unsigned char 
  4213 ;;		 -> UEP1(1), 
  4214 ;;  i               1   12[COMMON] unsigned char 
  4215 ;;  i               1   13[COMMON] unsigned char 
  4216 ;; Return value:  Size  Location     Type
  4217 ;;		None               void
  4218 ;; Registers used:
  4219 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4220 ;; Tracked objects:
  4221 ;;		On entry : 1D/0
  4222 ;;		On exit  : 1F/0
  4223 ;;		Unchanged: FFFE0/0
  4224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4226 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4228 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4229 ;;Total ram usage:        4 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:    5
  4232 ;; This function calls:
  4233 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4234 ;;		_memset
  4235 ;; This function is called by:
  4236 ;;		_USBCheckStdRequest
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           
  4241                           ;psect for function _USBStdSetCfgHandler
  4242  0DED                     _USBStdSetCfgHandler:	
  4243  0DED                     l3635:	
  4244                           ;incstack = 0
  4245                           ; Regs used in _USBStdSetCfgHandler: [allreg]
  4246                           
  4247                           
  4248                           ;usb_device.c: 1989: uint8_t i;
  4249                           ;usb_device.c: 1992: inPipes[0].info.bits.busy = 1;
  4250  0DED  0020               	movlb	0	; select bank0
  4251  0DEE  300E               	movlw	14
  4252  0DEF  17DB               	bsf	_inPipes+2,7
  4253                           
  4254                           ;usb_device.c: 1995: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 
      +                          0; };
  4255  0DF0  00FB               	movwf	USBStdSetCfgHandler@p+1
  4256  0DF1  3099               	movlw	153
  4257  0DF2  00FA               	movwf	USBStdSetCfgHandler@p
  4258  0DF3  01FC               	clrf	USBStdSetCfgHandler@i_2210
  4259  0DF4                     l3643:	
  4260  0DF4  087A               	movf	USBStdSetCfgHandler@p,w
  4261  0DF5  0086               	movwf	6
  4262  0DF6  087B               	movf	USBStdSetCfgHandler@p+1,w
  4263  0DF7  0087               	movwf	7
  4264  0DF8  0181               	clrf	1
  4265  0DF9  0AFA               	incf	USBStdSetCfgHandler@p,f
  4266  0DFA  1903               	skipnz
  4267  0DFB  0AFB               	incf	USBStdSetCfgHandler@p+1,f
  4268  0DFC  0AFC               	incf	USBStdSetCfgHandler@i_2210,f
  4269  0DFD  1903               	btfsc	3,2
  4270  0DFE  2DF4               	goto	l3643
  4271  0DFF  3020               	movlw	32
  4272                           
  4273                           ;usb_device.c: 1998: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  4274  0E00  01F0               	clrf	?_memset
  4275  0E01  01F1               	clrf	?_memset+1
  4276  0E02  00F2               	movwf	?_memset+2
  4277  0E03  01F3               	clrf	?_memset+3
  4278  0E04  263E  318D         	fcall	_memset
  4279                           
  4280                           ;usb_device.c: 2001: UCONbits.PPBRST = 1;
  4281  0E06  003D               	movlb	29	; select bank29
  4282  0E07  170E               	bsf	14,6	;volatile
  4283                           
  4284                           ;usb_device.c: 2006: for(i = 0; i < (uint8_t)(1+1u); i++)
  4285  0E08  01FD               	clrf	USBStdSetCfgHandler@i
  4286  0E09                     l3661:	
  4287                           
  4288                           ;usb_device.c: 2007: {
  4289                           ;usb_device.c: 2008: ep_data_in[i].Val = 0u;
  4290  0E09  087D               	movf	USBStdSetCfgHandler@i,w
  4291  0E0A  3E4D               	addlw	_ep_data_in& (0+255)
  4292  0E0B  0086               	movwf	6
  4293  0E0C  3001               	movlw	1	; select bank2/3
  4294  0E0D  0087               	movwf	7
  4295  0E0E  0181               	clrf	1
  4296                           
  4297                           ;usb_device.c: 2009: ep_data_out[i].Val = 0u;
  4298  0E0F  087D               	movf	USBStdSetCfgHandler@i,w
  4299  0E10  3E4F               	addlw	_ep_data_out& (0+255)
  4300  0E11  0086               	movwf	6
  4301  0E12  3002               	movlw	2
  4302  0E13  0181               	clrf	1
  4303  0E14  0AFD               	incf	USBStdSetCfgHandler@i,f
  4304  0E15  027D               	subwf	USBStdSetCfgHandler@i,w
  4305  0E16  1C03               	skipc
  4306  0E17  2E09               	goto	l3661
  4307  0E18  30EF               	movlw	_USBAlternateInterface& (0+255)
  4308                           
  4309                           ;usb_device.c: 2010: }
  4310                           ;usb_device.c: 2013: memset((void*)&USBAlternateInterface,0x00,1);
  4311  0E19  01F0               	clrf	?_memset
  4312  0E1A  01F1               	clrf	?_memset+1
  4313  0E1B  01F2               	clrf	?_memset+2
  4314  0E1C  0AF2               	incf	?_memset+2,f
  4315  0E1D  01F3               	clrf	?_memset+3
  4316  0E1E  263E  318D         	fcall	_memset
  4317                           
  4318                           ;usb_device.c: 2016: UCONbits.PPBRST = 0;
  4319  0E20  003D               	movlb	29	; select bank29
  4320  0E21  130E               	bcf	14,6	;volatile
  4321                           
  4322                           ;usb_device.c: 2018: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  4323  0E22  3028               	movlw	40
  4324  0E23  0020               	movlb	0	; select bank0
  4325  0E24  00D0               	movwf	_pBDTEntryIn
  4326                           
  4327                           ;usb_device.c: 2021: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  4328  0E25  3020               	movlw	32
  4329  0E26  00D6               	movwf	_pBDTEntryEP0OutCurrent
  4330                           
  4331                           ;usb_device.c: 2022: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  4332  0E27  00D7               	movwf	_pBDTEntryEP0OutNext
  4333                           
  4334                           ;usb_device.c: 2025: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  4335  0E28  0842               	movf	66,w	;volatile
  4336  0E29  00DE               	movwf	_USBActiveConfiguration
  4337                           
  4338                           ;usb_device.c: 2028: if(USBActiveConfiguration == 0)
  4339  0E2A  08DE               	movf	_USBActiveConfiguration,f
  4340  0E2B  1D03               	skipz
  4341  0E2C  2E30               	goto	l3683
  4342                           
  4343                           ;usb_device.c: 2029: {
  4344                           ;usb_device.c: 2031: USBDeviceState = ADDRESS_STATE;
  4345  0E2D  3010               	movlw	16
  4346  0E2E  00D3               	movwf	_USBDeviceState
  4347                           
  4348                           ;usb_device.c: 2032: }
  4349  0E2F  0008               	return
  4350  0E30                     l3683:	
  4351  0E30  305E               	movlw	_USBActiveConfiguration& (0+255)
  4352                           
  4353                           ;usb_device.c: 2033: else
  4354                           ;usb_device.c: 2034: {
  4355                           ;usb_device.c: 2036: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  4356  0E31  01E0               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER
  4357  0E32  0AE0               	incf	?_USER_USB_CALLBACK_EVENT_HANDLER,f
  4358  0E33  01E1               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  4359  0E34  00E2               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  4360  0E35  01E3               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  4361  0E36  0AE3               	incf	?_USER_USB_CALLBACK_EVENT_HANDLER+3,f
  4362  0E37  01E4               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  4363  0E38  3185  2519         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4364                           
  4365                           ;usb_device.c: 2041: USBDeviceState = CONFIGURED_STATE;
  4366  0E3A  3020               	movlw	32
  4367  0E3B  0020               	movlb	0	; select bank0
  4368  0E3C  00D3               	movwf	_USBDeviceState
  4369  0E3D  0008               	return
  4370  0E3E                     __end_of_USBStdSetCfgHandler:	
  4371  0E3E                     __ptext12:	
  4372 ;; *************** function _memset *****************
  4373 ;; Defined at:
  4374 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\memset.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  p1              1    wreg     PTR void 
  4377 ;;		 -> USBAlternateInterface(1), BDT(32), 
  4378 ;;  c               2    0[COMMON] int 
  4379 ;;  n               2    2[COMMON] unsigned int 
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;  p1              1    4[COMMON] PTR void 
  4382 ;;		 -> USBAlternateInterface(1), BDT(32), 
  4383 ;;  p               1    5[COMMON] PTR unsigned char 
  4384 ;;		 -> USBAlternateInterface(1), BDT(32), 
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      PTR void 
  4387 ;; Registers used:
  4388 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4389 ;; Tracked objects:
  4390 ;;		On entry : 2/0
  4391 ;;		On exit  : 2/0
  4392 ;;		Unchanged: FFFFD/0
  4393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4394 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4397 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4398 ;;Total ram usage:        6 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:    1
  4401 ;; This function calls:
  4402 ;;		Nothing
  4403 ;; This function is called by:
  4404 ;;		_USBStdSetCfgHandler
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           
  4409                           ;psect for function _memset
  4410  0E3E                     _memset:	
  4411                           
  4412                           ;incstack = 0
  4413                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  4414                           ;memset@p1 stored from wreg
  4415  0E3E  00F4               	movwf	memset@p1
  4416  0E3F  00F5               	movwf	memset@p
  4417  0E40                     l3693:	
  4418  0E40  3001               	movlw	1
  4419  0E41  02F2               	subwf	memset@n,f
  4420  0E42  3000               	movlw	0
  4421  0E43  3BF3               	subwfb	memset@n+1,f
  4422  0E44  0A72               	incf	memset@n,w
  4423  0E45  1903               	skipnz
  4424  0E46  0A73               	incf	memset@n+1,w
  4425  0E47  1903               	btfsc	3,2
  4426  0E48  0008               	return
  4427  0E49  0875               	movf	memset@p,w
  4428  0E4A  0086               	movwf	6
  4429  0E4B  0187               	clrf	7
  4430  0E4C  0870               	movf	memset@c,w
  4431  0E4D  0081               	movwf	1
  4432  0E4E  0AF5               	incf	memset@p,f
  4433  0E4F  2E40               	goto	l3693
  4434  0E50                     __end_of_memset:	
  4435                           
  4436                           	psect	text26
  4437  0008                     __ptext26:	
  4438 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  4439 ;; Defined at:
  4440 ;;		line 24 in file "../src/app_led_usb_status.c"
  4441 ;; Parameters:    Size  Location     Type
  4442 ;;		None
  4443 ;; Auto vars:     Size  Location     Type
  4444 ;;		None
  4445 ;; Return value:  Size  Location     Type
  4446 ;;		None               void
  4447 ;; Registers used:
  4448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4449 ;; Tracked objects:
  4450 ;;		On entry : 1F/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: FFFE0/0
  4453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4458 ;;Total ram usage:        0 bytes
  4459 ;; Hardware stack levels used:    1
  4460 ;; Hardware stack levels required when called:    2
  4461 ;; This function calls:
  4462 ;;		_LED_Off
  4463 ;;		_LED_On
  4464 ;; This function is called by:
  4465 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4466 ;; This function uses a non-reentrant model
  4467 ;;
  4468                           
  4469                           
  4470                           ;psect for function _APP_LEDUpdateUSBStatus
  4471  0008                     _APP_LEDUpdateUSBStatus:	
  4472  0008                     l2743:	
  4473                           ;incstack = 0
  4474                           ; Regs used in _APP_LEDUpdateUSBStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4475                           
  4476                           
  4477                           ;app_led_usb_status.c: 25: static uint16_t ledCount = 0;
  4478                           ;app_led_usb_status.c: 27: if(UCONbits.SUSPND == 1)
  4479  0008  003D               	movlb	29	; select bank29
  4480  0009  1C8E               	btfss	14,1	;volatile
  4481  000A  283F               	goto	l2775
  4482                           
  4483                           ;app_led_usb_status.c: 28: {
  4484                           ;app_led_usb_status.c: 29: LED_Off(LED_D1);
  4485  000B  3001               	movlw	1
  4486  000C  2B75               	ljmp	_LED_Off
  4487  000D                     l2749:	
  4488                           
  4489                           ;app_led_usb_status.c: 38: if(ledCount == 1)
  4490  000D  0021               	movlb	1	; select bank1
  4491  000E  0360               	decf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  4492  000F  0461               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  4493  0010  1D03               	skipz
  4494  0011  2816               	goto	l2753
  4495                           
  4496                           ;app_led_usb_status.c: 39: {
  4497                           ;app_led_usb_status.c: 40: LED_On(LED_D1);
  4498  0012  3001               	movlw	1
  4499  0013  238B  3180         	fcall	_LED_On
  4500                           
  4501                           ;app_led_usb_status.c: 41: }
  4502  0015  2845               	goto	l2777
  4503  0016                     l2753:	
  4504                           
  4505                           ;app_led_usb_status.c: 42: else if(ledCount == 75)
  4506  0016  0860               	movf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  4507  0017  3A4B               	xorlw	75
  4508  0018  0461               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  4509  0019  1D03               	skipz
  4510  001A  281F               	goto	l2757
  4511                           
  4512                           ;app_led_usb_status.c: 43: {
  4513                           ;app_led_usb_status.c: 44: LED_Off(LED_D1);
  4514  001B  3001               	movlw	1
  4515  001C  2375  3180         	fcall	_LED_Off
  4516                           
  4517                           ;app_led_usb_status.c: 45: }
  4518  001E  2845               	goto	l2777
  4519  001F                     l2757:	
  4520                           
  4521                           ;app_led_usb_status.c: 46: else if(ledCount > 150)
  4522  001F  3000               	movlw	0
  4523  0020  0261               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  4524  0021  3097               	movlw	151
  4525  0022                     L12:	
  4526  0022  1903               	skipnz
  4527  0023  0260               	subwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  4528  0024  1C03               	skipc
  4529  0025  2845               	goto	l2777
  4530                           
  4531                           ;app_led_usb_status.c: 47: {
  4532                           ;app_led_usb_status.c: 48: ledCount = 0;
  4533  0026  01E0               	clrf	APP_LEDUpdateUSBStatus@ledCount^(0+128)
  4534  0027  01E1               	clrf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128)
  4535  0028  2845               	goto	l2777
  4536  0029                     l2761:	
  4537                           ;app_led_usb_status.c: 49: }
  4538                           ;app_led_usb_status.c: 50: break;
  4539                           
  4540                           
  4541                           ;app_led_usb_status.c: 55: if(ledCount == 1)
  4542  0029  0021               	movlb	1	; select bank1
  4543  002A  0360               	decf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  4544  002B  0461               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  4545  002C  1D03               	skipz
  4546  002D  2832               	goto	l2765
  4547                           
  4548                           ;app_led_usb_status.c: 56: {
  4549                           ;app_led_usb_status.c: 57: LED_On(LED_D1);
  4550  002E  3001               	movlw	1
  4551  002F  238B  3180         	fcall	_LED_On
  4552                           
  4553                           ;app_led_usb_status.c: 58: }
  4554  0031  2845               	goto	l2777
  4555  0032                     l2765:	
  4556                           
  4557                           ;app_led_usb_status.c: 59: else if(ledCount == 50)
  4558  0032  0860               	movf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  4559  0033  3A32               	xorlw	50
  4560  0034  0461               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  4561  0035  1D03               	skipz
  4562  0036  283B               	goto	l2769
  4563                           
  4564                           ;app_led_usb_status.c: 60: {
  4565                           ;app_led_usb_status.c: 61: LED_Off(LED_D1);
  4566  0037  3001               	movlw	1
  4567  0038  2375  3180         	fcall	_LED_Off
  4568                           
  4569                           ;app_led_usb_status.c: 62: }
  4570  003A  2845               	goto	l2777
  4571  003B                     l2769:	
  4572                           
  4573                           ;app_led_usb_status.c: 63: else if(ledCount > 950)
  4574  003B  3003               	movlw	3
  4575  003C  0261               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  4576  003D  30B7               	movlw	183
  4577  003E  2822               	goto	L12
  4578  003F                     l2775:	
  4579  003F  0020               	movlb	0	; select bank0
  4580  0040  0853               	movf	_USBDeviceState,w
  4581                           
  4582                           ; Switch size 1, requested type "space"
  4583                           ; Number of cases is 1, Range of values is 32 to 32
  4584                           ; switch strategies available:
  4585                           ; Name         Instructions Cycles
  4586                           ; simple_byte            4     3 (average)
  4587                           ; direct_byte           11     9 (fixed)
  4588                           ; jumptable            263     9 (fixed)
  4589                           ;	Chosen strategy is simple_byte
  4590  0041  3A20               	xorlw	32	; case 32
  4591  0042  1903               	skipnz
  4592  0043  280D               	goto	l2749
  4593  0044  2829               	goto	l2761
  4594  0045                     l2777:	
  4595                           
  4596                           ;app_led_usb_status.c: 71: ledCount++;
  4597  0045  0021               	movlb	1	; select bank1
  4598  0046  0AE0               	incf	APP_LEDUpdateUSBStatus@ledCount^(0+128),f
  4599  0047  1903               	skipnz
  4600  0048  0AE1               	incf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),f
  4601  0049  0008               	return
  4602  004A                     __end_of_APP_LEDUpdateUSBStatus:	
  4603  004A                     start_initialization:	
  4604  004A                     __initialization:	
  4605                           
  4606                           ; Clear objects allocated to BANK0
  4607  004A  3050               	movlw	low __pbssBANK0
  4608  004B  0084               	movwf	4
  4609  004C  3000               	movlw	high __pbssBANK0
  4610  004D  0085               	movwf	5
  4611  004E  3010               	movlw	16
  4612  004F  318D  2588  3180   	fcall	clear_ram0
  4613                           
  4614                           ; Clear objects allocated to BANK1
  4615  0052  30E0               	movlw	low __pbssBANK1
  4616  0053  0084               	movwf	4
  4617  0054  3000               	movlw	high __pbssBANK1
  4618  0055  0085               	movwf	5
  4619  0056  3010               	movlw	16
  4620  0057  318D  2588  3180   	fcall	clear_ram0
  4621                           
  4622                           ; Clear objects allocated to BANK2
  4623  005A  3020               	movlw	low __pbssBANK2
  4624  005B  0084               	movwf	4
  4625  005C  3001               	movlw	high __pbssBANK2
  4626  005D  0085               	movwf	5
  4627  005E  303C               	movlw	60
  4628  005F  318D  2588  3180   	fcall	clear_ram0
  4629                           
  4630                           ; Clear objects allocated to BANK3
  4631  0062  30A4               	movlw	low __pbssBANK3
  4632  0063  0084               	movwf	4
  4633  0064  3001               	movlw	high __pbssBANK3
  4634  0065  0085               	movwf	5
  4635  0066  3027               	movlw	39
  4636  0067  318D  2588  3180   	fcall	clear_ram0
  4637                           
  4638                           ; Clear objects allocated to BANK4
  4639  006A  3020               	movlw	low __pbssBANK4
  4640  006B  0084               	movwf	4
  4641  006C  3002               	movlw	high __pbssBANK4
  4642  006D  0085               	movwf	5
  4643  006E  304E               	movlw	78
  4644  006F  318D  2588  3180   	fcall	clear_ram0
  4645  0072                     end_of_initialization:	
  4646                           ;End of C runtime variable initialization code
  4647                           
  4648  0072                     __end_of__initialization:	
  4649  0072  0020               	movlb	0
  4650  0073  2874               	ljmp	_main	;jump to C main() function
  4651  0074                     __pmaintext:	
  4652 ;;
  4653 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4654 ;;
  4655 ;; *************** function _main *****************
  4656 ;; Defined at:
  4657 ;;		line 35 in file "../src/main.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;		None
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;		None
  4662 ;; Return value:  Size  Location     Type
  4663 ;;		None               void
  4664 ;; Registers used:
  4665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4666 ;; Tracked objects:
  4667 ;;		On entry : 17F/0
  4668 ;;		On exit  : 17F/1D
  4669 ;;		Unchanged: FFE80/0
  4670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4675 ;;Total ram usage:        0 bytes
  4676 ;; Hardware stack levels required when called:   10
  4677 ;; This function calls:
  4678 ;;		_SYSTEM_Initialize
  4679 ;;		_USBDeviceInit
  4680 ;;		_BLEDeviceInit
  4681 ;;		_APP_DeviceAudioMIDITasks
  4682 ;;		_USBDeviceTasks
  4683 ;; This function is called by:
  4684 ;;		Startup code after reset
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           
  4689                           ;psect for function _main
  4690  0074                     _main:	
  4691                           
  4692                           ;main.c: 36: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  4693                           
  4694                           ;incstack = 0
  4695                           ; Regs used in _main: [allreg]
  4696  0074  3000               	movlw	0
  4697  0075  2086  3180         	fcall	_SYSTEM_Initialize
  4698                           
  4699                           ;main.c: 38: USBDeviceInit();
  4700  0077  2546  3180         	fcall	_USBDeviceInit
  4701                           
  4702                           ;main.c: 39: ;
  4703                           ;main.c: 41: BLEDeviceInit();
  4704  0079  209A  3180         	fcall	_BLEDeviceInit
  4705  007B                     l2805:	
  4706                           
  4707                           ;main.c: 44: {
  4708                           ;main.c: 45: ;
  4709                           ;main.c: 49: APP_DeviceAudioMIDITasks();
  4710  007B  209D  3180         	fcall	_APP_DeviceAudioMIDITasks
  4711                           
  4712                           ;main.c: 64: USBDeviceTasks();
  4713  007D  2474  3180         	fcall	_USBDeviceTasks
  4714                           
  4715                           ;main.c: 70: if( USBDeviceState < CONFIGURED_STATE )
  4716  007F  3020               	movlw	32
  4717  0080  0253               	subwf	_USBDeviceState,w
  4718  0081  1C03               	btfss	3,0
  4719  0082  287B               	goto	l2805
  4720                           
  4721                           ;main.c: 74: }
  4722                           ;main.c: 80: if( UCONbits.SUSPND == 1 )
  4723  0083  003D               	movlb	29	; select bank29
  4724  0084  080E               	movf	14,w	;volatile
  4725  0085  287B               	goto	l2805
  4726  0086                     __end_of_main:	
  4727  0086                     __ptext47:	
  4728 ;; *************** function _SYSTEM_Initialize *****************
  4729 ;; Defined at:
  4730 ;;		line 87 in file "../src/pic16f1459/system.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;  state           1    wreg     enum E2634
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;  state           1    1[COMMON] enum E2634
  4735 ;; Return value:  Size  Location     Type
  4736 ;;		None               void
  4737 ;; Registers used:
  4738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4739 ;; Tracked objects:
  4740 ;;		On entry : 17F/0
  4741 ;;		On exit  : 178/0
  4742 ;;		Unchanged: FFE80/0
  4743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4745 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4747 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4748 ;;Total ram usage:        1 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; Hardware stack levels required when called:    2
  4751 ;; This function calls:
  4752 ;;		_LED_Enable
  4753 ;; This function is called by:
  4754 ;;		_main
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           
  4759                           ;psect for function _SYSTEM_Initialize
  4760  0086                     _SYSTEM_Initialize:	
  4761                           
  4762                           ;incstack = 0
  4763                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4764                           ;SYSTEM_Initialize@state stored from wreg
  4765  0086  00F1               	movwf	SYSTEM_Initialize@state
  4766                           
  4767                           ; Switch size 1, requested type "space"
  4768                           ; Number of cases is 3, Range of values is 0 to 2
  4769                           ; switch strategies available:
  4770                           ; Name         Instructions Cycles
  4771                           ; simple_byte           10     6 (average)
  4772                           ; direct_byte           12     6 (fixed)
  4773                           ; jumptable            260     6 (fixed)
  4774                           ; rangetable             7     4 (fixed)
  4775                           ; spacedrange           11     6 (fixed)
  4776                           ; locatedrange           3     3 (fixed)
  4777                           ;	Chosen strategy is simple_byte
  4778                           
  4779                           ;system.c: 100: break;
  4780                           
  4781                           ;system.c: 88: switch(state)
  4782  0087  3A00               	xorlw	0	; case 0
  4783  0088  1903               	skipnz
  4784  0089  2891               	goto	l2725
  4785  008A  3A01               	xorlw	1	; case 1
  4786  008B  1903               	skipnz
  4787  008C  2899               	goto	l14
  4788  008D  3A03               	xorlw	3	; case 2
  4789  008E  1903               	skipnz
  4790  008F  2899               	goto	l14
  4791  0090  2899               	goto	l14
  4792  0091                     l2725:	
  4793                           
  4794                           ;system.c: 94: OSCCON = 0xFC;
  4795  0091  30FC               	movlw	252
  4796  0092  0021               	movlb	1	; select bank1
  4797  0093  0099               	movwf	25	;volatile
  4798                           
  4799                           ;system.c: 95: ACTCON = 0x90;
  4800  0094  3090               	movlw	144
  4801  0095  0027               	movlb	7	; select bank7
  4802  0096  009B               	movwf	27	;volatile
  4803                           
  4804                           ;system.c: 97: LED_Enable(LED_D1);
  4805  0097  3001               	movlw	1
  4806  0098  2BA1               	ljmp	_LED_Enable
  4807  0099                     l14:	
  4808  0099  0008               	return
  4809  009A                     __end_of_SYSTEM_Initialize:	
  4810  009A                     __ptext44:	
  4811 ;; *************** function _BLEDeviceInit *****************
  4812 ;; Defined at:
  4813 ;;		line 70 in file "../src/app_device_ble_midi.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;		None
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;		None
  4818 ;; Return value:  Size  Location     Type
  4819 ;;		None               void
  4820 ;; Registers used:
  4821 ;;		wreg, status,2, status,0, pclath, cstack
  4822 ;; Tracked objects:
  4823 ;;		On entry : 17F/0
  4824 ;;		On exit  : 17F/4
  4825 ;;		Unchanged: FFE80/0
  4826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4831 ;;Total ram usage:        0 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; Hardware stack levels required when called:    2
  4834 ;; This function calls:
  4835 ;;		_PIN_MANAGER_Initialize
  4836 ;;		_SPI_Initialize
  4837 ;; This function is called by:
  4838 ;;		_main
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842                           
  4843                           ;psect for function _BLEDeviceInit
  4844  009A                     _BLEDeviceInit:	
  4845                           
  4846                           ;app_device_ble_midi.c: 72: PIN_MANAGER_Initialize();
  4847                           
  4848                           ;incstack = 0
  4849                           ; Regs used in _BLEDeviceInit: [wreg+status,2+status,0+pclath+cstack]
  4850  009A  2167  3180         	fcall	_PIN_MANAGER_Initialize
  4851                           
  4852                           ;app_device_ble_midi.c: 73: SPI_Initialize();
  4853  009C  2BB7               	ljmp	l3367
  4854  009D                     __end_of_BLEDeviceInit:	
  4855  009D                     __ptext28:	
  4856 ;; *************** function _APP_DeviceAudioMIDITasks *****************
  4857 ;; Defined at:
  4858 ;;		line 59 in file "../src/app_device_audio_midi.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;		None
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;  velocity        1   15[BANK0 ] unsigned char 
  4863 ;;  scan_pitch      1   14[BANK0 ] unsigned char 
  4864 ;;  bscan           1   13[BANK0 ] unsigned char 
  4865 ;; Return value:  Size  Location     Type
  4866 ;;		None               void
  4867 ;; Registers used:
  4868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4869 ;; Tracked objects:
  4870 ;;		On entry : 162/4
  4871 ;;		On exit  : 162/0
  4872 ;;		Unchanged: FFE80/0
  4873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4875 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4877 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4878 ;;Total ram usage:        9 bytes
  4879 ;; Hardware stack levels used:    1
  4880 ;; Hardware stack levels required when called:    5
  4881 ;; This function calls:
  4882 ;;		_USBTransferOnePacket
  4883 ;;		_scan_task
  4884 ;; This function is called by:
  4885 ;;		_main
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888                           
  4889                           
  4890                           ;psect for function _APP_DeviceAudioMIDITasks
  4891  009D                     _APP_DeviceAudioMIDITasks:	
  4892                           
  4893                           ;app_device_audio_midi.c: 74: {
  4894                           ;app_device_audio_midi.c: 75: uint8_t scan_pitch = 0x3C, velocity = 0;
  4895                           
  4896                           ;incstack = 0
  4897                           ; Regs used in _APP_DeviceAudioMIDITasks: [allreg]
  4898  009D  303C               	movlw	60
  4899  009E  0020               	movlb	0	; select bank0
  4900  009F  00EE               	movwf	APP_DeviceAudioMIDITasks@scan_pitch
  4901  00A0  306F               	movlw	APP_DeviceAudioMIDITasks@velocity& (0+255)
  4902  00A1  01EF               	clrf	APP_DeviceAudioMIDITasks@velocity
  4903                           
  4904                           ;app_device_audio_midi.c: 77: bscan = scan_task(&scan_pitch, &velocity);
  4905  00A2  00E1               	movwf	?_scan_task
  4906  00A3  306E               	movlw	APP_DeviceAudioMIDITasks@scan_pitch& (0+255)
  4907  00A4  216E  3180         	fcall	_scan_task
  4908  00A6  0020               	movlb	0	; select bank0
  4909  00A7  00ED               	movwf	APP_DeviceAudioMIDITasks@bscan
  4910                           
  4911                           ;app_device_audio_midi.c: 78: if (bscan) {
  4912  00A8  086D               	movf	APP_DeviceAudioMIDITasks@bscan,w
  4913  00A9  1903               	btfsc	3,2
  4914  00AA  28DB               	goto	l2925
  4915                           
  4916                           ;app_device_audio_midi.c: 79: midiData.Val = 0;
  4917  00AB  0023               	movlb	3	; select bank3
  4918                           
  4919                           ;app_device_audio_midi.c: 80: midiData.CableNumber = 0;
  4920                           
  4921                           ;app_device_audio_midi.c: 81: midiData.CodeIndexNumber = 0x9;
  4922                           
  4923                           ;app_device_audio_midi.c: 82: midiData.DATA_0 = 0x90;
  4924  00AC  2783  3180         	fcall	PL224	;call to abstracted procedure
  4925                           
  4926                           ;app_device_audio_midi.c: 83: midiData.DATA_1 = scan_pitch;
  4927  00AE  0020               	movlb	0	; select bank0
  4928  00AF  086E               	movf	APP_DeviceAudioMIDITasks@scan_pitch,w
  4929  00B0  0023               	movlb	3	; select bank3
  4930  00B1  00A2               	movwf	34
  4931                           
  4932                           ;app_device_audio_midi.c: 84: midiData.DATA_2 = velocity;
  4933  00B2  0020               	movlb	0	; select bank0
  4934  00B3  086F               	movf	APP_DeviceAudioMIDITasks@velocity,w
  4935  00B4  0023               	movlb	3	; select bank3
  4936  00B5  00A3               	movwf	35
  4937                           
  4938                           ;app_device_audio_midi.c: 88: if( USBDeviceState == CONFIGURED_STATE || UCONbits.SUSPND)
  4939  00B6  0020               	movlb	0	; select bank0
  4940  00B7  0853               	movf	_USBDeviceState,w
  4941  00B8  3A20               	xorlw	32
  4942  00B9  1903               	skipnz
  4943  00BA  28BE               	goto	l2915
  4944  00BB  003D               	movlb	29	; select bank29
  4945  00BC  1C8E               	btfss	14,1	;volatile
  4946  00BD  28DB               	goto	l2925
  4947  00BE                     l2915:	
  4948                           
  4949                           ;app_device_audio_midi.c: 89: {
  4950                           ;app_device_audio_midi.c: 90: if(!(USBRxHandle==0?0:((volatile BDT_ENTRY*)USBRxHandle)->
      +                          STAT.UOWN))
  4951  00BE  0020               	movlb	0	; select bank0
  4952  00BF  0854               	movf	_USBRxHandle,w
  4953  00C0  1903               	btfsc	3,2
  4954  00C1  28C7               	goto	l2919
  4955  00C2  0854               	movf	_USBRxHandle,w
  4956  00C3  27B2  3180         	fcall	PL244	;call to abstracted procedure
  4957  00C5  00E7               	movwf	_APP_DeviceAudioMIDITasks$417
  4958  00C6  28C8               	goto	L13
  4959  00C7                     l2919:	
  4960  00C7  01E7               	clrf	_APP_DeviceAudioMIDITasks$417
  4961  00C8                     L13:	
  4962  00C8  01E8               	clrf	_APP_DeviceAudioMIDITasks$417+1
  4963  00C9  0868               	movf	_APP_DeviceAudioMIDITasks$417+1,w
  4964  00CA  0467               	iorwf	_APP_DeviceAudioMIDITasks$417,w
  4965  00CB  30A0               	movlw	160
  4966  00CC  1D03               	skipz
  4967  00CD  28D5               	goto	L16
  4968                           
  4969                           ;app_device_audio_midi.c: 91: {
  4970                           ;app_device_audio_midi.c: 92: USBRxHandle = USBTransferOnePacket(1,0,(uint8_t*)&Received
      +                          DataBuffer,64);
  4971  00CE  01F0               	clrf	?_USBTransferOnePacket
  4972  00CF  27AD  3180         	fcall	PL242	;call to abstracted procedure
  4973  00D1  212E  3180         	fcall	_USBTransferOnePacket
  4974  00D3  00D4               	movwf	_USBRxHandle
  4975  00D4  30A0               	movlw	160
  4976  00D5                     L16:	
  4977                           
  4978                           ;app_device_audio_midi.c: 93: }
  4979                           ;app_device_audio_midi.c: 94: USBTxHandle = USBTransferOnePacket(1,1,(uint8_t*)&midiData
      +                          ,4);
  4980  00D5  2797  3180         	fcall	PL236	;call to abstracted procedure
  4981  00D7  212E  3180         	fcall	_USBTransferOnePacket
  4982  00D9  0021               	movlb	1	; select bank1
  4983  00DA  00E7               	movwf	_USBTxHandle^(0+128)
  4984  00DB                     l2925:	
  4985                           
  4986                           ;app_device_audio_midi.c: 95: }
  4987                           ;app_device_audio_midi.c: 96: }
  4988                           ;app_device_audio_midi.c: 97: }
  4989                           ;app_device_audio_midi.c: 121: if (msCounter == 0 && !sentNoteOff && !(USBTxHandle==0?0:
      +                          ((volatile BDT_ENTRY*)USBTxHandle)->STAT.UOWN)) {
  4990  00DB  0021               	movlb	1	; select bank1
  4991  00DC  08E9               	movf	_msCounter^(0+128),f
  4992  00DD  1D03               	skipz
  4993  00DE  0008               	return
  4994  00DF  08EC               	movf	_sentNoteOff^(0+128),f
  4995  00E0  1D03               	skipz
  4996  00E1  0008               	return
  4997  00E2  0867               	movf	_USBTxHandle^(0+128),w
  4998  00E3  1903               	btfsc	3,2
  4999  00E4  28EB               	goto	l2933
  5000  00E5  0867               	movf	_USBTxHandle^(0+128),w
  5001  00E6  27B2  3180         	fcall	PL244	;call to abstracted procedure
  5002  00E8  0020               	movlb	0	; select bank0
  5003  00E9  00E9               	movwf	_APP_DeviceAudioMIDITasks$451
  5004  00EA  28ED               	goto	L14
  5005  00EB                     l2933:	
  5006  00EB  0020               	movlb	0	; select bank0
  5007  00EC  01E9               	clrf	_APP_DeviceAudioMIDITasks$451
  5008  00ED                     L14:	
  5009  00ED  01EA               	clrf	_APP_DeviceAudioMIDITasks$451+1
  5010  00EE  086A               	movf	_APP_DeviceAudioMIDITasks$451+1,w
  5011  00EF  0469               	iorwf	_APP_DeviceAudioMIDITasks$451,w
  5012  00F0  1D03               	skipz
  5013  00F1  0008               	return
  5014                           
  5015                           ;app_device_audio_midi.c: 123: msCounter = 100;
  5016  00F2  3064               	movlw	100
  5017  00F3  0021               	movlb	1	; select bank1
  5018  00F4  00E9               	movwf	_msCounter^(0+128)
  5019                           
  5020                           ;app_device_audio_midi.c: 124: midiData.Val = 0;
  5021  00F5  0023               	movlb	3	; select bank3
  5022                           
  5023                           ;app_device_audio_midi.c: 126: midiData.CableNumber = 0;
  5024                           
  5025                           ;app_device_audio_midi.c: 127: midiData.CodeIndexNumber = 0x9;
  5026                           
  5027                           ;app_device_audio_midi.c: 128: midiData.DATA_0 = 0x90;
  5028  00F6  2783  3180         	fcall	PL224	;call to abstracted procedure
  5029                           
  5030                           ;app_device_audio_midi.c: 129: midiData.DATA_1 = pitch++;
  5031  00F8  0021               	movlb	1	; select bank1
  5032  00F9  086B               	movf	_pitch^(0+128),w
  5033  00FA  0023               	movlb	3	; select bank3
  5034  00FB  00A2               	movwf	34
  5035  00FC  0021               	movlb	1	; select bank1
  5036  00FD  0AEB               	incf	_pitch^(0+128),f
  5037                           
  5038                           ;app_device_audio_midi.c: 130: midiData.DATA_2 = 0x00;
  5039  00FE  0023               	movlb	3	; select bank3
  5040  00FF  01A3               	clrf	35
  5041                           
  5042                           ;app_device_audio_midi.c: 132: if(pitch == 0x49)
  5043  0100  0021               	movlb	1	; select bank1
  5044  0101  086B               	movf	_pitch^(0+128),w
  5045  0102  3A49               	xorlw	73
  5046  0103  1D03               	skipz
  5047  0104  2907               	goto	l2953
  5048                           
  5049                           ;app_device_audio_midi.c: 133: pitch = 0x3C;
  5050  0105  303C               	movlw	60
  5051  0106  00EB               	movwf	_pitch^(0+128)
  5052  0107                     l2953:	
  5053                           
  5054                           ;app_device_audio_midi.c: 136: sentNoteOff = 1;
  5055  0107  01EC               	clrf	_sentNoteOff^(0+128)
  5056  0108  0AEC               	incf	_sentNoteOff^(0+128),f
  5057                           
  5058                           ;app_device_audio_midi.c: 138: if( USBDeviceState == CONFIGURED_STATE || UCONbits.SUSPND)
  5059  0109  0020               	movlb	0	; select bank0
  5060  010A  0853               	movf	_USBDeviceState,w
  5061  010B  3A20               	xorlw	32
  5062  010C  1903               	skipnz
  5063  010D  2911               	goto	l2957
  5064  010E  003D               	movlb	29	; select bank29
  5065  010F  1C8E               	btfss	14,1	;volatile
  5066  0110  0008               	return
  5067  0111                     l2957:	
  5068                           
  5069                           ;app_device_audio_midi.c: 139: {
  5070                           ;app_device_audio_midi.c: 140: if(!(USBRxHandle==0?0:((volatile BDT_ENTRY*)USBRxHandle)-
      +                          >STAT.UOWN))
  5071  0111  0020               	movlb	0	; select bank0
  5072  0112  0854               	movf	_USBRxHandle,w
  5073  0113  1903               	btfsc	3,2
  5074  0114  291A               	goto	l2961
  5075  0115  0854               	movf	_USBRxHandle,w
  5076  0116  27B2  3180         	fcall	PL244	;call to abstracted procedure
  5077  0118  00EB               	movwf	_APP_DeviceAudioMIDITasks$452
  5078  0119  291B               	goto	L15
  5079  011A                     l2961:	
  5080  011A  01EB               	clrf	_APP_DeviceAudioMIDITasks$452
  5081  011B                     L15:	
  5082  011B  01EC               	clrf	_APP_DeviceAudioMIDITasks$452+1
  5083  011C  086C               	movf	_APP_DeviceAudioMIDITasks$452+1,w
  5084  011D  046B               	iorwf	_APP_DeviceAudioMIDITasks$452,w
  5085  011E  30A0               	movlw	160
  5086  011F  1D03               	skipz
  5087  0120  2928               	goto	L17
  5088                           
  5089                           ;app_device_audio_midi.c: 141: {
  5090                           ;app_device_audio_midi.c: 142: USBRxHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receive
      +                          dDataBuffer,64);
  5091  0121  01F0               	clrf	?_USBTransferOnePacket
  5092  0122  27AD  3180         	fcall	PL242	;call to abstracted procedure
  5093  0124  212E  3180         	fcall	_USBTransferOnePacket
  5094  0126  00D4               	movwf	_USBRxHandle
  5095  0127  30A0               	movlw	160
  5096  0128                     L17:	
  5097                           
  5098                           ;app_device_audio_midi.c: 143: }
  5099                           ;app_device_audio_midi.c: 144: USBTxHandle = USBTransferOnePacket(1,1,(uint8_t*)&midiDat
      +                          a,4);
  5100  0128  2797  3180         	fcall	PL236	;call to abstracted procedure
  5101  012A  212E               	fcall	_USBTransferOnePacket
  5102  012B  0021               	movlb	1	; select bank1
  5103  012C  00E7               	movwf	_USBTxHandle^(0+128)
  5104  012D  0008               	return
  5105  012E                     __end_of_APP_DeviceAudioMIDITasks:	
  5106  012E                     __ptext43:	
  5107 ;; *************** function _USBTransferOnePacket *****************
  5108 ;; Defined at:
  5109 ;;		line 1015 in file "../framework/usb/usb_device.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;  ep              1    wreg     unsigned char 
  5112 ;;  dir             1    0[COMMON] unsigned char 
  5113 ;;  data            2    1[COMMON] PTR unsigned char 
  5114 ;;		 -> midiData(4), ReceivedDataBuffer(64), 
  5115 ;;  len             1    3[COMMON] unsigned char 
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;  ep              1    6[COMMON] unsigned char 
  5118 ;;  handle          1    7[COMMON] PTR volatile struct __BD
  5119 ;;		 -> BDT(32), NULL(0), 
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  1    wreg      PTR void 
  5122 ;; Registers used:
  5123 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5124 ;; Tracked objects:
  5125 ;;		On entry : 1E/1
  5126 ;;		On exit  : 1E/1
  5127 ;;		Unchanged: FFFE1/0
  5128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5129 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5130 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5131 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5132 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5133 ;;Total ram usage:        8 bytes
  5134 ;; Hardware stack levels used:    1
  5135 ;; Hardware stack levels required when called:    1
  5136 ;; This function calls:
  5137 ;;		Nothing
  5138 ;; This function is called by:
  5139 ;;		_APP_DeviceAudioMIDIInitialize
  5140 ;;		_APP_DeviceAudioMIDITasks
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144                           
  5145                           ;psect for function _USBTransferOnePacket
  5146  012E                     _USBTransferOnePacket:	
  5147                           
  5148                           ;incstack = 0
  5149                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  5150                           ;USBTransferOnePacket@ep stored from wreg
  5151  012E  00F6               	movwf	USBTransferOnePacket@ep
  5152                           
  5153                           ;usb_device.c: 1016: volatile BDT_ENTRY* handle;
  5154                           ;usb_device.c: 1019: if(dir != 0)
  5155  012F  0870               	movf	USBTransferOnePacket@dir,w
  5156  0130  1903               	btfsc	3,2
  5157  0131  2937               	goto	l3145
  5158                           
  5159                           ;usb_device.c: 1020: {
  5160                           ;usb_device.c: 1022: handle = pBDTEntryIn[ep];
  5161  0132  0876               	movf	USBTransferOnePacket@ep,w
  5162  0133  3E50               	addlw	_pBDTEntryIn& (0+255)
  5163  0134  0086               	movwf	6
  5164  0135  0187               	clrf	7
  5165  0136  293A               	goto	L21
  5166  0137                     l3145:	
  5167                           ;usb_device.c: 1023: }
  5168                           
  5169                           
  5170                           ;usb_device.c: 1024: else
  5171                           ;usb_device.c: 1025: {
  5172                           ;usb_device.c: 1027: handle = pBDTEntryOut[ep];
  5173  0137  0876               	movf	USBTransferOnePacket@ep,w
  5174  0138  27C5  3180         	fcall	PL254	;call to abstracted procedure
  5175  013A                     L21:	
  5176  013A  0801               	movf	1,w
  5177  013B  00F7               	movwf	USBTransferOnePacket@handle
  5178                           
  5179                           ;usb_device.c: 1028: }
  5180                           ;usb_device.c: 1032: if(handle == 0)
  5181  013C  08F7               	movf	USBTransferOnePacket@handle,f
  5182  013D  1903               	btfsc	3,2
  5183                           
  5184                           ;usb_device.c: 1033: {
  5185                           ;usb_device.c: 1034: return 0;
  5186  013E  3400               	retlw	0
  5187                           
  5188                           ;usb_device.c: 1035: }
  5189                           ;usb_device.c: 1048: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  5190  013F  0871               	movf	USBTransferOnePacket@data,w
  5191  0140  00F4               	movwf	??_USBTransferOnePacket
  5192  0141  307F               	movlw	127
  5193  0142  0572               	andwf	USBTransferOnePacket@data+1,w
  5194  0143  00F5               	movwf	??_USBTransferOnePacket+1
  5195  0144  0877               	movf	USBTransferOnePacket@handle,w
  5196  0145  3E02               	addlw	2
  5197  0146  0086               	movwf	6
  5198  0147  0187               	clrf	7
  5199  0148  0874               	movf	??_USBTransferOnePacket,w
  5200  0149  3FC0               	movwi [0]fsr1
  5201  014A  0875               	movf	??_USBTransferOnePacket+1,w
  5202  014B  3FC1               	movwi [1]fsr1
  5203                           
  5204                           ;usb_device.c: 1049: handle->CNT = len;
  5205  014C  0A77               	incf	USBTransferOnePacket@handle,w
  5206  014D  0086               	movwf	6
  5207  014E  0873               	movf	USBTransferOnePacket@len,w
  5208  014F  0081               	movwf	1
  5209                           
  5210                           ;usb_device.c: 1050: handle->STAT.Val &= 0x40;
  5211  0150  0877               	movf	USBTransferOnePacket@handle,w
  5212  0151  0086               	movwf	6
  5213  0152  3040               	movlw	64
  5214  0153  0581               	andwf	1,f
  5215                           
  5216                           ;usb_device.c: 1051: handle->STAT.Val |= (0x08 & 0x08);
  5217  0154  0877               	movf	USBTransferOnePacket@handle,w
  5218  0155  0086               	movwf	6
  5219  0156  1581               	bsf	1,3
  5220                           
  5221                           ;usb_device.c: 1052: handle->STAT.Val |= 0x80;
  5222  0157  0877               	movf	USBTransferOnePacket@handle,w
  5223  0158  0086               	movwf	6
  5224  0159  1781               	bsf	1,7
  5225                           
  5226                           ;usb_device.c: 1055: if(dir != 0)
  5227  015A  0870               	movf	USBTransferOnePacket@dir,w
  5228  015B  1903               	btfsc	3,2
  5229  015C  2961               	goto	l3165
  5230                           
  5231                           ;usb_device.c: 1056: {
  5232                           ;usb_device.c: 1058: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  5233  015D  0876               	movf	USBTransferOnePacket@ep,w
  5234  015E  3E50               	addlw	_pBDTEntryIn& (0+255)
  5235  015F  0086               	movwf	6
  5236  0160  2963               	goto	L23
  5237  0161                     l3165:	
  5238                           ;usb_device.c: 1059: }
  5239                           
  5240                           
  5241                           ;usb_device.c: 1060: else
  5242                           ;usb_device.c: 1061: {
  5243                           ;usb_device.c: 1063: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  5244  0161  0876               	movf	USBTransferOnePacket@ep,w
  5245  0162  27C5               	fcall	PL254	;call to abstracted procedure
  5246  0163                     L23:	
  5247  0163  3004               	movlw	4
  5248  0164  0681               	xorwf	1,f
  5249                           
  5250                           ;usb_device.c: 1064: }
  5251                           ;usb_device.c: 1065: return (void*)handle;
  5252  0165  0877               	movf	USBTransferOnePacket@handle,w
  5253  0166  0008               	return
  5254  0167                     __end_of_USBTransferOnePacket:	
  5255  0167                     __ptext46:	
  5256 ;; *************** function _PIN_MANAGER_Initialize *****************
  5257 ;; Defined at:
  5258 ;;		line 50 in file "../src/pin_manager.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;		None
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;		None
  5263 ;; Return value:  Size  Location     Type
  5264 ;;		None               void
  5265 ;; Registers used:
  5266 ;;		None
  5267 ;; Tracked objects:
  5268 ;;		On entry : 17F/0
  5269 ;;		On exit  : 17F/1
  5270 ;;		Unchanged: FFE80/0
  5271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5276 ;;Total ram usage:        0 bytes
  5277 ;; Hardware stack levels used:    1
  5278 ;; Hardware stack levels required when called:    1
  5279 ;; This function calls:
  5280 ;;		Nothing
  5281 ;; This function is called by:
  5282 ;;		_BLEDeviceInit
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           
  5287                           ;psect for function _PIN_MANAGER_Initialize
  5288  0167                     _PIN_MANAGER_Initialize:	
  5289                           
  5290                           ;incstack = 0
  5291                           ; Regs used in _PIN_MANAGER_Initialize: []
  5292                           ;pin_manager.c: 52: do { TRISBbits.TRISB4 = 1; } while(0);
  5293  0167  0021               	movlb	1	; select bank1
  5294  0168  160D               	bsf	13,4	;volatile
  5295                           
  5296                           ;pin_manager.c: 53: do { TRISBbits.TRISB5 = 1; } while(0);
  5297  0169  168D               	bsf	13,5	;volatile
  5298                           
  5299                           ;pin_manager.c: 54: do { TRISBbits.TRISB6 = 1; } while(0);
  5300  016A  170D               	bsf	13,6	;volatile
  5301                           
  5302                           ;pin_manager.c: 55: do { TRISBbits.TRISB7 = 0; } while(0);
  5303  016B  138D               	bcf	13,7	;volatile
  5304                           
  5305                           ;pin_manager.c: 56: do { TRISCbits.TRISC7 = 0; } while(0);
  5306  016C  138E               	bcf	14,7	;volatile
  5307  016D  0008               	return
  5308  016E                     __end_of_PIN_MANAGER_Initialize:	
  5309  016E                     __ptext29:	
  5310 ;; *************** function _scan_task *****************
  5311 ;; Defined at:
  5312 ;;		line 212 in file "../src/scan.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;  note            1    wreg     PTR unsigned char 
  5315 ;;		 -> APP_DeviceAudioMIDITasks@scan_pitch(1), 
  5316 ;;  velocity        1    1[BANK0 ] PTR unsigned char 
  5317 ;;		 -> APP_DeviceAudioMIDITasks@velocity(1), 
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;  note            1    6[BANK0 ] PTR unsigned char 
  5320 ;;		 -> APP_DeviceAudioMIDITasks@scan_pitch(1), 
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  1    wreg      unsigned char 
  5323 ;; Registers used:
  5324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5325 ;; Tracked objects:
  5326 ;;		On entry : 17F/0
  5327 ;;		On exit  : 17F/2
  5328 ;;		Unchanged: FFE80/0
  5329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5330 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5331 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5333 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5334 ;;Total ram usage:        6 bytes
  5335 ;; Hardware stack levels used:    1
  5336 ;; Hardware stack levels required when called:    4
  5337 ;; This function calls:
  5338 ;;		_scan_init
  5339 ;;		_set_timer
  5340 ;;		_waiting_for_timer
  5341 ;;		_set_clock_and_data
  5342 ;;		_get_data
  5343 ;;		_is_end_of_scan
  5344 ;;		_run_adc
  5345 ;;		_is_adc_ready
  5346 ;;		_get_adc
  5347 ;;		_store_key_level
  5348 ;; This function is called by:
  5349 ;;		_APP_DeviceAudioMIDITasks
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353                           
  5354                           ;psect for function _scan_task
  5355  016E                     _scan_task:	
  5356                           
  5357                           ;incstack = 0
  5358                           ; Regs used in _scan_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5359                           ;scan_task@note stored from wreg
  5360  016E  00E6               	movwf	scan_task@note
  5361                           
  5362                           ;scan.c: 213: static uint8_t state = S_INIT;
  5363                           ;scan.c: 215: note_event.pitch = note_event.velocity = 0;
  5364  016F  0022               	movlb	2	; select bank2
  5365  0170  01D2               	clrf	(_note_event^(0+256)+1)
  5366  0171  01D1               	clrf	_note_event^(0+256)
  5367                           
  5368                           ;scan.c: 216: *note = *velocity = 0;
  5369  0172  0020               	movlb	0	; select bank0
  5370  0173  0861               	movf	scan_task@velocity,w
  5371  0174  0086               	movwf	6
  5372  0175  0187               	clrf	7
  5373  0176  0181               	clrf	1
  5374  0177  0866               	movf	scan_task@note,w
  5375  0178  0086               	movwf	6
  5376  0179  0181               	clrf	1
  5377                           
  5378                           ;scan.c: 218: if (!is_initialized)
  5379  017A  0022               	movlb	2	; select bank2
  5380  017B  08D9               	movf	_is_initialized^(0+256),f
  5381  017C  1D03               	skipz
  5382  017D  2980               	goto	i1L__ptext40
  5383                           
  5384                           ;scan.c: 219: scan_init();
  5385  017E  2359  3180         	fcall	_scan_init
  5386  0180                     i1L__ptext40:	
  5387                           ;scan.c: 221: if (waiting_for_timer()) return 0;
  5388                           
  5389                           
  5390                           ;psect for function _waiting_for_timer
  5391  0180                     i1L_waiting_for_timer:	
  5392  0180                     i1Ll3263:	
  5393                           
  5394                           ;scan.c: 65: return (wait_timer = wait_timer && !INTCONbits.TMR0IF);
  5395  0180  01F0               	clrf	_waiting_for_timer$810
  5396  0181                     i1Ll3265:	
  5397  0181  0022               	movlb	2	; select bank2
  5398  0182  085A               	movf	_wait_timer^(0+256),w
  5399  0183  1D03               	btfss	3,2
  5400  0184  2986               	ljmp	i1Ll3267
  5401  0185  298F               	ljmp	i1Ll3271
  5402  0186                     i1Lu2140:	
  5403  0186                     i1Ll3267:	
  5404  0186  3180  190B         	btfsc	11,2	;volatile
  5405  0188  280C  3180         	ljmp	l3271
  5406  018A  298D               	ljmp	i1Ll3269
  5407  018B                     i1Lu2151:	
  5408  018B  3180  280C         	ljmp	l3271
  5409  018D                     i1Lu2150:	
  5410  018D                     i1Ll3269:	
  5411  018D  01F0               	clrf	_waiting_for_timer$810
  5412  018E  0AF0               	incf	_waiting_for_timer$810,f
  5413  018F                     i1Ll3271:	
  5414  018F  0870               	movf	_waiting_for_timer$810,w
  5415  0190  00DA               	movwf	_wait_timer^(0+256)
  5416  0191                     i1Ll210:	
  5417  0191  3A00               	xorlw	0
  5418  0192  1D03               	btfss	3,2
  5419  0193  3400               	retlw	0
  5420  0194  2B3D               	goto	l3219
  5421  0195                     l3185:	
  5422  0195  3000               	movlw	0
  5423                           
  5424                           ;scan.c: 225: set_clock_and_data(0,1);
  5425  0196  01F0               	clrf	?_set_clock_and_data
  5426  0197  0AF0               	incf	?_set_clock_and_data,f
  5427  0198                     i2L__ptext39:	
  5428                           
  5429                           ;psect for function _set_clock_and_data
  5430  0198                     i2L_set_clock_and_data:	
  5431                           
  5432                           ;incstack = 0
  5433                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  5434                           ;set_clock_and_data@c stored from wreg
  5435  0198  00F2               	movwf	set_clock_and_data@c
  5436  0199                     i2Ll3275:	
  5437                           
  5438                           ;scan.c: 69: LATCbits.LATC4 = !!c;
  5439  0199  3000               	movlw	0
  5440  019A  08F2               	movf	set_clock_and_data@c,f
  5441  019B  1D03               	btfss	3,2
  5442  019C  3001               	movlw	1
  5443  019D  00F1               	movwf	??_set_clock_and_data
  5444  019E  0EF1               	swapf	??_set_clock_and_data,f
  5445  019F  0022               	movlb	2	; select bank2
  5446  01A0  080E               	movf	14,w	;volatile
  5447  01A1  0671               	xorwf	??_set_clock_and_data,w
  5448  01A2  39EF               	andlw	-17
  5449  01A3  0671               	xorwf	??_set_clock_and_data,w
  5450  01A4  008E               	movwf	14	;volatile
  5451                           
  5452                           ;scan.c: 70: LATCbits.LATC5 = !!d;
  5453  01A5  3000               	movlw	0
  5454  01A6  08F0               	movf	set_clock_and_data@d,f
  5455  01A7  1D03               	btfss	3,2
  5456  01A8  3001               	movlw	1
  5457  01A9  00F1               	movwf	??_set_clock_and_data
  5458  01AA  0EF1               	swapf	??_set_clock_and_data,f
  5459  01AB  0DF1               	rlf	??_set_clock_and_data,f
  5460  01AC  080E               	movf	14,w	;volatile
  5461  01AD  0671               	xorwf	??_set_clock_and_data,w
  5462  01AE  39DF               	andlw	-33
  5463  01AF  0671               	xorwf	??_set_clock_and_data,w
  5464  01B0  008E               	movwf	14	;volatile
  5465  01B1                     i2Ll213:	
  5466                           
  5467                           ;scan.c: 226: state = S_GO;
  5468  01B1  01DB               	clrf	scan_task@state^(0+256)
  5469  01B2  0ADB               	incf	scan_task@state^(0+256),f
  5470  01B3                     i3L__ptext41:	
  5471                           ;scan.c: 227: set_timer();
  5472                           
  5473                           
  5474                           ;psect for function _set_timer
  5475  01B3                     i3L_set_timer:	
  5476  01B3                     i3Ll3259:	
  5477                           
  5478                           ;scan.c: 56: wait_timer = 1;
  5479  01B3  01DA               	clrf	_wait_timer^(0+256)
  5480  01B4  0ADA               	incf	_wait_timer^(0+256),f
  5481                           
  5482                           ;scan.c: 57: OPTION_REGbits.TMR0CS = 0;
  5483  01B5  0021               	movlb	1	; select bank1
  5484  01B6  1295               	bcf	21,5	;volatile
  5485                           
  5486                           ;scan.c: 58: OPTION_REGbits.PSA = 1;
  5487  01B7  1595               	bsf	21,3	;volatile
  5488                           
  5489                           ;scan.c: 59: INTCONbits.TMR0IE = 0;
  5490  01B8  128B               	bcf	11,5	;volatile
  5491                           
  5492                           ;scan.c: 60: INTCONbits.TMR0IF = 0;
  5493  01B9  110B               	bcf	11,2	;volatile
  5494  01BA                     i3Ll3261:	
  5495                           
  5496                           ;scan.c: 61: TMR0 = 0;
  5497  01BA  0020               	movlb	0	; select bank0
  5498  01BB  0195               	clrf	21	;volatile
  5499  01BC                     i3Ll205:	
  5500                           
  5501                           ;scan.c: 228: break;
  5502  01BC  2B47               	goto	l3221
  5503  01BD                     l3191:	
  5504  01BD  3000               	movlw	0
  5505                           
  5506                           ;scan.c: 231: set_clock_and_data(0,1);
  5507  01BE  01F0               	clrf	?_set_clock_and_data
  5508  01BF  0AF0               	incf	?_set_clock_and_data,f
  5509  01C0                     i4L__ptext39:	
  5510                           
  5511                           ;psect for function _set_clock_and_data
  5512  01C0                     i4L_set_clock_and_data:	
  5513                           
  5514                           ;incstack = 0
  5515                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  5516                           ;set_clock_and_data@c stored from wreg
  5517  01C0  00F2               	movwf	set_clock_and_data@c
  5518  01C1                     i4Ll3275:	
  5519                           
  5520                           ;scan.c: 69: LATCbits.LATC4 = !!c;
  5521  01C1  3000               	movlw	0
  5522  01C2  08F2               	movf	set_clock_and_data@c,f
  5523  01C3  1D03               	btfss	3,2
  5524  01C4  3001               	movlw	1
  5525  01C5  00F1               	movwf	??_set_clock_and_data
  5526  01C6  0EF1               	swapf	??_set_clock_and_data,f
  5527  01C7  0022               	movlb	2	; select bank2
  5528  01C8  080E               	movf	14,w	;volatile
  5529  01C9  0671               	xorwf	??_set_clock_and_data,w
  5530  01CA  39EF               	andlw	-17
  5531  01CB  0671               	xorwf	??_set_clock_and_data,w
  5532  01CC  008E               	movwf	14	;volatile
  5533                           
  5534                           ;scan.c: 70: LATCbits.LATC5 = !!d;
  5535  01CD  3000               	movlw	0
  5536  01CE  08F0               	movf	set_clock_and_data@d,f
  5537  01CF  1D03               	btfss	3,2
  5538  01D0  3001               	movlw	1
  5539  01D1  00F1               	movwf	??_set_clock_and_data
  5540  01D2  0EF1               	swapf	??_set_clock_and_data,f
  5541  01D3  0DF1               	rlf	??_set_clock_and_data,f
  5542  01D4  080E               	movf	14,w	;volatile
  5543  01D5  0671               	xorwf	??_set_clock_and_data,w
  5544  01D6  39DF               	andlw	-33
  5545  01D7  0671               	xorwf	??_set_clock_and_data,w
  5546  01D8  008E               	movwf	14	;volatile
  5547  01D9                     i4Ll213:	
  5548                           
  5549                           ;scan.c: 232: state = S_CLOCK_RAISE;
  5550  01D9  3002               	movlw	2
  5551  01DA  00DB               	movwf	scan_task@state^(0+256)
  5552  01DB                     i5L__ptext41:	
  5553                           ;scan.c: 233: set_timer();
  5554                           
  5555                           
  5556                           ;psect for function _set_timer
  5557  01DB                     i5L_set_timer:	
  5558  01DB                     i5Ll3259:	
  5559                           
  5560                           ;scan.c: 56: wait_timer = 1;
  5561  01DB  01DA               	clrf	_wait_timer^(0+256)
  5562  01DC  0ADA               	incf	_wait_timer^(0+256),f
  5563                           
  5564                           ;scan.c: 57: OPTION_REGbits.TMR0CS = 0;
  5565  01DD  0021               	movlb	1	; select bank1
  5566  01DE  1295               	bcf	21,5	;volatile
  5567                           
  5568                           ;scan.c: 58: OPTION_REGbits.PSA = 1;
  5569  01DF  1595               	bsf	21,3	;volatile
  5570                           
  5571                           ;scan.c: 59: INTCONbits.TMR0IE = 0;
  5572  01E0  128B               	bcf	11,5	;volatile
  5573                           
  5574                           ;scan.c: 60: INTCONbits.TMR0IF = 0;
  5575  01E1  110B               	bcf	11,2	;volatile
  5576  01E2                     i5Ll3261:	
  5577                           
  5578                           ;scan.c: 61: TMR0 = 0;
  5579  01E2  0020               	movlb	0	; select bank0
  5580  01E3  0195               	clrf	21	;volatile
  5581  01E4                     i5Ll205:	
  5582                           
  5583                           ;scan.c: 234: break;
  5584  01E4  2B47               	goto	l3221
  5585  01E5                     l3195:	
  5586  01E5                     i6L__ptext38:	
  5587                           ;scan.c: 237: set_clock_and_data(1, get_data());
  5588                           
  5589                           
  5590                           ;psect for function _get_data
  5591  01E5                     i6L_get_data:	
  5592  01E5                     i6Ll3277:	
  5593                           
  5594                           ;scan.c: 74: return LATCbits.LATC5;
  5595  01E5  0022               	movlb	2	; select bank2
  5596  01E6  0E0E               	swapf	14,w	;volatile
  5597  01E7  0C89               	rrf	9,f
  5598  01E8  3901               	andlw	1
  5599  01E9                     i6Ll216:	
  5600  01E9  00F0               	movwf	?_set_clock_and_data
  5601  01EA  3001               	movlw	1
  5602  01EB                     i7L__ptext39:	
  5603                           
  5604                           ;psect for function _set_clock_and_data
  5605  01EB                     i7L_set_clock_and_data:	
  5606                           
  5607                           ;incstack = 0
  5608                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  5609                           ;set_clock_and_data@c stored from wreg
  5610  01EB  00F2               	movwf	set_clock_and_data@c
  5611  01EC                     i7Ll3275:	
  5612                           
  5613                           ;scan.c: 69: LATCbits.LATC4 = !!c;
  5614  01EC  3000               	movlw	0
  5615  01ED  08F2               	movf	set_clock_and_data@c,f
  5616  01EE  1D03               	btfss	3,2
  5617  01EF  3001               	movlw	1
  5618  01F0  00F1               	movwf	??_set_clock_and_data
  5619  01F1  0EF1               	swapf	??_set_clock_and_data,f
  5620  01F2  0022               	movlb	2	; select bank2
  5621  01F3  080E               	movf	14,w	;volatile
  5622  01F4  0671               	xorwf	??_set_clock_and_data,w
  5623  01F5  39EF               	andlw	-17
  5624  01F6  0671               	xorwf	??_set_clock_and_data,w
  5625  01F7  008E               	movwf	14	;volatile
  5626                           
  5627                           ;scan.c: 70: LATCbits.LATC5 = !!d;
  5628  01F8  3000               	movlw	0
  5629  01F9  08F0               	movf	set_clock_and_data@d,f
  5630  01FA  1D03               	btfss	3,2
  5631  01FB  3001               	movlw	1
  5632  01FC  00F1               	movwf	??_set_clock_and_data
  5633  01FD  0EF1               	swapf	??_set_clock_and_data,f
  5634  01FE  0DF1               	rlf	??_set_clock_and_data,f
  5635  01FF  080E               	movf	14,w	;volatile
  5636  0200  0671               	xorwf	??_set_clock_and_data,w
  5637  0201  39DF               	andlw	-33
  5638  0202  0671               	xorwf	??_set_clock_and_data,w
  5639  0203  008E               	movwf	14	;volatile
  5640  0204                     i7Ll213:	
  5641                           
  5642                           ;scan.c: 238: state = S_CLOCK_FALL;
  5643  0204  3003               	movlw	3
  5644  0205  00DB               	movwf	scan_task@state^(0+256)
  5645  0206                     i8L__ptext41:	
  5646                           ;scan.c: 239: set_timer();
  5647                           
  5648                           
  5649                           ;psect for function _set_timer
  5650  0206                     i8L_set_timer:	
  5651  0206                     i8Ll3259:	
  5652                           
  5653                           ;scan.c: 56: wait_timer = 1;
  5654  0206  01DA               	clrf	_wait_timer^(0+256)
  5655  0207  0ADA               	incf	_wait_timer^(0+256),f
  5656                           
  5657                           ;scan.c: 57: OPTION_REGbits.TMR0CS = 0;
  5658  0208  0021               	movlb	1	; select bank1
  5659  0209  1295               	bcf	21,5	;volatile
  5660                           
  5661                           ;scan.c: 58: OPTION_REGbits.PSA = 1;
  5662  020A  1595               	bsf	21,3	;volatile
  5663                           
  5664                           ;scan.c: 59: INTCONbits.TMR0IE = 0;
  5665  020B  128B               	bcf	11,5	;volatile
  5666                           
  5667                           ;scan.c: 60: INTCONbits.TMR0IF = 0;
  5668  020C  110B               	bcf	11,2	;volatile
  5669  020D                     i8Ll3261:	
  5670                           
  5671                           ;scan.c: 61: TMR0 = 0;
  5672  020D  0020               	movlb	0	; select bank0
  5673  020E  0195               	clrf	21	;volatile
  5674  020F                     i8Ll205:	
  5675                           
  5676                           ;scan.c: 240: break;
  5677  020F  2B47               	goto	l3221
  5678  0210                     l3199:	
  5679  0210  3000               	movlw	0
  5680                           
  5681                           ;scan.c: 243: set_clock_and_data(0,0);
  5682  0211  01F0               	clrf	?_set_clock_and_data
  5683  0212                     i9L__ptext39:	
  5684                           
  5685                           ;psect for function _set_clock_and_data
  5686  0212                     i9L_set_clock_and_data:	
  5687                           
  5688                           ;incstack = 0
  5689                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  5690                           ;set_clock_and_data@c stored from wreg
  5691  0212  00F2               	movwf	set_clock_and_data@c
  5692  0213                     i9Ll3275:	
  5693                           
  5694                           ;scan.c: 69: LATCbits.LATC4 = !!c;
  5695  0213  3000               	movlw	0
  5696  0214  08F2               	movf	set_clock_and_data@c,f
  5697  0215  1D03               	btfss	3,2
  5698  0216  3001               	movlw	1
  5699  0217  00F1               	movwf	??_set_clock_and_data
  5700  0218  0EF1               	swapf	??_set_clock_and_data,f
  5701  0219  0022               	movlb	2	; select bank2
  5702  021A  080E               	movf	14,w	;volatile
  5703  021B  0671               	xorwf	??_set_clock_and_data,w
  5704  021C  39EF               	andlw	-17
  5705  021D  0671               	xorwf	??_set_clock_and_data,w
  5706  021E  008E               	movwf	14	;volatile
  5707                           
  5708                           ;scan.c: 70: LATCbits.LATC5 = !!d;
  5709  021F  3000               	movlw	0
  5710  0220  08F0               	movf	set_clock_and_data@d,f
  5711  0221  1D03               	btfss	3,2
  5712  0222  3001               	movlw	1
  5713  0223  00F1               	movwf	??_set_clock_and_data
  5714  0224  0EF1               	swapf	??_set_clock_and_data,f
  5715  0225  0DF1               	rlf	??_set_clock_and_data,f
  5716  0226  080E               	movf	14,w	;volatile
  5717  0227  0671               	xorwf	??_set_clock_and_data,w
  5718  0228  39DF               	andlw	-33
  5719  0229  0671               	xorwf	??_set_clock_and_data,w
  5720  022A  008E               	movwf	14	;volatile
  5721  022B                     i9Ll213:	
  5722  022B                     i10L__ptext36:	
  5723                           ;scan.c: 244: run_adc();
  5724                           
  5725                           
  5726                           ;psect for function _run_adc
  5727  022B                     i10L_run_adc:	
  5728  022B                     i10Ll3291:	
  5729                           
  5730                           ;scan.c: 86: ADCON0bits.CHS = 7;
  5731  022B  0021               	movlb	1	; select bank1
  5732  022C  081D               	movf	29,w	;volatile
  5733  022D  3983               	andlw	-125
  5734  022E  381C               	iorlw	28
  5735  022F  009D               	movwf	29	;volatile
  5736  0230                     i10Ll3293:	
  5737                           
  5738                           ;scan.c: 87: ADCON0bits.GO = 1;
  5739  0230  149D               	bsf	29,1	;volatile
  5740  0231                     i10Ll225:	
  5741                           
  5742                           ;scan.c: 245: state = S_ADC_WAIT;
  5743  0231  3004               	movlw	4
  5744  0232  0022               	movlb	2	; select bank2
  5745  0233  00DB               	movwf	scan_task@state^(0+256)
  5746  0234                     i11L__ptext41:	
  5747                           ;scan.c: 246: set_timer();
  5748                           
  5749                           
  5750                           ;psect for function _set_timer
  5751  0234                     i11L_set_timer:	
  5752  0234                     i11Ll3259:	
  5753                           
  5754                           ;scan.c: 56: wait_timer = 1;
  5755  0234  01DA               	clrf	_wait_timer^(0+256)
  5756  0235  0ADA               	incf	_wait_timer^(0+256),f
  5757                           
  5758                           ;scan.c: 57: OPTION_REGbits.TMR0CS = 0;
  5759  0236  0021               	movlb	1	; select bank1
  5760  0237  1295               	bcf	21,5	;volatile
  5761                           
  5762                           ;scan.c: 58: OPTION_REGbits.PSA = 1;
  5763  0238  1595               	bsf	21,3	;volatile
  5764                           
  5765                           ;scan.c: 59: INTCONbits.TMR0IE = 0;
  5766  0239  128B               	bcf	11,5	;volatile
  5767                           
  5768                           ;scan.c: 60: INTCONbits.TMR0IF = 0;
  5769  023A  110B               	bcf	11,2	;volatile
  5770  023B                     i11Ll3261:	
  5771                           
  5772                           ;scan.c: 61: TMR0 = 0;
  5773  023B  0020               	movlb	0	; select bank0
  5774  023C  0195               	clrf	21	;volatile
  5775  023D                     i11Ll205:	
  5776                           
  5777                           ;scan.c: 247: break;
  5778  023D  2B47               	goto	l3221
  5779  023E                     l3203:	
  5780  023E                     i12L__ptext35:	
  5781                           ;scan.c: 250: state = (is_adc_ready()? S_ADC_READ : S_ADC_WAIT);
  5782                           
  5783                           
  5784                           ;psect for function _is_adc_ready
  5785  023E                     i12L_is_adc_ready:	
  5786  023E                     i12Ll3295:	
  5787                           
  5788                           ;scan.c: 91: return !ADCON0bits.GO_nDONE;
  5789  023E  3000               	movlw	0
  5790  023F  0021               	movlb	1	; select bank1
  5791  0240  1C9D               	btfss	29,1	;volatile
  5792  0241  3001               	movlw	1
  5793  0242  3800               	iorlw	0
  5794  0243  1D03               	skipz
  5795  0244  2A47               	goto	l3207
  5796  0245  3004               	movlw	4
  5797  0246  2A48               	goto	L18
  5798  0247                     l3207:	
  5799  0247  3005               	movlw	5
  5800  0248                     L18:	
  5801  0248  0020               	movlb	0	; select bank0
  5802  0249  00E2               	movwf	_scan_task$858
  5803  024A  01E3               	clrf	_scan_task$858+1
  5804  024B  2B3A               	goto	L19
  5805  024C                     l3209:	
  5806                           ;scan.c: 251: break;
  5807                           
  5808  024C                     i13L__ptext37:	
  5809                           ;scan.c: 254: state = (store_key_level(get_adc(), is_end_of_scan())? S_GO : S_CLOCK_RAIS
      +                          E);
  5810                           
  5811                           
  5812                           ;psect for function _is_end_of_scan
  5813  024C                     i13L_is_end_of_scan:	
  5814  024C                     i13Ll3281:	
  5815                           
  5816                           ;scan.c: 79: static uint8_t scan_counter = 0;
  5817                           ;scan.c: 80: bool res = (++scan_counter) >= N_KEYS;
  5818  024C  3027               	movlw	39
  5819  024D  0021               	movlb	1	; select bank1
  5820  024E  0AEE               	incf	is_end_of_scan@scan_counter^(0+128),f
  5821  024F  026E               	subwf	is_end_of_scan@scan_counter^(0+128),w
  5822  0250  3000               	movlw	0
  5823  0251  1803               	btfsc	3,0
  5824  0252  3001               	movlw	1
  5825  0253  00F0               	movwf	is_end_of_scan@res
  5826  0254                     i13Ll3283:	
  5827                           
  5828                           ;scan.c: 81: if (scan_counter >= N_KEYS) scan_counter = 0;
  5829  0254  3027               	movlw	39
  5830  0255  026E               	subwf	is_end_of_scan@scan_counter^(0+128),w
  5831  0256  1C03               	btfss	3,0
  5832  0257  2A5B               	ljmp	i13Ll3287
  5833  0258  2A5A               	ljmp	i13Ll3285
  5834  0259                     i13Lu2161:	
  5835  0259  2A5B               	ljmp	i13Ll3287
  5836  025A                     i13Lu2160:	
  5837  025A                     i13Ll3285:	
  5838  025A  01EE               	clrf	is_end_of_scan@scan_counter^(0+128)
  5839  025B                     i13Ll3287:	
  5840                           
  5841                           ;scan.c: 82: return res;
  5842  025B  0870               	movf	is_end_of_scan@res,w
  5843  025C                     i13Ll222:	
  5844  025C  00FD               	movwf	?_store_key_level
  5845  025D                     i14L__ptext34:	
  5846                           
  5847                           ;psect for function _get_adc
  5848  025D                     i14L_get_adc:	
  5849  025D                     i14Ll3299:	
  5850                           
  5851                           ;scan.c: 95: return ADRESH;
  5852  025D  081C               	movf	28,w	;volatile
  5853  025E                     i14Ll231:	
  5854  025E                     i15L__ptext30:	
  5855                           
  5856                           ;psect for function _store_key_level
  5857  025E                     i15L_store_key_level:	
  5858                           
  5859                           ;incstack = 0
  5860                           ; Regs used in _store_key_level: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5861                           ;store_key_level@level stored from wreg
  5862  025E  0020               	movlb	0	; select bank0
  5863  025F  00E0               	movwf	store_key_level@level
  5864  0260                     i15Ll3351:	
  5865                           
  5866                           ;scan.c: 195: static uint8_t idx_key = 0;
  5867                           ;scan.c: 196: process_level(idx_key, adc_levels[idx_key], level);
  5868  0260  0858               	movf	store_key_level@idx_key,w
  5869  0261  3E20               	addlw	_adc_levels& (0+255)
  5870  0262  0086               	movwf	6
  5871  0263  3002               	movlw	2	; select bank4/5
  5872  0264  0087               	movwf	7
  5873  0265  0801               	movf	1,w
  5874  0266  00F1               	movwf	?_process_level
  5875  0267  0860               	movf	store_key_level@level,w
  5876  0268  00F2               	movwf	?_process_level+1
  5877  0269  0858               	movf	store_key_level@idx_key,w
  5878  026A                     i16L__ptext31:	
  5879                           
  5880                           ;psect for function _process_level
  5881  026A                     i16L_process_level:	
  5882                           
  5883                           ;incstack = 0
  5884                           ; Regs used in _process_level: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5885                           ;process_level@idx_key stored from wreg
  5886  026A  00FC               	movwf	process_level@idx_key
  5887  026B                     i16Ll3303:	
  5888                           
  5889                           ;scan.c: 163: int current_state = (new_level > L);
  5890  026B  300B               	movlw	11
  5891  026C  0272               	subwf	process_level@new_level,w
  5892  026D  3000               	movlw	0
  5893  026E  1803               	btfsc	3,0
  5894  026F  3001               	movlw	1
  5895  0270  00F4               	movwf	process_level@current_state
  5896  0271  01F5               	clrf	process_level@current_state+1
  5897  0272                     i16Ll3305:	
  5898                           
  5899                           ;scan.c: 165: note_event.pitch = 0;
  5900  0272  0022               	movlb	2	; select bank2
  5901  0273  01D1               	clrf	_note_event^(0+256)
  5902  0274                     i16Ll3307:	
  5903                           
  5904                           ;scan.c: 166: note_event.velocity = 0;
  5905  0274  01D2               	clrf	(_note_event^(0+256)+1)
  5906                           
  5907                           ;scan.c: 168: if (current_state) {
  5908  0275  0875               	movf	process_level@current_state+1,w
  5909  0276  0474               	iorwf	process_level@current_state,w
  5910  0277  1903               	btfsc	3,2
  5911  0278  2A88               	ljmp	i16Ll3311
  5912  0279  2A7B               	ljmp	i16Ll3309
  5913  027A                     i16Lu2171:	
  5914  027A  2A88               	ljmp	i16Ll3311
  5915  027B                     i16Lu2170:	
  5916  027B                     i16Ll3309:	
  5917                           
  5918                           ;scan.c: 169: key_off_counter[idx_key] = 0;
  5919  027B  087C               	movf	process_level@idx_key,w
  5920  027C  3EA4               	addlw	process_level@key_off_counter& (0+255)
  5921  027D  0086               	movwf	6
  5922  027E  3001               	movlw	1	; select bank3/4
  5923  027F  0087               	movwf	7
  5924  0280  0181               	clrf	1
  5925                           
  5926                           ;scan.c: 170: key_on_counter [idx_key] ++;
  5927  0281  087C               	movf	process_level@idx_key,w
  5928  0282  3E47               	addlw	process_level@key_on_counter& (0+255)
  5929  0283  0086               	movwf	6
  5930  0284  3002               	movlw	2	; select bank4/5
  5931  0285  0087               	movwf	7
  5932  0286  0A81               	incf	1,f
  5933  0287  2A94               	ljmp	i16Ll251
  5934  0288                     i16Ll3311:	
  5935                           
  5936                           ;scan.c: 172: else {
  5937                           ;scan.c: 173: key_on_counter[idx_key] = 0;
  5938  0288  087C               	movf	process_level@idx_key,w
  5939  0289  3E47               	addlw	process_level@key_on_counter& (0+255)
  5940  028A  0086               	movwf	6
  5941  028B  3002               	movlw	2	; select bank4/5
  5942  028C  0087               	movwf	7
  5943  028D  0181               	clrf	1
  5944                           
  5945                           ;scan.c: 174: key_off_counter [idx_key] ++;
  5946  028E  087C               	movf	process_level@idx_key,w
  5947  028F  3EA4               	addlw	process_level@key_off_counter& (0+255)
  5948  0290  0086               	movwf	6
  5949  0291  3001               	movlw	1	; select bank3/4
  5950  0292  0087               	movwf	7
  5951  0293  0A81               	incf	1,f
  5952  0294                     i16Ll251:	
  5953                           
  5954                           ;scan.c: 175: }
  5955                           ;scan.c: 177: {
  5956                           ;scan.c: 178: bool
  5957                           ;scan.c: 179: on_flag = key_on_counter [idx_key] >= key_on_threshold,
  5958  0294  087C               	movf	process_level@idx_key,w
  5959  0295  3E47               	addlw	process_level@key_on_counter& (0+255)
  5960  0296  0086               	movwf	6
  5961  0297  3002               	movlw	2	; select bank4/5
  5962  0298  0087               	movwf	7
  5963  0299  3007               	movlw	7
  5964  029A  0201               	subwf	1,w
  5965  029B  3000               	movlw	0
  5966  029C  1803               	btfsc	3,0
  5967  029D  3001               	movlw	1
  5968  029E  00FA               	movwf	process_level@on_flag
  5969                           
  5970                           ;scan.c: 180: off_flag = key_off_counter[idx_key] >= key_off_threshold,
  5971  029F  087C               	movf	process_level@idx_key,w
  5972  02A0  3EA4               	addlw	process_level@key_off_counter& (0+255)
  5973  02A1  0086               	movwf	6
  5974  02A2  3001               	movlw	1	; select bank3/4
  5975  02A3  0087               	movwf	7
  5976  02A4  3005               	movlw	5
  5977  02A5  0201               	subwf	1,w
  5978  02A6  3000               	movlw	0
  5979  02A7  1803               	btfsc	3,0
  5980  02A8  3001               	movlw	1
  5981  02A9  00F6               	movwf	process_level@off_flag
  5982  02AA                     i16Ll3313:	
  5983                           
  5984                           ;scan.c: 181: filtered_state = on_flag || !on_flag && !off_flag && key_states[idx_key];
  5985  02AA  01F7               	clrf	_process_level$847
  5986  02AB  0AF7               	incf	_process_level$847,f
  5987  02AC                     i16Ll3315:	
  5988  02AC  08FA               	movf	process_level@on_flag,f
  5989  02AD  1D03               	btfss	3,2
  5990  02AE  2ACC               	ljmp	i16Ll3325
  5991  02AF  2AB1               	ljmp	i16Ll3317
  5992  02B0                     i16Lu2181:	
  5993  02B0  2ACC               	ljmp	i16Ll3325
  5994  02B1                     i16Lu2180:	
  5995  02B1                     i16Ll3317:	
  5996  02B1  08FA               	movf	process_level@on_flag,f
  5997  02B2  1D03               	btfss	3,2
  5998  02B3  2ACB               	ljmp	i16Ll3323
  5999  02B4  2AB6               	ljmp	i16Ll3319
  6000  02B5                     i16Lu2191:	
  6001  02B5  2ACB               	ljmp	i16Ll3323
  6002  02B6                     i16Lu2190:	
  6003  02B6                     i16Ll3319:	
  6004  02B6  08F6               	movf	process_level@off_flag,f
  6005  02B7  3180  1D03         	btfss	3,2
  6006  02B9  285B  3180         	ljmp	l3323
  6007  02BB  2ABE               	ljmp	i16Ll3321
  6008  02BC                     i16Lu2201:	
  6009  02BC  3180  285B         	ljmp	l3323
  6010  02BE                     i16Lu2200:	
  6011  02BE                     i16Ll3321:	
  6012  02BE  087C               	movf	process_level@idx_key,w
  6013  02BF  3E20               	addlw	process_level@key_states& (0+255)
  6014  02C0  0086               	movwf	6
  6015  02C1  3001               	movlw	1	; select bank2/3
  6016  02C2  0087               	movwf	7
  6017  02C3  0881               	movf	1,f
  6018  02C4  3180  1D03         	btfss	3,2
  6019  02C6  285C  3180         	ljmp	l3325
  6020  02C8  2ACB               	ljmp	i16Ll3323
  6021  02C9                     i16Lu2211:	
  6022  02C9  3180  285C         	ljmp	l3325
  6023  02CB                     i16Lu2210:	
  6024  02CB                     i16Ll3323:	
  6025  02CB  01F7               	clrf	_process_level$847
  6026  02CC                     i16Ll3325:	
  6027  02CC  0877               	movf	_process_level$847,w
  6028  02CD  00FB               	movwf	process_level@filtered_state
  6029  02CE                     i16Ll3327:	
  6030                           
  6031                           ;scan.c: 183: if (!key_states[idx_key] != !filtered_state) {
  6032  02CE  087B               	movf	process_level@filtered_state,w
  6033  02CF  3A00               	xorlw	0
  6034  02D0  1903               	btfsc	3,2
  6035  02D1  2AD3               	ljmp	i16Lu2221
  6036  02D2  2AD5               	ljmp	i16Lu2220
  6037  02D3                     i16Lu2221:	
  6038  02D3  3001               	movlw	1
  6039  02D4  2AD6               	ljmp	i16Lu2222
  6040  02D5                     i16Lu2220:	
  6041  02D5  3000               	movlw	0
  6042  02D6                     i16Lu2222:	
  6043  02D6  00F3               	movwf	??_process_level
  6044  02D7  087C               	movf	process_level@idx_key,w
  6045  02D8  3E20               	addlw	process_level@key_states& (0+255)
  6046  02D9  0086               	movwf	6
  6047  02DA  3001               	movlw	1	; select bank2/3
  6048  02DB  0087               	movwf	7
  6049  02DC  0801               	movf	1,w
  6050  02DD  3A00               	xorlw	0
  6051  02DE  1903               	btfsc	3,2
  6052  02DF  2AE1               	ljmp	i16Lu2231
  6053  02E0  2AE3               	ljmp	i16Lu2230
  6054  02E1                     i16Lu2231:	
  6055  02E1  3001               	movlw	1
  6056  02E2  2AE4               	ljmp	i16Lu2232
  6057  02E3                     i16Lu2230:	
  6058  02E3  3000               	movlw	0
  6059  02E4                     i16Lu2232:	
  6060  02E4  0673               	xorwf	??_process_level,w
  6061  02E5  1903               	btfsc	3,2
  6062  02E6  2B10               	ljmp	i16Ll3349
  6063  02E7  2AE9               	ljmp	i16Ll3329
  6064  02E8                     i16Lu2241:	
  6065  02E8  2B10               	ljmp	i16Ll3349
  6066  02E9                     i16Lu2240:	
  6067  02E9                     i16Ll3329:	
  6068                           
  6069                           ;scan.c: 184: note_event.pitch = midi_shift + idx_midi_map[idx_key];
  6070  02E9  087C               	movf	process_level@idx_key,w
  6071  02EA  3E01               	addlw	low (process_level@idx_midi_map| (0+32768))
  6072  02EB  0084               	movwf	4
  6073  02EC  3090               	movlw	high (process_level@idx_midi_map| (0+32768))
  6074  02ED  1803               	btfsc	3,0
  6075  02EE  3E01               	addlw	1
  6076  02EF  0085               	movwf	5
  6077  02F0  0800               	movf	0,w	;code access
  6078  02F1  00D1               	movwf	_note_event^(0+256)
  6079  02F2                     i16Ll3331:	
  6080                           
  6081                           ;scan.c: 185: note_event.velocity = (filtered_state? (new_level * 2 + 5): 0);
  6082  02F2  08FB               	movf	process_level@filtered_state,f
  6083  02F3  1D03               	btfss	3,2
  6084  02F4  2AFA               	ljmp	i16Ll3335
  6085  02F5  2AF7               	ljmp	i16Ll3333
  6086  02F6                     i16Lu2251:	
  6087  02F6  2AFA               	ljmp	i16Ll3335
  6088  02F7                     i16Lu2250:	
  6089  02F7                     i16Ll3333:	
  6090  02F7  01F8               	clrf	_process_level$848
  6091  02F8  01F9               	clrf	_process_level$848+1
  6092  02F9  2B03               	ljmp	i16Ll3341
  6093  02FA                     i16Ll3335:	
  6094  02FA  0872               	movf	process_level@new_level,w
  6095  02FB  00F8               	movwf	_process_level$848
  6096  02FC  01F9               	clrf	_process_level$848+1
  6097  02FD                     i16Ll3337:	
  6098  02FD  35F8               	lslf	_process_level$848,f
  6099  02FE  0DF9               	rlf	_process_level$848+1,f
  6100  02FF                     i16Ll3339:	
  6101  02FF  3005               	movlw	5
  6102  0300  07F8               	addwf	_process_level$848,f
  6103  0301  1803               	btfsc	3,0
  6104  0302  0AF9               	incf	_process_level$848+1,f
  6105  0303                     i16Ll3341:	
  6106  0303  0878               	movf	_process_level$848,w
  6107  0304  00D2               	movwf	(_note_event^(0+256)+1)
  6108  0305                     i16Ll3343:	
  6109                           
  6110                           ;scan.c: 186: if (filtered_state) LED_On(LED_D1);
  6111  0305  087B               	movf	process_level@filtered_state,w
  6112  0306  1D03               	btfss	3,2
  6113  0307  2B09               	ljmp	i16Ll3345
  6114  0308  2B0D               	ljmp	i16Ll3347
  6115  0309                     i16Lu2260:	
  6116  0309                     i16Ll3345:	
  6117  0309  3001               	movlw	1
  6118  030A  238B               	fcall	_LED_On
  6119  030B  3180  28A1         	ljmp	l3349
  6120  030D                     i16Ll3347:	
  6121                           
  6122                           ;scan.c: 187: else LED_Off(LED_D1);
  6123  030D  3001               	movlw	1
  6124  030E  2375  3180         	fcall	_LED_Off
  6125  0310                     i16Ll3349:	
  6126                           
  6127                           ;scan.c: 188: }
  6128                           ;scan.c: 189: key_states[idx_key] = filtered_state;
  6129  0310  087C               	movf	process_level@idx_key,w
  6130  0311  3E20               	addlw	process_level@key_states& (0+255)
  6131  0312  0086               	movwf	6
  6132  0313  3001               	movlw	1	; select bank2/3
  6133  0314  0087               	movwf	7
  6134  0315  087B               	movf	process_level@filtered_state,w
  6135  0316  0081               	movwf	1
  6136  0317                     i16Ll261:	
  6137  0317                     i15Ll3353:	
  6138                           
  6139                           ;scan.c: 197: adc_levels[idx_key] = level;
  6140  0317  0020               	movlb	0	; select bank0
  6141  0318  0858               	movf	store_key_level@idx_key,w
  6142  0319  3E20               	addlw	_adc_levels& (0+255)
  6143  031A  0086               	movwf	6
  6144  031B  3002               	movlw	2	; select bank4/5
  6145  031C  0087               	movwf	7
  6146  031D  0860               	movf	store_key_level@level,w
  6147  031E  0081               	movwf	1
  6148  031F                     i15Ll3355:	
  6149                           
  6150                           ;scan.c: 198: idx_key ++;
  6151  031F  0AD8               	incf	store_key_level@idx_key,f
  6152  0320                     i15Ll3357:	
  6153                           
  6154                           ;scan.c: 199: if (idx_key >= N_KEYS || end_of_scan) idx_key = 0;
  6155  0320  3027               	movlw	39
  6156  0321  0258               	subwf	store_key_level@idx_key,w
  6157  0322  1803               	btfsc	3,0
  6158  0323  2B2A               	ljmp	i15Ll3361
  6159  0324  2B26               	ljmp	i15Ll3359
  6160  0325                     i15Lu2271:	
  6161  0325  2B2A               	ljmp	i15Ll3361
  6162  0326                     i15Lu2270:	
  6163  0326                     i15Ll3359:	
  6164  0326  087D               	movf	store_key_level@end_of_scan,w
  6165  0327  1D03               	btfss	3,2
  6166  0328  2B2A               	ljmp	i15Ll3361
  6167  0329  2B2B               	ljmp	i15Ll3363
  6168  032A                     i15Lu2280:	
  6169  032A                     i15Ll3361:	
  6170  032A  01D8               	clrf	store_key_level@idx_key
  6171  032B                     i15Ll3363:	
  6172                           
  6173                           ;scan.c: 200: return idx_key == 0;
  6174  032B  0858               	movf	store_key_level@idx_key,w
  6175  032C  3A00               	xorlw	0
  6176  032D  3000               	movlw	0
  6177  032E  1903               	btfsc	3,2
  6178  032F  3001               	movlw	1
  6179  0330  3800               	iorlw	0
  6180  0331  1D03               	skipz
  6181  0332  2B36               	goto	l3213
  6182  0333  3002               	movlw	2
  6183  0334  00E4               	movwf	_scan_task$859
  6184  0335  2B38               	goto	L20
  6185  0336                     l3213:	
  6186  0336  01E4               	clrf	_scan_task$859
  6187  0337  0AE4               	incf	_scan_task$859,f
  6188  0338                     L20:	
  6189  0338  01E5               	clrf	_scan_task$859+1
  6190  0339  0864               	movf	_scan_task$859,w
  6191  033A                     L19:	
  6192  033A  0022               	movlb	2	; select bank2
  6193  033B  00DB               	movwf	scan_task@state^(0+256)
  6194                           
  6195                           ;scan.c: 255: break;
  6196  033C  2B47               	goto	l3221
  6197  033D                     l3219:	
  6198  033D  085B               	movf	scan_task@state^(0+256),w
  6199                           
  6200                           ; Switch size 1, requested type "space"
  6201                           ; Number of cases is 6, Range of values is 0 to 5
  6202                           ; switch strategies available:
  6203                           ; Name         Instructions Cycles
  6204                           ; direct_byte           18     6 (fixed)
  6205                           ; simple_byte           19    10 (average)
  6206                           ; jumptable            260     6 (fixed)
  6207                           ; rangetable            10     4 (fixed)
  6208                           ; spacedrange           17     6 (fixed)
  6209                           ; locatedrange           6     3 (fixed)
  6210                           ;	Chosen strategy is direct_byte
  6211  033E  0084               	movwf	4
  6212  033F  3006               	movlw	6
  6213  0340  0204               	subwf	4,w
  6214  0341  1803               	skipnc
  6215  0342  2B47               	goto	l3221
  6216  0343  3188               	movlp	high S4107
  6217  0344  3504               	lslf	4,w
  6218  0345  3E00               	addlw	low S4107
  6219  0346  0082               	movwf	2
  6220  0347                     l3221:	
  6221                           
  6222                           ;scan.c: 258: *note = note_event.pitch;
  6223  0347  0020               	movlb	0	; select bank0
  6224  0348  0866               	movf	scan_task@note,w
  6225  0349  0086               	movwf	6
  6226  034A  0187               	clrf	7
  6227  034B  0022               	movlb	2	; select bank2
  6228  034C  0851               	movf	_note_event^(0+256),w
  6229  034D  0081               	movwf	1
  6230                           
  6231                           ;scan.c: 259: *velocity = note_event.velocity;
  6232  034E  0020               	movlb	0	; select bank0
  6233  034F  0861               	movf	scan_task@velocity,w
  6234  0350  0086               	movwf	6
  6235  0351  0022               	movlb	2	; select bank2
  6236  0352  0852               	movf	(_note_event^(0+256)+1),w
  6237  0353  0081               	movwf	1
  6238                           
  6239                           ;scan.c: 260: return !! note_event.pitch;
  6240  0354  3000               	movlw	0
  6241  0355  08D1               	movf	_note_event^(0+256),f
  6242  0356  1D03               	skipz
  6243  0357  3001               	movlw	1
  6244  0358  0008               	return
  6245  0359                     __end_of_scan_task:	
  6246  0359                     __ptext42:	
  6247 ;; *************** function _scan_init *****************
  6248 ;; Defined at:
  6249 ;;		line 32 in file "../src/scan.c"
  6250 ;; Parameters:    Size  Location     Type
  6251 ;;		None
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;		None
  6254 ;; Return value:  Size  Location     Type
  6255 ;;		None               void
  6256 ;; Registers used:
  6257 ;;		wreg, status,2, status,0
  6258 ;; Tracked objects:
  6259 ;;		On entry : 1F/2
  6260 ;;		On exit  : 1F/1
  6261 ;;		Unchanged: FFFE0/0
  6262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6267 ;;Total ram usage:        0 bytes
  6268 ;; Hardware stack levels used:    1
  6269 ;; Hardware stack levels required when called:    1
  6270 ;; This function calls:
  6271 ;;		Nothing
  6272 ;; This function is called by:
  6273 ;;		_scan_task
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           
  6278                           ;psect for function _scan_init
  6279  0359                     _scan_init:	
  6280                           
  6281                           ;scan.c: 33: is_initialized = 1;
  6282                           
  6283                           ;incstack = 0
  6284                           ; Regs used in _scan_init: [wreg+status,2+status,0]
  6285  0359  01D9               	clrf	_is_initialized^(0+256)
  6286  035A  0AD9               	incf	_is_initialized^(0+256),f
  6287                           
  6288                           ;scan.c: 34: TRISCbits.TRISC3 = PIN_INPUT;
  6289  035B  0021               	movlb	1	; select bank1
  6290  035C  158E               	bsf	14,3	;volatile
  6291                           
  6292                           ;scan.c: 35: TRISCbits.TRISC4 = PIN_OUTPUT;
  6293  035D  120E               	bcf	14,4	;volatile
  6294                           
  6295                           ;scan.c: 36: TRISCbits.TRISC5 = PIN_OUTPUT;
  6296  035E  128E               	bcf	14,5	;volatile
  6297                           
  6298                           ;scan.c: 38: ANSELA = 0;
  6299  035F  0023               	movlb	3	; select bank3
  6300  0360  018C               	clrf	12	;volatile
  6301                           
  6302                           ;scan.c: 40: ANSELCbits.ANSC3 = PIN_ANALOG;
  6303  0361  158E               	bsf	14,3	;volatile
  6304                           
  6305                           ;scan.c: 41: LATCbits.LATC4 = 0;
  6306  0362  0022               	movlb	2	; select bank2
  6307  0363  120E               	bcf	14,4	;volatile
  6308                           
  6309                           ;scan.c: 42: LATCbits.LATC5 = 0;
  6310  0364  128E               	bcf	14,5	;volatile
  6311                           
  6312                           ;scan.c: 44: ANSELAbits.ANSA4 = PIN_DIGITAL;
  6313  0365  0023               	movlb	3	; select bank3
  6314  0366  120C               	bcf	12,4	;volatile
  6315                           
  6316                           ;scan.c: 45: TRISAbits.TRISA4 = PIN_INPUT;
  6317  0367  0021               	movlb	1	; select bank1
  6318  0368  160C               	bsf	12,4	;volatile
  6319                           
  6320                           ;scan.c: 47: PIE1bits.ADIE = 0;
  6321  0369  1311               	bcf	17,6	;volatile
  6322                           
  6323                           ;scan.c: 48: ADCON0bits.ADON = 1;
  6324  036A  141D               	bsf	29,0	;volatile
  6325                           
  6326                           ;scan.c: 49: ADCON1bits.ADFM = 0;
  6327  036B  139E               	bcf	30,7	;volatile
  6328                           
  6329                           ;scan.c: 50: ADCON1bits.ADCS = 0b110;
  6330  036C  081E               	movf	30,w	;volatile
  6331  036D  398F               	andlw	-113
  6332  036E  3860               	iorlw	96
  6333  036F  009E               	movwf	30	;volatile
  6334                           
  6335                           ;scan.c: 51: ADCON1bits.ADPREF = 0;
  6336  0370  30FC               	movlw	-4
  6337  0371  059E               	andwf	30,f	;volatile
  6338                           
  6339                           ;scan.c: 52: ADCON2bits.TRIGSEL = 0;
  6340  0372  308F               	movlw	-113
  6341  0373  059F               	andwf	31,f	;volatile
  6342  0374  0008               	return
  6343  0375                     __end_of_scan_init:	
  6344  0375                     __ptext33:	
  6345 ;; *************** function _LED_Off *****************
  6346 ;; Defined at:
  6347 ;;		line 101 in file "../bsp/pic16f1459/leds.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;  led             1    wreg     enum E2
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;  led             1    0[COMMON] enum E2
  6352 ;; Return value:  Size  Location     Type
  6353 ;;		None               void
  6354 ;; Registers used:
  6355 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/1D
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: FFFE0/0
  6360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6362 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6364 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6365 ;;Total ram usage:        1 bytes
  6366 ;; Hardware stack levels used:    1
  6367 ;; Hardware stack levels required when called:    1
  6368 ;; This function calls:
  6369 ;;		Nothing
  6370 ;; This function is called by:
  6371 ;;		_APP_LEDUpdateUSBStatus
  6372 ;;		_process_level
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376                           
  6377                           ;psect for function _LED_Off
  6378  0375                     _LED_Off:	
  6379                           
  6380                           ;incstack = 0
  6381                           ; Regs used in _LED_Off: [wreg-fsr0h+status,2+status,0]
  6382                           ;LED_Off@led stored from wreg
  6383  0375  00F0               	movwf	LED_Off@led
  6384                           
  6385                           ;leds.c: 102: switch(led)
  6386  0376  2B80               	goto	l2783
  6387  0377                     l485:	
  6388                           ;leds.c: 103: {
  6389                           ;leds.c: 104: case LED_D1:
  6390                           
  6391                           
  6392                           ;leds.c: 105: LATCbits.LATC2 = 0;
  6393  0377  0022               	movlb	2	; select bank2
  6394  0378  110E               	bcf	14,2	;volatile
  6395                           
  6396                           ;leds.c: 106: break;
  6397  0379  0008               	return
  6398  037A                     l487:	
  6399                           ;leds.c: 108: case LED_D2:
  6400                           
  6401                           
  6402                           ;leds.c: 109: LATCbits.LATC1 = 0;
  6403  037A  0022               	movlb	2	; select bank2
  6404  037B  108E               	bcf	14,1	;volatile
  6405                           
  6406                           ;leds.c: 110: break;
  6407  037C  0008               	return
  6408  037D                     l489:	
  6409                           ;leds.c: 116: case LED_D4:
  6410                           
  6411                           
  6412                           ;leds.c: 117: LATCbits.LATC3 = 0;
  6413  037D  0022               	movlb	2	; select bank2
  6414  037E  118E               	bcf	14,3	;volatile
  6415                           
  6416                           ;leds.c: 118: break;
  6417  037F  0008               	return
  6418  0380                     l2783:	
  6419  0380  0870               	movf	LED_Off@led,w
  6420                           
  6421                           ; Switch size 1, requested type "space"
  6422                           ; Number of cases is 5, Range of values is 0 to 4
  6423                           ; switch strategies available:
  6424                           ; Name         Instructions Cycles
  6425                           ; direct_byte           16     6 (fixed)
  6426                           ; simple_byte           16     9 (average)
  6427                           ; jumptable            260     6 (fixed)
  6428                           ; rangetable             9     4 (fixed)
  6429                           ; spacedrange           15     6 (fixed)
  6430                           ; locatedrange           5     3 (fixed)
  6431                           ;	Chosen strategy is direct_byte
  6432  0381  0084               	movwf	4
  6433  0382  3005               	movlw	5
  6434  0383  0204               	subwf	4,w
  6435  0384  1803               	skipnc
  6436  0385  0008               	return
  6437  0386  3188               	movlp	high S4111
  6438  0387  3504               	lslf	4,w
  6439  0388  3E0C               	addlw	low S4111
  6440  0389  0082               	movwf	2
  6441  038A                     l491:	
  6442  038A  0008               	return
  6443  038B                     __end_of_LED_Off:	
  6444  038B                     __ptext32:	
  6445 ;; *************** function _LED_On *****************
  6446 ;; Defined at:
  6447 ;;		line 60 in file "../bsp/pic16f1459/leds.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;  led             1    wreg     enum E2
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;  led             1    0[COMMON] enum E2
  6452 ;; Return value:  Size  Location     Type
  6453 ;;		None               void
  6454 ;; Registers used:
  6455 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6456 ;; Tracked objects:
  6457 ;;		On entry : 1C/1
  6458 ;;		On exit  : 1C/0
  6459 ;;		Unchanged: FFFE0/0
  6460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6462 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6464 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6465 ;;Total ram usage:        1 bytes
  6466 ;; Hardware stack levels used:    1
  6467 ;; Hardware stack levels required when called:    1
  6468 ;; This function calls:
  6469 ;;		Nothing
  6470 ;; This function is called by:
  6471 ;;		_APP_LEDUpdateUSBStatus
  6472 ;;		_process_level
  6473 ;; This function uses a non-reentrant model
  6474 ;;
  6475                           
  6476                           
  6477                           ;psect for function _LED_On
  6478  038B                     _LED_On:	
  6479                           
  6480                           ;incstack = 0
  6481                           ; Regs used in _LED_On: [wreg-fsr0h+status,2+status,0]
  6482                           ;LED_On@led stored from wreg
  6483  038B  00F0               	movwf	LED_On@led
  6484                           
  6485                           ;leds.c: 61: switch(led)
  6486  038C  2B96               	goto	l2793
  6487  038D                     l475:	
  6488                           ;leds.c: 62: {
  6489                           ;leds.c: 63: case LED_D1:
  6490                           
  6491                           
  6492                           ;leds.c: 64: LATCbits.LATC2 = 1;
  6493  038D  0022               	movlb	2	; select bank2
  6494  038E  150E               	bsf	14,2	;volatile
  6495                           
  6496                           ;leds.c: 65: break;
  6497  038F  0008               	return
  6498  0390                     l477:	
  6499                           ;leds.c: 67: case LED_D2:
  6500                           
  6501                           
  6502                           ;leds.c: 68: LATCbits.LATC1 = 1;
  6503  0390  0022               	movlb	2	; select bank2
  6504  0391  148E               	bsf	14,1	;volatile
  6505                           
  6506                           ;leds.c: 69: break;
  6507  0392  0008               	return
  6508  0393                     l479:	
  6509                           ;leds.c: 75: case LED_D4:
  6510                           
  6511                           
  6512                           ;leds.c: 76: LATCbits.LATC3 = 1;
  6513  0393  0022               	movlb	2	; select bank2
  6514  0394  158E               	bsf	14,3	;volatile
  6515                           
  6516                           ;leds.c: 77: break;
  6517  0395  0008               	return
  6518  0396                     l2793:	
  6519  0396  0870               	movf	LED_On@led,w
  6520                           
  6521                           ; Switch size 1, requested type "space"
  6522                           ; Number of cases is 5, Range of values is 0 to 4
  6523                           ; switch strategies available:
  6524                           ; Name         Instructions Cycles
  6525                           ; direct_byte           16     6 (fixed)
  6526                           ; simple_byte           16     9 (average)
  6527                           ; jumptable            260     6 (fixed)
  6528                           ; rangetable             9     4 (fixed)
  6529                           ; spacedrange           15     6 (fixed)
  6530                           ; locatedrange           5     3 (fixed)
  6531                           ;	Chosen strategy is direct_byte
  6532  0397  0084               	movwf	4
  6533  0398  3005               	movlw	5
  6534  0399  0204               	subwf	4,w
  6535  039A  1803               	skipnc
  6536  039B  0008               	return
  6537  039C  3187               	movlp	high S4109
  6538  039D  3504               	lslf	4,w
  6539  039E  3EF5               	addlw	low S4109
  6540  039F  0082               	movwf	2
  6541  03A0                     l481:	
  6542  03A0  0008               	return
  6543  03A1                     __end_of_LED_On:	
  6544  03A1                     __ptext48:	
  6545 ;; *************** function _LED_Enable *****************
  6546 ;; Defined at:
  6547 ;;		line 221 in file "../bsp/pic16f1459/leds.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;  led             1    wreg     enum E2
  6550 ;; Auto vars:     Size  Location     Type
  6551 ;;  led             1    0[COMMON] enum E2
  6552 ;; Return value:  Size  Location     Type
  6553 ;;		None               void
  6554 ;; Registers used:
  6555 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6556 ;; Tracked objects:
  6557 ;;		On entry : 17F/7
  6558 ;;		On exit  : 179/1
  6559 ;;		Unchanged: FFE80/0
  6560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6564 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6565 ;;Total ram usage:        1 bytes
  6566 ;; Hardware stack levels used:    1
  6567 ;; Hardware stack levels required when called:    1
  6568 ;; This function calls:
  6569 ;;		Nothing
  6570 ;; This function is called by:
  6571 ;;		_SYSTEM_Initialize
  6572 ;; This function uses a non-reentrant model
  6573 ;;
  6574                           
  6575                           
  6576                           ;psect for function _LED_Enable
  6577  03A1                     _LED_Enable:	
  6578                           
  6579                           ;incstack = 0
  6580                           ; Regs used in _LED_Enable: [wreg-fsr0h+status,2+status,0]
  6581                           ;LED_Enable@led stored from wreg
  6582  03A1  00F0               	movwf	LED_Enable@led
  6583                           
  6584                           ;leds.c: 222: switch(led)
  6585  03A2  2BAC               	goto	l2737
  6586  03A3                     l515:	
  6587                           ;leds.c: 223: {
  6588                           ;leds.c: 224: case LED_D1:
  6589                           
  6590                           
  6591                           ;leds.c: 225: TRISCbits.TRISC2 = 0;
  6592  03A3  0021               	movlb	1	; select bank1
  6593  03A4  110E               	bcf	14,2	;volatile
  6594                           
  6595                           ;leds.c: 226: break;
  6596  03A5  0008               	return
  6597  03A6                     l517:	
  6598                           ;leds.c: 228: case LED_D2:
  6599                           
  6600                           
  6601                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  6602  03A6  0021               	movlb	1	; select bank1
  6603  03A7  108E               	bcf	14,1	;volatile
  6604                           
  6605                           ;leds.c: 230: break;
  6606  03A8  0008               	return
  6607  03A9                     l519:	
  6608                           ;leds.c: 236: case LED_D4:
  6609                           
  6610                           
  6611                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  6612  03A9  0021               	movlb	1	; select bank1
  6613  03AA  118E               	bcf	14,3	;volatile
  6614                           
  6615                           ;leds.c: 238: break;
  6616  03AB  0008               	return
  6617  03AC                     l2737:	
  6618  03AC  0870               	movf	LED_Enable@led,w
  6619                           
  6620                           ; Switch size 1, requested type "space"
  6621                           ; Number of cases is 5, Range of values is 0 to 4
  6622                           ; switch strategies available:
  6623                           ; Name         Instructions Cycles
  6624                           ; direct_byte           16     6 (fixed)
  6625                           ; simple_byte           16     9 (average)
  6626                           ; jumptable            260     6 (fixed)
  6627                           ; rangetable             9     4 (fixed)
  6628                           ; spacedrange           15     6 (fixed)
  6629                           ; locatedrange           5     3 (fixed)
  6630                           ;	Chosen strategy is direct_byte
  6631  03AD  0084               	movwf	4
  6632  03AE  3005               	movlw	5
  6633  03AF  0204               	subwf	4,w
  6634  03B0  1803               	skipnc
  6635  03B1  0008               	return
  6636  03B2  3188               	movlp	high S4113
  6637  03B3  3504               	lslf	4,w
  6638  03B4  3E16               	addlw	low S4113
  6639  03B5  0082               	movwf	2
  6640  03B6                     l521:	
  6641  03B6  0008               	return
  6642  03B7                     __end_of_LED_Enable:	
  6643  03B7                     __ptext45:	
  6644 ;; *************** function _SPI_Initialize *****************
  6645 ;; Defined at:
  6646 ;;		line 64 in file "../src/spi.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;		None
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;		None
  6651 ;; Return value:  Size  Location     Type
  6652 ;;		None               void
  6653 ;; Registers used:
  6654 ;;		wreg, status,2
  6655 ;; Tracked objects:
  6656 ;;		On entry : 17F/1
  6657 ;;		On exit  : 17F/4
  6658 ;;		Unchanged: FFE80/0
  6659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6664 ;;Total ram usage:        0 bytes
  6665 ;; Hardware stack levels used:    1
  6666 ;; Hardware stack levels required when called:    1
  6667 ;; This function calls:
  6668 ;;		Nothing
  6669 ;; This function is called by:
  6670 ;;		_BLEDeviceInit
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           
  6674                           
  6675                           ;psect for function _SPI_Initialize
  6676  03B7                     _SPI_Initialize:	
  6677  03B7                     l3367:	
  6678                           ;incstack = 0
  6679                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  6680                           
  6681                           
  6682                           ;spi.c: 68: SSP1STAT = 0x00;
  6683  03B7  0024               	movlb	4	; select bank4
  6684  03B8  0194               	clrf	20	;volatile
  6685                           
  6686                           ;spi.c: 71: SSP1CON1 = 0x35;
  6687  03B9  3035               	movlw	53
  6688  03BA  0095               	movwf	21	;volatile
  6689                           
  6690                           ;spi.c: 74: SSP1CON3 = 0x00;
  6691  03BB  0197               	clrf	23	;volatile
  6692  03BC  0008               	return
  6693  03BD                     __end_of_SPI_Initialize:	
  6694  03BD                     __ptext8:	
  6695 ;; *************** function _USBStdFeatureReqHandler *****************
  6696 ;; Defined at:
  6697 ;;		line 2780 in file "../framework/usb/usb_device.c"
  6698 ;; Parameters:    Size  Location     Type
  6699 ;;		None
  6700 ;; Auto vars:     Size  Location     Type
  6701 ;;  pUEP            2    5[BANK0 ] PTR unsigned char 
  6702 ;;		 -> UEP0(1), 
  6703 ;;  p               1    8[BANK0 ] PTR struct __BDT
  6704 ;;		 -> BDT(32), NULL(0), 
  6705 ;;  current_ep_d    1    7[BANK0 ] struct .
  6706 ;; Return value:  Size  Location     Type
  6707 ;;		None               void
  6708 ;; Registers used:
  6709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6710 ;; Tracked objects:
  6711 ;;		On entry : 1D/0
  6712 ;;		On exit  : 1F/0
  6713 ;;		Unchanged: FFFE0/0
  6714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6716 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6717 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6718 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6719 ;;Total ram usage:        6 bytes
  6720 ;; Hardware stack levels used:    1
  6721 ;; Hardware stack levels required when called:    5
  6722 ;; This function calls:
  6723 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6724 ;; This function is called by:
  6725 ;;		_USBCheckStdRequest
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           
  6730                           ;psect for function _USBStdFeatureReqHandler
  6731  03BD                     _USBStdFeatureReqHandler:	
  6732  03BD                     l3873:	
  6733                           ;incstack = 0
  6734                           ; Regs used in _USBStdFeatureReqHandler: [allreg]
  6735                           
  6736                           
  6737                           ;usb_device.c: 2781: BDT_ENTRY *p;
  6738                           ;usb_device.c: 2782: EP_STATUS current_ep_data;
  6739                           ;usb_device.c: 2786: unsigned char* pUEP;
  6740                           ;usb_device.c: 2824: if((SetupPkt.bFeature == 1)&&
  6741                           ;usb_device.c: 2825: (SetupPkt.Recipient == (0x00)))
  6742  03BD  0020               	movlb	0	; select bank0
  6743  03BE  0B42               	decfsz	66,w	;volatile
  6744  03BF  2BCF               	goto	l3885
  6745  03C0  0840               	movf	64,w	;volatile
  6746  03C1  391F               	andlw	31
  6747  03C2  1D03               	skipz
  6748  03C3  2BCF               	goto	l3885
  6749                           
  6750                           ;usb_device.c: 2826: {
  6751                           ;usb_device.c: 2827: inPipes[0].info.bits.busy = 1;
  6752  03C4  17DB               	bsf	_inPipes+2,7
  6753                           
  6754                           ;usb_device.c: 2828: if(SetupPkt.bRequest == 3)
  6755  03C5  0841               	movf	65,w	;volatile
  6756  03C6  3A03               	xorlw	3
  6757  03C7  1D03               	skipz
  6758  03C8  2BCD               	goto	l3883
  6759                           
  6760                           ;usb_device.c: 2829: RemoteWakeup = 1;
  6761  03C9  0022               	movlb	2	; select bank2
  6762  03CA  01D6               	clrf	_RemoteWakeup^(0+256)
  6763  03CB  0AD6               	incf	_RemoteWakeup^(0+256),f
  6764  03CC  2BCF               	goto	l3885
  6765  03CD                     l3883:	
  6766                           
  6767                           ;usb_device.c: 2830: else
  6768                           ;usb_device.c: 2831: RemoteWakeup = 0;
  6769  03CD  0022               	movlb	2	; select bank2
  6770  03CE  01D6               	clrf	_RemoteWakeup^(0+256)
  6771  03CF                     l3885:	
  6772                           
  6773                           ;usb_device.c: 2832: }
  6774                           ;usb_device.c: 2835: if((SetupPkt.bFeature == 0)&&
  6775                           ;usb_device.c: 2836: (SetupPkt.Recipient == (0x02))&&
  6776                           ;usb_device.c: 2837: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
  6777                           ;usb_device.c: 2838: (USBDeviceState == CONFIGURED_STATE))
  6778  03CF  0020               	movlb	0	; select bank0
  6779  03D0  0842               	movf	66,w
  6780  03D1  1D03               	skipz
  6781  03D2  0008               	return
  6782  03D3  0840               	movf	64,w	;volatile
  6783  03D4  391F               	andlw	31
  6784  03D5  3A02               	xorlw	2
  6785  03D6  1D03               	skipz
  6786  03D7  0008               	return
  6787  03D8  0844               	movf	68,w	;volatile
  6788  03D9  390F               	andlw	15
  6789  03DA  1903               	skipnz
  6790  03DB  0008               	return
  6791  03DC  0844               	movf	68,w	;volatile
  6792  03DD  390F               	andlw	15
  6793  03DE  00FA               	movwf	??_USBStdFeatureReqHandler
  6794  03DF  3002               	movlw	2
  6795  03E0  027A               	subwf	??_USBStdFeatureReqHandler,w
  6796  03E1  1803               	skipnc
  6797  03E2  0008               	return
  6798  03E3  0853               	movf	_USBDeviceState,w
  6799  03E4  3A20               	xorlw	32
  6800  03E5  1D03               	skipz
  6801  03E6  0008               	return
  6802                           
  6803                           ;usb_device.c: 2839: {
  6804                           ;usb_device.c: 2842: inPipes[0].info.bits.busy = 1;
  6805  03E7  17DB               	bsf	_inPipes+2,7
  6806                           
  6807                           ;usb_device.c: 2845: if(SetupPkt.EPDir == 0)
  6808  03E8  1BC4               	btfsc	68,7	;volatile
  6809  03E9  2BF4               	goto	l3899
  6810                           
  6811                           ;usb_device.c: 2846: {
  6812                           ;usb_device.c: 2847: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6813  03EA  0844               	movf	68,w	;volatile
  6814  03EB  27A7  3180         	fcall	PL240	;call to abstracted procedure
  6815  03ED  0801               	movf	1,w
  6816  03EE  00E8               	movwf	USBStdFeatureReqHandler@p
  6817                           
  6818                           ;usb_device.c: 2848: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  6819  03EF  0844               	movf	68,w	;volatile
  6820  03F0  390F               	andlw	15
  6821  03F1  3E4F               	addlw	_ep_data_out& (0+255)
  6822  03F2  0086               	movwf	6
  6823  03F3  2BFE               	goto	L4
  6824  03F4                     l3899:	
  6825                           ;usb_device.c: 2849: }
  6826                           
  6827                           
  6828                           ;usb_device.c: 2850: else
  6829                           ;usb_device.c: 2851: {
  6830                           ;usb_device.c: 2852: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6831  03F4  27B8  3180         	fcall	PL246	;call to abstracted procedure
  6832  03F6  0801               	movf	1,w
  6833  03F7  00E8               	movwf	USBStdFeatureReqHandler@p
  6834                           
  6835                           ;usb_device.c: 2853: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  6836  03F8  0844               	movf	68,w	;volatile
  6837  03F9  390F               	andlw	15
  6838  03FA  3E4D               	addlw	_ep_data_in& (0+255)
  6839  03FB  0086               	movwf	6
  6840  03FC  3001               	movlw	1	; select bank2/3
  6841  03FD  0087               	movwf	7
  6842  03FE                     L4:	
  6843  03FE  0801               	movf	1,w
  6844  03FF  00E7               	movwf	USBStdFeatureReqHandler@current_ep_data
  6845                           
  6846                           ;usb_device.c: 2854: }
  6847                           ;usb_device.c: 2860: if(current_ep_data.bits.ping_pong_state == 0)
  6848  0400  1867               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  6849  0401  2C04               	goto	l911
  6850                           
  6851                           ;usb_device.c: 2861: {
  6852                           ;usb_device.c: 2862: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  6853  0402  1168               	bcf	USBStdFeatureReqHandler@p,2
  6854                           
  6855                           ;usb_device.c: 2863: }
  6856  0403  2C05               	goto	l912
  6857  0404                     l911:	
  6858                           
  6859                           ;usb_device.c: 2864: else
  6860                           ;usb_device.c: 2865: {
  6861                           ;usb_device.c: 2866: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  6862  0404  1568               	bsf	USBStdFeatureReqHandler@p,2
  6863  0405                     l912:	
  6864                           
  6865                           ;usb_device.c: 2867: }
  6866                           ;usb_device.c: 2872: if(SetupPkt.EPDir == 0)
  6867  0405  1BC4               	btfsc	68,7	;volatile
  6868  0406  2C0B               	goto	l3907
  6869                           
  6870                           ;usb_device.c: 2873: {
  6871                           ;usb_device.c: 2874: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6872  0407  0844               	movf	68,w	;volatile
  6873  0408  27A7  3180         	fcall	PL240	;call to abstracted procedure
  6874  040A  2C0D               	goto	L5
  6875  040B                     l3907:	
  6876                           ;usb_device.c: 2875: }
  6877                           
  6878                           
  6879                           ;usb_device.c: 2876: else
  6880                           ;usb_device.c: 2877: {
  6881                           ;usb_device.c: 2878: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6882  040B  27B8  3180         	fcall	PL246	;call to abstracted procedure
  6883  040D                     L5:	
  6884  040D  0868               	movf	USBStdFeatureReqHandler@p,w
  6885  040E  0081               	movwf	1
  6886                           
  6887                           ;usb_device.c: 2879: }
  6888                           ;usb_device.c: 2882: if(SetupPkt.bRequest == 3)
  6889  040F  0841               	movf	65,w	;volatile
  6890  0410  3A03               	xorlw	3
  6891  0411  1D03               	skipz
  6892  0412  2C2D               	goto	l3923
  6893                           
  6894                           ;usb_device.c: 2883: {
  6895                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  6896  0413  0868               	movf	USBStdFeatureReqHandler@p,w
  6897  0414  0086               	movwf	6
  6898  0415  0187               	clrf	7
  6899  0416  1F81               	btfss	1,7
  6900  0417  2C25               	goto	l3919
  6901                           
  6902                           ;usb_device.c: 2885: {
  6903                           ;usb_device.c: 2888: if(SetupPkt.EPDir == 0)
  6904  0418  1BC4               	btfsc	68,7	;volatile
  6905  0419  2C1E               	goto	l3917
  6906                           
  6907                           ;usb_device.c: 2889: {
  6908                           ;usb_device.c: 2890: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6909  041A  0844               	movf	68,w	;volatile
  6910  041B  390F               	andlw	15
  6911  041C  3E4F               	addlw	_ep_data_out& (0+255)
  6912  041D  2C21               	goto	L6
  6913  041E                     l3917:	
  6914                           ;usb_device.c: 2891: }
  6915                           
  6916                           
  6917                           ;usb_device.c: 2892: else
  6918                           ;usb_device.c: 2893: {
  6919                           ;usb_device.c: 2894: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6920  041E  0844               	movf	68,w	;volatile
  6921  041F  390F               	andlw	15
  6922  0420  3E4D               	addlw	_ep_data_in& (0+255)
  6923  0421                     L6:	
  6924  0421  0086               	movwf	6
  6925  0422  3001               	movlw	1	; select bank2/3
  6926  0423  0087               	movwf	7
  6927  0424  1481               	bsf	1,1
  6928  0425                     l3919:	
  6929                           
  6930                           ;usb_device.c: 2895: }
  6931                           ;usb_device.c: 2896: }
  6932                           ;usb_device.c: 2899: p->STAT.Val |= 0x04;
  6933  0425  0868               	movf	USBStdFeatureReqHandler@p,w
  6934  0426  0086               	movwf	6
  6935  0427  0187               	clrf	7
  6936  0428  1501               	bsf	1,2
  6937                           
  6938                           ;usb_device.c: 2900: p->STAT.Val |= 0x80;
  6939  0429  0868               	movf	USBStdFeatureReqHandler@p,w
  6940  042A  0086               	movwf	6
  6941  042B  1781               	bsf	1,7
  6942                           
  6943                           ;usb_device.c: 2901: }
  6944  042C  0008               	return
  6945  042D                     l3923:	
  6946                           
  6947                           ;usb_device.c: 2902: else
  6948                           ;usb_device.c: 2903: {
  6949                           ;usb_device.c: 2907: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  6950  042D  3004               	movlw	4
  6951  042E  06E8               	xorwf	USBStdFeatureReqHandler@p,f
  6952                           
  6953                           ;usb_device.c: 2909: if(p->STAT.UOWN == 1)
  6954  042F  0868               	movf	USBStdFeatureReqHandler@p,w
  6955  0430  0086               	movwf	6
  6956  0431  0187               	clrf	7
  6957                           
  6958                           ;usb_device.c: 2910: {
  6959                           ;usb_device.c: 2913: p->STAT.Val &= (~0x80);
  6960  0432  0868               	movf	USBStdFeatureReqHandler@p,w
  6961  0433  1F81               	btfss	1,7
  6962  0434  2C3F               	goto	L8
  6963  0435  0086               	movwf	6
  6964  0436  1381               	bcf	1,7
  6965                           
  6966                           ;usb_device.c: 2914: p->STAT.Val |= 0x40;
  6967  0437  0086               	movwf	6
  6968  0438  3005               	movlw	5
  6969  0439  1701               	bsf	1,6
  6970                           
  6971                           ;usb_device.c: 2915: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  6972  043A  279F  3180         	fcall	PL238	;call to abstracted procedure
  6973  043C  2519  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6974                           
  6975                           ;usb_device.c: 2916: }
  6976  043E  2C42               	goto	l3933
  6977  043F                     L8:	
  6978                           ;usb_device.c: 2917: else
  6979                           ;usb_device.c: 2918: {
  6980                           ;usb_device.c: 2920: p->STAT.Val |= 0x40;
  6981                           
  6982  043F  0086               	movwf	6
  6983  0440  0187               	clrf	7
  6984  0441  1701               	bsf	1,6
  6985  0442                     l3933:	
  6986                           
  6987                           ;usb_device.c: 2921: }
  6988                           ;usb_device.c: 2925: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  6989  0442  3004               	movlw	4
  6990  0443  0020               	movlb	0	; select bank0
  6991  0444  06E8               	xorwf	USBStdFeatureReqHandler@p,f
  6992                           
  6993                           ;usb_device.c: 2931: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  6994  0445  18E7               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  6995  0446  2C4C               	goto	l924
  6996  0447  0868               	movf	USBStdFeatureReqHandler@p,w
  6997  0448  0086               	movwf	6
  6998  0449  0187               	clrf	7
  6999  044A  1F81               	btfss	1,7
  7000  044B  2C61               	goto	l3945
  7001  044C                     l924:	
  7002                           
  7003                           ;usb_device.c: 2932: {
  7004                           ;usb_device.c: 2933: if(SetupPkt.EPDir == 0)
  7005  044C  1BC4               	btfsc	68,7	;volatile
  7006  044D  2C52               	goto	l3941
  7007                           
  7008                           ;usb_device.c: 2934: {
  7009                           ;usb_device.c: 2935: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7010  044E  0844               	movf	68,w	;volatile
  7011  044F  390F               	andlw	15
  7012  0450  3E4F               	addlw	_ep_data_out& (0+255)
  7013  0451  2C55               	goto	L7
  7014  0452                     l3941:	
  7015                           ;usb_device.c: 2936: }
  7016                           
  7017                           
  7018                           ;usb_device.c: 2937: else
  7019                           ;usb_device.c: 2938: {
  7020                           ;usb_device.c: 2939: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7021  0452  0844               	movf	68,w	;volatile
  7022  0453  390F               	andlw	15
  7023  0454  3E4D               	addlw	_ep_data_in& (0+255)
  7024  0455                     L7:	
  7025  0455  0086               	movwf	6
  7026  0456  3001               	movlw	1	; select bank2/3
  7027  0457  0087               	movwf	7
  7028  0458  1081               	bcf	1,1
  7029                           
  7030                           ;usb_device.c: 2940: }
  7031                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7032  0459  27D0  3180         	fcall	PL260	;call to abstracted procedure
  7033                           
  7034                           ;usb_device.c: 2945: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7035  045B  3005               	movlw	5
  7036  045C  279F  3180         	fcall	PL238	;call to abstracted procedure
  7037  045E  2519  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7038                           
  7039                           ;usb_device.c: 2946: }
  7040  0460  2C62               	goto	l3947
  7041  0461                     l3945:	
  7042                           
  7043                           ;usb_device.c: 2947: else
  7044                           ;usb_device.c: 2948: {
  7045                           ;usb_device.c: 2950: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7046  0461  27D0               	fcall	PL260	;call to abstracted procedure
  7047  0462                     l3947:	
  7048                           
  7049                           ;usb_device.c: 2951: }
  7050                           ;usb_device.c: 2998: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  7051  0462  0020               	movlb	0	; select bank0
  7052  0463  0844               	movf	68,w	;volatile
  7053  0464  390F               	andlw	15
  7054  0465  3E98               	addlw	152
  7055  0466  00FA               	movwf	??_USBStdFeatureReqHandler
  7056  0467  300E               	movlw	14
  7057  0468  01FB               	clrf	??_USBStdFeatureReqHandler+1
  7058  0469  3DFB               	addwfc	??_USBStdFeatureReqHandler+1,f
  7059  046A  087A               	movf	??_USBStdFeatureReqHandler,w
  7060  046B  00E5               	movwf	USBStdFeatureReqHandler@pUEP
  7061  046C  087B               	movf	??_USBStdFeatureReqHandler+1,w
  7062  046D  00E6               	movwf	USBStdFeatureReqHandler@pUEP+1
  7063                           
  7064                           ;usb_device.c: 3002: *pUEP &= ~0x0001;
  7065  046E  0865               	movf	USBStdFeatureReqHandler@pUEP,w
  7066  046F  0086               	movwf	6
  7067  0470  0866               	movf	USBStdFeatureReqHandler@pUEP+1,w
  7068  0471  0087               	movwf	7
  7069  0472  1001               	bcf	1,0
  7070  0473  0008               	return
  7071  0474                     __end_of_USBStdFeatureReqHandler:	
  7072  0474                     __ptext1:	
  7073 ;; *************** function _USBDeviceTasks *****************
  7074 ;; Defined at:
  7075 ;;		line 497 in file "../framework/usb/usb_device.c"
  7076 ;; Parameters:    Size  Location     Type
  7077 ;;		None
  7078 ;; Auto vars:     Size  Location     Type
  7079 ;;  i               1   13[BANK0 ] unsigned char 
  7080 ;; Return value:  Size  Location     Type
  7081 ;;		None               void
  7082 ;; Registers used:
  7083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7084 ;; Tracked objects:
  7085 ;;		On entry : 162/4
  7086 ;;		On exit  : 17F/0
  7087 ;;		Unchanged: FFE80/0
  7088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7090 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7091 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7092 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7093 ;;Total ram usage:        2 bytes
  7094 ;; Hardware stack levels used:    1
  7095 ;; Hardware stack levels required when called:    9
  7096 ;; This function calls:
  7097 ;;		_USBDeviceInit
  7098 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7099 ;;		_USBWakeFromSuspend
  7100 ;;		_USBSuspend
  7101 ;;		_USBIncrement1msInternalTimers
  7102 ;;		_USBCtrlEPAllowStatusStage
  7103 ;;		_USBStallHandler
  7104 ;;		_USBCtrlEPService
  7105 ;; This function is called by:
  7106 ;;		_main
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           
  7111                           ;psect for function _USBDeviceTasks
  7112  0474                     _USBDeviceTasks:	
  7113                           
  7114                           ;usb_device.c: 563: }
  7115                           ;usb_device.c: 585: if(USBDeviceState == DETACHED_STATE)
  7116                           
  7117                           ;usb_device.c: 498: uint8_t i;
  7118                           ;usb_device.c: 524: if (1 != 1)
  7119                           
  7120                           ;incstack = 0
  7121                           ; Regs used in _USBDeviceTasks: [allreg]
  7122  0474  0020               	movlb	0	; select bank0
  7123  0475  08D3               	movf	_USBDeviceState,f
  7124  0476  1D03               	skipz
  7125  0477  2C85               	goto	l2985
  7126                           
  7127                           ;usb_device.c: 586: {
  7128                           ;usb_device.c: 588: UCON = 0;
  7129  0478  003D               	movlb	29	; select bank29
  7130  0479  018E               	clrf	14	;volatile
  7131                           
  7132                           ;usb_device.c: 591: UIE = 0;
  7133  047A  0192               	clrf	18	;volatile
  7134                           
  7135                           ;usb_device.c: 595: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7136  047B  3016               	movlw	22
  7137  047C  27CA  3180         	fcall	PL258	;call to abstracted procedure
  7138  047E                     l693:	
  7139                           ;usb_device.c: 598: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7140                           
  7141  047E  198E               	btfsc	14,3	;volatile
  7142  047F  2C82               	goto	l695
  7143  0480  158E               	bsf	14,3	;volatile
  7144  0481  2C7E               	goto	l693
  7145  0482                     l695:	
  7146                           
  7147                           ;usb_device.c: 601: USBDeviceState = ATTACHED_STATE;
  7148  0482  0020               	movlb	0	; select bank0
  7149  0483  01D3               	clrf	_USBDeviceState
  7150  0484  0AD3               	incf	_USBDeviceState,f
  7151  0485                     l2985:	
  7152                           
  7153                           ;usb_device.c: 606: }
  7154                           ;usb_device.c: 609: if(USBDeviceState == ATTACHED_STATE)
  7155  0485  0353               	decf	_USBDeviceState,w
  7156  0486  1D03               	skipz
  7157  0487  2C92               	goto	l2997
  7158                           
  7159                           ;usb_device.c: 610: {
  7160                           ;usb_device.c: 620: if(!UCONbits.SE0)
  7161  0488  003D               	movlb	29	; select bank29
  7162  0489  1A8E               	btfsc	14,5	;volatile
  7163  048A  2C92               	goto	l2997
  7164                           
  7165                           ;usb_device.c: 621: {
  7166                           ;usb_device.c: 627: {UIR = 0;};
  7167  048B  0190               	clrf	16	;volatile
  7168                           
  7169                           ;usb_device.c: 631: UIE=0;
  7170  048C  0192               	clrf	18	;volatile
  7171                           
  7172                           ;usb_device.c: 633: UIEbits.URSTIE = 1;
  7173  048D  1412               	bsf	18,0	;volatile
  7174                           
  7175                           ;usb_device.c: 634: UIEbits.IDLEIE = 1;
  7176  048E  1612               	bsf	18,4	;volatile
  7177                           
  7178                           ;usb_device.c: 635: USBDeviceState = POWERED_STATE;
  7179  048F  3002               	movlw	2
  7180  0490  0020               	movlb	0	; select bank0
  7181  0491  00D3               	movwf	_USBDeviceState
  7182  0492                     l2997:	
  7183                           
  7184                           ;usb_device.c: 636: }
  7185                           ;usb_device.c: 637: }
  7186                           ;usb_device.c: 653: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7187  0492  003D               	movlb	29	; select bank29
  7188  0493  1910               	btfsc	16,2	;volatile
  7189  0494  1D12               	btfss	18,2	;volatile
  7190  0495  2C99               	goto	l3005
  7191                           
  7192                           ;usb_device.c: 654: {
  7193                           ;usb_device.c: 655: (UIR &= 0xFB);
  7194  0496  1110               	bcf	16,2	;volatile
  7195                           
  7196                           ;usb_device.c: 659: USBWakeFromSuspend();
  7197  0497  25B9  3180         	fcall	_USBWakeFromSuspend
  7198  0499                     l3005:	
  7199                           
  7200                           ;usb_device.c: 661: }
  7201                           ;usb_device.c: 666: if(UCONbits.SUSPND==1)
  7202  0499  003D               	movlb	29	; select bank29
  7203  049A  1C8E               	btfss	14,1	;volatile
  7204  049B  2C9F               	goto	l699
  7205  049C                     l3007:	
  7206                           
  7207                           ;usb_device.c: 667: {
  7208                           ;usb_device.c: 668: PIR2bits.USBIF = 0;;
  7209  049C  0020               	movlb	0	; select bank0
  7210  049D  1112               	bcf	18,2	;volatile
  7211                           
  7212                           ;usb_device.c: 669: return;
  7213  049E  0008               	return
  7214  049F                     l699:	
  7215                           
  7216                           ;usb_device.c: 670: }
  7217                           ;usb_device.c: 682: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7218  049F  1810               	btfsc	16,0	;volatile
  7219  04A0  1C12               	btfss	18,0	;volatile
  7220  04A1  2CA8               	goto	l3017
  7221                           
  7222                           ;usb_device.c: 683: {
  7223                           ;usb_device.c: 684: USBDeviceInit();
  7224  04A2  2546  3180         	fcall	_USBDeviceInit
  7225                           
  7226                           ;usb_device.c: 688: ;
  7227                           ;usb_device.c: 690: USBDeviceState = DEFAULT_STATE;
  7228  04A4  3004               	movlw	4
  7229  04A5  00D3               	movwf	_USBDeviceState
  7230                           
  7231                           ;usb_device.c: 700: (UIR &= 0xFE);
  7232  04A6  003D               	movlb	29	; select bank29
  7233  04A7  1010               	bcf	16,0	;volatile
  7234  04A8                     l3017:	
  7235                           
  7236                           ;usb_device.c: 701: }
  7237                           ;usb_device.c: 706: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7238  04A8  1A10               	btfsc	16,4	;volatile
  7239  04A9  1E12               	btfss	18,4	;volatile
  7240  04AA  2CAD               	goto	l3023
  7241                           
  7242                           ;usb_device.c: 707: {
  7243                           ;usb_device.c: 713: USBSuspend();
  7244  04AB  25CA  3180         	fcall	_USBSuspend
  7245  04AD                     l3023:	
  7246                           
  7247                           ;usb_device.c: 715: }
  7248                           ;usb_device.c: 727: if(UIRbits.SOFIF)
  7249  04AD  003D               	movlb	29	; select bank29
  7250  04AE  1F10               	btfss	16,6	;volatile
  7251  04AF  2CC7               	goto	l3039
  7252                           
  7253                           ;usb_device.c: 728: {
  7254                           ;usb_device.c: 730: if(UIEbits.SOFIE)
  7255  04B0  1F12               	btfss	18,6	;volatile
  7256  04B1  2CBA               	goto	l3029
  7257                           
  7258                           ;usb_device.c: 731: {
  7259                           ;usb_device.c: 732: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7260  04B2  3073               	movlw	115
  7261  04B3  0020               	movlb	0	; select bank0
  7262  04B4  00E0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  7263  04B5  01E1               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  7264  04B6  27D6  3180         	fcall	PL262	;call to abstracted procedure
  7265  04B8  2519  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7266  04BA                     l3029:	
  7267                           
  7268                           ;usb_device.c: 733: }
  7269                           ;usb_device.c: 734: (UIR &= 0xBF);
  7270  04BA  003D               	movlb	29	; select bank29
  7271  04BB  1310               	bcf	16,6	;volatile
  7272                           
  7273                           ;usb_device.c: 737: USBIncrement1msInternalTimers();
  7274  04BC  25D5  3180         	fcall	_USBIncrement1msInternalTimers
  7275                           
  7276                           ;usb_device.c: 754: if(USBStatusStageTimeoutCounter != 0u)
  7277  04BE  0021               	movlb	1	; select bank1
  7278  04BF  0866               	movf	_USBStatusStageTimeoutCounter^(0+128),w
  7279  04C0  1D03               	skipz
  7280                           
  7281                           ;usb_device.c: 755: {
  7282                           ;usb_device.c: 756: USBStatusStageTimeoutCounter--;
  7283  04C1  03E6               	decf	_USBStatusStageTimeoutCounter^(0+128),f
  7284                           
  7285                           ;usb_device.c: 757: }
  7286                           ;usb_device.c: 763: if(USBStatusStageTimeoutCounter == 0)
  7287  04C2  08E6               	movf	_USBStatusStageTimeoutCounter^(0+128),f
  7288  04C3  1D03               	skipz
  7289  04C4  2CC7               	goto	l3039
  7290                           
  7291                           ;usb_device.c: 764: {
  7292                           ;usb_device.c: 765: USBCtrlEPAllowStatusStage();
  7293  04C5  25F8  3180         	fcall	_USBCtrlEPAllowStatusStage
  7294  04C7                     l3039:	
  7295                           
  7296                           ;usb_device.c: 766: }
  7297                           ;usb_device.c: 768: }
  7298                           ;usb_device.c: 770: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7299  04C7  003D               	movlb	29	; select bank29
  7300  04C8  1A90               	btfsc	16,5	;volatile
  7301  04C9  1E92               	btfss	18,5	;volatile
  7302  04CA  2CCD               	goto	l3045
  7303                           
  7304                           ;usb_device.c: 771: {
  7305                           ;usb_device.c: 772: USBStallHandler();
  7306  04CB  25DD  3180         	fcall	_USBStallHandler
  7307  04CD                     l3045:	
  7308                           
  7309                           ;usb_device.c: 773: }
  7310                           ;usb_device.c: 775: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7311  04CD  1890               	btfsc	16,1	;volatile
  7312  04CE  1C92               	btfss	18,1	;volatile
  7313  04CF  2CDB               	goto	l3053
  7314                           
  7315                           ;usb_device.c: 776: {
  7316                           ;usb_device.c: 777: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7317  04D0  30FF               	movlw	255
  7318  04D1  0020               	movlb	0	; select bank0
  7319  04D2  00E0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  7320  04D3  307F               	movlw	127
  7321  04D4  00E1               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  7322  04D5  27D6  3180         	fcall	PL262	;call to abstracted procedure
  7323  04D7  2519  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7324                           
  7325                           ;usb_device.c: 778: {UEIR = 0;};
  7326  04D9  003D               	movlb	29	; select bank29
  7327  04DA  0193               	clrf	19	;volatile
  7328  04DB                     l3053:	
  7329                           
  7330                           ;usb_device.c: 786: }
  7331                           ;usb_device.c: 793: if(USBDeviceState < DEFAULT_STATE)
  7332  04DB  3004               	movlw	4
  7333  04DC  0020               	movlb	0	; select bank0
  7334  04DD  0253               	subwf	_USBDeviceState,w
  7335  04DE  1C03               	btfss	3,0
  7336  04DF  2C9C               	goto	l3007
  7337                           
  7338                           ;usb_device.c: 797: }
  7339                           ;usb_device.c: 802: if(UIEbits.TRNIE)
  7340  04E0  003D               	movlb	29	; select bank29
  7341  04E1  1D92               	btfss	18,3	;volatile
  7342  04E2  2C9C               	goto	l3007
  7343                           
  7344                           ;usb_device.c: 803: {
  7345                           ;usb_device.c: 804: for(i = 0; i < 4u; i++)
  7346  04E3  0020               	movlb	0	; select bank0
  7347  04E4  01ED               	clrf	USBDeviceTasks@i
  7348  04E5                     l710:	
  7349                           
  7350                           ;usb_device.c: 805: {
  7351                           ;usb_device.c: 806: if(UIRbits.TRNIF)
  7352  04E5  003D               	movlb	29	; select bank29
  7353  04E6  1D90               	btfss	16,3	;volatile
  7354  04E7  2C9C               	goto	l3007
  7355                           
  7356                           ;usb_device.c: 807: {
  7357                           ;usb_device.c: 809: USTATcopy.Val = USTAT;
  7358  04E8  080F               	movf	15,w	;volatile
  7359  04E9  0020               	movlb	0	; select bank0
  7360  04EA  00DF               	movwf	_USTATcopy
  7361                           
  7362                           ;usb_device.c: 810: endpoint_number = USTATcopy.endpoint_number;
  7363  04EB  0C5F               	rrf	_USTATcopy,w
  7364  04EC  00EC               	movwf	??_USBDeviceTasks
  7365  04ED  0CEC               	rrf	??_USBDeviceTasks,f
  7366  04EE  0C6C               	rrf	??_USBDeviceTasks,w
  7367  04EF  390F               	andlw	15
  7368  04F0  0021               	movlb	1	; select bank1
  7369  04F1  00E8               	movwf	_endpoint_number^(0+128)
  7370                           
  7371                           ;usb_device.c: 812: (UIR &= 0xF7);
  7372  04F2  003D               	movlb	29	; select bank29
  7373  04F3  1190               	bcf	16,3	;volatile
  7374                           
  7375                           ;usb_device.c: 817: if(USTATcopy.direction == 0)
  7376  04F4  0020               	movlb	0	; select bank0
  7377  04F5  195F               	btfsc	_USTATcopy,2
  7378  04F6  2CFB               	goto	l3073
  7379                           
  7380                           ;usb_device.c: 818: {
  7381                           ;usb_device.c: 819: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7382  04F7  0021               	movlb	1	; select bank1
  7383  04F8  0868               	movf	_endpoint_number^(0+128),w
  7384  04F9  3E4F               	addlw	_ep_data_out& (0+255)
  7385  04FA  2CFE               	goto	L1
  7386  04FB                     l3073:	
  7387                           ;usb_device.c: 820: }
  7388                           
  7389                           
  7390                           ;usb_device.c: 821: else
  7391                           ;usb_device.c: 822: {
  7392                           ;usb_device.c: 823: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7393  04FB  0021               	movlb	1	; select bank1
  7394  04FC  0868               	movf	_endpoint_number^(0+128),w
  7395  04FD  3E4D               	addlw	_ep_data_in& (0+255)
  7396  04FE                     L1:	
  7397  04FE  0086               	movwf	6
  7398  04FF  3001               	movlw	1	; select bank2/3
  7399  0500  0087               	movwf	7
  7400  0501  0681               	xorwf	1,f
  7401                           
  7402                           ;usb_device.c: 824: }
  7403                           ;usb_device.c: 829: if(endpoint_number == 0)
  7404  0502  08E8               	movf	_endpoint_number^(0+128),f
  7405  0503  1D03               	skipz
  7406  0504  2D08               	goto	l3079
  7407                           
  7408                           ;usb_device.c: 830: {
  7409                           ;usb_device.c: 831: USBCtrlEPService();
  7410  0505  2639  3180         	fcall	_USBCtrlEPService
  7411                           
  7412                           ;usb_device.c: 832: }
  7413  0507  2D12               	goto	l3081
  7414  0508                     l3079:	
  7415                           
  7416                           ;usb_device.c: 833: else
  7417                           ;usb_device.c: 834: {
  7418                           ;usb_device.c: 835: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7419  0508  3072               	movlw	114
  7420  0509  0020               	movlb	0	; select bank0
  7421  050A  00E0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  7422  050B  305F               	movlw	_USTATcopy& (0+255)
  7423  050C  01E1               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  7424  050D  00E2               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  7425  050E  01E3               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  7426  050F  01E4               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  7427  0510  2519  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7428  0512                     l3081:	
  7429  0512  0020               	movlb	0	; select bank0
  7430  0513  3004               	movlw	4
  7431  0514  0AED               	incf	USBDeviceTasks@i,f
  7432  0515  026D               	subwf	USBDeviceTasks@i,w
  7433  0516  1803               	btfsc	3,0
  7434  0517  2C9C               	goto	l3007
  7435  0518  2CE5               	goto	l710
  7436  0519                     __end_of_USBDeviceTasks:	
  7437  0519                     __ptext21:	
  7438 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7439 ;; Defined at:
  7440 ;;		line 95 in file "../src/main.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  event           2    0[BANK0 ] enum E2684
  7443 ;;  pdata           1    2[BANK0 ] PTR void 
  7444 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(32), NULL(0), 
  7445 ;;  size            2    3[BANK0 ] unsigned int 
  7446 ;; Auto vars:     Size  Location     Type
  7447 ;;		None
  7448 ;; Return value:  Size  Location     Type
  7449 ;;                  1    wreg      unsigned char 
  7450 ;; Registers used:
  7451 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7452 ;; Tracked objects:
  7453 ;;		On entry : 1F/0
  7454 ;;		On exit  : 0/0
  7455 ;;		Unchanged: FFFE0/0
  7456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7457 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7460 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7461 ;;Total ram usage:        5 bytes
  7462 ;; Hardware stack levels used:    1
  7463 ;; Hardware stack levels required when called:    4
  7464 ;; This function calls:
  7465 ;;		_APP_LEDUpdateUSBStatus
  7466 ;;		_APP_DeviceAudioMIDISOFHandler
  7467 ;;		_APP_DeviceAudioMIDIInitialize
  7468 ;; This function is called by:
  7469 ;;		_USBDeviceTasks
  7470 ;;		_USBStdSetCfgHandler
  7471 ;;		_USBSuspend
  7472 ;;		_USBWakeFromSuspend
  7473 ;;		_USBCtrlTrfSetupHandler
  7474 ;;		_USBCheckStdRequest
  7475 ;;		_USBStdFeatureReqHandler
  7476 ;; This function uses a non-reentrant model
  7477 ;;
  7478                           
  7479                           
  7480                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  7481  0519                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  7482  0519                     l3085:	
  7483                           ;incstack = 0
  7484                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [allreg]
  7485                           
  7486                           
  7487                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7488                           ; Switch size 1, requested type "space"
  7489                           ; Number of cases is 2, Range of values is 0 to 127
  7490                           ; switch strategies available:
  7491                           ; Name         Instructions Cycles
  7492                           ; simple_byte            7     4 (average)
  7493                           ; direct_byte          262     6 (fixed)
  7494                           ; jumptable            260     6 (fixed)
  7495                           ; rangetable           132     6 (fixed)
  7496                           ; spacedrange          261     8 (fixed)
  7497                           ; locatedrange         128     3 (fixed)
  7498                           ;	Chosen strategy is simple_byte
  7499                           
  7500                           ;main.c: 122: break;
  7501                           
  7502                           ;main.c: 96: switch( (int) event )
  7503  0519  0861               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  7504  051A  3A00               	xorlw	0	; case 0
  7505  051B  1903               	skipnz
  7506  051C  2D26               	goto	l4103
  7507  051D  3A7F               	xorlw	127	; case 127
  7508  051E  1903               	skipnz
  7509  051F  2D40               	goto	l4105
  7510  0520  2D45               	goto	l88
  7511  0521                     l3087:	
  7512                           
  7513                           ;main.c: 104: APP_LEDUpdateUSBStatus();
  7514  0521  2008  3180         	fcall	_APP_LEDUpdateUSBStatus
  7515                           
  7516                           ;main.c: 105: APP_DeviceAudioMIDISOFHandler();
  7517  0523  2E88               	ljmp	l3113
  7518  0524                     l3091:	
  7519                           ;main.c: 106: break;
  7520                           
  7521                           
  7522                           ;main.c: 110: APP_LEDUpdateUSBStatus();
  7523  0524  2808               	ljmp	l2743
  7524  0525                     l3095:	
  7525                           ;main.c: 111: break;
  7526                           
  7527                           
  7528                           ;main.c: 121: APP_DeviceAudioMIDIInitialize();
  7529  0525  2E8D               	ljmp	l3117
  7530  0526                     l4103:	
  7531                           
  7532                           ; Switch size 1, requested type "space"
  7533                           ; Number of cases is 8, Range of values is 1 to 117
  7534                           ; switch strategies available:
  7535                           ; Name         Instructions Cycles
  7536                           ; simple_byte           25    13 (average)
  7537                           ; direct_byte          243     9 (fixed)
  7538                           ; jumptable            263     9 (fixed)
  7539                           ;	Chosen strategy is simple_byte
  7540  0526  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  7541  0527  3A01               	xorlw	1	; case 1
  7542  0528  1903               	skipnz
  7543  0529  2D25               	goto	l3095
  7544  052A  3A03               	xorlw	3	; case 2
  7545  052B  1903               	skipnz
  7546  052C  2D45               	goto	l88
  7547  052D  3A01               	xorlw	1	; case 3
  7548  052E  1903               	skipnz
  7549  052F  2D45               	goto	l88
  7550  0530  3A06               	xorlw	6	; case 5
  7551  0531  1903               	skipnz
  7552  0532  2D45               	goto	l88
  7553  0533  3A77               	xorlw	119	; case 114
  7554  0534  1903               	skipnz
  7555  0535  2D45               	goto	l88
  7556  0536  3A01               	xorlw	1	; case 115
  7557  0537  1903               	skipnz
  7558  0538  2D21               	goto	l3087
  7559  0539  3A07               	xorlw	7	; case 116
  7560  053A  1903               	skipnz
  7561  053B  2D24               	goto	l3091
  7562  053C  3A01               	xorlw	1	; case 117
  7563  053D  1903               	skipnz
  7564  053E  2D24               	goto	l3091
  7565  053F  2D45               	goto	l88
  7566  0540                     l4105:	
  7567                           
  7568                           ; Switch size 1, requested type "space"
  7569                           ; Number of cases is 1, Range of values is 255 to 255
  7570                           ; switch strategies available:
  7571                           ; Name         Instructions Cycles
  7572                           ; simple_byte            4     3 (average)
  7573                           ; direct_byte            7     5 (fixed)
  7574                           ; jumptable            263     9 (fixed)
  7575                           ;	Chosen strategy is simple_byte
  7576  0540  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  7577  0541  3AFF               	xorlw	255	; case 255
  7578  0542  1903               	skipnz
  7579  0543  2D45               	goto	l88
  7580  0544  2D45               	goto	l88
  7581  0545                     l88:	
  7582  0545  0008               	return
  7583  0546                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  7584  0546                     __ptext27:	
  7585 ;; *************** function _USBDeviceInit *****************
  7586 ;; Defined at:
  7587 ;;		line 301 in file "../framework/usb/usb_device.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;		None
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;  p               2    2[COMMON] PTR unsigned char 
  7592 ;;		 -> UEP1(1), 
  7593 ;;  i               1    4[COMMON] unsigned char 
  7594 ;;  i               1    5[COMMON] unsigned char 
  7595 ;; Return value:  Size  Location     Type
  7596 ;;		None               void
  7597 ;; Registers used:
  7598 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7599 ;; Tracked objects:
  7600 ;;		On entry : 160/0
  7601 ;;		On exit  : 17F/0
  7602 ;;		Unchanged: FFE80/0
  7603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7605 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7606 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7607 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7608 ;;Total ram usage:        6 bytes
  7609 ;; Hardware stack levels used:    1
  7610 ;; Hardware stack levels required when called:    1
  7611 ;; This function calls:
  7612 ;;		Nothing
  7613 ;; This function is called by:
  7614 ;;		_main
  7615 ;;		_USBDeviceTasks
  7616 ;; This function uses a non-reentrant model
  7617 ;;
  7618                           
  7619                           
  7620                           ;psect for function _USBDeviceInit
  7621  0546                     _USBDeviceInit:	
  7622                           
  7623                           ;usb_device.c: 302: uint8_t i;
  7624                           ;usb_device.c: 304: {PIE2bits.USBIE = 0;};
  7625                           
  7626                           ;incstack = 0
  7627                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  7628  0546  0021               	movlb	1	; select bank1
  7629  0547  1112               	bcf	18,2	;volatile
  7630                           
  7631                           ;usb_device.c: 307: {UEIR = 0;};
  7632  0548  003D               	movlb	29	; select bank29
  7633  0549  0193               	clrf	19	;volatile
  7634                           
  7635                           ;usb_device.c: 310: {UIR = 0;};
  7636  054A  0190               	clrf	16	;volatile
  7637                           
  7638                           ;usb_device.c: 313: UEP0 = 0;
  7639  054B  0198               	clrf	24	;volatile
  7640                           
  7641                           ;usb_device.c: 315: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 0
      +                          ; };
  7642  054C  300E               	movlw	14
  7643  054D  00F3               	movwf	USBDeviceInit@p+1
  7644  054E  3099               	movlw	153
  7645  054F  00F2               	movwf	USBDeviceInit@p
  7646  0550  01F4               	clrf	USBDeviceInit@i_1882
  7647  0551                     l2825:	
  7648  0551  0872               	movf	USBDeviceInit@p,w
  7649  0552  0086               	movwf	6
  7650  0553  0873               	movf	USBDeviceInit@p+1,w
  7651  0554  0087               	movwf	7
  7652  0555  0181               	clrf	1
  7653  0556  0AF2               	incf	USBDeviceInit@p,f
  7654  0557  1903               	skipnz
  7655  0558  0AF3               	incf	USBDeviceInit@p+1,f
  7656  0559  0AF4               	incf	USBDeviceInit@i_1882,f
  7657  055A  1903               	btfsc	3,2
  7658  055B  2D51               	goto	l2825
  7659                           
  7660                           ;usb_device.c: 317: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7661  055C  3016               	movlw	22
  7662  055D  003D               	movlb	29	; select bank29
  7663  055E  27CA  3180         	fcall	PL258	;call to abstracted procedure
  7664                           
  7665                           ;usb_device.c: 320: ;
  7666                           ;usb_device.c: 323: ;
  7667                           ;usb_device.c: 326: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  7668  0560  01F5               	clrf	USBDeviceInit@i
  7669  0561                     l2841:	
  7670                           
  7671                           ;usb_device.c: 327: {
  7672                           ;usb_device.c: 328: BDT[i].Val = 0x00;
  7673  0561  0875               	movf	USBDeviceInit@i,w
  7674  0562  0709               	addwf	9,w
  7675  0563  0709               	addwf	9,w
  7676  0564  3E20               	addlw	32
  7677  0565  0086               	movwf	6
  7678  0566  3000               	movlw	0
  7679  0567  0187               	clrf	7
  7680  0568  3FC0               	movwi [0]fsr1
  7681  0569  3FC1               	movwi [1]fsr1
  7682  056A  3FC2               	movwi [2]fsr1
  7683  056B  3FC3               	movwi [3]fsr1
  7684  056C  3008               	movlw	8
  7685  056D  0AF5               	incf	USBDeviceInit@i,f
  7686  056E  0275               	subwf	USBDeviceInit@i,w
  7687  056F  1C03               	skipc
  7688  0570  2D61               	goto	l2841
  7689                           
  7690                           ;usb_device.c: 329: }
  7691                           ;usb_device.c: 332: UCONbits.PPBRST = 1;
  7692  0571  003D               	movlb	29	; select bank29
  7693  0572  170E               	bsf	14,6	;volatile
  7694                           
  7695                           ;usb_device.c: 335: UADDR = 0x00;
  7696  0573  0196               	clrf	22	;volatile
  7697                           
  7698                           ;usb_device.c: 338: UCONbits.PKTDIS = 0;
  7699  0574  120E               	bcf	14,4	;volatile
  7700                           
  7701                           ;usb_device.c: 341: UCONbits.PPBRST = 0;
  7702  0575  130E               	bcf	14,6	;volatile
  7703  0576                     l2853:	
  7704                           
  7705                           ;usb_device.c: 345: {
  7706                           ;usb_device.c: 346: (UIR &= 0xF7);
  7707  0576  1190               	bcf	16,3	;volatile
  7708                           
  7709                           ;usb_device.c: 348: inPipes[0].info.Val = 0;
  7710  0577  0020               	movlb	0	; select bank0
  7711  0578  01DB               	clrf	_inPipes+2
  7712                           
  7713                           ;usb_device.c: 349: outPipes[0].info.Val = 0;
  7714  0579  0022               	movlb	2	; select bank2
  7715  057A  01C9               	clrf	(_outPipes^(0+256)+2)
  7716                           
  7717                           ;usb_device.c: 350: outPipes[0].wCount.Val = 0;
  7718  057B  01CA               	clrf	(_outPipes^(0+256)+3)
  7719  057C  01CB               	clrf	((_outPipes+1)^(0+256)+3)
  7720                           
  7721                           ;usb_device.c: 351: }while(UIRbits.TRNIF == 1);
  7722  057D  003D               	movlb	29	; select bank29
  7723  057E  1990               	btfsc	16,3	;volatile
  7724  057F  2D76               	goto	l2853
  7725                           
  7726                           ;usb_device.c: 355: USBStatusStageEnabledFlag1 = 1;
  7727  0580  3001               	movlw	1
  7728  0581  0021               	movlb	1	; select bank1
  7729  0582  00E4               	movwf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  7730                           
  7731                           ;usb_device.c: 356: USBStatusStageEnabledFlag2 = 1;
  7732  0583  00E5               	movwf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  7733                           
  7734                           ;usb_device.c: 358: USBDeferINDataStagePackets = 0;
  7735  0584  01E2               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  7736                           
  7737                           ;usb_device.c: 359: USBDeferOUTDataStagePackets = 0;
  7738  0585  01E3               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  7739                           
  7740                           ;usb_device.c: 360: USBBusIsSuspended = 0;
  7741  0586  0022               	movlb	2	; select bank2
  7742  0587  01D7               	clrf	_USBBusIsSuspended^(0+256)
  7743                           
  7744                           ;usb_device.c: 364: for(i = 0; i < (uint8_t)(1+1u); i++)
  7745  0588  01F5               	clrf	USBDeviceInit@i
  7746  0589                     l2869:	
  7747                           
  7748                           ;usb_device.c: 365: {
  7749                           ;usb_device.c: 366: pBDTEntryIn[i] = 0u;
  7750  0589  0875               	movf	USBDeviceInit@i,w
  7751  058A  3E50               	addlw	_pBDTEntryIn& (0+255)
  7752  058B  0086               	movwf	6
  7753  058C  0187               	clrf	7
  7754  058D  0181               	clrf	1
  7755                           
  7756                           ;usb_device.c: 367: pBDTEntryOut[i] = 0u;
  7757  058E  0875               	movf	USBDeviceInit@i,w
  7758  058F  3E53               	addlw	_pBDTEntryOut& (0+255)
  7759  0590  0086               	movwf	6
  7760  0591  3001               	movlw	1	; select bank2/3
  7761  0592  0087               	movwf	7
  7762  0593  0181               	clrf	1
  7763                           
  7764                           ;usb_device.c: 368: ep_data_in[i].Val = 0u;
  7765  0594  0875               	movf	USBDeviceInit@i,w
  7766  0595  3E4D               	addlw	_ep_data_in& (0+255)
  7767  0596  0086               	movwf	6
  7768  0597  0181               	clrf	1
  7769                           
  7770                           ;usb_device.c: 369: ep_data_out[i].Val = 0u;
  7771  0598  0875               	movf	USBDeviceInit@i,w
  7772  0599  3E4F               	addlw	_ep_data_out& (0+255)
  7773  059A  0086               	movwf	6
  7774  059B  3002               	movlw	2
  7775  059C  0181               	clrf	1
  7776  059D  0AF5               	incf	USBDeviceInit@i,f
  7777  059E  0275               	subwf	USBDeviceInit@i,w
  7778  059F  1C03               	skipc
  7779  05A0  2D89               	goto	l2869
  7780                           
  7781                           ;usb_device.c: 370: }
  7782                           ;usb_device.c: 373: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7783  05A1  3028               	movlw	40
  7784  05A2  0020               	movlb	0	; select bank0
  7785  05A3  00D0               	movwf	_pBDTEntryIn
  7786                           
  7787                           ;usb_device.c: 375: UEP0 = 0x06|0x10;
  7788  05A4  3016               	movlw	22
  7789  05A5  003D               	movlb	29	; select bank29
  7790  05A6  0098               	movwf	24	;volatile
  7791                           
  7792                           ;usb_device.c: 377: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7793  05A7  3040               	movlw	64
  7794  05A8  00F0               	movwf	??_USBDeviceInit
  7795  05A9  01F1               	clrf	??_USBDeviceInit+1
  7796  05AA  0020               	movlb	0	; select bank0
  7797  05AB  00A2               	movwf	34	;volatile
  7798  05AC  0871               	movf	??_USBDeviceInit+1,w
  7799  05AD  00A3               	movwf	35	;volatile
  7800                           
  7801                           ;usb_device.c: 378: BDT[0].CNT = 8;
  7802  05AE  3008               	movlw	8
  7803  05AF  00A1               	movwf	33	;volatile
  7804                           
  7805                           ;usb_device.c: 379: BDT[0].STAT.Val = 0x00|0x04;
  7806  05B0  3004               	movlw	4
  7807  05B1  00A0               	movwf	32	;volatile
  7808                           
  7809                           ;usb_device.c: 380: BDT[0].STAT.Val |= 0x80;
  7810  05B2  17A0               	bsf	32,7	;volatile
  7811                           
  7812                           ;usb_device.c: 385: USB1msTickCount = 0;
  7813  05B3  01DE               	clrf	_USBActiveConfiguration
  7814                           
  7815                           ;usb_device.c: 386: USBTicksSinceSuspendEnd = 0;
  7816  05B4  0022               	movlb	2	; select bank2
  7817  05B5  01D8               	clrf	_USBTicksSinceSuspendEnd^(0+256)
  7818                           
  7819                           ;usb_device.c: 389: USBDeviceState = DETACHED_STATE;
  7820  05B6  0020               	movlb	0	; select bank0
  7821  05B7  01D3               	clrf	_USBDeviceState
  7822  05B8  0008               	return
  7823  05B9                     __end_of_USBDeviceInit:	
  7824  05B9                     __ptext20:	
  7825 ;; *************** function _USBWakeFromSuspend *****************
  7826 ;; Defined at:
  7827 ;;		line 2323 in file "../framework/usb/usb_device.c"
  7828 ;; Parameters:    Size  Location     Type
  7829 ;;		None
  7830 ;; Auto vars:     Size  Location     Type
  7831 ;;		None
  7832 ;; Return value:  Size  Location     Type
  7833 ;;		None               void
  7834 ;; Registers used:
  7835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7836 ;; Tracked objects:
  7837 ;;		On entry : 17F/1D
  7838 ;;		On exit  : 17F/2
  7839 ;;		Unchanged: FFE80/0
  7840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7845 ;;Total ram usage:        0 bytes
  7846 ;; Hardware stack levels used:    1
  7847 ;; Hardware stack levels required when called:    5
  7848 ;; This function calls:
  7849 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7850 ;; This function is called by:
  7851 ;;		_USBDeviceTasks
  7852 ;; This function uses a non-reentrant model
  7853 ;;
  7854                           
  7855                           
  7856                           ;psect for function _USBWakeFromSuspend
  7857  05B9                     _USBWakeFromSuspend:	
  7858                           
  7859                           ;usb_device.c: 2324: USBBusIsSuspended = 0;
  7860                           
  7861                           ;incstack = 0
  7862                           ; Regs used in _USBWakeFromSuspend: [allreg]
  7863  05B9  0022               	movlb	2	; select bank2
  7864  05BA  3074               	movlw	116
  7865  05BB  01D7               	clrf	_USBBusIsSuspended^(0+256)
  7866                           
  7867                           ;usb_device.c: 2330: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  7868  05BC  2790  3180         	fcall	PL232	;call to abstracted procedure
  7869  05BE  2519  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7870                           
  7871                           ;usb_device.c: 2337: UCONbits.SUSPND = 0;
  7872  05C0  003D               	movlb	29	; select bank29
  7873  05C1  108E               	bcf	14,1	;volatile
  7874                           
  7875                           ;usb_device.c: 2342: UIEbits.ACTVIE = 0;
  7876  05C2  1112               	bcf	18,2	;volatile
  7877  05C3                     l847:	
  7878                           ;usb_device.c: 2360: while(UIRbits.ACTVIF)
  7879                           
  7880  05C3  1D10               	btfss	16,2	;volatile
  7881  05C4  2DC7               	goto	l3381
  7882                           
  7883                           ;usb_device.c: 2362: {
  7884                           ;usb_device.c: 2363: (UIR &= 0xFB);
  7885  05C5  1110               	bcf	16,2	;volatile
  7886  05C6  2DC3               	goto	l847
  7887  05C7                     l3381:	
  7888                           
  7889                           ;usb_device.c: 2364: }
  7890                           ;usb_device.c: 2366: USBTicksSinceSuspendEnd = 0;
  7891  05C7  0022               	movlb	2	; select bank2
  7892  05C8  01D8               	clrf	_USBTicksSinceSuspendEnd^(0+256)
  7893  05C9  0008               	return
  7894  05CA                     __end_of_USBWakeFromSuspend:	
  7895  05CA                     __ptext19:	
  7896 ;; *************** function _USBSuspend *****************
  7897 ;; Defined at:
  7898 ;;		line 2265 in file "../framework/usb/usb_device.c"
  7899 ;; Parameters:    Size  Location     Type
  7900 ;;		None
  7901 ;; Auto vars:     Size  Location     Type
  7902 ;;		None
  7903 ;; Return value:  Size  Location     Type
  7904 ;;		None               void
  7905 ;; Registers used:
  7906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7907 ;; Tracked objects:
  7908 ;;		On entry : 17F/1D
  7909 ;;		On exit  : 160/0
  7910 ;;		Unchanged: FFE80/0
  7911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7916 ;;Total ram usage:        0 bytes
  7917 ;; Hardware stack levels used:    1
  7918 ;; Hardware stack levels required when called:    5
  7919 ;; This function calls:
  7920 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7921 ;; This function is called by:
  7922 ;;		_USBDeviceTasks
  7923 ;; This function uses a non-reentrant model
  7924 ;;
  7925                           
  7926                           
  7927                           ;psect for function _USBSuspend
  7928  05CA                     _USBSuspend:	
  7929                           
  7930                           ;usb_device.c: 2289: UIEbits.ACTVIE = 1;
  7931                           
  7932                           ;incstack = 0
  7933                           ; Regs used in _USBSuspend: [allreg]
  7934  05CA  1512               	bsf	18,2	;volatile
  7935                           
  7936                           ;usb_device.c: 2290: (UIR &= 0xEF);
  7937  05CB  1210               	bcf	16,4	;volatile
  7938                           
  7939                           ;usb_device.c: 2293: UCONbits.SUSPND = 1;
  7940  05CC  148E               	bsf	14,1	;volatile
  7941                           
  7942                           ;usb_device.c: 2296: USBBusIsSuspended = 1;
  7943  05CD  0022               	movlb	2	; select bank2
  7944  05CE  3075               	movlw	117
  7945  05CF  01D7               	clrf	_USBBusIsSuspended^(0+256)
  7946  05D0  0AD7               	incf	_USBBusIsSuspended^(0+256),f
  7947                           
  7948                           ;usb_device.c: 2297: USBTicksSinceSuspendEnd = 0;
  7949  05D1  01D8               	clrf	_USBTicksSinceSuspendEnd^(0+256)
  7950                           
  7951                           ;usb_device.c: 2304: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  7952  05D2  2790  3180         	fcall	PL232	;call to abstracted procedure
  7953  05D4  2D19               	ljmp	l3085
  7954  05D5                     __end_of_USBSuspend:	
  7955  05D5                     __ptext18:	
  7956 ;; *************** function _USBIncrement1msInternalTimers *****************
  7957 ;; Defined at:
  7958 ;;		line 3051 in file "../framework/usb/usb_device.c"
  7959 ;; Parameters:    Size  Location     Type
  7960 ;;		None
  7961 ;; Auto vars:     Size  Location     Type
  7962 ;;		None
  7963 ;; Return value:  Size  Location     Type
  7964 ;;		None               void
  7965 ;; Registers used:
  7966 ;;		wreg, status,2, status,0
  7967 ;; Tracked objects:
  7968 ;;		On entry : 17F/1D
  7969 ;;		On exit  : 17F/2
  7970 ;;		Unchanged: FFE80/0
  7971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7976 ;;Total ram usage:        0 bytes
  7977 ;; Hardware stack levels used:    1
  7978 ;; Hardware stack levels required when called:    1
  7979 ;; This function calls:
  7980 ;;		Nothing
  7981 ;; This function is called by:
  7982 ;;		_USBDeviceTasks
  7983 ;; This function uses a non-reentrant model
  7984 ;;
  7985                           
  7986                           
  7987                           ;psect for function _USBIncrement1msInternalTimers
  7988  05D5                     _USBIncrement1msInternalTimers:	
  7989                           
  7990                           ;usb_device.c: 3059: if(USBBusIsSuspended == 0)
  7991                           
  7992                           ;incstack = 0
  7993                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  7994  05D5  0022               	movlb	2	; select bank2
  7995  05D6  08D7               	movf	_USBBusIsSuspended^(0+256),f
  7996  05D7  1903               	btfsc	3,2
  7997                           
  7998                           ;usb_device.c: 3060: {
  7999                           ;usb_device.c: 3061: USBTicksSinceSuspendEnd++;
  8000  05D8  0FD8               	incfsz	_USBTicksSinceSuspendEnd^(0+256),f
  8001                           
  8002                           ;usb_device.c: 3063: if(USBTicksSinceSuspendEnd == 0)
  8003  05D9  0008               	return
  8004                           
  8005                           ;usb_device.c: 3064: {
  8006                           ;usb_device.c: 3065: USBTicksSinceSuspendEnd = 255;
  8007  05DA  30FF               	movlw	255
  8008  05DB  00D8               	movwf	_USBTicksSinceSuspendEnd^(0+256)
  8009  05DC  0008               	return
  8010  05DD                     __end_of_USBIncrement1msInternalTimers:	
  8011  05DD                     __ptext17:	
  8012 ;; *************** function _USBStallHandler *****************
  8013 ;; Defined at:
  8014 ;;		line 2222 in file "../framework/usb/usb_device.c"
  8015 ;; Parameters:    Size  Location     Type
  8016 ;;		None
  8017 ;; Auto vars:     Size  Location     Type
  8018 ;;		None
  8019 ;; Return value:  Size  Location     Type
  8020 ;;		None               void
  8021 ;; Registers used:
  8022 ;;		wreg, fsr1l, fsr1h
  8023 ;; Tracked objects:
  8024 ;;		On entry : 17F/1D
  8025 ;;		On exit  : 17F/1D
  8026 ;;		Unchanged: FFE80/0
  8027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8032 ;;Total ram usage:        0 bytes
  8033 ;; Hardware stack levels used:    1
  8034 ;; Hardware stack levels required when called:    1
  8035 ;; This function calls:
  8036 ;;		Nothing
  8037 ;; This function is called by:
  8038 ;;		_USBDeviceTasks
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           
  8043                           ;psect for function _USBStallHandler
  8044  05DD                     _USBStallHandler:	
  8045                           
  8046                           ;usb_device.c: 2233: if(UEP0bits.EPSTALL == 1)
  8047                           
  8048                           ;incstack = 0
  8049                           ; Regs used in _USBStallHandler: [wregfsr1]
  8050  05DD  1C18               	btfss	24,0	;volatile
  8051  05DE  2DF6               	goto	l3439
  8052                           
  8053                           ;usb_device.c: 2234: {
  8054                           ;usb_device.c: 2236: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8055  05DF  0020               	movlb	0	; select bank0
  8056  05E0  0856               	movf	_pBDTEntryEP0OutCurrent,w
  8057  05E1  0086               	movwf	6
  8058  05E2  0187               	clrf	7
  8059  05E3  0801               	movf	1,w
  8060  05E4  3A80               	xorlw	128
  8061  05E5  1D03               	skipz
  8062  05E6  2DF4               	goto	l3437
  8063  05E7  0850               	movf	_pBDTEntryIn,w
  8064  05E8  0086               	movwf	6
  8065  05E9  0801               	movf	1,w
  8066  05EA  3A84               	xorlw	132
  8067  05EB  1D03               	skipz
  8068  05EC  2DF4               	goto	l3437
  8069                           
  8070                           ;usb_device.c: 2237: {
  8071                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8072  05ED  0856               	movf	_pBDTEntryEP0OutCurrent,w
  8073  05EE  0086               	movwf	6
  8074  05EF  300C               	movlw	12
  8075  05F0  0081               	movwf	1
  8076                           
  8077                           ;usb_device.c: 2240: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8078  05F1  0856               	movf	_pBDTEntryEP0OutCurrent,w
  8079  05F2  0086               	movwf	6
  8080  05F3  1781               	bsf	1,7
  8081  05F4                     l3437:	
  8082                           
  8083                           ;usb_device.c: 2241: }
  8084                           ;usb_device.c: 2242: UEP0bits.EPSTALL = 0;
  8085  05F4  003D               	movlb	29	; select bank29
  8086  05F5  1018               	bcf	24,0	;volatile
  8087  05F6                     l3439:	
  8088                           
  8089                           ;usb_device.c: 2243: }
  8090                           ;usb_device.c: 2245: (UIR &= 0xDF);
  8091  05F6  1290               	bcf	16,5	;volatile
  8092  05F7  0008               	return
  8093  05F8                     __end_of_USBStallHandler:	
  8094  05F8                     __ptext16:	
  8095 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  8096 ;; Defined at:
  8097 ;;		line 1436 in file "../framework/usb/usb_device.c"
  8098 ;; Parameters:    Size  Location     Type
  8099 ;;		None
  8100 ;; Auto vars:     Size  Location     Type
  8101 ;;		None
  8102 ;; Return value:  Size  Location     Type
  8103 ;;		None               void
  8104 ;; Registers used:
  8105 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8106 ;; Tracked objects:
  8107 ;;		On entry : 0/1
  8108 ;;		On exit  : 1E/0
  8109 ;;		Unchanged: FFFE0/0
  8110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8113 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8114 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8115 ;;Total ram usage:        2 bytes
  8116 ;; Hardware stack levels used:    1
  8117 ;; Hardware stack levels required when called:    1
  8118 ;; This function calls:
  8119 ;;		Nothing
  8120 ;; This function is called by:
  8121 ;;		_USBDeviceTasks
  8122 ;;		_USBCtrlEPServiceComplete
  8123 ;;		_USBCtrlTrfRxService
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           
  8128                           ;psect for function _USBCtrlEPAllowStatusStage
  8129  05F8                     _USBCtrlEPAllowStatusStage:	
  8130  05F8                     l3395:	
  8131                           ;incstack = 0
  8132                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  8133                           
  8134                           
  8135                           ;usb_device.c: 1442: if(USBStatusStageEnabledFlag1 == 0)
  8136  05F8  0021               	movlb	1	; select bank1
  8137  05F9  08E4               	movf	_USBStatusStageEnabledFlag1^(0+128),f
  8138  05FA  1D03               	skipz
  8139  05FB  0008               	return
  8140                           
  8141                           ;usb_device.c: 1443: {
  8142                           ;usb_device.c: 1444: USBStatusStageEnabledFlag1 = 1;
  8143  05FC  3001               	movlw	1
  8144  05FD  00E4               	movwf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  8145                           
  8146                           ;usb_device.c: 1445: if(USBStatusStageEnabledFlag2 == 0)
  8147  05FE  08E5               	movf	_USBStatusStageEnabledFlag2^(0+128),f
  8148  05FF  1D03               	skipz
  8149  0600  0008               	return
  8150                           
  8151                           ;usb_device.c: 1446: {
  8152                           ;usb_device.c: 1447: USBStatusStageEnabledFlag2 = 1;
  8153  0601  00E5               	movwf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  8154                           
  8155                           ;usb_device.c: 1451: if(controlTransferState == 2)
  8156  0602  0020               	movlb	0	; select bank0
  8157  0603  0855               	movf	_controlTransferState,w
  8158  0604  3A02               	xorlw	2
  8159  0605  1D03               	skipz
  8160  0606  2E10               	goto	l3409
  8161                           
  8162                           ;usb_device.c: 1452: {
  8163                           ;usb_device.c: 1453: pBDTEntryIn[0]->CNT = 0;
  8164  0607  0A50               	incf	_pBDTEntryIn,w
  8165  0608  0086               	movwf	6
  8166  0609  0187               	clrf	7
  8167  060A  0181               	clrf	1
  8168                           
  8169                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8170  060B  0850               	movf	_pBDTEntryIn,w
  8171  060C  0086               	movwf	6
  8172  060D  3048               	movlw	72
  8173                           
  8174                           ;usb_device.c: 1455: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8175                           
  8176                           ;usb_device.c: 1456: }
  8177  060E  318F  2F6C         	ljmp	PL226	;call to abstracted procedure
  8178  0610                     l3409:	
  8179                           
  8180                           ;usb_device.c: 1457: else if(controlTransferState == 1)
  8181  0610  0B55               	decfsz	_controlTransferState,w
  8182  0611  0008               	return
  8183                           
  8184                           ;usb_device.c: 1458: {
  8185                           ;usb_device.c: 1459: BothEP0OutUOWNsSet = 0;
  8186  0612  0022               	movlb	2	; select bank2
  8187  0613  01D5               	clrf	_BothEP0OutUOWNsSet^(0+256)
  8188                           
  8189                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->CNT = 8;
  8190  0614  0020               	movlb	0	; select bank0
  8191  0615  0A56               	incf	_pBDTEntryEP0OutCurrent,w
  8192  0616  0086               	movwf	6
  8193  0617  3008               	movlw	8
  8194  0618  0187               	clrf	7
  8195  0619  0081               	movwf	1
  8196                           
  8197                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8198  061A  3040               	movlw	64
  8199  061B  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8200  061C  01F1               	clrf	??_USBCtrlEPAllowStatusStage+1
  8201  061D  0856               	movf	_pBDTEntryEP0OutCurrent,w
  8202  061E  27BE  3180         	fcall	PL250	;call to abstracted procedure
  8203                           
  8204                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  8205  0620  0856               	movf	_pBDTEntryEP0OutCurrent,w
  8206  0621  0086               	movwf	6
  8207  0622  3004               	movlw	4
  8208  0623  0081               	movwf	1
  8209                           
  8210                           ;usb_device.c: 1467: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8211  0624  0856               	movf	_pBDTEntryEP0OutCurrent,w
  8212  0625  0086               	movwf	6
  8213  0626  1781               	bsf	1,7
  8214                           
  8215                           ;usb_device.c: 1468: BothEP0OutUOWNsSet = 1;
  8216  0627  0022               	movlb	2	; select bank2
  8217  0628  01D5               	clrf	_BothEP0OutUOWNsSet^(0+256)
  8218  0629  0AD5               	incf	_BothEP0OutUOWNsSet^(0+256),f
  8219                           
  8220                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->CNT = 8;
  8221  062A  0020               	movlb	0	; select bank0
  8222  062B  0A57               	incf	_pBDTEntryEP0OutNext,w
  8223  062C  0086               	movwf	6
  8224  062D  3008               	movlw	8
  8225  062E  0081               	movwf	1
  8226                           
  8227                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8228  062F  3040               	movlw	64
  8229  0630  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8230  0631  01F1               	clrf	??_USBCtrlEPAllowStatusStage+1
  8231  0632  0857               	movf	_pBDTEntryEP0OutNext,w
  8232  0633  27BE               	fcall	PL250	;call to abstracted procedure
  8233                           
  8234                           ;usb_device.c: 1474: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  8235  0634  0857               	movf	_pBDTEntryEP0OutNext,w
  8236  0635  0086               	movwf	6
  8237  0636  3080               	movlw	128
  8238  0637  0081               	movwf	1
  8239  0638  0008               	return
  8240  0639                     __end_of_USBCtrlEPAllowStatusStage:	
  8241  0639                     __ptext2:	
  8242 ;; *************** function _USBCtrlEPService *****************
  8243 ;; Defined at:
  8244 ;;		line 2392 in file "../framework/usb/usb_device.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;		None
  8247 ;; Auto vars:     Size  Location     Type
  8248 ;;  setup_cnt       1   11[BANK0 ] unsigned char 
  8249 ;; Return value:  Size  Location     Type
  8250 ;;		None               void
  8251 ;; Registers used:
  8252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8253 ;; Tracked objects:
  8254 ;;		On entry : 17F/1
  8255 ;;		On exit  : 17C/0
  8256 ;;		Unchanged: FFE80/0
  8257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8259 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8260 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8261 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8262 ;;Total ram usage:        3 bytes
  8263 ;; Hardware stack levels used:    1
  8264 ;; Hardware stack levels required when called:    8
  8265 ;; This function calls:
  8266 ;;		_USBCtrlTrfSetupHandler
  8267 ;;		_USBCtrlTrfOutHandler
  8268 ;;		_USBCtrlTrfInHandler
  8269 ;; This function is called by:
  8270 ;;		_USBDeviceTasks
  8271 ;; This function uses a non-reentrant model
  8272 ;;
  8273                           
  8274                           
  8275                           ;psect for function _USBCtrlEPService
  8276  0639                     _USBCtrlEPService:	
  8277                           
  8278                           ;usb_device.c: 2397: USBStatusStageTimeoutCounter = (uint8_t)45;
  8279                           
  8280                           ;incstack = 0
  8281                           ; Regs used in _USBCtrlEPService: [allreg]
  8282  0639  302D               	movlw	45
  8283  063A  00E6               	movwf	_USBStatusStageTimeoutCounter^(0+128)
  8284                           
  8285                           ;usb_device.c: 2401: if((USTATcopy.Val & ~0x02) == 0x00)
  8286  063B  0020               	movlb	0	; select bank0
  8287  063C  085F               	movf	_USTATcopy,w
  8288  063D  39FD               	andlw	253
  8289  063E  1D03               	btfss	3,2
  8290  063F  2E80               	goto	l3473
  8291                           
  8292                           ;usb_device.c: 2402: {
  8293                           ;usb_device.c: 2405: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8294  0640  365F               	lsrf	_USTATcopy,w
  8295  0641  393F               	andlw	63
  8296  0642  0709               	addwf	9,w
  8297  0643  0709               	addwf	9,w
  8298  0644  3E20               	addlw	32
  8299  0645  00D6               	movwf	_pBDTEntryEP0OutCurrent
  8300                           
  8301                           ;usb_device.c: 2413: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8302  0646  00D7               	movwf	_pBDTEntryEP0OutNext
  8303                           
  8304                           ;usb_device.c: 2415: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8305  0647  3004               	movlw	4
  8306  0648  06D7               	xorwf	_pBDTEntryEP0OutNext,f
  8307                           
  8308                           ;usb_device.c: 2418: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8309  0649  0856               	movf	_pBDTEntryEP0OutCurrent,w
  8310  064A  0086               	movwf	6
  8311  064B  0187               	clrf	7
  8312  064C  0C01               	rrf	1,w
  8313  064D  0C89               	rrf	9,f
  8314  064E  390F               	andlw	15
  8315  064F  3A0D               	xorlw	13
  8316  0650  1D03               	skipz
  8317  0651  2E7E               	goto	l3471
  8318                           
  8319                           ;usb_device.c: 2419: {
  8320                           ;usb_device.c: 2420: unsigned char setup_cnt;
  8321                           ;usb_device.c: 2426: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  8322  0652  01EB               	clrf	USBCtrlEPService@setup_cnt
  8323  0653                     l3459:	
  8324                           
  8325                           ;usb_device.c: 2427: {
  8326                           ;usb_device.c: 2428: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
  8327  0653  086B               	movf	USBCtrlEPService@setup_cnt,w
  8328  0654  3E40               	addlw	64
  8329  0655  0086               	movwf	6
  8330  0656  0187               	clrf	7
  8331  0657  0856               	movf	_pBDTEntryEP0OutCurrent,w
  8332  0658  3E02               	addlw	2
  8333  0659  0084               	movwf	4
  8334  065A  0185               	clrf	5
  8335  065B  3F00               	moviw [0]fsr0
  8336  065C  00E9               	movwf	??_USBCtrlEPService
  8337  065D  3F01               	moviw [1]fsr0
  8338  065E  00EA               	movwf	??_USBCtrlEPService+1
  8339  065F  0869               	movf	??_USBCtrlEPService,w
  8340  0660  0084               	movwf	4
  8341  0661  086A               	movf	??_USBCtrlEPService+1,w
  8342  0662  0085               	movwf	5
  8343  0663  0800               	movf	0,w
  8344  0664  0081               	movwf	1
  8345                           
  8346                           ;usb_device.c: 2429: pBDTEntryEP0OutCurrent->ADR++;
  8347  0665  0856               	movf	_pBDTEntryEP0OutCurrent,w
  8348  0666  3E02               	addlw	2
  8349  0667  0086               	movwf	6
  8350  0668  3001               	movlw	1
  8351  0669  0781               	addwf	1,f
  8352  066A  3141               	addfsr 1,1
  8353  066B  1803               	skipnc
  8354  066C  0A81               	incf	1,f
  8355  066D  3008               	movlw	8
  8356  066E  0AEB               	incf	USBCtrlEPService@setup_cnt,f
  8357  066F  026B               	subwf	USBCtrlEPService@setup_cnt,w
  8358  0670  1C03               	skipc
  8359  0671  2E53               	goto	l3459
  8360                           
  8361                           ;usb_device.c: 2430: }
  8362                           ;usb_device.c: 2431: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8363  0672  3040               	movlw	64
  8364  0673  00E9               	movwf	??_USBCtrlEPService
  8365  0674  01EA               	clrf	??_USBCtrlEPService+1
  8366  0675  0856               	movf	_pBDTEntryEP0OutCurrent,w
  8367  0676  3E02               	addlw	2
  8368  0677  0086               	movwf	6
  8369  0678  0187               	clrf	7
  8370  0679  0869               	movf	??_USBCtrlEPService,w
  8371  067A  3FC0               	movwi [0]fsr1
  8372  067B  086A               	movf	??_USBCtrlEPService+1,w
  8373  067C  3FC1               	movwi [1]fsr1
  8374                           
  8375                           ;usb_device.c: 2434: USBCtrlTrfSetupHandler();
  8376  067D  2EEA               	ljmp	l3755
  8377  067E                     l3471:	
  8378                           ;usb_device.c: 2435: }
  8379                           
  8380                           
  8381                           ;usb_device.c: 2436: else
  8382                           ;usb_device.c: 2437: {
  8383                           ;usb_device.c: 2439: USBCtrlTrfOutHandler();
  8384  067E  318F  2F71         	ljmp	l3781
  8385  0680                     l3473:	
  8386                           
  8387                           ;usb_device.c: 2442: else if((USTATcopy.Val & ~0x02) == 0x04)
  8388  0680  30FD               	movlw	253
  8389  0681  055F               	andwf	_USTATcopy,w
  8390  0682  00E9               	movwf	??_USBCtrlEPService
  8391  0683  3A04               	xorlw	4
  8392  0684  1D03               	skipz
  8393  0685  0008               	return
  8394                           
  8395                           ;usb_device.c: 2443: {
  8396                           ;usb_device.c: 2446: USBCtrlTrfInHandler();
  8397  0686  318E  2E50         	ljmp	l3793
  8398  0688                     __end_of_USBCtrlEPService:	
  8399  0688                     __ptext25:	
  8400 ;; *************** function _APP_DeviceAudioMIDISOFHandler *****************
  8401 ;; Defined at:
  8402 ;;		line 54 in file "../src/app_device_audio_midi.c"
  8403 ;; Parameters:    Size  Location     Type
  8404 ;;		None
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;		None
  8407 ;; Return value:  Size  Location     Type
  8408 ;;		None               void
  8409 ;; Registers used:
  8410 ;;		wreg, status,2, status,0
  8411 ;; Tracked objects:
  8412 ;;		On entry : 0/0
  8413 ;;		On exit  : 1F/1
  8414 ;;		Unchanged: FFFE0/0
  8415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8420 ;;Total ram usage:        0 bytes
  8421 ;; Hardware stack levels used:    1
  8422 ;; Hardware stack levels required when called:    1
  8423 ;; This function calls:
  8424 ;;		Nothing
  8425 ;; This function is called by:
  8426 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8427 ;; This function uses a non-reentrant model
  8428 ;;
  8429                           
  8430                           
  8431                           ;psect for function _APP_DeviceAudioMIDISOFHandler
  8432  0688                     _APP_DeviceAudioMIDISOFHandler:	
  8433  0688                     l3113:	
  8434                           ;incstack = 0
  8435                           ; Regs used in _APP_DeviceAudioMIDISOFHandler: [wreg+status,2+status,0]
  8436                           
  8437                           
  8438                           ;app_device_audio_midi.c: 55: if(msCounter != 0) msCounter--;
  8439  0688  0021               	movlb	1	; select bank1
  8440  0689  0869               	movf	_msCounter^(0+128),w
  8441  068A  1D03               	skipz
  8442  068B  03E9               	decf	_msCounter^(0+128),f
  8443  068C  0008               	return
  8444  068D                     __end_of_APP_DeviceAudioMIDISOFHandler:	
  8445  068D                     __ptext22:	
  8446 ;; *************** function _APP_DeviceAudioMIDIInitialize *****************
  8447 ;; Defined at:
  8448 ;;		line 42 in file "../src/app_device_audio_midi.c"
  8449 ;; Parameters:    Size  Location     Type
  8450 ;;		None
  8451 ;; Auto vars:     Size  Location     Type
  8452 ;;		None
  8453 ;; Return value:  Size  Location     Type
  8454 ;;		None               void
  8455 ;; Registers used:
  8456 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8457 ;; Tracked objects:
  8458 ;;		On entry : 1F/0
  8459 ;;		On exit  : 1F/0
  8460 ;;		Unchanged: FFFE0/0
  8461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8466 ;;Total ram usage:        0 bytes
  8467 ;; Hardware stack levels used:    1
  8468 ;; Hardware stack levels required when called:    3
  8469 ;; This function calls:
  8470 ;;		_USBEnableEndpoint
  8471 ;;		_USBTransferOnePacket
  8472 ;; This function is called by:
  8473 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8474 ;; This function uses a non-reentrant model
  8475 ;;
  8476                           
  8477                           
  8478                           ;psect for function _APP_DeviceAudioMIDIInitialize
  8479  068D                     _APP_DeviceAudioMIDIInitialize:	
  8480  068D                     l3117:	
  8481                           ;incstack = 0
  8482                           ; Regs used in _APP_DeviceAudioMIDIInitialize: [allreg]
  8483                           
  8484                           
  8485                           ;app_device_audio_midi.c: 43: USBTxHandle = (0);
  8486  068D  0021               	movlb	1	; select bank1
  8487  068E  01E7               	clrf	_USBTxHandle^(0+128)
  8488                           
  8489                           ;app_device_audio_midi.c: 44: USBRxHandle = (0);
  8490  068F  0020               	movlb	0	; select bank0
  8491  0690  303C               	movlw	60
  8492  0691  01D4               	clrf	_USBRxHandle
  8493                           
  8494                           ;app_device_audio_midi.c: 45: pitch = 0x3C;
  8495  0692  0021               	movlb	1	; select bank1
  8496  0693  00EB               	movwf	_pitch^(0+128)
  8497  0694  301E               	movlw	30
  8498                           
  8499                           ;app_device_audio_midi.c: 46: sentNoteOff = 1;
  8500  0695  01EC               	clrf	_sentNoteOff^(0+128)
  8501  0696  0AEC               	incf	_sentNoteOff^(0+128),f
  8502                           
  8503                           ;app_device_audio_midi.c: 47: msCounter = 0;
  8504  0697  01E9               	clrf	_msCounter^(0+128)
  8505                           
  8506                           ;app_device_audio_midi.c: 49: USBEnableEndpoint(1,0x04|0x02|0x10|0x08);
  8507  0698  00F4               	movwf	?_USBEnableEndpoint
  8508  0699  3001               	movlw	1
  8509  069A  26A4  3180         	fcall	_USBEnableEndpoint
  8510  069C  30A0               	movlw	160
  8511                           
  8512                           ;app_device_audio_midi.c: 51: USBRxHandle = USBTransferOnePacket(1,0,(uint8_t*)&Received
      +                          DataBuffer,64);
  8513  069D  01F0               	clrf	?_USBTransferOnePacket
  8514  069E  27AD  3180         	fcall	PL242	;call to abstracted procedure
  8515  06A0  212E               	fcall	_USBTransferOnePacket
  8516  06A1  0020               	movlb	0	; select bank0
  8517  06A2  00D4               	movwf	_USBRxHandle
  8518  06A3  0008               	return
  8519  06A4                     __end_of_APP_DeviceAudioMIDIInitialize:	
  8520  06A4                     __ptext23:	
  8521 ;; *************** function _USBEnableEndpoint *****************
  8522 ;; Defined at:
  8523 ;;		line 898 in file "../framework/usb/usb_device.c"
  8524 ;; Parameters:    Size  Location     Type
  8525 ;;  ep              1    wreg     unsigned char 
  8526 ;;  options         1    4[COMMON] unsigned char 
  8527 ;; Auto vars:     Size  Location     Type
  8528 ;;  ep              1    9[COMMON] unsigned char 
  8529 ;;  p               2    7[COMMON] PTR unsigned char 
  8530 ;;		 -> UEP0(1), 
  8531 ;; Return value:  Size  Location     Type
  8532 ;;		None               void
  8533 ;; Registers used:
  8534 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8535 ;; Tracked objects:
  8536 ;;		On entry : 1F/1
  8537 ;;		On exit  : 1F/1
  8538 ;;		Unchanged: FFFE0/0
  8539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8540 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8541 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8542 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8543 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8544 ;;Total ram usage:        6 bytes
  8545 ;; Hardware stack levels used:    1
  8546 ;; Hardware stack levels required when called:    2
  8547 ;; This function calls:
  8548 ;;		_USBConfigureEndpoint
  8549 ;; This function is called by:
  8550 ;;		_APP_DeviceAudioMIDIInitialize
  8551 ;; This function uses a non-reentrant model
  8552 ;;
  8553                           
  8554                           
  8555                           ;psect for function _USBEnableEndpoint
  8556  06A4                     _USBEnableEndpoint:	
  8557                           
  8558                           ;incstack = 0
  8559                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8560                           ;USBEnableEndpoint@ep stored from wreg
  8561  06A4  00F9               	movwf	USBEnableEndpoint@ep
  8562                           
  8563                           ;usb_device.c: 899: unsigned char* p;
  8564                           ;usb_device.c: 903: if(options & 0x04)
  8565  06A5  1D74               	btfss	USBEnableEndpoint@options,2
  8566  06A6  2EAA               	goto	l3133
  8567                           
  8568                           ;usb_device.c: 904: {
  8569                           ;usb_device.c: 905: USBConfigureEndpoint(ep, 0);
  8570  06A7  01F0               	clrf	?_USBConfigureEndpoint
  8571  06A8  26C3  3180         	fcall	_USBConfigureEndpoint
  8572  06AA                     l3133:	
  8573                           
  8574                           ;usb_device.c: 906: }
  8575                           ;usb_device.c: 907: if(options & 0x02)
  8576  06AA  1CF4               	btfss	USBEnableEndpoint@options,1
  8577  06AB  2EB0               	goto	l3137
  8578                           
  8579                           ;usb_device.c: 908: {
  8580                           ;usb_device.c: 909: USBConfigureEndpoint(ep, 1);
  8581  06AC  01F0               	clrf	?_USBConfigureEndpoint
  8582  06AD  0AF0               	incf	?_USBConfigureEndpoint,f
  8583  06AE  0879               	movf	USBEnableEndpoint@ep,w
  8584  06AF  26C3               	fcall	_USBConfigureEndpoint
  8585  06B0                     l3137:	
  8586                           
  8587                           ;usb_device.c: 910: }
  8588                           ;usb_device.c: 918: p = (unsigned char*)(&UEP0+ep);
  8589  06B0  0879               	movf	USBEnableEndpoint@ep,w
  8590  06B1  3E98               	addlw	152
  8591  06B2  00F5               	movwf	??_USBEnableEndpoint
  8592  06B3  300E               	movlw	14
  8593  06B4  01F6               	clrf	??_USBEnableEndpoint+1
  8594  06B5  3DF6               	addwfc	??_USBEnableEndpoint+1,f
  8595  06B6  0875               	movf	??_USBEnableEndpoint,w
  8596  06B7  00F7               	movwf	USBEnableEndpoint@p
  8597  06B8  0876               	movf	??_USBEnableEndpoint+1,w
  8598  06B9  00F8               	movwf	USBEnableEndpoint@p+1
  8599                           
  8600                           ;usb_device.c: 920: *p = options;
  8601  06BA  0874               	movf	USBEnableEndpoint@options,w
  8602  06BB  00F5               	movwf	??_USBEnableEndpoint
  8603  06BC  0877               	movf	USBEnableEndpoint@p,w
  8604  06BD  0086               	movwf	6
  8605  06BE  0878               	movf	USBEnableEndpoint@p+1,w
  8606  06BF  0087               	movwf	7
  8607  06C0  0875               	movf	??_USBEnableEndpoint,w
  8608  06C1  0081               	movwf	1
  8609  06C2  0008               	return
  8610  06C3                     __end_of_USBEnableEndpoint:	
  8611  06C3                     __ptext24:	
  8612 ;; *************** function _USBConfigureEndpoint *****************
  8613 ;; Defined at:
  8614 ;;		line 1563 in file "../framework/usb/usb_device.c"
  8615 ;; Parameters:    Size  Location     Type
  8616 ;;  EPNum           1    wreg     unsigned char 
  8617 ;;  direction       1    0[COMMON] unsigned char 
  8618 ;; Auto vars:     Size  Location     Type
  8619 ;;  EPNum           1    2[COMMON] unsigned char 
  8620 ;;  handle          1    3[COMMON] PTR volatile struct __BD
  8621 ;;		 -> BDT(32), 
  8622 ;; Return value:  Size  Location     Type
  8623 ;;		None               void
  8624 ;; Registers used:
  8625 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8626 ;; Tracked objects:
  8627 ;;		On entry : 1F/1
  8628 ;;		On exit  : 1F/1
  8629 ;;		Unchanged: FFFE0/0
  8630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8631 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8632 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8633 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8634 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8635 ;;Total ram usage:        4 bytes
  8636 ;; Hardware stack levels used:    1
  8637 ;; Hardware stack levels required when called:    1
  8638 ;; This function calls:
  8639 ;;		Nothing
  8640 ;; This function is called by:
  8641 ;;		_USBEnableEndpoint
  8642 ;; This function uses a non-reentrant model
  8643 ;;
  8644                           
  8645                           
  8646                           ;psect for function _USBConfigureEndpoint
  8647  06C3                     _USBConfigureEndpoint:	
  8648                           
  8649                           ;incstack = 0
  8650                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  8651                           ;USBConfigureEndpoint@EPNum stored from wreg
  8652  06C3  00F2               	movwf	USBConfigureEndpoint@EPNum
  8653                           
  8654                           ;usb_device.c: 1564: volatile BDT_ENTRY* handle;
  8655                           ;usb_device.c: 1568: handle = (volatile BDT_ENTRY*)&BDT[0];
  8656  06C4  3020               	movlw	32
  8657  06C5  00F3               	movwf	USBConfigureEndpoint@handle
  8658                           
  8659                           ;usb_device.c: 1569: handle += (4*EPNum+2*direction+0u);
  8660  06C6  0870               	movf	USBConfigureEndpoint@direction,w
  8661  06C7  00F1               	movwf	??_USBConfigureEndpoint
  8662  06C8  35F1               	lslf	??_USBConfigureEndpoint,f
  8663  06C9  0872               	movf	USBConfigureEndpoint@EPNum,w
  8664  06CA  0709               	addwf	9,w
  8665  06CB  0709               	addwf	9,w
  8666  06CC  0771               	addwf	??_USBConfigureEndpoint,w
  8667  06CD  0709               	addwf	9,w
  8668  06CE  0709               	addwf	9,w
  8669  06CF  07F3               	addwf	USBConfigureEndpoint@handle,f
  8670                           
  8671                           ;usb_device.c: 1571: handle->STAT.UOWN = 0;
  8672  06D0  0873               	movf	USBConfigureEndpoint@handle,w
  8673  06D1  0086               	movwf	6
  8674  06D2  0187               	clrf	7
  8675  06D3  1381               	bcf	1,7
  8676                           
  8677                           ;usb_device.c: 1576: if(direction == 0)
  8678  06D4  08F0               	movf	USBConfigureEndpoint@direction,f
  8679  06D5  1D03               	skipz
  8680  06D6  2EDB               	goto	l3487
  8681                           
  8682                           ;usb_device.c: 1577: {
  8683                           ;usb_device.c: 1578: pBDTEntryOut[EPNum] = handle;
  8684  06D7  0872               	movf	USBConfigureEndpoint@EPNum,w
  8685  06D8  27C5  3180         	fcall	PL254	;call to abstracted procedure
  8686  06DA  2EDF               	goto	L10
  8687  06DB                     l3487:	
  8688                           ;usb_device.c: 1579: }
  8689                           
  8690                           
  8691                           ;usb_device.c: 1580: else
  8692                           ;usb_device.c: 1581: {
  8693                           ;usb_device.c: 1582: pBDTEntryIn[EPNum] = handle;
  8694  06DB  0872               	movf	USBConfigureEndpoint@EPNum,w
  8695  06DC  3E50               	addlw	_pBDTEntryIn& (0+255)
  8696  06DD  0086               	movwf	6
  8697  06DE  0187               	clrf	7
  8698  06DF                     L10:	
  8699  06DF  0873               	movf	USBConfigureEndpoint@handle,w
  8700  06E0  0081               	movwf	1
  8701                           
  8702                           ;usb_device.c: 1583: }
  8703                           ;usb_device.c: 1586: handle->STAT.DTS = 0;
  8704  06E1  0873               	movf	USBConfigureEndpoint@handle,w
  8705  06E2  0086               	movwf	6
  8706  06E3  0187               	clrf	7
  8707  06E4  1301               	bcf	1,6
  8708                           
  8709                           ;usb_device.c: 1587: (handle+1)->STAT.DTS = 1;
  8710  06E5  0873               	movf	USBConfigureEndpoint@handle,w
  8711  06E6  3E04               	addlw	4
  8712  06E7  0086               	movwf	6
  8713  06E8  1701               	bsf	1,6
  8714  06E9  0008               	return
  8715  06EA                     __end_of_USBConfigureEndpoint:	
  8716  06EA                     __ptext6:	
  8717 ;; *************** function _USBCtrlTrfSetupHandler *****************
  8718 ;; Defined at:
  8719 ;;		line 2492 in file "../framework/usb/usb_device.c"
  8720 ;; Parameters:    Size  Location     Type
  8721 ;;		None
  8722 ;; Auto vars:     Size  Location     Type
  8723 ;;		None
  8724 ;; Return value:  Size  Location     Type
  8725 ;;		None               void
  8726 ;; Registers used:
  8727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8728 ;; Tracked objects:
  8729 ;;		On entry : 1F/0
  8730 ;;		On exit  : 1E/0
  8731 ;;		Unchanged: FFFE0/0
  8732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8737 ;;Total ram usage:        0 bytes
  8738 ;; Hardware stack levels used:    1
  8739 ;; Hardware stack levels required when called:    7
  8740 ;; This function calls:
  8741 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8742 ;;		_USBCtrlEPServiceComplete
  8743 ;;		_USBCheckStdRequest
  8744 ;; This function is called by:
  8745 ;;		_USBCtrlEPService
  8746 ;; This function uses a non-reentrant model
  8747 ;;
  8748                           
  8749                           
  8750                           ;psect for function _USBCtrlTrfSetupHandler
  8751  06EA                     _USBCtrlTrfSetupHandler:	
  8752  06EA                     l3755:	
  8753                           ;incstack = 0
  8754                           ; Regs used in _USBCtrlTrfSetupHandler: [allreg]
  8755                           
  8756                           
  8757                           ;usb_device.c: 2496: shortPacketStatus = 0;
  8758  06EA  0021               	movlb	1	; select bank1
  8759  06EB  01ED               	clrf	_shortPacketStatus^(0+128)
  8760                           
  8761                           ;usb_device.c: 2497: USBDeferStatusStagePacket = 0;
  8762  06EC  0020               	movlb	0	; select bank0
  8763  06ED  01D2               	clrf	_USBDeferStatusStagePacket	;volatile
  8764                           
  8765                           ;usb_device.c: 2498: USBDeferINDataStagePackets = 0;
  8766  06EE  0021               	movlb	1	; select bank1
  8767  06EF  01E2               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  8768                           
  8769                           ;usb_device.c: 2499: USBDeferOUTDataStagePackets = 0;
  8770  06F0  01E3               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  8771                           
  8772                           ;usb_device.c: 2500: BothEP0OutUOWNsSet = 0;
  8773  06F1  0022               	movlb	2	; select bank2
  8774  06F2  01D5               	clrf	_BothEP0OutUOWNsSet^(0+256)
  8775                           
  8776                           ;usb_device.c: 2501: controlTransferState = 0;
  8777  06F3  0020               	movlb	0	; select bank0
  8778  06F4  01D5               	clrf	_controlTransferState
  8779                           
  8780                           ;usb_device.c: 2510: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8781  06F5  0850               	movf	_pBDTEntryIn,w
  8782  06F6  0086               	movwf	6
  8783  06F7  3004               	movlw	4
  8784  06F8  0187               	clrf	7
  8785  06F9  1381               	bcf	1,7
  8786                           
  8787                           ;usb_device.c: 2511: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8788  06FA  06D0               	xorwf	_pBDTEntryIn,f
  8789                           
  8790                           ;usb_device.c: 2512: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8791  06FB  0850               	movf	_pBDTEntryIn,w
  8792  06FC  0086               	movwf	6
  8793  06FD  3004               	movlw	4
  8794  06FE  1381               	bcf	1,7
  8795                           
  8796                           ;usb_device.c: 2513: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8797  06FF  06D0               	xorwf	_pBDTEntryIn,f
  8798                           
  8799                           ;usb_device.c: 2514: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  8800  0700  0857               	movf	_pBDTEntryEP0OutNext,w
  8801  0701  0086               	movwf	6
  8802  0702  1381               	bcf	1,7
  8803                           
  8804                           ;usb_device.c: 2516: inPipes[0].info.Val = 0;
  8805  0703  01DB               	clrf	_inPipes+2
  8806                           
  8807                           ;usb_device.c: 2517: inPipes[0].wCount.Val = 0;
  8808  0704  01DC               	clrf	_inPipes+3
  8809  0705  01DD               	clrf	_inPipes+4
  8810                           
  8811                           ;usb_device.c: 2518: outPipes[0].info.Val = 0;
  8812  0706  0022               	movlb	2	; select bank2
  8813  0707  01C9               	clrf	(_outPipes^(0+256)+2)
  8814                           
  8815                           ;usb_device.c: 2519: outPipes[0].wCount.Val = 0;
  8816  0708  01CA               	clrf	(_outPipes^(0+256)+3)
  8817  0709  01CB               	clrf	((_outPipes+1)^(0+256)+3)
  8818                           
  8819                           ;usb_device.c: 2525: USBCheckStdRequest();
  8820  070A  2712  3180         	fcall	_USBCheckStdRequest
  8821                           
  8822                           ;usb_device.c: 2526: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  8823  070C  3003               	movlw	3
  8824  070D  2790  3180         	fcall	PL232	;call to abstracted procedure
  8825  070F  2519               	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  8826                           
  8827                           ;usb_device.c: 2539: USBCtrlEPServiceComplete();
  8828  0710  318E  2E9F         	ljmp	l3551
  8829  0712                     __end_of_USBCtrlTrfSetupHandler:	
  8830  0712                     __ptext7:	
  8831 ;; *************** function _USBCheckStdRequest *****************
  8832 ;; Defined at:
  8833 ;;		line 2712 in file "../framework/usb/usb_device.c"
  8834 ;; Parameters:    Size  Location     Type
  8835 ;;		None
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;		None
  8838 ;; Return value:  Size  Location     Type
  8839 ;;		None               void
  8840 ;; Registers used:
  8841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8842 ;; Tracked objects:
  8843 ;;		On entry : 1F/2
  8844 ;;		On exit  : 0/0
  8845 ;;		Unchanged: FFFE0/0
  8846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8851 ;;Total ram usage:        0 bytes
  8852 ;; Hardware stack levels used:    1
  8853 ;; Hardware stack levels required when called:    6
  8854 ;; This function calls:
  8855 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8856 ;;		_USBStdSetCfgHandler
  8857 ;;		_USBStdGetDscHandler
  8858 ;;		_USBStdGetStatusHandler
  8859 ;;		_USBStdFeatureReqHandler
  8860 ;; This function is called by:
  8861 ;;		_USBCtrlTrfSetupHandler
  8862 ;; This function uses a non-reentrant model
  8863 ;;
  8864                           
  8865                           
  8866                           ;psect for function _USBCheckStdRequest
  8867  0712                     _USBCheckStdRequest:	
  8868                           
  8869                           ;usb_device.c: 2713: if(SetupPkt.RequestType != (0x00>>5)) return;
  8870                           
  8871                           ;incstack = 0
  8872                           ; Regs used in _USBCheckStdRequest: [allreg]
  8873  0712  0020               	movlb	0	; select bank0
  8874  0713  0E40               	swapf	64,w	;volatile
  8875  0714  0C89               	rrf	9,f
  8876  0715  3903               	andlw	3
  8877  0716  1D03               	btfss	3,2
  8878  0717  0008               	return
  8879                           
  8880                           ;usb_device.c: 2753: break;
  8881  0718  0841               	movf	65,w	;volatile
  8882                           
  8883                           ; Switch size 1, requested type "space"
  8884                           ; Number of cases is 11, Range of values is 0 to 12
  8885                           ; switch strategies available:
  8886                           ; Name         Instructions Cycles
  8887                           ; direct_byte           32     6 (fixed)
  8888                           ; simple_byte           34    18 (average)
  8889                           ; jumptable            260     6 (fixed)
  8890                           ; rangetable            17     4 (fixed)
  8891                           ; spacedrange           31     6 (fixed)
  8892                           ; locatedrange          13     3 (fixed)
  8893                           ;	Chosen strategy is direct_byte
  8894  0719  0084               	movwf	4
  8895  071A  300D               	movlw	13
  8896  071B  0204               	subwf	4,w
  8897  071C  1803               	skipnc
  8898  071D  0008               	return
  8899  071E  3187               	movlp	high S4101
  8900  071F  3504               	lslf	4,w
  8901  0720  3EDB               	addlw	low S4101
  8902  0721  0082               	movwf	2
  8903  0722                     l888:	
  8904  0722  0008               	return
  8905  0723                     l890:	
  8906                           ;usb_device.c: 2716: {
  8907                           ;usb_device.c: 2717: case 5:
  8908                           
  8909  0723  3008               	movlw	8
  8910                           
  8911                           ;usb_device.c: 2718: inPipes[0].info.bits.busy = 1;
  8912  0724  17DB               	bsf	_inPipes+2,7
  8913                           
  8914                           ;usb_device.c: 2719: USBDeviceState = ADR_PENDING_STATE;
  8915  0725  00D3               	movwf	_USBDeviceState
  8916                           
  8917                           ;usb_device.c: 2721: break;
  8918  0726  0008               	return
  8919  0727                     l3835:	
  8920                           
  8921                           ;usb_device.c: 2723: USBStdGetDscHandler();
  8922  0727  318D  2D8E         	ljmp	l3695
  8923  0729                     l3837:	
  8924                           ;usb_device.c: 2724: break;
  8925                           
  8926                           
  8927                           ;usb_device.c: 2726: USBStdSetCfgHandler();
  8928  0729  318D  2DED         	ljmp	l3635
  8929  072B                     l3839:	
  8930                           ;usb_device.c: 2727: break;
  8931                           
  8932                           
  8933                           ;usb_device.c: 2729: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  8934  072B  305E               	movlw	low _USBActiveConfiguration
  8935  072C  00D9               	movwf	_inPipes
  8936  072D  3000               	movlw	high _USBActiveConfiguration
  8937  072E  00DA               	movwf	_inPipes+1
  8938  072F                     l3841:	
  8939                           
  8940                           ;usb_device.c: 2730: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8941  072F  145B               	bsf	_inPipes+2,0
  8942                           
  8943                           ;usb_device.c: 2731: inPipes[0].wCount.v[0] = 1;
  8944  0730  01DC               	clrf	_inPipes+3
  8945  0731  0ADC               	incf	_inPipes+3,f
  8946                           
  8947                           ;usb_device.c: 2732: inPipes[0].info.bits.busy = 1;
  8948  0732  17DB               	bsf	_inPipes+2,7
  8949                           
  8950                           ;usb_device.c: 2733: break;
  8951  0733  0008               	return
  8952  0734                     l3847:	
  8953                           
  8954                           ;usb_device.c: 2735: USBStdGetStatusHandler();
  8955  0734  2F4B               	ljmp	l3725
  8956  0735                     l3849:	
  8957                           ;usb_device.c: 2736: break;
  8958                           
  8959                           
  8960                           ;usb_device.c: 2738: case 3:
  8961                           ;usb_device.c: 2739: USBStdFeatureReqHandler();
  8962  0735  2BBD               	ljmp	l3873
  8963  0736                     l3851:	
  8964                           ;usb_device.c: 2740: break;
  8965                           
  8966                           
  8967                           ;usb_device.c: 2742: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  8968  0736  0844               	movf	68,w	;volatile
  8969  0737  3EEF               	addlw	_USBAlternateInterface& (0+255)
  8970  0738  00D9               	movwf	_inPipes
  8971  0739  3000               	movlw	0
  8972  073A  01DA               	clrf	_inPipes+1
  8973  073B  2F2F               	goto	l3841
  8974  073C                     l899:	
  8975                           ;usb_device.c: 2747: case 11:
  8976                           
  8977                           
  8978                           ;usb_device.c: 2748: inPipes[0].info.bits.busy = 1;
  8979  073C  17DB               	bsf	_inPipes+2,7
  8980                           
  8981                           ;usb_device.c: 2749: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  8982  073D  0844               	movf	68,w	;volatile
  8983  073E  3EEF               	addlw	_USBAlternateInterface& (0+255)
  8984  073F  0086               	movwf	6
  8985  0740  0187               	clrf	7
  8986  0741  0842               	movf	66,w	;volatile
  8987  0742  0081               	movwf	1
  8988                           
  8989                           ;usb_device.c: 2750: break;
  8990  0743  0008               	return
  8991  0744                     l3861:	
  8992                           
  8993                           ;usb_device.c: 2752: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  8994  0744  3002               	movlw	2
  8995  0745  00E0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  8996  0746  01E1               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  8997  0747  01E2               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  8998  0748  01E3               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  8999  0749  01E4               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  9000  074A  2D19               	ljmp	l3085
  9001  074B                     __end_of_USBCheckStdRequest:	
  9002  074B                     __ptext9:	
  9003 ;; *************** function _USBStdGetStatusHandler *****************
  9004 ;; Defined at:
  9005 ;;		line 2149 in file "../framework/usb/usb_device.c"
  9006 ;; Parameters:    Size  Location     Type
  9007 ;;		None
  9008 ;; Auto vars:     Size  Location     Type
  9009 ;;  p               1    0[COMMON] PTR struct __BDT
  9010 ;;		 -> BDT(32), NULL(0), 
  9011 ;; Return value:  Size  Location     Type
  9012 ;;		None               void
  9013 ;; Registers used:
  9014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  9015 ;; Tracked objects:
  9016 ;;		On entry : 1D/0
  9017 ;;		On exit  : 1F/0
  9018 ;;		Unchanged: FFFE0/0
  9019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9023 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9024 ;;Total ram usage:        1 bytes
  9025 ;; Hardware stack levels used:    1
  9026 ;; Hardware stack levels required when called:    1
  9027 ;; This function calls:
  9028 ;;		Nothing
  9029 ;; This function is called by:
  9030 ;;		_USBCheckStdRequest
  9031 ;; This function uses a non-reentrant model
  9032 ;;
  9033                           
  9034                           
  9035                           ;psect for function _USBStdGetStatusHandler
  9036  074B                     _USBStdGetStatusHandler:	
  9037  074B                     l3725:	
  9038                           ;incstack = 0
  9039                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  9040                           
  9041                           
  9042                           ;usb_device.c: 2150: CtrlTrfData[0] = 0;
  9043  074B  0020               	movlb	0	; select bank0
  9044  074C  01C8               	clrf	72	;volatile
  9045                           
  9046                           ;usb_device.c: 2151: CtrlTrfData[1] = 0;
  9047  074D  01C9               	clrf	73	;volatile
  9048                           
  9049                           ;usb_device.c: 2153: switch(SetupPkt.Recipient)
  9050  074E  2F6E               	goto	l3747
  9051  074F                     l826:	
  9052                           ;usb_device.c: 2154: {
  9053                           ;usb_device.c: 2155: case (0x00):
  9054                           
  9055                           
  9056                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  9057  074F  17DB               	bsf	_inPipes+2,7
  9058                           
  9059                           ;usb_device.c: 2164: }
  9060                           ;usb_device.c: 2166: if(RemoteWakeup == 1)
  9061                           
  9062                           ;usb_device.c: 2161: if(0 == 1)
  9063  0750  0022               	movlb	2	; select bank2
  9064  0751  0B56               	decfsz	_RemoteWakeup^(0+256),w
  9065  0752  2F79               	goto	l829
  9066                           
  9067                           ;usb_device.c: 2167: {
  9068                           ;usb_device.c: 2168: CtrlTrfData[0]|=0x02;
  9069  0753  0020               	movlb	0	; select bank0
  9070  0754  14C8               	bsf	72,1	;volatile
  9071  0755  2F79               	goto	l829
  9072  0756                     l830:	
  9073                           ;usb_device.c: 2171: case (0x01):
  9074                           
  9075                           
  9076                           ;usb_device.c: 2172: inPipes[0].info.bits.busy = 1;
  9077  0756  17DB               	bsf	_inPipes+2,7
  9078                           
  9079                           ;usb_device.c: 2173: break;
  9080  0757  2F79               	goto	l829
  9081  0758                     l831:	
  9082                           ;usb_device.c: 2174: case (0x02):
  9083                           
  9084                           
  9085                           ;usb_device.c: 2175: inPipes[0].info.bits.busy = 1;
  9086  0758  17DB               	bsf	_inPipes+2,7
  9087                           
  9088                           ;usb_device.c: 2179: {
  9089                           ;usb_device.c: 2180: BDT_ENTRY *p;
  9090                           ;usb_device.c: 2182: if(SetupPkt.EPDir == 0)
  9091  0759  1BC4               	btfsc	68,7	;volatile
  9092  075A  2F5F               	goto	l3737
  9093                           
  9094                           ;usb_device.c: 2183: {
  9095                           ;usb_device.c: 2184: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  9096  075B  0844               	movf	68,w	;volatile
  9097  075C  27A7  3180         	fcall	PL240	;call to abstracted procedure
  9098  075E  2F61               	goto	L9
  9099  075F                     l3737:	
  9100                           ;usb_device.c: 2185: }
  9101                           
  9102                           
  9103                           ;usb_device.c: 2186: else
  9104                           ;usb_device.c: 2187: {
  9105                           ;usb_device.c: 2188: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  9106  075F  27B8  3180         	fcall	PL246	;call to abstracted procedure
  9107  0761                     L9:	
  9108  0761  0801               	movf	1,w
  9109  0762  00F0               	movwf	USBStdGetStatusHandler@p
  9110                           
  9111                           ;usb_device.c: 2189: }
  9112                           ;usb_device.c: 2191: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  9113  0763  0086               	movwf	6
  9114  0764  0187               	clrf	7
  9115  0765  1F81               	btfss	1,7
  9116  0766  2F79               	goto	l829
  9117  0767  0870               	movf	USBStdGetStatusHandler@p,w
  9118  0768  0086               	movwf	6
  9119  0769  1D01               	btfss	1,2
  9120  076A  2F79               	goto	l829
  9121                           
  9122                           ;usb_device.c: 2192: CtrlTrfData[0]=0x01;
  9123  076B  3001               	movlw	1
  9124  076C  00C8               	movwf	72	;volatile
  9125  076D  2F79               	goto	l829
  9126  076E                     l3747:	
  9127  076E  0840               	movf	64,w	;volatile
  9128  076F  391F               	andlw	31
  9129                           
  9130                           ; Switch size 1, requested type "space"
  9131                           ; Number of cases is 3, Range of values is 0 to 2
  9132                           ; switch strategies available:
  9133                           ; Name         Instructions Cycles
  9134                           ; simple_byte           10     6 (average)
  9135                           ; direct_byte           12     6 (fixed)
  9136                           ; jumptable            260     6 (fixed)
  9137                           ; rangetable             7     4 (fixed)
  9138                           ; spacedrange           11     6 (fixed)
  9139                           ; locatedrange           3     3 (fixed)
  9140                           ;	Chosen strategy is simple_byte
  9141  0770  1903               	skipnz
  9142  0771  2F4F               	goto	l826
  9143  0772  3A01               	xorlw	1	; case 1
  9144  0773  1903               	skipnz
  9145  0774  2F56               	goto	l830
  9146  0775  3A03               	xorlw	3	; case 2
  9147  0776  1903               	skipnz
  9148  0777  2F58               	goto	l831
  9149  0778  2F79               	goto	l829
  9150  0779                     l829:	
  9151                           
  9152                           ;usb_device.c: 2197: if(inPipes[0].info.bits.busy == 1)
  9153  0779  0020               	movlb	0	; select bank0
  9154  077A  1FDB               	btfss	_inPipes+2,7
  9155  077B  0008               	return
  9156                           
  9157                           ;usb_device.c: 2198: {
  9158                           ;usb_device.c: 2199: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  9159  077C  3048               	movlw	72
  9160  077D  00D9               	movwf	_inPipes
  9161  077E  3002               	movlw	2
  9162  077F  01DA               	clrf	_inPipes+1
  9163                           
  9164                           ;usb_device.c: 2200: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9165  0780  145B               	bsf	_inPipes+2,0
  9166                           
  9167                           ;usb_device.c: 2201: inPipes[0].wCount.v[0] = 2;
  9168  0781  00DC               	movwf	_inPipes+3
  9169  0782  0008               	return
  9170  0783                     __end_of_USBStdGetStatusHandler:	
  9171  0783                     PL224:	
  9172  0783  300F               	movlw	-241
  9173  0784  01A0               	clrf	32
  9174  0785  01A1               	clrf	33
  9175  0786  01A2               	clrf	34
  9176  0787  01A3               	clrf	35
  9177  0788  05A0               	andwf	32,f
  9178  0789  0820               	movf	32,w
  9179  078A  39F0               	andlw	-16
  9180  078B  3809               	iorlw	9
  9181  078C  00A0               	movwf	32
  9182  078D  3090               	movlw	144
  9183  078E  00A1               	movwf	33
  9184  078F  0008               	return
  9185  0790                     __end_ofPL224:	
  9186  0790                     PL232:	
  9187  0790  0020               	movlb	0	; select bank0
  9188  0791  00E0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  9189  0792  01E1               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  9190  0793  01E2               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  9191  0794  01E3               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  9192  0795  01E4               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  9193  0796  0008               	return
  9194  0797                     __end_ofPL232:	
  9195  0797                     PL236:	
  9196  0797  01F0               	clrf	?_USBTransferOnePacket
  9197  0798  0AF0               	incf	?_USBTransferOnePacket,f
  9198  0799  00F1               	movwf	?_USBTransferOnePacket+1
  9199  079A  3001               	movlw	1
  9200  079B  00F2               	movwf	?_USBTransferOnePacket+2
  9201  079C  3004               	movlw	4
  9202  079D  00F3               	movwf	?_USBTransferOnePacket+3
  9203  079E  3401               	retlw	1
  9204  079F                     __end_ofPL236:	
  9205  079F                     PL238:	
  9206  079F  00E0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  9207  07A0  01E1               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  9208  07A1  0868               	movf	USBStdFeatureReqHandler@p,w
  9209  07A2  00E2               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  9210  07A3  01E3               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  9211  07A4  0AE3               	incf	?_USER_USB_CALLBACK_EVENT_HANDLER+3,f
  9212  07A5  01E4               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  9213  07A6  0008               	return
  9214  07A7                     __end_ofPL238:	
  9215  07A7                     PL240:	
  9216  07A7  390F               	andlw	15
  9217  07A8  3E53               	addlw	_pBDTEntryOut& (0+255)
  9218  07A9  0086               	movwf	6
  9219  07AA  3001               	movlw	1	; select bank2/3
  9220  07AB  0087               	movwf	7
  9221  07AC  0008               	return
  9222  07AD                     __end_ofPL240:	
  9223  07AD                     PL242:	
  9224  07AD  00F1               	movwf	?_USBTransferOnePacket+1
  9225  07AE  3040               	movlw	64
  9226  07AF  01F2               	clrf	?_USBTransferOnePacket+2
  9227  07B0  00F3               	movwf	?_USBTransferOnePacket+3
  9228  07B1  3401               	retlw	1
  9229  07B2                     __end_ofPL242:	
  9230  07B2                     PL244:	
  9231  07B2  0086               	movwf	6
  9232  07B3  0187               	clrf	7
  9233  07B4  0D01               	rlf	1,w
  9234  07B5  0D01               	rlf	1,w
  9235  07B6  3901               	andlw	1
  9236  07B7  0008               	return
  9237  07B8                     __end_ofPL244:	
  9238  07B8                     PL246:	
  9239  07B8  0844               	movf	68,w	;volatile
  9240  07B9  390F               	andlw	15
  9241  07BA  3E50               	addlw	_pBDTEntryIn& (0+255)
  9242  07BB  0086               	movwf	6
  9243  07BC  0187               	clrf	7
  9244  07BD  0008               	return
  9245  07BE                     __end_ofPL246:	
  9246  07BE                     PL250:	
  9247  07BE  3E02               	addlw	2
  9248  07BF  0086               	movwf	6
  9249  07C0  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9250  07C1  3FC0               	movwi [0]fsr1
  9251  07C2  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9252  07C3  3FC1               	movwi [1]fsr1
  9253  07C4  0008               	return
  9254  07C5                     __end_ofPL250:	
  9255  07C5                     PL254:	
  9256  07C5  3E53               	addlw	_pBDTEntryOut& (0+255)
  9257  07C6  0086               	movwf	6
  9258  07C7  3001               	movlw	1	; select bank2/3
  9259  07C8  0087               	movwf	7
  9260  07C9  0008               	return
  9261  07CA                     __end_ofPL254:	
  9262  07CA                     PL258:	
  9263  07CA  0091               	movwf	17	;volatile
  9264  07CB  309F               	movlw	159
  9265  07CC  0097               	movwf	23	;volatile
  9266  07CD  307B               	movlw	123
  9267  07CE  0092               	movwf	18	;volatile
  9268  07CF  0008               	return
  9269  07D0                     __end_ofPL258:	
  9270  07D0                     PL260:	
  9271  07D0  0868               	movf	USBStdFeatureReqHandler@p,w
  9272  07D1  0086               	movwf	6
  9273  07D2  303B               	movlw	59
  9274  07D3  0187               	clrf	7
  9275  07D4  0581               	andwf	1,f
  9276  07D5  0008               	return
  9277  07D6                     __end_ofPL260:	
  9278  07D6                     PL262:	
  9279  07D6  01E2               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  9280  07D7  01E3               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  9281  07D8  0AE3               	incf	?_USER_USB_CALLBACK_EVENT_HANDLER+3,f
  9282  07D9  01E4               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  9283  07DA  0008               	return
  9284  07DB                     __end_ofPL262:	
  9285                           
  9286                           	psect	swtext2
  9287  0800                     __pswtext2:	
  9288  0800                     S4107:	
  9289  0800  3181  2995         	ljmp	l3185
  9290  0802  3181  29BD         	ljmp	l3191
  9291  0804  3181  29E5         	ljmp	l3195
  9292  0806  3182  2A10         	ljmp	l3199
  9293  0808  3182  2A3E         	ljmp	l3203
  9294  080A  3182  2A4C         	ljmp	l3209
  9295                           
  9296                           	psect	text30
  9297  0000                     __ptext30:	
  9298 ;; *************** function _store_key_level *****************
  9299 ;; Defined at:
  9300 ;;		line 194 in file "../src/scan.c"
  9301 ;; Parameters:    Size  Location     Type
  9302 ;;  level           1    wreg     unsigned char 
  9303 ;;  end_of_scan     1   13[COMMON] unsigned char 
  9304 ;; Auto vars:     Size  Location     Type
  9305 ;;  level           1    0[BANK0 ] unsigned char 
  9306 ;; Return value:  Size  Location     Type
  9307 ;;                  1    wreg      unsigned char 
  9308 ;; Registers used:
  9309 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9310 ;; Tracked objects:
  9311 ;;		On entry : 1F/1
  9312 ;;		On exit  : 1F/0
  9313 ;;		Unchanged: FFFE0/0
  9314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9315 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9316 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9318 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9319 ;;Total ram usage:        2 bytes
  9320 ;; Hardware stack levels used:    1
  9321 ;; Hardware stack levels required when called:    3
  9322 ;; This function calls:
  9323 ;;		_process_level
  9324 ;; This function is called by:
  9325 ;;		_scan_task
  9326 ;; This function uses a non-reentrant model
  9327 ;;
  9328                           
  9329  0000                     _store_key_level:	
  9330                           ;psect for function _store_key_level
  9331                           
  9332  0000                     __end_of_store_key_level:	
  9333                           ;scan.c: 200: return idx_key == 0;
  9334                           
  9335                           ;scan.c: 199: if (idx_key >= N_KEYS || end_of_scan) idx_key = 0;
  9336                           
  9337                           ;scan.c: 198: idx_key ++;
  9338                           
  9339                           ;scan.c: 197: adc_levels[idx_key] = level;
  9340                           
  9341                           ;scan.c: 188: }
  9342                           ;scan.c: 189: key_states[idx_key] = filtered_state;
  9343                           
  9344                           ;scan.c: 187: else LED_Off(LED_D1);
  9345                           
  9346                           ;scan.c: 186: if (filtered_state) LED_On(LED_D1);
  9347                           
  9348                           ;scan.c: 185: note_event.velocity = (filtered_state? (new_level * 2 + 5): 0);
  9349                           
  9350                           ;scan.c: 184: note_event.pitch = midi_shift + idx_midi_map[idx_key];
  9351                           
  9352                           ;scan.c: 183: if (!key_states[idx_key] != !filtered_state) {
  9353                           
  9354                           ;scan.c: 181: filtered_state = on_flag || !on_flag && !off_flag && key_states[idx_key];
  9355                           
  9356                           ;scan.c: 180: off_flag = key_off_counter[idx_key] >= key_off_threshold,
  9357                           
  9358                           ;scan.c: 175: }
  9359                           ;scan.c: 177: {
  9360                           ;scan.c: 178: bool
  9361                           ;scan.c: 179: on_flag = key_on_counter [idx_key] >= key_on_threshold,
  9362                           
  9363                           ;scan.c: 174: key_off_counter [idx_key] ++;
  9364                           
  9365                           ;scan.c: 172: else {
  9366                           ;scan.c: 173: key_on_counter[idx_key] = 0;
  9367                           
  9368                           ;scan.c: 170: key_on_counter [idx_key] ++;
  9369                           
  9370                           ;scan.c: 169: key_off_counter[idx_key] = 0;
  9371                           
  9372                           ;scan.c: 168: if (current_state) {
  9373                           
  9374                           ;scan.c: 166: note_event.velocity = 0;
  9375                           
  9376                           ;scan.c: 165: note_event.pitch = 0;
  9377                           
  9378                           ;scan.c: 163: int current_state = (new_level > L);
  9379                           
  9380                           ;incstack = 0
  9381                           ; Regs used in _process_level: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9382                           ;process_level@idx_key stored from wreg
  9383                           
  9384                           ;psect for function _process_level
  9385                           
  9386                           ;scan.c: 195: static uint8_t idx_key = 0;
  9387                           ;scan.c: 196: process_level(idx_key, adc_levels[idx_key], level);
  9388                           
  9389                           ;incstack = 0
  9390                           ; Regs used in _store_key_level: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9391                           ;store_key_level@level stored from wreg
  9392                           
  9393                           
  9394                           	psect	text31
  9395  0000                     __ptext31:	
  9396 ;; *************** function _process_level *****************
  9397 ;; Defined at:
  9398 ;;		line 145 in file "../src/scan.c"
  9399 ;; Parameters:    Size  Location     Type
  9400 ;;  idx_key         1    wreg     unsigned char 
  9401 ;;  old_level       1    1[COMMON] const unsigned char 
  9402 ;;  new_level       1    2[COMMON] const unsigned char 
  9403 ;; Auto vars:     Size  Location     Type
  9404 ;;  idx_key         1   12[COMMON] unsigned char 
  9405 ;;  filtered_sta    1   11[COMMON] unsigned char 
  9406 ;;  on_flag         1   10[COMMON] unsigned char 
  9407 ;;  off_flag        1    6[COMMON] unsigned char 
  9408 ;;  current_stat    2    4[COMMON] int 
  9409 ;;  old_state       2    0        int 
  9410 ;; Return value:  Size  Location     Type
  9411 ;;		None               void
  9412 ;; Registers used:
  9413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9414 ;; Tracked objects:
  9415 ;;		On entry : 1F/0
  9416 ;;		On exit  : 0/0
  9417 ;;		Unchanged: FFFE0/0
  9418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9419 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9420 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9421 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9422 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9423 ;;Total ram usage:       12 bytes
  9424 ;; Hardware stack levels used:    1
  9425 ;; Hardware stack levels required when called:    2
  9426 ;; This function calls:
  9427 ;;		_LED_Off
  9428 ;;		_LED_On
  9429 ;; This function is called by:
  9430 ;;		_store_key_level
  9431 ;; This function uses a non-reentrant model
  9432 ;;
  9433                           
  9434  0000                     _process_level:	
  9435                           ;psect for function _process_level
  9436                           
  9437  0000                     __end_of_process_level:	
  9438                           ;scan.c: 188: }
  9439                           ;scan.c: 189: key_states[idx_key] = filtered_state;
  9440                           
  9441                           ;scan.c: 187: else LED_Off(LED_D1);
  9442                           
  9443                           ;scan.c: 186: if (filtered_state) LED_On(LED_D1);
  9444                           
  9445                           ;scan.c: 185: note_event.velocity = (filtered_state? (new_level * 2 + 5): 0);
  9446                           
  9447                           ;scan.c: 184: note_event.pitch = midi_shift + idx_midi_map[idx_key];
  9448                           
  9449                           ;scan.c: 183: if (!key_states[idx_key] != !filtered_state) {
  9450                           
  9451                           ;scan.c: 181: filtered_state = on_flag || !on_flag && !off_flag && key_states[idx_key];
  9452                           
  9453                           ;scan.c: 180: off_flag = key_off_counter[idx_key] >= key_off_threshold,
  9454                           
  9455                           ;scan.c: 175: }
  9456                           ;scan.c: 177: {
  9457                           ;scan.c: 178: bool
  9458                           ;scan.c: 179: on_flag = key_on_counter [idx_key] >= key_on_threshold,
  9459                           
  9460                           ;scan.c: 174: key_off_counter [idx_key] ++;
  9461                           
  9462                           ;scan.c: 172: else {
  9463                           ;scan.c: 173: key_on_counter[idx_key] = 0;
  9464                           
  9465                           ;scan.c: 171: }
  9466                           
  9467                           ;scan.c: 170: key_on_counter [idx_key] ++;
  9468                           
  9469                           ;scan.c: 169: key_off_counter[idx_key] = 0;
  9470                           
  9471                           ;scan.c: 168: if (current_state) {
  9472                           
  9473                           ;scan.c: 166: note_event.velocity = 0;
  9474                           
  9475                           ;scan.c: 165: note_event.pitch = 0;
  9476                           
  9477                           ;scan.c: 163: int current_state = (new_level > L);
  9478                           
  9479                           ;incstack = 0
  9480                           ; Regs used in _process_level: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9481                           ;process_level@idx_key stored from wreg
  9482                           
  9483                           
  9484                           	psect	swtext3
  9485  07F5                     __pswtext3:	
  9486  07F5                     S4109:	
  9487  07F5  3183  2BA0         	ljmp	l481
  9488  07F7  3183  2B8D         	ljmp	l475
  9489  07F9  3183  2B90         	ljmp	l477
  9490  07FB  3183  2B8D         	ljmp	l475
  9491  07FD  3183  2B93         	ljmp	l479
  9492                           
  9493                           	psect	swtext4
  9494  080C                     __pswtext4:	
  9495  080C                     S4111:	
  9496  080C  3183  2B8A         	ljmp	l491
  9497  080E  3183  2B77         	ljmp	l485
  9498  0810  3183  2B7A         	ljmp	l487
  9499  0812  3183  2B77         	ljmp	l485
  9500  0814  3183  2B7D         	ljmp	l489
  9501                           
  9502                           	psect	text34
  9503  0000                     __ptext34:	
  9504 ;; *************** function _get_adc *****************
  9505 ;; Defined at:
  9506 ;;		line 94 in file "../src/scan.c"
  9507 ;; Parameters:    Size  Location     Type
  9508 ;;		None
  9509 ;; Auto vars:     Size  Location     Type
  9510 ;;		None
  9511 ;; Return value:  Size  Location     Type
  9512 ;;                  1    wreg      unsigned char 
  9513 ;; Registers used:
  9514 ;;		wreg
  9515 ;; Tracked objects:
  9516 ;;		On entry : 1F/1
  9517 ;;		On exit  : 1F/1
  9518 ;;		Unchanged: FFFE0/0
  9519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9524 ;;Total ram usage:        0 bytes
  9525 ;; Hardware stack levels used:    1
  9526 ;; Hardware stack levels required when called:    1
  9527 ;; This function calls:
  9528 ;;		Nothing
  9529 ;; This function is called by:
  9530 ;;		_scan_task
  9531 ;; This function uses a non-reentrant model
  9532 ;;
  9533                           
  9534  0000                     _get_adc:	
  9535                           ;psect for function _get_adc
  9536                           
  9537  0000                     __end_of_get_adc:	
  9538                           ;scan.c: 95: return ADRESH;
  9539                           
  9540                           ;incstack = 0
  9541                           ; Regs used in _get_adc: [wreg]
  9542                           
  9543                           
  9544                           	psect	text35
  9545  0000                     __ptext35:	
  9546 ;; *************** function _is_adc_ready *****************
  9547 ;; Defined at:
  9548 ;;		line 90 in file "../src/scan.c"
  9549 ;; Parameters:    Size  Location     Type
  9550 ;;		None
  9551 ;; Auto vars:     Size  Location     Type
  9552 ;;		None
  9553 ;; Return value:  Size  Location     Type
  9554 ;;                  1    wreg      unsigned char 
  9555 ;; Registers used:
  9556 ;;		wreg
  9557 ;; Tracked objects:
  9558 ;;		On entry : 1D/2
  9559 ;;		On exit  : 1F/1
  9560 ;;		Unchanged: FFFE0/0
  9561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9566 ;;Total ram usage:        0 bytes
  9567 ;; Hardware stack levels used:    1
  9568 ;; Hardware stack levels required when called:    1
  9569 ;; This function calls:
  9570 ;;		Nothing
  9571 ;; This function is called by:
  9572 ;;		_scan_task
  9573 ;; This function uses a non-reentrant model
  9574 ;;
  9575                           
  9576  0000                     _is_adc_ready:	
  9577                           ;psect for function _is_adc_ready
  9578                           
  9579  0000                     __end_of_is_adc_ready:	
  9580                           ;scan.c: 91: return !ADCON0bits.GO_nDONE;
  9581                           
  9582                           ;incstack = 0
  9583                           ; Regs used in _is_adc_ready: [wreg]
  9584                           
  9585                           
  9586                           	psect	text36
  9587  0000                     __ptext36:	
  9588 ;; *************** function _run_adc *****************
  9589 ;; Defined at:
  9590 ;;		line 85 in file "../src/scan.c"
  9591 ;; Parameters:    Size  Location     Type
  9592 ;;		None
  9593 ;; Auto vars:     Size  Location     Type
  9594 ;;		None
  9595 ;; Return value:  Size  Location     Type
  9596 ;;		None               void
  9597 ;; Registers used:
  9598 ;;		wreg, status,2, status,0
  9599 ;; Tracked objects:
  9600 ;;		On entry : 1F/2
  9601 ;;		On exit  : 1F/1
  9602 ;;		Unchanged: FFFE0/0
  9603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9608 ;;Total ram usage:        0 bytes
  9609 ;; Hardware stack levels used:    1
  9610 ;; Hardware stack levels required when called:    1
  9611 ;; This function calls:
  9612 ;;		Nothing
  9613 ;; This function is called by:
  9614 ;;		_scan_task
  9615 ;; This function uses a non-reentrant model
  9616 ;;
  9617                           
  9618  0000                     _run_adc:	
  9619                           ;psect for function _run_adc
  9620                           
  9621  0000                     __end_of_run_adc:	
  9622                           ;scan.c: 87: ADCON0bits.GO = 1;
  9623                           
  9624                           ;scan.c: 86: ADCON0bits.CHS = 7;
  9625                           
  9626                           ;incstack = 0
  9627                           ; Regs used in _run_adc: [wreg+status,2+status,0]
  9628                           
  9629                           
  9630                           	psect	text37
  9631  0000                     __ptext37:	
  9632 ;; *************** function _is_end_of_scan *****************
  9633 ;; Defined at:
  9634 ;;		line 77 in file "../src/scan.c"
  9635 ;; Parameters:    Size  Location     Type
  9636 ;;		None
  9637 ;; Auto vars:     Size  Location     Type
  9638 ;;  res             1    0[COMMON] unsigned char 
  9639 ;; Return value:  Size  Location     Type
  9640 ;;                  1    wreg      unsigned char 
  9641 ;; Registers used:
  9642 ;;		wreg, status,2, status,0
  9643 ;; Tracked objects:
  9644 ;;		On entry : 1D/2
  9645 ;;		On exit  : 1F/1
  9646 ;;		Unchanged: FFFE0/0
  9647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9649 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9651 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9652 ;;Total ram usage:        1 bytes
  9653 ;; Hardware stack levels used:    1
  9654 ;; Hardware stack levels required when called:    1
  9655 ;; This function calls:
  9656 ;;		Nothing
  9657 ;; This function is called by:
  9658 ;;		_scan_task
  9659 ;; This function uses a non-reentrant model
  9660 ;;
  9661                           
  9662  0000                     _is_end_of_scan:	
  9663                           ;psect for function _is_end_of_scan
  9664                           
  9665  0000                     __end_of_is_end_of_scan:	
  9666                           ;scan.c: 82: return res;
  9667                           
  9668                           ;scan.c: 81: if (scan_counter >= N_KEYS) scan_counter = 0;
  9669                           
  9670                           ;scan.c: 79: static uint8_t scan_counter = 0;
  9671                           ;scan.c: 80: bool res = (++scan_counter) >= N_KEYS;
  9672                           
  9673                           ;incstack = 0
  9674                           ; Regs used in _is_end_of_scan: [wreg+status,2+status,0]
  9675                           
  9676                           
  9677                           	psect	text38
  9678  0000                     __ptext38:	
  9679 ;; *************** function _get_data *****************
  9680 ;; Defined at:
  9681 ;;		line 73 in file "../src/scan.c"
  9682 ;; Parameters:    Size  Location     Type
  9683 ;;		None
  9684 ;; Auto vars:     Size  Location     Type
  9685 ;;		None
  9686 ;; Return value:  Size  Location     Type
  9687 ;;                  1    wreg      unsigned char 
  9688 ;; Registers used:
  9689 ;;		wreg, status,2, status,0
  9690 ;; Tracked objects:
  9691 ;;		On entry : 1D/2
  9692 ;;		On exit  : 1F/2
  9693 ;;		Unchanged: FFFE0/0
  9694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9699 ;;Total ram usage:        0 bytes
  9700 ;; Hardware stack levels used:    1
  9701 ;; Hardware stack levels required when called:    1
  9702 ;; This function calls:
  9703 ;;		Nothing
  9704 ;; This function is called by:
  9705 ;;		_scan_task
  9706 ;; This function uses a non-reentrant model
  9707 ;;
  9708                           
  9709  0000                     _get_data:	
  9710                           ;psect for function _get_data
  9711                           
  9712  0000                     __end_of_get_data:	
  9713                           ;scan.c: 74: return LATCbits.LATC5;
  9714                           
  9715                           ;incstack = 0
  9716                           ; Regs used in _get_data: [wreg+status,2+status,0]
  9717                           
  9718                           
  9719                           	psect	text39
  9720  0000                     __ptext39:	
  9721 ;; *************** function _set_clock_and_data *****************
  9722 ;; Defined at:
  9723 ;;		line 68 in file "../src/scan.c"
  9724 ;; Parameters:    Size  Location     Type
  9725 ;;  c               1    wreg     const unsigned char 
  9726 ;;  d               1    0[COMMON] const unsigned char 
  9727 ;; Auto vars:     Size  Location     Type
  9728 ;;  c               1    2[COMMON] const unsigned char 
  9729 ;; Return value:  Size  Location     Type
  9730 ;;		None               void
  9731 ;; Registers used:
  9732 ;;		wreg, status,2, status,0
  9733 ;; Tracked objects:
  9734 ;;		On entry : 1D/2
  9735 ;;		On exit  : 1F/2
  9736 ;;		Unchanged: FFFE0/0
  9737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9738 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9740 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9741 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9742 ;;Total ram usage:        3 bytes
  9743 ;; Hardware stack levels used:    1
  9744 ;; Hardware stack levels required when called:    1
  9745 ;; This function calls:
  9746 ;;		Nothing
  9747 ;; This function is called by:
  9748 ;;		_scan_task
  9749 ;; This function uses a non-reentrant model
  9750 ;;
  9751                           
  9752  0000                     _set_clock_and_data:	
  9753                           ;psect for function _set_clock_and_data
  9754                           
  9755  0000                     __end_of_set_clock_and_data:	
  9756                           ;scan.c: 70: LATCbits.LATC5 = !!d;
  9757                           
  9758                           ;scan.c: 69: LATCbits.LATC4 = !!c;
  9759                           
  9760                           ;incstack = 0
  9761                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  9762                           ;set_clock_and_data@c stored from wreg
  9763                           
  9764                           
  9765                           	psect	text40
  9766  0000                     __ptext40:	
  9767 ;; *************** function _waiting_for_timer *****************
  9768 ;; Defined at:
  9769 ;;		line 64 in file "../src/scan.c"
  9770 ;; Parameters:    Size  Location     Type
  9771 ;;		None
  9772 ;; Auto vars:     Size  Location     Type
  9773 ;;		None
  9774 ;; Return value:  Size  Location     Type
  9775 ;;                  1    wreg      unsigned char 
  9776 ;; Registers used:
  9777 ;;		wreg, status,2
  9778 ;; Tracked objects:
  9779 ;;		On entry : 1C/2
  9780 ;;		On exit  : 1F/2
  9781 ;;		Unchanged: FFFE0/0
  9782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9784 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9786 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9787 ;;Total ram usage:        1 bytes
  9788 ;; Hardware stack levels used:    1
  9789 ;; Hardware stack levels required when called:    1
  9790 ;; This function calls:
  9791 ;;		Nothing
  9792 ;; This function is called by:
  9793 ;;		_scan_task
  9794 ;; This function uses a non-reentrant model
  9795 ;;
  9796                           
  9797  0000                     _waiting_for_timer:	
  9798                           ;psect for function _waiting_for_timer
  9799                           
  9800  0000                     __end_of_waiting_for_timer:	
  9801                           ;scan.c: 65: return (wait_timer = wait_timer && !INTCONbits.TMR0IF);
  9802                           
  9803                           ;incstack = 0
  9804                           ; Regs used in _waiting_for_timer: [wreg+status,2]
  9805                           
  9806                           
  9807                           	psect	text41
  9808  0000                     __ptext41:	
  9809 ;; *************** function _set_timer *****************
  9810 ;; Defined at:
  9811 ;;		line 55 in file "../src/scan.c"
  9812 ;; Parameters:    Size  Location     Type
  9813 ;;		None
  9814 ;; Auto vars:     Size  Location     Type
  9815 ;;		None
  9816 ;; Return value:  Size  Location     Type
  9817 ;;		None               void
  9818 ;; Registers used:
  9819 ;;		status,2
  9820 ;; Tracked objects:
  9821 ;;		On entry : 1F/2
  9822 ;;		On exit  : 1F/0
  9823 ;;		Unchanged: FFFE0/0
  9824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9829 ;;Total ram usage:        0 bytes
  9830 ;; Hardware stack levels used:    1
  9831 ;; Hardware stack levels required when called:    1
  9832 ;; This function calls:
  9833 ;;		Nothing
  9834 ;; This function is called by:
  9835 ;;		_scan_task
  9836 ;; This function uses a non-reentrant model
  9837 ;;
  9838                           
  9839  0000                     _set_timer:	
  9840                           ;psect for function _set_timer
  9841                           
  9842  0000                     __end_of_set_timer:	
  9843                           ;scan.c: 61: TMR0 = 0;
  9844                           
  9845                           ;scan.c: 60: INTCONbits.TMR0IF = 0;
  9846                           
  9847                           ;scan.c: 59: INTCONbits.TMR0IE = 0;
  9848                           
  9849                           ;scan.c: 58: OPTION_REGbits.PSA = 1;
  9850                           
  9851                           ;scan.c: 57: OPTION_REGbits.TMR0CS = 0;
  9852                           
  9853                           ;scan.c: 56: wait_timer = 1;
  9854                           
  9855                           ;incstack = 0
  9856                           ; Regs used in _set_timer: [status,2]
  9857                           
  9858                           
  9859                           	psect	swtext5
  9860  0816                     __pswtext5:	
  9861  0816                     S4113:	
  9862  0816  3183  2BB6         	ljmp	l521
  9863  0818  3183  2BA3         	ljmp	l515
  9864  081A  3183  2BA6         	ljmp	l517
  9865  081C  3183  2BA3         	ljmp	l515
  9866  081E  3183  2BA9         	ljmp	l519
  9867                           
  9868                           	psect	intentry
  9869  0004                     __pintentry:	
  9870 ;; *************** function _SYS_InterruptHigh *****************
  9871 ;; Defined at:
  9872 ;;		line 113 in file "../src/pic16f1459/system.c"
  9873 ;; Parameters:    Size  Location     Type
  9874 ;;		None
  9875 ;; Auto vars:     Size  Location     Type
  9876 ;;		None
  9877 ;; Return value:  Size  Location     Type
  9878 ;;		None               void
  9879 ;; Registers used:
  9880 ;;		None
  9881 ;; Tracked objects:
  9882 ;;		On entry : 0/0
  9883 ;;		On exit  : 0/0
  9884 ;;		Unchanged: FFFFFFFF/0
  9885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9890 ;;Total ram usage:        0 bytes
  9891 ;; Hardware stack levels used:    1
  9892 ;; This function calls:
  9893 ;;		Nothing
  9894 ;; This function is called by:
  9895 ;;		Interrupt level 1
  9896 ;; This function uses a non-reentrant model
  9897 ;;
  9898                           
  9899  0004                     _SYS_InterruptHigh:	
  9900                           
  9901                           ;incstack = 0
  9902                           ; Regs used in _SYS_InterruptHigh: []
  9903  0004  3180               	pagesel	$
  9904  0005  0009               	retfie
  9905  0006                     __end_of_SYS_InterruptHigh:	
  9906  007E                     btemp	set	126	;btemp
  9907  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    249
    Data        0
    BSS         209
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            32     16      32
    BANK1            16      0      16
    BANK2            80      0      60
    BANK3            76      0      39
    BANK4            80      0      78
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ?_memset	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(1) Largest target is 32
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), BDT(BANK0[32]), NULL(NULL[0]), 

    ?_USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    memset@p1	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    memset@p	PTR unsigned char  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITSFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    sp__memset	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(BITSFR29[1]), 

    pDst	PTR unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> midiData(BANK3[4]), ReceivedDataBuffer(BANK1[64]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITSFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    S1347$pFunc	PTR FTN()void  size(1) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(1) Largest target is 0

    S1337$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S1337$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S1313$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S1313$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S1313$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S1313$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(BITSFR29[1]), 

    scan_task@velocity	PTR unsigned char  size(1) Largest target is 1
		 -> APP_DeviceAudioMIDITasks@velocity(BANK0[1]), 

    scan_task@note	PTR unsigned char  size(1) Largest target is 1
		 -> APP_DeviceAudioMIDITasks@scan_pitch(BANK0[1]), 

    sp__USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBRxHandle	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBTxHandle	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[26]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 101
		 -> configDescriptor1(CODE[101]), 


Critical Paths under _main in COMMON

    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCheckStdRequest->_USBStdSetCfgHandler
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _APP_DeviceAudioMIDIInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _scan_task->_store_key_level
    _store_key_level->_process_level
    _process_level->_LED_Off
    _process_level->_LED_On
    _SYSTEM_Initialize->_LED_Enable

Critical Paths under _SYS_InterruptHigh in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_APP_DeviceAudioMIDITasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _APP_DeviceAudioMIDITasks->_scan_task
    _scan_task->_store_key_level

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8501
                  _SYSTEM_Initialize
                      _USBDeviceInit
                      _BLEDeviceInit
           _APP_DeviceAudioMIDITasks
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       2     2      0    6817
                                             12 BANK0      2     2      0
                      _USBDeviceInit
    _USER_USB_CALLBACK_EVENT_HANDLER
                 _USBWakeFromSuspend
                         _USBSuspend
      _USBIncrement1msInternalTimers
          _USBCtrlEPAllowStatusStage
                    _USBStallHandler
                   _USBCtrlEPService
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     3     3      0    4174
                                              9 BANK0      3     3      0
             _USBCtrlTrfSetupHandler
               _USBCtrlTrfOutHandler
                _USBCtrlTrfInHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  3     3      0     115
                                              1 COMMON     3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 2     2      0     114
                                              6 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  4     4      0     114
                                              2 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0    3877
    _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCtrlEPServiceComplete
                 _USBCheckStdRequest
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0    3010
    _USER_USB_CALLBACK_EVENT_HANDLER
                _USBStdSetCfgHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
            _USBStdFeatureReqHandler
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0    1158
                                             10 COMMON     2     2      0
                                              5 BANK0      4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               1     1      0      46
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  4     4      0    1031
                                             10 COMMON     4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               6     2      4      96
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             2     2      0      92
                                              3 COMMON     2     2      0
          _USBCtrlEPAllowStatusStage
            _USBCtrlEPAllowDataStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              1 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0     775
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0     775
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      5     0      5     775
                                              0 BANK0      5     0      5
             _APP_LEDUpdateUSBStatus
      _APP_DeviceAudioMIDISOFHandler
      _APP_DeviceAudioMIDIInitialize
 ---------------------------------------------------------------------------------
 (7) _APP_DeviceAudioMIDIInitialize                        0     0      0     709
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (8) _USBEnableEndpoint                                    6     5      1     377
                                              4 COMMON     6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (9) _USBConfigureEndpoint                                 4     3      1     222
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (7) _APP_DeviceAudioMIDISOFHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _APP_LEDUpdateUSBStatus                               0     0      0      44
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        6     6      0     272
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceAudioMIDITasks                             9     9      0    1368
                                              7 BANK0      9     9      0
               _USBTransferOnePacket
                          _scan_task
 ---------------------------------------------------------------------------------
 (2) _scan_task                                            6     5      1     842
                                              1 BANK0      6     5      1
                          _scan_init
                          _set_timer
                  _waiting_for_timer
                 _set_clock_and_data
                           _get_data
                     _is_end_of_scan
                            _run_adc
                       _is_adc_ready
                            _get_adc
                    _store_key_level
 ---------------------------------------------------------------------------------
 (3) _store_key_level                                      2     1      1     615
                                             13 COMMON     1     0      1
                                              0 BANK0      1     1      0
                     _is_end_of_scan (ARG)
                            _get_adc (ARG)
                      _process_level
 ---------------------------------------------------------------------------------
 (4) _process_level                                       14    12      2     549
                                              1 COMMON    12    10      2
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (8) _LED_On                                               1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _LED_Off                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _get_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _is_adc_ready                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _run_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _is_end_of_scan                                       1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _get_data                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _set_clock_and_data                                   3     2      1      44
                                              0 COMMON     3     2      1
                           _get_data (ARG)
 ---------------------------------------------------------------------------------
 (3) _waiting_for_timer                                    1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _set_timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _scan_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBTransferOnePacket                                 8     4      4     332
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _BLEDeviceInit                                        0     0      0       0
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      44
                                              1 COMMON     1     1      0
                         _LED_Enable
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SYS_InterruptHigh                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _LED_Enable
   _USBDeviceInit
   _BLEDeviceInit
     _PIN_MANAGER_Initialize
     _SPI_Initialize
   _APP_DeviceAudioMIDITasks
     _USBTransferOnePacket
     _scan_task
       _scan_init
       _set_timer
       _waiting_for_timer
       _set_clock_and_data
         _get_data (ARG)
       _get_data
       _is_end_of_scan
       _run_adc
       _is_adc_ready
       _get_adc
       _store_key_level
         _is_end_of_scan (ARG)
         _get_adc (ARG)
         _process_level (ARG)
           _LED_Off
           _LED_On
   _USBDeviceTasks
     _USBDeviceInit
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On
       _APP_DeviceAudioMIDISOFHandler
       _APP_DeviceAudioMIDIInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _APP_DeviceAudioMIDISOFHandler
         _APP_DeviceAudioMIDIInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _APP_DeviceAudioMIDISOFHandler
         _APP_DeviceAudioMIDIInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
     _USBIncrement1msInternalTimers
     _USBCtrlEPAllowStatusStage
     _USBStallHandler
     _USBCtrlEPService
       _USBCtrlTrfSetupHandler
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
           _APP_DeviceAudioMIDISOFHandler
           _APP_DeviceAudioMIDIInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
         _USBCheckStdRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
             _APP_DeviceAudioMIDISOFHandler
             _APP_DeviceAudioMIDIInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _APP_DeviceAudioMIDISOFHandler
               _APP_DeviceAudioMIDIInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
             _memset
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _APP_DeviceAudioMIDISOFHandler
               _APP_DeviceAudioMIDIInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService

 _SYS_InterruptHigh (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       9       3        0.0%
BITBANK0            20      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               20     10      20       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10      0      10       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3C       9       75.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            4C      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               4C      0      27      11       51.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4E      13       97.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      EF      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F8      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Sun May 22 01:42:16 2016

                          _SPI_Initialize 03B7                                _USB_SD_Ptr 1028  
                                       pc 0002                               __CFG_CP$OFF 0000  
                                      l14 0099                                        l88 0545  
                             ?_LED_Enable 0070                             _USBDeviceInit 0546  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0060      USER_USB_CALLBACK_EVENT_HANDLER@pdata 0062  
                                     l210 000E                                       l205 0009  
                                     l213 0019                                       l222 0010  
                                     l231 0001                                       l216 0004  
                                     l225 0006                                       l228 0004  
                                     l261 00A8               __end_of_USBStdGetDscHandler 0DD9  
                                     l521 03B6                                       l515 03A3  
                                     l517 03A6                                       l269 0028  
                                     l710 04E5                                       l519 03A9  
                                     l481 03A0                                       l491 038A  
                                     l475 038D                                       l485 0377  
                                     l477 0390                                       l830 0756  
                                     l487 037A                                       l479 0393  
                                     l831 0758                                       l911 0404  
                                     l912 0405                                       l489 037D  
                                     l761 0EC0                                       l826 074F  
                                     l924 044C                                       _BDT 0020  
                                     l829 0779                                       l693 047E  
                                     l774 0F2C                                       l847 05C3  
                                     l695 0482                                       l873 0E69  
                                     l890 0723                                       l699 049F  
                                     l876 0E92                                       l789 0FA0  
                                     l888 0722                                       l899 073C  
                                     _UIE 0E92                                       _UIR 0E90  
                  _APP_LEDUpdateUSBStatus 0008                                _USBSuspend 05CA  
                    USBStdSetCfgHandler@i 007D                      USBStdSetCfgHandler@p 007A  
                             _USBRxHandle 0054                              __CFG_BORV$LO 0000  
                                     wreg 0009                            _USBDeviceTasks 0474  
                          _USBDeviceState 0053                               _USBTxHandle 00E7  
                                    S4101 07DB                                      S4111 080C  
                                    S4113 0816                                      S4107 0800  
                                    S4109 07F5                     ??_USBCtrlTrfRxService 0072  
                                    PL220 0F49                                      PL230 0FF1  
                                    PL222 0F5B                                      PL240 07A7  
                                    PL232 0790                                      PL224 0783  
                USBEnableEndpoint@options 0074                                      PL250 07BE  
                                    PL242 07AD                                      PL234 0FFB  
                                    PL226 0F6C                                      PL260 07D0  
                                    PL252 0DE0                                      PL244 07B2  
                                    PL236 0797                                      PL228 0FEB  
                                    PL262 07D6                                      PL254 07C5  
                                    PL246 07B8                                      PL238 079F  
                                    PL256 0DE7                                      PL248 0DD9  
                                    PL258 07CA                              __CFG_LVP$OFF 0000  
                         __end_of_LED_Off 038B                                      l3005 0499  
                                    l3023 04AD                                      l3007 049C  
                                    l3113 0688                                      l3017 04A8  
                                    l3203 023E                                      l3213 0336  
                                    l3221 0347                                      l3133 06AA  
                                    l3117 068D                                      l3053 04DB  
                                    l3045 04CD                                      l3029 04BA  
                                    l3303 0001                                      l3207 0247  
                                    l4103 0526                                      l3039 04C7  
                                    l3145 0137                                      l3321 0051  
                                    l3313 0040                                      l3305 0008  
                                    l3209 024C                                      l3137 06B0  
                                    l4105 0540                                      l3081 0512  
                                    l3073 04FB                                      l3331 0082  
                                    l3323 005B                                      l3315 0042  
                                    l3307 000A                                      l3219 033D  
                                    l3091 0524                USBConfigureEndpoint@handle 0073  
                                    l3165 0161                                      l3261 0007  
                                    l3333 0087                                      l3317 0047  
                                    l3325 005C                                      l3309 0011  
                                    l3085 0519                                      l3271 000C  
                                    l3263 0000                                      l3343 0095  
                                    l3327 005E                                      l3319 004C  
                                    l3351 0002                                      l3191 01BD  
                                    l3095 0525                                      l3087 0521  
                                    l3503 0F04                                      l3079 0508  
                                    l3265 0001                                      l3281 0000  
                                    l3345 0099                                      l3337 008D  
                                    l3329 0079                                      l3353 000F  
                                    l3185 0195                                      l3409 0610  
                                    l3259 0000                                      l3267 0006  
                                    l3275 0001                                      l3283 0008  
                                    l3291 0000                                      l3339 008F  
                                    l3355 0017                                      l3195 01E5  
                                    l3531 0F3D                                      l2725 0091  
                                    l3269 000A                                      l3277 0000  
                                    l3285 000E                                      l3293 0005  
                                    l3349 00A1                                      l3357 0018  
                                    l3381 05C7                                      l3437 05F4  
                                    l3541 0F43                                      l3701 0D9E  
                                    l3613 0FA5                                      l2805 007B  
                                    l3367 03B7                                      l3295 0000  
                                    l3359 001E                                      l3199 0210  
                                    l2743 0008                                      l3439 05F6  
                                    l3519 0F28                                      l3551 0E9F  
                                    l3711 0DBA                                      l3623 0FD0  
                                    l3615 0FB5                                      l3471 067E  
                                    l2737 03AC                                      l2841 0561  
                                    l2825 0551                                      l2761 0029  
                                    l2753 0016                                      l3561 0EAF  
                                    l3473 0680                                      l3299 0000  
                                    l2915 00BE                                      l3395 05F8  
                                    l3539 0F3F                                      l3643 0DF4  
                                    l3635 0DED                                      l3723 0DCD  
                                    l3459 0653                                      l2933 00EB  
                                    l2925 00DB                                      l2853 0576  
                                    l2765 0032                                      l2757 001F  
                                    l2749 000D                                      l3549 0F45  
                                    l3573 0ECA                                      l3581 0ED3  
                                    l3565 0EB3                                      l3661 0E09  
                                    l3709 0DB8                                      l3725 074B  
                                    l3629 0FE4                                      l3805 0E66  
                                    l2783 0380                                      l2919 00C7  
                                    l2775 003F                                      l3487 06DB  
                                    l3815 0E83                                      l2793 0396  
                                    l2961 011A                                      l2953 0107  
                                    l2769 003B                                      l2777 0045  
                                    l3737 075F                                      l3841 072F  
                                    l3825 0E9B                                      l3499 0EF8  
                                    l3683 0E30                                      l3747 076E  
                                    l3923 042D                                      l3907 040B  
                                    l3851 0736                                      l3835 0727  
                                    l3755 06EA                                      l3827 0E9C  
                                    l3819 0E8C                                      l2957 0111  
                                    l2869 0589                                      l3693 0E40  
                                    l3941 0452                                      l3933 0442  
                                    l3917 041E                                      l3861 0744  
                                    l3837 0729                                      l3781 0F71  
                                    l3695 0D8E                                      l3919 0425  
                                    l3847 0734                                      l3839 072B  
                                    l3599 0F8E                                      l3791 0F8C  
                                    l3945 0461                                      l3873 03BD  
                                    l3849 0735                                      l3785 0F76  
                                    l3793 0E50                                      l2985 0485  
                                    l3699 0D96                                      l3947 0462  
                                    l3883 03CD                                      l3885 03CF  
                                    l2997 0492                                      l3899 03F4  
                                    u2455 0EFE                                      u2595 0F9C  
                   ??_USBCtrlTrfTxService 0070                                      _UCFG 0E91  
                                    _UEP0 0E98                                      _UEP1 0E99  
                                    _UEIE 0E97                                      _UEIR 0E93  
                                    _UCON 0E8E                                      _TMR0 0015  
                            __CFG_WRT$OFF 0000    USBStdFeatureReqHandler@current_ep_data 0067  
                                    _pDst 00EA                                      _main 0074  
                                    fsr0h 0005                                      fsr1h 0007  
                                    fsr0l 0004                                      indf0 0000  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                                    start 0006                             __CFG_IESO$OFF 0000  
              process_level@current_state 0074                    __end_of_SPI_Initialize 03BD  
                    process_level@idx_key 007C                __end_of_USBCheckStdRequest 074B  
                  ??_USBCtrlTrfOutHandler 0076                             __CFG_MCLRE$ON 0000  
               ??_USBStdFeatureReqHandler 007A                       USBDeviceInit@i_1882 0074  
                    process_level@on_flag 007A                     __end_of_BLEDeviceInit 009D  
                ??_USBStdGetStatusHandler 0070                            ?_USBDeviceInit 0070  
             process_level@key_on_counter 0247                                     ?_main 0070  
                           __CFG_WDTE$OFF 0000         __size_of_USBCtrlEPServiceComplete 003F  
                  __end_of_USBDeviceTasks 0519                 ?_USBCtrlEPServiceComplete 0070  
                                   _UADDR 0E96                                     _USTAT 0E8F  
      __size_of_USBCtrlEPAllowStatusStage 0041                            __CFG_FCMEN$OFF 0000  
                         __end_of_get_adc 0000           __end_of_USBCtrlEPAllowDataStage 0F16  
                                   _sd000 10F5                                     _sd001 1095  
                                   _sd002 10C9            ?_USBIncrement1msInternalTimers 0070  
                           ?_is_adc_ready 0070     __end_of_APP_DeviceAudioMIDIInitialize 06A4  
  __size_of_APP_DeviceAudioMIDIInitialize 0017             _APP_DeviceAudioMIDIInitialize 068D  
                         _store_key_level 0000               __size_of_set_clock_and_data 0000  
                                   _pitch 00EB                           ??_process_level 0073  
                     __size_of_LED_Enable 0016                           __end_of_run_adc 0000  
      APP_DeviceAudioMIDITasks@scan_pitch 006E                                     status 0003  
                                   wtemp0 007E                              __end_ofPL220 0F5B  
                            __end_ofPL230 0FFB                              __end_ofPL222 0F6C  
                            __end_ofPL240 07AD                              __end_ofPL232 0797  
                            __end_ofPL224 0790                              __end_ofPL250 07C5  
                            __end_ofPL242 07B2                              __end_ofPL234 1000  
                            __end_ofPL226 0F71                              __end_ofPL260 07D6  
                            __end_ofPL252 0DE7                              __end_ofPL244 07B8  
                            __end_ofPL236 079F                              __end_ofPL228 0FF1  
                            __end_ofPL262 07DB                              __end_ofPL254 07CA  
                            __end_ofPL246 07BE                              __end_ofPL238 07A7  
                            __end_ofPL256 0DED                              __end_ofPL248 0DE0  
                            __end_ofPL258 07D0                           ?_SPI_Initialize 0070  
            __size_of_USBStdSetCfgHandler 0051                     process_level@off_flag 0076  
                         __initialization 004A                is_end_of_scan@scan_counter 00EE  
                            __end_of_main 0086                ??_APP_DeviceAudioMIDITasks 007E  
                          __CFG_LPBOR$OFF 0000                             scan_task@note 0066  
           APP_DeviceAudioMIDITasks@bscan 006D                 __size_of_USBCtrlEPService 004F  
                                  ??_main 007E                           ?_USBDeviceTasks 0070  
                             ?_USBSuspend 0070                                 ??_LED_Off 0070  
                     __CFG_USBLSCLK$48MHz 0000                            ??_is_adc_ready 0070  
                                  _ACTCON 039B                                    _ADRESH 009C  
                                  _ANSELA 018C                    SYSTEM_Initialize@state 0071  
                                  _LED_On 038B                       set_clock_and_data@c 0072  
                     set_clock_and_data@d 0070                                    _OSCCON 0099  
                          __CFG_PWRTE$OFF 0000                         _shortPacketStatus 00ED  
                        __end_of_get_data 0000                           USBDeviceTasks@i 006D  
             USBStdFeatureReqHandler@pUEP 0065                  USBTransferOnePacket@data 0071  
              USBCtrlTrfInHandler@lastDTS 0073                           ??_USBDeviceInit 0070  
                          __CFG_STVREN$ON 0000                         _USBEnableEndpoint 06A4  
         __size_of_USBStdGetStatusHandler 0038                                    _memset 0E3E  
                      ?_USBEnableEndpoint 0074                                 ??_get_adc 0070  
                 __end_of_store_key_level 0000             __size_of_USBTransferOnePacket 0039  
                     ??_USBEnableEndpoint 0075                                 ??_run_adc 0070  
                             _CtrlTrfData 0048                   __size_of_is_end_of_scan 0000  
                    _controlTransferState 0055                         _SYSTEM_Initialize 0086  
                 __end_of__initialization 0072                        ?_SYSTEM_Initialize 0070  
                __size_of_USBStallHandler 001B                       __size_of_USBSuspend 000B  
                          __pcstackCOMMON 0070                 __end_of_USBEnableEndpoint 06C3  
            _APP_DeviceAudioMIDITasks$417 0067              _APP_DeviceAudioMIDITasks$451 0069  
            _APP_DeviceAudioMIDITasks$452 006B                             __end_of_sd000 10F9  
                           __end_of_sd001 10C9                             __end_of_sd002 10E3  
                     ??_SYSTEM_Initialize 0071                                 LED_On@led 0070  
        __size_of_USBCtrlEPAllowDataStage 0038                                _adc_levels 0220  
                  process_level@old_level 0071                    process_level@new_level 0072  
                            ??_LED_Enable 0070             __size_of_USBConfigureEndpoint 0027  
             __end_of_USBCtrlTrfInHandler 0E9F                   ?_APP_LEDUpdateUSBStatus 0070  
                  store_key_level@idx_key 0058                            _OPTION_REGbits 0095  
                          scan_task@state 015B                store_key_level@end_of_scan 007D  
                ??_USBCtrlTrfSetupHandler 007E                   _USBTicksSinceSuspendEnd 0158  
               __end_of_SYSTEM_Initialize 009A                    _USBStdGetStatusHandler 074B  
                              __pbssBANK0 0050                                __pbssBANK1 00E0  
                              __pbssBANK2 0120                                __pbssBANK3 01A4  
                              __pbssBANK4 0220                                   ?_LED_On 0070  
                      __end_of_LED_Enable 03B7                      store_key_level@level 0060  
             __size_of_USBWakeFromSuspend 0011                               _pBDTEntryIn 0050  
        __end_of_USBCtrlEPServiceComplete 0EDE                        __size_of_scan_init 001C  
                              __pmaintext 0074                        __size_of_scan_task 01EB  
                    USBCtrlTrfRxService@i 0074                      __end_of_is_adc_ready 0000  
                           LED_Enable@led 0070                           __CFG_PLLMULT$3x 0000  
          __end_of_APP_LEDUpdateUSBStatus 004A                                __pintentry 0004  
                                 ?_memset 0070                                _device_dsc 10E3  
                        _USBCtrlEPService 0639                                _ep_data_in 014D  
                      __size_of_set_timer 0000               __end_of_USBCtrlTrfRxService 0FEB  
                      _USBCheckStdRequest 0712                          ?_store_key_level 007D  
                       _configDescriptor1 1030                         scan_task@velocity 0061  
                                 _LED_Off 0375               __end_of_USBCtrlTrfTxService 0F49  
                     _USBStdSetCfgHandler 0DED                                 ?_get_data 0070  
                     ?_USBCheckStdRequest 0070              __size_of_USBStdGetDscHandler 004B  
                                 _UIEbits 0E92                                __stringtab 1000  
                                 _UIRbits 0E90                          ??_SPI_Initialize 0070  
                         __size_of_LED_On 0016                         is_end_of_scan@res 0070  
          APP_LEDUpdateUSBStatus@ledCount 00E0           ??_USBIncrement1msInternalTimers 0070  
                    ?_USBStdSetCfgHandler 0070                __size_of_USBEnableEndpoint 001F  
                    ??_USBCheckStdRequest 007E             __size_of_USBCtrlTrfOutHandler 001D  
                        ??_USBDeviceTasks 006C                         ??_USBStallHandler 0070  
                         __size_of_memset 0012                 __end_of_configDescriptor1 1095  
                                 __ptext1 0474                                   __ptext2 0639  
                                 __ptext3 0E50                                   __ptext4 0F71  
                                 __ptext5 0F8E                                   __ptext6 06EA  
                                 __ptext7 0712                                   __ptext8 03BD  
                                 __ptext9 074B                                   _inPipes 0059  
                                 _get_adc 0000               _USBDeferOUTDataStagePackets 00E3  
                            ??_USBSuspend 007A                             _scan_task$858 0062  
                           _scan_task$859 0064                  ??_PIN_MANAGER_Initialize 0070  
              __end_of_set_clock_and_data 0000                         __end_of_scan_init 0375  
                       __end_of_scan_task 0359                                   _run_adc 0000  
                      __end_of_USB_CD_Ptr 1030                                ??_get_data 0070  
              __size_of_SYSTEM_Initialize 0014           __size_of_USBCtrlTrfSetupHandler 0028  
                                 clrloop0 0D89                            _is_end_of_scan 0000  
                  __size_of_BLEDeviceInit 0003                      end_of_initialization 0072  
                      __end_of_USB_SD_Ptr 102E                       _pBDTEntryEP0OutNext 0057  
                                 memset@c 0070                                   memset@n 0072  
                                 memset@p 0075                     __end_of_process_level 0000  
                ?_USBStdFeatureReqHandler 0070                         __end_of_set_timer 0000  
                   ??_USBStdSetCfgHandler 007A                                _note_event 0151  
                      __end_of_USBSuspend 05D5                   _USBCtrlEPAllowDataStage 0EDE  
                            __pstringtext 1000                  _USBCtrlEPServiceComplete 0E9F  
                              _wait_timer 015A                _USBStatusStageEnabledFlag1 00E4  
              _USBStatusStageEnabledFlag2 00E5                        USBEnableEndpoint@p 0077  
          ?_APP_DeviceAudioMIDISOFHandler 0070                          __CFG_FOSC$INTOSC 0000  
                               _TRISAbits 008C                                 _TRISBbits 008D  
                               _TRISCbits 008E                        _ReceivedDataBuffer 00A0  
                  __end_of_is_end_of_scan 0000                        _BothEP0OutUOWNsSet 0155  
               USBStdSetCfgHandler@i_2210 007C                 USBConfigureEndpoint@EPNum 0072  
       __size_of_APP_DeviceAudioMIDITasks 0091                ?_USBCtrlEPAllowStatusStage 0070  
               ?_APP_DeviceAudioMIDITasks 0070       USER_USB_CALLBACK_EVENT_HANDLER@size 0063  
                               _USTATcopy 005F              __end_of_USBTransferOnePacket 0167  
                          __end_of_LED_On 03A1                     __size_of_is_adc_ready 0000  
                 process_level@midi_shift 10F9               process_level@filtered_state 007B  
                      __CFG_PLLEN$ENABLED 0000                    _USBCtrlTrfSetupHandler 06EA  
                 process_level@key_states 0120                             _BLEDeviceInit 009A  
                   __end_of_USBDeviceInit 05B9     __end_of_USBIncrement1msInternalTimers 05DD  
  __size_of_USBIncrement1msInternalTimers 0008             _USBIncrement1msInternalTimers 05D5  
                              LED_Off@led 0070                            __end_of_memset 0E50  
                       _USBBusIsSuspended 0157                       start_initialization 004A  
                 ?_USBStdGetStatusHandler 0070             USBCtrlTrfRxService@byteToRead 0075  
         __size_of_PIN_MANAGER_Initialize 0007                           ?_is_end_of_scan 0070  
                          _is_initialized 0159                              _is_adc_ready 0000  
            __end_of_USBConfigureEndpoint 06EA           __end_of_USBStdFeatureReqHandler 0474  
                                ??_LED_On 0070         __end_of_USBCtrlEPAllowStatusStage 0639  
                __end_of_USBCtrlEPService 0688                 ??_USBCtrlEPAllowDataStage 0071  
                          USBDeviceInit@i 0075                            USBDeviceInit@p 0072  
                  _pBDTEntryEP0OutCurrent 0056                   USBTransferOnePacket@dir 0070  
                 USBTransferOnePacket@len 0073                            ?_BLEDeviceInit 0070  
                     _USBStdGetDscHandler 0D8E                                  ??_memset 0074  
                  _USBActiveConfiguration 005E            __end_of_USBStdGetStatusHandler 0783  
               process_level@idx_midi_map 1001                     _waiting_for_timer$810 0070  
                                ?_LED_Off 0070                             __pcstackBANK0 0060  
            __size_of_USBCtrlTrfInHandler 004F                      ?_USBStdGetDscHandler 0070  
                       __size_of_get_data 0000                __end_of_USBWakeFromSuspend 05CA  
                         _USBStallHandler 05DD                              _pBDTEntryOut 0153  
          ?_APP_DeviceAudioMIDIInitialize 0070                    _PIN_MANAGER_Initialize 0167  
                               __pswtext1 07DB                                 __pswtext2 0800  
                               __pswtext3 07F5                                 __pswtext4 080C  
                               __pswtext5 0816                                  ?_get_adc 0070  
                    _USBTransferOnePacket 012E                                 _msCounter 00E9  
            process_level@key_off_counter 01A4              __end_of_USBCtrlTrfOutHandler 0F8E  
                   ??_USBStdGetDscHandler 0070                               _ep_data_out 014F  
                                ?_run_adc 0070              __size_of_USBCtrlTrfRxService 005D  
           USBConfigureEndpoint@direction 0070                  __size_of_store_key_level 0000  
                               _scan_init 0359                                 _scan_task 016E  
            __size_of_USBCtrlTrfTxService 0033                                  _LATCbits 010E  
              ??_USBCtrlEPServiceComplete 0073                                 clear_ram0 0D88  
                      _set_clock_and_data 0000                                  _PIE1bits 0091  
                                _PIE2bits 0092                         _waiting_for_timer 0000  
                         ??_BLEDeviceInit 0070                                  _PIR2bits 0012  
               USBCtrlEPService@setup_cnt 006B                        ?_waiting_for_timer 0070  
                               _set_timer 0000                                  _UEP0bits 0E98  
              _USBDeferINDataStagePackets 00E2                                  _SSP1CON1 0215  
                                _SSP1CON3 0217               __size_of_USBCheckStdRequest 0039  
                     ?_set_clock_and_data 0070                                  _SSP1STAT 0214  
                                _UCONbits 0E8E                      _USBConfigureEndpoint 06C3  
         __end_ofprocess_level@midi_shift 10FA          __size_of_USBStdFeatureReqHandler 00B7  
        __end_of_APP_DeviceAudioMIDITasks 012E                       ??_waiting_for_timer 0070  
                              _ADCON0bits 009D                                _ADCON1bits 009E  
                              _ADCON2bits 009F                     ?_USBTransferOnePacket 0070  
                       _SYS_InterruptHigh 0004                              _RemoteWakeup 0156  
                        __size_of_LED_Off 0016                        ?_SYS_InterruptHigh 0070  
                 __end_of_USBStallHandler 05F8                         _process_level$847 0077  
                       _process_level$848 0078                      ??_set_clock_and_data 0071  
             ??_USBCtrlEPAllowStatusStage 0070               __end_of_USBStdSetCfgHandler 0E3E  
                              ?_scan_init 0070                                ?_scan_task 0061  
                     ??_SYS_InterruptHigh 0070                 __end_of_waiting_for_timer 0000  
         ??_APP_DeviceAudioMIDISOFHandler 0070                        __end_of_device_dsc 10F5  
                ??_APP_LEDUpdateUSBStatus 0071                   ?_USBCtrlTrfSetupHandler 0070  
                 USBStdGetStatusHandler@p 0070                    USBTransferOnePacket@ep 0076  
                              ?_set_timer 0070                                  _SetupPkt 0040  
                 __size_of_SPI_Initialize 0006                     ?_USBConfigureEndpoint 0070  
               __end_of_SYS_InterruptHigh 0006                        __end_of__stringtab 1001  
                        ??_is_end_of_scan 0070                                _ANSELAbits 018C  
                              _ANSELCbits 018E                          __size_of_get_adc 0000  
                  __size_of_process_level 0000                   __size_of_USBDeviceTasks 00A5  
                                __ptext10 0D8E                                  __ptext11 0DED  
                                __ptext20 05B9                                  __ptext12 0E3E  
                                __ptext21 0519                                  __ptext13 0E9F  
                                __ptext30 0000                                  __ptext22 068D  
                                __ptext14 0EDE                                  __ptext31 0000  
                                __ptext23 06A4                                  __ptext15 0F16  
                                __ptext40 0000                                  __ptext32 038B  
                                __ptext24 06C3                                  __ptext16 05F8  
                                __ptext41 0000                                  __ptext33 0375  
                                __ptext25 0688                                  __ptext17 05DD  
                                __ptext42 0359                                  __ptext34 0000  
                                __ptext26 0008                                  __ptext18 05D5  
                                __ptext43 012E                                  __ptext35 0000  
                                __ptext27 0546                                  __ptext19 05CA  
                                __ptext44 009A                                  __ptext36 0000  
                                __ptext28 009D                                  __ptext45 03B7  
                                __ptext37 0000                                  __ptext29 016E  
                                __ptext46 0167                                  __ptext38 0000  
                                __ptext47 0086                                  __ptext39 0000  
                                __ptext48 03A1                                  _get_data 0000  
                        __size_of_run_adc 0000                                  _midiData 01A0  
          __end_of_USBCtrlTrfSetupHandler 0712                             __size_of_main 0012  
                       ?_USBCtrlEPService 0070                        ??_USBCtrlEPService 0069  
                       ??_store_key_level 007E                       _USBCtrlTrfInHandler 0E50  
                                _outPipes 0147                      _USBCtrlTrfOutHandler 0F71  
               _USBCtrlEPAllowStatusStage 05F8                                _LED_Enable 03A1  
                  ??_USBTransferOnePacket 0074                 _USBDeferStatusStagePacket 0052  
                              _INTCONbits 000B                      ?_USBCtrlTrfInHandler 0070  
                _APP_DeviceAudioMIDITasks 009D             USBCtrlTrfTxService@byteToSend 0070  
                                memset@p1 0074                          ?_USBStallHandler 0070  
                USBStdFeatureReqHandler@p 0068                                  intlevel1 0000  
                             ??_scan_init 0070                               ??_scan_task 007E  
                  __size_of_USBDeviceInit 0073   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0546  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 002D          ?_USER_USB_CALLBACK_EVENT_HANDLER 0060  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 007A           _USER_USB_CALLBACK_EVENT_HANDLER 0519  
              __size_of_waiting_for_timer 0000         __end_ofprocess_level@idx_midi_map 1028  
                 ?_PIN_MANAGER_Initialize 0070                         __CFG_CLKOUTEN$OFF 0000  
                           _process_level 0000                               _sentNoteOff 00EC  
         __size_of_APP_LEDUpdateUSBStatus 0042     __end_of_APP_DeviceAudioMIDISOFHandler 068D  
  __size_of_APP_DeviceAudioMIDISOFHandler 0005             _APP_DeviceAudioMIDISOFHandler 0688  
                             ??_set_timer 0070                    ??_USBConfigureEndpoint 0071  
                   ?_USBCtrlTrfOutHandler 0070                      __CFG_CPUDIV$NOCLKDIV 0000  
                     _USBCtrlTrfRxService 0F8E                        _USBWakeFromSuspend 05B9  
                 _USBStdFeatureReqHandler 03BD                       _USBCtrlTrfTxService 0F16  
              __size_of_SYS_InterruptHigh 0002           ??_APP_DeviceAudioMIDIInitialize 007A  
                     ?_USBWakeFromSuspend 0070                     ??_USBCtrlTrfInHandler 0071  
                   _USBAlternateInterface 00EF                       USBEnableEndpoint@ep 0079  
                         _endpoint_number 00E8                      ?_USBCtrlTrfRxService 0070  
          __end_of_PIN_MANAGER_Initialize 016E                  ?_USBCtrlEPAllowDataStage 0070  
                    ?_USBCtrlTrfTxService 0070                            ?_process_level 0071  
            _USBStatusStageTimeoutCounter 00E6                      ??_USBWakeFromSuspend 007A  
              USBTransferOnePacket@handle 0077                                _USB_CD_Ptr 102E  
        APP_DeviceAudioMIDITasks@velocity 006F  
