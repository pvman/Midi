

Microchip Technology PIC LITE Macro Assembler V1.20 build 52243 
                                                                                               Tue May 10 15:22:05 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	16F1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	swtext1,local,class=CONST,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	swtext2,local,class=CONST,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	swtext3,local,class=CONST,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	swtext4,local,class=CONST,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,delta=2
    67                           	psect	swtext5,local,class=CONST,delta=2
    68                           	psect	intentry,global,class=CODE,delta=2
    69                           	dabs	1,0x20,32,_BDT
    70                           	dabs	1,0x48,8,_CtrlTrfData
    71                           	dabs	1,0x40,8,_SetupPkt
    72                           	dabs	1,0xA0,64,_ReceivedDataBuffer
    73                           	dabs	1,0x1A0,4,_midiData
    74                           	dabs	1,0x7E,2
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  0111                     	;# 
   122  0112                     	;# 
   123  0113                     	;# 
   124  0114                     	;# 
   125  0115                     	;# 
   126  0116                     	;# 
   127  0117                     	;# 
   128  0118                     	;# 
   129  0119                     	;# 
   130  011D                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  018E                     	;# 
   134  0191                     	;# 
   135  0191                     	;# 
   136  0192                     	;# 
   137  0193                     	;# 
   138  0193                     	;# 
   139  0194                     	;# 
   140  0195                     	;# 
   141  0196                     	;# 
   142  0197                     	;# 
   143  0199                     	;# 
   144  019A                     	;# 
   145  019B                     	;# 
   146  019C                     	;# 
   147  019D                     	;# 
   148  019E                     	;# 
   149  019F                     	;# 
   150  020C                     	;# 
   151  020D                     	;# 
   152  0211                     	;# 
   153  0211                     	;# 
   154  0212                     	;# 
   155  0212                     	;# 
   156  0213                     	;# 
   157  0213                     	;# 
   158  0214                     	;# 
   159  0214                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0215                     	;# 
   163  0216                     	;# 
   164  0216                     	;# 
   165  0217                     	;# 
   166  0217                     	;# 
   167  0391                     	;# 
   168  0392                     	;# 
   169  0393                     	;# 
   170  0394                     	;# 
   171  0395                     	;# 
   172  0396                     	;# 
   173  039A                     	;# 
   174  039B                     	;# 
   175  0611                     	;# 
   176  0612                     	;# 
   177  0613                     	;# 
   178  0613                     	;# 
   179  0614                     	;# 
   180  0615                     	;# 
   181  0616                     	;# 
   182  0616                     	;# 
   183  0691                     	;# 
   184  0692                     	;# 
   185  0693                     	;# 
   186  0694                     	;# 
   187  0695                     	;# 
   188  0E8E                     	;# 
   189  0E8F                     	;# 
   190  0E90                     	;# 
   191  0E91                     	;# 
   192  0E92                     	;# 
   193  0E93                     	;# 
   194  0E94                     	;# 
   195  0E94                     	;# 
   196  0E95                     	;# 
   197  0E96                     	;# 
   198  0E97                     	;# 
   199  0E98                     	;# 
   200  0E99                     	;# 
   201  0E9A                     	;# 
   202  0E9B                     	;# 
   203  0E9C                     	;# 
   204  0E9D                     	;# 
   205  0E9E                     	;# 
   206  0E9F                     	;# 
   207  0FE4                     	;# 
   208  0FE5                     	;# 
   209  0FE6                     	;# 
   210  0FE7                     	;# 
   211  0FE8                     	;# 
   212  0FE9                     	;# 
   213  0FEA                     	;# 
   214  0FEB                     	;# 
   215  0FED                     	;# 
   216  0FEE                     	;# 
   217  0FEF                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0095                     	;# 
   250  0096                     	;# 
   251  0097                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009A                     	;# 
   255  009B                     	;# 
   256  009B                     	;# 
   257  009C                     	;# 
   258  009D                     	;# 
   259  009E                     	;# 
   260  009F                     	;# 
   261  010C                     	;# 
   262  010D                     	;# 
   263  010E                     	;# 
   264  0111                     	;# 
   265  0112                     	;# 
   266  0113                     	;# 
   267  0114                     	;# 
   268  0115                     	;# 
   269  0116                     	;# 
   270  0117                     	;# 
   271  0118                     	;# 
   272  0119                     	;# 
   273  011D                     	;# 
   274  018C                     	;# 
   275  018D                     	;# 
   276  018E                     	;# 
   277  0191                     	;# 
   278  0191                     	;# 
   279  0192                     	;# 
   280  0193                     	;# 
   281  0193                     	;# 
   282  0194                     	;# 
   283  0195                     	;# 
   284  0196                     	;# 
   285  0197                     	;# 
   286  0199                     	;# 
   287  019A                     	;# 
   288  019B                     	;# 
   289  019C                     	;# 
   290  019D                     	;# 
   291  019E                     	;# 
   292  019F                     	;# 
   293  020C                     	;# 
   294  020D                     	;# 
   295  0211                     	;# 
   296  0211                     	;# 
   297  0212                     	;# 
   298  0212                     	;# 
   299  0213                     	;# 
   300  0213                     	;# 
   301  0214                     	;# 
   302  0214                     	;# 
   303  0215                     	;# 
   304  0215                     	;# 
   305  0215                     	;# 
   306  0216                     	;# 
   307  0216                     	;# 
   308  0217                     	;# 
   309  0217                     	;# 
   310  0391                     	;# 
   311  0392                     	;# 
   312  0393                     	;# 
   313  0394                     	;# 
   314  0395                     	;# 
   315  0396                     	;# 
   316  039A                     	;# 
   317  039B                     	;# 
   318  0611                     	;# 
   319  0612                     	;# 
   320  0613                     	;# 
   321  0613                     	;# 
   322  0614                     	;# 
   323  0615                     	;# 
   324  0616                     	;# 
   325  0616                     	;# 
   326  0691                     	;# 
   327  0692                     	;# 
   328  0693                     	;# 
   329  0694                     	;# 
   330  0695                     	;# 
   331  0E8E                     	;# 
   332  0E8F                     	;# 
   333  0E90                     	;# 
   334  0E91                     	;# 
   335  0E92                     	;# 
   336  0E93                     	;# 
   337  0E94                     	;# 
   338  0E94                     	;# 
   339  0E95                     	;# 
   340  0E96                     	;# 
   341  0E97                     	;# 
   342  0E98                     	;# 
   343  0E99                     	;# 
   344  0E9A                     	;# 
   345  0E9B                     	;# 
   346  0E9C                     	;# 
   347  0E9D                     	;# 
   348  0E9E                     	;# 
   349  0E9F                     	;# 
   350  0FE4                     	;# 
   351  0FE5                     	;# 
   352  0FE6                     	;# 
   353  0FE7                     	;# 
   354  0FE8                     	;# 
   355  0FE9                     	;# 
   356  0FEA                     	;# 
   357  0FEB                     	;# 
   358  0FED                     	;# 
   359  0FEE                     	;# 
   360  0FEF                     	;# 
   361  0000                     	;# 
   362  0001                     	;# 
   363  0002                     	;# 
   364  0003                     	;# 
   365  0004                     	;# 
   366  0005                     	;# 
   367  0006                     	;# 
   368  0007                     	;# 
   369  0008                     	;# 
   370  0009                     	;# 
   371  000A                     	;# 
   372  000B                     	;# 
   373  000C                     	;# 
   374  000D                     	;# 
   375  000E                     	;# 
   376  0011                     	;# 
   377  0012                     	;# 
   378  0015                     	;# 
   379  0016                     	;# 
   380  0016                     	;# 
   381  0017                     	;# 
   382  0018                     	;# 
   383  0019                     	;# 
   384  001A                     	;# 
   385  001B                     	;# 
   386  001C                     	;# 
   387  008C                     	;# 
   388  008D                     	;# 
   389  008E                     	;# 
   390  0091                     	;# 
   391  0092                     	;# 
   392  0095                     	;# 
   393  0096                     	;# 
   394  0097                     	;# 
   395  0098                     	;# 
   396  0099                     	;# 
   397  009A                     	;# 
   398  009B                     	;# 
   399  009B                     	;# 
   400  009C                     	;# 
   401  009D                     	;# 
   402  009E                     	;# 
   403  009F                     	;# 
   404  010C                     	;# 
   405  010D                     	;# 
   406  010E                     	;# 
   407  0111                     	;# 
   408  0112                     	;# 
   409  0113                     	;# 
   410  0114                     	;# 
   411  0115                     	;# 
   412  0116                     	;# 
   413  0117                     	;# 
   414  0118                     	;# 
   415  0119                     	;# 
   416  011D                     	;# 
   417  018C                     	;# 
   418  018D                     	;# 
   419  018E                     	;# 
   420  0191                     	;# 
   421  0191                     	;# 
   422  0192                     	;# 
   423  0193                     	;# 
   424  0193                     	;# 
   425  0194                     	;# 
   426  0195                     	;# 
   427  0196                     	;# 
   428  0197                     	;# 
   429  0199                     	;# 
   430  019A                     	;# 
   431  019B                     	;# 
   432  019C                     	;# 
   433  019D                     	;# 
   434  019E                     	;# 
   435  019F                     	;# 
   436  020C                     	;# 
   437  020D                     	;# 
   438  0211                     	;# 
   439  0211                     	;# 
   440  0212                     	;# 
   441  0212                     	;# 
   442  0213                     	;# 
   443  0213                     	;# 
   444  0214                     	;# 
   445  0214                     	;# 
   446  0215                     	;# 
   447  0215                     	;# 
   448  0215                     	;# 
   449  0216                     	;# 
   450  0216                     	;# 
   451  0217                     	;# 
   452  0217                     	;# 
   453  0391                     	;# 
   454  0392                     	;# 
   455  0393                     	;# 
   456  0394                     	;# 
   457  0395                     	;# 
   458  0396                     	;# 
   459  039A                     	;# 
   460  039B                     	;# 
   461  0611                     	;# 
   462  0612                     	;# 
   463  0613                     	;# 
   464  0613                     	;# 
   465  0614                     	;# 
   466  0615                     	;# 
   467  0616                     	;# 
   468  0616                     	;# 
   469  0691                     	;# 
   470  0692                     	;# 
   471  0693                     	;# 
   472  0694                     	;# 
   473  0695                     	;# 
   474  0E8E                     	;# 
   475  0E8F                     	;# 
   476  0E90                     	;# 
   477  0E91                     	;# 
   478  0E92                     	;# 
   479  0E93                     	;# 
   480  0E94                     	;# 
   481  0E94                     	;# 
   482  0E95                     	;# 
   483  0E96                     	;# 
   484  0E97                     	;# 
   485  0E98                     	;# 
   486  0E99                     	;# 
   487  0E9A                     	;# 
   488  0E9B                     	;# 
   489  0E9C                     	;# 
   490  0E9D                     	;# 
   491  0E9E                     	;# 
   492  0E9F                     	;# 
   493  0FE4                     	;# 
   494  0FE5                     	;# 
   495  0FE6                     	;# 
   496  0FE7                     	;# 
   497  0FE8                     	;# 
   498  0FE9                     	;# 
   499  0FEA                     	;# 
   500  0FEB                     	;# 
   501  0FED                     	;# 
   502  0FEE                     	;# 
   503  0FEF                     	;# 
   504  0000                     	;# 
   505  0001                     	;# 
   506  0002                     	;# 
   507  0003                     	;# 
   508  0004                     	;# 
   509  0005                     	;# 
   510  0006                     	;# 
   511  0007                     	;# 
   512  0008                     	;# 
   513  0009                     	;# 
   514  000A                     	;# 
   515  000B                     	;# 
   516  000C                     	;# 
   517  000D                     	;# 
   518  000E                     	;# 
   519  0011                     	;# 
   520  0012                     	;# 
   521  0015                     	;# 
   522  0016                     	;# 
   523  0016                     	;# 
   524  0017                     	;# 
   525  0018                     	;# 
   526  0019                     	;# 
   527  001A                     	;# 
   528  001B                     	;# 
   529  001C                     	;# 
   530  008C                     	;# 
   531  008D                     	;# 
   532  008E                     	;# 
   533  0091                     	;# 
   534  0092                     	;# 
   535  0095                     	;# 
   536  0096                     	;# 
   537  0097                     	;# 
   538  0098                     	;# 
   539  0099                     	;# 
   540  009A                     	;# 
   541  009B                     	;# 
   542  009B                     	;# 
   543  009C                     	;# 
   544  009D                     	;# 
   545  009E                     	;# 
   546  009F                     	;# 
   547  010C                     	;# 
   548  010D                     	;# 
   549  010E                     	;# 
   550  0111                     	;# 
   551  0112                     	;# 
   552  0113                     	;# 
   553  0114                     	;# 
   554  0115                     	;# 
   555  0116                     	;# 
   556  0117                     	;# 
   557  0118                     	;# 
   558  0119                     	;# 
   559  011D                     	;# 
   560  018C                     	;# 
   561  018D                     	;# 
   562  018E                     	;# 
   563  0191                     	;# 
   564  0191                     	;# 
   565  0192                     	;# 
   566  0193                     	;# 
   567  0193                     	;# 
   568  0194                     	;# 
   569  0195                     	;# 
   570  0196                     	;# 
   571  0197                     	;# 
   572  0199                     	;# 
   573  019A                     	;# 
   574  019B                     	;# 
   575  019C                     	;# 
   576  019D                     	;# 
   577  019E                     	;# 
   578  019F                     	;# 
   579  020C                     	;# 
   580  020D                     	;# 
   581  0211                     	;# 
   582  0211                     	;# 
   583  0212                     	;# 
   584  0212                     	;# 
   585  0213                     	;# 
   586  0213                     	;# 
   587  0214                     	;# 
   588  0214                     	;# 
   589  0215                     	;# 
   590  0215                     	;# 
   591  0215                     	;# 
   592  0216                     	;# 
   593  0216                     	;# 
   594  0217                     	;# 
   595  0217                     	;# 
   596  0391                     	;# 
   597  0392                     	;# 
   598  0393                     	;# 
   599  0394                     	;# 
   600  0395                     	;# 
   601  0396                     	;# 
   602  039A                     	;# 
   603  039B                     	;# 
   604  0611                     	;# 
   605  0612                     	;# 
   606  0613                     	;# 
   607  0613                     	;# 
   608  0614                     	;# 
   609  0615                     	;# 
   610  0616                     	;# 
   611  0616                     	;# 
   612  0691                     	;# 
   613  0692                     	;# 
   614  0693                     	;# 
   615  0694                     	;# 
   616  0695                     	;# 
   617  0E8E                     	;# 
   618  0E8F                     	;# 
   619  0E90                     	;# 
   620  0E91                     	;# 
   621  0E92                     	;# 
   622  0E93                     	;# 
   623  0E94                     	;# 
   624  0E94                     	;# 
   625  0E95                     	;# 
   626  0E96                     	;# 
   627  0E97                     	;# 
   628  0E98                     	;# 
   629  0E99                     	;# 
   630  0E9A                     	;# 
   631  0E9B                     	;# 
   632  0E9C                     	;# 
   633  0E9D                     	;# 
   634  0E9E                     	;# 
   635  0E9F                     	;# 
   636  0FE4                     	;# 
   637  0FE5                     	;# 
   638  0FE6                     	;# 
   639  0FE7                     	;# 
   640  0FE8                     	;# 
   641  0FE9                     	;# 
   642  0FEA                     	;# 
   643  0FEB                     	;# 
   644  0FED                     	;# 
   645  0FEE                     	;# 
   646  0FEF                     	;# 
   647  0000                     	;# 
   648  0001                     	;# 
   649  0002                     	;# 
   650  0003                     	;# 
   651  0004                     	;# 
   652  0005                     	;# 
   653  0006                     	;# 
   654  0007                     	;# 
   655  0008                     	;# 
   656  0009                     	;# 
   657  000A                     	;# 
   658  000B                     	;# 
   659  000C                     	;# 
   660  000D                     	;# 
   661  000E                     	;# 
   662  0011                     	;# 
   663  0012                     	;# 
   664  0015                     	;# 
   665  0016                     	;# 
   666  0016                     	;# 
   667  0017                     	;# 
   668  0018                     	;# 
   669  0019                     	;# 
   670  001A                     	;# 
   671  001B                     	;# 
   672  001C                     	;# 
   673  008C                     	;# 
   674  008D                     	;# 
   675  008E                     	;# 
   676  0091                     	;# 
   677  0092                     	;# 
   678  0095                     	;# 
   679  0096                     	;# 
   680  0097                     	;# 
   681  0098                     	;# 
   682  0099                     	;# 
   683  009A                     	;# 
   684  009B                     	;# 
   685  009B                     	;# 
   686  009C                     	;# 
   687  009D                     	;# 
   688  009E                     	;# 
   689  009F                     	;# 
   690  010C                     	;# 
   691  010D                     	;# 
   692  010E                     	;# 
   693  0111                     	;# 
   694  0112                     	;# 
   695  0113                     	;# 
   696  0114                     	;# 
   697  0115                     	;# 
   698  0116                     	;# 
   699  0117                     	;# 
   700  0118                     	;# 
   701  0119                     	;# 
   702  011D                     	;# 
   703  018C                     	;# 
   704  018D                     	;# 
   705  018E                     	;# 
   706  0191                     	;# 
   707  0191                     	;# 
   708  0192                     	;# 
   709  0193                     	;# 
   710  0193                     	;# 
   711  0194                     	;# 
   712  0195                     	;# 
   713  0196                     	;# 
   714  0197                     	;# 
   715  0199                     	;# 
   716  019A                     	;# 
   717  019B                     	;# 
   718  019C                     	;# 
   719  019D                     	;# 
   720  019E                     	;# 
   721  019F                     	;# 
   722  020C                     	;# 
   723  020D                     	;# 
   724  0211                     	;# 
   725  0211                     	;# 
   726  0212                     	;# 
   727  0212                     	;# 
   728  0213                     	;# 
   729  0213                     	;# 
   730  0214                     	;# 
   731  0214                     	;# 
   732  0215                     	;# 
   733  0215                     	;# 
   734  0215                     	;# 
   735  0216                     	;# 
   736  0216                     	;# 
   737  0217                     	;# 
   738  0217                     	;# 
   739  0391                     	;# 
   740  0392                     	;# 
   741  0393                     	;# 
   742  0394                     	;# 
   743  0395                     	;# 
   744  0396                     	;# 
   745  039A                     	;# 
   746  039B                     	;# 
   747  0611                     	;# 
   748  0612                     	;# 
   749  0613                     	;# 
   750  0613                     	;# 
   751  0614                     	;# 
   752  0615                     	;# 
   753  0616                     	;# 
   754  0616                     	;# 
   755  0691                     	;# 
   756  0692                     	;# 
   757  0693                     	;# 
   758  0694                     	;# 
   759  0695                     	;# 
   760  0E8E                     	;# 
   761  0E8F                     	;# 
   762  0E90                     	;# 
   763  0E91                     	;# 
   764  0E92                     	;# 
   765  0E93                     	;# 
   766  0E94                     	;# 
   767  0E94                     	;# 
   768  0E95                     	;# 
   769  0E96                     	;# 
   770  0E97                     	;# 
   771  0E98                     	;# 
   772  0E99                     	;# 
   773  0E9A                     	;# 
   774  0E9B                     	;# 
   775  0E9C                     	;# 
   776  0E9D                     	;# 
   777  0E9E                     	;# 
   778  0E9F                     	;# 
   779  0FE4                     	;# 
   780  0FE5                     	;# 
   781  0FE6                     	;# 
   782  0FE7                     	;# 
   783  0FE8                     	;# 
   784  0FE9                     	;# 
   785  0FEA                     	;# 
   786  0FEB                     	;# 
   787  0FED                     	;# 
   788  0FEE                     	;# 
   789  0FEF                     	;# 
   790  0000                     	;# 
   791  0001                     	;# 
   792  0002                     	;# 
   793  0003                     	;# 
   794  0004                     	;# 
   795  0005                     	;# 
   796  0006                     	;# 
   797  0007                     	;# 
   798  0008                     	;# 
   799  0009                     	;# 
   800  000A                     	;# 
   801  000B                     	;# 
   802  000C                     	;# 
   803  000D                     	;# 
   804  000E                     	;# 
   805  0011                     	;# 
   806  0012                     	;# 
   807  0015                     	;# 
   808  0016                     	;# 
   809  0016                     	;# 
   810  0017                     	;# 
   811  0018                     	;# 
   812  0019                     	;# 
   813  001A                     	;# 
   814  001B                     	;# 
   815  001C                     	;# 
   816  008C                     	;# 
   817  008D                     	;# 
   818  008E                     	;# 
   819  0091                     	;# 
   820  0092                     	;# 
   821  0095                     	;# 
   822  0096                     	;# 
   823  0097                     	;# 
   824  0098                     	;# 
   825  0099                     	;# 
   826  009A                     	;# 
   827  009B                     	;# 
   828  009B                     	;# 
   829  009C                     	;# 
   830  009D                     	;# 
   831  009E                     	;# 
   832  009F                     	;# 
   833  010C                     	;# 
   834  010D                     	;# 
   835  010E                     	;# 
   836  0111                     	;# 
   837  0112                     	;# 
   838  0113                     	;# 
   839  0114                     	;# 
   840  0115                     	;# 
   841  0116                     	;# 
   842  0117                     	;# 
   843  0118                     	;# 
   844  0119                     	;# 
   845  011D                     	;# 
   846  018C                     	;# 
   847  018D                     	;# 
   848  018E                     	;# 
   849  0191                     	;# 
   850  0191                     	;# 
   851  0192                     	;# 
   852  0193                     	;# 
   853  0193                     	;# 
   854  0194                     	;# 
   855  0195                     	;# 
   856  0196                     	;# 
   857  0197                     	;# 
   858  0199                     	;# 
   859  019A                     	;# 
   860  019B                     	;# 
   861  019C                     	;# 
   862  019D                     	;# 
   863  019E                     	;# 
   864  019F                     	;# 
   865  020C                     	;# 
   866  020D                     	;# 
   867  0211                     	;# 
   868  0211                     	;# 
   869  0212                     	;# 
   870  0212                     	;# 
   871  0213                     	;# 
   872  0213                     	;# 
   873  0214                     	;# 
   874  0214                     	;# 
   875  0215                     	;# 
   876  0215                     	;# 
   877  0215                     	;# 
   878  0216                     	;# 
   879  0216                     	;# 
   880  0217                     	;# 
   881  0217                     	;# 
   882  0391                     	;# 
   883  0392                     	;# 
   884  0393                     	;# 
   885  0394                     	;# 
   886  0395                     	;# 
   887  0396                     	;# 
   888  039A                     	;# 
   889  039B                     	;# 
   890  0611                     	;# 
   891  0612                     	;# 
   892  0613                     	;# 
   893  0613                     	;# 
   894  0614                     	;# 
   895  0615                     	;# 
   896  0616                     	;# 
   897  0616                     	;# 
   898  0691                     	;# 
   899  0692                     	;# 
   900  0693                     	;# 
   901  0694                     	;# 
   902  0695                     	;# 
   903  0E8E                     	;# 
   904  0E8F                     	;# 
   905  0E90                     	;# 
   906  0E91                     	;# 
   907  0E92                     	;# 
   908  0E93                     	;# 
   909  0E94                     	;# 
   910  0E94                     	;# 
   911  0E95                     	;# 
   912  0E96                     	;# 
   913  0E97                     	;# 
   914  0E98                     	;# 
   915  0E99                     	;# 
   916  0E9A                     	;# 
   917  0E9B                     	;# 
   918  0E9C                     	;# 
   919  0E9D                     	;# 
   920  0E9E                     	;# 
   921  0E9F                     	;# 
   922  0FE4                     	;# 
   923  0FE5                     	;# 
   924  0FE6                     	;# 
   925  0FE7                     	;# 
   926  0FE8                     	;# 
   927  0FE9                     	;# 
   928  0FEA                     	;# 
   929  0FEB                     	;# 
   930  0FED                     	;# 
   931  0FEE                     	;# 
   932  0FEF                     	;# 
   933  0000                     	;# 
   934  0001                     	;# 
   935  0002                     	;# 
   936  0003                     	;# 
   937  0004                     	;# 
   938  0005                     	;# 
   939  0006                     	;# 
   940  0007                     	;# 
   941  0008                     	;# 
   942  0009                     	;# 
   943  000A                     	;# 
   944  000B                     	;# 
   945  000C                     	;# 
   946  000D                     	;# 
   947  000E                     	;# 
   948  0011                     	;# 
   949  0012                     	;# 
   950  0015                     	;# 
   951  0016                     	;# 
   952  0016                     	;# 
   953  0017                     	;# 
   954  0018                     	;# 
   955  0019                     	;# 
   956  001A                     	;# 
   957  001B                     	;# 
   958  001C                     	;# 
   959  008C                     	;# 
   960  008D                     	;# 
   961  008E                     	;# 
   962  0091                     	;# 
   963  0092                     	;# 
   964  0095                     	;# 
   965  0096                     	;# 
   966  0097                     	;# 
   967  0098                     	;# 
   968  0099                     	;# 
   969  009A                     	;# 
   970  009B                     	;# 
   971  009B                     	;# 
   972  009C                     	;# 
   973  009D                     	;# 
   974  009E                     	;# 
   975  009F                     	;# 
   976  010C                     	;# 
   977  010D                     	;# 
   978  010E                     	;# 
   979  0111                     	;# 
   980  0112                     	;# 
   981  0113                     	;# 
   982  0114                     	;# 
   983  0115                     	;# 
   984  0116                     	;# 
   985  0117                     	;# 
   986  0118                     	;# 
   987  0119                     	;# 
   988  011D                     	;# 
   989  018C                     	;# 
   990  018D                     	;# 
   991  018E                     	;# 
   992  0191                     	;# 
   993  0191                     	;# 
   994  0192                     	;# 
   995  0193                     	;# 
   996  0193                     	;# 
   997  0194                     	;# 
   998  0195                     	;# 
   999  0196                     	;# 
  1000  0197                     	;# 
  1001  0199                     	;# 
  1002  019A                     	;# 
  1003  019B                     	;# 
  1004  019C                     	;# 
  1005  019D                     	;# 
  1006  019E                     	;# 
  1007  019F                     	;# 
  1008  020C                     	;# 
  1009  020D                     	;# 
  1010  0211                     	;# 
  1011  0211                     	;# 
  1012  0212                     	;# 
  1013  0212                     	;# 
  1014  0213                     	;# 
  1015  0213                     	;# 
  1016  0214                     	;# 
  1017  0214                     	;# 
  1018  0215                     	;# 
  1019  0215                     	;# 
  1020  0215                     	;# 
  1021  0216                     	;# 
  1022  0216                     	;# 
  1023  0217                     	;# 
  1024  0217                     	;# 
  1025  0391                     	;# 
  1026  0392                     	;# 
  1027  0393                     	;# 
  1028  0394                     	;# 
  1029  0395                     	;# 
  1030  0396                     	;# 
  1031  039A                     	;# 
  1032  039B                     	;# 
  1033  0611                     	;# 
  1034  0612                     	;# 
  1035  0613                     	;# 
  1036  0613                     	;# 
  1037  0614                     	;# 
  1038  0615                     	;# 
  1039  0616                     	;# 
  1040  0616                     	;# 
  1041  0691                     	;# 
  1042  0692                     	;# 
  1043  0693                     	;# 
  1044  0694                     	;# 
  1045  0695                     	;# 
  1046  0E8E                     	;# 
  1047  0E8F                     	;# 
  1048  0E90                     	;# 
  1049  0E91                     	;# 
  1050  0E92                     	;# 
  1051  0E93                     	;# 
  1052  0E94                     	;# 
  1053  0E94                     	;# 
  1054  0E95                     	;# 
  1055  0E96                     	;# 
  1056  0E97                     	;# 
  1057  0E98                     	;# 
  1058  0E99                     	;# 
  1059  0E9A                     	;# 
  1060  0E9B                     	;# 
  1061  0E9C                     	;# 
  1062  0E9D                     	;# 
  1063  0E9E                     	;# 
  1064  0E9F                     	;# 
  1065  0FE4                     	;# 
  1066  0FE5                     	;# 
  1067  0FE6                     	;# 
  1068  0FE7                     	;# 
  1069  0FE8                     	;# 
  1070  0FE9                     	;# 
  1071  0FEA                     	;# 
  1072  0FEB                     	;# 
  1073  0FED                     	;# 
  1074  0FEE                     	;# 
  1075  0FEF                     	;# 
  1076  0000                     	;# 
  1077  0001                     	;# 
  1078  0002                     	;# 
  1079  0003                     	;# 
  1080  0004                     	;# 
  1081  0005                     	;# 
  1082  0006                     	;# 
  1083  0007                     	;# 
  1084  0008                     	;# 
  1085  0009                     	;# 
  1086  000A                     	;# 
  1087  000B                     	;# 
  1088  000C                     	;# 
  1089  000D                     	;# 
  1090  000E                     	;# 
  1091  0011                     	;# 
  1092  0012                     	;# 
  1093  0015                     	;# 
  1094  0016                     	;# 
  1095  0016                     	;# 
  1096  0017                     	;# 
  1097  0018                     	;# 
  1098  0019                     	;# 
  1099  001A                     	;# 
  1100  001B                     	;# 
  1101  001C                     	;# 
  1102  008C                     	;# 
  1103  008D                     	;# 
  1104  008E                     	;# 
  1105  0091                     	;# 
  1106  0092                     	;# 
  1107  0095                     	;# 
  1108  0096                     	;# 
  1109  0097                     	;# 
  1110  0098                     	;# 
  1111  0099                     	;# 
  1112  009A                     	;# 
  1113  009B                     	;# 
  1114  009B                     	;# 
  1115  009C                     	;# 
  1116  009D                     	;# 
  1117  009E                     	;# 
  1118  009F                     	;# 
  1119  010C                     	;# 
  1120  010D                     	;# 
  1121  010E                     	;# 
  1122  0111                     	;# 
  1123  0112                     	;# 
  1124  0113                     	;# 
  1125  0114                     	;# 
  1126  0115                     	;# 
  1127  0116                     	;# 
  1128  0117                     	;# 
  1129  0118                     	;# 
  1130  0119                     	;# 
  1131  011D                     	;# 
  1132  018C                     	;# 
  1133  018D                     	;# 
  1134  018E                     	;# 
  1135  0191                     	;# 
  1136  0191                     	;# 
  1137  0192                     	;# 
  1138  0193                     	;# 
  1139  0193                     	;# 
  1140  0194                     	;# 
  1141  0195                     	;# 
  1142  0196                     	;# 
  1143  0197                     	;# 
  1144  0199                     	;# 
  1145  019A                     	;# 
  1146  019B                     	;# 
  1147  019C                     	;# 
  1148  019D                     	;# 
  1149  019E                     	;# 
  1150  019F                     	;# 
  1151  020C                     	;# 
  1152  020D                     	;# 
  1153  0211                     	;# 
  1154  0211                     	;# 
  1155  0212                     	;# 
  1156  0212                     	;# 
  1157  0213                     	;# 
  1158  0213                     	;# 
  1159  0214                     	;# 
  1160  0214                     	;# 
  1161  0215                     	;# 
  1162  0215                     	;# 
  1163  0215                     	;# 
  1164  0216                     	;# 
  1165  0216                     	;# 
  1166  0217                     	;# 
  1167  0217                     	;# 
  1168  0391                     	;# 
  1169  0392                     	;# 
  1170  0393                     	;# 
  1171  0394                     	;# 
  1172  0395                     	;# 
  1173  0396                     	;# 
  1174  039A                     	;# 
  1175  039B                     	;# 
  1176  0611                     	;# 
  1177  0612                     	;# 
  1178  0613                     	;# 
  1179  0613                     	;# 
  1180  0614                     	;# 
  1181  0615                     	;# 
  1182  0616                     	;# 
  1183  0616                     	;# 
  1184  0691                     	;# 
  1185  0692                     	;# 
  1186  0693                     	;# 
  1187  0694                     	;# 
  1188  0695                     	;# 
  1189  0E8E                     	;# 
  1190  0E8F                     	;# 
  1191  0E90                     	;# 
  1192  0E91                     	;# 
  1193  0E92                     	;# 
  1194  0E93                     	;# 
  1195  0E94                     	;# 
  1196  0E94                     	;# 
  1197  0E95                     	;# 
  1198  0E96                     	;# 
  1199  0E97                     	;# 
  1200  0E98                     	;# 
  1201  0E99                     	;# 
  1202  0E9A                     	;# 
  1203  0E9B                     	;# 
  1204  0E9C                     	;# 
  1205  0E9D                     	;# 
  1206  0E9E                     	;# 
  1207  0E9F                     	;# 
  1208  0FE4                     	;# 
  1209  0FE5                     	;# 
  1210  0FE6                     	;# 
  1211  0FE7                     	;# 
  1212  0FE8                     	;# 
  1213  0FE9                     	;# 
  1214  0FEA                     	;# 
  1215  0FEB                     	;# 
  1216  0FED                     	;# 
  1217  0FEE                     	;# 
  1218  0FEF                     	;# 
  1219  0000                     	;# 
  1220  0001                     	;# 
  1221  0002                     	;# 
  1222  0003                     	;# 
  1223  0004                     	;# 
  1224  0005                     	;# 
  1225  0006                     	;# 
  1226  0007                     	;# 
  1227  0008                     	;# 
  1228  0009                     	;# 
  1229  000A                     	;# 
  1230  000B                     	;# 
  1231  000C                     	;# 
  1232  000D                     	;# 
  1233  000E                     	;# 
  1234  0011                     	;# 
  1235  0012                     	;# 
  1236  0015                     	;# 
  1237  0016                     	;# 
  1238  0016                     	;# 
  1239  0017                     	;# 
  1240  0018                     	;# 
  1241  0019                     	;# 
  1242  001A                     	;# 
  1243  001B                     	;# 
  1244  001C                     	;# 
  1245  008C                     	;# 
  1246  008D                     	;# 
  1247  008E                     	;# 
  1248  0091                     	;# 
  1249  0092                     	;# 
  1250  0095                     	;# 
  1251  0096                     	;# 
  1252  0097                     	;# 
  1253  0098                     	;# 
  1254  0099                     	;# 
  1255  009A                     	;# 
  1256  009B                     	;# 
  1257  009B                     	;# 
  1258  009C                     	;# 
  1259  009D                     	;# 
  1260  009E                     	;# 
  1261  009F                     	;# 
  1262  010C                     	;# 
  1263  010D                     	;# 
  1264  010E                     	;# 
  1265  0111                     	;# 
  1266  0112                     	;# 
  1267  0113                     	;# 
  1268  0114                     	;# 
  1269  0115                     	;# 
  1270  0116                     	;# 
  1271  0117                     	;# 
  1272  0118                     	;# 
  1273  0119                     	;# 
  1274  011D                     	;# 
  1275  018C                     	;# 
  1276  018D                     	;# 
  1277  018E                     	;# 
  1278  0191                     	;# 
  1279  0191                     	;# 
  1280  0192                     	;# 
  1281  0193                     	;# 
  1282  0193                     	;# 
  1283  0194                     	;# 
  1284  0195                     	;# 
  1285  0196                     	;# 
  1286  0197                     	;# 
  1287  0199                     	;# 
  1288  019A                     	;# 
  1289  019B                     	;# 
  1290  019C                     	;# 
  1291  019D                     	;# 
  1292  019E                     	;# 
  1293  019F                     	;# 
  1294  020C                     	;# 
  1295  020D                     	;# 
  1296  0211                     	;# 
  1297  0211                     	;# 
  1298  0212                     	;# 
  1299  0212                     	;# 
  1300  0213                     	;# 
  1301  0213                     	;# 
  1302  0214                     	;# 
  1303  0214                     	;# 
  1304  0215                     	;# 
  1305  0215                     	;# 
  1306  0215                     	;# 
  1307  0216                     	;# 
  1308  0216                     	;# 
  1309  0217                     	;# 
  1310  0217                     	;# 
  1311  0391                     	;# 
  1312  0392                     	;# 
  1313  0393                     	;# 
  1314  0394                     	;# 
  1315  0395                     	;# 
  1316  0396                     	;# 
  1317  039A                     	;# 
  1318  039B                     	;# 
  1319  0611                     	;# 
  1320  0612                     	;# 
  1321  0613                     	;# 
  1322  0613                     	;# 
  1323  0614                     	;# 
  1324  0615                     	;# 
  1325  0616                     	;# 
  1326  0616                     	;# 
  1327  0691                     	;# 
  1328  0692                     	;# 
  1329  0693                     	;# 
  1330  0694                     	;# 
  1331  0695                     	;# 
  1332  0E8E                     	;# 
  1333  0E8F                     	;# 
  1334  0E90                     	;# 
  1335  0E91                     	;# 
  1336  0E92                     	;# 
  1337  0E93                     	;# 
  1338  0E94                     	;# 
  1339  0E94                     	;# 
  1340  0E95                     	;# 
  1341  0E96                     	;# 
  1342  0E97                     	;# 
  1343  0E98                     	;# 
  1344  0E99                     	;# 
  1345  0E9A                     	;# 
  1346  0E9B                     	;# 
  1347  0E9C                     	;# 
  1348  0E9D                     	;# 
  1349  0E9E                     	;# 
  1350  0E9F                     	;# 
  1351  0FE4                     	;# 
  1352  0FE5                     	;# 
  1353  0FE6                     	;# 
  1354  0FE7                     	;# 
  1355  0FE8                     	;# 
  1356  0FE9                     	;# 
  1357  0FEA                     	;# 
  1358  0FEB                     	;# 
  1359  0FED                     	;# 
  1360  0FEE                     	;# 
  1361  0FEF                     	;# 
  1362  0000                     	;# 
  1363  0001                     	;# 
  1364  0002                     	;# 
  1365  0003                     	;# 
  1366  0004                     	;# 
  1367  0005                     	;# 
  1368  0006                     	;# 
  1369  0007                     	;# 
  1370  0008                     	;# 
  1371  0009                     	;# 
  1372  000A                     	;# 
  1373  000B                     	;# 
  1374  000C                     	;# 
  1375  000D                     	;# 
  1376  000E                     	;# 
  1377  0011                     	;# 
  1378  0012                     	;# 
  1379  0015                     	;# 
  1380  0016                     	;# 
  1381  0016                     	;# 
  1382  0017                     	;# 
  1383  0018                     	;# 
  1384  0019                     	;# 
  1385  001A                     	;# 
  1386  001B                     	;# 
  1387  001C                     	;# 
  1388  008C                     	;# 
  1389  008D                     	;# 
  1390  008E                     	;# 
  1391  0091                     	;# 
  1392  0092                     	;# 
  1393  0095                     	;# 
  1394  0096                     	;# 
  1395  0097                     	;# 
  1396  0098                     	;# 
  1397  0099                     	;# 
  1398  009A                     	;# 
  1399  009B                     	;# 
  1400  009B                     	;# 
  1401  009C                     	;# 
  1402  009D                     	;# 
  1403  009E                     	;# 
  1404  009F                     	;# 
  1405  010C                     	;# 
  1406  010D                     	;# 
  1407  010E                     	;# 
  1408  0111                     	;# 
  1409  0112                     	;# 
  1410  0113                     	;# 
  1411  0114                     	;# 
  1412  0115                     	;# 
  1413  0116                     	;# 
  1414  0117                     	;# 
  1415  0118                     	;# 
  1416  0119                     	;# 
  1417  011D                     	;# 
  1418  018C                     	;# 
  1419  018D                     	;# 
  1420  018E                     	;# 
  1421  0191                     	;# 
  1422  0191                     	;# 
  1423  0192                     	;# 
  1424  0193                     	;# 
  1425  0193                     	;# 
  1426  0194                     	;# 
  1427  0195                     	;# 
  1428  0196                     	;# 
  1429  0197                     	;# 
  1430  0199                     	;# 
  1431  019A                     	;# 
  1432  019B                     	;# 
  1433  019C                     	;# 
  1434  019D                     	;# 
  1435  019E                     	;# 
  1436  019F                     	;# 
  1437  020C                     	;# 
  1438  020D                     	;# 
  1439  0211                     	;# 
  1440  0211                     	;# 
  1441  0212                     	;# 
  1442  0212                     	;# 
  1443  0213                     	;# 
  1444  0213                     	;# 
  1445  0214                     	;# 
  1446  0214                     	;# 
  1447  0215                     	;# 
  1448  0215                     	;# 
  1449  0215                     	;# 
  1450  0216                     	;# 
  1451  0216                     	;# 
  1452  0217                     	;# 
  1453  0217                     	;# 
  1454  0391                     	;# 
  1455  0392                     	;# 
  1456  0393                     	;# 
  1457  0394                     	;# 
  1458  0395                     	;# 
  1459  0396                     	;# 
  1460  039A                     	;# 
  1461  039B                     	;# 
  1462  0611                     	;# 
  1463  0612                     	;# 
  1464  0613                     	;# 
  1465  0613                     	;# 
  1466  0614                     	;# 
  1467  0615                     	;# 
  1468  0616                     	;# 
  1469  0616                     	;# 
  1470  0691                     	;# 
  1471  0692                     	;# 
  1472  0693                     	;# 
  1473  0694                     	;# 
  1474  0695                     	;# 
  1475  0E8E                     	;# 
  1476  0E8F                     	;# 
  1477  0E90                     	;# 
  1478  0E91                     	;# 
  1479  0E92                     	;# 
  1480  0E93                     	;# 
  1481  0E94                     	;# 
  1482  0E94                     	;# 
  1483  0E95                     	;# 
  1484  0E96                     	;# 
  1485  0E97                     	;# 
  1486  0E98                     	;# 
  1487  0E99                     	;# 
  1488  0E9A                     	;# 
  1489  0E9B                     	;# 
  1490  0E9C                     	;# 
  1491  0E9D                     	;# 
  1492  0E9E                     	;# 
  1493  0E9F                     	;# 
  1494  0FE4                     	;# 
  1495  0FE5                     	;# 
  1496  0FE6                     	;# 
  1497  0FE7                     	;# 
  1498  0FE8                     	;# 
  1499  0FE9                     	;# 
  1500  0FEA                     	;# 
  1501  0FEB                     	;# 
  1502  0FED                     	;# 
  1503  0FEE                     	;# 
  1504  0FEF                     	;# 
  1505  0000                     	;# 
  1506  0001                     	;# 
  1507  0002                     	;# 
  1508  0003                     	;# 
  1509  0004                     	;# 
  1510  0005                     	;# 
  1511  0006                     	;# 
  1512  0007                     	;# 
  1513  0008                     	;# 
  1514  0009                     	;# 
  1515  000A                     	;# 
  1516  000B                     	;# 
  1517  000C                     	;# 
  1518  000D                     	;# 
  1519  000E                     	;# 
  1520  0011                     	;# 
  1521  0012                     	;# 
  1522  0015                     	;# 
  1523  0016                     	;# 
  1524  0016                     	;# 
  1525  0017                     	;# 
  1526  0018                     	;# 
  1527  0019                     	;# 
  1528  001A                     	;# 
  1529  001B                     	;# 
  1530  001C                     	;# 
  1531  008C                     	;# 
  1532  008D                     	;# 
  1533  008E                     	;# 
  1534  0091                     	;# 
  1535  0092                     	;# 
  1536  0095                     	;# 
  1537  0096                     	;# 
  1538  0097                     	;# 
  1539  0098                     	;# 
  1540  0099                     	;# 
  1541  009A                     	;# 
  1542  009B                     	;# 
  1543  009B                     	;# 
  1544  009C                     	;# 
  1545  009D                     	;# 
  1546  009E                     	;# 
  1547  009F                     	;# 
  1548  010C                     	;# 
  1549  010D                     	;# 
  1550  010E                     	;# 
  1551  0111                     	;# 
  1552  0112                     	;# 
  1553  0113                     	;# 
  1554  0114                     	;# 
  1555  0115                     	;# 
  1556  0116                     	;# 
  1557  0117                     	;# 
  1558  0118                     	;# 
  1559  0119                     	;# 
  1560  011D                     	;# 
  1561  018C                     	;# 
  1562  018D                     	;# 
  1563  018E                     	;# 
  1564  0191                     	;# 
  1565  0191                     	;# 
  1566  0192                     	;# 
  1567  0193                     	;# 
  1568  0193                     	;# 
  1569  0194                     	;# 
  1570  0195                     	;# 
  1571  0196                     	;# 
  1572  0197                     	;# 
  1573  0199                     	;# 
  1574  019A                     	;# 
  1575  019B                     	;# 
  1576  019C                     	;# 
  1577  019D                     	;# 
  1578  019E                     	;# 
  1579  019F                     	;# 
  1580  020C                     	;# 
  1581  020D                     	;# 
  1582  0211                     	;# 
  1583  0211                     	;# 
  1584  0212                     	;# 
  1585  0212                     	;# 
  1586  0213                     	;# 
  1587  0213                     	;# 
  1588  0214                     	;# 
  1589  0214                     	;# 
  1590  0215                     	;# 
  1591  0215                     	;# 
  1592  0215                     	;# 
  1593  0216                     	;# 
  1594  0216                     	;# 
  1595  0217                     	;# 
  1596  0217                     	;# 
  1597  0391                     	;# 
  1598  0392                     	;# 
  1599  0393                     	;# 
  1600  0394                     	;# 
  1601  0395                     	;# 
  1602  0396                     	;# 
  1603  039A                     	;# 
  1604  039B                     	;# 
  1605  0611                     	;# 
  1606  0612                     	;# 
  1607  0613                     	;# 
  1608  0613                     	;# 
  1609  0614                     	;# 
  1610  0615                     	;# 
  1611  0616                     	;# 
  1612  0616                     	;# 
  1613  0691                     	;# 
  1614  0692                     	;# 
  1615  0693                     	;# 
  1616  0694                     	;# 
  1617  0695                     	;# 
  1618  0E8E                     	;# 
  1619  0E8F                     	;# 
  1620  0E90                     	;# 
  1621  0E91                     	;# 
  1622  0E92                     	;# 
  1623  0E93                     	;# 
  1624  0E94                     	;# 
  1625  0E94                     	;# 
  1626  0E95                     	;# 
  1627  0E96                     	;# 
  1628  0E97                     	;# 
  1629  0E98                     	;# 
  1630  0E99                     	;# 
  1631  0E9A                     	;# 
  1632  0E9B                     	;# 
  1633  0E9C                     	;# 
  1634  0E9D                     	;# 
  1635  0E9E                     	;# 
  1636  0E9F                     	;# 
  1637  0FE4                     	;# 
  1638  0FE5                     	;# 
  1639  0FE6                     	;# 
  1640  0FE7                     	;# 
  1641  0FE8                     	;# 
  1642  0FE9                     	;# 
  1643  0FEA                     	;# 
  1644  0FEB                     	;# 
  1645  0FED                     	;# 
  1646  0FEE                     	;# 
  1647  0FEF                     	;# 
  1648                           
  1649                           	psect	stringtext
  1650  0300                     __pstringtext:	
  1651  0300                     __stringtab:	
  1652  0300  3400               	retlw	0
  1653  0301                     __end_of__stringtab:	
  1654  0301                     process_level@idx_midi_map:	
  1655  0301  3415               	retlw	21
  1656  0302  3416               	retlw	22
  1657  0303  3417               	retlw	23
  1658  0304  3418               	retlw	24
  1659  0305  3411               	retlw	17
  1660  0306  3412               	retlw	18
  1661  0307  3413               	retlw	19
  1662  0308  3414               	retlw	20
  1663  0309  340D               	retlw	13
  1664  030A  340E               	retlw	14
  1665  030B  340F               	retlw	15
  1666  030C  3410               	retlw	16
  1667  030D  3409               	retlw	9
  1668  030E  340A               	retlw	10
  1669  030F  340B               	retlw	11
  1670  0310  340C               	retlw	12
  1671  0311  3405               	retlw	5
  1672  0312  3406               	retlw	6
  1673  0313  3407               	retlw	7
  1674  0314  3408               	retlw	8
  1675  0315  3401               	retlw	1
  1676  0316  3402               	retlw	2
  1677  0317  3403               	retlw	3
  1678  0318  3404               	retlw	4
  1679  0319  3400               	retlw	0
  1680  031A  3400               	retlw	0
  1681  031B  3400               	retlw	0
  1682  031C  3400               	retlw	0
  1683  031D  3400               	retlw	0
  1684  031E  3400               	retlw	0
  1685  031F  3400               	retlw	0
  1686  0320  3400               	retlw	0
  1687  0321                     __end_ofprocess_level@idx_midi_map:	
  1688  0321                     _USB_SD_Ptr:	
  1689  0321  34F2               	retlw	low (_sd000| (0+32768))
  1690  0322  3483               	retlw	high (_sd000| (0+32768))
  1691  0323  3492               	retlw	low (_sd001| (0+32768))
  1692  0324  3483               	retlw	high (_sd001| (0+32768))
  1693  0325  34C6               	retlw	low (_sd002| (0+32768))
  1694  0326  3483               	retlw	high (_sd002| (0+32768))
  1695  0327                     __end_of_USB_SD_Ptr:	
  1696  0327                     _USB_CD_Ptr:	
  1697  0327  342D               	retlw	low (_configDescriptor1| (0+32768))
  1698  0328  3483               	retlw	high (_configDescriptor1| (0+32768))
  1699  0329                     __end_of_USB_CD_Ptr:	
  1700  0329                     process_level@L:	
  1701  0329  340A               	retlw	10
  1702  032A                     __end_ofprocess_level@L:	
  1703  032A                     process_level@key_off_threshold:	
  1704  032A  3405               	retlw	5
  1705  032B                     __end_ofprocess_level@key_off_threshold:	
  1706  032B                     process_level@key_on_threshold:	
  1707  032B  3407               	retlw	7
  1708  032C                     __end_ofprocess_level@key_on_threshold:	
  1709  032C                     process_level@midi_shift:	
  1710  032C  342F               	retlw	47
  1711  032D                     __end_ofprocess_level@midi_shift:	
  1712  032D                     _configDescriptor1:	
  1713  032D  3409               	retlw	9
  1714  032E  3402               	retlw	2
  1715  032F  3465               	retlw	101
  1716  0330  3400               	retlw	0
  1717  0331  3402               	retlw	2
  1718  0332  3401               	retlw	1
  1719  0333  3400               	retlw	0
  1720  0334  34C0               	retlw	192
  1721  0335  3432               	retlw	50
  1722  0336  3409               	retlw	9
  1723  0337  3404               	retlw	4
  1724  0338  3400               	retlw	0
  1725  0339  3400               	retlw	0
  1726  033A  3400               	retlw	0
  1727  033B  3401               	retlw	1
  1728  033C  3401               	retlw	1
  1729  033D  3400               	retlw	0
  1730  033E  3400               	retlw	0
  1731  033F  3409               	retlw	9
  1732  0340  3424               	retlw	36
  1733  0341  3401               	retlw	1
  1734  0342  3400               	retlw	0
  1735  0343  3401               	retlw	1
  1736  0344  3409               	retlw	9
  1737  0345  3400               	retlw	0
  1738  0346  3401               	retlw	1
  1739  0347  3401               	retlw	1
  1740  0348  3409               	retlw	9
  1741  0349  3404               	retlw	4
  1742  034A  3401               	retlw	1
  1743  034B  3400               	retlw	0
  1744  034C  3402               	retlw	2
  1745  034D  3401               	retlw	1
  1746  034E  3403               	retlw	3
  1747  034F  3400               	retlw	0
  1748  0350  3400               	retlw	0
  1749  0351  3407               	retlw	7
  1750  0352  3424               	retlw	36
  1751  0353  3401               	retlw	1
  1752  0354  3400               	retlw	0
  1753  0355  3401               	retlw	1
  1754  0356  3441               	retlw	65
  1755  0357  3400               	retlw	0
  1756  0358  3406               	retlw	6
  1757  0359  3424               	retlw	36
  1758  035A  3402               	retlw	2
  1759  035B  3401               	retlw	1
  1760  035C  3401               	retlw	1
  1761  035D  3400               	retlw	0
  1762  035E  3406               	retlw	6
  1763  035F  3424               	retlw	36
  1764  0360  3402               	retlw	2
  1765  0361  3402               	retlw	2
  1766  0362  3402               	retlw	2
  1767  0363  3400               	retlw	0
  1768  0364  3409               	retlw	9
  1769  0365  3424               	retlw	36
  1770  0366  3403               	retlw	3
  1771  0367  3401               	retlw	1
  1772  0368  3403               	retlw	3
  1773  0369  3401               	retlw	1
  1774  036A  3402               	retlw	2
  1775  036B  3401               	retlw	1
  1776  036C  3400               	retlw	0
  1777  036D  3409               	retlw	9
  1778  036E  3424               	retlw	36
  1779  036F  3403               	retlw	3
  1780  0370  3402               	retlw	2
  1781  0371  3404               	retlw	4
  1782  0372  3401               	retlw	1
  1783  0373  3401               	retlw	1
  1784  0374  3401               	retlw	1
  1785  0375  3400               	retlw	0
  1786  0376  3409               	retlw	9
  1787  0377  3405               	retlw	5
  1788  0378  3401               	retlw	1
  1789  0379  3402               	retlw	2
  1790  037A  3440               	retlw	64
  1791  037B  3400               	retlw	0
  1792  037C  3400               	retlw	0
  1793  037D  3400               	retlw	0
  1794  037E  3400               	retlw	0
  1795  037F  3405               	retlw	5
  1796  0380  3425               	retlw	37
  1797  0381  3401               	retlw	1
  1798  0382  3401               	retlw	1
  1799  0383  3401               	retlw	1
  1800  0384  3409               	retlw	9
  1801  0385  3405               	retlw	5
  1802  0386  3481               	retlw	129
  1803  0387  3402               	retlw	2
  1804  0388  3440               	retlw	64
  1805  0389  3400               	retlw	0
  1806  038A  3400               	retlw	0
  1807  038B  3400               	retlw	0
  1808  038C  3400               	retlw	0
  1809  038D  3405               	retlw	5
  1810  038E  3425               	retlw	37
  1811  038F  3401               	retlw	1
  1812  0390  3401               	retlw	1
  1813  0391  3403               	retlw	3
  1814  0392                     __end_of_configDescriptor1:	
  1815  0392                     _sd001:	
  1816  0392  3434               	retlw	52
  1817  0393  3403               	retlw	3
  1818  0394  344D               	retlw	77
  1819  0395  3400               	retlw	0
  1820  0396  3469               	retlw	105
  1821  0397  3400               	retlw	0
  1822  0398  3463               	retlw	99
  1823  0399  3400               	retlw	0
  1824  039A  3472               	retlw	114
  1825  039B  3400               	retlw	0
  1826  039C  346F               	retlw	111
  1827  039D  3400               	retlw	0
  1828  039E  3463               	retlw	99
  1829  039F  3400               	retlw	0
  1830  03A0  3468               	retlw	104
  1831  03A1  3400               	retlw	0
  1832  03A2  3469               	retlw	105
  1833  03A3  3400               	retlw	0
  1834  03A4  3470               	retlw	112
  1835  03A5  3400               	retlw	0
  1836  03A6  3420               	retlw	32
  1837  03A7  3400               	retlw	0
  1838  03A8  3454               	retlw	84
  1839  03A9  3400               	retlw	0
  1840  03AA  3465               	retlw	101
  1841  03AB  3400               	retlw	0
  1842  03AC  3463               	retlw	99
  1843  03AD  3400               	retlw	0
  1844  03AE  3468               	retlw	104
  1845  03AF  3400               	retlw	0
  1846  03B0  346E               	retlw	110
  1847  03B1  3400               	retlw	0
  1848  03B2  346F               	retlw	111
  1849  03B3  3400               	retlw	0
  1850  03B4  346C               	retlw	108
  1851  03B5  3400               	retlw	0
  1852  03B6  346F               	retlw	111
  1853  03B7  3400               	retlw	0
  1854  03B8  3467               	retlw	103
  1855  03B9  3400               	retlw	0
  1856  03BA  3479               	retlw	121
  1857  03BB  3400               	retlw	0
  1858  03BC  3420               	retlw	32
  1859  03BD  3400               	retlw	0
  1860  03BE  3449               	retlw	73
  1861  03BF  3400               	retlw	0
  1862  03C0  346E               	retlw	110
  1863  03C1  3400               	retlw	0
  1864  03C2  3463               	retlw	99
  1865  03C3  3400               	retlw	0
  1866  03C4  342E               	retlw	46
  1867  03C5  3400               	retlw	0
  1868  03C6                     __end_of_sd001:	
  1869  03C6                     _sd002:	
  1870  03C6  341A               	retlw	26
  1871  03C7  3403               	retlw	3
  1872  03C8  344D               	retlw	77
  1873  03C9  3400               	retlw	0
  1874  03CA  3449               	retlw	73
  1875  03CB  3400               	retlw	0
  1876  03CC  3444               	retlw	68
  1877  03CD  3400               	retlw	0
  1878  03CE  3449               	retlw	73
  1879  03CF  3400               	retlw	0
  1880  03D0  3420               	retlw	32
  1881  03D1  3400               	retlw	0
  1882  03D2  3445               	retlw	69
  1883  03D3  3400               	retlw	0
  1884  03D4  3478               	retlw	120
  1885  03D5  3400               	retlw	0
  1886  03D6  3461               	retlw	97
  1887  03D7  3400               	retlw	0
  1888  03D8  346D               	retlw	109
  1889  03D9  3400               	retlw	0
  1890  03DA  3470               	retlw	112
  1891  03DB  3400               	retlw	0
  1892  03DC  346C               	retlw	108
  1893  03DD  3400               	retlw	0
  1894  03DE  3465               	retlw	101
  1895  03DF  3400               	retlw	0
  1896  03E0                     __end_of_sd002:	
  1897  03E0                     _device_dsc:	
  1898  03E0  3412               	retlw	18
  1899  03E1  3401               	retlw	1
  1900  03E2  3400               	retlw	0
  1901  03E3  3402               	retlw	2
  1902  03E4  3400               	retlw	0
  1903  03E5  3400               	retlw	0
  1904  03E6  3400               	retlw	0
  1905  03E7  3408               	retlw	8
  1906  03E8  34D8               	retlw	216
  1907  03E9  3404               	retlw	4
  1908  03EA  3459               	retlw	89
  1909  03EB  3400               	retlw	0
  1910  03EC  3402               	retlw	2
  1911  03ED  3400               	retlw	0
  1912  03EE  3401               	retlw	1
  1913  03EF  3402               	retlw	2
  1914  03F0  3400               	retlw	0
  1915  03F1  3401               	retlw	1
  1916  03F2                     __end_of_device_dsc:	
  1917  03F2                     _sd000:	
  1918  03F2  3404               	retlw	4
  1919  03F3  3403               	retlw	3
  1920  03F4  3409               	retlw	9
  1921  03F5  3404               	retlw	4
  1922  03F6                     __end_of_sd000:	
  1923  000B                     _INTCONbits	set	11
  1924  0012                     _PIR2bits	set	18
  1925  000C                     _PORTAbits	set	12
  1926  0015                     _TMR0	set	21
  1927  009D                     _ADCON0	set	157
  1928  009D                     _ADCON0bits	set	157
  1929  009E                     _ADCON1	set	158
  1930  009E                     _ADCON1bits	set	158
  1931  009F                     _ADCON2	set	159
  1932  009F                     _ADCON2bits	set	159
  1933  009C                     _ADRESH	set	156
  1934  009B                     _ADRESL	set	155
  1935  0095                     _OPTION_REGbits	set	149
  1936  0099                     _OSCCON	set	153
  1937  0091                     _PIE1bits	set	145
  1938  0092                     _PIE2bits	set	146
  1939  008C                     _TRISAbits	set	140
  1940  008D                     _TRISBbits	set	141
  1941  008E                     _TRISCbits	set	142
  1942  010E                     _LATCbits	set	270
  1943  018C                     _ANSELA	set	396
  1944  018C                     _ANSELAbits	set	396
  1945  018D                     _ANSELBbits	set	397
  1946  018E                     _ANSELCbits	set	398
  1947  019F                     _BAUDCON	set	415
  1948  0199                     _RCREG	set	409
  1949  019D                     _RCSTA	set	413
  1950  019D                     _RCSTAbits	set	413
  1951  019A                     _TXREG	set	410
  1952  019E                     _TXSTA	set	414
  1953  039B                     _ACTCON	set	923
  1954  0E96                     _UADDR	set	3734
  1955  0E91                     _UCFG	set	3729
  1956  0E8E                     _UCON	set	3726
  1957  0E8E                     _UCONbits	set	3726
  1958  0E97                     _UEIE	set	3735
  1959  0E93                     _UEIR	set	3731
  1960  0E98                     _UEP0bits	set	3736
  1961  0E92                     _UIE	set	3730
  1962  0E92                     _UIEbits	set	3730
  1963  0E90                     _UIR	set	3728
  1964  0E90                     _UIRbits	set	3728
  1965  0E8F                     _USTAT	set	3727
  1966  0E98                     _UEP0	set	3736
  1967  0E99                     _UEP1	set	3737
  1968                           
  1969                           ; #config settings
  1970  0000                     
  1971                           	psect	cinit
  1972  0A92                     start_initialization:	
  1973  0A92                     __initialization:	
  1974                           
  1975                           ; Clear objects allocated to COMMON
  1976  0A92  01FC               	clrf	__pbssCOMMON& (0+127)
  1977                           
  1978                           ; Clear objects allocated to BANK0
  1979  0A93  01EB               	clrf	__pbssBANK0& (0+127)
  1980  0A94  01EC               	clrf	(__pbssBANK0+1)& (0+127)
  1981  0A95  01ED               	clrf	(__pbssBANK0+2)& (0+127)
  1982  0A96  01EE               	clrf	(__pbssBANK0+3)& (0+127)
  1983  0A97  01EF               	clrf	(__pbssBANK0+4)& (0+127)
  1984                           
  1985                           ; Clear objects allocated to BANK1
  1986  0A98  30E0               	movlw	low __pbssBANK1
  1987  0A99  0084               	movwf	4
  1988  0A9A  3000               	movlw	high __pbssBANK1
  1989  0A9B  0085               	movwf	5
  1990  0A9C  3010               	movlw	16
  1991  0A9D  3188  20EE  318A   	fcall	clear_ram0
  1992                           
  1993                           ; Clear objects allocated to BANK2
  1994  0AA0  3020               	movlw	low __pbssBANK2
  1995  0AA1  0084               	movwf	4
  1996  0AA2  3001               	movlw	high __pbssBANK2
  1997  0AA3  0085               	movwf	5
  1998  0AA4  3043               	movlw	67
  1999  0AA5  3188  20EE  318A   	fcall	clear_ram0
  2000                           
  2001                           ; Clear objects allocated to BANK3
  2002  0AA8  30A4               	movlw	low __pbssBANK3
  2003  0AA9  0084               	movwf	4
  2004  0AAA  3001               	movlw	high __pbssBANK3
  2005  0AAB  0085               	movwf	5
  2006  0AAC  3040               	movlw	64
  2007  0AAD  3188  20EE  318A   	fcall	clear_ram0
  2008                           
  2009                           ; Clear objects allocated to BANK4
  2010  0AB0  3020               	movlw	low __pbssBANK4
  2011  0AB1  0084               	movwf	4
  2012  0AB2  3002               	movlw	high __pbssBANK4
  2013  0AB3  0085               	movwf	5
  2014  0AB4  3020               	movlw	32
  2015  0AB5  3188  20EE         	fcall	clear_ram0
  2016  0AB7                     end_of_initialization:	
  2017                           ;End of C runtime variable initialization code
  2018                           
  2019  0AB7                     __end_of__initialization:	
  2020  0AB7  0020               	movlb	0
  2021  0AB8  3189  2948         	ljmp	_main	;jump to C main() function
  2022                           
  2023                           	psect	bssCOMMON
  2024  007C                     __pbssCOMMON:	
  2025  007C                     _pBDTEntryEP0OutNext:	
  2026  007C                     	ds	1
  2027                           
  2028                           	psect	bssBANK0
  2029  006B                     __pbssBANK0:	
  2030  006B                     _pBDTEntryIn:	
  2031  006B                     	ds	2
  2032  006D                     _USBDeviceState:	
  2033  006D                     	ds	1
  2034  006E                     _pBDTEntryEP0OutCurrent:	
  2035  006E                     	ds	1
  2036  006F                     _USTATcopy:	
  2037  006F                     	ds	1
  2038                           
  2039                           	psect	bssBANK1
  2040  00E0                     __pbssBANK1:	
  2041  00E0                     APP_LEDUpdateUSBStatus@ledCount:	
  2042  00E0                     	ds	2
  2043  00E2                     _USBDeferStatusStagePacket:	
  2044  00E2                     	ds	1
  2045  00E3                     _USBTxHandle:	
  2046  00E3                     	ds	1
  2047  00E4                     _controlTransferState:	
  2048  00E4                     	ds	1
  2049  00E5                     _msCounter:	
  2050  00E5                     	ds	1
  2051  00E6                     _pitch:	
  2052  00E6                     	ds	1
  2053  00E7                     _shortPacketStatus:	
  2054  00E7                     	ds	1
  2055  00E8                     store_key_level@idx_key:	
  2056  00E8                     	ds	1
  2057  00E9                     _inPipes:	
  2058  00E9                     	ds	5
  2059  00EE                     _USBActiveConfiguration:	
  2060  00EE                     	ds	1
  2061  00EF                     _USBAlternateInterface:	
  2062  00EF                     	ds	1
  2063                           
  2064                           	psect	bssBANK2
  2065  0120                     __pbssBANK2:	
  2066  0120                     process_level@key_states:	
  2067  0120                     	ds	32
  2068  0140                     _outPipes:	
  2069  0140                     	ds	6
  2070  0146                     _USB1msTickCount:	
  2071  0146                     	ds	4
  2072  014A                     _ep_data_in:	
  2073  014A                     	ds	2
  2074  014C                     _ep_data_out:	
  2075  014C                     	ds	2
  2076  014E                     _note_event:	
  2077  014E                     	ds	2
  2078  0150                     _pBDTEntryOut:	
  2079  0150                     	ds	2
  2080  0152                     _BothEP0OutUOWNsSet:	
  2081  0152                     	ds	1
  2082  0153                     _RemoteWakeup:	
  2083  0153                     	ds	1
  2084  0154                     _USBBusIsSuspended:	
  2085  0154                     	ds	1
  2086  0155                     _USBDeferINDataStagePackets:	
  2087  0155                     	ds	1
  2088  0156                     _USBDeferOUTDataStagePackets:	
  2089  0156                     	ds	1
  2090  0157                     _USBRxHandle:	
  2091  0157                     	ds	1
  2092  0158                     _USBStatusStageEnabledFlag1:	
  2093  0158                     	ds	1
  2094  0159                     _USBStatusStageEnabledFlag2:	
  2095  0159                     	ds	1
  2096  015A                     _USBStatusStageTimeoutCounter:	
  2097  015A                     	ds	1
  2098  015B                     _USBTicksSinceSuspendEnd:	
  2099  015B                     	ds	1
  2100  015C                     _endpoint_number:	
  2101  015C                     	ds	1
  2102  015D                     _is_initialized:	
  2103  015D                     	ds	1
  2104  015E                     _pDst:	
  2105  015E                     	ds	1
  2106  015F                     _sentNoteOff:	
  2107  015F                     	ds	1
  2108  0160                     _wait_timer:	
  2109  0160                     	ds	1
  2110  0161                     is_end_of_scan@scan_counter:	
  2111  0161                     	ds	1
  2112  0162                     scan_task@state:	
  2113  0162                     	ds	1
  2114                           
  2115                           	psect	bssBANK3
  2116  01A4                     __pbssBANK3:	
  2117  01A4                     process_level@key_off_counter:	
  2118  01A4                     	ds	32
  2119  01C4                     process_level@key_on_counter:	
  2120  01C4                     	ds	32
  2121                           
  2122                           	psect	bssBANK4
  2123  0220                     __pbssBANK4:	
  2124  0220                     _adc_levels:	
  2125  0220                     	ds	32
  2126                           
  2127                           	psect	clrtext
  2128  08EE                     clear_ram0:	
  2129                           ;	Called with FSR0 containing the base address, and
  2130                           ;	WREG with the size to clear
  2131                           
  2132  08EE  0064               	clrwdt	;clear the watchdog before getting into this loop
  2133  08EF                     clrloop0:	
  2134  08EF  0180               	clrf	0	;clear RAM location pointed to by FSR
  2135  08F0  3101               	addfsr 0,1
  2136  08F1  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2137  08F2  28EF               	goto	clrloop0	;have we reached the end yet?
  2138  08F3  3400               	retlw	0	;all done for this memory range, return
  2139                           
  2140                           	psect	cstackCOMMON
  2141  0070                     __pcstackCOMMON:	
  2142  0070                     ?_LED_Off:	
  2143  0070                     ?_LED_On:	
  2144                           ; 0 bytes @ 0x0
  2145                           
  2146  0070                     ?_SYSTEM_Initialize:	
  2147                           ; 0 bytes @ 0x0
  2148                           
  2149  0070                     ?_USBDeviceInit:	
  2150                           ; 0 bytes @ 0x0
  2151                           
  2152  0070                     ?_USBDeviceTasks:	
  2153                           ; 0 bytes @ 0x0
  2154                           
  2155  0070                     ?_APP_DeviceAudioMIDITasks:	
  2156                           ; 0 bytes @ 0x0
  2157                           
  2158  0070                     ?_APP_DeviceAudioMIDISOFHandler:	
  2159                           ; 0 bytes @ 0x0
  2160                           
  2161  0070                     ?_APP_DeviceAudioMIDIInitialize:	
  2162                           ; 0 bytes @ 0x0
  2163                           
  2164  0070                     ?_LED_Enable:	
  2165                           ; 0 bytes @ 0x0
  2166                           
  2167  0070                     ?_BUTTON_Enable:	
  2168                           ; 0 bytes @ 0x0
  2169                           
  2170  0070                     ?_USBWakeFromSuspend:	
  2171                           ; 0 bytes @ 0x0
  2172                           
  2173  0070                     ?_USBSuspend:	
  2174                           ; 0 bytes @ 0x0
  2175                           
  2176  0070                     ?_USBIncrement1msInternalTimers:	
  2177                           ; 0 bytes @ 0x0
  2178                           
  2179  0070                     ?_USBCtrlEPAllowStatusStage:	
  2180                           ; 0 bytes @ 0x0
  2181                           
  2182  0070                     ?_USBStallHandler:	
  2183                           ; 0 bytes @ 0x0
  2184                           
  2185  0070                     ?_USBCtrlEPService:	
  2186                           ; 0 bytes @ 0x0
  2187                           
  2188  0070                     ?_USBCtrlTrfTxService:	
  2189                           ; 0 bytes @ 0x0
  2190                           
  2191  0070                     ?_USBCtrlTrfSetupHandler:	
  2192                           ; 0 bytes @ 0x0
  2193                           
  2194  0070                     ?_USBCtrlTrfOutHandler:	
  2195                           ; 0 bytes @ 0x0
  2196                           
  2197  0070                     ?_USBCtrlTrfInHandler:	
  2198                           ; 0 bytes @ 0x0
  2199                           
  2200  0070                     ?_USBCheckStdRequest:	
  2201                           ; 0 bytes @ 0x0
  2202                           
  2203  0070                     ?_USBStdFeatureReqHandler:	
  2204                           ; 0 bytes @ 0x0
  2205                           
  2206  0070                     ?_APP_LEDUpdateUSBStatus:	
  2207                           ; 0 bytes @ 0x0
  2208                           
  2209  0070                     ?_main:	
  2210                           ; 0 bytes @ 0x0
  2211                           
  2212  0070                     ?_scan_init:	
  2213                           ; 0 bytes @ 0x0
  2214                           
  2215  0070                     ?_set_timer:	
  2216                           ; 0 bytes @ 0x0
  2217                           
  2218  0070                     ?_run_adc:	
  2219                           ; 0 bytes @ 0x0
  2220                           
  2221  0070                     ?_SYS_InterruptHigh:	
  2222                           ; 0 bytes @ 0x0
  2223                           
  2224  0070                     ??_SYS_InterruptHigh:	
  2225                           ; 0 bytes @ 0x0
  2226                           
  2227  0070                     ?_USBCtrlEPAllowDataStage:	
  2228                           ; 0 bytes @ 0x0
  2229                           
  2230  0070                     ?_USBCtrlEPServiceComplete:	
  2231                           ; 0 bytes @ 0x0
  2232                           
  2233  0070                     ?_USBCtrlTrfRxService:	
  2234                           ; 0 bytes @ 0x0
  2235                           
  2236  0070                     ?_USBStdSetCfgHandler:	
  2237                           ; 0 bytes @ 0x0
  2238                           
  2239  0070                     ?_USBStdGetDscHandler:	
  2240                           ; 0 bytes @ 0x0
  2241                           
  2242  0070                     ?_USBStdGetStatusHandler:	
  2243                           ; 0 bytes @ 0x0
  2244                           
  2245  0070                     ?_BUTTON_IsPressed:	
  2246                           ; 0 bytes @ 0x0
  2247                           
  2248  0070                     ?_waiting_for_timer:	
  2249                           ; 1 bytes @ 0x0
  2250                           
  2251  0070                     ?_get_data:	
  2252                           ; 1 bytes @ 0x0
  2253                           
  2254  0070                     ?_is_end_of_scan:	
  2255                           ; 1 bytes @ 0x0
  2256                           
  2257  0070                     ?_is_adc_ready:	
  2258                           ; 1 bytes @ 0x0
  2259                           
  2260  0070                     ?_get_adc:	
  2261                           ; 1 bytes @ 0x0
  2262                           
  2263                           
  2264                           ; 1 bytes @ 0x0
  2265  0070                     	ds	1
  2266  0071                     ??_LED_Off:	
  2267  0071                     ??_LED_On:	
  2268                           ; 0 bytes @ 0x1
  2269                           
  2270  0071                     ??_USBDeviceInit:	
  2271                           ; 0 bytes @ 0x1
  2272                           
  2273  0071                     ??_APP_DeviceAudioMIDISOFHandler:	
  2274                           ; 0 bytes @ 0x1
  2275                           
  2276  0071                     ??_BUTTON_IsPressed:	
  2277                           ; 0 bytes @ 0x1
  2278                           
  2279  0071                     ??_LED_Enable:	
  2280                           ; 0 bytes @ 0x1
  2281                           
  2282  0071                     ??_BUTTON_Enable:	
  2283                           ; 0 bytes @ 0x1
  2284                           
  2285  0071                     ??_USBIncrement1msInternalTimers:	
  2286                           ; 0 bytes @ 0x1
  2287                           
  2288  0071                     ??_USBCtrlEPAllowStatusStage:	
  2289                           ; 0 bytes @ 0x1
  2290                           
  2291  0071                     ??_USBStallHandler:	
  2292                           ; 0 bytes @ 0x1
  2293                           
  2294  0071                     ?_USBConfigureEndpoint:	
  2295                           ; 0 bytes @ 0x1
  2296                           
  2297  0071                     ??_USBCtrlTrfTxService:	
  2298                           ; 0 bytes @ 0x1
  2299                           
  2300  0071                     ??_scan_init:	
  2301                           ; 0 bytes @ 0x1
  2302                           
  2303  0071                     ??_set_timer:	
  2304                           ; 0 bytes @ 0x1
  2305                           
  2306  0071                     ??_waiting_for_timer:	
  2307                           ; 0 bytes @ 0x1
  2308                           
  2309  0071                     ?_set_clock_and_data:	
  2310                           ; 0 bytes @ 0x1
  2311                           
  2312  0071                     ??_get_data:	
  2313                           ; 0 bytes @ 0x1
  2314                           
  2315  0071                     ??_is_end_of_scan:	
  2316                           ; 0 bytes @ 0x1
  2317                           
  2318  0071                     ??_run_adc:	
  2319                           ; 0 bytes @ 0x1
  2320                           
  2321  0071                     ??_is_adc_ready:	
  2322                           ; 0 bytes @ 0x1
  2323                           
  2324  0071                     ??_get_adc:	
  2325                           ; 0 bytes @ 0x1
  2326                           
  2327  0071                     ??_USBStdGetDscHandler:	
  2328                           ; 0 bytes @ 0x1
  2329                           
  2330  0071                     ??_USBStdGetStatusHandler:	
  2331                           ; 0 bytes @ 0x1
  2332                           
  2333  0071                     ?_USBTransferOnePacket:	
  2334                           ; 0 bytes @ 0x1
  2335                           
  2336  0071                     ?_memset:	
  2337                           ; 1 bytes @ 0x1
  2338                           
  2339  0071                     _waiting_for_timer$796:	
  2340                           ; 1 bytes @ 0x1
  2341                           
  2342  0071                     set_clock_and_data@d:	
  2343                           ; 1 bytes @ 0x1
  2344                           
  2345  0071                     BUTTON_IsPressed@button:	
  2346                           ; 1 bytes @ 0x1
  2347                           
  2348  0071                     BUTTON_Enable@button:	
  2349                           ; 1 bytes @ 0x1
  2350                           
  2351  0071                     LED_On@led:	
  2352                           ; 1 bytes @ 0x1
  2353                           
  2354  0071                     LED_Off@led:	
  2355                           ; 1 bytes @ 0x1
  2356                           
  2357  0071                     LED_Enable@led:	
  2358                           ; 1 bytes @ 0x1
  2359                           
  2360  0071                     USBTransferOnePacket@dir:	
  2361                           ; 1 bytes @ 0x1
  2362                           
  2363  0071                     USBConfigureEndpoint@direction:	
  2364                           ; 1 bytes @ 0x1
  2365                           
  2366  0071                     memset@c:	
  2367                           ; 1 bytes @ 0x1
  2368                           
  2369                           
  2370                           ; 2 bytes @ 0x1
  2371  0071                     	ds	1
  2372  0072                     ??_SYSTEM_Initialize:	
  2373  0072                     ??_USBConfigureEndpoint:	
  2374                           ; 0 bytes @ 0x2
  2375                           
  2376  0072                     ??_APP_LEDUpdateUSBStatus:	
  2377                           ; 0 bytes @ 0x2
  2378                           
  2379  0072                     ??_set_clock_and_data:	
  2380                           ; 0 bytes @ 0x2
  2381                           
  2382  0072                     ?_process_level:	
  2383                           ; 0 bytes @ 0x2
  2384                           
  2385  0072                     process_level@old_level:	
  2386                           ; 0 bytes @ 0x2
  2387                           
  2388  0072                     SYSTEM_Initialize@state:	
  2389                           ; 1 bytes @ 0x2
  2390                           
  2391  0072                     USBStdGetStatusHandler@p:	
  2392                           ; 1 bytes @ 0x2
  2393                           
  2394  0072                     USBTransferOnePacket@data:	
  2395                           ; 1 bytes @ 0x2
  2396                           
  2397                           
  2398                           ; 2 bytes @ 0x2
  2399  0072                     	ds	1
  2400  0073                     ??_USBCtrlTrfRxService:	
  2401  0073                     set_clock_and_data@c:	
  2402                           ; 0 bytes @ 0x3
  2403                           
  2404  0073                     is_end_of_scan@res:	
  2405                           ; 1 bytes @ 0x3
  2406                           
  2407  0073                     process_level@new_level:	
  2408                           ; 1 bytes @ 0x3
  2409                           
  2410  0073                     USBCtrlTrfTxService@byteToSend:	
  2411                           ; 1 bytes @ 0x3
  2412                           
  2413  0073                     USBDeviceInit@p:	
  2414                           ; 1 bytes @ 0x3
  2415                           
  2416  0073                     memset@n:	
  2417                           ; 2 bytes @ 0x3
  2418                           
  2419                           
  2420                           ; 2 bytes @ 0x3
  2421  0073                     	ds	1
  2422  0074                     ??_USBCtrlTrfInHandler:	
  2423  0074                     ??_process_level:	
  2424                           ; 0 bytes @ 0x4
  2425                           
  2426  0074                     ??_USBCtrlEPAllowDataStage:	
  2427                           ; 0 bytes @ 0x4
  2428                           
  2429  0074                     USBTransferOnePacket@len:	
  2430                           ; 0 bytes @ 0x4
  2431                           
  2432                           
  2433                           ; 1 bytes @ 0x4
  2434  0074                     	ds	1
  2435  0075                     ??_USBTransferOnePacket:	
  2436  0075                     ??_memset:	
  2437                           ; 0 bytes @ 0x5
  2438                           
  2439  0075                     USBDeviceInit@i_1706:	
  2440                           ; 0 bytes @ 0x5
  2441                           
  2442  0075                     USBCtrlTrfRxService@i:	
  2443                           ; 1 bytes @ 0x5
  2444                           
  2445                           
  2446                           ; 1 bytes @ 0x5
  2447  0075                     	ds	1
  2448  0076                     ??_USBCtrlEPServiceComplete:	
  2449  0076                     USBDeviceInit@i:	
  2450                           ; 0 bytes @ 0x6
  2451                           
  2452  0076                     USBConfigureEndpoint@EPNum:	
  2453                           ; 1 bytes @ 0x6
  2454                           
  2455  0076                     USBCtrlTrfRxService@byteToRead:	
  2456                           ; 1 bytes @ 0x6
  2457                           
  2458  0076                     USBCtrlTrfInHandler@lastDTS:	
  2459                           ; 1 bytes @ 0x6
  2460                           
  2461  0076                     memset@p1:	
  2462                           ; 1 bytes @ 0x6
  2463                           
  2464                           
  2465                           ; 1 bytes @ 0x6
  2466  0076                     	ds	1
  2467  0077                     ??_USBCtrlTrfOutHandler:	
  2468  0077                     ?_store_key_level:	
  2469                           ; 0 bytes @ 0x7
  2470                           
  2471  0077                     store_key_level@end_of_scan:	
  2472                           ; 1 bytes @ 0x7
  2473                           
  2474  0077                     USBTransferOnePacket@ep:	
  2475                           ; 1 bytes @ 0x7
  2476                           
  2477  0077                     USBConfigureEndpoint@handle:	
  2478                           ; 1 bytes @ 0x7
  2479                           
  2480  0077                     memset@p:	
  2481                           ; 1 bytes @ 0x7
  2482                           
  2483                           
  2484                           ; 1 bytes @ 0x7
  2485  0077                     	ds	1
  2486  0078                     ?_USBEnableEndpoint:	
  2487  0078                     ??_store_key_level:	
  2488                           ; 0 bytes @ 0x8
  2489                           
  2490  0078                     USBEnableEndpoint@options:	
  2491                           ; 0 bytes @ 0x8
  2492                           
  2493  0078                     USBTransferOnePacket@handle:	
  2494                           ; 1 bytes @ 0x8
  2495                           
  2496                           
  2497                           ; 1 bytes @ 0x8
  2498  0078                     	ds	1
  2499  0079                     ??_USBEnableEndpoint:	
  2500                           
  2501                           ; 0 bytes @ 0x9
  2502  0079                     	ds	1
  2503  007A                     store_key_level@level:	
  2504                           
  2505                           ; 1 bytes @ 0xA
  2506  007A                     	ds	1
  2507  007B                     ??_scan_task:	
  2508  007B                     ??_USBWakeFromSuspend:	
  2509                           ; 0 bytes @ 0xB
  2510                           
  2511  007B                     ??_USBSuspend:	
  2512                           ; 0 bytes @ 0xB
  2513                           
  2514  007B                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2515                           ; 0 bytes @ 0xB
  2516                           
  2517  007B                     ??_USBStdSetCfgHandler:	
  2518                           ; 0 bytes @ 0xB
  2519                           
  2520                           
  2521                           ; 0 bytes @ 0xB
  2522  007B                     	ds	1
  2523  007C                     ??_main:	
  2524                           
  2525                           	psect	cstackBANK0
  2526  0050                     __pcstackBANK0:	
  2527                           ; 0 bytes @ 0xC
  2528                           
  2529  0050                     process_level@old_state:	
  2530  0050                     USBEnableEndpoint@p:	
  2531                           ; 2 bytes @ 0x0
  2532                           
  2533                           
  2534                           ; 2 bytes @ 0x0
  2535  0050                     	ds	2
  2536  0052                     USBEnableEndpoint@ep:	
  2537  0052                     process_level@current_state:	
  2538                           ; 1 bytes @ 0x2
  2539                           
  2540                           
  2541                           ; 2 bytes @ 0x2
  2542  0052                     	ds	1
  2543  0053                     ??_APP_DeviceAudioMIDIInitialize:	
  2544                           
  2545                           ; 0 bytes @ 0x3
  2546  0053                     	ds	1
  2547  0054                     _process_level$834:	
  2548                           
  2549                           ; 2 bytes @ 0x4
  2550  0054                     	ds	1
  2551  0055                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  2552  0055                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2553                           ; 1 bytes @ 0x5
  2554                           
  2555                           
  2556                           ; 2 bytes @ 0x5
  2557  0055                     	ds	1
  2558  0056                     process_level@off_flag:	
  2559                           
  2560                           ; 1 bytes @ 0x6
  2561  0056                     	ds	1
  2562  0057                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2563  0057                     _process_level$833:	
  2564                           ; 1 bytes @ 0x7
  2565                           
  2566                           
  2567                           ; 1 bytes @ 0x7
  2568  0057                     	ds	1
  2569  0058                     process_level@on_flag:	
  2570  0058                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2571                           ; 1 bytes @ 0x8
  2572                           
  2573                           
  2574                           ; 2 bytes @ 0x8
  2575  0058                     	ds	1
  2576  0059                     process_level@filtered_state:	
  2577                           
  2578                           ; 1 bytes @ 0x9
  2579  0059                     	ds	1
  2580  005A                     ??_USBStdFeatureReqHandler:	
  2581  005A                     process_level@idx_key:	
  2582                           ; 0 bytes @ 0xA
  2583                           
  2584  005A                     USBStdSetCfgHandler@p:	
  2585                           ; 1 bytes @ 0xA
  2586                           
  2587                           
  2588                           ; 2 bytes @ 0xA
  2589  005A                     	ds	1
  2590  005B                     ?_scan_task:	
  2591  005B                     scan_task@velocity:	
  2592                           ; 1 bytes @ 0xB
  2593                           
  2594                           
  2595                           ; 1 bytes @ 0xB
  2596  005B                     	ds	1
  2597  005C                     USBStdSetCfgHandler@i_2034:	
  2598  005C                     _scan_task$844:	
  2599                           ; 1 bytes @ 0xC
  2600                           
  2601  005C                     USBStdFeatureReqHandler@pUEP:	
  2602                           ; 2 bytes @ 0xC
  2603                           
  2604                           
  2605                           ; 2 bytes @ 0xC
  2606  005C                     	ds	1
  2607  005D                     USBStdSetCfgHandler@i:	
  2608                           
  2609                           ; 1 bytes @ 0xD
  2610  005D                     	ds	1
  2611  005E                     USBStdFeatureReqHandler@current_ep_data:	
  2612  005E                     _scan_task$845:	
  2613                           ; 1 bytes @ 0xE
  2614                           
  2615                           
  2616                           ; 2 bytes @ 0xE
  2617  005E                     	ds	1
  2618  005F                     USBStdFeatureReqHandler@p:	
  2619                           
  2620                           ; 1 bytes @ 0xF
  2621  005F                     	ds	1
  2622  0060                     ??_USBCheckStdRequest:	
  2623  0060                     scan_task@note:	
  2624                           ; 0 bytes @ 0x10
  2625                           
  2626                           
  2627                           ; 1 bytes @ 0x10
  2628  0060                     	ds	1
  2629  0061                     ??_APP_DeviceAudioMIDITasks:	
  2630  0061                     ??_USBCtrlTrfSetupHandler:	
  2631                           ; 0 bytes @ 0x11
  2632                           
  2633                           
  2634                           ; 0 bytes @ 0x11
  2635  0061                     	ds	1
  2636  0062                     ??_USBCtrlEPService:	
  2637                           
  2638                           ; 0 bytes @ 0x12
  2639  0062                     	ds	1
  2640  0063                     _APP_DeviceAudioMIDITasks$396:	
  2641                           
  2642                           ; 2 bytes @ 0x13
  2643  0063                     	ds	2
  2644  0065                     USBCtrlEPService@setup_cnt:	
  2645  0065                     _APP_DeviceAudioMIDITasks$437:	
  2646                           ; 1 bytes @ 0x15
  2647                           
  2648                           
  2649                           ; 2 bytes @ 0x15
  2650  0065                     	ds	1
  2651  0066                     ??_USBDeviceTasks:	
  2652                           
  2653                           ; 0 bytes @ 0x16
  2654  0066                     	ds	1
  2655  0067                     _APP_DeviceAudioMIDITasks$438:	
  2656                           
  2657                           ; 2 bytes @ 0x17
  2658  0067                     	ds	1
  2659  0068                     USBDeviceTasks@i:	
  2660                           
  2661                           ; 1 bytes @ 0x18
  2662  0068                     	ds	1
  2663  0069                     APP_DeviceAudioMIDITasks@scan_pitch:	
  2664                           
  2665                           ; 1 bytes @ 0x19
  2666  0069                     	ds	1
  2667  006A                     APP_DeviceAudioMIDITasks@velocity:	
  2668                           
  2669                           ; 1 bytes @ 0x1A
  2670  006A                     	ds	1
  2671                           
  2672                           	psect	maintext
  2673  0948                     __pmaintext:	
  2674 ;;
  2675 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2676 ;;
  2677 ;; *************** function _main *****************
  2678 ;; Defined at:
  2679 ;;		line 35 in file "../src/main.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;		None
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;		None
  2684 ;; Return value:  Size  Location     Type
  2685 ;;		None               void
  2686 ;; Registers used:
  2687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2688 ;; Tracked objects:
  2689 ;;		On entry : 17F/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2697 ;;Total ram usage:        0 bytes
  2698 ;; Hardware stack levels required when called:   10
  2699 ;; This function calls:
  2700 ;;		_SYSTEM_Initialize
  2701 ;;		_USBDeviceInit
  2702 ;;		_USBDeviceTasks
  2703 ;;		_APP_DeviceAudioMIDITasks
  2704 ;; This function is called by:
  2705 ;;		Startup code after reset
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           
  2710                           ;psect for function _main
  2711  0948                     _main:	
  2712                           
  2713                           ;main.c: 36: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  2714                           
  2715                           ;incstack = 0
  2716                           ; Regs used in _main: [allreg]
  2717  0948  3000               	movlw	0
  2718  0949  3189  21F3  3189   	fcall	_SYSTEM_Initialize
  2719                           
  2720                           ;main.c: 38: USBDeviceInit();
  2721  094C  3185  25BB  3189   	fcall	_USBDeviceInit
  2722  094F                     l4200:	
  2723                           ;main.c: 39: ;
  2724                           ;main.c: 41: while(1)
  2725                           
  2726                           ;main.c: 75: {
  2727                           ;main.c: 77: continue;
  2728                           
  2729                           ;main.c: 65: {
  2730                           ;main.c: 67: continue;
  2731                           
  2732                           
  2733                           ;main.c: 42: {
  2734                           ;main.c: 43: ;
  2735                           ;main.c: 58: USBDeviceTasks();
  2736  094F  3183  23F6  3189   	fcall	_USBDeviceTasks
  2737                           
  2738                           ;main.c: 64: if( USBDeviceState < CONFIGURED_STATE )
  2739  0952  3020               	movlw	32
  2740  0953  0020               	movlb	0	; select bank0
  2741  0954  026D               	subwf	_USBDeviceState,w
  2742  0955  1C03               	btfss	3,0
  2743  0956  294F               	goto	l4200
  2744                           
  2745                           ;main.c: 68: }
  2746                           ;main.c: 74: if( UCONbits.SUSPND == 1 )
  2747  0957  003D               	movlb	29	; select bank29
  2748  0958  188E               	btfsc	14,1	;volatile
  2749  0959  294F               	goto	l4200
  2750                           
  2751                           ;main.c: 78: }
  2752                           ;main.c: 81: APP_DeviceAudioMIDITasks();
  2753  095A  3180  200D  3189   	fcall	_APP_DeviceAudioMIDITasks
  2754  095D  294F               	goto	l4200
  2755  095E                     __end_of_main:	
  2756                           
  2757                           	psect	text1
  2758  000D                     __ptext1:	
  2759 ;; *************** function _APP_DeviceAudioMIDITasks *****************
  2760 ;; Defined at:
  2761 ;;		line 58 in file "../src/app_device_audio_midi.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;		None
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;  velocity        1   26[BANK0 ] unsigned char 
  2766 ;;  scan_pitch      1   25[BANK0 ] unsigned char 
  2767 ;; Return value:  Size  Location     Type
  2768 ;;		None               void
  2769 ;; Registers used:
  2770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2777 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2778 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2779 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2780 ;;Total ram usage:       10 bytes
  2781 ;; Hardware stack levels used:    1
  2782 ;; Hardware stack levels required when called:    5
  2783 ;; This function calls:
  2784 ;;		_USBTransferOnePacket
  2785 ;;		_scan_task
  2786 ;;		_BUTTON_IsPressed
  2787 ;; This function is called by:
  2788 ;;		_main
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           
  2793                           ;psect for function _APP_DeviceAudioMIDITasks
  2794  000D                     _APP_DeviceAudioMIDITasks:	
  2795                           
  2796                           ;app_device_audio_midi.c: 59: if( USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND)
  2797                           
  2798                           ;incstack = 0
  2799                           ; Regs used in _APP_DeviceAudioMIDITasks: [allreg]
  2800  000D  3020               	movlw	32
  2801  000E  0020               	movlb	0	; select bank0
  2802  000F  026D               	subwf	_USBDeviceState,w
  2803  0010  1C03               	skipc
  2804  0011  0008               	return
  2805  0012  003D               	movlb	29	; select bank29
  2806  0013  188E               	btfsc	14,1	;volatile
  2807  0014  0008               	return
  2808                           
  2809                           ;app_device_audio_midi.c: 62: if(!(USBRxHandle==0?0:((volatile BDT_ENTRY*)USBRxHandle)->
      +                          STAT.UOWN))
  2810                           
  2811                           ;app_device_audio_midi.c: 60: return;
  2812  0015  0022               	movlb	2	; select bank2
  2813  0016  0857               	movf	_USBRxHandle^(0+256),w
  2814  0017  1903               	btfsc	3,2
  2815  0018  2827               	goto	l3064
  2816  0019  0857               	movf	_USBRxHandle^(0+256),w
  2817  001A  0086               	movwf	6
  2818  001B  0187               	clrf	7
  2819  001C  0D01               	rlf	1,w
  2820  001D  0D01               	rlf	1,w
  2821  001E  3901               	andlw	1
  2822  001F  0020               	movlb	0	; select bank0
  2823  0020  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  2824  0021  01E2               	clrf	??_APP_DeviceAudioMIDITasks+1
  2825  0022  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  2826  0023  00E3               	movwf	_APP_DeviceAudioMIDITasks$396
  2827  0024  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  2828  0025  00E4               	movwf	_APP_DeviceAudioMIDITasks$396+1
  2829  0026  282A               	goto	l3066
  2830  0027                     l3064:	
  2831  0027  0020               	movlb	0	; select bank0
  2832  0028  01E3               	clrf	_APP_DeviceAudioMIDITasks$396
  2833  0029  01E4               	clrf	_APP_DeviceAudioMIDITasks$396+1
  2834  002A                     l3066:	
  2835  002A  0864               	movf	_APP_DeviceAudioMIDITasks$396+1,w
  2836  002B  0463               	iorwf	_APP_DeviceAudioMIDITasks$396,w
  2837  002C  1D03               	skipz
  2838  002D  2840               	goto	l3070
  2839                           
  2840                           ;app_device_audio_midi.c: 63: {
  2841                           ;app_device_audio_midi.c: 70: USBRxHandle = USBTransferOnePacket(1,0,(uint8_t*)&Received
      +                          DataBuffer,64);
  2842  002E  01F1               	clrf	?_USBTransferOnePacket
  2843  002F  30A0               	movlw	160
  2844  0030  00F2               	movwf	?_USBTransferOnePacket+1
  2845  0031  3000               	movlw	0
  2846  0032  00F3               	movwf	?_USBTransferOnePacket+2
  2847  0033  3040               	movlw	64
  2848  0034  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  2849  0035  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  2850  0036  00F4               	movwf	?_USBTransferOnePacket+3
  2851  0037  3001               	movlw	1
  2852  0038  3187  27AF  3180   	fcall	_USBTransferOnePacket
  2853  003B  0020               	movlb	0	; select bank0
  2854  003C  00E2               	movwf	??_APP_DeviceAudioMIDITasks+1
  2855  003D  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  2856  003E  0022               	movlb	2	; select bank2
  2857  003F  00D7               	movwf	_USBRxHandle^(0+256)
  2858  0040                     l3070:	
  2859                           
  2860                           ;app_device_audio_midi.c: 71: }
  2861                           ;app_device_audio_midi.c: 73: {
  2862                           ;app_device_audio_midi.c: 74: uint8_t scan_pitch = 0x3C, velocity = 0;
  2863  0040  303C               	movlw	60
  2864  0041  0020               	movlb	0	; select bank0
  2865  0042  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  2866  0043  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  2867  0044  00E9               	movwf	APP_DeviceAudioMIDITasks@scan_pitch
  2868  0045  01EA               	clrf	APP_DeviceAudioMIDITasks@velocity
  2869                           
  2870                           ;app_device_audio_midi.c: 75: if (scan_task(&scan_pitch, &velocity)) {
  2871  0046  306A               	movlw	APP_DeviceAudioMIDITasks@velocity& (0+255)
  2872  0047  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  2873  0048  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  2874  0049  00DB               	movwf	?_scan_task
  2875  004A  3069               	movlw	APP_DeviceAudioMIDITasks@scan_pitch& (0+255)
  2876  004B  3186  2667  3180   	fcall	_scan_task
  2877  004E  3A00               	xorlw	0
  2878  004F  1903               	skipnz
  2879  0050  2886               	goto	l3084
  2880                           
  2881                           ;app_device_audio_midi.c: 76: midiData.Val = 0;
  2882  0051  3000               	movlw	0
  2883  0052  0023               	movlb	3	; select bank3
  2884  0053  00A3               	movwf	35
  2885  0054  3000               	movlw	0
  2886  0055  00A2               	movwf	34
  2887  0056  3000               	movlw	0
  2888  0057  00A1               	movwf	33
  2889  0058  3000               	movlw	0
  2890  0059  00A0               	movwf	32
  2891                           
  2892                           ;app_device_audio_midi.c: 77: midiData.CableNumber = 0;
  2893  005A  300F               	movlw	-241
  2894  005B  05A0               	andwf	32,f
  2895                           
  2896                           ;app_device_audio_midi.c: 78: midiData.CodeIndexNumber = 0x9;
  2897  005C  0820               	movf	32,w
  2898  005D  39F0               	andlw	-16
  2899  005E  3809               	iorlw	9
  2900  005F  00A0               	movwf	32
  2901                           
  2902                           ;app_device_audio_midi.c: 79: midiData.DATA_0 = 0x90;
  2903  0060  3090               	movlw	144
  2904  0061  0020               	movlb	0	; select bank0
  2905  0062  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  2906  0063  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  2907  0064  0023               	movlb	3	; select bank3
  2908  0065  00A1               	movwf	33
  2909                           
  2910                           ;app_device_audio_midi.c: 80: midiData.DATA_1 = scan_pitch;
  2911  0066  0020               	movlb	0	; select bank0
  2912  0067  0869               	movf	APP_DeviceAudioMIDITasks@scan_pitch,w
  2913  0068  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  2914  0069  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  2915  006A  0023               	movlb	3	; select bank3
  2916  006B  00A2               	movwf	34
  2917                           
  2918                           ;app_device_audio_midi.c: 81: midiData.DATA_2 = velocity;
  2919  006C  0020               	movlb	0	; select bank0
  2920  006D  086A               	movf	APP_DeviceAudioMIDITasks@velocity,w
  2921  006E  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  2922  006F  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  2923  0070  0023               	movlb	3	; select bank3
  2924  0071  00A3               	movwf	35
  2925                           
  2926                           ;app_device_audio_midi.c: 82: USBTxHandle = USBTransferOnePacket(1,1,(uint8_t*)&midiData
      +                          ,4);
  2927  0072  01F1               	clrf	?_USBTransferOnePacket
  2928  0073  0AF1               	incf	?_USBTransferOnePacket,f
  2929  0074  30A0               	movlw	160
  2930  0075  00F2               	movwf	?_USBTransferOnePacket+1
  2931  0076  3001               	movlw	1
  2932  0077  00F3               	movwf	?_USBTransferOnePacket+2
  2933  0078  3004               	movlw	4
  2934  0079  0020               	movlb	0	; select bank0
  2935  007A  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  2936  007B  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  2937  007C  00F4               	movwf	?_USBTransferOnePacket+3
  2938  007D  3001               	movlw	1
  2939  007E  3187  27AF  3180   	fcall	_USBTransferOnePacket
  2940  0081  0020               	movlb	0	; select bank0
  2941  0082  00E2               	movwf	??_APP_DeviceAudioMIDITasks+1
  2942  0083  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  2943  0084  0021               	movlb	1	; select bank1
  2944  0085  00E3               	movwf	_USBTxHandle^(0+128)
  2945  0086                     l3084:	
  2946                           
  2947                           ;app_device_audio_midi.c: 83: }
  2948                           ;app_device_audio_midi.c: 84: }
  2949                           ;app_device_audio_midi.c: 87: if(BUTTON_IsPressed(BUTTON_S1))
  2950  0086  3001               	movlw	1
  2951  0087  3189  2135  3180   	fcall	_BUTTON_IsPressed
  2952  008A  3A00               	xorlw	0
  2953  008B  1903               	skipnz
  2954  008C  28EB               	goto	l3108
  2955                           
  2956                           ;app_device_audio_midi.c: 88: {
  2957                           ;app_device_audio_midi.c: 92: if(msCounter == 0 && sentNoteOff && !(USBTxHandle==0?0:((v
      +                          olatile BDT_ENTRY*)USBTxHandle)->STAT.UOWN)) {
  2958  008D  0021               	movlb	1	; select bank1
  2959  008E  08E5               	movf	_msCounter^(0+128),f
  2960  008F  1D03               	skipz
  2961  0090  0008               	return
  2962  0091  0022               	movlb	2	; select bank2
  2963  0092  085F               	movf	_sentNoteOff^(0+256),w
  2964  0093  1903               	btfsc	3,2
  2965  0094  0008               	return
  2966  0095  0021               	movlb	1	; select bank1
  2967  0096  0863               	movf	_USBTxHandle^(0+128),w
  2968  0097  1903               	btfsc	3,2
  2969  0098  28A7               	goto	l3094
  2970  0099  0863               	movf	_USBTxHandle^(0+128),w
  2971  009A  0086               	movwf	6
  2972  009B  0187               	clrf	7
  2973  009C  0D01               	rlf	1,w
  2974  009D  0D01               	rlf	1,w
  2975  009E  3901               	andlw	1
  2976  009F  0020               	movlb	0	; select bank0
  2977  00A0  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  2978  00A1  01E2               	clrf	??_APP_DeviceAudioMIDITasks+1
  2979  00A2  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  2980  00A3  00E5               	movwf	_APP_DeviceAudioMIDITasks$437
  2981  00A4  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  2982  00A5  00E6               	movwf	_APP_DeviceAudioMIDITasks$437+1
  2983  00A6  28AA               	goto	l3096
  2984  00A7                     l3094:	
  2985  00A7  0020               	movlb	0	; select bank0
  2986  00A8  01E5               	clrf	_APP_DeviceAudioMIDITasks$437
  2987  00A9  01E6               	clrf	_APP_DeviceAudioMIDITasks$437+1
  2988  00AA                     l3096:	
  2989  00AA  0866               	movf	_APP_DeviceAudioMIDITasks$437+1,w
  2990  00AB  0465               	iorwf	_APP_DeviceAudioMIDITasks$437,w
  2991  00AC  1D03               	skipz
  2992  00AD  0008               	return
  2993                           
  2994                           ;app_device_audio_midi.c: 94: msCounter = 100;
  2995  00AE  3064               	movlw	100
  2996  00AF  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  2997  00B0  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  2998  00B1  0021               	movlb	1	; select bank1
  2999  00B2  00E5               	movwf	_msCounter^(0+128)
  3000                           
  3001                           ;app_device_audio_midi.c: 95: midiData.Val = 0;
  3002  00B3  3000               	movlw	0
  3003  00B4  0023               	movlb	3	; select bank3
  3004  00B5  00A3               	movwf	35
  3005  00B6  3000               	movlw	0
  3006  00B7  00A2               	movwf	34
  3007  00B8  3000               	movlw	0
  3008  00B9  00A1               	movwf	33
  3009  00BA  3000               	movlw	0
  3010  00BB  00A0               	movwf	32
  3011                           
  3012                           ;app_device_audio_midi.c: 97: midiData.CableNumber = 0;
  3013  00BC  300F               	movlw	-241
  3014  00BD  05A0               	andwf	32,f
  3015                           
  3016                           ;app_device_audio_midi.c: 98: midiData.CodeIndexNumber = 0x9;
  3017  00BE  0820               	movf	32,w
  3018  00BF  39F0               	andlw	-16
  3019  00C0  3809               	iorlw	9
  3020  00C1  00A0               	movwf	32
  3021                           
  3022                           ;app_device_audio_midi.c: 99: midiData.DATA_0 = 0x90;
  3023  00C2  3090               	movlw	144
  3024  00C3  0020               	movlb	0	; select bank0
  3025  00C4  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  3026  00C5  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  3027  00C6  0023               	movlb	3	; select bank3
  3028  00C7  00A1               	movwf	33
  3029                           
  3030                           ;app_device_audio_midi.c: 100: midiData.DATA_1 = pitch;
  3031  00C8  0021               	movlb	1	; select bank1
  3032  00C9  0866               	movf	_pitch^(0+128),w
  3033  00CA  0020               	movlb	0	; select bank0
  3034  00CB  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  3035  00CC  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  3036  00CD  0023               	movlb	3	; select bank3
  3037  00CE  00A2               	movwf	34
  3038                           
  3039                           ;app_device_audio_midi.c: 101: midiData.DATA_2 = 0x7F;
  3040  00CF  307F               	movlw	127
  3041  00D0  0020               	movlb	0	; select bank0
  3042  00D1  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  3043  00D2  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  3044  00D3  0023               	movlb	3	; select bank3
  3045  00D4  00A3               	movwf	35
  3046                           
  3047                           ;app_device_audio_midi.c: 102: USBTxHandle = USBTransferOnePacket(1,1,(uint8_t*)&midiDat
      +                          a,4);
  3048  00D5  01F1               	clrf	?_USBTransferOnePacket
  3049  00D6  0AF1               	incf	?_USBTransferOnePacket,f
  3050  00D7  30A0               	movlw	160
  3051  00D8  00F2               	movwf	?_USBTransferOnePacket+1
  3052  00D9  3001               	movlw	1
  3053  00DA  00F3               	movwf	?_USBTransferOnePacket+2
  3054  00DB  3004               	movlw	4
  3055  00DC  0020               	movlb	0	; select bank0
  3056  00DD  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  3057  00DE  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  3058  00DF  00F4               	movwf	?_USBTransferOnePacket+3
  3059  00E0  3001               	movlw	1
  3060  00E1  3187  27AF         	fcall	_USBTransferOnePacket
  3061  00E3  0020               	movlb	0	; select bank0
  3062  00E4  00E2               	movwf	??_APP_DeviceAudioMIDITasks+1
  3063  00E5  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  3064  00E6  0021               	movlb	1	; select bank1
  3065  00E7  00E3               	movwf	_USBTxHandle^(0+128)
  3066                           
  3067                           ;app_device_audio_midi.c: 104: sentNoteOff = 0;
  3068  00E8  0022               	movlb	2	; select bank2
  3069  00E9  01DF               	clrf	_sentNoteOff^(0+256)
  3070                           
  3071                           ;app_device_audio_midi.c: 105: }
  3072                           ;app_device_audio_midi.c: 106: }
  3073  00EA  0008               	return
  3074  00EB                     l3108:	
  3075                           
  3076                           ;app_device_audio_midi.c: 107: else if (msCounter == 0 && !sentNoteOff && !(USBTxHandle=
      +                          =0?0:((volatile BDT_ENTRY*)USBTxHandle)->STAT.UOWN)) {
  3077  00EB  0021               	movlb	1	; select bank1
  3078  00EC  08E5               	movf	_msCounter^(0+128),f
  3079  00ED  1D03               	skipz
  3080  00EE  0008               	return
  3081  00EF  0022               	movlb	2	; select bank2
  3082  00F0  08DF               	movf	_sentNoteOff^(0+256),f
  3083  00F1  1D03               	skipz
  3084  00F2  0008               	return
  3085  00F3  0021               	movlb	1	; select bank1
  3086  00F4  0863               	movf	_USBTxHandle^(0+128),w
  3087  00F5  1903               	btfsc	3,2
  3088  00F6  2905               	goto	l3116
  3089  00F7  0863               	movf	_USBTxHandle^(0+128),w
  3090  00F8  0086               	movwf	6
  3091  00F9  0187               	clrf	7
  3092  00FA  0D01               	rlf	1,w
  3093  00FB  0D01               	rlf	1,w
  3094  00FC  3901               	andlw	1
  3095  00FD  0020               	movlb	0	; select bank0
  3096  00FE  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  3097  00FF  01E2               	clrf	??_APP_DeviceAudioMIDITasks+1
  3098  0100  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  3099  0101  00E7               	movwf	_APP_DeviceAudioMIDITasks$438
  3100  0102  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  3101  0103  00E8               	movwf	_APP_DeviceAudioMIDITasks$438+1
  3102  0104  2908               	goto	l3118
  3103  0105                     l3116:	
  3104  0105  0020               	movlb	0	; select bank0
  3105  0106  01E7               	clrf	_APP_DeviceAudioMIDITasks$438
  3106  0107  01E8               	clrf	_APP_DeviceAudioMIDITasks$438+1
  3107  0108                     l3118:	
  3108  0108  0868               	movf	_APP_DeviceAudioMIDITasks$438+1,w
  3109  0109  0467               	iorwf	_APP_DeviceAudioMIDITasks$438,w
  3110  010A  1D03               	skipz
  3111  010B  0008               	return
  3112                           
  3113                           ;app_device_audio_midi.c: 109: msCounter = 100;
  3114  010C  3064               	movlw	100
  3115  010D  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  3116  010E  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  3117  010F  0021               	movlb	1	; select bank1
  3118  0110  00E5               	movwf	_msCounter^(0+128)
  3119                           
  3120                           ;app_device_audio_midi.c: 110: midiData.Val = 0;
  3121  0111  3000               	movlw	0
  3122  0112  0023               	movlb	3	; select bank3
  3123  0113  00A3               	movwf	35
  3124  0114  3000               	movlw	0
  3125  0115  00A2               	movwf	34
  3126  0116  3000               	movlw	0
  3127  0117  00A1               	movwf	33
  3128  0118  3000               	movlw	0
  3129  0119  00A0               	movwf	32
  3130                           
  3131                           ;app_device_audio_midi.c: 112: midiData.CableNumber = 0;
  3132  011A  300F               	movlw	-241
  3133  011B  05A0               	andwf	32,f
  3134                           
  3135                           ;app_device_audio_midi.c: 113: midiData.CodeIndexNumber = 0x9;
  3136  011C  0820               	movf	32,w
  3137  011D  39F0               	andlw	-16
  3138  011E  3809               	iorlw	9
  3139  011F  00A0               	movwf	32
  3140                           
  3141                           ;app_device_audio_midi.c: 114: midiData.DATA_0 = 0x90;
  3142  0120  3090               	movlw	144
  3143  0121  0020               	movlb	0	; select bank0
  3144  0122  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  3145  0123  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  3146  0124  0023               	movlb	3	; select bank3
  3147  0125  00A1               	movwf	33
  3148                           
  3149                           ;app_device_audio_midi.c: 115: midiData.DATA_1 = pitch++;
  3150  0126  0021               	movlb	1	; select bank1
  3151  0127  0866               	movf	_pitch^(0+128),w
  3152  0128  0020               	movlb	0	; select bank0
  3153  0129  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  3154  012A  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  3155  012B  0023               	movlb	3	; select bank3
  3156  012C  00A2               	movwf	34
  3157  012D  3001               	movlw	1
  3158  012E  0020               	movlb	0	; select bank0
  3159  012F  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  3160  0130  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  3161  0131  0021               	movlb	1	; select bank1
  3162  0132  07E6               	addwf	_pitch^(0+128),f
  3163                           
  3164                           ;app_device_audio_midi.c: 116: midiData.DATA_2 = 0x00;
  3165  0133  0023               	movlb	3	; select bank3
  3166  0134  01A3               	clrf	35
  3167                           
  3168                           ;app_device_audio_midi.c: 118: if(pitch == 0x49)
  3169  0135  0021               	movlb	1	; select bank1
  3170  0136  0866               	movf	_pitch^(0+128),w
  3171  0137  3A49               	xorlw	73
  3172  0138  1D03               	skipz
  3173  0139  2940               	goto	l3134
  3174                           
  3175                           ;app_device_audio_midi.c: 119: pitch = 0x3C;
  3176  013A  303C               	movlw	60
  3177  013B  0020               	movlb	0	; select bank0
  3178  013C  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  3179  013D  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  3180  013E  0021               	movlb	1	; select bank1
  3181  013F  00E6               	movwf	_pitch^(0+128)
  3182  0140                     l3134:	
  3183                           
  3184                           ;app_device_audio_midi.c: 120: USBTxHandle = USBTransferOnePacket(1,1,(uint8_t*)&midiDat
      +                          a,4);
  3185  0140  01F1               	clrf	?_USBTransferOnePacket
  3186  0141  0AF1               	incf	?_USBTransferOnePacket,f
  3187  0142  30A0               	movlw	160
  3188  0143  00F2               	movwf	?_USBTransferOnePacket+1
  3189  0144  3001               	movlw	1
  3190  0145  00F3               	movwf	?_USBTransferOnePacket+2
  3191  0146  3004               	movlw	4
  3192  0147  0020               	movlb	0	; select bank0
  3193  0148  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  3194  0149  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  3195  014A  00F4               	movwf	?_USBTransferOnePacket+3
  3196  014B  3001               	movlw	1
  3197  014C  3187  27AF         	fcall	_USBTransferOnePacket
  3198  014E  0020               	movlb	0	; select bank0
  3199  014F  00E2               	movwf	??_APP_DeviceAudioMIDITasks+1
  3200  0150  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  3201  0151  0021               	movlb	1	; select bank1
  3202  0152  00E3               	movwf	_USBTxHandle^(0+128)
  3203                           
  3204                           ;app_device_audio_midi.c: 121: sentNoteOff = 1;
  3205  0153  0022               	movlb	2	; select bank2
  3206  0154  01DF               	clrf	_sentNoteOff^(0+256)
  3207  0155  0ADF               	incf	_sentNoteOff^(0+256),f
  3208  0156  0008               	return
  3209  0157                     __end_of_APP_DeviceAudioMIDITasks:	
  3210                           
  3211                           	psect	text2
  3212  0935                     __ptext2:	
  3213 ;; *************** function _BUTTON_IsPressed *****************
  3214 ;; Defined at:
  3215 ;;		line 56 in file "../bsp/pic16f1459/buttons.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  button          1    wreg     enum E2603
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;  button          1    1[COMMON] enum E2603
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  1    wreg      unsigned char 
  3222 ;; Registers used:
  3223 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3232 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3233 ;;Total ram usage:        1 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; Hardware stack levels required when called:    1
  3236 ;; This function calls:
  3237 ;;		Nothing
  3238 ;; This function is called by:
  3239 ;;		_APP_DeviceAudioMIDITasks
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           
  3244                           ;psect for function _BUTTON_IsPressed
  3245  0935                     _BUTTON_IsPressed:	
  3246                           
  3247                           ;incstack = 0
  3248                           ; Regs used in _BUTTON_IsPressed: [wreg-fsr0h+status,2+status,0]
  3249                           ;BUTTON_IsPressed@button stored from wreg
  3250  0935  00F1               	movwf	BUTTON_IsPressed@button
  3251                           
  3252                           ;buttons.c: 57: switch(button)
  3253  0936  293E               	goto	l3290
  3254  0937                     l3280:	
  3255                           ;buttons.c: 58: {
  3256                           ;buttons.c: 59: case BUTTON_S1:
  3257                           
  3258                           
  3259                           ;buttons.c: 60: return ( (PORTAbits.RA3 == 0) ? 1 : 0);
  3260  0937  3000               	movlw	0
  3261  0938  0020               	movlb	0	; select bank0
  3262  0939  1D8C               	btfss	12,3	;volatile
  3263  093A  3001               	movlw	1
  3264  093B  0008               	return
  3265  093C                     l3284:	
  3266                           ;buttons.c: 62: case BUTTON_NONE:
  3267                           
  3268                           
  3269                           ;buttons.c: 63: return 0;
  3270  093C  3000               	movlw	0
  3271  093D  0008               	return
  3272  093E                     l3290:	
  3273                           ;buttons.c: 64: }
  3274                           
  3275  093E  0871               	movf	BUTTON_IsPressed@button,w
  3276                           
  3277                           ; Switch size 1, requested type "space"
  3278                           ; Number of cases is 2, Range of values is 0 to 1
  3279                           ; switch strategies available:
  3280                           ; Name         Instructions Cycles
  3281                           ; simple_byte            7     4 (average)
  3282                           ; direct_byte           10     6 (fixed)
  3283                           ; jumptable            260     6 (fixed)
  3284                           ; rangetable             6     4 (fixed)
  3285                           ; spacedrange            9     6 (fixed)
  3286                           ; locatedrange           2     3 (fixed)
  3287                           ;	Chosen strategy is simple_byte
  3288  093F  3A00               	xorlw	0	; case 0
  3289  0940  1903               	skipnz
  3290  0941  293C               	goto	l3284
  3291  0942  3A01               	xorlw	1	; case 1
  3292  0943  1903               	skipnz
  3293  0944  2937               	goto	l3280
  3294  0945  2946               	goto	l3292
  3295  0946                     l3292:	
  3296                           
  3297                           ;buttons.c: 66: return 0;
  3298  0946  3000               	movlw	0
  3299  0947  0008               	return
  3300  0948                     __end_of_BUTTON_IsPressed:	
  3301                           
  3302                           	psect	text3
  3303  0667                     __ptext3:	
  3304 ;; *************** function _scan_task *****************
  3305 ;; Defined at:
  3306 ;;		line 210 in file "../src/scan.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;  note            1    wreg     PTR unsigned char 
  3309 ;;		 -> APP_DeviceAudioMIDITasks@scan_pitch(1), 
  3310 ;;  velocity        1   11[BANK0 ] PTR unsigned char 
  3311 ;;		 -> APP_DeviceAudioMIDITasks@velocity(1), 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  note            1   16[BANK0 ] PTR unsigned char 
  3314 ;;		 -> APP_DeviceAudioMIDITasks@scan_pitch(1), 
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      unsigned char 
  3317 ;; Registers used:
  3318 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3324 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3325 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3326 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3327 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3328 ;;Total ram usage:        7 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:    4
  3331 ;; This function calls:
  3332 ;;		_scan_init
  3333 ;;		_set_timer
  3334 ;;		_waiting_for_timer
  3335 ;;		_set_clock_and_data
  3336 ;;		_get_data
  3337 ;;		_is_end_of_scan
  3338 ;;		_run_adc
  3339 ;;		_is_adc_ready
  3340 ;;		_get_adc
  3341 ;;		_store_key_level
  3342 ;; This function is called by:
  3343 ;;		_APP_DeviceAudioMIDITasks
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           
  3348                           ;psect for function _scan_task
  3349  0667                     _scan_task:	
  3350                           
  3351                           ;incstack = 0
  3352                           ; Regs used in _scan_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3353                           ;scan_task@note stored from wreg
  3354  0667  0020               	movlb	0	; select bank0
  3355  0668  00E0               	movwf	scan_task@note
  3356                           
  3357                           ;scan.c: 211: static uint8_t state = S_INIT;
  3358                           ;scan.c: 213: note_event.pitch = note_event.velocity = 0;
  3359  0669  0022               	movlb	2	; select bank2
  3360  066A  01CF               	clrf	(_note_event^(0+256)+1)
  3361  066B  01CE               	clrf	_note_event^(0+256)
  3362                           
  3363                           ;scan.c: 214: *note = *velocity = 0;
  3364  066C  0020               	movlb	0	; select bank0
  3365  066D  085B               	movf	scan_task@velocity,w
  3366  066E  0086               	movwf	6
  3367  066F  0187               	clrf	7
  3368  0670  0181               	clrf	1
  3369  0671  0860               	movf	scan_task@note,w
  3370  0672  0086               	movwf	6
  3371  0673  0187               	clrf	7
  3372  0674  0181               	clrf	1
  3373                           
  3374                           ;scan.c: 216: if (!is_initialized)
  3375  0675  0022               	movlb	2	; select bank2
  3376  0676  08DD               	movf	_is_initialized^(0+256),f
  3377  0677  1D03               	skipz
  3378  0678  2E7C               	goto	l3228
  3379                           
  3380                           ;scan.c: 217: scan_init();
  3381  0679  318A  222C  3186   	fcall	_scan_init
  3382  067C                     l3228:	
  3383                           
  3384                           ;scan.c: 219: if (waiting_for_timer()) return 0;
  3385  067C  3189  2117  3186   	fcall	_waiting_for_timer
  3386  067F  3A00               	xorlw	0
  3387  0680  1903               	skipnz
  3388  0681  2EEF               	goto	l3266
  3389  0682  3000               	movlw	0
  3390  0683  0008               	return
  3391  0684                     l3234:	
  3392                           ;scan.c: 222: case(S_INIT):
  3393                           
  3394                           ;scan.c: 221: switch(state) {
  3395                           
  3396                           
  3397                           ;scan.c: 223: set_clock_and_data(0,1);
  3398  0684  01F1               	clrf	?_set_clock_and_data
  3399  0685  0AF1               	incf	?_set_clock_and_data,f
  3400  0686  3000               	movlw	0
  3401  0687  3189  21D9  3186   	fcall	_set_clock_and_data
  3402                           
  3403                           ;scan.c: 224: state = S_GO;
  3404  068A  0022               	movlb	2	; select bank2
  3405  068B  01E2               	clrf	scan_task@state^(0+256)
  3406  068C  0AE2               	incf	scan_task@state^(0+256),f
  3407                           
  3408                           ;scan.c: 225: set_timer();
  3409  068D  3189  210C  3186   	fcall	_set_timer
  3410                           
  3411                           ;scan.c: 226: break;
  3412  0690  2EFA               	goto	l3268
  3413  0691                     l3240:	
  3414                           ;scan.c: 228: case(S_GO):
  3415                           
  3416                           
  3417                           ;scan.c: 229: set_clock_and_data(0,1);
  3418  0691  01F1               	clrf	?_set_clock_and_data
  3419  0692  0AF1               	incf	?_set_clock_and_data,f
  3420  0693  3000               	movlw	0
  3421  0694  3189  21D9  3186   	fcall	_set_clock_and_data
  3422                           
  3423                           ;scan.c: 230: state = S_CLOCK_RAISE;
  3424  0697  3002               	movlw	2
  3425  0698  00FB               	movwf	??_scan_task
  3426  0699  087B               	movf	??_scan_task,w
  3427  069A  0022               	movlb	2	; select bank2
  3428  069B  00E2               	movwf	scan_task@state^(0+256)
  3429                           
  3430                           ;scan.c: 231: set_timer();
  3431  069C  3189  210C  3186   	fcall	_set_timer
  3432                           
  3433                           ;scan.c: 232: break;
  3434  069F  2EFA               	goto	l3268
  3435  06A0                     l3244:	
  3436                           ;scan.c: 234: case(S_CLOCK_RAISE):
  3437                           
  3438                           
  3439                           ;scan.c: 235: set_clock_and_data(1, get_data());
  3440  06A0  3188  20E4  3186   	fcall	_get_data
  3441  06A3  00FB               	movwf	??_scan_task
  3442  06A4  087B               	movf	??_scan_task,w
  3443  06A5  00F1               	movwf	?_set_clock_and_data
  3444  06A6  3001               	movlw	1
  3445  06A7  3189  21D9  3186   	fcall	_set_clock_and_data
  3446                           
  3447                           ;scan.c: 236: state = S_CLOCK_FALL;
  3448  06AA  3003               	movlw	3
  3449  06AB  00FB               	movwf	??_scan_task
  3450  06AC  087B               	movf	??_scan_task,w
  3451  06AD  0022               	movlb	2	; select bank2
  3452  06AE  00E2               	movwf	scan_task@state^(0+256)
  3453                           
  3454                           ;scan.c: 237: set_timer();
  3455  06AF  3189  210C  3186   	fcall	_set_timer
  3456                           
  3457                           ;scan.c: 238: break;
  3458  06B2  2EFA               	goto	l3268
  3459  06B3                     l3248:	
  3460                           ;scan.c: 240: case(S_CLOCK_FALL):
  3461                           
  3462                           
  3463                           ;scan.c: 241: set_clock_and_data(0,0);
  3464  06B3  01F1               	clrf	?_set_clock_and_data
  3465  06B4  3000               	movlw	0
  3466  06B5  3189  21D9  3186   	fcall	_set_clock_and_data
  3467                           
  3468                           ;scan.c: 242: run_adc();
  3469  06B8  3188  20FB  3186   	fcall	_run_adc
  3470                           
  3471                           ;scan.c: 243: state = S_ADC_WAIT;
  3472  06BB  3004               	movlw	4
  3473  06BC  00FB               	movwf	??_scan_task
  3474  06BD  087B               	movf	??_scan_task,w
  3475  06BE  0022               	movlb	2	; select bank2
  3476  06BF  00E2               	movwf	scan_task@state^(0+256)
  3477                           
  3478                           ;scan.c: 244: set_timer();
  3479  06C0  3189  210C  3186   	fcall	_set_timer
  3480                           
  3481                           ;scan.c: 245: break;
  3482  06C3  2EFA               	goto	l3268
  3483  06C4                     l3252:	
  3484                           ;scan.c: 247: case(S_ADC_WAIT):
  3485                           
  3486                           
  3487                           ;scan.c: 248: state = (is_adc_ready()? S_ADC_READ : S_ADC_WAIT);
  3488  06C4  3188  20E9  3186   	fcall	_is_adc_ready
  3489  06C7  3800               	iorlw	0
  3490  06C8  1D03               	skipz
  3491  06C9  2ECC               	goto	l3256
  3492  06CA  3004               	movlw	4
  3493  06CB  2ECD               	goto	L1
  3494  06CC                     l3256:	
  3495  06CC  3005               	movlw	5
  3496  06CD                     L1:	
  3497  06CD  0020               	movlb	0	; select bank0
  3498  06CE  00DC               	movwf	_scan_task$844
  3499  06CF  3000               	movlw	0
  3500  06D0  00DD               	movwf	_scan_task$844+1
  3501  06D1  085C               	movf	_scan_task$844,w
  3502  06D2  2EEA               	goto	L2
  3503  06D3                     l3258:	
  3504                           ;scan.c: 251: case(S_ADC_READ):
  3505                           
  3506                           ;scan.c: 249: break;
  3507                           
  3508                           
  3509                           ;scan.c: 252: state = (store_key_level(get_adc(), is_end_of_scan())? S_GO : S_CLOCK_RAIS
      +                          E);
  3510  06D3  3189  2122  3186   	fcall	_is_end_of_scan
  3511  06D6  00FB               	movwf	??_scan_task
  3512  06D7  087B               	movf	??_scan_task,w
  3513  06D8  00F7               	movwf	?_store_key_level
  3514  06D9  3188  20E1  3186   	fcall	_get_adc
  3515  06DC  318B  2314  3186   	fcall	_store_key_level
  3516  06DF  3800               	iorlw	0
  3517  06E0  1D03               	skipz
  3518  06E1  2EE4               	goto	l3262
  3519  06E2  3002               	movlw	2
  3520  06E3  2EE5               	goto	L3
  3521  06E4                     l3262:	
  3522  06E4  3001               	movlw	1
  3523  06E5                     L3:	
  3524  06E5  0020               	movlb	0	; select bank0
  3525  06E6  00DE               	movwf	_scan_task$845
  3526  06E7  3000               	movlw	0
  3527  06E8  00DF               	movwf	_scan_task$845+1
  3528  06E9  085E               	movf	_scan_task$845,w
  3529  06EA                     L2:	
  3530  06EA  00FB               	movwf	??_scan_task
  3531  06EB  087B               	movf	??_scan_task,w
  3532  06EC  0022               	movlb	2	; select bank2
  3533  06ED  00E2               	movwf	scan_task@state^(0+256)
  3534                           
  3535                           ;scan.c: 254: }
  3536                           
  3537                           ;scan.c: 253: break;
  3538  06EE  2EFA               	goto	l3268
  3539  06EF                     l3266:	
  3540  06EF  0022               	movlb	2	; select bank2
  3541  06F0  0862               	movf	scan_task@state^(0+256),w
  3542                           
  3543                           ; Switch size 1, requested type "space"
  3544                           ; Number of cases is 6, Range of values is 0 to 5
  3545                           ; switch strategies available:
  3546                           ; Name         Instructions Cycles
  3547                           ; direct_byte           18     6 (fixed)
  3548                           ; simple_byte           19    10 (average)
  3549                           ; jumptable            260     6 (fixed)
  3550                           ; rangetable            10     4 (fixed)
  3551                           ; spacedrange           17     6 (fixed)
  3552                           ; locatedrange           6     3 (fixed)
  3553                           ;	Chosen strategy is direct_byte
  3554  06F1  0084               	movwf	4
  3555  06F2  3006               	movlw	6
  3556  06F3  0204               	subwf	4,w
  3557  06F4  1803               	skipnc
  3558  06F5  2EFA               	goto	l3268
  3559  06F6  3188               	movlp	high S4766
  3560  06F7  3504               	lslf	4,w
  3561  06F8  3E1A               	addlw	low S4766
  3562  06F9  0082               	movwf	2
  3563  06FA                     l3268:	
  3564                           
  3565                           ;scan.c: 256: *note = note_event.pitch;
  3566  06FA  0022               	movlb	2	; select bank2
  3567  06FB  084E               	movf	_note_event^(0+256),w
  3568  06FC  00FB               	movwf	??_scan_task
  3569  06FD  0020               	movlb	0	; select bank0
  3570  06FE  0860               	movf	scan_task@note,w
  3571  06FF  0086               	movwf	6
  3572  0700  0187               	clrf	7
  3573  0701  087B               	movf	??_scan_task,w
  3574  0702  0081               	movwf	1
  3575                           
  3576                           ;scan.c: 257: *velocity = note_event.velocity;
  3577  0703  0022               	movlb	2	; select bank2
  3578  0704  084F               	movf	(_note_event^(0+256)+1),w
  3579  0705  00FB               	movwf	??_scan_task
  3580  0706  0020               	movlb	0	; select bank0
  3581  0707  085B               	movf	scan_task@velocity,w
  3582  0708  0086               	movwf	6
  3583  0709  0187               	clrf	7
  3584  070A  087B               	movf	??_scan_task,w
  3585  070B  0081               	movwf	1
  3586                           
  3587                           ;scan.c: 258: return !! note_event.pitch;
  3588  070C  3000               	movlw	0
  3589  070D  0022               	movlb	2	; select bank2
  3590  070E  08CE               	movf	_note_event^(0+256),f
  3591  070F  1D03               	skipz
  3592  0710  3001               	movlw	1
  3593  0711  0008               	return
  3594  0712                     __end_of_scan_task:	
  3595                           
  3596                           	psect	swtext1
  3597  081A                     __pswtext1:	
  3598  081A                     S4766:	
  3599  081A  3186  2E84         	ljmp	l3234
  3600  081C  3186  2E91         	ljmp	l3240
  3601  081E  3186  2EA0         	ljmp	l3244
  3602  0820  3186  2EB3         	ljmp	l3248
  3603  0822  3186  2EC4         	ljmp	l3252
  3604  0824  3186  2ED3         	ljmp	l3258
  3605                           
  3606                           	psect	text4
  3607  0B14                     __ptext4:	
  3608 ;; *************** function _store_key_level *****************
  3609 ;; Defined at:
  3610 ;;		line 192 in file "../src/scan.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;  level           1    wreg     unsigned char 
  3613 ;;  end_of_scan     1    7[COMMON] unsigned char 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  level           1   10[COMMON] unsigned char 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      unsigned char 
  3618 ;; Registers used:
  3619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3625 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3626 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3627 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3628 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3629 ;;Total ram usage:        4 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    3
  3632 ;; This function calls:
  3633 ;;		_process_level
  3634 ;; This function is called by:
  3635 ;;		_scan_task
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           
  3640                           ;psect for function _store_key_level
  3641  0B14                     _store_key_level:	
  3642                           
  3643                           ;incstack = 0
  3644                           ; Regs used in _store_key_level: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3645                           ;store_key_level@level stored from wreg
  3646  0B14  00FA               	movwf	store_key_level@level
  3647                           
  3648                           ;scan.c: 193: static uint8_t idx_key = 0;
  3649                           ;scan.c: 194: process_level(idx_key, adc_levels[idx_key], level);
  3650  0B15  0021               	movlb	1	; select bank1
  3651  0B16  0868               	movf	store_key_level@idx_key^(0+128),w
  3652  0B17  3E20               	addlw	_adc_levels& (0+255)
  3653  0B18  0086               	movwf	6
  3654  0B19  3002               	movlw	2	; select bank4/5
  3655  0B1A  0087               	movwf	7
  3656  0B1B  0801               	movf	1,w
  3657  0B1C  00F8               	movwf	??_store_key_level
  3658  0B1D  0878               	movf	??_store_key_level,w
  3659  0B1E  00F2               	movwf	?_process_level
  3660  0B1F  087A               	movf	store_key_level@level,w
  3661  0B20  00F9               	movwf	??_store_key_level+1
  3662  0B21  0879               	movf	??_store_key_level+1,w
  3663  0B22  00F3               	movwf	?_process_level+1
  3664  0B23  0868               	movf	store_key_level@idx_key^(0+128),w
  3665  0B24  3184  24E4  318B   	fcall	_process_level
  3666                           
  3667                           ;scan.c: 195: adc_levels[idx_key] = level;
  3668  0B27  087A               	movf	store_key_level@level,w
  3669  0B28  00F8               	movwf	??_store_key_level
  3670  0B29  0021               	movlb	1	; select bank1
  3671  0B2A  0868               	movf	store_key_level@idx_key^(0+128),w
  3672  0B2B  3E20               	addlw	_adc_levels& (0+255)
  3673  0B2C  0086               	movwf	6
  3674  0B2D  3002               	movlw	2	; select bank4/5
  3675  0B2E  0087               	movwf	7
  3676  0B2F  0878               	movf	??_store_key_level,w
  3677  0B30  0081               	movwf	1
  3678                           
  3679                           ;scan.c: 196: idx_key ++;
  3680  0B31  3001               	movlw	1
  3681  0B32  00F8               	movwf	??_store_key_level
  3682  0B33  0878               	movf	??_store_key_level,w
  3683  0B34  07E8               	addwf	store_key_level@idx_key^(0+128),f
  3684                           
  3685                           ;scan.c: 197: if (idx_key >= N_KEYS || end_of_scan) idx_key = 0;
  3686  0B35  3020               	movlw	32
  3687  0B36  0268               	subwf	store_key_level@idx_key^(0+128),w
  3688  0B37  1803               	skipnc
  3689  0B38  2B3C               	goto	l3426
  3690  0B39  0877               	movf	store_key_level@end_of_scan,w
  3691  0B3A  1903               	btfsc	3,2
  3692  0B3B  2B3D               	goto	l3428
  3693  0B3C                     l3426:	
  3694  0B3C  01E8               	clrf	store_key_level@idx_key^(0+128)
  3695  0B3D                     l3428:	
  3696                           
  3697                           ;scan.c: 198: return idx_key == 0;
  3698  0B3D  0868               	movf	store_key_level@idx_key^(0+128),w
  3699  0B3E  3A00               	xorlw	0
  3700  0B3F  3000               	movlw	0
  3701  0B40  1903               	skipnz
  3702  0B41  3001               	movlw	1
  3703  0B42  0008               	return
  3704  0B43                     __end_of_store_key_level:	
  3705                           
  3706                           	psect	text5
  3707  04E4                     __ptext5:	
  3708 ;; *************** function _process_level *****************
  3709 ;; Defined at:
  3710 ;;		line 145 in file "../src/scan.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;  idx_key         1    wreg     unsigned char 
  3713 ;;  old_level       1    2[COMMON] const unsigned char 
  3714 ;;  new_level       1    3[COMMON] const unsigned char 
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  idx_key         1   10[BANK0 ] unsigned char 
  3717 ;;  filtered_sta    1    9[BANK0 ] unsigned char 
  3718 ;;  on_flag         1    8[BANK0 ] unsigned char 
  3719 ;;  off_flag        1    6[BANK0 ] unsigned char 
  3720 ;;  current_stat    2    2[BANK0 ] int 
  3721 ;;  old_state       2    0[BANK0 ] int 
  3722 ;; Return value:  Size  Location     Type
  3723 ;;		None               void
  3724 ;; Registers used:
  3725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3731 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3732 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3733 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3734 ;;      Totals:         5      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3735 ;;Total ram usage:       16 bytes
  3736 ;; Hardware stack levels used:    1
  3737 ;; Hardware stack levels required when called:    2
  3738 ;; This function calls:
  3739 ;;		_LED_Off
  3740 ;;		_LED_On
  3741 ;; This function is called by:
  3742 ;;		_store_key_level
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           
  3747                           ;psect for function _process_level
  3748  04E4                     _process_level:	
  3749                           
  3750                           ;incstack = 0
  3751                           ; Regs used in _process_level: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3752                           ;process_level@idx_key stored from wreg
  3753  04E4  0020               	movlb	0	; select bank0
  3754  04E5  00DA               	movwf	process_level@idx_key
  3755                           
  3756                           ;scan.c: 146: static const uint8_t L = 0x0A;
  3757                           ;scan.c: 147: static const uint8_t idx_midi_map[N_KEYS] = {
  3758                           ;scan.c: 148: 21, 22, 23, 24, 17, 18, 19, 20, 13, 14, 15, 16,
  3759                           ;scan.c: 149: 9, 10, 11, 12, 5, 6, 7, 8, 1, 2, 3, 4
  3760                           ;scan.c: 150: };
  3761                           ;scan.c: 151: static bool key_states[N_KEYS] = {0, };
  3762                           ;scan.c: 152: static const uint8_t midi_shift = 47;
  3763                           ;scan.c: 153: static const uint8_t
  3764                           ;scan.c: 154: key_off_threshold = 5,
  3765                           ;scan.c: 155: key_on_threshold = 7;
  3766                           ;scan.c: 157: static uint8_t key_off_counter[N_KEYS] = {0,};
  3767                           ;scan.c: 158: static uint8_t key_on_counter[N_KEYS] = {0,};
  3768  04E6  3029               	movlw	low (process_level@L| (0+32768))
  3769  04E7  0084               	movwf	4
  3770  04E8  3083               	movlw	high (process_level@L| (0+32768))
  3771  04E9  0085               	movwf	5
  3772  04EA  0800               	movf	0,w	;code access
  3773  04EB  00F4               	movwf	??_process_level
  3774  04EC  0872               	movf	process_level@old_level,w
  3775  04ED  0274               	subwf	??_process_level,w
  3776  04EE  3000               	movlw	0
  3777  04EF  1C03               	skipc
  3778  04F0  3001               	movlw	1
  3779  04F1  00F5               	movwf	??_process_level+1
  3780  04F2  01F6               	clrf	??_process_level+2
  3781  04F3  0875               	movf	??_process_level+1,w
  3782  04F4  00D0               	movwf	process_level@old_state
  3783  04F5  0876               	movf	??_process_level+2,w
  3784  04F6  00D1               	movwf	process_level@old_state+1
  3785                           
  3786                           ;scan.c: 161: int current_state = (new_level > L);
  3787  04F7  3029               	movlw	low (process_level@L| (0+32768))
  3788  04F8  0084               	movwf	4
  3789  04F9  3083               	movlw	high (process_level@L| (0+32768))
  3790  04FA  0085               	movwf	5
  3791  04FB  0800               	movf	0,w	;code access
  3792  04FC  00F4               	movwf	??_process_level
  3793  04FD  0873               	movf	process_level@new_level,w
  3794  04FE  0274               	subwf	??_process_level,w
  3795  04FF  3000               	movlw	0
  3796  0500  1C03               	skipc
  3797  0501  3001               	movlw	1
  3798  0502  00F5               	movwf	??_process_level+1
  3799  0503  01F6               	clrf	??_process_level+2
  3800  0504  0875               	movf	??_process_level+1,w
  3801  0505  00D2               	movwf	process_level@current_state
  3802  0506  0876               	movf	??_process_level+2,w
  3803  0507  00D3               	movwf	process_level@current_state+1
  3804                           
  3805                           ;scan.c: 163: note_event.pitch = 0;
  3806  0508  0022               	movlb	2	; select bank2
  3807  0509  01CE               	clrf	_note_event^(0+256)
  3808                           
  3809                           ;scan.c: 164: note_event.velocity = 0;
  3810  050A  01CF               	clrf	(_note_event^(0+256)+1)
  3811                           
  3812                           ;scan.c: 166: if (current_state) {
  3813  050B  0020               	movlb	0	; select bank0
  3814  050C  0853               	movf	process_level@current_state+1,w
  3815  050D  0452               	iorwf	process_level@current_state,w
  3816  050E  1903               	skipnz
  3817  050F  2D1B               	goto	l3376
  3818                           
  3819                           ;scan.c: 167: key_off_counter[idx_key] = 0;
  3820  0510  085A               	movf	process_level@idx_key,w
  3821  0511  3EA4               	addlw	process_level@key_off_counter& (0+255)
  3822  0512  0086               	movwf	6
  3823  0513  3001               	movlw	1	; select bank3/4
  3824  0514  0087               	movwf	7
  3825  0515  0181               	clrf	1
  3826                           
  3827                           ;scan.c: 168: key_on_counter [idx_key] ++;
  3828  0516  3001               	movlw	1
  3829  0517  00F4               	movwf	??_process_level
  3830  0518  085A               	movf	process_level@idx_key,w
  3831  0519  3EC4               	addlw	process_level@key_on_counter& (0+255)
  3832  051A  2D25               	goto	L4
  3833  051B                     l3376:	
  3834                           ;scan.c: 169: }
  3835                           
  3836                           
  3837                           ;scan.c: 170: else {
  3838                           ;scan.c: 171: key_on_counter[idx_key] = 0;
  3839  051B  085A               	movf	process_level@idx_key,w
  3840  051C  3EC4               	addlw	process_level@key_on_counter& (0+255)
  3841  051D  0086               	movwf	6
  3842  051E  3001               	movlw	1	; select bank3/4
  3843  051F  0087               	movwf	7
  3844  0520  0181               	clrf	1
  3845                           
  3846                           ;scan.c: 172: key_off_counter [idx_key] ++;
  3847  0521  3001               	movlw	1
  3848  0522  00F4               	movwf	??_process_level
  3849  0523  085A               	movf	process_level@idx_key,w
  3850  0524  3EA4               	addlw	process_level@key_off_counter& (0+255)
  3851  0525                     L4:	
  3852  0525  0086               	movwf	6
  3853  0526  3001               	movlw	1	; select bank3/4
  3854  0527  0087               	movwf	7
  3855  0528  0874               	movf	??_process_level,w
  3856  0529  0781               	addwf	1,f
  3857                           
  3858                           ;scan.c: 173: }
  3859                           ;scan.c: 175: {
  3860                           ;scan.c: 176: bool
  3861                           ;scan.c: 177: on_flag = key_on_counter [idx_key] >= key_on_threshold,
  3862  052A  085A               	movf	process_level@idx_key,w
  3863  052B  3EC4               	addlw	process_level@key_on_counter& (0+255)
  3864  052C  0086               	movwf	6
  3865  052D  3001               	movlw	1	; select bank3/4
  3866  052E  0087               	movwf	7
  3867  052F  302B               	movlw	low (process_level@key_on_threshold| (0+32768))
  3868  0530  0084               	movwf	4
  3869  0531  3083               	movlw	high (process_level@key_on_threshold| (0+32768))
  3870  0532  0085               	movwf	5
  3871  0533  0800               	movf	0,w	;code access
  3872  0534  0201               	subwf	1,w
  3873  0535  3000               	movlw	0
  3874  0536  1803               	skipnc
  3875  0537  3001               	movlw	1
  3876  0538  00F4               	movwf	??_process_level
  3877  0539  0874               	movf	??_process_level,w
  3878  053A  00D8               	movwf	process_level@on_flag
  3879                           
  3880                           ;scan.c: 178: off_flag = key_off_counter[idx_key] >= key_off_threshold,
  3881  053B  085A               	movf	process_level@idx_key,w
  3882  053C  3EA4               	addlw	process_level@key_off_counter& (0+255)
  3883  053D  0086               	movwf	6
  3884  053E  3001               	movlw	1	; select bank3/4
  3885  053F  0087               	movwf	7
  3886  0540  302A               	movlw	low (process_level@key_off_threshold| (0+32768))
  3887  0541  0084               	movwf	4
  3888  0542  3083               	movlw	high (process_level@key_off_threshold| (0+32768))
  3889  0543  0085               	movwf	5
  3890  0544  0800               	movf	0,w	;code access
  3891  0545  0201               	subwf	1,w
  3892  0546  3000               	movlw	0
  3893  0547  1803               	skipnc
  3894  0548  3001               	movlw	1
  3895  0549  00F4               	movwf	??_process_level
  3896  054A  0874               	movf	??_process_level,w
  3897  054B  00D6               	movwf	process_level@off_flag
  3898                           
  3899                           ;scan.c: 179: filtered_state = on_flag || !on_flag && !off_flag && key_states[idx_key];
  3900  054C  01D7               	clrf	_process_level$833
  3901  054D  0AD7               	incf	_process_level$833,f
  3902  054E  08D8               	movf	process_level@on_flag,f
  3903  054F  1D03               	skipz
  3904  0550  2D5F               	goto	l3394
  3905  0551  08D8               	movf	process_level@on_flag,f
  3906  0552  1D03               	skipz
  3907  0553  2D5E               	goto	l3392
  3908  0554  08D6               	movf	process_level@off_flag,f
  3909  0555  1D03               	skipz
  3910  0556  2D5E               	goto	l3392
  3911  0557  085A               	movf	process_level@idx_key,w
  3912  0558  3E20               	addlw	process_level@key_states& (0+255)
  3913  0559  0086               	movwf	6
  3914  055A  3001               	movlw	1	; select bank2/3
  3915  055B  0087               	movwf	7
  3916  055C  0881               	movf	1,f
  3917  055D  1903               	btfsc	3,2
  3918  055E                     l3392:	
  3919  055E  01D7               	clrf	_process_level$833
  3920  055F                     l3394:	
  3921  055F  0857               	movf	_process_level$833,w
  3922  0560  00F4               	movwf	??_process_level
  3923  0561  0874               	movf	??_process_level,w
  3924  0562  00D9               	movwf	process_level@filtered_state
  3925                           
  3926                           ;scan.c: 181: if (!key_states[idx_key] != !filtered_state) {
  3927  0563  0859               	movf	process_level@filtered_state,w
  3928  0564  3A00               	xorlw	0
  3929  0565  1D03               	btfss	3,2
  3930  0566  2D69               	goto	u2560
  3931  0567  3001               	movlw	1
  3932  0568  2D6A               	goto	u2562
  3933  0569                     u2560:	
  3934  0569  3000               	movlw	0
  3935  056A                     u2562:	
  3936  056A  00F4               	movwf	??_process_level
  3937  056B  085A               	movf	process_level@idx_key,w
  3938  056C  3E20               	addlw	process_level@key_states& (0+255)
  3939  056D  0086               	movwf	6
  3940  056E  3001               	movlw	1	; select bank2/3
  3941  056F  0087               	movwf	7
  3942  0570  0801               	movf	1,w
  3943  0571  3A00               	xorlw	0
  3944  0572  1D03               	btfss	3,2
  3945  0573  2D76               	goto	u2570
  3946  0574  3001               	movlw	1
  3947  0575  2D77               	goto	u2572
  3948  0576                     u2570:	
  3949  0576  3000               	movlw	0
  3950  0577                     u2572:	
  3951  0577  0674               	xorwf	??_process_level,w
  3952  0578  1903               	skipnz
  3953  0579  2DB0               	goto	l3414
  3954                           
  3955                           ;scan.c: 182: note_event.pitch = midi_shift + idx_midi_map[idx_key];
  3956  057A  302C               	movlw	low (process_level@midi_shift| (0+32768))
  3957  057B  0084               	movwf	4
  3958  057C  3083               	movlw	high (process_level@midi_shift| (0+32768))
  3959  057D  0085               	movwf	5
  3960  057E  0800               	movf	0,w	;code access
  3961  057F  00F4               	movwf	??_process_level
  3962  0580  085A               	movf	process_level@idx_key,w
  3963  0581  3E01               	addlw	low (process_level@idx_midi_map| (0+32768))
  3964  0582  0084               	movwf	4
  3965  0583  3083               	movlw	high (process_level@idx_midi_map| (0+32768))
  3966  0584  1803               	skipnc
  3967  0585  3E01               	addlw	1
  3968  0586  0085               	movwf	5
  3969  0587  0800               	movf	0,w	;code access
  3970  0588  0774               	addwf	??_process_level,w
  3971  0589  00F5               	movwf	??_process_level+1
  3972  058A  0875               	movf	??_process_level+1,w
  3973  058B  0022               	movlb	2	; select bank2
  3974  058C  00CE               	movwf	_note_event^(0+256)
  3975                           
  3976                           ;scan.c: 183: note_event.velocity = (filtered_state? (new_level * 2 + 5): 0);
  3977  058D  0020               	movlb	0	; select bank0
  3978  058E  08D9               	movf	process_level@filtered_state,f
  3979  058F  1D03               	skipz
  3980  0590  2D94               	goto	l3404
  3981  0591  01D4               	clrf	_process_level$834
  3982  0592  01D5               	clrf	_process_level$834+1
  3983  0593  2D9F               	goto	l3406
  3984  0594                     l3404:	
  3985  0594  0873               	movf	process_level@new_level,w
  3986  0595  00F4               	movwf	??_process_level
  3987  0596  01F5               	clrf	??_process_level+1
  3988  0597  35F4               	lslf	??_process_level,f
  3989  0598  0DF5               	rlf	??_process_level+1,f
  3990  0599  0874               	movf	??_process_level,w
  3991  059A  3E05               	addlw	5
  3992  059B  00D4               	movwf	_process_level$834
  3993  059C  3000               	movlw	0
  3994  059D  3D75               	addwfc	??_process_level+1,w
  3995  059E  00D5               	movwf	_process_level$834+1
  3996  059F                     l3406:	
  3997  059F  0854               	movf	_process_level$834,w
  3998  05A0  00F4               	movwf	??_process_level
  3999  05A1  0874               	movf	??_process_level,w
  4000  05A2  0022               	movlb	2	; select bank2
  4001  05A3  00CF               	movwf	(_note_event^(0+256)+1)
  4002                           
  4003                           ;scan.c: 184: if (filtered_state) LED_On(LED_D1);
  4004  05A4  0020               	movlb	0	; select bank0
  4005  05A5  0859               	movf	process_level@filtered_state,w
  4006  05A6  1903               	btfsc	3,2
  4007  05A7  2DAD               	goto	l3412
  4008  05A8  3001               	movlw	1
  4009  05A9  3189  21C0  3184   	fcall	_LED_On
  4010  05AC  2DB0               	goto	l3414
  4011  05AD                     l3412:	
  4012                           
  4013                           ;scan.c: 185: else LED_Off(LED_D1);
  4014  05AD  3001               	movlw	1
  4015  05AE  3189  21A7         	fcall	_LED_Off
  4016  05B0                     l3414:	
  4017                           
  4018                           ;scan.c: 186: }
  4019                           ;scan.c: 187: key_states[idx_key] = filtered_state;
  4020  05B0  0020               	movlb	0	; select bank0
  4021  05B1  0859               	movf	process_level@filtered_state,w
  4022  05B2  00F4               	movwf	??_process_level
  4023  05B3  085A               	movf	process_level@idx_key,w
  4024  05B4  3E20               	addlw	process_level@key_states& (0+255)
  4025  05B5  0086               	movwf	6
  4026  05B6  3001               	movlw	1	; select bank2/3
  4027  05B7  0087               	movwf	7
  4028  05B8  0874               	movf	??_process_level,w
  4029  05B9  0081               	movwf	1
  4030  05BA  0008               	return
  4031  05BB                     __end_of_process_level:	
  4032                           
  4033                           	psect	text6
  4034  08E1                     __ptext6:	
  4035 ;; *************** function _get_adc *****************
  4036 ;; Defined at:
  4037 ;;		line 94 in file "../src/scan.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;		None
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;		None
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  1    wreg      unsigned char 
  4044 ;; Registers used:
  4045 ;;		wreg
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4055 ;;Total ram usage:        0 bytes
  4056 ;; Hardware stack levels used:    1
  4057 ;; Hardware stack levels required when called:    1
  4058 ;; This function calls:
  4059 ;;		Nothing
  4060 ;; This function is called by:
  4061 ;;		_scan_task
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           
  4066                           ;psect for function _get_adc
  4067  08E1                     _get_adc:	
  4068                           
  4069                           ;scan.c: 95: return ADRESH;
  4070                           
  4071                           ;incstack = 0
  4072                           ; Regs used in _get_adc: [wreg]
  4073  08E1  0021               	movlb	1	; select bank1
  4074  08E2  081C               	movf	28,w	;volatile
  4075  08E3  0008               	return
  4076  08E4                     __end_of_get_adc:	
  4077                           
  4078                           	psect	text7
  4079  08E9                     __ptext7:	
  4080 ;; *************** function _is_adc_ready *****************
  4081 ;; Defined at:
  4082 ;;		line 90 in file "../src/scan.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;		None
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;		None
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      unsigned char 
  4089 ;; Registers used:
  4090 ;;		wreg
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4100 ;;Total ram usage:        0 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; Hardware stack levels required when called:    1
  4103 ;; This function calls:
  4104 ;;		Nothing
  4105 ;; This function is called by:
  4106 ;;		_scan_task
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           
  4111                           ;psect for function _is_adc_ready
  4112  08E9                     _is_adc_ready:	
  4113                           
  4114                           ;scan.c: 91: return !ADCON0bits.GO_nDONE;
  4115                           
  4116                           ;incstack = 0
  4117                           ; Regs used in _is_adc_ready: [wreg]
  4118  08E9  3000               	movlw	0
  4119  08EA  0021               	movlb	1	; select bank1
  4120  08EB  1C9D               	btfss	29,1	;volatile
  4121  08EC  3001               	movlw	1
  4122  08ED  0008               	return
  4123  08EE                     __end_of_is_adc_ready:	
  4124                           
  4125                           	psect	text8
  4126  08FB                     __ptext8:	
  4127 ;; *************** function _run_adc *****************
  4128 ;; Defined at:
  4129 ;;		line 85 in file "../src/scan.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;		None
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;		None
  4134 ;; Return value:  Size  Location     Type
  4135 ;;		None               void
  4136 ;; Registers used:
  4137 ;;		wreg, status,2, status,0
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4147 ;;Total ram usage:        0 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; Hardware stack levels required when called:    1
  4150 ;; This function calls:
  4151 ;;		Nothing
  4152 ;; This function is called by:
  4153 ;;		_scan_task
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           
  4158                           ;psect for function _run_adc
  4159  08FB                     _run_adc:	
  4160                           
  4161                           ;scan.c: 86: ADCON0bits.CHS = 7;
  4162                           
  4163                           ;incstack = 0
  4164                           ; Regs used in _run_adc: [wreg+status,2+status,0]
  4165  08FB  0021               	movlb	1	; select bank1
  4166  08FC  081D               	movf	29,w	;volatile
  4167  08FD  3983               	andlw	-125
  4168  08FE  381C               	iorlw	28
  4169  08FF  009D               	movwf	29	;volatile
  4170                           
  4171                           ;scan.c: 87: ADCON0bits.GO = 1;
  4172  0900  149D               	bsf	29,1	;volatile
  4173  0901  0008               	return
  4174  0902                     __end_of_run_adc:	
  4175                           
  4176                           	psect	text9
  4177  0922                     __ptext9:	
  4178 ;; *************** function _is_end_of_scan *****************
  4179 ;; Defined at:
  4180 ;;		line 77 in file "../src/scan.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;		None
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;  res             1    3[COMMON] unsigned char 
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  1    wreg      unsigned char 
  4187 ;; Registers used:
  4188 ;;		wreg, status,2, status,0
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4195 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4196 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4197 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4198 ;;Total ram usage:        3 bytes
  4199 ;; Hardware stack levels used:    1
  4200 ;; Hardware stack levels required when called:    1
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_scan_task
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           
  4209                           ;psect for function _is_end_of_scan
  4210  0922                     _is_end_of_scan:	
  4211                           
  4212                           ;scan.c: 79: static uint8_t scan_counter = 0;
  4213                           ;scan.c: 80: bool res = (++scan_counter) >= N_KEYS;
  4214                           
  4215                           ;incstack = 0
  4216                           ; Regs used in _is_end_of_scan: [wreg+status,2+status,0]
  4217  0922  3001               	movlw	1
  4218  0923  00F1               	movwf	??_is_end_of_scan
  4219  0924  0871               	movf	??_is_end_of_scan,w
  4220  0925  0022               	movlb	2	; select bank2
  4221  0926  07E1               	addwf	is_end_of_scan@scan_counter^(0+256),f
  4222  0927  3020               	movlw	32
  4223  0928  0261               	subwf	is_end_of_scan@scan_counter^(0+256),w
  4224  0929  3000               	movlw	0
  4225  092A  1803               	skipnc
  4226  092B  3001               	movlw	1
  4227  092C  00F2               	movwf	??_is_end_of_scan+1
  4228  092D  0872               	movf	??_is_end_of_scan+1,w
  4229  092E  00F3               	movwf	is_end_of_scan@res
  4230                           
  4231                           ;scan.c: 81: if (scan_counter >= N_KEYS) scan_counter = 0;
  4232  092F  3020               	movlw	32
  4233  0930  0261               	subwf	is_end_of_scan@scan_counter^(0+256),w
  4234  0931  1803               	btfsc	3,0
  4235  0932  01E1               	clrf	is_end_of_scan@scan_counter^(0+256)
  4236                           
  4237                           ;scan.c: 82: return res;
  4238  0933  0873               	movf	is_end_of_scan@res,w
  4239  0934  0008               	return
  4240  0935                     __end_of_is_end_of_scan:	
  4241                           
  4242                           	psect	text10
  4243  08E4                     __ptext10:	
  4244 ;; *************** function _get_data *****************
  4245 ;; Defined at:
  4246 ;;		line 73 in file "../src/scan.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;		None
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;		None
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1    wreg      unsigned char 
  4253 ;; Registers used:
  4254 ;;		wreg, status,2, status,0
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4264 ;;Total ram usage:        0 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:    1
  4267 ;; This function calls:
  4268 ;;		Nothing
  4269 ;; This function is called by:
  4270 ;;		_scan_task
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           
  4275                           ;psect for function _get_data
  4276  08E4                     _get_data:	
  4277                           
  4278                           ;scan.c: 74: return LATCbits.LATC5;
  4279                           
  4280                           ;incstack = 0
  4281                           ; Regs used in _get_data: [wreg+status,2+status,0]
  4282  08E4  0022               	movlb	2	; select bank2
  4283  08E5  0E0E               	swapf	14,w	;volatile
  4284  08E6  0C89               	rrf	9,f
  4285  08E7  3901               	andlw	1
  4286  08E8  0008               	return
  4287  08E9                     __end_of_get_data:	
  4288                           
  4289                           	psect	text11
  4290  09D9                     __ptext11:	
  4291 ;; *************** function _set_clock_and_data *****************
  4292 ;; Defined at:
  4293 ;;		line 68 in file "../src/scan.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;  c               1    wreg     const unsigned char 
  4296 ;;  d               1    1[COMMON] const unsigned char 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  c               1    3[COMMON] const unsigned char 
  4299 ;; Return value:  Size  Location     Type
  4300 ;;		None               void
  4301 ;; Registers used:
  4302 ;;		wreg, status,2, status,0
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4308 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4310 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4311 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4312 ;;Total ram usage:        3 bytes
  4313 ;; Hardware stack levels used:    1
  4314 ;; Hardware stack levels required when called:    1
  4315 ;; This function calls:
  4316 ;;		Nothing
  4317 ;; This function is called by:
  4318 ;;		_scan_task
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           
  4323                           ;psect for function _set_clock_and_data
  4324  09D9                     _set_clock_and_data:	
  4325                           
  4326                           ;incstack = 0
  4327                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  4328                           ;set_clock_and_data@c stored from wreg
  4329  09D9  00F3               	movwf	set_clock_and_data@c
  4330                           
  4331                           ;scan.c: 69: LATCbits.LATC4 = !!c;
  4332  09DA  3000               	movlw	0
  4333  09DB  08F3               	movf	set_clock_and_data@c,f
  4334  09DC  1D03               	skipz
  4335  09DD  3001               	movlw	1
  4336  09DE  00F2               	movwf	??_set_clock_and_data
  4337  09DF  0EF2               	swapf	??_set_clock_and_data,f
  4338  09E0  0022               	movlb	2	; select bank2
  4339  09E1  080E               	movf	14,w	;volatile
  4340  09E2  0672               	xorwf	??_set_clock_and_data,w
  4341  09E3  39EF               	andlw	-17
  4342  09E4  0672               	xorwf	??_set_clock_and_data,w
  4343  09E5  008E               	movwf	14	;volatile
  4344                           
  4345                           ;scan.c: 70: LATCbits.LATC5 = !!d;
  4346  09E6  3000               	movlw	0
  4347  09E7  08F1               	movf	set_clock_and_data@d,f
  4348  09E8  1D03               	skipz
  4349  09E9  3001               	movlw	1
  4350  09EA  00F2               	movwf	??_set_clock_and_data
  4351  09EB  0EF2               	swapf	??_set_clock_and_data,f
  4352  09EC  0DF2               	rlf	??_set_clock_and_data,f
  4353  09ED  080E               	movf	14,w	;volatile
  4354  09EE  0672               	xorwf	??_set_clock_and_data,w
  4355  09EF  39DF               	andlw	-33
  4356  09F0  0672               	xorwf	??_set_clock_and_data,w
  4357  09F1  008E               	movwf	14	;volatile
  4358  09F2  0008               	return
  4359  09F3                     __end_of_set_clock_and_data:	
  4360                           
  4361                           	psect	text12
  4362  0917                     __ptext12:	
  4363 ;; *************** function _waiting_for_timer *****************
  4364 ;; Defined at:
  4365 ;;		line 64 in file "../src/scan.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;		None
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;		None
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1    wreg      unsigned char 
  4372 ;; Registers used:
  4373 ;;		wreg, status,2
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4380 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4382 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4383 ;;Total ram usage:        1 bytes
  4384 ;; Hardware stack levels used:    1
  4385 ;; Hardware stack levels required when called:    1
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_scan_task
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           
  4394                           ;psect for function _waiting_for_timer
  4395  0917                     _waiting_for_timer:	
  4396                           
  4397                           ;scan.c: 65: return (wait_timer = wait_timer && !INTCONbits.TMR0IF);
  4398                           
  4399                           ;incstack = 0
  4400                           ; Regs used in _waiting_for_timer: [wreg+status,2]
  4401  0917  01F1               	clrf	_waiting_for_timer$796
  4402  0918  0022               	movlb	2	; select bank2
  4403  0919  0860               	movf	_wait_timer^(0+256),w
  4404  091A  1D03               	skipz
  4405  091B  190B               	btfsc	11,2	;volatile
  4406  091C  291F               	goto	l3334
  4407  091D  01F1               	clrf	_waiting_for_timer$796
  4408  091E  0AF1               	incf	_waiting_for_timer$796,f
  4409  091F                     l3334:	
  4410  091F  0871               	movf	_waiting_for_timer$796,w
  4411  0920  00E0               	movwf	_wait_timer^(0+256)
  4412  0921  0008               	return
  4413  0922                     __end_of_waiting_for_timer:	
  4414                           
  4415                           	psect	text13
  4416  090C                     __ptext13:	
  4417 ;; *************** function _set_timer *****************
  4418 ;; Defined at:
  4419 ;;		line 55 in file "../src/scan.c"
  4420 ;; Parameters:    Size  Location     Type
  4421 ;;		None
  4422 ;; Auto vars:     Size  Location     Type
  4423 ;;		None
  4424 ;; Return value:  Size  Location     Type
  4425 ;;		None               void
  4426 ;; Registers used:
  4427 ;;		status,2
  4428 ;; Tracked objects:
  4429 ;;		On entry : 0/0
  4430 ;;		On exit  : 0/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4437 ;;Total ram usage:        0 bytes
  4438 ;; Hardware stack levels used:    1
  4439 ;; Hardware stack levels required when called:    1
  4440 ;; This function calls:
  4441 ;;		Nothing
  4442 ;; This function is called by:
  4443 ;;		_scan_task
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           
  4448                           ;psect for function _set_timer
  4449  090C                     _set_timer:	
  4450                           
  4451                           ;scan.c: 56: wait_timer = 1;
  4452                           
  4453                           ;incstack = 0
  4454                           ; Regs used in _set_timer: [status,2]
  4455  090C  0022               	movlb	2	; select bank2
  4456  090D  01E0               	clrf	_wait_timer^(0+256)
  4457  090E  0AE0               	incf	_wait_timer^(0+256),f
  4458                           
  4459                           ;scan.c: 57: OPTION_REGbits.TMR0CS = 0;
  4460  090F  0021               	movlb	1	; select bank1
  4461  0910  1295               	bcf	21,5	;volatile
  4462                           
  4463                           ;scan.c: 58: OPTION_REGbits.PSA = 1;
  4464  0911  1595               	bsf	21,3	;volatile
  4465                           
  4466                           ;scan.c: 59: INTCONbits.TMR0IE = 0;
  4467  0912  128B               	bcf	11,5	;volatile
  4468                           
  4469                           ;scan.c: 60: INTCONbits.TMR0IF = 0;
  4470  0913  110B               	bcf	11,2	;volatile
  4471                           
  4472                           ;scan.c: 61: TMR0 = 0;
  4473  0914  0020               	movlb	0	; select bank0
  4474  0915  0195               	clrf	21	;volatile
  4475  0916  0008               	return
  4476  0917                     __end_of_set_timer:	
  4477                           
  4478                           	psect	text14
  4479  0A2C                     __ptext14:	
  4480 ;; *************** function _scan_init *****************
  4481 ;; Defined at:
  4482 ;;		line 32 in file "../src/scan.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;		None
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;		None
  4487 ;; Return value:  Size  Location     Type
  4488 ;;		None               void
  4489 ;; Registers used:
  4490 ;;		wreg, status,2, status,0
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4500 ;;Total ram usage:        0 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; Hardware stack levels required when called:    1
  4503 ;; This function calls:
  4504 ;;		Nothing
  4505 ;; This function is called by:
  4506 ;;		_scan_task
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           
  4511                           ;psect for function _scan_init
  4512  0A2C                     _scan_init:	
  4513                           
  4514                           ;scan.c: 33: is_initialized = 1;
  4515                           
  4516                           ;incstack = 0
  4517                           ; Regs used in _scan_init: [wreg+status,2+status,0]
  4518  0A2C  0022               	movlb	2	; select bank2
  4519  0A2D  01DD               	clrf	_is_initialized^(0+256)
  4520  0A2E  0ADD               	incf	_is_initialized^(0+256),f
  4521                           
  4522                           ;scan.c: 34: TRISCbits.TRISC3 = PIN_INPUT;
  4523  0A2F  0021               	movlb	1	; select bank1
  4524  0A30  158E               	bsf	14,3	;volatile
  4525                           
  4526                           ;scan.c: 35: TRISCbits.TRISC4 = PIN_OUTPUT;
  4527  0A31  120E               	bcf	14,4	;volatile
  4528                           
  4529                           ;scan.c: 36: TRISCbits.TRISC5 = PIN_OUTPUT;
  4530  0A32  128E               	bcf	14,5	;volatile
  4531                           
  4532                           ;scan.c: 38: ANSELA = 0;
  4533  0A33  0023               	movlb	3	; select bank3
  4534  0A34  018C               	clrf	12	;volatile
  4535                           
  4536                           ;scan.c: 40: ANSELCbits.ANSC3 = PIN_ANALOG;
  4537  0A35  158E               	bsf	14,3	;volatile
  4538                           
  4539                           ;scan.c: 41: LATCbits.LATC4 = 0;
  4540  0A36  0022               	movlb	2	; select bank2
  4541  0A37  120E               	bcf	14,4	;volatile
  4542                           
  4543                           ;scan.c: 42: LATCbits.LATC5 = 0;
  4544  0A38  128E               	bcf	14,5	;volatile
  4545                           
  4546                           ;scan.c: 44: ANSELAbits.ANSA4 = PIN_DIGITAL;
  4547  0A39  0023               	movlb	3	; select bank3
  4548  0A3A  120C               	bcf	12,4	;volatile
  4549                           
  4550                           ;scan.c: 45: TRISAbits.TRISA4 = PIN_INPUT;
  4551  0A3B  0021               	movlb	1	; select bank1
  4552  0A3C  160C               	bsf	12,4	;volatile
  4553                           
  4554                           ;scan.c: 47: PIE1bits.ADIE = 0;
  4555  0A3D  1311               	bcf	17,6	;volatile
  4556                           
  4557                           ;scan.c: 48: ADCON0bits.ADON = 1;
  4558  0A3E  141D               	bsf	29,0	;volatile
  4559                           
  4560                           ;scan.c: 49: ADCON1bits.ADFM = 0;
  4561  0A3F  139E               	bcf	30,7	;volatile
  4562                           
  4563                           ;scan.c: 50: ADCON1bits.ADCS = 0b110;
  4564  0A40  081E               	movf	30,w	;volatile
  4565  0A41  398F               	andlw	-113
  4566  0A42  3860               	iorlw	96
  4567  0A43  009E               	movwf	30	;volatile
  4568                           
  4569                           ;scan.c: 51: ADCON1bits.ADPREF = 0;
  4570  0A44  30FC               	movlw	-4
  4571  0A45  059E               	andwf	30,f	;volatile
  4572                           
  4573                           ;scan.c: 52: ADCON2bits.TRIGSEL = 0;
  4574  0A46  308F               	movlw	-113
  4575  0A47  059F               	andwf	31,f	;volatile
  4576  0A48  0008               	return
  4577  0A49                     __end_of_scan_init:	
  4578                           
  4579                           	psect	text15
  4580  03F6                     __ptext15:	
  4581 ;; *************** function _USBDeviceTasks *****************
  4582 ;; Defined at:
  4583 ;;		line 497 in file "../framework/usb/usb_device.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;		None
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;  i               1   24[BANK0 ] unsigned char 
  4588 ;; Return value:  Size  Location     Type
  4589 ;;		None               void
  4590 ;; Registers used:
  4591 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4598 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4599 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4600 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4601 ;;Total ram usage:        3 bytes
  4602 ;; Hardware stack levels used:    1
  4603 ;; Hardware stack levels required when called:    9
  4604 ;; This function calls:
  4605 ;;		_USBDeviceInit
  4606 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4607 ;;		_USBWakeFromSuspend
  4608 ;;		_USBSuspend
  4609 ;;		_USBIncrement1msInternalTimers
  4610 ;;		_USBCtrlEPAllowStatusStage
  4611 ;;		_USBStallHandler
  4612 ;;		_USBCtrlEPService
  4613 ;; This function is called by:
  4614 ;;		_main
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           
  4619                           ;psect for function _USBDeviceTasks
  4620  03F6                     _USBDeviceTasks:	
  4621                           
  4622                           ;usb_device.c: 563: }
  4623                           ;usb_device.c: 585: if(USBDeviceState == DETACHED_STATE)
  4624                           
  4625                           ;usb_device.c: 562: return;
  4626                           
  4627                           ;usb_device.c: 561: PIR2bits.USBIF = 0;;
  4628                           
  4629                           ;usb_device.c: 533: USBDeviceState = DETACHED_STATE;
  4630                           
  4631                           ;usb_device.c: 530: UIE = 0;
  4632                           
  4633                           ;usb_device.c: 525: {
  4634                           ;usb_device.c: 527: UCON = 0;
  4635                           
  4636                           ;usb_device.c: 498: uint8_t i;
  4637                           ;usb_device.c: 524: if (1 != 1)
  4638                           
  4639                           ;incstack = 0
  4640                           ; Regs used in _USBDeviceTasks: [allreg]
  4641  03F6  0020               	movlb	0	; select bank0
  4642  03F7  08ED               	movf	_USBDeviceState,f
  4643  03F8  1D03               	skipz
  4644  03F9  2C0A               	goto	l4228
  4645                           
  4646                           ;usb_device.c: 586: {
  4647                           ;usb_device.c: 588: UCON = 0;
  4648  03FA  003D               	movlb	29	; select bank29
  4649  03FB  018E               	clrf	14	;volatile
  4650                           
  4651                           ;usb_device.c: 591: UIE = 0;
  4652  03FC  0192               	clrf	18	;volatile
  4653                           
  4654                           ;usb_device.c: 595: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  4655  03FD  3016               	movlw	22
  4656  03FE  0091               	movwf	17	;volatile
  4657  03FF  309F               	movlw	159
  4658  0400  0097               	movwf	23	;volatile
  4659  0401  307B               	movlw	123
  4660  0402  0092               	movwf	18	;volatile
  4661  0403                     l582:	
  4662                           ;usb_device.c: 598: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  4663                           
  4664  0403  198E               	btfsc	14,3	;volatile
  4665  0404  2C07               	goto	l584
  4666  0405  158E               	bsf	14,3	;volatile
  4667  0406  2C03               	goto	l582
  4668  0407                     l584:	
  4669                           
  4670                           ;usb_device.c: 601: USBDeviceState = ATTACHED_STATE;
  4671  0407  0020               	movlb	0	; select bank0
  4672  0408  01ED               	clrf	_USBDeviceState
  4673  0409  0AED               	incf	_USBDeviceState,f
  4674  040A                     l4228:	
  4675                           
  4676                           ;usb_device.c: 606: }
  4677                           ;usb_device.c: 609: if(USBDeviceState == ATTACHED_STATE)
  4678  040A  086D               	movf	_USBDeviceState,w
  4679  040B  3A01               	xorlw	1
  4680  040C  1D03               	skipz
  4681  040D  2C1A               	goto	l4240
  4682                           
  4683                           ;usb_device.c: 610: {
  4684                           ;usb_device.c: 620: if(!UCONbits.SE0)
  4685  040E  003D               	movlb	29	; select bank29
  4686  040F  1A8E               	btfsc	14,5	;volatile
  4687  0410  2C1A               	goto	l4240
  4688                           
  4689                           ;usb_device.c: 621: {
  4690                           ;usb_device.c: 627: {UIR = 0;};
  4691  0411  0190               	clrf	16	;volatile
  4692                           
  4693                           ;usb_device.c: 631: UIE=0;
  4694  0412  0192               	clrf	18	;volatile
  4695                           
  4696                           ;usb_device.c: 633: UIEbits.URSTIE = 1;
  4697  0413  1412               	bsf	18,0	;volatile
  4698                           
  4699                           ;usb_device.c: 634: UIEbits.IDLEIE = 1;
  4700  0414  1612               	bsf	18,4	;volatile
  4701                           
  4702                           ;usb_device.c: 635: USBDeviceState = POWERED_STATE;
  4703  0415  3002               	movlw	2
  4704  0416  0020               	movlb	0	; select bank0
  4705  0417  00E6               	movwf	??_USBDeviceTasks
  4706  0418  0866               	movf	??_USBDeviceTasks,w
  4707  0419  00ED               	movwf	_USBDeviceState
  4708  041A                     l4240:	
  4709                           
  4710                           ;usb_device.c: 636: }
  4711                           ;usb_device.c: 637: }
  4712                           ;usb_device.c: 653: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4713  041A  003D               	movlb	29	; select bank29
  4714  041B  1910               	btfsc	16,2	;volatile
  4715  041C  1D12               	btfss	18,2	;volatile
  4716  041D  2C27               	goto	l4248
  4717                           
  4718                           ;usb_device.c: 654: {
  4719                           ;usb_device.c: 655: (UIR &= 0xFB);
  4720  041E  30FB               	movlw	251
  4721  041F  0020               	movlb	0	; select bank0
  4722  0420  00E6               	movwf	??_USBDeviceTasks
  4723  0421  0866               	movf	??_USBDeviceTasks,w
  4724  0422  003D               	movlb	29	; select bank29
  4725  0423  0590               	andwf	16,f	;volatile
  4726                           
  4727                           ;usb_device.c: 659: USBWakeFromSuspend();
  4728  0424  3182  22E4  3183   	fcall	_USBWakeFromSuspend
  4729  0427                     l4248:	
  4730                           
  4731                           ;usb_device.c: 661: }
  4732                           ;usb_device.c: 666: if(UCONbits.SUSPND==1)
  4733  0427  003D               	movlb	29	; select bank29
  4734  0428  1C8E               	btfss	14,1	;volatile
  4735  0429  2C2D               	goto	l588
  4736                           
  4737                           ;usb_device.c: 667: {
  4738                           ;usb_device.c: 668: PIR2bits.USBIF = 0;;
  4739  042A  0020               	movlb	0	; select bank0
  4740  042B  1112               	bcf	18,2	;volatile
  4741                           
  4742                           ;usb_device.c: 669: return;
  4743  042C  0008               	return
  4744  042D                     l588:	
  4745                           
  4746                           ;usb_device.c: 670: }
  4747                           ;usb_device.c: 682: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4748  042D  1810               	btfsc	16,0	;volatile
  4749  042E  1C12               	btfss	18,0	;volatile
  4750  042F  2C3D               	goto	l4260
  4751                           
  4752                           ;usb_device.c: 683: {
  4753                           ;usb_device.c: 684: USBDeviceInit();
  4754  0430  3185  25BB  3183   	fcall	_USBDeviceInit
  4755                           
  4756                           ;usb_device.c: 688: ;
  4757                           ;usb_device.c: 690: USBDeviceState = DEFAULT_STATE;
  4758  0433  3004               	movlw	4
  4759  0434  0020               	movlb	0	; select bank0
  4760  0435  00E6               	movwf	??_USBDeviceTasks
  4761  0436  0866               	movf	??_USBDeviceTasks,w
  4762  0437  00ED               	movwf	_USBDeviceState
  4763                           
  4764                           ;usb_device.c: 700: (UIR &= 0xFE);
  4765  0438  30FE               	movlw	254
  4766  0439  00E6               	movwf	??_USBDeviceTasks
  4767  043A  0866               	movf	??_USBDeviceTasks,w
  4768  043B  003D               	movlb	29	; select bank29
  4769  043C  0590               	andwf	16,f	;volatile
  4770  043D                     l4260:	
  4771                           
  4772                           ;usb_device.c: 701: }
  4773                           ;usb_device.c: 706: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4774  043D  1A10               	btfsc	16,4	;volatile
  4775  043E  1E12               	btfss	18,4	;volatile
  4776  043F  2C43               	goto	l4266
  4777                           
  4778                           ;usb_device.c: 707: {
  4779                           ;usb_device.c: 713: USBSuspend();
  4780  0440  3189  215E  3183   	fcall	_USBSuspend
  4781  0443                     l4266:	
  4782                           
  4783                           ;usb_device.c: 715: }
  4784                           ;usb_device.c: 727: if(UIRbits.SOFIF)
  4785  0443  003D               	movlb	29	; select bank29
  4786  0444  1F10               	btfss	16,6	;volatile
  4787  0445  2C6A               	goto	l4284
  4788                           
  4789                           ;usb_device.c: 728: {
  4790                           ;usb_device.c: 730: if(UIEbits.SOFIE)
  4791  0446  1F12               	btfss	18,6	;volatile
  4792  0447  2C55               	goto	l4272
  4793                           
  4794                           ;usb_device.c: 731: {
  4795                           ;usb_device.c: 732: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4796  0448  3073               	movlw	115
  4797  0449  0020               	movlb	0	; select bank0
  4798  044A  00D5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  4799  044B  3000               	movlw	0
  4800  044C  00D6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  4801  044D  01D7               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  4802  044E  3001               	movlw	1
  4803  044F  00D8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  4804  0450  3000               	movlw	0
  4805  0451  00D9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  4806  0452  318B  2343  3183   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4807  0455                     l4272:	
  4808                           
  4809                           ;usb_device.c: 733: }
  4810                           ;usb_device.c: 734: (UIR &= 0xBF);
  4811  0455  30BF               	movlw	191
  4812  0456  0020               	movlb	0	; select bank0
  4813  0457  00E6               	movwf	??_USBDeviceTasks
  4814  0458  0866               	movf	??_USBDeviceTasks,w
  4815  0459  003D               	movlb	29	; select bank29
  4816  045A  0590               	andwf	16,f	;volatile
  4817                           
  4818                           ;usb_device.c: 737: USBIncrement1msInternalTimers();
  4819  045B  3189  2176  3183   	fcall	_USBIncrement1msInternalTimers
  4820                           
  4821                           ;usb_device.c: 754: if(USBStatusStageTimeoutCounter != 0u)
  4822  045E  0022               	movlb	2	; select bank2
  4823  045F  085A               	movf	_USBStatusStageTimeoutCounter^(0+256),w
  4824  0460  1903               	btfsc	3,2
  4825  0461  2C64               	goto	l4280
  4826                           
  4827                           ;usb_device.c: 755: {
  4828                           ;usb_device.c: 756: USBStatusStageTimeoutCounter--;
  4829  0462  3001               	movlw	1
  4830  0463  02DA               	subwf	_USBStatusStageTimeoutCounter^(0+256),f
  4831  0464                     l4280:	
  4832                           
  4833                           ;usb_device.c: 757: }
  4834                           ;usb_device.c: 763: if(USBStatusStageTimeoutCounter == 0)
  4835  0464  08DA               	movf	_USBStatusStageTimeoutCounter^(0+256),f
  4836  0465  1D03               	skipz
  4837  0466  2C6A               	goto	l4284
  4838                           
  4839                           ;usb_device.c: 764: {
  4840                           ;usb_device.c: 765: USBCtrlEPAllowStatusStage();
  4841  0467  318D  2548  3183   	fcall	_USBCtrlEPAllowStatusStage
  4842  046A                     l4284:	
  4843                           
  4844                           ;usb_device.c: 766: }
  4845                           ;usb_device.c: 768: }
  4846                           ;usb_device.c: 770: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4847  046A  003D               	movlb	29	; select bank29
  4848  046B  1A90               	btfsc	16,5	;volatile
  4849  046C  1E92               	btfss	18,5	;volatile
  4850  046D  2C71               	goto	l4290
  4851                           
  4852                           ;usb_device.c: 771: {
  4853                           ;usb_device.c: 772: USBStallHandler();
  4854  046E  318A  2249  3183   	fcall	_USBStallHandler
  4855  0471                     l4290:	
  4856                           
  4857                           ;usb_device.c: 773: }
  4858                           ;usb_device.c: 775: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4859  0471  003D               	movlb	29	; select bank29
  4860  0472  1890               	btfsc	16,1	;volatile
  4861  0473  1C92               	btfss	18,1	;volatile
  4862  0474  2C84               	goto	l4298
  4863                           
  4864                           ;usb_device.c: 776: {
  4865                           ;usb_device.c: 777: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4866  0475  30FF               	movlw	255
  4867  0476  0020               	movlb	0	; select bank0
  4868  0477  00D5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  4869  0478  307F               	movlw	127
  4870  0479  00D6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  4871  047A  01D7               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  4872  047B  3001               	movlw	1
  4873  047C  00D8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  4874  047D  3000               	movlw	0
  4875  047E  00D9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  4876  047F  318B  2343  3183   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4877                           
  4878                           ;usb_device.c: 778: {UEIR = 0;};
  4879  0482  003D               	movlb	29	; select bank29
  4880  0483  0193               	clrf	19	;volatile
  4881  0484                     l4298:	
  4882                           
  4883                           ;usb_device.c: 786: }
  4884                           ;usb_device.c: 793: if(USBDeviceState < DEFAULT_STATE)
  4885  0484  3004               	movlw	4
  4886  0485  0020               	movlb	0	; select bank0
  4887  0486  026D               	subwf	_USBDeviceState,w
  4888  0487  1803               	skipnc
  4889  0488  2C8B               	goto	l597
  4890                           
  4891                           ;usb_device.c: 794: {
  4892                           ;usb_device.c: 795: PIR2bits.USBIF = 0;;
  4893  0489  1112               	bcf	18,2	;volatile
  4894                           
  4895                           ;usb_device.c: 796: return;
  4896  048A  0008               	return
  4897  048B                     l597:	
  4898                           
  4899                           ;usb_device.c: 797: }
  4900                           ;usb_device.c: 802: if(UIEbits.TRNIE)
  4901  048B  003D               	movlb	29	; select bank29
  4902  048C  1D92               	btfss	18,3	;volatile
  4903  048D  2CE1               	goto	l598
  4904                           
  4905                           ;usb_device.c: 803: {
  4906                           ;usb_device.c: 804: for(i = 0; i < 4u; i++)
  4907  048E  0020               	movlb	0	; select bank0
  4908  048F  01E8               	clrf	USBDeviceTasks@i
  4909  0490  2CDA               	goto	L6
  4910  0491                     l4308:	
  4911                           
  4912                           ;usb_device.c: 807: {
  4913                           ;usb_device.c: 809: USTATcopy.Val = USTAT;
  4914  0491  080F               	movf	15,w	;volatile
  4915  0492  0020               	movlb	0	; select bank0
  4916  0493  00E6               	movwf	??_USBDeviceTasks
  4917  0494  0866               	movf	??_USBDeviceTasks,w
  4918  0495  00EF               	movwf	_USTATcopy
  4919                           
  4920                           ;usb_device.c: 810: endpoint_number = USTATcopy.endpoint_number;
  4921  0496  0C6F               	rrf	_USTATcopy,w
  4922  0497  00E6               	movwf	??_USBDeviceTasks
  4923  0498  0CE6               	rrf	??_USBDeviceTasks,f
  4924  0499  0C66               	rrf	??_USBDeviceTasks,w
  4925  049A  390F               	andlw	15
  4926  049B  00E7               	movwf	??_USBDeviceTasks+1
  4927  049C  0867               	movf	??_USBDeviceTasks+1,w
  4928  049D  0022               	movlb	2	; select bank2
  4929  049E  00DC               	movwf	_endpoint_number^(0+256)
  4930                           
  4931                           ;usb_device.c: 812: (UIR &= 0xF7);
  4932  049F  30F7               	movlw	247
  4933  04A0  0020               	movlb	0	; select bank0
  4934  04A1  00E6               	movwf	??_USBDeviceTasks
  4935  04A2  0866               	movf	??_USBDeviceTasks,w
  4936  04A3  003D               	movlb	29	; select bank29
  4937  04A4  0590               	andwf	16,f	;volatile
  4938                           
  4939                           ;usb_device.c: 817: if(USTATcopy.direction == 0)
  4940  04A5  0020               	movlb	0	; select bank0
  4941  04A6  196F               	btfsc	_USTATcopy,2
  4942  04A7  2CAC               	goto	l4318
  4943                           
  4944                           ;usb_device.c: 818: {
  4945                           ;usb_device.c: 819: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4946  04A8  0022               	movlb	2	; select bank2
  4947  04A9  085C               	movf	_endpoint_number^(0+256),w
  4948  04AA  3E4C               	addlw	_ep_data_out& (0+255)
  4949  04AB  2CAF               	goto	L5
  4950  04AC                     l4318:	
  4951                           ;usb_device.c: 820: }
  4952                           
  4953                           
  4954                           ;usb_device.c: 821: else
  4955                           ;usb_device.c: 822: {
  4956                           ;usb_device.c: 823: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4957  04AC  0022               	movlb	2	; select bank2
  4958  04AD  085C               	movf	_endpoint_number^(0+256),w
  4959  04AE  3E4A               	addlw	_ep_data_in& (0+255)
  4960  04AF                     L5:	
  4961  04AF  0086               	movwf	6
  4962  04B0  3001               	movlw	1	; select bank2/3
  4963  04B1  0087               	movwf	7
  4964  04B2  0801               	movf	1,w
  4965  04B3  3901               	andlw	1
  4966  04B4  0020               	movlb	0	; select bank0
  4967  04B5  00E6               	movwf	??_USBDeviceTasks
  4968  04B6  3001               	movlw	1
  4969  04B7  06E6               	xorwf	??_USBDeviceTasks,f
  4970  04B8  0801               	movf	1,w
  4971  04B9  0666               	xorwf	??_USBDeviceTasks,w
  4972  04BA  39FE               	andlw	-2
  4973  04BB  0666               	xorwf	??_USBDeviceTasks,w
  4974  04BC  0081               	movwf	1
  4975                           
  4976                           ;usb_device.c: 824: }
  4977                           ;usb_device.c: 829: if(endpoint_number == 0)
  4978  04BD  0022               	movlb	2	; select bank2
  4979  04BE  08DC               	movf	_endpoint_number^(0+256),f
  4980  04BF  1D03               	skipz
  4981  04C0  2CC5               	goto	l4324
  4982                           
  4983                           ;usb_device.c: 830: {
  4984                           ;usb_device.c: 831: USBCtrlEPService();
  4985  04C1  318E  2690  3183   	fcall	_USBCtrlEPService
  4986                           
  4987                           ;usb_device.c: 832: }
  4988  04C4  2CD5               	goto	l4326
  4989  04C5                     l4324:	
  4990                           
  4991                           ;usb_device.c: 833: else
  4992                           ;usb_device.c: 834: {
  4993                           ;usb_device.c: 835: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  4994  04C5  3072               	movlw	114
  4995  04C6  0020               	movlb	0	; select bank0
  4996  04C7  00D5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  4997  04C8  3000               	movlw	0
  4998  04C9  00D6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  4999  04CA  306F               	movlw	_USTATcopy& (0+255)
  5000  04CB  00E6               	movwf	??_USBDeviceTasks
  5001  04CC  0866               	movf	??_USBDeviceTasks,w
  5002  04CD  00D7               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  5003  04CE  3000               	movlw	0
  5004  04CF  00D8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  5005  04D0  3000               	movlw	0
  5006  04D1  00D9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  5007  04D2  318B  2343  3183   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5008  04D5                     l4326:	
  5009                           ;usb_device.c: 838: else
  5010                           ;usb_device.c: 839: {
  5011                           ;usb_device.c: 840: break;
  5012                           
  5013                           ;usb_device.c: 836: }
  5014                           ;usb_device.c: 837: }
  5015                           
  5016  04D5  3001               	movlw	1
  5017  04D6  0020               	movlb	0	; select bank0
  5018  04D7  00E6               	movwf	??_USBDeviceTasks
  5019  04D8  0866               	movf	??_USBDeviceTasks,w
  5020  04D9  07E8               	addwf	USBDeviceTasks@i,f
  5021  04DA                     L6:	
  5022  04DA  3004               	movlw	4
  5023  04DB  0268               	subwf	USBDeviceTasks@i,w
  5024  04DC  1803               	btfsc	3,0
  5025  04DD  2CE1               	goto	l598
  5026                           
  5027                           ;usb_device.c: 805: {
  5028                           ;usb_device.c: 806: if(UIRbits.TRNIF)
  5029  04DE  003D               	movlb	29	; select bank29
  5030  04DF  1990               	btfsc	16,3	;volatile
  5031  04E0  2C91               	goto	l4308
  5032  04E1                     l598:	
  5033                           
  5034                           ;usb_device.c: 841: }
  5035                           ;usb_device.c: 842: }
  5036                           ;usb_device.c: 843: }
  5037                           ;usb_device.c: 845: PIR2bits.USBIF = 0;;
  5038  04E1  0020               	movlb	0	; select bank0
  5039  04E2  1112               	bcf	18,2	;volatile
  5040  04E3  0008               	return
  5041  04E4                     __end_of_USBDeviceTasks:	
  5042                           
  5043                           	psect	text16
  5044  0E90                     __ptext16:	
  5045 ;; *************** function _USBCtrlEPService *****************
  5046 ;; Defined at:
  5047 ;;		line 2392 in file "../framework/usb/usb_device.c"
  5048 ;; Parameters:    Size  Location     Type
  5049 ;;		None
  5050 ;; Auto vars:     Size  Location     Type
  5051 ;;  setup_cnt       1   21[BANK0 ] unsigned char 
  5052 ;; Return value:  Size  Location     Type
  5053 ;;		None               void
  5054 ;; Registers used:
  5055 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  5056 ;; Tracked objects:
  5057 ;;		On entry : 0/0
  5058 ;;		On exit  : 0/0
  5059 ;;		Unchanged: 0/0
  5060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5062 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5063 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5064 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5065 ;;Total ram usage:        4 bytes
  5066 ;; Hardware stack levels used:    1
  5067 ;; Hardware stack levels required when called:    8
  5068 ;; This function calls:
  5069 ;;		_USBCtrlTrfSetupHandler
  5070 ;;		_USBCtrlTrfOutHandler
  5071 ;;		_USBCtrlTrfInHandler
  5072 ;; This function is called by:
  5073 ;;		_USBDeviceTasks
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           
  5078                           ;psect for function _USBCtrlEPService
  5079  0E90                     _USBCtrlEPService:	
  5080                           
  5081                           ;usb_device.c: 2397: USBStatusStageTimeoutCounter = (uint8_t)45;
  5082                           
  5083                           ;incstack = 0
  5084                           ; Regs used in _USBCtrlEPService: [allreg]
  5085  0E90  302D               	movlw	45
  5086  0E91  0020               	movlb	0	; select bank0
  5087  0E92  00E2               	movwf	??_USBCtrlEPService
  5088  0E93  0862               	movf	??_USBCtrlEPService,w
  5089  0E94  0022               	movlb	2	; select bank2
  5090  0E95  00DA               	movwf	_USBStatusStageTimeoutCounter^(0+256)
  5091                           
  5092                           ;usb_device.c: 2401: if((USTATcopy.Val & ~0x02) == 0x00)
  5093  0E96  0020               	movlb	0	; select bank0
  5094  0E97  086F               	movf	_USTATcopy,w
  5095  0E98  39FD               	andlw	253
  5096  0E99  1D03               	btfss	3,2
  5097  0E9A  2EF5               	goto	l4422
  5098                           
  5099                           ;usb_device.c: 2402: {
  5100                           ;usb_device.c: 2405: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5101  0E9B  366F               	lsrf	_USTATcopy,w
  5102  0E9C  393F               	andlw	63
  5103  0E9D  00E2               	movwf	??_USBCtrlEPService
  5104  0E9E  3001               	movlw	1
  5105  0E9F                     u3845:	
  5106  0E9F  35E2               	lslf	??_USBCtrlEPService,f
  5107  0EA0  3EFF               	addlw	-1
  5108  0EA1  1D03               	skipz
  5109  0EA2  2E9F               	goto	u3845
  5110  0EA3  3562               	lslf	??_USBCtrlEPService,w
  5111  0EA4  3E20               	addlw	32
  5112  0EA5  00E3               	movwf	??_USBCtrlEPService+1
  5113  0EA6  0863               	movf	??_USBCtrlEPService+1,w
  5114  0EA7  00EE               	movwf	_pBDTEntryEP0OutCurrent
  5115                           
  5116                           ;usb_device.c: 2413: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5117  0EA8  086E               	movf	_pBDTEntryEP0OutCurrent,w
  5118  0EA9  00E2               	movwf	??_USBCtrlEPService
  5119  0EAA  0862               	movf	??_USBCtrlEPService,w
  5120  0EAB  00FC               	movwf	_pBDTEntryEP0OutNext
  5121                           
  5122                           ;usb_device.c: 2415: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  5123  0EAC  3004               	movlw	4
  5124  0EAD  00E2               	movwf	??_USBCtrlEPService
  5125  0EAE  0862               	movf	??_USBCtrlEPService,w
  5126  0EAF  06FC               	xorwf	_pBDTEntryEP0OutNext,f
  5127                           
  5128                           ;usb_device.c: 2418: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5129  0EB0  086E               	movf	_pBDTEntryEP0OutCurrent,w
  5130  0EB1  0086               	movwf	6
  5131  0EB2  0187               	clrf	7
  5132  0EB3  0C01               	rrf	1,w
  5133  0EB4  0C89               	rrf	9,f
  5134  0EB5  390F               	andlw	15
  5135  0EB6  3A0D               	xorlw	13
  5136  0EB7  1D03               	skipz
  5137  0EB8  2EF2               	goto	l4420
  5138                           
  5139                           ;usb_device.c: 2419: {
  5140                           ;usb_device.c: 2420: unsigned char setup_cnt;
  5141                           ;usb_device.c: 2426: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  5142  0EB9  01E5               	clrf	USBCtrlEPService@setup_cnt
  5143  0EBA  3008               	movlw	8
  5144  0EBB  0265               	subwf	USBCtrlEPService@setup_cnt,w
  5145  0EBC  1803               	btfsc	3,0
  5146  0EBD  2EE3               	goto	l4416
  5147  0EBE                     l4410:	
  5148                           
  5149                           ;usb_device.c: 2427: {
  5150                           ;usb_device.c: 2428: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
  5151  0EBE  086E               	movf	_pBDTEntryEP0OutCurrent,w
  5152  0EBF  3E02               	addlw	2
  5153  0EC0  0086               	movwf	6
  5154  0EC1  0187               	clrf	7
  5155  0EC2  3F40               	moviw [0]fsr1
  5156  0EC3  00E2               	movwf	??_USBCtrlEPService
  5157  0EC4  3F41               	moviw [1]fsr1
  5158  0EC5  00E3               	movwf	??_USBCtrlEPService+1
  5159  0EC6  0862               	movf	??_USBCtrlEPService,w
  5160  0EC7  0086               	movwf	6
  5161  0EC8  0863               	movf	??_USBCtrlEPService+1,w
  5162  0EC9  0087               	movwf	7
  5163  0ECA  0801               	movf	1,w
  5164  0ECB  00E4               	movwf	??_USBCtrlEPService+2
  5165  0ECC  0865               	movf	USBCtrlEPService@setup_cnt,w
  5166  0ECD  3E40               	addlw	64
  5167  0ECE  0086               	movwf	6
  5168  0ECF  0187               	clrf	7
  5169  0ED0  0864               	movf	??_USBCtrlEPService+2,w
  5170  0ED1  0081               	movwf	1
  5171                           
  5172                           ;usb_device.c: 2429: pBDTEntryEP0OutCurrent->ADR++;
  5173  0ED2  086E               	movf	_pBDTEntryEP0OutCurrent,w
  5174  0ED3  3E02               	addlw	2
  5175  0ED4  0086               	movwf	6
  5176  0ED5  0187               	clrf	7
  5177  0ED6  3001               	movlw	1
  5178  0ED7  0781               	addwf	1,f
  5179  0ED8  3141               	addfsr 1,1
  5180  0ED9  1803               	skipnc
  5181  0EDA  0A81               	incf	1,f
  5182  0EDB  3001               	movlw	1
  5183  0EDC  00E2               	movwf	??_USBCtrlEPService
  5184  0EDD  0862               	movf	??_USBCtrlEPService,w
  5185  0EDE  07E5               	addwf	USBCtrlEPService@setup_cnt,f
  5186  0EDF  3008               	movlw	8
  5187  0EE0  0265               	subwf	USBCtrlEPService@setup_cnt,w
  5188  0EE1  1C03               	skipc
  5189  0EE2  2EBE               	goto	l4410
  5190  0EE3                     l4416:	
  5191                           
  5192                           ;usb_device.c: 2430: }
  5193                           ;usb_device.c: 2431: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5194  0EE3  3040               	movlw	64
  5195  0EE4  00E2               	movwf	??_USBCtrlEPService
  5196  0EE5  3000               	movlw	0
  5197  0EE6  00E3               	movwf	??_USBCtrlEPService+1
  5198  0EE7  086E               	movf	_pBDTEntryEP0OutCurrent,w
  5199  0EE8  3E02               	addlw	2
  5200  0EE9  0086               	movwf	6
  5201  0EEA  0187               	clrf	7
  5202  0EEB  0862               	movf	??_USBCtrlEPService,w
  5203  0EEC  3FC0               	movwi [0]fsr1
  5204  0EED  0863               	movf	??_USBCtrlEPService+1,w
  5205  0EEE  3FC1               	movwi [1]fsr1
  5206                           
  5207                           ;usb_device.c: 2434: USBCtrlTrfSetupHandler();
  5208  0EEF  318B  23BB         	fcall	_USBCtrlTrfSetupHandler
  5209                           
  5210                           ;usb_device.c: 2435: }
  5211  0EF1  0008               	return
  5212  0EF2                     l4420:	
  5213                           
  5214                           ;usb_device.c: 2436: else
  5215                           ;usb_device.c: 2437: {
  5216                           ;usb_device.c: 2439: USBCtrlTrfOutHandler();
  5217  0EF2  318A  22E5         	fcall	_USBCtrlTrfOutHandler
  5218                           
  5219                           ;usb_device.c: 2440: }
  5220                           ;usb_device.c: 2441: }
  5221  0EF4  0008               	return
  5222  0EF5                     l4422:	
  5223                           
  5224                           ;usb_device.c: 2442: else if((USTATcopy.Val & ~0x02) == 0x04)
  5225  0EF5  30FD               	movlw	253
  5226  0EF6  0020               	movlb	0	; select bank0
  5227  0EF7  056F               	andwf	_USTATcopy,w
  5228  0EF8  00E2               	movwf	??_USBCtrlEPService
  5229  0EF9  0862               	movf	??_USBCtrlEPService,w
  5230  0EFA  3A04               	xorlw	4
  5231  0EFB  1D03               	skipz
  5232  0EFC  0008               	return
  5233                           
  5234                           ;usb_device.c: 2443: {
  5235                           ;usb_device.c: 2446: USBCtrlTrfInHandler();
  5236  0EFD  318D  25B1         	fcall	_USBCtrlTrfInHandler
  5237  0EFF  0008               	return
  5238  0F00                     __end_of_USBCtrlEPService:	
  5239                           
  5240                           	psect	text17
  5241  0DB1                     __ptext17:	
  5242 ;; *************** function _USBCtrlTrfInHandler *****************
  5243 ;; Defined at:
  5244 ;;		line 2618 in file "../framework/usb/usb_device.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;		None
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;  lastDTS         1    6[COMMON] unsigned char 
  5249 ;; Return value:  Size  Location     Type
  5250 ;;		None               void
  5251 ;; Registers used:
  5252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5253 ;; Tracked objects:
  5254 ;;		On entry : 0/0
  5255 ;;		On exit  : 0/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5259 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5260 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5261 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5262 ;;Total ram usage:        3 bytes
  5263 ;; Hardware stack levels used:    1
  5264 ;; Hardware stack levels required when called:    2
  5265 ;; This function calls:
  5266 ;;		_USBCtrlTrfTxService
  5267 ;; This function is called by:
  5268 ;;		_USBCtrlEPService
  5269 ;; This function uses a non-reentrant model
  5270 ;;
  5271                           
  5272                           
  5273                           ;psect for function _USBCtrlTrfInHandler
  5274  0DB1                     _USBCtrlTrfInHandler:	
  5275                           
  5276                           ;usb_device.c: 2619: uint8_t lastDTS;
  5277                           ;usb_device.c: 2621: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  5278                           
  5279                           ;incstack = 0
  5280                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5281  0DB1  0020               	movlb	0	; select bank0
  5282  0DB2  086B               	movf	_pBDTEntryIn,w
  5283  0DB3  0086               	movwf	6
  5284  0DB4  0187               	clrf	7
  5285  0DB5  3000               	movlw	0
  5286  0DB6  1B01               	btfsc	1,6
  5287  0DB7  3001               	movlw	1
  5288  0DB8  00F6               	movwf	USBCtrlTrfInHandler@lastDTS
  5289                           
  5290                           ;usb_device.c: 2624: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  5291  0DB9  3004               	movlw	4
  5292  0DBA  00F4               	movwf	??_USBCtrlTrfInHandler
  5293  0DBB  0874               	movf	??_USBCtrlTrfInHandler,w
  5294  0DBC  06EB               	xorwf	_pBDTEntryIn,f
  5295                           
  5296                           ;usb_device.c: 2629: if(USBDeviceState == ADR_PENDING_STATE)
  5297  0DBD  086D               	movf	_USBDeviceState,w
  5298  0DBE  3A08               	xorlw	8
  5299  0DBF  1D03               	skipz
  5300  0DC0  2DCF               	goto	l762
  5301                           
  5302                           ;usb_device.c: 2630: {
  5303                           ;usb_device.c: 2631: UADDR = (SetupPkt.bDevADR & 0x7F);
  5304  0DC1  0842               	movf	66,w	;volatile
  5305  0DC2  397F               	andlw	127
  5306  0DC3  003D               	movlb	29	; select bank29
  5307  0DC4  0096               	movwf	22	;volatile
  5308                           
  5309                           ;usb_device.c: 2632: if(UADDR != 0u)
  5310  0DC5  0816               	movf	22,w	;volatile
  5311  0DC6  1903               	btfsc	3,2
  5312  0DC7  2DCA               	goto	l3910
  5313                           
  5314                           ;usb_device.c: 2633: {
  5315                           ;usb_device.c: 2634: USBDeviceState=ADDRESS_STATE;
  5316  0DC8  3010               	movlw	16
  5317  0DC9  2DCB               	goto	L7
  5318  0DCA                     l3910:	
  5319                           ;usb_device.c: 2635: }
  5320                           
  5321                           
  5322                           ;usb_device.c: 2636: else
  5323                           ;usb_device.c: 2637: {
  5324                           ;usb_device.c: 2638: USBDeviceState=DEFAULT_STATE;
  5325  0DCA  3004               	movlw	4
  5326  0DCB                     L7:	
  5327  0DCB  00F4               	movwf	??_USBCtrlTrfInHandler
  5328  0DCC  0874               	movf	??_USBCtrlTrfInHandler,w
  5329  0DCD  0020               	movlb	0	; select bank0
  5330  0DCE  00ED               	movwf	_USBDeviceState
  5331  0DCF                     l762:	
  5332                           
  5333                           ;usb_device.c: 2639: }
  5334                           ;usb_device.c: 2640: }
  5335                           ;usb_device.c: 2643: if(controlTransferState == 1)
  5336  0DCF  0021               	movlb	1	; select bank1
  5337  0DD0  0864               	movf	_controlTransferState^(0+128),w
  5338  0DD1  3A01               	xorlw	1
  5339  0DD2  1D03               	skipz
  5340  0DD3  2E13               	goto	l765
  5341                           
  5342                           ;usb_device.c: 2644: {
  5343                           ;usb_device.c: 2645: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  5344  0DD4  3048               	movlw	72
  5345  0DD5  00F4               	movwf	??_USBCtrlTrfInHandler
  5346  0DD6  3000               	movlw	0
  5347  0DD7  00F5               	movwf	??_USBCtrlTrfInHandler+1
  5348  0DD8  0020               	movlb	0	; select bank0
  5349  0DD9  086B               	movf	_pBDTEntryIn,w
  5350  0DDA  3E02               	addlw	2
  5351  0DDB  0086               	movwf	6
  5352  0DDC  0187               	clrf	7
  5353  0DDD  0874               	movf	??_USBCtrlTrfInHandler,w
  5354  0DDE  3FC0               	movwi [0]fsr1
  5355  0DDF  0875               	movf	??_USBCtrlTrfInHandler+1,w
  5356  0DE0  3FC1               	movwi [1]fsr1
  5357                           
  5358                           ;usb_device.c: 2646: USBCtrlTrfTxService();
  5359  0DE1  318E  2620  318D   	fcall	_USBCtrlTrfTxService
  5360                           
  5361                           ;usb_device.c: 2652: if(shortPacketStatus == 2)
  5362  0DE4  0021               	movlb	1	; select bank1
  5363  0DE5  0867               	movf	_shortPacketStatus^(0+128),w
  5364  0DE6  3A02               	xorlw	2
  5365  0DE7  1D03               	skipz
  5366  0DE8  2DF6               	goto	l3920
  5367                           
  5368                           ;usb_device.c: 2653: {
  5369                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val = 0x04;
  5370  0DE9  3004               	movlw	4
  5371  0DEA  00F4               	movwf	??_USBCtrlTrfInHandler
  5372  0DEB  0020               	movlb	0	; select bank0
  5373  0DEC  086B               	movf	_pBDTEntryIn,w
  5374  0DED  0086               	movwf	6
  5375  0DEE  0187               	clrf	7
  5376  0DEF  0874               	movf	??_USBCtrlTrfInHandler,w
  5377  0DF0  0081               	movwf	1
  5378                           
  5379                           ;usb_device.c: 2657: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5380  0DF1  086B               	movf	_pBDTEntryIn,w
  5381  0DF2  0086               	movwf	6
  5382  0DF3  0187               	clrf	7
  5383  0DF4  1781               	bsf	1,7
  5384                           
  5385                           ;usb_device.c: 2658: }
  5386  0DF5  0008               	return
  5387  0DF6                     l3920:	
  5388                           
  5389                           ;usb_device.c: 2659: else
  5390                           ;usb_device.c: 2660: {
  5391                           ;usb_device.c: 2661: if(lastDTS == 0)
  5392  0DF6  08F6               	movf	USBCtrlTrfInHandler@lastDTS,f
  5393  0DF7  1D03               	skipz
  5394  0DF8  2E06               	goto	l3924
  5395                           
  5396                           ;usb_device.c: 2662: {
  5397                           ;usb_device.c: 2663: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  5398  0DF9  3048               	movlw	72
  5399  0DFA  00F4               	movwf	??_USBCtrlTrfInHandler
  5400  0DFB  0020               	movlb	0	; select bank0
  5401  0DFC  086B               	movf	_pBDTEntryIn,w
  5402  0DFD  0086               	movwf	6
  5403  0DFE  0187               	clrf	7
  5404  0DFF  0874               	movf	??_USBCtrlTrfInHandler,w
  5405  0E00  0081               	movwf	1
  5406                           
  5407                           ;usb_device.c: 2664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5408  0E01  086B               	movf	_pBDTEntryIn,w
  5409  0E02  0086               	movwf	6
  5410  0E03  0187               	clrf	7
  5411  0E04  1781               	bsf	1,7
  5412                           
  5413                           ;usb_device.c: 2665: }
  5414  0E05  0008               	return
  5415  0E06                     l3924:	
  5416                           
  5417                           ;usb_device.c: 2666: else
  5418                           ;usb_device.c: 2667: {
  5419                           ;usb_device.c: 2668: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  5420  0E06  3008               	movlw	8
  5421  0E07  00F4               	movwf	??_USBCtrlTrfInHandler
  5422  0E08  0020               	movlb	0	; select bank0
  5423  0E09  086B               	movf	_pBDTEntryIn,w
  5424  0E0A  0086               	movwf	6
  5425  0E0B  0187               	clrf	7
  5426  0E0C  0874               	movf	??_USBCtrlTrfInHandler,w
  5427  0E0D  0081               	movwf	1
  5428                           
  5429                           ;usb_device.c: 2669: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5430  0E0E  086B               	movf	_pBDTEntryIn,w
  5431  0E0F  0086               	movwf	6
  5432  0E10  0187               	clrf	7
  5433  0E11  1781               	bsf	1,7
  5434                           
  5435                           ;usb_device.c: 2670: }
  5436                           ;usb_device.c: 2671: }
  5437                           ;usb_device.c: 2672: }
  5438  0E12  0008               	return
  5439  0E13                     l765:	
  5440                           
  5441                           ;usb_device.c: 2673: else
  5442                           ;usb_device.c: 2674: {
  5443                           ;usb_device.c: 2678: if(outPipes[0].info.bits.busy == 1)
  5444  0E13  0022               	movlb	2	; select bank2
  5445  0E14  1FC2               	btfss	(_outPipes^(0+256)+2),7
  5446  0E15  2E1D               	goto	l3932
  5447                           
  5448                           ;usb_device.c: 2679: {
  5449                           ;usb_device.c: 2680: if(outPipes[0].pFunc != (0))
  5450  0E16  0845               	movf	(_outPipes+5)^(0+256),w
  5451  0E17  1903               	btfsc	3,2
  5452  0E18  2E1C               	goto	l3930
  5453                           
  5454                           ;usb_device.c: 2681: {
  5455                           ;usb_device.c: 2682: outPipes[0].pFunc();
  5456  0E19  0845               	movf	(_outPipes+5)^(0+256),w
  5457  0E1A  318D  2DB1         	ljmp	$	;if you get stuck here, you called an invalid pointer
  5458  0E1C                     l3930:	
  5459                           
  5460                           ;usb_device.c: 2683: }
  5461                           ;usb_device.c: 2684: outPipes[0].info.bits.busy = 0;
  5462  0E1C  13C2               	bcf	(_outPipes^(0+256)+2),7
  5463  0E1D                     l3932:	
  5464                           
  5465                           ;usb_device.c: 2685: }
  5466                           ;usb_device.c: 2687: controlTransferState = 0;
  5467  0E1D  0021               	movlb	1	; select bank1
  5468  0E1E  01E4               	clrf	_controlTransferState^(0+128)
  5469  0E1F  0008               	return
  5470  0E20                     __end_of_USBCtrlTrfInHandler:	
  5471                           
  5472                           	psect	text18
  5473  0AE5                     __ptext18:	
  5474 ;; *************** function _USBCtrlTrfOutHandler *****************
  5475 ;; Defined at:
  5476 ;;		line 2564 in file "../framework/usb/usb_device.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;		None
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;		None
  5481 ;; Return value:  Size  Location     Type
  5482 ;;		None               void
  5483 ;; Registers used:
  5484 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5492 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5493 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5494 ;;Total ram usage:        2 bytes
  5495 ;; Hardware stack levels used:    1
  5496 ;; Hardware stack levels required when called:    3
  5497 ;; This function calls:
  5498 ;;		_USBCtrlTrfRxService
  5499 ;; This function is called by:
  5500 ;;		_USBCtrlEPService
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504                           
  5505                           ;psect for function _USBCtrlTrfOutHandler
  5506  0AE5                     _USBCtrlTrfOutHandler:	
  5507                           
  5508                           ;usb_device.c: 2565: if(controlTransferState == 2)
  5509                           
  5510                           ;incstack = 0
  5511                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5512  0AE5  0021               	movlb	1	; select bank1
  5513  0AE6  0864               	movf	_controlTransferState^(0+128),w
  5514  0AE7  3A02               	xorlw	2
  5515  0AE8  1D03               	skipz
  5516  0AE9  2AED               	goto	l3890
  5517                           
  5518                           ;usb_device.c: 2566: {
  5519                           ;usb_device.c: 2567: USBCtrlTrfRxService();
  5520  0AEA  3187  2712         	fcall	_USBCtrlTrfRxService
  5521                           
  5522                           ;usb_device.c: 2568: }
  5523  0AEC  0008               	return
  5524  0AED                     l3890:	
  5525                           
  5526                           ;usb_device.c: 2569: else
  5527                           ;usb_device.c: 2570: {
  5528                           ;usb_device.c: 2573: controlTransferState = 0;
  5529  0AED  0021               	movlb	1	; select bank1
  5530  0AEE  01E4               	clrf	_controlTransferState^(0+128)
  5531                           
  5532                           ;usb_device.c: 2580: if(BothEP0OutUOWNsSet == 0)
  5533  0AEF  0022               	movlb	2	; select bank2
  5534  0AF0  08D2               	movf	_BothEP0OutUOWNsSet^(0+256),f
  5535  0AF1  1D03               	skipz
  5536  0AF2  2B12               	goto	l3896
  5537                           
  5538                           ;usb_device.c: 2581: {
  5539                           ;usb_device.c: 2582: pBDTEntryEP0OutNext->CNT = 8;
  5540  0AF3  3008               	movlw	8
  5541  0AF4  00F7               	movwf	??_USBCtrlTrfOutHandler
  5542  0AF5  0A7C               	incf	_pBDTEntryEP0OutNext,w
  5543  0AF6  0086               	movwf	6
  5544  0AF7  0187               	clrf	7
  5545  0AF8  0877               	movf	??_USBCtrlTrfOutHandler,w
  5546  0AF9  0081               	movwf	1
  5547                           
  5548                           ;usb_device.c: 2583: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5549  0AFA  3040               	movlw	64
  5550  0AFB  00F7               	movwf	??_USBCtrlTrfOutHandler
  5551  0AFC  3000               	movlw	0
  5552  0AFD  00F8               	movwf	??_USBCtrlTrfOutHandler+1
  5553  0AFE  087C               	movf	_pBDTEntryEP0OutNext,w
  5554  0AFF  3E02               	addlw	2
  5555  0B00  0086               	movwf	6
  5556  0B01  0187               	clrf	7
  5557  0B02  0877               	movf	??_USBCtrlTrfOutHandler,w
  5558  0B03  3FC0               	movwi [0]fsr1
  5559  0B04  0878               	movf	??_USBCtrlTrfOutHandler+1,w
  5560  0B05  3FC1               	movwi [1]fsr1
  5561                           
  5562                           ;usb_device.c: 2584: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5563  0B06  300C               	movlw	12
  5564  0B07  00F7               	movwf	??_USBCtrlTrfOutHandler
  5565  0B08  087C               	movf	_pBDTEntryEP0OutNext,w
  5566  0B09  0086               	movwf	6
  5567  0B0A  0187               	clrf	7
  5568  0B0B  0877               	movf	??_USBCtrlTrfOutHandler,w
  5569  0B0C  0081               	movwf	1
  5570                           
  5571                           ;usb_device.c: 2585: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5572  0B0D  087C               	movf	_pBDTEntryEP0OutNext,w
  5573  0B0E  0086               	movwf	6
  5574  0B0F  0187               	clrf	7
  5575  0B10  1781               	bsf	1,7
  5576                           
  5577                           ;usb_device.c: 2586: }
  5578  0B11  0008               	return
  5579  0B12                     l3896:	
  5580                           
  5581                           ;usb_device.c: 2587: else
  5582                           ;usb_device.c: 2588: {
  5583                           ;usb_device.c: 2589: BothEP0OutUOWNsSet = 0;
  5584  0B12  01D2               	clrf	_BothEP0OutUOWNsSet^(0+256)
  5585  0B13  0008               	return
  5586  0B14                     __end_of_USBCtrlTrfOutHandler:	
  5587                           
  5588                           	psect	text19
  5589  0712                     __ptext19:	
  5590 ;; *************** function _USBCtrlTrfRxService *****************
  5591 ;; Defined at:
  5592 ;;		line 1872 in file "../framework/usb/usb_device.c"
  5593 ;; Parameters:    Size  Location     Type
  5594 ;;		None
  5595 ;; Auto vars:     Size  Location     Type
  5596 ;;  byteToRead      1    6[COMMON] unsigned char 
  5597 ;;  i               1    5[COMMON] unsigned char 
  5598 ;; Return value:  Size  Location     Type
  5599 ;;		None               void
  5600 ;; Registers used:
  5601 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5608 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5610 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5611 ;;Total ram usage:        4 bytes
  5612 ;; Hardware stack levels used:    1
  5613 ;; Hardware stack levels required when called:    2
  5614 ;; This function calls:
  5615 ;;		_USBCtrlEPAllowStatusStage
  5616 ;; This function is called by:
  5617 ;;		_USBCtrlTrfOutHandler
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           
  5622                           ;psect for function _USBCtrlTrfRxService
  5623  0712                     _USBCtrlTrfRxService:	
  5624                           
  5625                           ;usb_device.c: 1873: uint8_t byteToRead;
  5626                           ;usb_device.c: 1874: uint8_t i;
  5627                           ;usb_device.c: 1878: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  5628                           
  5629                           ;incstack = 0
  5630                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5631  0712  0020               	movlb	0	; select bank0
  5632  0713  086E               	movf	_pBDTEntryEP0OutCurrent,w
  5633  0714  0086               	movwf	6
  5634  0715  0187               	clrf	7
  5635  0716  3F41               	moviw [1]fsr1
  5636  0717  00F6               	movwf	USBCtrlTrfRxService@byteToRead
  5637                           
  5638                           ;usb_device.c: 1884: if(byteToRead > outPipes[0].wCount.Val)
  5639  0718  0876               	movf	USBCtrlTrfRxService@byteToRead,w
  5640  0719  00F3               	movwf	??_USBCtrlTrfRxService
  5641  071A  01F4               	clrf	??_USBCtrlTrfRxService+1
  5642  071B  0874               	movf	??_USBCtrlTrfRxService+1,w
  5643  071C  0022               	movlb	2	; select bank2
  5644  071D  0244               	subwf	((_outPipes+1)^(0+256)+3),w
  5645  071E  1D03               	skipz
  5646  071F  2F22               	goto	u3065
  5647  0720  0873               	movf	??_USBCtrlTrfRxService,w
  5648  0721  0243               	subwf	(_outPipes^(0+256)+3),w
  5649  0722                     u3065:	
  5650  0722  1803               	skipnc
  5651  0723  2F28               	goto	l678
  5652                           
  5653                           ;usb_device.c: 1885: {
  5654                           ;usb_device.c: 1886: byteToRead = outPipes[0].wCount.Val;
  5655  0724  0843               	movf	(_outPipes^(0+256)+3),w
  5656  0725  00F3               	movwf	??_USBCtrlTrfRxService
  5657  0726  0873               	movf	??_USBCtrlTrfRxService,w
  5658  0727  00F6               	movwf	USBCtrlTrfRxService@byteToRead
  5659  0728                     l678:	
  5660                           
  5661                           ;usb_device.c: 1887: }
  5662                           ;usb_device.c: 1889: outPipes[0].wCount.Val -= byteToRead;
  5663  0728  0876               	movf	USBCtrlTrfRxService@byteToRead,w
  5664  0729  00F3               	movwf	??_USBCtrlTrfRxService
  5665  072A  01F4               	clrf	??_USBCtrlTrfRxService+1
  5666  072B  0873               	movf	??_USBCtrlTrfRxService,w
  5667  072C  02C3               	subwf	(_outPipes^(0+256)+3),f
  5668  072D  0874               	movf	??_USBCtrlTrfRxService+1,w
  5669  072E  3BC4               	subwfb	((_outPipes+1)^(0+256)+3),f
  5670                           
  5671                           ;usb_device.c: 1893: for(i=0;i<byteToRead;i++)
  5672  072F  01F5               	clrf	USBCtrlTrfRxService@i
  5673  0730                     l3718:	
  5674  0730  0876               	movf	USBCtrlTrfRxService@byteToRead,w
  5675  0731  0275               	subwf	USBCtrlTrfRxService@i,w
  5676  0732  1803               	btfsc	3,0
  5677  0733  2F48               	goto	l3720
  5678                           
  5679                           ;usb_device.c: 1894: {
  5680                           ;usb_device.c: 1895: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  5681  0734  0875               	movf	USBCtrlTrfRxService@i,w
  5682  0735  3E48               	addlw	72
  5683  0736  0086               	movwf	6
  5684  0737  0187               	clrf	7
  5685  0738  0801               	movf	1,w
  5686  0739  00F3               	movwf	??_USBCtrlTrfRxService
  5687  073A  0840               	movf	_outPipes^(0+256),w
  5688  073B  0086               	movwf	6
  5689  073C  0187               	clrf	7
  5690  073D  0873               	movf	??_USBCtrlTrfRxService,w
  5691  073E  0081               	movwf	1
  5692  073F  3001               	movlw	1
  5693  0740  00F3               	movwf	??_USBCtrlTrfRxService
  5694  0741  0873               	movf	??_USBCtrlTrfRxService,w
  5695  0742  07C0               	addwf	_outPipes^(0+256),f
  5696  0743  3001               	movlw	1
  5697  0744  00F3               	movwf	??_USBCtrlTrfRxService
  5698  0745  0873               	movf	??_USBCtrlTrfRxService,w
  5699  0746  07F5               	addwf	USBCtrlTrfRxService@i,f
  5700  0747  2F30               	goto	l3718
  5701  0748                     l3720:	
  5702                           
  5703                           ;usb_device.c: 1896: }
  5704                           ;usb_device.c: 1900: if(outPipes[0].wCount.Val > 0)
  5705  0748  3003               	movlw	3
  5706  0749  3E40               	addlw	_outPipes& (0+255)
  5707  074A  0086               	movwf	6
  5708  074B  3001               	movlw	1	; select bank2/3
  5709  074C  0087               	movwf	7
  5710  074D  0016               	moviw fsr1++
  5711  074E  0401               	iorwf	1,w
  5712  074F  1903               	skipnz
  5713  0750  2F82               	goto	l3728
  5714                           
  5715                           ;usb_device.c: 1901: {
  5716                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->CNT = 8;
  5717  0751  3008               	movlw	8
  5718  0752  00F3               	movwf	??_USBCtrlTrfRxService
  5719  0753  0A7C               	incf	_pBDTEntryEP0OutNext,w
  5720  0754  0086               	movwf	6
  5721  0755  0187               	clrf	7
  5722  0756  0873               	movf	??_USBCtrlTrfRxService,w
  5723  0757  0081               	movwf	1
  5724                           
  5725                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  5726  0758  3048               	movlw	72
  5727  0759  00F3               	movwf	??_USBCtrlTrfRxService
  5728  075A  3000               	movlw	0
  5729  075B  00F4               	movwf	??_USBCtrlTrfRxService+1
  5730  075C  087C               	movf	_pBDTEntryEP0OutNext,w
  5731  075D  3E02               	addlw	2
  5732  075E  0086               	movwf	6
  5733  075F  0187               	clrf	7
  5734  0760  0873               	movf	??_USBCtrlTrfRxService,w
  5735  0761  3FC0               	movwi [0]fsr1
  5736  0762  0874               	movf	??_USBCtrlTrfRxService+1,w
  5737  0763  3FC1               	movwi [1]fsr1
  5738                           
  5739                           ;usb_device.c: 1904: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  5740  0764  0020               	movlb	0	; select bank0
  5741  0765  086E               	movf	_pBDTEntryEP0OutCurrent,w
  5742  0766  0086               	movwf	6
  5743  0767  0187               	clrf	7
  5744  0768  1B01               	btfsc	1,6
  5745  0769  2F76               	goto	l3726
  5746                           
  5747                           ;usb_device.c: 1905: {
  5748                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  5749  076A  3048               	movlw	72
  5750  076B  00F3               	movwf	??_USBCtrlTrfRxService
  5751  076C  087C               	movf	_pBDTEntryEP0OutNext,w
  5752  076D  0086               	movwf	6
  5753  076E  0187               	clrf	7
  5754  076F  0873               	movf	??_USBCtrlTrfRxService,w
  5755  0770  0081               	movwf	1
  5756                           
  5757                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5758  0771  087C               	movf	_pBDTEntryEP0OutNext,w
  5759  0772  0086               	movwf	6
  5760  0773  0187               	clrf	7
  5761  0774  1781               	bsf	1,7
  5762                           
  5763                           ;usb_device.c: 1908: }
  5764  0775  0008               	return
  5765  0776                     l3726:	
  5766                           
  5767                           ;usb_device.c: 1909: else
  5768                           ;usb_device.c: 1910: {
  5769                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  5770  0776  3008               	movlw	8
  5771  0777  00F3               	movwf	??_USBCtrlTrfRxService
  5772  0778  087C               	movf	_pBDTEntryEP0OutNext,w
  5773  0779  0086               	movwf	6
  5774  077A  0187               	clrf	7
  5775  077B  0873               	movf	??_USBCtrlTrfRxService,w
  5776  077C  0081               	movwf	1
  5777                           
  5778                           ;usb_device.c: 1912: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5779  077D  087C               	movf	_pBDTEntryEP0OutNext,w
  5780  077E  0086               	movwf	6
  5781  077F  0187               	clrf	7
  5782  0780  1781               	bsf	1,7
  5783                           
  5784                           ;usb_device.c: 1913: }
  5785                           ;usb_device.c: 1914: }
  5786  0781  0008               	return
  5787  0782                     l3728:	
  5788                           
  5789                           ;usb_device.c: 1915: else
  5790                           ;usb_device.c: 1916: {
  5791                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->CNT = 8;
  5792  0782  3008               	movlw	8
  5793  0783  00F3               	movwf	??_USBCtrlTrfRxService
  5794  0784  0A7C               	incf	_pBDTEntryEP0OutNext,w
  5795  0785  0086               	movwf	6
  5796  0786  0187               	clrf	7
  5797  0787  0873               	movf	??_USBCtrlTrfRxService,w
  5798  0788  0081               	movwf	1
  5799                           
  5800                           ;usb_device.c: 1921: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5801  0789  3040               	movlw	64
  5802  078A  00F3               	movwf	??_USBCtrlTrfRxService
  5803  078B  3000               	movlw	0
  5804  078C  00F4               	movwf	??_USBCtrlTrfRxService+1
  5805  078D  087C               	movf	_pBDTEntryEP0OutNext,w
  5806  078E  3E02               	addlw	2
  5807  078F  0086               	movwf	6
  5808  0790  0187               	clrf	7
  5809  0791  0873               	movf	??_USBCtrlTrfRxService,w
  5810  0792  3FC0               	movwi [0]fsr1
  5811  0793  0874               	movf	??_USBCtrlTrfRxService+1,w
  5812  0794  3FC1               	movwi [1]fsr1
  5813                           
  5814                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  5815  0795  3004               	movlw	4
  5816  0796  00F3               	movwf	??_USBCtrlTrfRxService
  5817  0797  087C               	movf	_pBDTEntryEP0OutNext,w
  5818  0798  0086               	movwf	6
  5819  0799  0187               	clrf	7
  5820  079A  0873               	movf	??_USBCtrlTrfRxService,w
  5821  079B  0081               	movwf	1
  5822                           
  5823                           ;usb_device.c: 1926: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5824  079C  087C               	movf	_pBDTEntryEP0OutNext,w
  5825  079D  0086               	movwf	6
  5826  079E  0187               	clrf	7
  5827  079F  1781               	bsf	1,7
  5828                           
  5829                           ;usb_device.c: 1933: if(outPipes[0].pFunc != (0))
  5830  07A0  0022               	movlb	2	; select bank2
  5831  07A1  0845               	movf	(_outPipes+5)^(0+256),w
  5832  07A2  1903               	btfsc	3,2
  5833  07A3  2FA7               	goto	l3734
  5834                           
  5835                           ;usb_device.c: 1934: {
  5836                           ;usb_device.c: 1940: outPipes[0].pFunc();
  5837  07A4  0845               	movf	(_outPipes+5)^(0+256),w
  5838  07A5  3187  2F12         	ljmp	$	;if you get stuck here, you called an invalid pointer
  5839  07A7                     l3734:	
  5840                           
  5841                           ;usb_device.c: 1945: }
  5842                           ;usb_device.c: 1946: outPipes[0].info.bits.busy = 0;
  5843  07A7  13C2               	bcf	(_outPipes^(0+256)+2),7
  5844                           
  5845                           ;usb_device.c: 1960: if(USBDeferStatusStagePacket == 0)
  5846  07A8  0021               	movlb	1	; select bank1
  5847  07A9  08E2               	movf	_USBDeferStatusStagePacket^(0+128),f
  5848  07AA  1D03               	skipz
  5849  07AB  0008               	return
  5850                           
  5851                           ;usb_device.c: 1961: {
  5852                           ;usb_device.c: 1962: USBCtrlEPAllowStatusStage();
  5853  07AC  318D  2548         	fcall	_USBCtrlEPAllowStatusStage
  5854  07AE  0008               	return
  5855  07AF                     __end_of_USBCtrlTrfRxService:	
  5856                           
  5857                           	psect	text20
  5858  0BBB                     __ptext20:	
  5859 ;; *************** function _USBCtrlTrfSetupHandler *****************
  5860 ;; Defined at:
  5861 ;;		line 2492 in file "../framework/usb/usb_device.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;		None
  5864 ;; Auto vars:     Size  Location     Type
  5865 ;;		None
  5866 ;; Return value:  Size  Location     Type
  5867 ;;		None               void
  5868 ;; Registers used:
  5869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  5870 ;; Tracked objects:
  5871 ;;		On entry : 0/0
  5872 ;;		On exit  : 0/0
  5873 ;;		Unchanged: 0/0
  5874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5877 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5878 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5879 ;;Total ram usage:        1 bytes
  5880 ;; Hardware stack levels used:    1
  5881 ;; Hardware stack levels required when called:    7
  5882 ;; This function calls:
  5883 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5884 ;;		_USBCtrlEPServiceComplete
  5885 ;;		_USBCheckStdRequest
  5886 ;; This function is called by:
  5887 ;;		_USBCtrlEPService
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           
  5891                           
  5892                           ;psect for function _USBCtrlTrfSetupHandler
  5893  0BBB                     _USBCtrlTrfSetupHandler:	
  5894                           
  5895                           ;usb_device.c: 2496: shortPacketStatus = 0;
  5896                           
  5897                           ;incstack = 0
  5898                           ; Regs used in _USBCtrlTrfSetupHandler: [allreg]
  5899  0BBB  0021               	movlb	1	; select bank1
  5900  0BBC  01E7               	clrf	_shortPacketStatus^(0+128)
  5901                           
  5902                           ;usb_device.c: 2497: USBDeferStatusStagePacket = 0;
  5903  0BBD  01E2               	clrf	_USBDeferStatusStagePacket^(0+128)	;volatile
  5904                           
  5905                           ;usb_device.c: 2498: USBDeferINDataStagePackets = 0;
  5906  0BBE  0022               	movlb	2	; select bank2
  5907  0BBF  01D5               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  5908                           
  5909                           ;usb_device.c: 2499: USBDeferOUTDataStagePackets = 0;
  5910  0BC0  01D6               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  5911                           
  5912                           ;usb_device.c: 2500: BothEP0OutUOWNsSet = 0;
  5913  0BC1  01D2               	clrf	_BothEP0OutUOWNsSet^(0+256)
  5914                           
  5915                           ;usb_device.c: 2501: controlTransferState = 0;
  5916  0BC2  0021               	movlb	1	; select bank1
  5917  0BC3  01E4               	clrf	_controlTransferState^(0+128)
  5918                           
  5919                           ;usb_device.c: 2510: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5920  0BC4  307F               	movlw	127
  5921  0BC5  0020               	movlb	0	; select bank0
  5922  0BC6  00E1               	movwf	??_USBCtrlTrfSetupHandler
  5923  0BC7  086B               	movf	_pBDTEntryIn,w
  5924  0BC8  0086               	movwf	6
  5925  0BC9  0187               	clrf	7
  5926  0BCA  0861               	movf	??_USBCtrlTrfSetupHandler,w
  5927  0BCB  0581               	andwf	1,f
  5928                           
  5929                           ;usb_device.c: 2511: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  5930  0BCC  3004               	movlw	4
  5931  0BCD  00E1               	movwf	??_USBCtrlTrfSetupHandler
  5932  0BCE  0861               	movf	??_USBCtrlTrfSetupHandler,w
  5933  0BCF  06EB               	xorwf	_pBDTEntryIn,f
  5934                           
  5935                           ;usb_device.c: 2512: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5936  0BD0  307F               	movlw	127
  5937  0BD1  00E1               	movwf	??_USBCtrlTrfSetupHandler
  5938  0BD2  086B               	movf	_pBDTEntryIn,w
  5939  0BD3  0086               	movwf	6
  5940  0BD4  0187               	clrf	7
  5941  0BD5  0861               	movf	??_USBCtrlTrfSetupHandler,w
  5942  0BD6  0581               	andwf	1,f
  5943                           
  5944                           ;usb_device.c: 2513: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  5945  0BD7  3004               	movlw	4
  5946  0BD8  00E1               	movwf	??_USBCtrlTrfSetupHandler
  5947  0BD9  0861               	movf	??_USBCtrlTrfSetupHandler,w
  5948  0BDA  06EB               	xorwf	_pBDTEntryIn,f
  5949                           
  5950                           ;usb_device.c: 2514: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  5951  0BDB  307F               	movlw	127
  5952  0BDC  00E1               	movwf	??_USBCtrlTrfSetupHandler
  5953  0BDD  087C               	movf	_pBDTEntryEP0OutNext,w
  5954  0BDE  0086               	movwf	6
  5955  0BDF  0187               	clrf	7
  5956  0BE0  0861               	movf	??_USBCtrlTrfSetupHandler,w
  5957  0BE1  0581               	andwf	1,f
  5958                           
  5959                           ;usb_device.c: 2516: inPipes[0].info.Val = 0;
  5960  0BE2  0021               	movlb	1	; select bank1
  5961  0BE3  01EB               	clrf	(_inPipes^(0+128)+2)
  5962                           
  5963                           ;usb_device.c: 2517: inPipes[0].wCount.Val = 0;
  5964  0BE4  01EC               	clrf	(_inPipes^(0+128)+3)
  5965  0BE5  01ED               	clrf	((_inPipes+1)^(0+128)+3)
  5966                           
  5967                           ;usb_device.c: 2518: outPipes[0].info.Val = 0;
  5968  0BE6  0022               	movlb	2	; select bank2
  5969  0BE7  01C2               	clrf	(_outPipes^(0+256)+2)
  5970                           
  5971                           ;usb_device.c: 2519: outPipes[0].wCount.Val = 0;
  5972  0BE8  01C3               	clrf	(_outPipes^(0+256)+3)
  5973  0BE9  01C4               	clrf	((_outPipes+1)^(0+256)+3)
  5974                           
  5975                           ;usb_device.c: 2525: USBCheckStdRequest();
  5976  0BEA  318C  249B  318B   	fcall	_USBCheckStdRequest
  5977                           
  5978                           ;usb_device.c: 2526: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  5979  0BED  3003               	movlw	3
  5980  0BEE  0020               	movlb	0	; select bank0
  5981  0BEF  00D5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  5982  0BF0  3000               	movlw	0
  5983  0BF1  00D6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  5984  0BF2  01D7               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  5985  0BF3  3000               	movlw	0
  5986  0BF4  00D8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  5987  0BF5  3000               	movlw	0
  5988  0BF6  00D9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  5989  0BF7  318B  2343  318B   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5990                           
  5991                           ;usb_device.c: 2539: USBCtrlEPServiceComplete();
  5992  0BFA  3182  225E         	fcall	_USBCtrlEPServiceComplete
  5993  0BFC  0008               	return
  5994  0BFD                     __end_of_USBCtrlTrfSetupHandler:	
  5995                           
  5996                           	psect	text21
  5997  0C9B                     __ptext21:	
  5998 ;; *************** function _USBCheckStdRequest *****************
  5999 ;; Defined at:
  6000 ;;		line 2712 in file "../framework/usb/usb_device.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;		None
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;		None
  6005 ;; Return value:  Size  Location     Type
  6006 ;;		None               void
  6007 ;; Registers used:
  6008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6016 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6017 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6018 ;;Total ram usage:        1 bytes
  6019 ;; Hardware stack levels used:    1
  6020 ;; Hardware stack levels required when called:    6
  6021 ;; This function calls:
  6022 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6023 ;;		_USBStdSetCfgHandler
  6024 ;;		_USBStdGetDscHandler
  6025 ;;		_USBStdGetStatusHandler
  6026 ;;		_USBStdFeatureReqHandler
  6027 ;; This function is called by:
  6028 ;;		_USBCtrlTrfSetupHandler
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           
  6033                           ;psect for function _USBCheckStdRequest
  6034  0C9B                     _USBCheckStdRequest:	
  6035                           
  6036                           ;usb_device.c: 2713: if(SetupPkt.RequestType != (0x00>>5)) return;
  6037                           
  6038                           ;incstack = 0
  6039                           ; Regs used in _USBCheckStdRequest: [allreg]
  6040  0C9B  0020               	movlb	0	; select bank0
  6041  0C9C  0E40               	swapf	64,w	;volatile
  6042  0C9D  0C89               	rrf	9,f
  6043  0C9E  3903               	andlw	3
  6044  0C9F  3A00               	xorlw	0
  6045  0CA0  1D03               	btfss	3,2
  6046  0CA1  0008               	return
  6047  0CA2  2CE5               	goto	l4540
  6048  0CA3                     l779:	
  6049                           ;usb_device.c: 2716: {
  6050                           ;usb_device.c: 2717: case 5:
  6051                           
  6052                           ;usb_device.c: 2715: switch(SetupPkt.bRequest)
  6053                           
  6054                           
  6055                           ;usb_device.c: 2718: inPipes[0].info.bits.busy = 1;
  6056  0CA3  0021               	movlb	1	; select bank1
  6057  0CA4  17EB               	bsf	(_inPipes^(0+128)+2),7
  6058                           
  6059                           ;usb_device.c: 2719: USBDeviceState = ADR_PENDING_STATE;
  6060  0CA5  3008               	movlw	8
  6061  0CA6  0020               	movlb	0	; select bank0
  6062  0CA7  00E0               	movwf	??_USBCheckStdRequest
  6063  0CA8  0860               	movf	??_USBCheckStdRequest,w
  6064  0CA9  00ED               	movwf	_USBDeviceState
  6065                           
  6066                           ;usb_device.c: 2721: break;
  6067  0CAA  0008               	return
  6068  0CAB                     l4510:	
  6069                           ;usb_device.c: 2722: case 6:
  6070                           
  6071                           
  6072                           ;usb_device.c: 2723: USBStdGetDscHandler();
  6073  0CAB  318F  2700         	fcall	_USBStdGetDscHandler
  6074                           
  6075                           ;usb_device.c: 2724: break;
  6076  0CAD  0008               	return
  6077  0CAE                     l4512:	
  6078                           ;usb_device.c: 2725: case 9:
  6079                           
  6080                           
  6081                           ;usb_device.c: 2726: USBStdSetCfgHandler();
  6082  0CAE  318F  277F         	fcall	_USBStdSetCfgHandler
  6083                           
  6084                           ;usb_device.c: 2727: break;
  6085  0CB0  0008               	return
  6086  0CB1                     l4514:	
  6087                           ;usb_device.c: 2728: case 8:
  6088                           
  6089                           
  6090                           ;usb_device.c: 2729: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  6091  0CB1  30EE               	movlw	low _USBActiveConfiguration
  6092  0CB2  0021               	movlb	1	; select bank1
  6093  0CB3  00E9               	movwf	_inPipes^(0+128)
  6094  0CB4  3000               	movlw	high _USBActiveConfiguration
  6095  0CB5  00EA               	movwf	(_inPipes+1)^(0+128)
  6096                           
  6097                           ;usb_device.c: 2730: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6098  0CB6  146B               	bsf	(_inPipes^(0+128)+2),0
  6099                           
  6100                           ;usb_device.c: 2731: inPipes[0].wCount.v[0] = 1;
  6101  0CB7  01EC               	clrf	(_inPipes^(0+128)+3)
  6102  0CB8  0AEC               	incf	(_inPipes^(0+128)+3),f
  6103                           
  6104                           ;usb_device.c: 2732: inPipes[0].info.bits.busy = 1;
  6105  0CB9  17EB               	bsf	(_inPipes^(0+128)+2),7
  6106                           
  6107                           ;usb_device.c: 2733: break;
  6108  0CBA  0008               	return
  6109  0CBB                     l4522:	
  6110                           ;usb_device.c: 2734: case 0:
  6111                           
  6112                           
  6113                           ;usb_device.c: 2735: USBStdGetStatusHandler();
  6114  0CBB  318C  244C         	fcall	_USBStdGetStatusHandler
  6115                           
  6116                           ;usb_device.c: 2736: break;
  6117  0CBD  0008               	return
  6118  0CBE                     l4524:	
  6119                           ;usb_device.c: 2737: case 1:
  6120                           
  6121                           
  6122                           ;usb_device.c: 2738: case 3:
  6123                           ;usb_device.c: 2739: USBStdFeatureReqHandler();
  6124  0CBE  3181  2157         	fcall	_USBStdFeatureReqHandler
  6125                           
  6126                           ;usb_device.c: 2740: break;
  6127  0CC0  0008               	return
  6128  0CC1                     l4526:	
  6129                           ;usb_device.c: 2741: case 10:
  6130                           
  6131                           
  6132                           ;usb_device.c: 2742: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  6133  0CC1  0020               	movlb	0	; select bank0
  6134  0CC2  0844               	movf	68,w	;volatile
  6135  0CC3  3EEF               	addlw	_USBAlternateInterface& (0+255)
  6136  0CC4  0021               	movlb	1	; select bank1
  6137  0CC5  00E9               	movwf	_inPipes^(0+128)
  6138  0CC6  3000               	movlw	0
  6139  0CC7  00EA               	movwf	(_inPipes+1)^(0+128)
  6140                           
  6141                           ;usb_device.c: 2743: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6142  0CC8  146B               	bsf	(_inPipes^(0+128)+2),0
  6143                           
  6144                           ;usb_device.c: 2744: inPipes[0].wCount.v[0] = 1;
  6145  0CC9  01EC               	clrf	(_inPipes^(0+128)+3)
  6146  0CCA  0AEC               	incf	(_inPipes^(0+128)+3),f
  6147                           
  6148                           ;usb_device.c: 2745: inPipes[0].info.bits.busy = 1;
  6149  0CCB  17EB               	bsf	(_inPipes^(0+128)+2),7
  6150                           
  6151                           ;usb_device.c: 2746: break;
  6152  0CCC  0008               	return
  6153  0CCD                     l788:	
  6154                           ;usb_device.c: 2747: case 11:
  6155                           
  6156                           
  6157                           ;usb_device.c: 2748: inPipes[0].info.bits.busy = 1;
  6158  0CCD  0021               	movlb	1	; select bank1
  6159  0CCE  17EB               	bsf	(_inPipes^(0+128)+2),7
  6160                           
  6161                           ;usb_device.c: 2749: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  6162  0CCF  0020               	movlb	0	; select bank0
  6163  0CD0  0842               	movf	66,w	;volatile
  6164  0CD1  00E0               	movwf	??_USBCheckStdRequest
  6165  0CD2  0844               	movf	68,w	;volatile
  6166  0CD3  3EEF               	addlw	_USBAlternateInterface& (0+255)
  6167  0CD4  0086               	movwf	6
  6168  0CD5  0187               	clrf	7
  6169  0CD6  0860               	movf	??_USBCheckStdRequest,w
  6170  0CD7  0081               	movwf	1
  6171                           
  6172                           ;usb_device.c: 2750: break;
  6173  0CD8  0008               	return
  6174  0CD9                     l4536:	
  6175                           ;usb_device.c: 2751: case 7:
  6176                           
  6177                           
  6178                           ;usb_device.c: 2752: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  6179  0CD9  3002               	movlw	2
  6180  0CDA  00D5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  6181  0CDB  3000               	movlw	0
  6182  0CDC  00D6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  6183  0CDD  01D7               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  6184  0CDE  3000               	movlw	0
  6185  0CDF  00D8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  6186  0CE0  3000               	movlw	0
  6187  0CE1  00D9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  6188  0CE2  318B  2343         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6189                           
  6190                           ;usb_device.c: 2757: }
  6191                           
  6192                           ;usb_device.c: 2756: break;
  6193                           
  6194                           ;usb_device.c: 2755: default:
  6195                           
  6196                           ;usb_device.c: 2754: case 12:
  6197                           
  6198                           ;usb_device.c: 2753: break;
  6199  0CE4  0008               	return
  6200  0CE5                     l4540:	
  6201  0CE5  0020               	movlb	0	; select bank0
  6202  0CE6  0841               	movf	65,w	;volatile
  6203                           
  6204                           ; Switch size 1, requested type "space"
  6205                           ; Number of cases is 11, Range of values is 0 to 12
  6206                           ; switch strategies available:
  6207                           ; Name         Instructions Cycles
  6208                           ; direct_byte           32     6 (fixed)
  6209                           ; simple_byte           34    18 (average)
  6210                           ; jumptable            260     6 (fixed)
  6211                           ; rangetable            17     4 (fixed)
  6212                           ; spacedrange           31     6 (fixed)
  6213                           ; locatedrange          13     3 (fixed)
  6214                           ;	Chosen strategy is direct_byte
  6215  0CE7  0084               	movwf	4
  6216  0CE8  300D               	movlw	13
  6217  0CE9  0204               	subwf	4,w
  6218  0CEA  1803               	skipnc
  6219  0CEB  0008               	return
  6220  0CEC  3188               	movlp	high S4768
  6221  0CED  3504               	lslf	4,w
  6222  0CEE  3E00               	addlw	low S4768
  6223  0CEF  0082               	movwf	2
  6224  0CF0                     l777:	
  6225  0CF0  0008               	return
  6226  0CF1                     __end_of_USBCheckStdRequest:	
  6227                           
  6228                           	psect	swtext2
  6229  0800                     __pswtext2:	
  6230  0800                     S4768:	
  6231  0800  318C  2CBB         	ljmp	l4522
  6232  0802  318C  2CBE         	ljmp	l4524
  6233  0804  318C  2CF0         	ljmp	l777
  6234  0806  318C  2CBE         	ljmp	l4524
  6235  0808  318C  2CF0         	ljmp	l777
  6236  080A  318C  2CA3         	ljmp	l779
  6237  080C  318C  2CAB         	ljmp	l4510
  6238  080E  318C  2CD9         	ljmp	l4536
  6239  0810  318C  2CB1         	ljmp	l4514
  6240  0812  318C  2CAE         	ljmp	l4512
  6241  0814  318C  2CC1         	ljmp	l4526
  6242  0816  318C  2CCD         	ljmp	l788
  6243  0818  318C  2CF0         	ljmp	l777
  6244                           
  6245                           	psect	text22
  6246  0157                     __ptext22:	
  6247 ;; *************** function _USBStdFeatureReqHandler *****************
  6248 ;; Defined at:
  6249 ;;		line 2780 in file "../framework/usb/usb_device.c"
  6250 ;; Parameters:    Size  Location     Type
  6251 ;;		None
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;  pUEP            2   12[BANK0 ] PTR unsigned char 
  6254 ;;		 -> UEP0(1), 
  6255 ;;  p               1   15[BANK0 ] PTR struct __BDT
  6256 ;;		 -> BDT(32), NULL(0), 
  6257 ;;  current_ep_d    1   14[BANK0 ] struct .
  6258 ;; Return value:  Size  Location     Type
  6259 ;;		None               void
  6260 ;; Registers used:
  6261 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6268 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6269 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6270 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6271 ;;Total ram usage:        6 bytes
  6272 ;; Hardware stack levels used:    1
  6273 ;; Hardware stack levels required when called:    5
  6274 ;; This function calls:
  6275 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6276 ;; This function is called by:
  6277 ;;		_USBCheckStdRequest
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           
  6282                           ;psect for function _USBStdFeatureReqHandler
  6283  0157                     _USBStdFeatureReqHandler:	
  6284                           
  6285                           ;usb_device.c: 2781: BDT_ENTRY *p;
  6286                           ;usb_device.c: 2782: EP_STATUS current_ep_data;
  6287                           ;usb_device.c: 2786: unsigned char* pUEP;
  6288                           ;usb_device.c: 2824: if((SetupPkt.bFeature == 1)&&
  6289                           ;usb_device.c: 2825: (SetupPkt.Recipient == (0x00)))
  6290                           
  6291                           ;incstack = 0
  6292                           ; Regs used in _USBStdFeatureReqHandler: [allreg]
  6293  0157  0020               	movlb	0	; select bank0
  6294  0158  0842               	movf	66,w	;volatile
  6295  0159  3A01               	xorlw	1
  6296  015A  1D03               	skipz
  6297  015B  296E               	goto	l4558
  6298  015C  0840               	movf	64,w	;volatile
  6299  015D  391F               	andlw	31
  6300  015E  3800               	iorlw	0
  6301  015F  1D03               	skipz
  6302  0160  296E               	goto	l4558
  6303                           
  6304                           ;usb_device.c: 2826: {
  6305                           ;usb_device.c: 2827: inPipes[0].info.bits.busy = 1;
  6306  0161  0021               	movlb	1	; select bank1
  6307  0162  17EB               	bsf	(_inPipes^(0+128)+2),7
  6308                           
  6309                           ;usb_device.c: 2828: if(SetupPkt.bRequest == 3)
  6310  0163  0020               	movlb	0	; select bank0
  6311  0164  0841               	movf	65,w	;volatile
  6312  0165  3A03               	xorlw	3
  6313  0166  1D03               	skipz
  6314  0167  296C               	goto	l4556
  6315                           
  6316                           ;usb_device.c: 2829: RemoteWakeup = 1;
  6317  0168  0022               	movlb	2	; select bank2
  6318  0169  01D3               	clrf	_RemoteWakeup^(0+256)
  6319  016A  0AD3               	incf	_RemoteWakeup^(0+256),f
  6320  016B  296E               	goto	l4558
  6321  016C                     l4556:	
  6322                           
  6323                           ;usb_device.c: 2830: else
  6324                           ;usb_device.c: 2831: RemoteWakeup = 0;
  6325  016C  0022               	movlb	2	; select bank2
  6326  016D  01D3               	clrf	_RemoteWakeup^(0+256)
  6327  016E                     l4558:	
  6328                           
  6329                           ;usb_device.c: 2832: }
  6330                           ;usb_device.c: 2835: if((SetupPkt.bFeature == 0)&&
  6331                           ;usb_device.c: 2836: (SetupPkt.Recipient == (0x02))&&
  6332                           ;usb_device.c: 2837: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
  6333                           ;usb_device.c: 2838: (USBDeviceState == CONFIGURED_STATE))
  6334  016E  0020               	movlb	0	; select bank0
  6335  016F  0842               	movf	66,w
  6336  0170  1D03               	skipz
  6337  0171  0008               	return
  6338  0172  0840               	movf	64,w	;volatile
  6339  0173  391F               	andlw	31
  6340  0174  3A02               	xorlw	2
  6341  0175  1D03               	skipz
  6342  0176  0008               	return
  6343  0177  0844               	movf	68,w	;volatile
  6344  0178  390F               	andlw	15
  6345  0179  3A00               	xorlw	0
  6346  017A  1903               	skipnz
  6347  017B  0008               	return
  6348  017C  0844               	movf	68,w	;volatile
  6349  017D  390F               	andlw	15
  6350  017E  00DA               	movwf	??_USBStdFeatureReqHandler
  6351  017F  3002               	movlw	2
  6352  0180  025A               	subwf	??_USBStdFeatureReqHandler,w
  6353  0181  1803               	skipnc
  6354  0182  0008               	return
  6355  0183  086D               	movf	_USBDeviceState,w
  6356  0184  3A20               	xorlw	32
  6357  0185  1D03               	skipz
  6358  0186  0008               	return
  6359                           
  6360                           ;usb_device.c: 2839: {
  6361                           ;usb_device.c: 2842: inPipes[0].info.bits.busy = 1;
  6362  0187  0021               	movlb	1	; select bank1
  6363  0188  17EB               	bsf	(_inPipes^(0+128)+2),7
  6364                           
  6365                           ;usb_device.c: 2845: if(SetupPkt.EPDir == 0)
  6366  0189  0020               	movlb	0	; select bank0
  6367  018A  1BC4               	btfsc	68,7	;volatile
  6368  018B  299A               	goto	l4572
  6369                           
  6370                           ;usb_device.c: 2846: {
  6371                           ;usb_device.c: 2847: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6372  018C  0844               	movf	68,w	;volatile
  6373  018D  390F               	andlw	15
  6374  018E  3E50               	addlw	_pBDTEntryOut& (0+255)
  6375  018F  0086               	movwf	6
  6376  0190  3001               	movlw	1	; select bank2/3
  6377  0191  0087               	movwf	7
  6378  0192  0801               	movf	1,w
  6379  0193  00DA               	movwf	??_USBStdFeatureReqHandler
  6380  0194  085A               	movf	??_USBStdFeatureReqHandler,w
  6381  0195  00DF               	movwf	USBStdFeatureReqHandler@p
  6382                           
  6383                           ;usb_device.c: 2848: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  6384  0196  0844               	movf	68,w	;volatile
  6385  0197  390F               	andlw	15
  6386  0198  3E4C               	addlw	_ep_data_out& (0+255)
  6387  0199  29A6               	goto	L8
  6388  019A                     l4572:	
  6389                           ;usb_device.c: 2849: }
  6390                           
  6391                           
  6392                           ;usb_device.c: 2850: else
  6393                           ;usb_device.c: 2851: {
  6394                           ;usb_device.c: 2852: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6395  019A  0844               	movf	68,w	;volatile
  6396  019B  390F               	andlw	15
  6397  019C  3E6B               	addlw	_pBDTEntryIn& (0+255)
  6398  019D  0086               	movwf	6
  6399  019E  0187               	clrf	7
  6400  019F  0801               	movf	1,w
  6401  01A0  00DA               	movwf	??_USBStdFeatureReqHandler
  6402  01A1  085A               	movf	??_USBStdFeatureReqHandler,w
  6403  01A2  00DF               	movwf	USBStdFeatureReqHandler@p
  6404                           
  6405                           ;usb_device.c: 2853: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  6406  01A3  0844               	movf	68,w	;volatile
  6407  01A4  390F               	andlw	15
  6408  01A5  3E4A               	addlw	_ep_data_in& (0+255)
  6409  01A6                     L8:	
  6410  01A6  0086               	movwf	6
  6411  01A7  3001               	movlw	1	; select bank2/3
  6412  01A8  0087               	movwf	7
  6413  01A9  0801               	movf	1,w
  6414  01AA  00DA               	movwf	??_USBStdFeatureReqHandler
  6415  01AB  085A               	movf	??_USBStdFeatureReqHandler,w
  6416  01AC  00DE               	movwf	USBStdFeatureReqHandler@current_ep_data
  6417                           
  6418                           ;usb_device.c: 2854: }
  6419                           ;usb_device.c: 2860: if(current_ep_data.bits.ping_pong_state == 0)
  6420  01AD  185E               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  6421  01AE  29B4               	goto	l800
  6422                           
  6423                           ;usb_device.c: 2861: {
  6424                           ;usb_device.c: 2862: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  6425  01AF  30FB               	movlw	251
  6426  01B0  00DA               	movwf	??_USBStdFeatureReqHandler
  6427  01B1  085A               	movf	??_USBStdFeatureReqHandler,w
  6428  01B2  05DF               	andwf	USBStdFeatureReqHandler@p,f
  6429                           
  6430                           ;usb_device.c: 2863: }
  6431  01B3  29B5               	goto	l801
  6432  01B4                     l800:	
  6433                           
  6434                           ;usb_device.c: 2864: else
  6435                           ;usb_device.c: 2865: {
  6436                           ;usb_device.c: 2866: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  6437  01B4  155F               	bsf	USBStdFeatureReqHandler@p,2
  6438  01B5                     l801:	
  6439                           
  6440                           ;usb_device.c: 2867: }
  6441                           ;usb_device.c: 2872: if(SetupPkt.EPDir == 0)
  6442  01B5  1BC4               	btfsc	68,7	;volatile
  6443  01B6  29C0               	goto	l4580
  6444                           
  6445                           ;usb_device.c: 2873: {
  6446                           ;usb_device.c: 2874: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6447  01B7  085F               	movf	USBStdFeatureReqHandler@p,w
  6448  01B8  00DA               	movwf	??_USBStdFeatureReqHandler
  6449  01B9  0844               	movf	68,w	;volatile
  6450  01BA  390F               	andlw	15
  6451  01BB  3E50               	addlw	_pBDTEntryOut& (0+255)
  6452  01BC  0086               	movwf	6
  6453  01BD  3001               	movlw	1	; select bank2/3
  6454  01BE  0087               	movwf	7
  6455  01BF  29C7               	goto	L9
  6456  01C0                     l4580:	
  6457                           ;usb_device.c: 2875: }
  6458                           
  6459                           
  6460                           ;usb_device.c: 2876: else
  6461                           ;usb_device.c: 2877: {
  6462                           ;usb_device.c: 2878: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6463  01C0  085F               	movf	USBStdFeatureReqHandler@p,w
  6464  01C1  00DA               	movwf	??_USBStdFeatureReqHandler
  6465  01C2  0844               	movf	68,w	;volatile
  6466  01C3  390F               	andlw	15
  6467  01C4  3E6B               	addlw	_pBDTEntryIn& (0+255)
  6468  01C5  0086               	movwf	6
  6469  01C6  0187               	clrf	7
  6470  01C7                     L9:	
  6471  01C7  085A               	movf	??_USBStdFeatureReqHandler,w
  6472  01C8  0081               	movwf	1
  6473                           
  6474                           ;usb_device.c: 2879: }
  6475                           ;usb_device.c: 2882: if(SetupPkt.bRequest == 3)
  6476  01C9  0841               	movf	65,w	;volatile
  6477  01CA  3A03               	xorlw	3
  6478  01CB  1D03               	skipz
  6479  01CC  29E8               	goto	l4596
  6480                           
  6481                           ;usb_device.c: 2883: {
  6482                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  6483  01CD  085F               	movf	USBStdFeatureReqHandler@p,w
  6484  01CE  0086               	movwf	6
  6485  01CF  0187               	clrf	7
  6486  01D0  1F81               	btfss	1,7
  6487  01D1  29DF               	goto	l4592
  6488                           
  6489                           ;usb_device.c: 2885: {
  6490                           ;usb_device.c: 2888: if(SetupPkt.EPDir == 0)
  6491  01D2  1BC4               	btfsc	68,7	;volatile
  6492  01D3  29D8               	goto	l4590
  6493                           
  6494                           ;usb_device.c: 2889: {
  6495                           ;usb_device.c: 2890: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6496  01D4  0844               	movf	68,w	;volatile
  6497  01D5  390F               	andlw	15
  6498  01D6  3E4C               	addlw	_ep_data_out& (0+255)
  6499  01D7  29DB               	goto	L10
  6500  01D8                     l4590:	
  6501                           ;usb_device.c: 2891: }
  6502                           
  6503                           
  6504                           ;usb_device.c: 2892: else
  6505                           ;usb_device.c: 2893: {
  6506                           ;usb_device.c: 2894: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6507  01D8  0844               	movf	68,w	;volatile
  6508  01D9  390F               	andlw	15
  6509  01DA  3E4A               	addlw	_ep_data_in& (0+255)
  6510  01DB                     L10:	
  6511  01DB  0086               	movwf	6
  6512  01DC  3001               	movlw	1	; select bank2/3
  6513  01DD  0087               	movwf	7
  6514  01DE  1481               	bsf	1,1
  6515  01DF                     l4592:	
  6516                           
  6517                           ;usb_device.c: 2895: }
  6518                           ;usb_device.c: 2896: }
  6519                           ;usb_device.c: 2899: p->STAT.Val |= 0x04;
  6520  01DF  085F               	movf	USBStdFeatureReqHandler@p,w
  6521  01E0  0086               	movwf	6
  6522  01E1  0187               	clrf	7
  6523  01E2  1501               	bsf	1,2
  6524                           
  6525                           ;usb_device.c: 2900: p->STAT.Val |= 0x80;
  6526  01E3  085F               	movf	USBStdFeatureReqHandler@p,w
  6527  01E4  0086               	movwf	6
  6528  01E5  0187               	clrf	7
  6529  01E6  1781               	bsf	1,7
  6530                           
  6531                           ;usb_device.c: 2901: }
  6532  01E7  0008               	return
  6533  01E8                     l4596:	
  6534                           
  6535                           ;usb_device.c: 2902: else
  6536                           ;usb_device.c: 2903: {
  6537                           ;usb_device.c: 2907: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  6538  01E8  3004               	movlw	4
  6539  01E9  00DA               	movwf	??_USBStdFeatureReqHandler
  6540  01EA  085A               	movf	??_USBStdFeatureReqHandler,w
  6541  01EB  06DF               	xorwf	USBStdFeatureReqHandler@p,f
  6542                           
  6543                           ;usb_device.c: 2909: if(p->STAT.UOWN == 1)
  6544  01EC  085F               	movf	USBStdFeatureReqHandler@p,w
  6545  01ED  0086               	movwf	6
  6546  01EE  0187               	clrf	7
  6547  01EF  1F81               	btfss	1,7
  6548  01F0  2A0C               	goto	l4606
  6549                           
  6550                           ;usb_device.c: 2910: {
  6551                           ;usb_device.c: 2913: p->STAT.Val &= (~0x80);
  6552  01F1  307F               	movlw	127
  6553  01F2  00DA               	movwf	??_USBStdFeatureReqHandler
  6554  01F3  085F               	movf	USBStdFeatureReqHandler@p,w
  6555  01F4  0086               	movwf	6
  6556  01F5  0187               	clrf	7
  6557  01F6  085A               	movf	??_USBStdFeatureReqHandler,w
  6558  01F7  0581               	andwf	1,f
  6559                           
  6560                           ;usb_device.c: 2914: p->STAT.Val |= 0x40;
  6561  01F8  085F               	movf	USBStdFeatureReqHandler@p,w
  6562  01F9  0086               	movwf	6
  6563  01FA  0187               	clrf	7
  6564  01FB  1701               	bsf	1,6
  6565                           
  6566                           ;usb_device.c: 2915: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  6567  01FC  3005               	movlw	5
  6568  01FD  00D5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  6569  01FE  3000               	movlw	0
  6570  01FF  00D6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  6571  0200  085F               	movf	USBStdFeatureReqHandler@p,w
  6572  0201  00DA               	movwf	??_USBStdFeatureReqHandler
  6573  0202  085A               	movf	??_USBStdFeatureReqHandler,w
  6574  0203  00D7               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  6575  0204  3001               	movlw	1
  6576  0205  00D8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  6577  0206  3000               	movlw	0
  6578  0207  00D9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  6579  0208  318B  2343  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6580                           
  6581                           ;usb_device.c: 2916: }
  6582  020B  2A11               	goto	l4608
  6583  020C                     l4606:	
  6584                           
  6585                           ;usb_device.c: 2917: else
  6586                           ;usb_device.c: 2918: {
  6587                           ;usb_device.c: 2920: p->STAT.Val |= 0x40;
  6588  020C  0020               	movlb	0	; select bank0
  6589  020D  085F               	movf	USBStdFeatureReqHandler@p,w
  6590  020E  0086               	movwf	6
  6591  020F  0187               	clrf	7
  6592  0210  1701               	bsf	1,6
  6593  0211                     l4608:	
  6594                           
  6595                           ;usb_device.c: 2921: }
  6596                           ;usb_device.c: 2925: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  6597  0211  3004               	movlw	4
  6598  0212  0020               	movlb	0	; select bank0
  6599  0213  00DA               	movwf	??_USBStdFeatureReqHandler
  6600  0214  085A               	movf	??_USBStdFeatureReqHandler,w
  6601  0215  06DF               	xorwf	USBStdFeatureReqHandler@p,f
  6602                           
  6603                           ;usb_device.c: 2931: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  6604  0216  18DE               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  6605  0217  2A1D               	goto	l813
  6606  0218  085F               	movf	USBStdFeatureReqHandler@p,w
  6607  0219  0086               	movwf	6
  6608  021A  0187               	clrf	7
  6609  021B  1F81               	btfss	1,7
  6610  021C  2A41               	goto	l4620
  6611  021D                     l813:	
  6612                           
  6613                           ;usb_device.c: 2932: {
  6614                           ;usb_device.c: 2933: if(SetupPkt.EPDir == 0)
  6615  021D  1BC4               	btfsc	68,7	;volatile
  6616  021E  2A23               	goto	l4616
  6617                           
  6618                           ;usb_device.c: 2934: {
  6619                           ;usb_device.c: 2935: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  6620  021F  0844               	movf	68,w	;volatile
  6621  0220  390F               	andlw	15
  6622  0221  3E4C               	addlw	_ep_data_out& (0+255)
  6623  0222  2A26               	goto	L11
  6624  0223                     l4616:	
  6625                           ;usb_device.c: 2936: }
  6626                           
  6627                           
  6628                           ;usb_device.c: 2937: else
  6629                           ;usb_device.c: 2938: {
  6630                           ;usb_device.c: 2939: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  6631  0223  0844               	movf	68,w	;volatile
  6632  0224  390F               	andlw	15
  6633  0225  3E4A               	addlw	_ep_data_in& (0+255)
  6634  0226                     L11:	
  6635  0226  0086               	movwf	6
  6636  0227  3001               	movlw	1	; select bank2/3
  6637  0228  0087               	movwf	7
  6638  0229  1081               	bcf	1,1
  6639                           
  6640                           ;usb_device.c: 2940: }
  6641                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  6642  022A  303B               	movlw	59
  6643  022B  00DA               	movwf	??_USBStdFeatureReqHandler
  6644  022C  085F               	movf	USBStdFeatureReqHandler@p,w
  6645  022D  0086               	movwf	6
  6646  022E  0187               	clrf	7
  6647  022F  085A               	movf	??_USBStdFeatureReqHandler,w
  6648  0230  0581               	andwf	1,f
  6649                           
  6650                           ;usb_device.c: 2945: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  6651  0231  3005               	movlw	5
  6652  0232  00D5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  6653  0233  3000               	movlw	0
  6654  0234  00D6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  6655  0235  085F               	movf	USBStdFeatureReqHandler@p,w
  6656  0236  00DA               	movwf	??_USBStdFeatureReqHandler
  6657  0237  085A               	movf	??_USBStdFeatureReqHandler,w
  6658  0238  00D7               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  6659  0239  3001               	movlw	1
  6660  023A  00D8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  6661  023B  3000               	movlw	0
  6662  023C  00D9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  6663  023D  318B  2343  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6664                           
  6665                           ;usb_device.c: 2946: }
  6666  0240  2A49               	goto	l4622
  6667  0241                     l4620:	
  6668                           
  6669                           ;usb_device.c: 2947: else
  6670                           ;usb_device.c: 2948: {
  6671                           ;usb_device.c: 2950: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  6672  0241  303B               	movlw	59
  6673  0242  0020               	movlb	0	; select bank0
  6674  0243  00DA               	movwf	??_USBStdFeatureReqHandler
  6675  0244  085F               	movf	USBStdFeatureReqHandler@p,w
  6676  0245  0086               	movwf	6
  6677  0246  0187               	clrf	7
  6678  0247  085A               	movf	??_USBStdFeatureReqHandler,w
  6679  0248  0581               	andwf	1,f
  6680  0249                     l4622:	
  6681                           
  6682                           ;usb_device.c: 2951: }
  6683                           ;usb_device.c: 2998: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  6684  0249  0020               	movlb	0	; select bank0
  6685  024A  0844               	movf	68,w	;volatile
  6686  024B  390F               	andlw	15
  6687  024C  3E98               	addlw	152
  6688  024D  00DA               	movwf	??_USBStdFeatureReqHandler
  6689  024E  01DB               	clrf	??_USBStdFeatureReqHandler+1
  6690  024F  300E               	movlw	14
  6691  0250  3DDB               	addwfc	??_USBStdFeatureReqHandler+1,f
  6692  0251  085A               	movf	??_USBStdFeatureReqHandler,w
  6693  0252  00DC               	movwf	USBStdFeatureReqHandler@pUEP
  6694  0253  085B               	movf	??_USBStdFeatureReqHandler+1,w
  6695  0254  00DD               	movwf	USBStdFeatureReqHandler@pUEP+1
  6696                           
  6697                           ;usb_device.c: 3002: *pUEP &= ~0x0001;
  6698  0255  30FE               	movlw	254
  6699  0256  00DA               	movwf	??_USBStdFeatureReqHandler
  6700  0257  085C               	movf	USBStdFeatureReqHandler@pUEP,w
  6701  0258  0086               	movwf	6
  6702  0259  085D               	movf	USBStdFeatureReqHandler@pUEP+1,w
  6703  025A  0087               	movwf	7
  6704  025B  085A               	movf	??_USBStdFeatureReqHandler,w
  6705  025C  0581               	andwf	1,f
  6706  025D  0008               	return
  6707  025E                     __end_of_USBStdFeatureReqHandler:	
  6708                           
  6709                           	psect	text23
  6710  0C4C                     __ptext23:	
  6711 ;; *************** function _USBStdGetStatusHandler *****************
  6712 ;; Defined at:
  6713 ;;		line 2149 in file "../framework/usb/usb_device.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;		None
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;  p               1    2[COMMON] PTR struct __BDT
  6718 ;;		 -> BDT(32), NULL(0), 
  6719 ;; Return value:  Size  Location     Type
  6720 ;;		None               void
  6721 ;; Registers used:
  6722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6729 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6730 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6731 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6732 ;;Total ram usage:        2 bytes
  6733 ;; Hardware stack levels used:    1
  6734 ;; Hardware stack levels required when called:    1
  6735 ;; This function calls:
  6736 ;;		Nothing
  6737 ;; This function is called by:
  6738 ;;		_USBCheckStdRequest
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           
  6743                           ;psect for function _USBStdGetStatusHandler
  6744  0C4C                     _USBStdGetStatusHandler:	
  6745                           
  6746                           ;usb_device.c: 2150: CtrlTrfData[0] = 0;
  6747                           
  6748                           ;incstack = 0
  6749                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  6750  0C4C  0020               	movlb	0	; select bank0
  6751  0C4D  01C8               	clrf	72	;volatile
  6752                           
  6753                           ;usb_device.c: 2151: CtrlTrfData[1] = 0;
  6754  0C4E  3000               	movlw	0
  6755  0C4F  00C9               	movwf	73	;volatile
  6756                           
  6757                           ;usb_device.c: 2153: switch(SetupPkt.Recipient)
  6758  0C50  2C82               	goto	l3852
  6759  0C51                     l715:	
  6760                           ;usb_device.c: 2154: {
  6761                           ;usb_device.c: 2155: case (0x00):
  6762                           
  6763                           
  6764                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  6765  0C51  0021               	movlb	1	; select bank1
  6766  0C52  17EB               	bsf	(_inPipes^(0+128)+2),7
  6767                           
  6768                           ;usb_device.c: 2164: }
  6769                           ;usb_device.c: 2166: if(RemoteWakeup == 1)
  6770                           
  6771                           ;usb_device.c: 2162: {
  6772                           ;usb_device.c: 2163: CtrlTrfData[0]|=0x01;
  6773                           
  6774                           ;usb_device.c: 2161: if(0 == 1)
  6775  0C53  0022               	movlb	2	; select bank2
  6776  0C54  0853               	movf	_RemoteWakeup^(0+256),w
  6777  0C55  3A01               	xorlw	1
  6778  0C56  1D03               	skipz
  6779  0C57  2C8E               	goto	l718
  6780                           
  6781                           ;usb_device.c: 2167: {
  6782                           ;usb_device.c: 2168: CtrlTrfData[0]|=0x02;
  6783  0C58  0020               	movlb	0	; select bank0
  6784  0C59  14C8               	bsf	72,1	;volatile
  6785                           
  6786                           ;usb_device.c: 2169: }
  6787                           ;usb_device.c: 2170: break;
  6788  0C5A  2C8E               	goto	l718
  6789  0C5B                     l719:	
  6790                           ;usb_device.c: 2171: case (0x01):
  6791                           
  6792                           
  6793                           ;usb_device.c: 2172: inPipes[0].info.bits.busy = 1;
  6794  0C5B  0021               	movlb	1	; select bank1
  6795  0C5C  17EB               	bsf	(_inPipes^(0+128)+2),7
  6796                           
  6797                           ;usb_device.c: 2173: break;
  6798  0C5D  2C8E               	goto	l718
  6799  0C5E                     l720:	
  6800                           ;usb_device.c: 2174: case (0x02):
  6801                           
  6802                           
  6803                           ;usb_device.c: 2175: inPipes[0].info.bits.busy = 1;
  6804  0C5E  0021               	movlb	1	; select bank1
  6805  0C5F  17EB               	bsf	(_inPipes^(0+128)+2),7
  6806                           
  6807                           ;usb_device.c: 2179: {
  6808                           ;usb_device.c: 2180: BDT_ENTRY *p;
  6809                           ;usb_device.c: 2182: if(SetupPkt.EPDir == 0)
  6810  0C60  0020               	movlb	0	; select bank0
  6811  0C61  1BC4               	btfsc	68,7	;volatile
  6812  0C62  2C6A               	goto	l3842
  6813                           
  6814                           ;usb_device.c: 2183: {
  6815                           ;usb_device.c: 2184: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6816  0C63  0844               	movf	68,w	;volatile
  6817  0C64  390F               	andlw	15
  6818  0C65  3E50               	addlw	_pBDTEntryOut& (0+255)
  6819  0C66  0086               	movwf	6
  6820  0C67  3001               	movlw	1	; select bank2/3
  6821  0C68  0087               	movwf	7
  6822  0C69  2C6F               	goto	L12
  6823  0C6A                     l3842:	
  6824                           ;usb_device.c: 2185: }
  6825                           
  6826                           
  6827                           ;usb_device.c: 2186: else
  6828                           ;usb_device.c: 2187: {
  6829                           ;usb_device.c: 2188: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6830  0C6A  0844               	movf	68,w	;volatile
  6831  0C6B  390F               	andlw	15
  6832  0C6C  3E6B               	addlw	_pBDTEntryIn& (0+255)
  6833  0C6D  0086               	movwf	6
  6834  0C6E  0187               	clrf	7
  6835  0C6F                     L12:	
  6836  0C6F  0801               	movf	1,w
  6837  0C70  00F1               	movwf	??_USBStdGetStatusHandler
  6838  0C71  0871               	movf	??_USBStdGetStatusHandler,w
  6839  0C72  00F2               	movwf	USBStdGetStatusHandler@p
  6840                           
  6841                           ;usb_device.c: 2189: }
  6842                           ;usb_device.c: 2191: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  6843  0C73  0872               	movf	USBStdGetStatusHandler@p,w
  6844  0C74  0086               	movwf	6
  6845  0C75  0187               	clrf	7
  6846  0C76  1F81               	btfss	1,7
  6847  0C77  2C8E               	goto	l718
  6848  0C78  0872               	movf	USBStdGetStatusHandler@p,w
  6849  0C79  0086               	movwf	6
  6850  0C7A  0187               	clrf	7
  6851  0C7B  1D01               	btfss	1,2
  6852  0C7C  2C8E               	goto	l718
  6853                           
  6854                           ;usb_device.c: 2192: CtrlTrfData[0]=0x01;
  6855  0C7D  3001               	movlw	1
  6856  0C7E  00F1               	movwf	??_USBStdGetStatusHandler
  6857  0C7F  0871               	movf	??_USBStdGetStatusHandler,w
  6858  0C80  00C8               	movwf	72	;volatile
  6859                           
  6860                           ;usb_device.c: 2194: }
  6861                           ;usb_device.c: 2195: }
  6862                           
  6863                           ;usb_device.c: 2193: break;
  6864  0C81  2C8E               	goto	l718
  6865  0C82                     l3852:	
  6866  0C82  0840               	movf	64,w	;volatile
  6867  0C83  391F               	andlw	31
  6868                           
  6869                           ; Switch size 1, requested type "space"
  6870                           ; Number of cases is 3, Range of values is 0 to 2
  6871                           ; switch strategies available:
  6872                           ; Name         Instructions Cycles
  6873                           ; simple_byte           10     6 (average)
  6874                           ; direct_byte           12     6 (fixed)
  6875                           ; jumptable            260     6 (fixed)
  6876                           ; rangetable             7     4 (fixed)
  6877                           ; spacedrange           11     6 (fixed)
  6878                           ; locatedrange           3     3 (fixed)
  6879                           ;	Chosen strategy is simple_byte
  6880  0C84  3A00               	xorlw	0	; case 0
  6881  0C85  1903               	skipnz
  6882  0C86  2C51               	goto	l715
  6883  0C87  3A01               	xorlw	1	; case 1
  6884  0C88  1903               	skipnz
  6885  0C89  2C5B               	goto	l719
  6886  0C8A  3A03               	xorlw	3	; case 2
  6887  0C8B  1903               	skipnz
  6888  0C8C  2C5E               	goto	l720
  6889  0C8D  2C8E               	goto	l718
  6890  0C8E                     l718:	
  6891                           
  6892                           ;usb_device.c: 2197: if(inPipes[0].info.bits.busy == 1)
  6893  0C8E  0021               	movlb	1	; select bank1
  6894  0C8F  1FEB               	btfss	(_inPipes^(0+128)+2),7
  6895  0C90  0008               	return
  6896                           
  6897                           ;usb_device.c: 2198: {
  6898                           ;usb_device.c: 2199: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  6899  0C91  3048               	movlw	72
  6900  0C92  00E9               	movwf	_inPipes^(0+128)
  6901  0C93  3000               	movlw	0
  6902  0C94  00EA               	movwf	(_inPipes+1)^(0+128)
  6903                           
  6904                           ;usb_device.c: 2200: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6905  0C95  146B               	bsf	(_inPipes^(0+128)+2),0
  6906                           
  6907                           ;usb_device.c: 2201: inPipes[0].wCount.v[0] = 2;
  6908  0C96  3002               	movlw	2
  6909  0C97  00F1               	movwf	??_USBStdGetStatusHandler
  6910  0C98  0871               	movf	??_USBStdGetStatusHandler,w
  6911  0C99  00EC               	movwf	(_inPipes^(0+128)+3)
  6912  0C9A  0008               	return
  6913  0C9B                     __end_of_USBStdGetStatusHandler:	
  6914                           
  6915                           	psect	text24
  6916  0F00                     __ptext24:	
  6917 ;; *************** function _USBStdGetDscHandler *****************
  6918 ;; Defined at:
  6919 ;;		line 2063 in file "../framework/usb/usb_device.c"
  6920 ;; Parameters:    Size  Location     Type
  6921 ;;		None
  6922 ;; Auto vars:     Size  Location     Type
  6923 ;;		None
  6924 ;; Return value:  Size  Location     Type
  6925 ;;		None               void
  6926 ;; Registers used:
  6927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6928 ;; Tracked objects:
  6929 ;;		On entry : 0/0
  6930 ;;		On exit  : 0/0
  6931 ;;		Unchanged: 0/0
  6932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6935 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6936 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6937 ;;Total ram usage:        3 bytes
  6938 ;; Hardware stack levels used:    1
  6939 ;; Hardware stack levels required when called:    1
  6940 ;; This function calls:
  6941 ;;		Nothing
  6942 ;; This function is called by:
  6943 ;;		_USBCheckStdRequest
  6944 ;; This function uses a non-reentrant model
  6945 ;;
  6946                           
  6947                           
  6948                           ;psect for function _USBStdGetDscHandler
  6949  0F00                     _USBStdGetDscHandler:	
  6950                           
  6951                           ;usb_device.c: 2064: if(SetupPkt.bmRequestType == 0x80)
  6952                           
  6953                           ;incstack = 0
  6954                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  6955  0F00  0020               	movlb	0	; select bank0
  6956  0F01  0840               	movf	64,w	;volatile
  6957  0F02  3A80               	xorlw	128
  6958  0F03  1D03               	skipz
  6959  0F04  0008               	return
  6960                           
  6961                           ;usb_device.c: 2065: {
  6962                           ;usb_device.c: 2066: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  6963  0F05  30C0               	movlw	192
  6964  0F06  00F1               	movwf	??_USBStdGetDscHandler
  6965  0F07  0871               	movf	??_USBStdGetDscHandler,w
  6966  0F08  0021               	movlb	1	; select bank1
  6967  0F09  00EB               	movwf	(_inPipes^(0+128)+2)
  6968                           
  6969                           ;usb_device.c: 2068: switch(SetupPkt.bDescriptorType)
  6970  0F0A  2F72               	goto	l3828
  6971  0F0B                     l3804:	
  6972                           ;usb_device.c: 2069: {
  6973                           ;usb_device.c: 2070: case 0x01:
  6974                           
  6975                           
  6976                           ;usb_device.c: 2074: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  6977  0F0B  30E0               	movlw	low (_device_dsc| (0+32768))
  6978  0F0C  0021               	movlb	1	; select bank1
  6979  0F0D  00E9               	movwf	_inPipes^(0+128)
  6980  0F0E  3083               	movlw	high (_device_dsc| (0+32768))
  6981  0F0F  00EA               	movwf	(_inPipes^(0+128)+1)
  6982                           
  6983                           ;usb_device.c: 2076: inPipes[0].wCount.Val = sizeof(device_dsc);
  6984  0F10  3012               	movlw	18
  6985  0F11  00EC               	movwf	(_inPipes^(0+128)+3)
  6986  0F12  3000               	movlw	0
  6987  0F13  00ED               	movwf	(_inPipes^(0+128)+4)
  6988                           
  6989                           ;usb_device.c: 2077: break;
  6990  0F14  0008               	return
  6991  0F15                     l3806:	
  6992                           ;usb_device.c: 2078: case 0x02:
  6993                           
  6994                           
  6995                           ;usb_device.c: 2082: if(SetupPkt.bDscIndex < 1)
  6996  0F15  0020               	movlb	0	; select bank0
  6997  0F16  0842               	movf	66,w
  6998  0F17  1D03               	skipz
  6999  0F18  2F48               	goto	l3814
  7000                           
  7001                           ;usb_device.c: 2083: {
  7002                           ;usb_device.c: 2085: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  7003  0F19  0842               	movf	66,w	;volatile
  7004  0F1A  00F1               	movwf	??_USBStdGetDscHandler
  7005  0F1B  01F2               	clrf	??_USBStdGetDscHandler+1
  7006  0F1C  35F1               	lslf	??_USBStdGetDscHandler,f
  7007  0F1D  0DF2               	rlf	??_USBStdGetDscHandler+1,f
  7008  0F1E  3027               	movlw	low (_USB_CD_Ptr| (0+32768))
  7009  0F1F  0771               	addwf	??_USBStdGetDscHandler,w
  7010  0F20  0084               	movwf	4
  7011  0F21  3083               	movlw	high (_USB_CD_Ptr| (0+32768))
  7012  0F22  3D72               	addwfc	??_USBStdGetDscHandler+1,w
  7013  0F23  0085               	movwf	5
  7014  0F24  3F00               	moviw [0]fsr0
  7015  0F25  0021               	movlb	1	; select bank1
  7016  0F26  00E9               	movwf	_inPipes^(0+128)
  7017  0F27  3F01               	moviw [1]fsr0
  7018  0F28  00EA               	movwf	(_inPipes+1)^(0+128)
  7019                           
  7020                           ;usb_device.c: 2093: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  7021  0F29  086A               	movf	(_inPipes+1)^(0+128),w
  7022  0F2A  00F2               	movwf	??_USBStdGetDscHandler+1
  7023  0F2B  0869               	movf	_inPipes^(0+128),w
  7024  0F2C  00F1               	movwf	??_USBStdGetDscHandler
  7025  0F2D  3002               	movlw	2
  7026  0F2E  0771               	addwf	??_USBStdGetDscHandler,w
  7027  0F2F  0084               	movwf	4
  7028  0F30  0872               	movf	??_USBStdGetDscHandler+1,w
  7029  0F31  1803               	skipnc
  7030  0F32  0A72               	incf	??_USBStdGetDscHandler+1,w
  7031  0F33  0085               	movwf	5
  7032  0F34  0800               	movf	0,w	;code access
  7033  0F35  00F3               	movwf	??_USBStdGetDscHandler+2
  7034  0F36  0873               	movf	??_USBStdGetDscHandler+2,w
  7035  0F37  00EC               	movwf	(_inPipes^(0+128)+3)
  7036                           
  7037                           ;usb_device.c: 2094: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  7038  0F38  086A               	movf	(_inPipes+1)^(0+128),w
  7039  0F39  00F2               	movwf	??_USBStdGetDscHandler+1
  7040  0F3A  0869               	movf	_inPipes^(0+128),w
  7041  0F3B  00F1               	movwf	??_USBStdGetDscHandler
  7042  0F3C  3003               	movlw	3
  7043  0F3D  0771               	addwf	??_USBStdGetDscHandler,w
  7044  0F3E  0084               	movwf	4
  7045  0F3F  0872               	movf	??_USBStdGetDscHandler+1,w
  7046  0F40  1803               	skipnc
  7047  0F41  0A72               	incf	??_USBStdGetDscHandler+1,w
  7048  0F42  0085               	movwf	5
  7049  0F43  0800               	movf	0,w	;code access
  7050  0F44  00F3               	movwf	??_USBStdGetDscHandler+2
  7051  0F45  0873               	movf	??_USBStdGetDscHandler+2,w
  7052  0F46  00ED               	movwf	(_inPipes^(0+128)+4)
  7053                           
  7054                           ;usb_device.c: 2095: }
  7055  0F47  0008               	return
  7056  0F48                     l3814:	
  7057                           
  7058                           ;usb_device.c: 2096: else
  7059                           ;usb_device.c: 2097: {
  7060                           ;usb_device.c: 2098: inPipes[0].info.Val = 0;
  7061  0F48  0021               	movlb	1	; select bank1
  7062  0F49  01EB               	clrf	(_inPipes^(0+128)+2)
  7063                           
  7064                           ;usb_device.c: 2099: }
  7065                           ;usb_device.c: 2100: break;
  7066  0F4A  0008               	return
  7067  0F4B                     l3816:	
  7068                           ;usb_device.c: 2101: case 0x03:
  7069                           
  7070                           
  7071                           ;usb_device.c: 2105: if(SetupPkt.bDscIndex<3)
  7072  0F4B  3003               	movlw	3
  7073  0F4C  0020               	movlb	0	; select bank0
  7074  0F4D  0242               	subwf	66,w	;volatile
  7075  0F4E  1803               	skipnc
  7076  0F4F  2F6C               	goto	l3822
  7077                           
  7078                           ;usb_device.c: 2106: {
  7079                           ;usb_device.c: 2108: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  7080  0F50  0842               	movf	66,w	;volatile
  7081  0F51  00F1               	movwf	??_USBStdGetDscHandler
  7082  0F52  01F2               	clrf	??_USBStdGetDscHandler+1
  7083  0F53  35F1               	lslf	??_USBStdGetDscHandler,f
  7084  0F54  0DF2               	rlf	??_USBStdGetDscHandler+1,f
  7085  0F55  3021               	movlw	low (_USB_SD_Ptr| (0+32768))
  7086  0F56  0771               	addwf	??_USBStdGetDscHandler,w
  7087  0F57  0084               	movwf	4
  7088  0F58  3083               	movlw	high (_USB_SD_Ptr| (0+32768))
  7089  0F59  3D72               	addwfc	??_USBStdGetDscHandler+1,w
  7090  0F5A  0085               	movwf	5
  7091  0F5B  3F00               	moviw [0]fsr0
  7092  0F5C  0021               	movlb	1	; select bank1
  7093  0F5D  00E9               	movwf	_inPipes^(0+128)
  7094  0F5E  3F01               	moviw [1]fsr0
  7095  0F5F  00EA               	movwf	(_inPipes+1)^(0+128)
  7096                           
  7097                           ;usb_device.c: 2110: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  7098  0F60  0869               	movf	_inPipes^(0+128),w
  7099  0F61  0084               	movwf	4
  7100  0F62  086A               	movf	(_inPipes+1)^(0+128),w
  7101  0F63  0085               	movwf	5
  7102  0F64  0800               	movf	0,w	;code access
  7103  0F65  00F1               	movwf	??_USBStdGetDscHandler
  7104  0F66  01F2               	clrf	??_USBStdGetDscHandler+1
  7105  0F67  0871               	movf	??_USBStdGetDscHandler,w
  7106  0F68  00EC               	movwf	(_inPipes^(0+128)+3)
  7107  0F69  0872               	movf	??_USBStdGetDscHandler+1,w
  7108  0F6A  00ED               	movwf	((_inPipes+1)^(0+128)+3)
  7109                           
  7110                           ;usb_device.c: 2111: }
  7111  0F6B  0008               	return
  7112  0F6C                     l3822:	
  7113                           
  7114                           ;usb_device.c: 2121: else
  7115                           ;usb_device.c: 2122: {
  7116                           ;usb_device.c: 2123: inPipes[0].info.Val = 0;
  7117  0F6C  0021               	movlb	1	; select bank1
  7118  0F6D  01EB               	clrf	(_inPipes^(0+128)+2)
  7119                           
  7120                           ;usb_device.c: 2124: }
  7121                           ;usb_device.c: 2125: break;
  7122  0F6E  0008               	return
  7123  0F6F                     l3824:	
  7124                           ;usb_device.c: 2126: default:
  7125                           
  7126                           
  7127                           ;usb_device.c: 2127: inPipes[0].info.Val = 0;
  7128  0F6F  0021               	movlb	1	; select bank1
  7129  0F70  01EB               	clrf	(_inPipes^(0+128)+2)
  7130                           
  7131                           ;usb_device.c: 2129: }
  7132                           
  7133                           ;usb_device.c: 2128: break;
  7134  0F71  0008               	return
  7135  0F72                     l3828:	
  7136  0F72  0020               	movlb	0	; select bank0
  7137  0F73  0843               	movf	67,w	;volatile
  7138                           
  7139                           ; Switch size 1, requested type "space"
  7140                           ; Number of cases is 3, Range of values is 1 to 3
  7141                           ; switch strategies available:
  7142                           ; Name         Instructions Cycles
  7143                           ; simple_byte           10     6 (average)
  7144                           ; direct_byte           15     9 (fixed)
  7145                           ; jumptable            263     9 (fixed)
  7146                           ;	Chosen strategy is simple_byte
  7147  0F74  3A01               	xorlw	1	; case 1
  7148  0F75  1903               	skipnz
  7149  0F76  2F0B               	goto	l3804
  7150  0F77  3A03               	xorlw	3	; case 2
  7151  0F78  1903               	skipnz
  7152  0F79  2F15               	goto	l3806
  7153  0F7A  3A01               	xorlw	1	; case 3
  7154  0F7B  1903               	skipnz
  7155  0F7C  2F4B               	goto	l3816
  7156  0F7D  2F6F               	goto	l3824
  7157  0F7E  0008               	return
  7158  0F7F                     __end_of_USBStdGetDscHandler:	
  7159                           
  7160                           	psect	text25
  7161  0F7F                     __ptext25:	
  7162 ;; *************** function _USBStdSetCfgHandler *****************
  7163 ;; Defined at:
  7164 ;;		line 1988 in file "../framework/usb/usb_device.c"
  7165 ;; Parameters:    Size  Location     Type
  7166 ;;		None
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;  p               2   10[BANK0 ] PTR unsigned char 
  7169 ;;		 -> UEP1(1), 
  7170 ;;  i               1   12[BANK0 ] unsigned char 
  7171 ;;  i               1   13[BANK0 ] unsigned char 
  7172 ;; Return value:  Size  Location     Type
  7173 ;;		None               void
  7174 ;; Registers used:
  7175 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7182 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7183 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7184 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7185 ;;Total ram usage:        5 bytes
  7186 ;; Hardware stack levels used:    1
  7187 ;; Hardware stack levels required when called:    5
  7188 ;; This function calls:
  7189 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7190 ;;		_memset
  7191 ;; This function is called by:
  7192 ;;		_USBCheckStdRequest
  7193 ;; This function uses a non-reentrant model
  7194 ;;
  7195                           
  7196                           
  7197                           ;psect for function _USBStdSetCfgHandler
  7198  0F7F                     _USBStdSetCfgHandler:	
  7199                           
  7200                           ;usb_device.c: 1989: uint8_t i;
  7201                           ;usb_device.c: 1992: inPipes[0].info.bits.busy = 1;
  7202                           
  7203                           ;incstack = 0
  7204                           ; Regs used in _USBStdSetCfgHandler: [allreg]
  7205  0F7F  0021               	movlb	1	; select bank1
  7206  0F80  17EB               	bsf	(_inPipes^(0+128)+2),7
  7207                           
  7208                           ;usb_device.c: 1995: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 
      +                          0; };
  7209  0F81  300E               	movlw	14
  7210  0F82  0020               	movlb	0	; select bank0
  7211  0F83  00DB               	movwf	USBStdSetCfgHandler@p+1
  7212  0F84  3099               	movlw	153
  7213  0F85  00DA               	movwf	USBStdSetCfgHandler@p
  7214  0F86  01DC               	clrf	USBStdSetCfgHandler@i_2034
  7215  0F87  085C               	movf	USBStdSetCfgHandler@i_2034,w
  7216  0F88  1D03               	skipz
  7217  0F89  2F9A               	goto	l4442
  7218  0F8A                     l4434:	
  7219  0F8A  085A               	movf	USBStdSetCfgHandler@p,w
  7220  0F8B  0086               	movwf	6
  7221  0F8C  085B               	movf	USBStdSetCfgHandler@p+1,w
  7222  0F8D  0087               	movwf	7
  7223  0F8E  0181               	clrf	1
  7224  0F8F  3001               	movlw	1
  7225  0F90  07DA               	addwf	USBStdSetCfgHandler@p,f
  7226  0F91  3000               	movlw	0
  7227  0F92  3DDB               	addwfc	USBStdSetCfgHandler@p+1,f
  7228  0F93  3001               	movlw	1
  7229  0F94  00FB               	movwf	??_USBStdSetCfgHandler
  7230  0F95  087B               	movf	??_USBStdSetCfgHandler,w
  7231  0F96  07DC               	addwf	USBStdSetCfgHandler@i_2034,f
  7232  0F97  085C               	movf	USBStdSetCfgHandler@i_2034,w
  7233  0F98  1903               	btfsc	3,2
  7234  0F99  2F8A               	goto	l4434
  7235  0F9A                     l4442:	
  7236                           
  7237                           ;usb_device.c: 1998: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  7238  0F9A  3000               	movlw	0
  7239  0F9B  00F1               	movwf	?_memset
  7240  0F9C  3000               	movlw	0
  7241  0F9D  00F2               	movwf	?_memset+1
  7242  0F9E  3020               	movlw	32
  7243  0F9F  00F3               	movwf	?_memset+2
  7244  0FA0  3000               	movlw	0
  7245  0FA1  00F4               	movwf	?_memset+3
  7246  0FA2  3020               	movlw	32
  7247  0FA3  318A  220F  318F   	fcall	_memset
  7248                           
  7249                           ;usb_device.c: 2001: UCONbits.PPBRST = 1;
  7250  0FA6  003D               	movlb	29	; select bank29
  7251  0FA7  170E               	bsf	14,6	;volatile
  7252                           
  7253                           ;usb_device.c: 2006: for(i = 0; i < (uint8_t)(1+1u); i++)
  7254  0FA8  0020               	movlb	0	; select bank0
  7255  0FA9  01DD               	clrf	USBStdSetCfgHandler@i
  7256  0FAA  3002               	movlw	2
  7257  0FAB  025D               	subwf	USBStdSetCfgHandler@i,w
  7258  0FAC  1803               	btfsc	3,0
  7259  0FAD  2FC2               	goto	l4458
  7260  0FAE                     l4452:	
  7261                           
  7262                           ;usb_device.c: 2007: {
  7263                           ;usb_device.c: 2008: ep_data_in[i].Val = 0u;
  7264  0FAE  085D               	movf	USBStdSetCfgHandler@i,w
  7265  0FAF  3E4A               	addlw	_ep_data_in& (0+255)
  7266  0FB0  0086               	movwf	6
  7267  0FB1  3001               	movlw	1	; select bank2/3
  7268  0FB2  0087               	movwf	7
  7269  0FB3  0181               	clrf	1
  7270                           
  7271                           ;usb_device.c: 2009: ep_data_out[i].Val = 0u;
  7272  0FB4  085D               	movf	USBStdSetCfgHandler@i,w
  7273  0FB5  3E4C               	addlw	_ep_data_out& (0+255)
  7274  0FB6  0086               	movwf	6
  7275  0FB7  3001               	movlw	1	; select bank2/3
  7276  0FB8  0087               	movwf	7
  7277  0FB9  0181               	clrf	1
  7278  0FBA  3001               	movlw	1
  7279  0FBB  00FB               	movwf	??_USBStdSetCfgHandler
  7280  0FBC  087B               	movf	??_USBStdSetCfgHandler,w
  7281  0FBD  07DD               	addwf	USBStdSetCfgHandler@i,f
  7282  0FBE  3002               	movlw	2
  7283  0FBF  025D               	subwf	USBStdSetCfgHandler@i,w
  7284  0FC0  1C03               	skipc
  7285  0FC1  2FAE               	goto	l4452
  7286  0FC2                     l4458:	
  7287                           
  7288                           ;usb_device.c: 2010: }
  7289                           ;usb_device.c: 2013: memset((void*)&USBAlternateInterface,0x00,1);
  7290  0FC2  3000               	movlw	0
  7291  0FC3  00F1               	movwf	?_memset
  7292  0FC4  3000               	movlw	0
  7293  0FC5  00F2               	movwf	?_memset+1
  7294  0FC6  3001               	movlw	1
  7295  0FC7  00F3               	movwf	?_memset+2
  7296  0FC8  3000               	movlw	0
  7297  0FC9  00F4               	movwf	?_memset+3
  7298  0FCA  30EF               	movlw	_USBAlternateInterface& (0+255)
  7299  0FCB  318A  220F  318F   	fcall	_memset
  7300                           
  7301                           ;usb_device.c: 2016: UCONbits.PPBRST = 0;
  7302  0FCE  003D               	movlb	29	; select bank29
  7303  0FCF  130E               	bcf	14,6	;volatile
  7304                           
  7305                           ;usb_device.c: 2018: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7306  0FD0  3028               	movlw	40
  7307  0FD1  00FB               	movwf	??_USBStdSetCfgHandler
  7308  0FD2  087B               	movf	??_USBStdSetCfgHandler,w
  7309  0FD3  0020               	movlb	0	; select bank0
  7310  0FD4  00EB               	movwf	_pBDTEntryIn
  7311                           
  7312                           ;usb_device.c: 2021: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  7313  0FD5  3020               	movlw	32
  7314  0FD6  00FB               	movwf	??_USBStdSetCfgHandler
  7315  0FD7  087B               	movf	??_USBStdSetCfgHandler,w
  7316  0FD8  00EE               	movwf	_pBDTEntryEP0OutCurrent
  7317                           
  7318                           ;usb_device.c: 2022: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  7319  0FD9  086E               	movf	_pBDTEntryEP0OutCurrent,w
  7320  0FDA  00FB               	movwf	??_USBStdSetCfgHandler
  7321  0FDB  087B               	movf	??_USBStdSetCfgHandler,w
  7322  0FDC  00FC               	movwf	_pBDTEntryEP0OutNext
  7323                           
  7324                           ;usb_device.c: 2025: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  7325  0FDD  0842               	movf	66,w	;volatile
  7326  0FDE  00FB               	movwf	??_USBStdSetCfgHandler
  7327  0FDF  087B               	movf	??_USBStdSetCfgHandler,w
  7328  0FE0  0021               	movlb	1	; select bank1
  7329  0FE1  00EE               	movwf	_USBActiveConfiguration^(0+128)
  7330                           
  7331                           ;usb_device.c: 2028: if(USBActiveConfiguration == 0)
  7332  0FE2  08EE               	movf	_USBActiveConfiguration^(0+128),f
  7333  0FE3  1D03               	skipz
  7334  0FE4  2FEB               	goto	l4474
  7335                           
  7336                           ;usb_device.c: 2029: {
  7337                           ;usb_device.c: 2031: USBDeviceState = ADDRESS_STATE;
  7338  0FE5  3010               	movlw	16
  7339  0FE6  00FB               	movwf	??_USBStdSetCfgHandler
  7340  0FE7  087B               	movf	??_USBStdSetCfgHandler,w
  7341  0FE8  0020               	movlb	0	; select bank0
  7342  0FE9  00ED               	movwf	_USBDeviceState
  7343                           
  7344                           ;usb_device.c: 2032: }
  7345  0FEA  0008               	return
  7346  0FEB                     l4474:	
  7347                           
  7348                           ;usb_device.c: 2033: else
  7349                           ;usb_device.c: 2034: {
  7350                           ;usb_device.c: 2036: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  7351  0FEB  3001               	movlw	1
  7352  0FEC  0020               	movlb	0	; select bank0
  7353  0FED  00D5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  7354  0FEE  3000               	movlw	0
  7355  0FEF  00D6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  7356  0FF0  30EE               	movlw	_USBActiveConfiguration& (0+255)
  7357  0FF1  00FB               	movwf	??_USBStdSetCfgHandler
  7358  0FF2  087B               	movf	??_USBStdSetCfgHandler,w
  7359  0FF3  00D7               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  7360  0FF4  3001               	movlw	1
  7361  0FF5  00D8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  7362  0FF6  3000               	movlw	0
  7363  0FF7  00D9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  7364  0FF8  318B  2343         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7365                           
  7366                           ;usb_device.c: 2041: USBDeviceState = CONFIGURED_STATE;
  7367  0FFA  3020               	movlw	32
  7368  0FFB  00FB               	movwf	??_USBStdSetCfgHandler
  7369  0FFC  087B               	movf	??_USBStdSetCfgHandler,w
  7370  0FFD  0020               	movlb	0	; select bank0
  7371  0FFE  00ED               	movwf	_USBDeviceState
  7372  0FFF  0008               	return
  7373  1000                     __end_of_USBStdSetCfgHandler:	
  7374                           
  7375                           	psect	text26
  7376  0A0F                     __ptext26:	
  7377 ;; *************** function _memset *****************
  7378 ;; Defined at:
  7379 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v1.20\sources\common\memset.c"
  7380 ;; Parameters:    Size  Location     Type
  7381 ;;  p1              1    wreg     PTR void 
  7382 ;;		 -> USBAlternateInterface(1), BDT(32), 
  7383 ;;  c               2    1[COMMON] int 
  7384 ;;  n               2    3[COMMON] unsigned int 
  7385 ;; Auto vars:     Size  Location     Type
  7386 ;;  p1              1    6[COMMON] PTR void 
  7387 ;;		 -> USBAlternateInterface(1), BDT(32), 
  7388 ;;  p               1    7[COMMON] PTR unsigned char 
  7389 ;;		 -> USBAlternateInterface(1), BDT(32), 
  7390 ;; Return value:  Size  Location     Type
  7391 ;;                  1    wreg      PTR void 
  7392 ;; Registers used:
  7393 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7394 ;; Tracked objects:
  7395 ;;		On entry : 0/0
  7396 ;;		On exit  : 0/0
  7397 ;;		Unchanged: 0/0
  7398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7399 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7400 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7401 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7402 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7403 ;;Total ram usage:        7 bytes
  7404 ;; Hardware stack levels used:    1
  7405 ;; Hardware stack levels required when called:    1
  7406 ;; This function calls:
  7407 ;;		Nothing
  7408 ;; This function is called by:
  7409 ;;		_USBStdSetCfgHandler
  7410 ;; This function uses a non-reentrant model
  7411 ;;
  7412                           
  7413                           
  7414                           ;psect for function _memset
  7415  0A0F                     _memset:	
  7416                           
  7417                           ;incstack = 0
  7418                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7419                           ;memset@p1 stored from wreg
  7420  0A0F  00F6               	movwf	memset@p1
  7421  0A10  0876               	movf	memset@p1,w
  7422  0A11  00F5               	movwf	??_memset
  7423  0A12  0875               	movf	??_memset,w
  7424  0A13  00F7               	movwf	memset@p
  7425  0A14                     l3798:	
  7426  0A14  3001               	movlw	1
  7427  0A15  02F3               	subwf	memset@n,f
  7428  0A16  3000               	movlw	0
  7429  0A17  3BF4               	subwfb	memset@n+1,f
  7430  0A18  30FF               	movlw	255
  7431  0A19  0674               	xorwf	memset@n+1,w
  7432  0A1A  1D03               	skipz
  7433  0A1B  2A1E               	goto	u3175
  7434  0A1C  30FF               	movlw	255
  7435  0A1D  0673               	xorwf	memset@n,w
  7436  0A1E                     u3175:	
  7437  0A1E  1903               	btfsc	3,2
  7438  0A1F  0008               	return
  7439  0A20  0871               	movf	memset@c,w
  7440  0A21  00F5               	movwf	??_memset
  7441  0A22  0877               	movf	memset@p,w
  7442  0A23  0086               	movwf	6
  7443  0A24  0187               	clrf	7
  7444  0A25  0875               	movf	??_memset,w
  7445  0A26  0081               	movwf	1
  7446  0A27  3001               	movlw	1
  7447  0A28  00F5               	movwf	??_memset
  7448  0A29  0875               	movf	??_memset,w
  7449  0A2A  07F7               	addwf	memset@p,f
  7450  0A2B  2A14               	goto	l3798
  7451  0A2C                     __end_of_memset:	
  7452                           ;	Return value of _memset is never used
  7453                           
  7454                           
  7455                           	psect	text27
  7456  025E                     __ptext27:	
  7457 ;; *************** function _USBCtrlEPServiceComplete *****************
  7458 ;; Defined at:
  7459 ;;		line 1636 in file "../framework/usb/usb_device.c"
  7460 ;; Parameters:    Size  Location     Type
  7461 ;;		None
  7462 ;; Auto vars:     Size  Location     Type
  7463 ;;		None
  7464 ;; Return value:  Size  Location     Type
  7465 ;;		None               void
  7466 ;; Registers used:
  7467 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7468 ;; Tracked objects:
  7469 ;;		On entry : 0/0
  7470 ;;		On exit  : 0/0
  7471 ;;		Unchanged: 0/0
  7472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7475 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7476 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7477 ;;Total ram usage:        2 bytes
  7478 ;; Hardware stack levels used:    1
  7479 ;; Hardware stack levels required when called:    3
  7480 ;; This function calls:
  7481 ;;		_USBCtrlEPAllowStatusStage
  7482 ;;		_USBCtrlEPAllowDataStage
  7483 ;; This function is called by:
  7484 ;;		_USBCtrlTrfSetupHandler
  7485 ;; This function uses a non-reentrant model
  7486 ;;
  7487                           
  7488                           
  7489                           ;psect for function _USBCtrlEPServiceComplete
  7490  025E                     _USBCtrlEPServiceComplete:	
  7491                           
  7492                           ;usb_device.c: 1641: UCONbits.PKTDIS = 0;
  7493                           
  7494                           ;incstack = 0
  7495                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7496  025E  003D               	movlb	29	; select bank29
  7497  025F  120E               	bcf	14,4	;volatile
  7498                           
  7499                           ;usb_device.c: 1647: if(inPipes[0].info.bits.busy == 0)
  7500  0260  0021               	movlb	1	; select bank1
  7501  0261  1BEB               	btfsc	(_inPipes^(0+128)+2),7
  7502  0262  2AA0               	goto	l650
  7503                           
  7504                           ;usb_device.c: 1648: {
  7505                           ;usb_device.c: 1649: if(outPipes[0].info.bits.busy == 1)
  7506  0263  0022               	movlb	2	; select bank2
  7507  0264  1FC2               	btfss	(_outPipes^(0+256)+2),7
  7508  0265  2A75               	goto	l3670
  7509                           
  7510                           ;usb_device.c: 1650: {
  7511                           ;usb_device.c: 1651: controlTransferState = 2;
  7512  0266  3002               	movlw	2
  7513  0267  00F6               	movwf	??_USBCtrlEPServiceComplete
  7514  0268  0876               	movf	??_USBCtrlEPServiceComplete,w
  7515  0269  0021               	movlb	1	; select bank1
  7516  026A  00E4               	movwf	_controlTransferState^(0+128)
  7517                           
  7518                           ;usb_device.c: 1662: if(USBDeferOUTDataStagePackets == 0)
  7519  026B  0022               	movlb	2	; select bank2
  7520  026C  08D6               	movf	_USBDeferOUTDataStagePackets^(0+256),f
  7521  026D  1D03               	skipz
  7522  026E  2A71               	goto	l3666
  7523                           
  7524                           ;usb_device.c: 1663: {
  7525                           ;usb_device.c: 1664: USBCtrlEPAllowDataStage();
  7526  026F  318C  24F1         	fcall	_USBCtrlEPAllowDataStage
  7527  0271                     l3666:	
  7528                           
  7529                           ;usb_device.c: 1665: }
  7530                           ;usb_device.c: 1669: USBStatusStageEnabledFlag2 = 0;
  7531  0271  0022               	movlb	2	; select bank2
  7532  0272  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  7533                           
  7534                           ;usb_device.c: 1670: USBStatusStageEnabledFlag1 = 0;
  7535  0273  01D8               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  7536                           
  7537                           ;usb_device.c: 1671: }
  7538  0274  0008               	return
  7539  0275                     l3670:	
  7540                           
  7541                           ;usb_device.c: 1672: else
  7542                           ;usb_device.c: 1673: {
  7543                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->CNT = 8;
  7544  0275  3008               	movlw	8
  7545  0276  00F6               	movwf	??_USBCtrlEPServiceComplete
  7546  0277  0A7C               	incf	_pBDTEntryEP0OutNext,w
  7547  0278  0086               	movwf	6
  7548  0279  0187               	clrf	7
  7549  027A  0876               	movf	??_USBCtrlEPServiceComplete,w
  7550  027B  0081               	movwf	1
  7551                           
  7552                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7553  027C  3040               	movlw	64
  7554  027D  00F6               	movwf	??_USBCtrlEPServiceComplete
  7555  027E  3000               	movlw	0
  7556  027F  00F7               	movwf	??_USBCtrlEPServiceComplete+1
  7557  0280  087C               	movf	_pBDTEntryEP0OutNext,w
  7558  0281  3E02               	addlw	2
  7559  0282  0086               	movwf	6
  7560  0283  0187               	clrf	7
  7561  0284  0876               	movf	??_USBCtrlEPServiceComplete,w
  7562  0285  3FC0               	movwi [0]fsr1
  7563  0286  0877               	movf	??_USBCtrlEPServiceComplete+1,w
  7564  0287  3FC1               	movwi [1]fsr1
  7565                           
  7566                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7567  0288  300C               	movlw	12
  7568  0289  00F6               	movwf	??_USBCtrlEPServiceComplete
  7569  028A  087C               	movf	_pBDTEntryEP0OutNext,w
  7570  028B  0086               	movwf	6
  7571  028C  0187               	clrf	7
  7572  028D  0876               	movf	??_USBCtrlEPServiceComplete,w
  7573  028E  0081               	movwf	1
  7574                           
  7575                           ;usb_device.c: 1681: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7576  028F  087C               	movf	_pBDTEntryEP0OutNext,w
  7577  0290  0086               	movwf	6
  7578  0291  0187               	clrf	7
  7579  0292  1781               	bsf	1,7
  7580                           
  7581                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val = 0x04;
  7582  0293  3004               	movlw	4
  7583  0294  00F6               	movwf	??_USBCtrlEPServiceComplete
  7584  0295  0020               	movlb	0	; select bank0
  7585  0296  086B               	movf	_pBDTEntryIn,w
  7586  0297  0086               	movwf	6
  7587  0298  0187               	clrf	7
  7588  0299  0876               	movf	??_USBCtrlEPServiceComplete,w
  7589  029A  0081               	movwf	1
  7590                           
  7591                           ;usb_device.c: 1683: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7592  029B  086B               	movf	_pBDTEntryIn,w
  7593  029C  0086               	movwf	6
  7594  029D  0187               	clrf	7
  7595  029E  1781               	bsf	1,7
  7596                           
  7597                           ;usb_device.c: 1684: }
  7598                           ;usb_device.c: 1685: }
  7599  029F  0008               	return
  7600  02A0                     l650:	
  7601                           
  7602                           ;usb_device.c: 1686: else
  7603                           ;usb_device.c: 1687: {
  7604                           ;usb_device.c: 1688: if(SetupPkt.DataDir == (0x80>>7))
  7605  02A0  0020               	movlb	0	; select bank0
  7606  02A1  1FC0               	btfss	64,7	;volatile
  7607  02A2  2AB7               	goto	l3686
  7608                           
  7609                           ;usb_device.c: 1689: {
  7610                           ;usb_device.c: 1690: controlTransferState = 1;
  7611  02A3  0021               	movlb	1	; select bank1
  7612  02A4  01E4               	clrf	_controlTransferState^(0+128)
  7613  02A5  0AE4               	incf	_controlTransferState^(0+128),f
  7614                           
  7615                           ;usb_device.c: 1704: if(USBDeferINDataStagePackets == 0)
  7616  02A6  0022               	movlb	2	; select bank2
  7617  02A7  08D5               	movf	_USBDeferINDataStagePackets^(0+256),f
  7618  02A8  1D03               	skipz
  7619  02A9  2AAD               	goto	l3678
  7620                           
  7621                           ;usb_device.c: 1705: {
  7622                           ;usb_device.c: 1706: USBCtrlEPAllowDataStage();
  7623  02AA  318C  24F1  3182   	fcall	_USBCtrlEPAllowDataStage
  7624  02AD                     l3678:	
  7625                           
  7626                           ;usb_device.c: 1707: }
  7627                           ;usb_device.c: 1729: USBStatusStageEnabledFlag2 = 0;
  7628  02AD  0022               	movlb	2	; select bank2
  7629  02AE  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  7630                           
  7631                           ;usb_device.c: 1730: USBStatusStageEnabledFlag1 = 0;
  7632  02AF  01D8               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  7633                           
  7634                           ;usb_device.c: 1731: if(USBDeferStatusStagePacket == 0)
  7635  02B0  0021               	movlb	1	; select bank1
  7636  02B1  08E2               	movf	_USBDeferStatusStagePacket^(0+128),f
  7637  02B2  1D03               	skipz
  7638  02B3  0008               	return
  7639                           
  7640                           ;usb_device.c: 1732: {
  7641                           ;usb_device.c: 1733: USBCtrlEPAllowStatusStage();
  7642  02B4  318D  2548         	fcall	_USBCtrlEPAllowStatusStage
  7643                           
  7644                           ;usb_device.c: 1734: }
  7645                           ;usb_device.c: 1735: }
  7646  02B6  0008               	return
  7647  02B7                     l3686:	
  7648                           
  7649                           ;usb_device.c: 1736: else
  7650                           ;usb_device.c: 1737: {
  7651                           ;usb_device.c: 1748: controlTransferState = 2;
  7652  02B7  3002               	movlw	2
  7653  02B8  00F6               	movwf	??_USBCtrlEPServiceComplete
  7654  02B9  0876               	movf	??_USBCtrlEPServiceComplete,w
  7655  02BA  0021               	movlb	1	; select bank1
  7656  02BB  00E4               	movwf	_controlTransferState^(0+128)
  7657                           
  7658                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->CNT = 8;
  7659  02BC  3008               	movlw	8
  7660  02BD  00F6               	movwf	??_USBCtrlEPServiceComplete
  7661  02BE  0A7C               	incf	_pBDTEntryEP0OutNext,w
  7662  02BF  0086               	movwf	6
  7663  02C0  0187               	clrf	7
  7664  02C1  0876               	movf	??_USBCtrlEPServiceComplete,w
  7665  02C2  0081               	movwf	1
  7666                           
  7667                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7668  02C3  3040               	movlw	64
  7669  02C4  00F6               	movwf	??_USBCtrlEPServiceComplete
  7670  02C5  3000               	movlw	0
  7671  02C6  00F7               	movwf	??_USBCtrlEPServiceComplete+1
  7672  02C7  087C               	movf	_pBDTEntryEP0OutNext,w
  7673  02C8  3E02               	addlw	2
  7674  02C9  0086               	movwf	6
  7675  02CA  0187               	clrf	7
  7676  02CB  0876               	movf	??_USBCtrlEPServiceComplete,w
  7677  02CC  3FC0               	movwi [0]fsr1
  7678  02CD  0877               	movf	??_USBCtrlEPServiceComplete+1,w
  7679  02CE  3FC1               	movwi [1]fsr1
  7680                           
  7681                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  7682  02CF  3004               	movlw	4
  7683  02D0  00F6               	movwf	??_USBCtrlEPServiceComplete
  7684  02D1  087C               	movf	_pBDTEntryEP0OutNext,w
  7685  02D2  0086               	movwf	6
  7686  02D3  0187               	clrf	7
  7687  02D4  0876               	movf	??_USBCtrlEPServiceComplete,w
  7688  02D5  0081               	movwf	1
  7689                           
  7690                           ;usb_device.c: 1754: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7691  02D6  087C               	movf	_pBDTEntryEP0OutNext,w
  7692  02D7  0086               	movwf	6
  7693  02D8  0187               	clrf	7
  7694  02D9  1781               	bsf	1,7
  7695                           
  7696                           ;usb_device.c: 1757: USBStatusStageEnabledFlag2 = 0;
  7697  02DA  0022               	movlb	2	; select bank2
  7698  02DB  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  7699                           
  7700                           ;usb_device.c: 1758: USBStatusStageEnabledFlag1 = 0;
  7701  02DC  01D8               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  7702                           
  7703                           ;usb_device.c: 1759: if(USBDeferStatusStagePacket == 0)
  7704  02DD  0021               	movlb	1	; select bank1
  7705  02DE  08E2               	movf	_USBDeferStatusStagePacket^(0+128),f
  7706  02DF  1D03               	skipz
  7707  02E0  0008               	return
  7708                           
  7709                           ;usb_device.c: 1760: {
  7710                           ;usb_device.c: 1761: USBCtrlEPAllowStatusStage();
  7711  02E1  318D  2548         	fcall	_USBCtrlEPAllowStatusStage
  7712  02E3  0008               	return
  7713  02E4                     __end_of_USBCtrlEPServiceComplete:	
  7714                           
  7715                           	psect	text28
  7716  0CF1                     __ptext28:	
  7717 ;; *************** function _USBCtrlEPAllowDataStage *****************
  7718 ;; Defined at:
  7719 ;;		line 1508 in file "../framework/usb/usb_device.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;		None
  7722 ;; Auto vars:     Size  Location     Type
  7723 ;;		None
  7724 ;; Return value:  Size  Location     Type
  7725 ;;		None               void
  7726 ;; Registers used:
  7727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7728 ;; Tracked objects:
  7729 ;;		On entry : 0/0
  7730 ;;		On exit  : 0/0
  7731 ;;		Unchanged: 0/0
  7732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7735 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7736 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7737 ;;Total ram usage:        2 bytes
  7738 ;; Hardware stack levels used:    1
  7739 ;; Hardware stack levels required when called:    2
  7740 ;; This function calls:
  7741 ;;		_USBCtrlTrfTxService
  7742 ;; This function is called by:
  7743 ;;		_USBCtrlEPServiceComplete
  7744 ;; This function uses a non-reentrant model
  7745 ;;
  7746                           
  7747                           
  7748                           ;psect for function _USBCtrlEPAllowDataStage
  7749  0CF1                     _USBCtrlEPAllowDataStage:	
  7750                           
  7751                           ;usb_device.c: 1509: USBDeferINDataStagePackets = 0;
  7752                           
  7753                           ;incstack = 0
  7754                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7755  0CF1  0022               	movlb	2	; select bank2
  7756  0CF2  01D5               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  7757                           
  7758                           ;usb_device.c: 1510: USBDeferOUTDataStagePackets = 0;
  7759  0CF3  01D6               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  7760                           
  7761                           ;usb_device.c: 1512: if(controlTransferState == 2)
  7762  0CF4  0021               	movlb	1	; select bank1
  7763  0CF5  0864               	movf	_controlTransferState^(0+128),w
  7764  0CF6  3A02               	xorlw	2
  7765  0CF7  1D03               	skipz
  7766  0CF8  2D18               	goto	l3604
  7767                           
  7768                           ;usb_device.c: 1513: {
  7769                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->CNT = 8;
  7770  0CF9  3008               	movlw	8
  7771  0CFA  00F4               	movwf	??_USBCtrlEPAllowDataStage
  7772  0CFB  0A7C               	incf	_pBDTEntryEP0OutNext,w
  7773  0CFC  0086               	movwf	6
  7774  0CFD  0187               	clrf	7
  7775  0CFE  0874               	movf	??_USBCtrlEPAllowDataStage,w
  7776  0CFF  0081               	movwf	1
  7777                           
  7778                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  7779  0D00  3048               	movlw	72
  7780  0D01  00F4               	movwf	??_USBCtrlEPAllowDataStage
  7781  0D02  3000               	movlw	0
  7782  0D03  00F5               	movwf	??_USBCtrlEPAllowDataStage+1
  7783  0D04  087C               	movf	_pBDTEntryEP0OutNext,w
  7784  0D05  3E02               	addlw	2
  7785  0D06  0086               	movwf	6
  7786  0D07  0187               	clrf	7
  7787  0D08  0874               	movf	??_USBCtrlEPAllowDataStage,w
  7788  0D09  3FC0               	movwi [0]fsr1
  7789  0D0A  0875               	movf	??_USBCtrlEPAllowDataStage+1,w
  7790  0D0B  3FC1               	movwi [1]fsr1
  7791                           
  7792                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  7793  0D0C  3048               	movlw	72
  7794  0D0D  00F4               	movwf	??_USBCtrlEPAllowDataStage
  7795  0D0E  087C               	movf	_pBDTEntryEP0OutNext,w
  7796  0D0F  0086               	movwf	6
  7797  0D10  0187               	clrf	7
  7798  0D11  0874               	movf	??_USBCtrlEPAllowDataStage,w
  7799  0D12  0081               	movwf	1
  7800                           
  7801                           ;usb_device.c: 1518: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7802  0D13  087C               	movf	_pBDTEntryEP0OutNext,w
  7803  0D14  0086               	movwf	6
  7804  0D15  0187               	clrf	7
  7805  0D16  1781               	bsf	1,7
  7806                           
  7807                           ;usb_device.c: 1519: }
  7808  0D17  0008               	return
  7809  0D18                     l3604:	
  7810                           
  7811                           ;usb_device.c: 1520: else
  7812                           ;usb_device.c: 1521: {
  7813                           ;usb_device.c: 1524: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  7814  0D18  086D               	movf	((_inPipes+1)^(0+128)+3),w
  7815  0D19  0020               	movlb	0	; select bank0
  7816  0D1A  0247               	subwf	71,w	;volatile
  7817  0D1B  1D03               	skipz
  7818  0D1C  2D21               	goto	u2925
  7819  0D1D  0021               	movlb	1	; select bank1
  7820  0D1E  086C               	movf	(_inPipes^(0+128)+3),w
  7821  0D1F  0020               	movlb	0	; select bank0
  7822  0D20  0246               	subwf	70,w	;volatile
  7823  0D21                     u2925:	
  7824  0D21  1803               	skipnc
  7825  0D22  2D2C               	goto	l3608
  7826                           
  7827                           ;usb_device.c: 1525: {
  7828                           ;usb_device.c: 1526: inPipes[0].wCount.Val = SetupPkt.wLength;
  7829  0D23  0847               	movf	71,w	;volatile
  7830  0D24  0021               	movlb	1	; select bank1
  7831  0D25  01ED               	clrf	((_inPipes+1)^(0+128)+3)
  7832  0D26  07ED               	addwf	((_inPipes+1)^(0+128)+3),f
  7833  0D27  0020               	movlb	0	; select bank0
  7834  0D28  0846               	movf	70,w	;volatile
  7835  0D29  0021               	movlb	1	; select bank1
  7836  0D2A  01EC               	clrf	(_inPipes^(0+128)+3)
  7837  0D2B  07EC               	addwf	(_inPipes^(0+128)+3),f
  7838  0D2C                     l3608:	
  7839                           
  7840                           ;usb_device.c: 1527: }
  7841                           ;usb_device.c: 1528: USBCtrlTrfTxService();
  7842  0D2C  318E  2620  318C   	fcall	_USBCtrlTrfTxService
  7843                           
  7844                           ;usb_device.c: 1533: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  7845  0D2F  3048               	movlw	72
  7846  0D30  00F4               	movwf	??_USBCtrlEPAllowDataStage
  7847  0D31  3000               	movlw	0
  7848  0D32  00F5               	movwf	??_USBCtrlEPAllowDataStage+1
  7849  0D33  0020               	movlb	0	; select bank0
  7850  0D34  086B               	movf	_pBDTEntryIn,w
  7851  0D35  3E02               	addlw	2
  7852  0D36  0086               	movwf	6
  7853  0D37  0187               	clrf	7
  7854  0D38  0874               	movf	??_USBCtrlEPAllowDataStage,w
  7855  0D39  3FC0               	movwi [0]fsr1
  7856  0D3A  0875               	movf	??_USBCtrlEPAllowDataStage+1,w
  7857  0D3B  3FC1               	movwi [1]fsr1
  7858                           
  7859                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  7860  0D3C  3048               	movlw	72
  7861  0D3D  00F4               	movwf	??_USBCtrlEPAllowDataStage
  7862  0D3E  086B               	movf	_pBDTEntryIn,w
  7863  0D3F  0086               	movwf	6
  7864  0D40  0187               	clrf	7
  7865  0D41  0874               	movf	??_USBCtrlEPAllowDataStage,w
  7866  0D42  0081               	movwf	1
  7867                           
  7868                           ;usb_device.c: 1535: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7869  0D43  086B               	movf	_pBDTEntryIn,w
  7870  0D44  0086               	movwf	6
  7871  0D45  0187               	clrf	7
  7872  0D46  1781               	bsf	1,7
  7873  0D47  0008               	return
  7874  0D48                     __end_of_USBCtrlEPAllowDataStage:	
  7875                           
  7876                           	psect	text29
  7877  0E20                     __ptext29:	
  7878 ;; *************** function _USBCtrlTrfTxService *****************
  7879 ;; Defined at:
  7880 ;;		line 1791 in file "../framework/usb/usb_device.c"
  7881 ;; Parameters:    Size  Location     Type
  7882 ;;		None
  7883 ;; Auto vars:     Size  Location     Type
  7884 ;;  byteToSend      1    3[COMMON] unsigned char 
  7885 ;; Return value:  Size  Location     Type
  7886 ;;		None               void
  7887 ;; Registers used:
  7888 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7889 ;; Tracked objects:
  7890 ;;		On entry : 0/0
  7891 ;;		On exit  : 0/0
  7892 ;;		Unchanged: 0/0
  7893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7895 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7896 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7897 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7898 ;;Total ram usage:        3 bytes
  7899 ;; Hardware stack levels used:    1
  7900 ;; Hardware stack levels required when called:    1
  7901 ;; This function calls:
  7902 ;;		Nothing
  7903 ;; This function is called by:
  7904 ;;		_USBCtrlEPAllowDataStage
  7905 ;;		_USBCtrlTrfInHandler
  7906 ;; This function uses a non-reentrant model
  7907 ;;
  7908                           
  7909                           
  7910                           ;psect for function _USBCtrlTrfTxService
  7911  0E20                     _USBCtrlTrfTxService:	
  7912                           
  7913                           ;usb_device.c: 1792: uint8_t byteToSend;
  7914                           ;usb_device.c: 1796: byteToSend = 8;
  7915                           
  7916                           ;incstack = 0
  7917                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  7918  0E20  3008               	movlw	8
  7919  0E21  00F1               	movwf	??_USBCtrlTrfTxService
  7920  0E22  0871               	movf	??_USBCtrlTrfTxService,w
  7921  0E23  00F3               	movwf	USBCtrlTrfTxService@byteToSend
  7922                           
  7923                           ;usb_device.c: 1797: if(inPipes[0].wCount.Val < (uint8_t)8)
  7924  0E24  3000               	movlw	0
  7925  0E25  0021               	movlb	1	; select bank1
  7926  0E26  026D               	subwf	((_inPipes+1)^(0+128)+3),w
  7927  0E27  3008               	movlw	8
  7928  0E28  1903               	skipnz
  7929  0E29  026C               	subwf	(_inPipes^(0+128)+3),w
  7930  0E2A  1803               	skipnc
  7931  0E2B  2E3E               	goto	l663
  7932                           
  7933                           ;usb_device.c: 1798: {
  7934                           ;usb_device.c: 1799: byteToSend = inPipes[0].wCount.Val;
  7935  0E2C  086C               	movf	(_inPipes^(0+128)+3),w
  7936  0E2D  00F1               	movwf	??_USBCtrlTrfTxService
  7937  0E2E  0871               	movf	??_USBCtrlTrfTxService,w
  7938  0E2F  00F3               	movwf	USBCtrlTrfTxService@byteToSend
  7939                           
  7940                           ;usb_device.c: 1806: if(shortPacketStatus == 0)
  7941  0E30  08E7               	movf	_shortPacketStatus^(0+128),f
  7942  0E31  1D03               	skipz
  7943  0E32  2E36               	goto	l3624
  7944                           
  7945                           ;usb_device.c: 1807: {
  7946                           ;usb_device.c: 1808: shortPacketStatus = 1;
  7947  0E33  01E7               	clrf	_shortPacketStatus^(0+128)
  7948  0E34  0AE7               	incf	_shortPacketStatus^(0+128),f
  7949                           
  7950                           ;usb_device.c: 1809: }
  7951  0E35  2E3E               	goto	l663
  7952  0E36                     l3624:	
  7953                           
  7954                           ;usb_device.c: 1810: else if(shortPacketStatus == 1)
  7955  0E36  0867               	movf	_shortPacketStatus^(0+128),w
  7956  0E37  3A01               	xorlw	1
  7957  0E38  1D03               	skipz
  7958  0E39  2E3E               	goto	l663
  7959                           
  7960                           ;usb_device.c: 1811: {
  7961                           ;usb_device.c: 1812: shortPacketStatus = 2;
  7962  0E3A  3002               	movlw	2
  7963  0E3B  00F1               	movwf	??_USBCtrlTrfTxService
  7964  0E3C  0871               	movf	??_USBCtrlTrfTxService,w
  7965  0E3D  00E7               	movwf	_shortPacketStatus^(0+128)
  7966  0E3E                     l663:	
  7967                           
  7968                           ;usb_device.c: 1813: }
  7969                           ;usb_device.c: 1814: }
  7970                           ;usb_device.c: 1818: inPipes[0].wCount.Val -= byteToSend;
  7971  0E3E  0873               	movf	USBCtrlTrfTxService@byteToSend,w
  7972  0E3F  00F1               	movwf	??_USBCtrlTrfTxService
  7973  0E40  01F2               	clrf	??_USBCtrlTrfTxService+1
  7974  0E41  0871               	movf	??_USBCtrlTrfTxService,w
  7975  0E42  02EC               	subwf	(_inPipes^(0+128)+3),f
  7976  0E43  0872               	movf	??_USBCtrlTrfTxService+1,w
  7977  0E44  3BED               	subwfb	((_inPipes+1)^(0+128)+3),f
  7978                           
  7979                           ;usb_device.c: 1823: pBDTEntryIn[0]->CNT = byteToSend;
  7980  0E45  0873               	movf	USBCtrlTrfTxService@byteToSend,w
  7981  0E46  00F1               	movwf	??_USBCtrlTrfTxService
  7982  0E47  0020               	movlb	0	; select bank0
  7983  0E48  0A6B               	incf	_pBDTEntryIn,w
  7984  0E49  0086               	movwf	6
  7985  0E4A  0187               	clrf	7
  7986  0E4B  0871               	movf	??_USBCtrlTrfTxService,w
  7987  0E4C  0081               	movwf	1
  7988                           
  7989                           ;usb_device.c: 1827: pDst = ( uint8_t*)CtrlTrfData;
  7990  0E4D  3048               	movlw	72
  7991  0E4E  00F1               	movwf	??_USBCtrlTrfTxService
  7992  0E4F  0871               	movf	??_USBCtrlTrfTxService,w
  7993  0E50  0022               	movlb	2	; select bank2
  7994  0E51  00DE               	movwf	_pDst^(0+256)
  7995                           
  7996                           ;usb_device.c: 1828: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  7997  0E52  0021               	movlb	1	; select bank1
  7998  0E53  1C6B               	btfss	(_inPipes^(0+128)+2),0
  7999  0E54  2E6F               	goto	l3644
  8000  0E55  2E8C               	goto	l3654
  8001  0E56                     l3636:	
  8002                           ;usb_device.c: 1829: {
  8003                           ;usb_device.c: 1830: while(byteToSend)
  8004                           
  8005                           
  8006                           ;usb_device.c: 1831: {
  8007                           ;usb_device.c: 1832: *pDst++ = *inPipes[0].pSrc.bRom++;
  8008  0E56  0021               	movlb	1	; select bank1
  8009  0E57  0869               	movf	_inPipes^(0+128),w
  8010  0E58  0084               	movwf	4
  8011  0E59  086A               	movf	(_inPipes+1)^(0+128),w
  8012  0E5A  0085               	movwf	5
  8013  0E5B  0800               	movf	0,w	;code access
  8014  0E5C  00F1               	movwf	??_USBCtrlTrfTxService
  8015  0E5D  0022               	movlb	2	; select bank2
  8016  0E5E  085E               	movf	_pDst^(0+256),w
  8017  0E5F  0086               	movwf	6
  8018  0E60  0187               	clrf	7
  8019  0E61  0871               	movf	??_USBCtrlTrfTxService,w
  8020  0E62  0081               	movwf	1
  8021  0E63  3001               	movlw	1
  8022  0E64  0021               	movlb	1	; select bank1
  8023  0E65  07E9               	addwf	_inPipes^(0+128),f
  8024  0E66  3000               	movlw	0
  8025  0E67  3DEA               	addwfc	(_inPipes+1)^(0+128),f
  8026  0E68  3001               	movlw	1
  8027  0E69  00F1               	movwf	??_USBCtrlTrfTxService
  8028  0E6A  0871               	movf	??_USBCtrlTrfTxService,w
  8029  0E6B  0022               	movlb	2	; select bank2
  8030  0E6C  07DE               	addwf	_pDst^(0+256),f
  8031                           
  8032                           ;usb_device.c: 1833: byteToSend--;
  8033  0E6D  3001               	movlw	1
  8034  0E6E  02F3               	subwf	USBCtrlTrfTxService@byteToSend,f
  8035  0E6F                     l3644:	
  8036  0E6F  08F3               	movf	USBCtrlTrfTxService@byteToSend,f
  8037  0E70  1903               	btfsc	3,2
  8038  0E71  0008               	return
  8039  0E72  2E56               	goto	l3636
  8040  0E73                     l3646:	
  8041                           ;usb_device.c: 1836: else
  8042                           ;usb_device.c: 1837: {
  8043                           ;usb_device.c: 1838: while(byteToSend)
  8044                           
  8045                           ;usb_device.c: 1834: }
  8046                           ;usb_device.c: 1835: }
  8047                           
  8048                           
  8049                           ;usb_device.c: 1839: {
  8050                           ;usb_device.c: 1840: *pDst++ = *inPipes[0].pSrc.bRam++;
  8051  0E73  0021               	movlb	1	; select bank1
  8052  0E74  0869               	movf	_inPipes^(0+128),w
  8053  0E75  0084               	movwf	4
  8054  0E76  086A               	movf	(_inPipes+1)^(0+128),w
  8055  0E77  0085               	movwf	5
  8056  0E78  0800               	movf	0,w	;code access
  8057  0E79  00F1               	movwf	??_USBCtrlTrfTxService
  8058  0E7A  0022               	movlb	2	; select bank2
  8059  0E7B  085E               	movf	_pDst^(0+256),w
  8060  0E7C  0086               	movwf	6
  8061  0E7D  0187               	clrf	7
  8062  0E7E  0871               	movf	??_USBCtrlTrfTxService,w
  8063  0E7F  0081               	movwf	1
  8064  0E80  3001               	movlw	1
  8065  0E81  0021               	movlb	1	; select bank1
  8066  0E82  07E9               	addwf	_inPipes^(0+128),f
  8067  0E83  3000               	movlw	0
  8068  0E84  3DEA               	addwfc	(_inPipes+1)^(0+128),f
  8069  0E85  3001               	movlw	1
  8070  0E86  00F1               	movwf	??_USBCtrlTrfTxService
  8071  0E87  0871               	movf	??_USBCtrlTrfTxService,w
  8072  0E88  0022               	movlb	2	; select bank2
  8073  0E89  07DE               	addwf	_pDst^(0+256),f
  8074                           
  8075                           ;usb_device.c: 1841: byteToSend--;
  8076  0E8A  3001               	movlw	1
  8077  0E8B  02F3               	subwf	USBCtrlTrfTxService@byteToSend,f
  8078  0E8C                     l3654:	
  8079  0E8C  08F3               	movf	USBCtrlTrfTxService@byteToSend,f
  8080  0E8D  1903               	btfsc	3,2
  8081  0E8E  0008               	return
  8082  0E8F  2E73               	goto	l3646
  8083  0E90                     __end_of_USBCtrlTrfTxService:	
  8084                           
  8085                           	psect	text30
  8086  0D48                     __ptext30:	
  8087 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  8088 ;; Defined at:
  8089 ;;		line 1436 in file "../framework/usb/usb_device.c"
  8090 ;; Parameters:    Size  Location     Type
  8091 ;;		None
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;		None
  8094 ;; Return value:  Size  Location     Type
  8095 ;;		None               void
  8096 ;; Registers used:
  8097 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8105 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8106 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8107 ;;Total ram usage:        2 bytes
  8108 ;; Hardware stack levels used:    1
  8109 ;; Hardware stack levels required when called:    1
  8110 ;; This function calls:
  8111 ;;		Nothing
  8112 ;; This function is called by:
  8113 ;;		_USBDeviceTasks
  8114 ;;		_USBCtrlEPServiceComplete
  8115 ;;		_USBCtrlTrfRxService
  8116 ;; This function uses a non-reentrant model
  8117 ;;
  8118                           
  8119                           
  8120                           ;psect for function _USBCtrlEPAllowStatusStage
  8121  0D48                     _USBCtrlEPAllowStatusStage:	
  8122                           
  8123                           ;usb_device.c: 1442: if(USBStatusStageEnabledFlag1 == 0)
  8124                           
  8125                           ;incstack = 0
  8126                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  8127  0D48  0022               	movlb	2	; select bank2
  8128  0D49  08D8               	movf	_USBStatusStageEnabledFlag1^(0+256),f
  8129  0D4A  1D03               	skipz
  8130  0D4B  0008               	return
  8131                           
  8132                           ;usb_device.c: 1443: {
  8133                           ;usb_device.c: 1444: USBStatusStageEnabledFlag1 = 1;
  8134  0D4C  3001               	movlw	1
  8135  0D4D  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  8136  0D4E  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  8137  0D4F  00D8               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  8138                           
  8139                           ;usb_device.c: 1445: if(USBStatusStageEnabledFlag2 == 0)
  8140  0D50  08D9               	movf	_USBStatusStageEnabledFlag2^(0+256),f
  8141  0D51  1D03               	skipz
  8142  0D52  0008               	return
  8143                           
  8144                           ;usb_device.c: 1446: {
  8145                           ;usb_device.c: 1447: USBStatusStageEnabledFlag2 = 1;
  8146  0D53  3001               	movlw	1
  8147  0D54  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  8148  0D55  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  8149  0D56  00D9               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  8150                           
  8151                           ;usb_device.c: 1451: if(controlTransferState == 2)
  8152  0D57  0021               	movlb	1	; select bank1
  8153  0D58  0864               	movf	_controlTransferState^(0+128),w
  8154  0D59  3A02               	xorlw	2
  8155  0D5A  1D03               	skipz
  8156  0D5B  2D6D               	goto	l3498
  8157                           
  8158                           ;usb_device.c: 1452: {
  8159                           ;usb_device.c: 1453: pBDTEntryIn[0]->CNT = 0;
  8160  0D5C  0020               	movlb	0	; select bank0
  8161  0D5D  0A6B               	incf	_pBDTEntryIn,w
  8162  0D5E  0086               	movwf	6
  8163  0D5F  0187               	clrf	7
  8164  0D60  0181               	clrf	1
  8165                           
  8166                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8167  0D61  3048               	movlw	72
  8168  0D62  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  8169  0D63  086B               	movf	_pBDTEntryIn,w
  8170  0D64  0086               	movwf	6
  8171  0D65  0187               	clrf	7
  8172  0D66  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  8173  0D67  0081               	movwf	1
  8174                           
  8175                           ;usb_device.c: 1455: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8176  0D68  086B               	movf	_pBDTEntryIn,w
  8177  0D69  0086               	movwf	6
  8178  0D6A  0187               	clrf	7
  8179  0D6B  1781               	bsf	1,7
  8180                           
  8181                           ;usb_device.c: 1456: }
  8182  0D6C  0008               	return
  8183  0D6D                     l3498:	
  8184                           
  8185                           ;usb_device.c: 1457: else if(controlTransferState == 1)
  8186  0D6D  0021               	movlb	1	; select bank1
  8187  0D6E  0864               	movf	_controlTransferState^(0+128),w
  8188  0D6F  3A01               	xorlw	1
  8189  0D70  1D03               	skipz
  8190  0D71  0008               	return
  8191                           
  8192                           ;usb_device.c: 1458: {
  8193                           ;usb_device.c: 1459: BothEP0OutUOWNsSet = 0;
  8194  0D72  0022               	movlb	2	; select bank2
  8195  0D73  01D2               	clrf	_BothEP0OutUOWNsSet^(0+256)
  8196                           
  8197                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->CNT = 8;
  8198  0D74  3008               	movlw	8
  8199  0D75  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  8200  0D76  0020               	movlb	0	; select bank0
  8201  0D77  0A6E               	incf	_pBDTEntryEP0OutCurrent,w
  8202  0D78  0086               	movwf	6
  8203  0D79  0187               	clrf	7
  8204  0D7A  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  8205  0D7B  0081               	movwf	1
  8206                           
  8207                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8208  0D7C  3040               	movlw	64
  8209  0D7D  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  8210  0D7E  3000               	movlw	0
  8211  0D7F  00F2               	movwf	??_USBCtrlEPAllowStatusStage+1
  8212  0D80  086E               	movf	_pBDTEntryEP0OutCurrent,w
  8213  0D81  3E02               	addlw	2
  8214  0D82  0086               	movwf	6
  8215  0D83  0187               	clrf	7
  8216  0D84  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  8217  0D85  3FC0               	movwi [0]fsr1
  8218  0D86  0872               	movf	??_USBCtrlEPAllowStatusStage+1,w
  8219  0D87  3FC1               	movwi [1]fsr1
  8220                           
  8221                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  8222  0D88  3004               	movlw	4
  8223  0D89  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  8224  0D8A  086E               	movf	_pBDTEntryEP0OutCurrent,w
  8225  0D8B  0086               	movwf	6
  8226  0D8C  0187               	clrf	7
  8227  0D8D  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  8228  0D8E  0081               	movwf	1
  8229                           
  8230                           ;usb_device.c: 1467: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8231  0D8F  086E               	movf	_pBDTEntryEP0OutCurrent,w
  8232  0D90  0086               	movwf	6
  8233  0D91  0187               	clrf	7
  8234  0D92  1781               	bsf	1,7
  8235                           
  8236                           ;usb_device.c: 1468: BothEP0OutUOWNsSet = 1;
  8237  0D93  0022               	movlb	2	; select bank2
  8238  0D94  01D2               	clrf	_BothEP0OutUOWNsSet^(0+256)
  8239  0D95  0AD2               	incf	_BothEP0OutUOWNsSet^(0+256),f
  8240                           
  8241                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->CNT = 8;
  8242  0D96  3008               	movlw	8
  8243  0D97  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  8244  0D98  0A7C               	incf	_pBDTEntryEP0OutNext,w
  8245  0D99  0086               	movwf	6
  8246  0D9A  0187               	clrf	7
  8247  0D9B  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  8248  0D9C  0081               	movwf	1
  8249                           
  8250                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8251  0D9D  3040               	movlw	64
  8252  0D9E  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  8253  0D9F  3000               	movlw	0
  8254  0DA0  00F2               	movwf	??_USBCtrlEPAllowStatusStage+1
  8255  0DA1  087C               	movf	_pBDTEntryEP0OutNext,w
  8256  0DA2  3E02               	addlw	2
  8257  0DA3  0086               	movwf	6
  8258  0DA4  0187               	clrf	7
  8259  0DA5  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  8260  0DA6  3FC0               	movwi [0]fsr1
  8261  0DA7  0872               	movf	??_USBCtrlEPAllowStatusStage+1,w
  8262  0DA8  3FC1               	movwi [1]fsr1
  8263                           
  8264                           ;usb_device.c: 1474: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  8265  0DA9  3080               	movlw	128
  8266  0DAA  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  8267  0DAB  087C               	movf	_pBDTEntryEP0OutNext,w
  8268  0DAC  0086               	movwf	6
  8269  0DAD  0187               	clrf	7
  8270  0DAE  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  8271  0DAF  0081               	movwf	1
  8272  0DB0  0008               	return
  8273  0DB1                     __end_of_USBCtrlEPAllowStatusStage:	
  8274                           
  8275                           	psect	text31
  8276  0A49                     __ptext31:	
  8277 ;; *************** function _USBStallHandler *****************
  8278 ;; Defined at:
  8279 ;;		line 2222 in file "../framework/usb/usb_device.c"
  8280 ;; Parameters:    Size  Location     Type
  8281 ;;		None
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;		None
  8284 ;; Return value:  Size  Location     Type
  8285 ;;		None               void
  8286 ;; Registers used:
  8287 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8288 ;; Tracked objects:
  8289 ;;		On entry : 0/0
  8290 ;;		On exit  : 0/0
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8295 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8296 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8297 ;;Total ram usage:        1 bytes
  8298 ;; Hardware stack levels used:    1
  8299 ;; Hardware stack levels required when called:    1
  8300 ;; This function calls:
  8301 ;;		Nothing
  8302 ;; This function is called by:
  8303 ;;		_USBDeviceTasks
  8304 ;; This function uses a non-reentrant model
  8305 ;;
  8306                           
  8307                           
  8308                           ;psect for function _USBStallHandler
  8309  0A49                     _USBStallHandler:	
  8310                           
  8311                           ;usb_device.c: 2233: if(UEP0bits.EPSTALL == 1)
  8312                           
  8313                           ;incstack = 0
  8314                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  8315  0A49  003D               	movlb	29	; select bank29
  8316  0A4A  1C18               	btfss	24,0	;volatile
  8317  0A4B  2A68               	goto	l3528
  8318                           
  8319                           ;usb_device.c: 2234: {
  8320                           ;usb_device.c: 2236: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8321  0A4C  0020               	movlb	0	; select bank0
  8322  0A4D  086E               	movf	_pBDTEntryEP0OutCurrent,w
  8323  0A4E  0086               	movwf	6
  8324  0A4F  0187               	clrf	7
  8325  0A50  0801               	movf	1,w
  8326  0A51  3A80               	xorlw	128
  8327  0A52  1D03               	skipz
  8328  0A53  2A66               	goto	l3526
  8329  0A54  086B               	movf	_pBDTEntryIn,w
  8330  0A55  0086               	movwf	6
  8331  0A56  0187               	clrf	7
  8332  0A57  0801               	movf	1,w
  8333  0A58  3A84               	xorlw	132
  8334  0A59  1D03               	skipz
  8335  0A5A  2A66               	goto	l3526
  8336                           
  8337                           ;usb_device.c: 2237: {
  8338                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8339  0A5B  300C               	movlw	12
  8340  0A5C  00F1               	movwf	??_USBStallHandler
  8341  0A5D  086E               	movf	_pBDTEntryEP0OutCurrent,w
  8342  0A5E  0086               	movwf	6
  8343  0A5F  0187               	clrf	7
  8344  0A60  0871               	movf	??_USBStallHandler,w
  8345  0A61  0081               	movwf	1
  8346                           
  8347                           ;usb_device.c: 2240: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8348  0A62  086E               	movf	_pBDTEntryEP0OutCurrent,w
  8349  0A63  0086               	movwf	6
  8350  0A64  0187               	clrf	7
  8351  0A65  1781               	bsf	1,7
  8352  0A66                     l3526:	
  8353                           
  8354                           ;usb_device.c: 2241: }
  8355                           ;usb_device.c: 2242: UEP0bits.EPSTALL = 0;
  8356  0A66  003D               	movlb	29	; select bank29
  8357  0A67  1018               	bcf	24,0	;volatile
  8358  0A68                     l3528:	
  8359                           
  8360                           ;usb_device.c: 2243: }
  8361                           ;usb_device.c: 2245: (UIR &= 0xDF);
  8362  0A68  30DF               	movlw	223
  8363  0A69  00F1               	movwf	??_USBStallHandler
  8364  0A6A  0871               	movf	??_USBStallHandler,w
  8365  0A6B  0590               	andwf	16,f	;volatile
  8366  0A6C  0008               	return
  8367  0A6D                     __end_of_USBStallHandler:	
  8368                           
  8369                           	psect	text32
  8370  0976                     __ptext32:	
  8371 ;; *************** function _USBIncrement1msInternalTimers *****************
  8372 ;; Defined at:
  8373 ;;		line 3051 in file "../framework/usb/usb_device.c"
  8374 ;; Parameters:    Size  Location     Type
  8375 ;;		None
  8376 ;; Auto vars:     Size  Location     Type
  8377 ;;		None
  8378 ;; Return value:  Size  Location     Type
  8379 ;;		None               void
  8380 ;; Registers used:
  8381 ;;		wreg, status,2, status,0
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/0
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8389 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8390 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8391 ;;Total ram usage:        1 bytes
  8392 ;; Hardware stack levels used:    1
  8393 ;; Hardware stack levels required when called:    1
  8394 ;; This function calls:
  8395 ;;		Nothing
  8396 ;; This function is called by:
  8397 ;;		_USBDeviceTasks
  8398 ;; This function uses a non-reentrant model
  8399 ;;
  8400                           
  8401                           
  8402                           ;psect for function _USBIncrement1msInternalTimers
  8403  0976                     _USBIncrement1msInternalTimers:	
  8404                           
  8405                           ;usb_device.c: 3058: USB1msTickCount++;
  8406                           
  8407                           ;incstack = 0
  8408                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  8409  0976  3001               	movlw	1
  8410  0977  0022               	movlb	2	; select bank2
  8411  0978  07C6               	addwf	_USB1msTickCount^(0+256),f
  8412  0979  3000               	movlw	0
  8413  097A  3DC7               	addwfc	(_USB1msTickCount+1)^(0+256),f
  8414  097B  3000               	movlw	0
  8415  097C  3DC8               	addwfc	(_USB1msTickCount+2)^(0+256),f
  8416  097D  3000               	movlw	0
  8417  097E  3DC9               	addwfc	(_USB1msTickCount+3)^(0+256),f
  8418                           
  8419                           ;usb_device.c: 3059: if(USBBusIsSuspended == 0)
  8420  097F  08D4               	movf	_USBBusIsSuspended^(0+256),f
  8421  0980  1D03               	skipz
  8422  0981  0008               	return
  8423                           
  8424                           ;usb_device.c: 3060: {
  8425                           ;usb_device.c: 3061: USBTicksSinceSuspendEnd++;
  8426  0982  3001               	movlw	1
  8427  0983  00F1               	movwf	??_USBIncrement1msInternalTimers
  8428  0984  0871               	movf	??_USBIncrement1msInternalTimers,w
  8429  0985  07DB               	addwf	_USBTicksSinceSuspendEnd^(0+256),f
  8430                           
  8431                           ;usb_device.c: 3063: if(USBTicksSinceSuspendEnd == 0)
  8432  0986  08DB               	movf	_USBTicksSinceSuspendEnd^(0+256),f
  8433  0987  1D03               	skipz
  8434  0988  0008               	return
  8435                           
  8436                           ;usb_device.c: 3064: {
  8437                           ;usb_device.c: 3065: USBTicksSinceSuspendEnd = 255;
  8438  0989  30FF               	movlw	255
  8439  098A  00F1               	movwf	??_USBIncrement1msInternalTimers
  8440  098B  0871               	movf	??_USBIncrement1msInternalTimers,w
  8441  098C  00DB               	movwf	_USBTicksSinceSuspendEnd^(0+256)
  8442  098D  0008               	return
  8443  098E                     __end_of_USBIncrement1msInternalTimers:	
  8444                           
  8445                           	psect	text33
  8446  095E                     __ptext33:	
  8447 ;; *************** function _USBSuspend *****************
  8448 ;; Defined at:
  8449 ;;		line 2265 in file "../framework/usb/usb_device.c"
  8450 ;; Parameters:    Size  Location     Type
  8451 ;;		None
  8452 ;; Auto vars:     Size  Location     Type
  8453 ;;		None
  8454 ;; Return value:  Size  Location     Type
  8455 ;;		None               void
  8456 ;; Registers used:
  8457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8458 ;; Tracked objects:
  8459 ;;		On entry : 0/0
  8460 ;;		On exit  : 0/0
  8461 ;;		Unchanged: 0/0
  8462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8465 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8466 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8467 ;;Total ram usage:        1 bytes
  8468 ;; Hardware stack levels used:    1
  8469 ;; Hardware stack levels required when called:    5
  8470 ;; This function calls:
  8471 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8472 ;; This function is called by:
  8473 ;;		_USBDeviceTasks
  8474 ;; This function uses a non-reentrant model
  8475 ;;
  8476                           
  8477                           
  8478                           ;psect for function _USBSuspend
  8479  095E                     _USBSuspend:	
  8480                           
  8481                           ;usb_device.c: 2289: UIEbits.ACTVIE = 1;
  8482                           
  8483                           ;incstack = 0
  8484                           ; Regs used in _USBSuspend: [allreg]
  8485  095E  003D               	movlb	29	; select bank29
  8486  095F  1512               	bsf	18,2	;volatile
  8487                           
  8488                           ;usb_device.c: 2290: (UIR &= 0xEF);
  8489  0960  30EF               	movlw	239
  8490  0961  00FB               	movwf	??_USBSuspend
  8491  0962  087B               	movf	??_USBSuspend,w
  8492  0963  0590               	andwf	16,f	;volatile
  8493                           
  8494                           ;usb_device.c: 2293: UCONbits.SUSPND = 1;
  8495  0964  148E               	bsf	14,1	;volatile
  8496                           
  8497                           ;usb_device.c: 2296: USBBusIsSuspended = 1;
  8498  0965  0022               	movlb	2	; select bank2
  8499  0966  01D4               	clrf	_USBBusIsSuspended^(0+256)
  8500  0967  0AD4               	incf	_USBBusIsSuspended^(0+256),f
  8501                           
  8502                           ;usb_device.c: 2297: USBTicksSinceSuspendEnd = 0;
  8503  0968  01DB               	clrf	_USBTicksSinceSuspendEnd^(0+256)
  8504                           
  8505                           ;usb_device.c: 2304: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  8506  0969  3075               	movlw	117
  8507  096A  0020               	movlb	0	; select bank0
  8508  096B  00D5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  8509  096C  3000               	movlw	0
  8510  096D  00D6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  8511  096E  01D7               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  8512  096F  3000               	movlw	0
  8513  0970  00D8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  8514  0971  3000               	movlw	0
  8515  0972  00D9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  8516  0973  318B  2343         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  8517  0975  0008               	return
  8518  0976                     __end_of_USBSuspend:	
  8519                           
  8520                           	psect	text34
  8521  02E4                     __ptext34:	
  8522 ;; *************** function _USBWakeFromSuspend *****************
  8523 ;; Defined at:
  8524 ;;		line 2323 in file "../framework/usb/usb_device.c"
  8525 ;; Parameters:    Size  Location     Type
  8526 ;;		None
  8527 ;; Auto vars:     Size  Location     Type
  8528 ;;		None
  8529 ;; Return value:  Size  Location     Type
  8530 ;;		None               void
  8531 ;; Registers used:
  8532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8533 ;; Tracked objects:
  8534 ;;		On entry : 0/0
  8535 ;;		On exit  : 0/0
  8536 ;;		Unchanged: 0/0
  8537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8540 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8541 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8542 ;;Total ram usage:        1 bytes
  8543 ;; Hardware stack levels used:    1
  8544 ;; Hardware stack levels required when called:    5
  8545 ;; This function calls:
  8546 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8547 ;; This function is called by:
  8548 ;;		_USBDeviceTasks
  8549 ;; This function uses a non-reentrant model
  8550 ;;
  8551                           
  8552                           
  8553                           ;psect for function _USBWakeFromSuspend
  8554  02E4                     _USBWakeFromSuspend:	
  8555                           
  8556                           ;usb_device.c: 2324: USBBusIsSuspended = 0;
  8557                           
  8558                           ;incstack = 0
  8559                           ; Regs used in _USBWakeFromSuspend: [allreg]
  8560  02E4  0022               	movlb	2	; select bank2
  8561  02E5  01D4               	clrf	_USBBusIsSuspended^(0+256)
  8562                           
  8563                           ;usb_device.c: 2330: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  8564  02E6  3074               	movlw	116
  8565  02E7  0020               	movlb	0	; select bank0
  8566  02E8  00D5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  8567  02E9  3000               	movlw	0
  8568  02EA  00D6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  8569  02EB  01D7               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  8570  02EC  3000               	movlw	0
  8571  02ED  00D8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  8572  02EE  3000               	movlw	0
  8573  02EF  00D9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  8574  02F0  318B  2343  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  8575                           
  8576                           ;usb_device.c: 2337: UCONbits.SUSPND = 0;
  8577  02F3  003D               	movlb	29	; select bank29
  8578  02F4  108E               	bcf	14,1	;volatile
  8579                           
  8580                           ;usb_device.c: 2342: UIEbits.ACTVIE = 0;
  8581  02F5  1112               	bcf	18,2	;volatile
  8582  02F6                     l4376:	
  8583                           ;usb_device.c: 2360: while(UIRbits.ACTVIF)
  8584                           
  8585  02F6  1D10               	btfss	16,2	;volatile
  8586  02F7  2AFD               	goto	l4378
  8587                           
  8588                           ;usb_device.c: 2362: {
  8589                           ;usb_device.c: 2363: (UIR &= 0xFB);
  8590  02F8  30FB               	movlw	251
  8591  02F9  00FB               	movwf	??_USBWakeFromSuspend
  8592  02FA  087B               	movf	??_USBWakeFromSuspend,w
  8593  02FB  0590               	andwf	16,f	;volatile
  8594  02FC  2AF6               	goto	l4376
  8595  02FD                     l4378:	
  8596                           
  8597                           ;usb_device.c: 2364: }
  8598                           ;usb_device.c: 2366: USBTicksSinceSuspendEnd = 0;
  8599  02FD  0022               	movlb	2	; select bank2
  8600  02FE  01DB               	clrf	_USBTicksSinceSuspendEnd^(0+256)
  8601  02FF  0008               	return
  8602  0300                     __end_of_USBWakeFromSuspend:	
  8603                           
  8604                           	psect	text35
  8605  0B43                     __ptext35:	
  8606 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  8607 ;; Defined at:
  8608 ;;		line 88 in file "../src/main.c"
  8609 ;; Parameters:    Size  Location     Type
  8610 ;;  event           2    5[BANK0 ] enum E2684
  8611 ;;  pdata           1    7[BANK0 ] PTR void 
  8612 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(32), NULL(0), 
  8613 ;;  size            2    8[BANK0 ] unsigned int 
  8614 ;; Auto vars:     Size  Location     Type
  8615 ;;		None
  8616 ;; Return value:  Size  Location     Type
  8617 ;;                  1    wreg      unsigned char 
  8618 ;; Registers used:
  8619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8620 ;; Tracked objects:
  8621 ;;		On entry : 0/0
  8622 ;;		On exit  : 0/0
  8623 ;;		Unchanged: 0/0
  8624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8625 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8628 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8629 ;;Total ram usage:        5 bytes
  8630 ;; Hardware stack levels used:    1
  8631 ;; Hardware stack levels required when called:    4
  8632 ;; This function calls:
  8633 ;;		_APP_LEDUpdateUSBStatus
  8634 ;;		_APP_DeviceAudioMIDISOFHandler
  8635 ;;		_APP_DeviceAudioMIDIInitialize
  8636 ;; This function is called by:
  8637 ;;		_USBDeviceTasks
  8638 ;;		_USBStdSetCfgHandler
  8639 ;;		_USBSuspend
  8640 ;;		_USBWakeFromSuspend
  8641 ;;		_USBCtrlTrfSetupHandler
  8642 ;;		_USBCheckStdRequest
  8643 ;;		_USBStdFeatureReqHandler
  8644 ;; This function uses a non-reentrant model
  8645 ;;
  8646                           
  8647                           
  8648                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  8649  0B43                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  8650                           
  8651                           ;main.c: 89: switch( (int) event )
  8652                           
  8653                           ;incstack = 0
  8654                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [allreg]
  8655  0B43  2B53               	goto	l4344
  8656  0B44                     l4332:	
  8657                           ;main.c: 94: case EVENT_SOF:
  8658                           
  8659                           ;main.c: 92: break;
  8660                           
  8661                           ;main.c: 90: {
  8662                           ;main.c: 91: case EVENT_TRANSFER:
  8663                           
  8664                           
  8665                           ;main.c: 97: APP_LEDUpdateUSBStatus();
  8666  0B44  318B  23FD  318B   	fcall	_APP_LEDUpdateUSBStatus
  8667                           
  8668                           ;main.c: 98: APP_DeviceAudioMIDISOFHandler();
  8669  0B47  3188  20F4         	fcall	_APP_DeviceAudioMIDISOFHandler
  8670                           
  8671                           ;main.c: 99: break;
  8672  0B49  0008               	return
  8673  0B4A                     l4336:	
  8674                           ;main.c: 101: case EVENT_SUSPEND:
  8675                           
  8676                           
  8677                           ;main.c: 103: APP_LEDUpdateUSBStatus();
  8678  0B4A  318B  23FD         	fcall	_APP_LEDUpdateUSBStatus
  8679                           
  8680                           ;main.c: 104: break;
  8681  0B4C  0008               	return
  8682  0B4D                     l4338:	
  8683                           ;main.c: 106: case EVENT_RESUME:
  8684                           
  8685                           
  8686                           ;main.c: 108: APP_LEDUpdateUSBStatus();
  8687  0B4D  318B  23FD         	fcall	_APP_LEDUpdateUSBStatus
  8688                           
  8689                           ;main.c: 109: break;
  8690  0B4F  0008               	return
  8691  0B50                     l4340:	
  8692                           ;main.c: 111: case EVENT_CONFIGURED:
  8693                           
  8694                           
  8695                           ;main.c: 114: APP_DeviceAudioMIDIInitialize();
  8696  0B50  318A  22BA         	fcall	_APP_DeviceAudioMIDIInitialize
  8697                           
  8698                           ;main.c: 131: }
  8699                           
  8700                           ;main.c: 130: break;
  8701                           
  8702                           ;main.c: 129: default:
  8703                           
  8704                           ;main.c: 127: break;
  8705                           
  8706                           ;main.c: 126: case EVENT_TRANSFER_TERMINATED:
  8707                           
  8708                           ;main.c: 124: break;
  8709                           
  8710                           ;main.c: 123: case EVENT_BUS_ERROR:
  8711                           
  8712                           ;main.c: 121: break;
  8713                           
  8714                           ;main.c: 120: case EVENT_EP0_REQUEST:
  8715                           
  8716                           ;main.c: 118: break;
  8717                           
  8718                           ;main.c: 117: case EVENT_SET_DESCRIPTOR:
  8719                           
  8720                           ;main.c: 115: break;
  8721  0B52  0008               	return
  8722  0B53                     l4344:	
  8723                           
  8724                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  8725                           ; Switch size 1, requested type "space"
  8726                           ; Number of cases is 2, Range of values is 0 to 127
  8727                           ; switch strategies available:
  8728                           ; Name         Instructions Cycles
  8729                           ; simple_byte            7     4 (average)
  8730                           ; direct_byte          262     6 (fixed)
  8731                           ; jumptable            260     6 (fixed)
  8732                           ; rangetable           132     6 (fixed)
  8733                           ; spacedrange          261     8 (fixed)
  8734                           ; locatedrange         128     3 (fixed)
  8735                           ;	Chosen strategy is simple_byte
  8736  0B53  0020               	movlb	0	; select bank0
  8737  0B54  0856               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  8738  0B55  3A00               	xorlw	0	; case 0
  8739  0B56  1903               	skipnz
  8740  0B57  2B5C               	goto	l4770
  8741  0B58  3A7F               	xorlw	127	; case 127
  8742  0B59  1903               	skipnz
  8743  0B5A  2B76               	goto	l4772
  8744  0B5B  2B7B               	goto	l69
  8745  0B5C                     l4770:	
  8746                           
  8747                           ; Switch size 1, requested type "space"
  8748                           ; Number of cases is 8, Range of values is 1 to 117
  8749                           ; switch strategies available:
  8750                           ; Name         Instructions Cycles
  8751                           ; simple_byte           25    13 (average)
  8752                           ; direct_byte          243     9 (fixed)
  8753                           ; jumptable            263     9 (fixed)
  8754                           ;	Chosen strategy is simple_byte
  8755  0B5C  0855               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  8756  0B5D  3A01               	xorlw	1	; case 1
  8757  0B5E  1903               	skipnz
  8758  0B5F  2B50               	goto	l4340
  8759  0B60  3A03               	xorlw	3	; case 2
  8760  0B61  1903               	skipnz
  8761  0B62  2B7B               	goto	l69
  8762  0B63  3A01               	xorlw	1	; case 3
  8763  0B64  1903               	skipnz
  8764  0B65  2B7B               	goto	l69
  8765  0B66  3A06               	xorlw	6	; case 5
  8766  0B67  1903               	skipnz
  8767  0B68  2B7B               	goto	l69
  8768  0B69  3A77               	xorlw	119	; case 114
  8769  0B6A  1903               	skipnz
  8770  0B6B  2B7B               	goto	l69
  8771  0B6C  3A01               	xorlw	1	; case 115
  8772  0B6D  1903               	skipnz
  8773  0B6E  2B44               	goto	l4332
  8774  0B6F  3A07               	xorlw	7	; case 116
  8775  0B70  1903               	skipnz
  8776  0B71  2B4D               	goto	l4338
  8777  0B72  3A01               	xorlw	1	; case 117
  8778  0B73  1903               	skipnz
  8779  0B74  2B4A               	goto	l4336
  8780  0B75  2B7B               	goto	l69
  8781  0B76                     l4772:	
  8782                           
  8783                           ; Switch size 1, requested type "space"
  8784                           ; Number of cases is 1, Range of values is 255 to 255
  8785                           ; switch strategies available:
  8786                           ; Name         Instructions Cycles
  8787                           ; simple_byte            4     3 (average)
  8788                           ; direct_byte            7     5 (fixed)
  8789                           ; jumptable            263     9 (fixed)
  8790                           ;	Chosen strategy is simple_byte
  8791  0B76  0855               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  8792  0B77  3AFF               	xorlw	255	; case 255
  8793  0B78  1903               	skipnz
  8794  0B79  2B7B               	goto	l69
  8795  0B7A  2B7B               	goto	l69
  8796  0B7B                     l69:	
  8797                           ;main.c: 132: return 1;
  8798                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  8799                           
  8800  0B7B  0008               	return
  8801  0B7C                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  8802                           
  8803                           	psect	text36
  8804  0ABA                     __ptext36:	
  8805 ;; *************** function _APP_DeviceAudioMIDIInitialize *****************
  8806 ;; Defined at:
  8807 ;;		line 41 in file "../src/app_device_audio_midi.c"
  8808 ;; Parameters:    Size  Location     Type
  8809 ;;		None
  8810 ;; Auto vars:     Size  Location     Type
  8811 ;;		None
  8812 ;; Return value:  Size  Location     Type
  8813 ;;		None               void
  8814 ;; Registers used:
  8815 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8816 ;; Tracked objects:
  8817 ;;		On entry : 0/0
  8818 ;;		On exit  : 0/0
  8819 ;;		Unchanged: 0/0
  8820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8823 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8824 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8825 ;;Total ram usage:        2 bytes
  8826 ;; Hardware stack levels used:    1
  8827 ;; Hardware stack levels required when called:    3
  8828 ;; This function calls:
  8829 ;;		_USBEnableEndpoint
  8830 ;;		_USBTransferOnePacket
  8831 ;; This function is called by:
  8832 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8833 ;; This function uses a non-reentrant model
  8834 ;;
  8835                           
  8836                           
  8837                           ;psect for function _APP_DeviceAudioMIDIInitialize
  8838  0ABA                     _APP_DeviceAudioMIDIInitialize:	
  8839                           
  8840                           ;app_device_audio_midi.c: 42: USBTxHandle = (0);
  8841                           
  8842                           ;incstack = 0
  8843                           ; Regs used in _APP_DeviceAudioMIDIInitialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
  8844  0ABA  0021               	movlb	1	; select bank1
  8845  0ABB  01E3               	clrf	_USBTxHandle^(0+128)
  8846                           
  8847                           ;app_device_audio_midi.c: 43: USBRxHandle = (0);
  8848  0ABC  0022               	movlb	2	; select bank2
  8849  0ABD  01D7               	clrf	_USBRxHandle^(0+256)
  8850                           
  8851                           ;app_device_audio_midi.c: 44: pitch = 0x3C;
  8852  0ABE  303C               	movlw	60
  8853  0ABF  0020               	movlb	0	; select bank0
  8854  0AC0  00D3               	movwf	??_APP_DeviceAudioMIDIInitialize
  8855  0AC1  0853               	movf	??_APP_DeviceAudioMIDIInitialize,w
  8856  0AC2  0021               	movlb	1	; select bank1
  8857  0AC3  00E6               	movwf	_pitch^(0+128)
  8858                           
  8859                           ;app_device_audio_midi.c: 45: sentNoteOff = 1;
  8860  0AC4  0022               	movlb	2	; select bank2
  8861  0AC5  01DF               	clrf	_sentNoteOff^(0+256)
  8862  0AC6  0ADF               	incf	_sentNoteOff^(0+256),f
  8863                           
  8864                           ;app_device_audio_midi.c: 46: msCounter = 0;
  8865  0AC7  0021               	movlb	1	; select bank1
  8866  0AC8  01E5               	clrf	_msCounter^(0+128)
  8867                           
  8868                           ;app_device_audio_midi.c: 48: USBEnableEndpoint(1,0x04|0x02|0x10|0x08);
  8869  0AC9  301E               	movlw	30
  8870  0ACA  0020               	movlb	0	; select bank0
  8871  0ACB  00D3               	movwf	??_APP_DeviceAudioMIDIInitialize
  8872  0ACC  0853               	movf	??_APP_DeviceAudioMIDIInitialize,w
  8873  0ACD  00F8               	movwf	?_USBEnableEndpoint
  8874  0ACE  3001               	movlw	1
  8875  0ACF  318A  226D  318A   	fcall	_USBEnableEndpoint
  8876                           
  8877                           ;app_device_audio_midi.c: 50: USBRxHandle = USBTransferOnePacket(1,0,(uint8_t*)&Received
      +                          DataBuffer,64);
  8878  0AD2  01F1               	clrf	?_USBTransferOnePacket
  8879  0AD3  30A0               	movlw	160
  8880  0AD4  00F2               	movwf	?_USBTransferOnePacket+1
  8881  0AD5  3000               	movlw	0
  8882  0AD6  00F3               	movwf	?_USBTransferOnePacket+2
  8883  0AD7  3040               	movlw	64
  8884  0AD8  0020               	movlb	0	; select bank0
  8885  0AD9  00D3               	movwf	??_APP_DeviceAudioMIDIInitialize
  8886  0ADA  0853               	movf	??_APP_DeviceAudioMIDIInitialize,w
  8887  0ADB  00F4               	movwf	?_USBTransferOnePacket+3
  8888  0ADC  3001               	movlw	1
  8889  0ADD  3187  27AF         	fcall	_USBTransferOnePacket
  8890  0ADF  0020               	movlb	0	; select bank0
  8891  0AE0  00D4               	movwf	??_APP_DeviceAudioMIDIInitialize+1
  8892  0AE1  0854               	movf	??_APP_DeviceAudioMIDIInitialize+1,w
  8893  0AE2  0022               	movlb	2	; select bank2
  8894  0AE3  00D7               	movwf	_USBRxHandle^(0+256)
  8895  0AE4  0008               	return
  8896  0AE5                     __end_of_APP_DeviceAudioMIDIInitialize:	
  8897                           
  8898                           	psect	text37
  8899  07AF                     __ptext37:	
  8900 ;; *************** function _USBTransferOnePacket *****************
  8901 ;; Defined at:
  8902 ;;		line 1015 in file "../framework/usb/usb_device.c"
  8903 ;; Parameters:    Size  Location     Type
  8904 ;;  ep              1    wreg     unsigned char 
  8905 ;;  dir             1    1[COMMON] unsigned char 
  8906 ;;  data            2    2[COMMON] PTR unsigned char 
  8907 ;;		 -> midiData(4), ReceivedDataBuffer(64), 
  8908 ;;  len             1    4[COMMON] unsigned char 
  8909 ;; Auto vars:     Size  Location     Type
  8910 ;;  ep              1    7[COMMON] unsigned char 
  8911 ;;  handle          1    8[COMMON] PTR volatile struct __BD
  8912 ;;		 -> BDT(32), NULL(0), 
  8913 ;; Return value:  Size  Location     Type
  8914 ;;                  1    wreg      PTR void 
  8915 ;; Registers used:
  8916 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8917 ;; Tracked objects:
  8918 ;;		On entry : 0/0
  8919 ;;		On exit  : 0/0
  8920 ;;		Unchanged: 0/0
  8921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8923 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8924 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8925 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8926 ;;Total ram usage:        8 bytes
  8927 ;; Hardware stack levels used:    1
  8928 ;; Hardware stack levels required when called:    1
  8929 ;; This function calls:
  8930 ;;		Nothing
  8931 ;; This function is called by:
  8932 ;;		_APP_DeviceAudioMIDIInitialize
  8933 ;;		_APP_DeviceAudioMIDITasks
  8934 ;; This function uses a non-reentrant model
  8935 ;;
  8936                           
  8937                           
  8938                           ;psect for function _USBTransferOnePacket
  8939  07AF                     _USBTransferOnePacket:	
  8940                           
  8941                           ;incstack = 0
  8942                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  8943                           ;USBTransferOnePacket@ep stored from wreg
  8944  07AF  00F7               	movwf	USBTransferOnePacket@ep
  8945                           
  8946                           ;usb_device.c: 1016: volatile BDT_ENTRY* handle;
  8947                           ;usb_device.c: 1019: if(dir != 0)
  8948  07B0  0871               	movf	USBTransferOnePacket@dir,w
  8949  07B1  1903               	btfsc	3,2
  8950  07B2  2FB8               	goto	l3194
  8951                           
  8952                           ;usb_device.c: 1020: {
  8953                           ;usb_device.c: 1022: handle = pBDTEntryIn[ep];
  8954  07B3  0877               	movf	USBTransferOnePacket@ep,w
  8955  07B4  3E6B               	addlw	_pBDTEntryIn& (0+255)
  8956  07B5  0086               	movwf	6
  8957  07B6  0187               	clrf	7
  8958  07B7  2FBD               	goto	L13
  8959  07B8                     l3194:	
  8960                           ;usb_device.c: 1023: }
  8961                           
  8962                           
  8963                           ;usb_device.c: 1024: else
  8964                           ;usb_device.c: 1025: {
  8965                           ;usb_device.c: 1027: handle = pBDTEntryOut[ep];
  8966  07B8  0877               	movf	USBTransferOnePacket@ep,w
  8967  07B9  3E50               	addlw	_pBDTEntryOut& (0+255)
  8968  07BA  0086               	movwf	6
  8969  07BB  3001               	movlw	1	; select bank2/3
  8970  07BC  0087               	movwf	7
  8971  07BD                     L13:	
  8972  07BD  0801               	movf	1,w
  8973  07BE  00F5               	movwf	??_USBTransferOnePacket
  8974  07BF  0875               	movf	??_USBTransferOnePacket,w
  8975  07C0  00F8               	movwf	USBTransferOnePacket@handle
  8976                           
  8977                           ;usb_device.c: 1028: }
  8978                           ;usb_device.c: 1032: if(handle == 0)
  8979  07C1  08F8               	movf	USBTransferOnePacket@handle,f
  8980  07C2  1D03               	skipz
  8981  07C3  2FC6               	goto	l3202
  8982                           
  8983                           ;usb_device.c: 1033: {
  8984                           ;usb_device.c: 1034: return 0;
  8985  07C4  3000               	movlw	0
  8986  07C5  0008               	return
  8987  07C6                     l3202:	
  8988                           
  8989                           ;usb_device.c: 1035: }
  8990                           ;usb_device.c: 1048: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  8991  07C6  30FF               	movlw	255
  8992  07C7  0572               	andwf	USBTransferOnePacket@data,w
  8993  07C8  00F5               	movwf	??_USBTransferOnePacket
  8994  07C9  307F               	movlw	127
  8995  07CA  0573               	andwf	USBTransferOnePacket@data+1,w
  8996  07CB  00F6               	movwf	??_USBTransferOnePacket+1
  8997  07CC  0878               	movf	USBTransferOnePacket@handle,w
  8998  07CD  3E02               	addlw	2
  8999  07CE  0086               	movwf	6
  9000  07CF  0187               	clrf	7
  9001  07D0  0875               	movf	??_USBTransferOnePacket,w
  9002  07D1  3FC0               	movwi [0]fsr1
  9003  07D2  0876               	movf	??_USBTransferOnePacket+1,w
  9004  07D3  3FC1               	movwi [1]fsr1
  9005                           
  9006                           ;usb_device.c: 1049: handle->CNT = len;
  9007  07D4  0874               	movf	USBTransferOnePacket@len,w
  9008  07D5  00F5               	movwf	??_USBTransferOnePacket
  9009  07D6  0A78               	incf	USBTransferOnePacket@handle,w
  9010  07D7  0086               	movwf	6
  9011  07D8  0187               	clrf	7
  9012  07D9  0875               	movf	??_USBTransferOnePacket,w
  9013  07DA  0081               	movwf	1
  9014                           
  9015                           ;usb_device.c: 1050: handle->STAT.Val &= 0x40;
  9016  07DB  3040               	movlw	64
  9017  07DC  00F5               	movwf	??_USBTransferOnePacket
  9018  07DD  0878               	movf	USBTransferOnePacket@handle,w
  9019  07DE  0086               	movwf	6
  9020  07DF  0187               	clrf	7
  9021  07E0  0875               	movf	??_USBTransferOnePacket,w
  9022  07E1  0581               	andwf	1,f
  9023                           
  9024                           ;usb_device.c: 1051: handle->STAT.Val |= (0x08 & 0x08);
  9025  07E2  0878               	movf	USBTransferOnePacket@handle,w
  9026  07E3  0086               	movwf	6
  9027  07E4  0187               	clrf	7
  9028  07E5  1581               	bsf	1,3
  9029                           
  9030                           ;usb_device.c: 1052: handle->STAT.Val |= 0x80;
  9031  07E6  0878               	movf	USBTransferOnePacket@handle,w
  9032  07E7  0086               	movwf	6
  9033  07E8  0187               	clrf	7
  9034  07E9  1781               	bsf	1,7
  9035                           
  9036                           ;usb_device.c: 1055: if(dir != 0)
  9037  07EA  0871               	movf	USBTransferOnePacket@dir,w
  9038  07EB  1903               	btfsc	3,2
  9039  07EC  2FF4               	goto	l3214
  9040                           
  9041                           ;usb_device.c: 1056: {
  9042                           ;usb_device.c: 1058: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  9043  07ED  3004               	movlw	4
  9044  07EE  00F5               	movwf	??_USBTransferOnePacket
  9045  07EF  0877               	movf	USBTransferOnePacket@ep,w
  9046  07F0  3E6B               	addlw	_pBDTEntryIn& (0+255)
  9047  07F1  0086               	movwf	6
  9048  07F2  0187               	clrf	7
  9049  07F3  2FFB               	goto	L14
  9050  07F4                     l3214:	
  9051                           ;usb_device.c: 1059: }
  9052                           
  9053                           
  9054                           ;usb_device.c: 1060: else
  9055                           ;usb_device.c: 1061: {
  9056                           ;usb_device.c: 1063: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  9057  07F4  3004               	movlw	4
  9058  07F5  00F5               	movwf	??_USBTransferOnePacket
  9059  07F6  0877               	movf	USBTransferOnePacket@ep,w
  9060  07F7  3E50               	addlw	_pBDTEntryOut& (0+255)
  9061  07F8  0086               	movwf	6
  9062  07F9  3001               	movlw	1	; select bank2/3
  9063  07FA  0087               	movwf	7
  9064  07FB                     L14:	
  9065  07FB  0875               	movf	??_USBTransferOnePacket,w
  9066  07FC  0681               	xorwf	1,f
  9067                           
  9068                           ;usb_device.c: 1064: }
  9069                           ;usb_device.c: 1065: return (void*)handle;
  9070  07FD  0878               	movf	USBTransferOnePacket@handle,w
  9071  07FE  0008               	return
  9072  07FF                     __end_of_USBTransferOnePacket:	
  9073                           
  9074                           	psect	text38
  9075  0A6D                     __ptext38:	
  9076 ;; *************** function _USBEnableEndpoint *****************
  9077 ;; Defined at:
  9078 ;;		line 898 in file "../framework/usb/usb_device.c"
  9079 ;; Parameters:    Size  Location     Type
  9080 ;;  ep              1    wreg     unsigned char 
  9081 ;;  options         1    8[COMMON] unsigned char 
  9082 ;; Auto vars:     Size  Location     Type
  9083 ;;  ep              1    2[BANK0 ] unsigned char 
  9084 ;;  p               2    0[BANK0 ] PTR unsigned char 
  9085 ;;		 -> UEP0(1), 
  9086 ;; Return value:  Size  Location     Type
  9087 ;;		None               void
  9088 ;; Registers used:
  9089 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9090 ;; Tracked objects:
  9091 ;;		On entry : 0/0
  9092 ;;		On exit  : 0/0
  9093 ;;		Unchanged: 0/0
  9094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9095 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9096 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9097 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9098 ;;      Totals:         3       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9099 ;;Total ram usage:        6 bytes
  9100 ;; Hardware stack levels used:    1
  9101 ;; Hardware stack levels required when called:    2
  9102 ;; This function calls:
  9103 ;;		_USBConfigureEndpoint
  9104 ;; This function is called by:
  9105 ;;		_APP_DeviceAudioMIDIInitialize
  9106 ;; This function uses a non-reentrant model
  9107 ;;
  9108                           
  9109                           
  9110                           ;psect for function _USBEnableEndpoint
  9111  0A6D                     _USBEnableEndpoint:	
  9112                           
  9113                           ;incstack = 0
  9114                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9115                           ;USBEnableEndpoint@ep stored from wreg
  9116  0A6D  0020               	movlb	0	; select bank0
  9117  0A6E  00D2               	movwf	USBEnableEndpoint@ep
  9118                           
  9119                           ;usb_device.c: 899: unsigned char* p;
  9120                           ;usb_device.c: 903: if(options & 0x04)
  9121  0A6F  1D78               	btfss	USBEnableEndpoint@options,2
  9122  0A70  2A76               	goto	l3182
  9123                           
  9124                           ;usb_device.c: 904: {
  9125                           ;usb_device.c: 905: USBConfigureEndpoint(ep, 0);
  9126  0A71  01F1               	clrf	?_USBConfigureEndpoint
  9127  0A72  0852               	movf	USBEnableEndpoint@ep,w
  9128  0A73  318B  237C  318A   	fcall	_USBConfigureEndpoint
  9129  0A76                     l3182:	
  9130                           
  9131                           ;usb_device.c: 906: }
  9132                           ;usb_device.c: 907: if(options & 0x02)
  9133  0A76  1CF8               	btfss	USBEnableEndpoint@options,1
  9134  0A77  2A7E               	goto	l3186
  9135                           
  9136                           ;usb_device.c: 908: {
  9137                           ;usb_device.c: 909: USBConfigureEndpoint(ep, 1);
  9138  0A78  01F1               	clrf	?_USBConfigureEndpoint
  9139  0A79  0AF1               	incf	?_USBConfigureEndpoint,f
  9140  0A7A  0020               	movlb	0	; select bank0
  9141  0A7B  0852               	movf	USBEnableEndpoint@ep,w
  9142  0A7C  318B  237C         	fcall	_USBConfigureEndpoint
  9143  0A7E                     l3186:	
  9144                           
  9145                           ;usb_device.c: 910: }
  9146                           ;usb_device.c: 918: p = (unsigned char*)(&UEP0+ep);
  9147  0A7E  0020               	movlb	0	; select bank0
  9148  0A7F  0852               	movf	USBEnableEndpoint@ep,w
  9149  0A80  3E98               	addlw	152
  9150  0A81  00F9               	movwf	??_USBEnableEndpoint
  9151  0A82  01FA               	clrf	??_USBEnableEndpoint+1
  9152  0A83  300E               	movlw	14
  9153  0A84  3DFA               	addwfc	??_USBEnableEndpoint+1,f
  9154  0A85  0879               	movf	??_USBEnableEndpoint,w
  9155  0A86  00D0               	movwf	USBEnableEndpoint@p
  9156  0A87  087A               	movf	??_USBEnableEndpoint+1,w
  9157  0A88  00D1               	movwf	USBEnableEndpoint@p+1
  9158                           
  9159                           ;usb_device.c: 920: *p = options;
  9160  0A89  0878               	movf	USBEnableEndpoint@options,w
  9161  0A8A  00F9               	movwf	??_USBEnableEndpoint
  9162  0A8B  0850               	movf	USBEnableEndpoint@p,w
  9163  0A8C  0086               	movwf	6
  9164  0A8D  0851               	movf	USBEnableEndpoint@p+1,w
  9165  0A8E  0087               	movwf	7
  9166  0A8F  0879               	movf	??_USBEnableEndpoint,w
  9167  0A90  0081               	movwf	1
  9168  0A91  0008               	return
  9169  0A92                     __end_of_USBEnableEndpoint:	
  9170                           
  9171                           	psect	text39
  9172  0B7C                     __ptext39:	
  9173 ;; *************** function _USBConfigureEndpoint *****************
  9174 ;; Defined at:
  9175 ;;		line 1563 in file "../framework/usb/usb_device.c"
  9176 ;; Parameters:    Size  Location     Type
  9177 ;;  EPNum           1    wreg     unsigned char 
  9178 ;;  direction       1    1[COMMON] unsigned char 
  9179 ;; Auto vars:     Size  Location     Type
  9180 ;;  EPNum           1    6[COMMON] unsigned char 
  9181 ;;  handle          1    7[COMMON] PTR volatile struct __BD
  9182 ;;		 -> BDT(32), 
  9183 ;; Return value:  Size  Location     Type
  9184 ;;		None               void
  9185 ;; Registers used:
  9186 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9187 ;; Tracked objects:
  9188 ;;		On entry : 0/0
  9189 ;;		On exit  : 0/0
  9190 ;;		Unchanged: 0/0
  9191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9192 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9193 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9194 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9195 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9196 ;;Total ram usage:        7 bytes
  9197 ;; Hardware stack levels used:    1
  9198 ;; Hardware stack levels required when called:    1
  9199 ;; This function calls:
  9200 ;;		Nothing
  9201 ;; This function is called by:
  9202 ;;		_USBEnableEndpoint
  9203 ;; This function uses a non-reentrant model
  9204 ;;
  9205                           
  9206                           
  9207                           ;psect for function _USBConfigureEndpoint
  9208  0B7C                     _USBConfigureEndpoint:	
  9209                           
  9210                           ;incstack = 0
  9211                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  9212                           ;USBConfigureEndpoint@EPNum stored from wreg
  9213  0B7C  00F6               	movwf	USBConfigureEndpoint@EPNum
  9214                           
  9215                           ;usb_device.c: 1564: volatile BDT_ENTRY* handle;
  9216                           ;usb_device.c: 1568: handle = (volatile BDT_ENTRY*)&BDT[0];
  9217  0B7D  3020               	movlw	32
  9218  0B7E  00F2               	movwf	??_USBConfigureEndpoint
  9219  0B7F  0872               	movf	??_USBConfigureEndpoint,w
  9220  0B80  00F7               	movwf	USBConfigureEndpoint@handle
  9221                           
  9222                           ;usb_device.c: 1569: handle += (4*EPNum+2*direction+0u);
  9223  0B81  0871               	movf	USBConfigureEndpoint@direction,w
  9224  0B82  00F2               	movwf	??_USBConfigureEndpoint
  9225  0B83  3001               	movlw	1
  9226  0B84                     u2795:	
  9227  0B84  35F2               	lslf	??_USBConfigureEndpoint,f
  9228  0B85  0B89               	decfsz	9,f
  9229  0B86  2B84               	goto	u2795
  9230  0B87  0876               	movf	USBConfigureEndpoint@EPNum,w
  9231  0B88  00F3               	movwf	??_USBConfigureEndpoint+1
  9232  0B89  3001               	movlw	1
  9233  0B8A                     u2805:	
  9234  0B8A  35F3               	lslf	??_USBConfigureEndpoint+1,f
  9235  0B8B  3EFF               	addlw	-1
  9236  0B8C  1D03               	skipz
  9237  0B8D  2B8A               	goto	u2805
  9238  0B8E  3573               	lslf	??_USBConfigureEndpoint+1,w
  9239  0B8F  0772               	addwf	??_USBConfigureEndpoint,w
  9240  0B90  00F4               	movwf	??_USBConfigureEndpoint+2
  9241  0B91  3001               	movlw	1
  9242  0B92                     u2815:	
  9243  0B92  35F4               	lslf	??_USBConfigureEndpoint+2,f
  9244  0B93  3EFF               	addlw	-1
  9245  0B94  1D03               	skipz
  9246  0B95  2B92               	goto	u2815
  9247  0B96  3574               	lslf	??_USBConfigureEndpoint+2,w
  9248  0B97  00F5               	movwf	??_USBConfigureEndpoint+3
  9249  0B98  0875               	movf	??_USBConfigureEndpoint+3,w
  9250  0B99  07F7               	addwf	USBConfigureEndpoint@handle,f
  9251                           
  9252                           ;usb_device.c: 1571: handle->STAT.UOWN = 0;
  9253  0B9A  0877               	movf	USBConfigureEndpoint@handle,w
  9254  0B9B  0086               	movwf	6
  9255  0B9C  0187               	clrf	7
  9256  0B9D  1381               	bcf	1,7
  9257                           
  9258                           ;usb_device.c: 1576: if(direction == 0)
  9259  0B9E  08F1               	movf	USBConfigureEndpoint@direction,f
  9260  0B9F  1D03               	skipz
  9261  0BA0  2BA9               	goto	l3574
  9262                           
  9263                           ;usb_device.c: 1577: {
  9264                           ;usb_device.c: 1578: pBDTEntryOut[EPNum] = handle;
  9265  0BA1  0877               	movf	USBConfigureEndpoint@handle,w
  9266  0BA2  00F2               	movwf	??_USBConfigureEndpoint
  9267  0BA3  0876               	movf	USBConfigureEndpoint@EPNum,w
  9268  0BA4  3E50               	addlw	_pBDTEntryOut& (0+255)
  9269  0BA5  0086               	movwf	6
  9270  0BA6  3001               	movlw	1	; select bank2/3
  9271  0BA7  0087               	movwf	7
  9272  0BA8  2BAF               	goto	L15
  9273  0BA9                     l3574:	
  9274                           ;usb_device.c: 1579: }
  9275                           
  9276                           
  9277                           ;usb_device.c: 1580: else
  9278                           ;usb_device.c: 1581: {
  9279                           ;usb_device.c: 1582: pBDTEntryIn[EPNum] = handle;
  9280  0BA9  0877               	movf	USBConfigureEndpoint@handle,w
  9281  0BAA  00F2               	movwf	??_USBConfigureEndpoint
  9282  0BAB  0876               	movf	USBConfigureEndpoint@EPNum,w
  9283  0BAC  3E6B               	addlw	_pBDTEntryIn& (0+255)
  9284  0BAD  0086               	movwf	6
  9285  0BAE  0187               	clrf	7
  9286  0BAF                     L15:	
  9287  0BAF  0872               	movf	??_USBConfigureEndpoint,w
  9288  0BB0  0081               	movwf	1
  9289                           
  9290                           ;usb_device.c: 1583: }
  9291                           ;usb_device.c: 1586: handle->STAT.DTS = 0;
  9292  0BB1  0877               	movf	USBConfigureEndpoint@handle,w
  9293  0BB2  0086               	movwf	6
  9294  0BB3  0187               	clrf	7
  9295  0BB4  1301               	bcf	1,6
  9296                           
  9297                           ;usb_device.c: 1587: (handle+1)->STAT.DTS = 1;
  9298  0BB5  0877               	movf	USBConfigureEndpoint@handle,w
  9299  0BB6  3E04               	addlw	4
  9300  0BB7  0086               	movwf	6
  9301  0BB8  0187               	clrf	7
  9302  0BB9  1701               	bsf	1,6
  9303  0BBA  0008               	return
  9304  0BBB                     __end_of_USBConfigureEndpoint:	
  9305                           
  9306                           	psect	text40
  9307  08F4                     __ptext40:	
  9308 ;; *************** function _APP_DeviceAudioMIDISOFHandler *****************
  9309 ;; Defined at:
  9310 ;;		line 53 in file "../src/app_device_audio_midi.c"
  9311 ;; Parameters:    Size  Location     Type
  9312 ;;		None
  9313 ;; Auto vars:     Size  Location     Type
  9314 ;;		None
  9315 ;; Return value:  Size  Location     Type
  9316 ;;		None               void
  9317 ;; Registers used:
  9318 ;;		wreg, status,2, status,0
  9319 ;; Tracked objects:
  9320 ;;		On entry : 0/0
  9321 ;;		On exit  : 0/0
  9322 ;;		Unchanged: 0/0
  9323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9328 ;;Total ram usage:        0 bytes
  9329 ;; Hardware stack levels used:    1
  9330 ;; Hardware stack levels required when called:    1
  9331 ;; This function calls:
  9332 ;;		Nothing
  9333 ;; This function is called by:
  9334 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9335 ;; This function uses a non-reentrant model
  9336 ;;
  9337                           
  9338                           
  9339                           ;psect for function _APP_DeviceAudioMIDISOFHandler
  9340  08F4                     _APP_DeviceAudioMIDISOFHandler:	
  9341                           
  9342                           ;app_device_audio_midi.c: 54: if(msCounter != 0) msCounter--;
  9343                           
  9344                           ;incstack = 0
  9345                           ; Regs used in _APP_DeviceAudioMIDISOFHandler: [wreg+status,2+status,0]
  9346  08F4  0021               	movlb	1	; select bank1
  9347  08F5  0865               	movf	_msCounter^(0+128),w
  9348  08F6  1903               	btfsc	3,2
  9349  08F7  0008               	return
  9350  08F8  3001               	movlw	1
  9351  08F9  02E5               	subwf	_msCounter^(0+128),f
  9352  08FA  0008               	return
  9353  08FB                     __end_of_APP_DeviceAudioMIDISOFHandler:	
  9354                           
  9355                           	psect	text41
  9356  0BFD                     __ptext41:	
  9357 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  9358 ;; Defined at:
  9359 ;;		line 24 in file "../src/app_led_usb_status.c"
  9360 ;; Parameters:    Size  Location     Type
  9361 ;;		None
  9362 ;; Auto vars:     Size  Location     Type
  9363 ;;		None
  9364 ;; Return value:  Size  Location     Type
  9365 ;;		None               void
  9366 ;; Registers used:
  9367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9368 ;; Tracked objects:
  9369 ;;		On entry : 0/0
  9370 ;;		On exit  : 0/0
  9371 ;;		Unchanged: 0/0
  9372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9377 ;;Total ram usage:        0 bytes
  9378 ;; Hardware stack levels used:    1
  9379 ;; Hardware stack levels required when called:    2
  9380 ;; This function calls:
  9381 ;;		_LED_Off
  9382 ;;		_LED_On
  9383 ;; This function is called by:
  9384 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9385 ;; This function uses a non-reentrant model
  9386 ;;
  9387                           
  9388                           
  9389                           ;psect for function _APP_LEDUpdateUSBStatus
  9390  0BFD                     _APP_LEDUpdateUSBStatus:	
  9391                           
  9392                           ;app_led_usb_status.c: 25: static uint16_t ledCount = 0;
  9393                           ;app_led_usb_status.c: 27: if(UCONbits.SUSPND == 1)
  9394                           
  9395                           ;incstack = 0
  9396                           ; Regs used in _APP_LEDUpdateUSBStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9397  0BFD  003D               	movlb	29	; select bank29
  9398  0BFE  1C8E               	btfss	14,1	;volatile
  9399  0BFF  2C40               	goto	l2810
  9400                           
  9401                           ;app_led_usb_status.c: 28: {
  9402                           ;app_led_usb_status.c: 29: LED_Off(0);
  9403  0C00  3000               	movlw	0
  9404  0C01  3189  21A7         	fcall	_LED_Off
  9405                           
  9406                           ;app_led_usb_status.c: 30: return;
  9407  0C03  0008               	return
  9408  0C04                     l2784:	
  9409                           ;app_led_usb_status.c: 34: {
  9410                           ;app_led_usb_status.c: 35: case CONFIGURED_STATE:
  9411                           
  9412                           ;app_led_usb_status.c: 31: }
  9413                           ;app_led_usb_status.c: 33: switch(USBDeviceState)
  9414                           
  9415                           
  9416                           ;app_led_usb_status.c: 38: if(ledCount == 1)
  9417  0C04  3001               	movlw	1
  9418  0C05  0021               	movlb	1	; select bank1
  9419  0C06  0660               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  9420  0C07  0461               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  9421  0C08  1D03               	skipz
  9422  0C09  2C0F               	goto	l2788
  9423                           
  9424                           ;app_led_usb_status.c: 39: {
  9425                           ;app_led_usb_status.c: 40: LED_On(0);
  9426  0C0A  3000               	movlw	0
  9427  0C0B  3189  21C0  318B   	fcall	_LED_On
  9428                           
  9429                           ;app_led_usb_status.c: 41: }
  9430  0C0E  2C46               	goto	l2812
  9431  0C0F                     l2788:	
  9432                           
  9433                           ;app_led_usb_status.c: 42: else if(ledCount == 75)
  9434  0C0F  304B               	movlw	75
  9435  0C10  0021               	movlb	1	; select bank1
  9436  0C11  0660               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  9437  0C12  0461               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  9438  0C13  1D03               	skipz
  9439  0C14  2C1A               	goto	l2792
  9440                           
  9441                           ;app_led_usb_status.c: 43: {
  9442                           ;app_led_usb_status.c: 44: LED_Off(0);
  9443  0C15  3000               	movlw	0
  9444  0C16  3189  21A7  318B   	fcall	_LED_Off
  9445                           
  9446                           ;app_led_usb_status.c: 45: }
  9447  0C19  2C46               	goto	l2812
  9448  0C1A                     l2792:	
  9449                           
  9450                           ;app_led_usb_status.c: 46: else if(ledCount > 150)
  9451  0C1A  3000               	movlw	0
  9452  0C1B  0021               	movlb	1	; select bank1
  9453  0C1C  0261               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  9454  0C1D  3097               	movlw	151
  9455  0C1E  2C39               	goto	L16
  9456  0C1F                     l2796:	
  9457                           ;app_led_usb_status.c: 52: default:
  9458                           
  9459                           ;app_led_usb_status.c: 49: }
  9460                           ;app_led_usb_status.c: 50: break;
  9461                           
  9462                           ;app_led_usb_status.c: 47: {
  9463                           ;app_led_usb_status.c: 48: ledCount = 0;
  9464                           
  9465                           
  9466                           ;app_led_usb_status.c: 55: if(ledCount == 1)
  9467  0C1F  3001               	movlw	1
  9468  0C20  0021               	movlb	1	; select bank1
  9469  0C21  0660               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  9470  0C22  0461               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  9471  0C23  1D03               	skipz
  9472  0C24  2C2A               	goto	l2800
  9473                           
  9474                           ;app_led_usb_status.c: 56: {
  9475                           ;app_led_usb_status.c: 57: LED_On(0);
  9476  0C25  3000               	movlw	0
  9477  0C26  3189  21C0  318B   	fcall	_LED_On
  9478                           
  9479                           ;app_led_usb_status.c: 58: }
  9480  0C29  2C46               	goto	l2812
  9481  0C2A                     l2800:	
  9482                           
  9483                           ;app_led_usb_status.c: 59: else if(ledCount == 50)
  9484  0C2A  3032               	movlw	50
  9485  0C2B  0021               	movlb	1	; select bank1
  9486  0C2C  0660               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  9487  0C2D  0461               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  9488  0C2E  1D03               	skipz
  9489  0C2F  2C35               	goto	l2804
  9490                           
  9491                           ;app_led_usb_status.c: 60: {
  9492                           ;app_led_usb_status.c: 61: LED_Off(0);
  9493  0C30  3000               	movlw	0
  9494  0C31  3189  21A7  318B   	fcall	_LED_Off
  9495                           
  9496                           ;app_led_usb_status.c: 62: }
  9497  0C34  2C46               	goto	l2812
  9498  0C35                     l2804:	
  9499                           
  9500                           ;app_led_usb_status.c: 63: else if(ledCount > 950)
  9501  0C35  3003               	movlw	3
  9502  0C36  0021               	movlb	1	; select bank1
  9503  0C37  0261               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  9504  0C38  30B7               	movlw	183
  9505  0C39                     L16:	
  9506  0C39  1903               	skipnz
  9507  0C3A  0260               	subwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  9508  0C3B  1C03               	skipc
  9509  0C3C  2C46               	goto	l2812
  9510                           
  9511                           ;app_led_usb_status.c: 64: {
  9512                           ;app_led_usb_status.c: 65: ledCount = 0;
  9513  0C3D  01E0               	clrf	APP_LEDUpdateUSBStatus@ledCount^(0+128)
  9514  0C3E  01E1               	clrf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128)
  9515                           
  9516                           ;app_led_usb_status.c: 68: }
  9517                           
  9518                           ;app_led_usb_status.c: 66: }
  9519                           ;app_led_usb_status.c: 67: break;
  9520  0C3F  2C46               	goto	l2812
  9521  0C40                     l2810:	
  9522  0C40  0020               	movlb	0	; select bank0
  9523  0C41  086D               	movf	_USBDeviceState,w
  9524                           
  9525                           ; Switch size 1, requested type "space"
  9526                           ; Number of cases is 1, Range of values is 32 to 32
  9527                           ; switch strategies available:
  9528                           ; Name         Instructions Cycles
  9529                           ; simple_byte            4     3 (average)
  9530                           ; direct_byte           11     9 (fixed)
  9531                           ; jumptable            263     9 (fixed)
  9532                           ;	Chosen strategy is simple_byte
  9533  0C42  3A20               	xorlw	32	; case 32
  9534  0C43  1903               	skipnz
  9535  0C44  2C04               	goto	l2784
  9536  0C45  2C1F               	goto	l2796
  9537  0C46                     l2812:	
  9538                           
  9539                           ;app_led_usb_status.c: 71: ledCount++;
  9540  0C46  3001               	movlw	1
  9541  0C47  0021               	movlb	1	; select bank1
  9542  0C48  07E0               	addwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),f
  9543  0C49  3000               	movlw	0
  9544  0C4A  3DE1               	addwfc	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),f
  9545  0C4B  0008               	return
  9546  0C4C                     __end_of_APP_LEDUpdateUSBStatus:	
  9547                           
  9548                           	psect	text42
  9549  09C0                     __ptext42:	
  9550 ;; *************** function _LED_On *****************
  9551 ;; Defined at:
  9552 ;;		line 60 in file "../bsp/pic16f1459/leds.c"
  9553 ;; Parameters:    Size  Location     Type
  9554 ;;  led             1    wreg     enum E2
  9555 ;; Auto vars:     Size  Location     Type
  9556 ;;  led             1    1[COMMON] enum E2
  9557 ;; Return value:  Size  Location     Type
  9558 ;;		None               void
  9559 ;; Registers used:
  9560 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9561 ;; Tracked objects:
  9562 ;;		On entry : 0/0
  9563 ;;		On exit  : 0/0
  9564 ;;		Unchanged: 0/0
  9565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9567 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9569 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9570 ;;Total ram usage:        1 bytes
  9571 ;; Hardware stack levels used:    1
  9572 ;; Hardware stack levels required when called:    1
  9573 ;; This function calls:
  9574 ;;		Nothing
  9575 ;; This function is called by:
  9576 ;;		_APP_LEDUpdateUSBStatus
  9577 ;;		_process_level
  9578 ;; This function uses a non-reentrant model
  9579 ;;
  9580                           
  9581                           
  9582                           ;psect for function _LED_On
  9583  09C0                     _LED_On:	
  9584                           
  9585                           ;incstack = 0
  9586                           ; Regs used in _LED_On: [wreg-fsr0h+status,2+status,0]
  9587                           ;LED_On@led stored from wreg
  9588  09C0  00F1               	movwf	LED_On@led
  9589                           
  9590                           ;leds.c: 61: switch(led)
  9591  09C1  29CE               	goto	l2828
  9592  09C2                     l364:	
  9593                           ;leds.c: 62: {
  9594                           ;leds.c: 63: case LED_D1:
  9595                           
  9596                           
  9597                           ;leds.c: 64: LATCbits.LATC0 = 1;
  9598  09C2  0022               	movlb	2	; select bank2
  9599  09C3  140E               	bsf	14,0	;volatile
  9600                           
  9601                           ;leds.c: 65: break;
  9602  09C4  0008               	return
  9603  09C5                     l366:	
  9604                           ;leds.c: 67: case LED_D2:
  9605                           
  9606                           
  9607                           ;leds.c: 68: LATCbits.LATC1 = 1;
  9608  09C5  0022               	movlb	2	; select bank2
  9609  09C6  148E               	bsf	14,1	;volatile
  9610                           
  9611                           ;leds.c: 69: break;
  9612  09C7  0008               	return
  9613  09C8                     l367:	
  9614                           ;leds.c: 71: case LED_D3:
  9615                           
  9616                           
  9617                           ;leds.c: 72: LATCbits.LATC2 = 1;
  9618  09C8  0022               	movlb	2	; select bank2
  9619  09C9  150E               	bsf	14,2	;volatile
  9620                           
  9621                           ;leds.c: 73: break;
  9622  09CA  0008               	return
  9623  09CB                     l368:	
  9624                           ;leds.c: 75: case LED_D4:
  9625                           
  9626                           
  9627                           ;leds.c: 76: LATCbits.LATC3 = 1;
  9628  09CB  0022               	movlb	2	; select bank2
  9629  09CC  158E               	bsf	14,3	;volatile
  9630                           
  9631                           ;leds.c: 81: }
  9632                           
  9633                           ;leds.c: 80: break;
  9634                           
  9635                           ;leds.c: 79: case LED_NONE:
  9636                           
  9637                           ;leds.c: 77: break;
  9638  09CD  0008               	return
  9639  09CE                     l2828:	
  9640  09CE  0871               	movf	LED_On@led,w
  9641                           
  9642                           ; Switch size 1, requested type "space"
  9643                           ; Number of cases is 5, Range of values is 0 to 4
  9644                           ; switch strategies available:
  9645                           ; Name         Instructions Cycles
  9646                           ; direct_byte           16     6 (fixed)
  9647                           ; simple_byte           16     9 (average)
  9648                           ; jumptable            260     6 (fixed)
  9649                           ; rangetable             9     4 (fixed)
  9650                           ; spacedrange           15     6 (fixed)
  9651                           ; locatedrange           5     3 (fixed)
  9652                           ;	Chosen strategy is direct_byte
  9653  09CF  0084               	movwf	4
  9654  09D0  3005               	movlw	5
  9655  09D1  0204               	subwf	4,w
  9656  09D2  1803               	skipnc
  9657  09D3  0008               	return
  9658  09D4  3188               	movlp	high S4774
  9659  09D5  3504               	lslf	4,w
  9660  09D6  3E26               	addlw	low S4774
  9661  09D7  0082               	movwf	2
  9662  09D8                     l370:	
  9663  09D8  0008               	return
  9664  09D9                     __end_of_LED_On:	
  9665                           
  9666                           	psect	swtext3
  9667  0826                     __pswtext3:	
  9668  0826                     S4774:	
  9669  0826  3189  29D8         	ljmp	l370
  9670  0828  3189  29C2         	ljmp	l364
  9671  082A  3189  29C5         	ljmp	l366
  9672  082C  3189  29C8         	ljmp	l367
  9673  082E  3189  29CB         	ljmp	l368
  9674                           
  9675                           	psect	text43
  9676  09A7                     __ptext43:	
  9677 ;; *************** function _LED_Off *****************
  9678 ;; Defined at:
  9679 ;;		line 101 in file "../bsp/pic16f1459/leds.c"
  9680 ;; Parameters:    Size  Location     Type
  9681 ;;  led             1    wreg     enum E2
  9682 ;; Auto vars:     Size  Location     Type
  9683 ;;  led             1    1[COMMON] enum E2
  9684 ;; Return value:  Size  Location     Type
  9685 ;;		None               void
  9686 ;; Registers used:
  9687 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9688 ;; Tracked objects:
  9689 ;;		On entry : 0/0
  9690 ;;		On exit  : 0/0
  9691 ;;		Unchanged: 0/0
  9692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9696 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9697 ;;Total ram usage:        1 bytes
  9698 ;; Hardware stack levels used:    1
  9699 ;; Hardware stack levels required when called:    1
  9700 ;; This function calls:
  9701 ;;		Nothing
  9702 ;; This function is called by:
  9703 ;;		_APP_LEDUpdateUSBStatus
  9704 ;;		_process_level
  9705 ;; This function uses a non-reentrant model
  9706 ;;
  9707                           
  9708                           
  9709                           ;psect for function _LED_Off
  9710  09A7                     _LED_Off:	
  9711                           
  9712                           ;incstack = 0
  9713                           ; Regs used in _LED_Off: [wreg-fsr0h+status,2+status,0]
  9714                           ;LED_Off@led stored from wreg
  9715  09A7  00F1               	movwf	LED_Off@led
  9716                           
  9717                           ;leds.c: 102: switch(led)
  9718  09A8  29B5               	goto	l2818
  9719  09A9                     l374:	
  9720                           ;leds.c: 103: {
  9721                           ;leds.c: 104: case LED_D1:
  9722                           
  9723                           
  9724                           ;leds.c: 105: LATCbits.LATC0 = 0;
  9725  09A9  0022               	movlb	2	; select bank2
  9726  09AA  100E               	bcf	14,0	;volatile
  9727                           
  9728                           ;leds.c: 106: break;
  9729  09AB  0008               	return
  9730  09AC                     l376:	
  9731                           ;leds.c: 108: case LED_D2:
  9732                           
  9733                           
  9734                           ;leds.c: 109: LATCbits.LATC1 = 0;
  9735  09AC  0022               	movlb	2	; select bank2
  9736  09AD  108E               	bcf	14,1	;volatile
  9737                           
  9738                           ;leds.c: 110: break;
  9739  09AE  0008               	return
  9740  09AF                     l377:	
  9741                           ;leds.c: 112: case LED_D3:
  9742                           
  9743                           
  9744                           ;leds.c: 113: LATCbits.LATC2 = 0;
  9745  09AF  0022               	movlb	2	; select bank2
  9746  09B0  110E               	bcf	14,2	;volatile
  9747                           
  9748                           ;leds.c: 114: break;
  9749  09B1  0008               	return
  9750  09B2                     l378:	
  9751                           ;leds.c: 116: case LED_D4:
  9752                           
  9753                           
  9754                           ;leds.c: 117: LATCbits.LATC3 = 0;
  9755  09B2  0022               	movlb	2	; select bank2
  9756  09B3  118E               	bcf	14,3	;volatile
  9757                           
  9758                           ;leds.c: 122: }
  9759                           
  9760                           ;leds.c: 121: break;
  9761                           
  9762                           ;leds.c: 120: case LED_NONE:
  9763                           
  9764                           ;leds.c: 118: break;
  9765  09B4  0008               	return
  9766  09B5                     l2818:	
  9767  09B5  0871               	movf	LED_Off@led,w
  9768                           
  9769                           ; Switch size 1, requested type "space"
  9770                           ; Number of cases is 5, Range of values is 0 to 4
  9771                           ; switch strategies available:
  9772                           ; Name         Instructions Cycles
  9773                           ; direct_byte           16     6 (fixed)
  9774                           ; simple_byte           16     9 (average)
  9775                           ; jumptable            260     6 (fixed)
  9776                           ; rangetable             9     4 (fixed)
  9777                           ; spacedrange           15     6 (fixed)
  9778                           ; locatedrange           5     3 (fixed)
  9779                           ;	Chosen strategy is direct_byte
  9780  09B6  0084               	movwf	4
  9781  09B7  3005               	movlw	5
  9782  09B8  0204               	subwf	4,w
  9783  09B9  1803               	skipnc
  9784  09BA  0008               	return
  9785  09BB  3188               	movlp	high S4776
  9786  09BC  3504               	lslf	4,w
  9787  09BD  3E30               	addlw	low S4776
  9788  09BE  0082               	movwf	2
  9789  09BF                     l380:	
  9790  09BF  0008               	return
  9791  09C0                     __end_of_LED_Off:	
  9792                           
  9793                           	psect	swtext4
  9794  0830                     __pswtext4:	
  9795  0830                     S4776:	
  9796  0830  3189  29BF         	ljmp	l380
  9797  0832  3189  29A9         	ljmp	l374
  9798  0834  3189  29AC         	ljmp	l376
  9799  0836  3189  29AF         	ljmp	l377
  9800  0838  3189  29B2         	ljmp	l378
  9801                           
  9802                           	psect	text44
  9803  05BB                     __ptext44:	
  9804 ;; *************** function _USBDeviceInit *****************
  9805 ;; Defined at:
  9806 ;;		line 301 in file "../framework/usb/usb_device.c"
  9807 ;; Parameters:    Size  Location     Type
  9808 ;;		None
  9809 ;; Auto vars:     Size  Location     Type
  9810 ;;  p               2    3[COMMON] PTR unsigned char 
  9811 ;;		 -> UEP1(1), 
  9812 ;;  i               1    5[COMMON] unsigned char 
  9813 ;;  i               1    6[COMMON] unsigned char 
  9814 ;; Return value:  Size  Location     Type
  9815 ;;		None               void
  9816 ;; Registers used:
  9817 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9818 ;; Tracked objects:
  9819 ;;		On entry : 0/0
  9820 ;;		On exit  : 0/0
  9821 ;;		Unchanged: 0/0
  9822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9824 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9825 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9826 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9827 ;;Total ram usage:        6 bytes
  9828 ;; Hardware stack levels used:    1
  9829 ;; Hardware stack levels required when called:    1
  9830 ;; This function calls:
  9831 ;;		Nothing
  9832 ;; This function is called by:
  9833 ;;		_main
  9834 ;;		_USBDeviceTasks
  9835 ;; This function uses a non-reentrant model
  9836 ;;
  9837                           
  9838                           
  9839                           ;psect for function _USBDeviceInit
  9840  05BB                     _USBDeviceInit:	
  9841                           
  9842                           ;usb_device.c: 302: uint8_t i;
  9843                           ;usb_device.c: 304: {PIE2bits.USBIE = 0;};
  9844                           
  9845                           ;incstack = 0
  9846                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  9847  05BB  0021               	movlb	1	; select bank1
  9848  05BC  1112               	bcf	18,2	;volatile
  9849                           
  9850                           ;usb_device.c: 307: {UEIR = 0;};
  9851  05BD  003D               	movlb	29	; select bank29
  9852  05BE  0193               	clrf	19	;volatile
  9853                           
  9854                           ;usb_device.c: 310: {UIR = 0;};
  9855  05BF  0190               	clrf	16	;volatile
  9856                           
  9857                           ;usb_device.c: 313: UEP0 = 0;
  9858  05C0  0198               	clrf	24	;volatile
  9859                           
  9860                           ;usb_device.c: 315: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 0
      +                          ; };
  9861  05C1  300E               	movlw	14
  9862  05C2  00F4               	movwf	USBDeviceInit@p+1
  9863  05C3  3099               	movlw	153
  9864  05C4  00F3               	movwf	USBDeviceInit@p
  9865  05C5  01F5               	clrf	USBDeviceInit@i_1706
  9866  05C6  0875               	movf	USBDeviceInit@i_1706,w
  9867  05C7  1D03               	skipz
  9868  05C8  2DD9               	goto	l2878
  9869  05C9                     l2870:	
  9870  05C9  0873               	movf	USBDeviceInit@p,w
  9871  05CA  0086               	movwf	6
  9872  05CB  0874               	movf	USBDeviceInit@p+1,w
  9873  05CC  0087               	movwf	7
  9874  05CD  0181               	clrf	1
  9875  05CE  3001               	movlw	1
  9876  05CF  07F3               	addwf	USBDeviceInit@p,f
  9877  05D0  3000               	movlw	0
  9878  05D1  3DF4               	addwfc	USBDeviceInit@p+1,f
  9879  05D2  3001               	movlw	1
  9880  05D3  00F1               	movwf	??_USBDeviceInit
  9881  05D4  0871               	movf	??_USBDeviceInit,w
  9882  05D5  07F5               	addwf	USBDeviceInit@i_1706,f
  9883  05D6  0875               	movf	USBDeviceInit@i_1706,w
  9884  05D7  1903               	btfsc	3,2
  9885  05D8  2DC9               	goto	l2870
  9886  05D9                     l2878:	
  9887                           
  9888                           ;usb_device.c: 317: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  9889  05D9  3016               	movlw	22
  9890  05DA  003D               	movlb	29	; select bank29
  9891  05DB  0091               	movwf	17	;volatile
  9892  05DC  309F               	movlw	159
  9893  05DD  0097               	movwf	23	;volatile
  9894  05DE  307B               	movlw	123
  9895  05DF  0092               	movwf	18	;volatile
  9896                           
  9897                           ;usb_device.c: 320: ;
  9898                           ;usb_device.c: 323: ;
  9899                           ;usb_device.c: 326: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  9900  05E0  01F6               	clrf	USBDeviceInit@i
  9901  05E1  3008               	movlw	8
  9902  05E2  0276               	subwf	USBDeviceInit@i,w
  9903  05E3  1803               	btfsc	3,0
  9904  05E4  2DFE               	goto	l571
  9905  05E5                     l2886:	
  9906                           
  9907                           ;usb_device.c: 327: {
  9908                           ;usb_device.c: 328: BDT[i].Val = 0x00;
  9909  05E5  0876               	movf	USBDeviceInit@i,w
  9910  05E6  00F1               	movwf	??_USBDeviceInit
  9911  05E7  3001               	movlw	1
  9912  05E8                     u1925:	
  9913  05E8  35F1               	lslf	??_USBDeviceInit,f
  9914  05E9  3EFF               	addlw	-1
  9915  05EA  1D03               	skipz
  9916  05EB  2DE8               	goto	u1925
  9917  05EC  3571               	lslf	??_USBDeviceInit,w
  9918  05ED  3E20               	addlw	32
  9919  05EE  0086               	movwf	6
  9920  05EF  0187               	clrf	7
  9921  05F0  3000               	movlw	0
  9922  05F1  3FC0               	movwi [0]fsr1
  9923  05F2  3000               	movlw	0
  9924  05F3  3FC1               	movwi [1]fsr1
  9925  05F4  3FC2               	movwi [2]fsr1
  9926  05F5  3FC3               	movwi [3]fsr1
  9927  05F6  3001               	movlw	1
  9928  05F7  00F1               	movwf	??_USBDeviceInit
  9929  05F8  0871               	movf	??_USBDeviceInit,w
  9930  05F9  07F6               	addwf	USBDeviceInit@i,f
  9931  05FA  3008               	movlw	8
  9932  05FB  0276               	subwf	USBDeviceInit@i,w
  9933  05FC  1C03               	skipc
  9934  05FD  2DE5               	goto	l2886
  9935  05FE                     l571:	
  9936                           
  9937                           ;usb_device.c: 329: }
  9938                           ;usb_device.c: 332: UCONbits.PPBRST = 1;
  9939  05FE  003D               	movlb	29	; select bank29
  9940  05FF  170E               	bsf	14,6	;volatile
  9941                           
  9942                           ;usb_device.c: 335: UADDR = 0x00;
  9943  0600  0196               	clrf	22	;volatile
  9944                           
  9945                           ;usb_device.c: 338: UCONbits.PKTDIS = 0;
  9946  0601  120E               	bcf	14,4	;volatile
  9947                           
  9948                           ;usb_device.c: 341: UCONbits.PPBRST = 0;
  9949  0602  130E               	bcf	14,6	;volatile
  9950  0603                     l2898:	
  9951                           ;usb_device.c: 344: do
  9952                           
  9953                           
  9954                           ;usb_device.c: 345: {
  9955                           ;usb_device.c: 346: (UIR &= 0xF7);
  9956  0603  30F7               	movlw	247
  9957  0604  00F1               	movwf	??_USBDeviceInit
  9958  0605  0871               	movf	??_USBDeviceInit,w
  9959  0606  0590               	andwf	16,f	;volatile
  9960                           
  9961                           ;usb_device.c: 348: inPipes[0].info.Val = 0;
  9962  0607  0021               	movlb	1	; select bank1
  9963  0608  01EB               	clrf	(_inPipes^(0+128)+2)
  9964                           
  9965                           ;usb_device.c: 349: outPipes[0].info.Val = 0;
  9966  0609  0022               	movlb	2	; select bank2
  9967  060A  01C2               	clrf	(_outPipes^(0+256)+2)
  9968                           
  9969                           ;usb_device.c: 350: outPipes[0].wCount.Val = 0;
  9970  060B  01C3               	clrf	(_outPipes^(0+256)+3)
  9971  060C  01C4               	clrf	((_outPipes+1)^(0+256)+3)
  9972                           
  9973                           ;usb_device.c: 351: }while(UIRbits.TRNIF == 1);
  9974  060D  003D               	movlb	29	; select bank29
  9975  060E  1990               	btfsc	16,3	;volatile
  9976  060F  2E03               	goto	l2898
  9977                           
  9978                           ;usb_device.c: 355: USBStatusStageEnabledFlag1 = 1;
  9979  0610  3001               	movlw	1
  9980  0611  00F1               	movwf	??_USBDeviceInit
  9981  0612  0871               	movf	??_USBDeviceInit,w
  9982  0613  0022               	movlb	2	; select bank2
  9983  0614  00D8               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  9984                           
  9985                           ;usb_device.c: 356: USBStatusStageEnabledFlag2 = 1;
  9986  0615  3001               	movlw	1
  9987  0616  00F1               	movwf	??_USBDeviceInit
  9988  0617  0871               	movf	??_USBDeviceInit,w
  9989  0618  00D9               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  9990                           
  9991                           ;usb_device.c: 358: USBDeferINDataStagePackets = 0;
  9992  0619  01D5               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  9993                           
  9994                           ;usb_device.c: 359: USBDeferOUTDataStagePackets = 0;
  9995  061A  01D6               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  9996                           
  9997                           ;usb_device.c: 360: USBBusIsSuspended = 0;
  9998  061B  01D4               	clrf	_USBBusIsSuspended^(0+256)
  9999                           
 10000                           ;usb_device.c: 364: for(i = 0; i < (uint8_t)(1+1u); i++)
 10001  061C  01F6               	clrf	USBDeviceInit@i
 10002  061D  3002               	movlw	2
 10003  061E  0276               	subwf	USBDeviceInit@i,w
 10004  061F  1803               	btfsc	3,0
 10005  0620  2E40               	goto	l2926
 10006  0621                     l2920:	
 10007                           
 10008                           ;usb_device.c: 365: {
 10009                           ;usb_device.c: 366: pBDTEntryIn[i] = 0u;
 10010  0621  0876               	movf	USBDeviceInit@i,w
 10011  0622  3E6B               	addlw	_pBDTEntryIn& (0+255)
 10012  0623  0086               	movwf	6
 10013  0624  0187               	clrf	7
 10014  0625  0181               	clrf	1
 10015                           
 10016                           ;usb_device.c: 367: pBDTEntryOut[i] = 0u;
 10017  0626  0876               	movf	USBDeviceInit@i,w
 10018  0627  3E50               	addlw	_pBDTEntryOut& (0+255)
 10019  0628  0086               	movwf	6
 10020  0629  3001               	movlw	1	; select bank2/3
 10021  062A  0087               	movwf	7
 10022  062B  0181               	clrf	1
 10023                           
 10024                           ;usb_device.c: 368: ep_data_in[i].Val = 0u;
 10025  062C  0876               	movf	USBDeviceInit@i,w
 10026  062D  3E4A               	addlw	_ep_data_in& (0+255)
 10027  062E  0086               	movwf	6
 10028  062F  3001               	movlw	1	; select bank2/3
 10029  0630  0087               	movwf	7
 10030  0631  0181               	clrf	1
 10031                           
 10032                           ;usb_device.c: 369: ep_data_out[i].Val = 0u;
 10033  0632  0876               	movf	USBDeviceInit@i,w
 10034  0633  3E4C               	addlw	_ep_data_out& (0+255)
 10035  0634  0086               	movwf	6
 10036  0635  3001               	movlw	1	; select bank2/3
 10037  0636  0087               	movwf	7
 10038  0637  0181               	clrf	1
 10039  0638  3001               	movlw	1
 10040  0639  00F1               	movwf	??_USBDeviceInit
 10041  063A  0871               	movf	??_USBDeviceInit,w
 10042  063B  07F6               	addwf	USBDeviceInit@i,f
 10043  063C  3002               	movlw	2
 10044  063D  0276               	subwf	USBDeviceInit@i,w
 10045  063E  1C03               	skipc
 10046  063F  2E21               	goto	l2920
 10047  0640                     l2926:	
 10048                           
 10049                           ;usb_device.c: 370: }
 10050                           ;usb_device.c: 373: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10051  0640  3028               	movlw	40
 10052  0641  00F1               	movwf	??_USBDeviceInit
 10053  0642  0871               	movf	??_USBDeviceInit,w
 10054  0643  0020               	movlb	0	; select bank0
 10055  0644  00EB               	movwf	_pBDTEntryIn
 10056                           
 10057                           ;usb_device.c: 375: UEP0 = 0x06|0x10;
 10058  0645  3016               	movlw	22
 10059  0646  003D               	movlb	29	; select bank29
 10060  0647  0098               	movwf	24	;volatile
 10061                           
 10062                           ;usb_device.c: 377: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10063  0648  3040               	movlw	64
 10064  0649  00F1               	movwf	??_USBDeviceInit
 10065  064A  3000               	movlw	0
 10066  064B  00F2               	movwf	??_USBDeviceInit+1
 10067  064C  0871               	movf	??_USBDeviceInit,w
 10068  064D  0020               	movlb	0	; select bank0
 10069  064E  00A2               	movwf	34	;volatile
 10070  064F  0872               	movf	??_USBDeviceInit+1,w
 10071  0650  00A3               	movwf	35	;volatile
 10072                           
 10073                           ;usb_device.c: 378: BDT[0].CNT = 8;
 10074  0651  3008               	movlw	8
 10075  0652  00A1               	movwf	33	;volatile
 10076                           
 10077                           ;usb_device.c: 379: BDT[0].STAT.Val = 0x00|0x04;
 10078  0653  3004               	movlw	4
 10079  0654  00F1               	movwf	??_USBDeviceInit
 10080  0655  0871               	movf	??_USBDeviceInit,w
 10081  0656  00A0               	movwf	32	;volatile
 10082                           
 10083                           ;usb_device.c: 380: BDT[0].STAT.Val |= 0x80;
 10084  0657  17A0               	bsf	32,7	;volatile
 10085                           
 10086                           ;usb_device.c: 383: USBActiveConfiguration = 0;
 10087  0658  0021               	movlb	1	; select bank1
 10088  0659  01EE               	clrf	_USBActiveConfiguration^(0+128)
 10089                           
 10090                           ;usb_device.c: 385: USB1msTickCount = 0;
 10091  065A  3000               	movlw	0
 10092  065B  0022               	movlb	2	; select bank2
 10093  065C  00C9               	movwf	(_USB1msTickCount+3)^(0+256)
 10094  065D  3000               	movlw	0
 10095  065E  00C8               	movwf	(_USB1msTickCount+2)^(0+256)
 10096  065F  3000               	movlw	0
 10097  0660  00C7               	movwf	(_USB1msTickCount+1)^(0+256)
 10098  0661  3000               	movlw	0
 10099  0662  00C6               	movwf	_USB1msTickCount^(0+256)
 10100                           
 10101                           ;usb_device.c: 386: USBTicksSinceSuspendEnd = 0;
 10102  0663  01DB               	clrf	_USBTicksSinceSuspendEnd^(0+256)
 10103                           
 10104                           ;usb_device.c: 389: USBDeviceState = DETACHED_STATE;
 10105  0664  0020               	movlb	0	; select bank0
 10106  0665  01ED               	clrf	_USBDeviceState
 10107  0666  0008               	return
 10108  0667                     __end_of_USBDeviceInit:	
 10109                           
 10110                           	psect	text45
 10111  09F3                     __ptext45:	
 10112 ;; *************** function _SYSTEM_Initialize *****************
 10113 ;; Defined at:
 10114 ;;		line 87 in file "../src/pic16f1459/system.c"
 10115 ;; Parameters:    Size  Location     Type
 10116 ;;  state           1    wreg     enum E2634
 10117 ;; Auto vars:     Size  Location     Type
 10118 ;;  state           1    2[COMMON] enum E2634
 10119 ;; Return value:  Size  Location     Type
 10120 ;;		None               void
 10121 ;; Registers used:
 10122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10123 ;; Tracked objects:
 10124 ;;		On entry : 0/0
 10125 ;;		On exit  : 0/0
 10126 ;;		Unchanged: 0/0
 10127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10129 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10131 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10132 ;;Total ram usage:        1 bytes
 10133 ;; Hardware stack levels used:    1
 10134 ;; Hardware stack levels required when called:    2
 10135 ;; This function calls:
 10136 ;;		_LED_Enable
 10137 ;;		_BUTTON_Enable
 10138 ;; This function is called by:
 10139 ;;		_main
 10140 ;; This function uses a non-reentrant model
 10141 ;;
 10142                           
 10143                           
 10144                           ;psect for function _SYSTEM_Initialize
 10145  09F3                     _SYSTEM_Initialize:	
 10146                           
 10147                           ;incstack = 0
 10148                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10149                           ;SYSTEM_Initialize@state stored from wreg
 10150  09F3  00F2               	movwf	SYSTEM_Initialize@state
 10151                           
 10152                           ;system.c: 88: switch(state)
 10153  09F4  2A03               	goto	l2858
 10154  09F5                     l2850:	
 10155                           ;system.c: 89: {
 10156                           ;system.c: 90: case SYSTEM_STATE_USB_START:
 10157                           
 10158                           
 10159                           ;system.c: 94: OSCCON = 0xFC;
 10160  09F5  30FC               	movlw	252
 10161  09F6  0021               	movlb	1	; select bank1
 10162  09F7  0099               	movwf	25	;volatile
 10163                           
 10164                           ;system.c: 95: ACTCON = 0x90;
 10165  09F8  3090               	movlw	144
 10166  09F9  0027               	movlb	7	; select bank7
 10167  09FA  009B               	movwf	27	;volatile
 10168                           
 10169                           ;system.c: 97: LED_Enable(0);
 10170  09FB  3000               	movlw	0
 10171  09FC  3189  218E  3189   	fcall	_LED_Enable
 10172                           
 10173                           ;system.c: 99: BUTTON_Enable(BUTTON_S1);
 10174  09FF  3001               	movlw	1
 10175  0A00  3189  2102         	fcall	_BUTTON_Enable
 10176                           
 10177                           ;system.c: 107: }
 10178                           
 10179                           ;system.c: 106: break;
 10180                           
 10181                           ;system.c: 105: case SYSTEM_STATE_USB_RESUME:
 10182                           
 10183                           ;system.c: 103: break;
 10184                           
 10185                           ;system.c: 102: case SYSTEM_STATE_USB_SUSPEND:
 10186                           
 10187                           ;system.c: 100: break;
 10188  0A02  0008               	return
 10189  0A03                     l2858:	
 10190  0A03  0872               	movf	SYSTEM_Initialize@state,w
 10191                           
 10192                           ; Switch size 1, requested type "space"
 10193                           ; Number of cases is 3, Range of values is 0 to 2
 10194                           ; switch strategies available:
 10195                           ; Name         Instructions Cycles
 10196                           ; simple_byte           10     6 (average)
 10197                           ; direct_byte           12     6 (fixed)
 10198                           ; jumptable            260     6 (fixed)
 10199                           ; rangetable             7     4 (fixed)
 10200                           ; spacedrange           11     6 (fixed)
 10201                           ; locatedrange           3     3 (fixed)
 10202                           ;	Chosen strategy is simple_byte
 10203  0A04  3A00               	xorlw	0	; case 0
 10204  0A05  1903               	skipnz
 10205  0A06  29F5               	goto	l2850
 10206  0A07  3A01               	xorlw	1	; case 1
 10207  0A08  1903               	skipnz
 10208  0A09  2A0E               	goto	l290
 10209  0A0A  3A03               	xorlw	3	; case 2
 10210  0A0B  1903               	skipnz
 10211  0A0C  2A0E               	goto	l290
 10212  0A0D  2A0E               	goto	l290
 10213  0A0E                     l290:	
 10214  0A0E  0008               	return
 10215  0A0F                     __end_of_SYSTEM_Initialize:	
 10216                           
 10217                           	psect	text46
 10218  0902                     __ptext46:	
 10219 ;; *************** function _BUTTON_Enable *****************
 10220 ;; Defined at:
 10221 ;;		line 86 in file "../bsp/pic16f1459/buttons.c"
 10222 ;; Parameters:    Size  Location     Type
 10223 ;;  button          1    wreg     enum E2603
 10224 ;; Auto vars:     Size  Location     Type
 10225 ;;  button          1    1[COMMON] enum E2603
 10226 ;; Return value:  Size  Location     Type
 10227 ;;		None               void
 10228 ;; Registers used:
 10229 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10230 ;; Tracked objects:
 10231 ;;		On entry : 0/0
 10232 ;;		On exit  : 0/0
 10233 ;;		Unchanged: 0/0
 10234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10236 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10238 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10239 ;;Total ram usage:        1 bytes
 10240 ;; Hardware stack levels used:    1
 10241 ;; Hardware stack levels required when called:    1
 10242 ;; This function calls:
 10243 ;;		Nothing
 10244 ;; This function is called by:
 10245 ;;		_SYSTEM_Initialize
 10246 ;; This function uses a non-reentrant model
 10247 ;;
 10248                           
 10249                           
 10250                           ;psect for function _BUTTON_Enable
 10251  0902                     _BUTTON_Enable:	
 10252                           
 10253                           ;incstack = 0
 10254                           ; Regs used in _BUTTON_Enable: [wreg-fsr0h+status,2+status,0]
 10255                           ;BUTTON_Enable@button stored from wreg
 10256  0902  00F1               	movwf	BUTTON_Enable@button
 10257                           
 10258                           ;buttons.c: 94: }
 10259                           
 10260                           ;buttons.c: 93: break;
 10261                           
 10262                           ;buttons.c: 92: case BUTTON_NONE:
 10263                           
 10264                           ;buttons.c: 90: break;
 10265                           
 10266                           ;buttons.c: 88: {
 10267                           ;buttons.c: 89: case BUTTON_S1:
 10268                           
 10269                           ;buttons.c: 87: switch(button)
 10270  0903  0871               	movf	BUTTON_Enable@button,w
 10271                           
 10272                           ; Switch size 1, requested type "space"
 10273                           ; Number of cases is 2, Range of values is 0 to 1
 10274                           ; switch strategies available:
 10275                           ; Name         Instructions Cycles
 10276                           ; simple_byte            7     4 (average)
 10277                           ; direct_byte           10     6 (fixed)
 10278                           ; jumptable            260     6 (fixed)
 10279                           ; rangetable             6     4 (fixed)
 10280                           ; spacedrange            9     6 (fixed)
 10281                           ; locatedrange           2     3 (fixed)
 10282                           ;	Chosen strategy is simple_byte
 10283  0904  3A00               	xorlw	0	; case 0
 10284  0905  1903               	skipnz
 10285  0906  290B               	goto	l309
 10286  0907  3A01               	xorlw	1	; case 1
 10287  0908  1903               	skipnz
 10288  0909  290B               	goto	l309
 10289  090A  290B               	goto	l309
 10290  090B                     l309:	
 10291  090B  0008               	return
 10292  090C                     __end_of_BUTTON_Enable:	
 10293                           
 10294                           	psect	text47
 10295  098E                     __ptext47:	
 10296 ;; *************** function _LED_Enable *****************
 10297 ;; Defined at:
 10298 ;;		line 221 in file "../bsp/pic16f1459/leds.c"
 10299 ;; Parameters:    Size  Location     Type
 10300 ;;  led             1    wreg     enum E2
 10301 ;; Auto vars:     Size  Location     Type
 10302 ;;  led             1    1[COMMON] enum E2
 10303 ;; Return value:  Size  Location     Type
 10304 ;;		None               void
 10305 ;; Registers used:
 10306 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10307 ;; Tracked objects:
 10308 ;;		On entry : 0/0
 10309 ;;		On exit  : 0/0
 10310 ;;		Unchanged: 0/0
 10311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10313 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10315 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10316 ;;Total ram usage:        1 bytes
 10317 ;; Hardware stack levels used:    1
 10318 ;; Hardware stack levels required when called:    1
 10319 ;; This function calls:
 10320 ;;		Nothing
 10321 ;; This function is called by:
 10322 ;;		_SYSTEM_Initialize
 10323 ;; This function uses a non-reentrant model
 10324 ;;
 10325                           
 10326                           
 10327                           ;psect for function _LED_Enable
 10328  098E                     _LED_Enable:	
 10329                           
 10330                           ;incstack = 0
 10331                           ; Regs used in _LED_Enable: [wreg-fsr0h+status,2+status,0]
 10332                           ;LED_Enable@led stored from wreg
 10333  098E  00F1               	movwf	LED_Enable@led
 10334                           
 10335                           ;leds.c: 222: switch(led)
 10336  098F  299C               	goto	l3436
 10337  0990                     l404:	
 10338                           ;leds.c: 223: {
 10339                           ;leds.c: 224: case LED_D1:
 10340                           
 10341                           
 10342                           ;leds.c: 225: TRISCbits.TRISC0 = 0;
 10343  0990  0021               	movlb	1	; select bank1
 10344  0991  100E               	bcf	14,0	;volatile
 10345                           
 10346                           ;leds.c: 226: break;
 10347  0992  0008               	return
 10348  0993                     l406:	
 10349                           ;leds.c: 228: case LED_D2:
 10350                           
 10351                           
 10352                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
 10353  0993  0021               	movlb	1	; select bank1
 10354  0994  108E               	bcf	14,1	;volatile
 10355                           
 10356                           ;leds.c: 230: break;
 10357  0995  0008               	return
 10358  0996                     l407:	
 10359                           ;leds.c: 232: case LED_D3:
 10360                           
 10361                           
 10362                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
 10363  0996  0021               	movlb	1	; select bank1
 10364  0997  110E               	bcf	14,2	;volatile
 10365                           
 10366                           ;leds.c: 234: break;
 10367  0998  0008               	return
 10368  0999                     l408:	
 10369                           ;leds.c: 236: case LED_D4:
 10370                           
 10371                           
 10372                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
 10373  0999  0021               	movlb	1	; select bank1
 10374  099A  118E               	bcf	14,3	;volatile
 10375                           
 10376                           ;leds.c: 242: }
 10377                           
 10378                           ;leds.c: 241: break;
 10379                           
 10380                           ;leds.c: 240: case LED_NONE:
 10381                           
 10382                           ;leds.c: 238: break;
 10383  099B  0008               	return
 10384  099C                     l3436:	
 10385  099C  0871               	movf	LED_Enable@led,w
 10386                           
 10387                           ; Switch size 1, requested type "space"
 10388                           ; Number of cases is 5, Range of values is 0 to 4
 10389                           ; switch strategies available:
 10390                           ; Name         Instructions Cycles
 10391                           ; direct_byte           16     6 (fixed)
 10392                           ; simple_byte           16     9 (average)
 10393                           ; jumptable            260     6 (fixed)
 10394                           ; rangetable             9     4 (fixed)
 10395                           ; spacedrange           15     6 (fixed)
 10396                           ; locatedrange           5     3 (fixed)
 10397                           ;	Chosen strategy is direct_byte
 10398  099D  0084               	movwf	4
 10399  099E  3005               	movlw	5
 10400  099F  0204               	subwf	4,w
 10401  09A0  1803               	skipnc
 10402  09A1  0008               	return
 10403  09A2  3188               	movlp	high S4778
 10404  09A3  3504               	lslf	4,w
 10405  09A4  3E3A               	addlw	low S4778
 10406  09A5  0082               	movwf	2
 10407  09A6                     l410:	
 10408  09A6  0008               	return
 10409  09A7                     __end_of_LED_Enable:	
 10410                           
 10411                           	psect	swtext5
 10412  083A                     __pswtext5:	
 10413  083A                     S4778:	
 10414  083A  3189  29A6         	ljmp	l410
 10415  083C  3189  2990         	ljmp	l404
 10416  083E  3189  2993         	ljmp	l406
 10417  0840  3189  2996         	ljmp	l407
 10418  0842  3189  2999         	ljmp	l408
 10419                           
 10420                           	psect	intentry
 10421  0004                     __pintentry:	
 10422 ;; *************** function _SYS_InterruptHigh *****************
 10423 ;; Defined at:
 10424 ;;		line 113 in file "../src/pic16f1459/system.c"
 10425 ;; Parameters:    Size  Location     Type
 10426 ;;		None
 10427 ;; Auto vars:     Size  Location     Type
 10428 ;;		None
 10429 ;; Return value:  Size  Location     Type
 10430 ;;		None               void
 10431 ;; Registers used:
 10432 ;;		None
 10433 ;; Tracked objects:
 10434 ;;		On entry : 0/0
 10435 ;;		On exit  : 0/0
 10436 ;;		Unchanged: 0/0
 10437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10440 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10441 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10442 ;;Total ram usage:        1 bytes
 10443 ;; Hardware stack levels used:    1
 10444 ;; This function calls:
 10445 ;;		Nothing
 10446 ;; This function is called by:
 10447 ;;		Interrupt level 1
 10448 ;; This function uses a non-reentrant model
 10449 ;;
 10450                           
 10451  0004                     _SYS_InterruptHigh:	
 10452                           
 10453                           ;incstack = 0
 10454                           ; Regs used in _SYS_InterruptHigh: []
 10455  0004  3180               	pagesel	$
 10456  0005  0020               	movlb	0	; select bank0
 10457  0006  087F               	movf	127,w
 10458  0007  00F0               	movwf	??_SYS_InterruptHigh
 10459  0008  0870               	movf	??_SYS_InterruptHigh,w
 10460  0009  00FF               	movwf	127
 10461  000A  0009               	retfie
 10462  000B                     __end_of_SYS_InterruptHigh:	
 10463  007E                     btemp	set	126	;btemp
 10464  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    245
    Data        0
    BSS         185
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            32     27      32
    BANK1            16      0      16
    BANK2            80      0      67
    BANK3            76      0      64
    BANK4            80      0      32
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ?_memset	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(1) Largest target is 32
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK1[1]), BDT(BANK0[32]), NULL(NULL[0]), 

    ?_USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    memset@p1	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    memset@p	PTR unsigned char  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITSFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    sp__memset	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(BITSFR29[1]), 

    pDst	PTR unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> midiData(BANK3[4]), ReceivedDataBuffer(BANK1[64]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITSFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    S1171$pFunc	PTR FTN()void  size(1) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(1) Largest target is 0

    S1161$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S1161$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S1137$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S1137$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S1137$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S1137$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(BITSFR29[1]), 

    scan_task@velocity	PTR unsigned char  size(1) Largest target is 1
		 -> APP_DeviceAudioMIDITasks@velocity(BANK0[1]), 

    scan_task@note	PTR unsigned char  size(1) Largest target is 1
		 -> APP_DeviceAudioMIDITasks@scan_pitch(BANK0[1]), 

    sp__USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBRxHandle	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBTxHandle	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[26]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 101
		 -> configDescriptor1(CODE[101]), 


Critical Paths under _main in COMMON

    _APP_DeviceAudioMIDITasks->_scan_task
    _scan_task->_store_key_level
    _store_key_level->_process_level
    _process_level->_LED_Off
    _process_level->_LED_On
    _USBDeviceTasks->_USBWakeFromSuspend
    _USBDeviceTasks->_USBSuspend
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCheckStdRequest->_USBStdSetCfgHandler
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _APP_DeviceAudioMIDIInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _SYSTEM_Initialize->_LED_Enable
    _SYSTEM_Initialize->_BUTTON_Enable

Critical Paths under _SYS_InterruptHigh in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_APP_DeviceAudioMIDITasks
    _APP_DeviceAudioMIDITasks->_scan_task
    _store_key_level->_process_level
    _USBDeviceTasks->_USBCtrlEPService
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_APP_DeviceAudioMIDIInitialize
    _APP_DeviceAudioMIDIInitialize->_USBEnableEndpoint

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8893
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
           _APP_DeviceAudioMIDITasks
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceAudioMIDITasks                            10    10      0    1376
                                             17 BANK0     10    10      0
               _USBTransferOnePacket
                          _scan_task
                   _BUTTON_IsPressed
 ---------------------------------------------------------------------------------
 (2) _BUTTON_IsPressed                                     1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _scan_task                                            7     6      1     852
                                             11 COMMON     1     1      0
                                             11 BANK0      6     5      1
                          _scan_init
                          _set_timer
                  _waiting_for_timer
                 _set_clock_and_data
                           _get_data
                     _is_end_of_scan
                            _run_adc
                       _is_adc_ready
                            _get_adc
                    _store_key_level
 ---------------------------------------------------------------------------------
 (3) _store_key_level                                      4     3      1     625
                                              7 COMMON     4     3      1
                     _is_end_of_scan (ARG)
                            _get_adc (ARG)
                      _process_level
 ---------------------------------------------------------------------------------
 (4) _process_level                                       16    14      2     559
                                              2 COMMON     5     3      2
                                              0 BANK0     11    11      0
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (3) _get_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _is_adc_ready                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _run_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _is_end_of_scan                                       3     3      0      23
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _get_data                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _set_clock_and_data                                   3     2      1      44
                                              1 COMMON     3     2      1
                           _get_data (ARG)
 ---------------------------------------------------------------------------------
 (3) _waiting_for_timer                                    1     1      0      24
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _set_timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _scan_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       3     3      0    7179
                                             22 BANK0      3     3      0
                      _USBDeviceInit
    _USER_USB_CALLBACK_EVENT_HANDLER
                 _USBWakeFromSuspend
                         _USBSuspend
      _USBIncrement1msInternalTimers
          _USBCtrlEPAllowStatusStage
                    _USBStallHandler
                   _USBCtrlEPService
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     4     4      0    4487
                                             18 BANK0      4     4      0
             _USBCtrlTrfSetupHandler
               _USBCtrlTrfOutHandler
                _USBCtrlTrfInHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  3     3      0     115
                                              4 COMMON     3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 2     2      0     114
                                              7 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  4     4      0     114
                                              3 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               1     1      0    4159
                                             17 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCtrlEPServiceComplete
                 _USBCheckStdRequest
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   1     1      0    3283
                                             16 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                _USBStdSetCfgHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
            _USBStdFeatureReqHandler
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0    1338
                                             10 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               2     2      0      46
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  3     3      0       0
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  5     5      0    1115
                                             11 COMMON     1     1      0
                                             10 BANK0      4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               7     3      4      96
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             2     2      0      92
                                              6 COMMON     2     2      0
          _USBCtrlEPAllowStatusStage
            _USBCtrlEPAllowDataStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              4 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfTxService                                  3     3      0      92
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           1     1      0     784
                                             11 COMMON     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   1     1      0     784
                                             11 COMMON     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      5     0      5     784
                                              5 BANK0      5     0      5
             _APP_LEDUpdateUSBStatus
      _APP_DeviceAudioMIDISOFHandler
      _APP_DeviceAudioMIDIInitialize
 ---------------------------------------------------------------------------------
 (7) _APP_DeviceAudioMIDIInitialize                        2     2      0     709
                                              3 BANK0      2     2      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _USBTransferOnePacket                                 8     4      4     332
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) _USBEnableEndpoint                                    6     5      1     377
                                              8 COMMON     3     2      1
                                              0 BANK0      3     3      0
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (9) _USBConfigureEndpoint                                 7     6      1     222
                                              1 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (7) _APP_DeviceAudioMIDISOFHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _APP_LEDUpdateUSBStatus                               0     0      0      44
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (5) _LED_On                                               1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _LED_Off                                              1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        6     6      0     272
                                              1 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      66
                                              2 COMMON     1     1      0
                         _LED_Enable
                      _BUTTON_Enable
 ---------------------------------------------------------------------------------
 (2) _BUTTON_Enable                                        1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SYS_InterruptHigh                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _LED_Enable
     _BUTTON_Enable
   _USBDeviceInit
   _USBDeviceTasks
     _USBDeviceInit
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On
       _APP_DeviceAudioMIDISOFHandler
       _APP_DeviceAudioMIDIInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _APP_DeviceAudioMIDISOFHandler
         _APP_DeviceAudioMIDIInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _APP_DeviceAudioMIDISOFHandler
         _APP_DeviceAudioMIDIInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
     _USBIncrement1msInternalTimers
     _USBCtrlEPAllowStatusStage
     _USBStallHandler
     _USBCtrlEPService
       _USBCtrlTrfSetupHandler
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
           _APP_DeviceAudioMIDISOFHandler
           _APP_DeviceAudioMIDIInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
         _USBCheckStdRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
             _APP_DeviceAudioMIDISOFHandler
             _APP_DeviceAudioMIDIInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _APP_DeviceAudioMIDISOFHandler
               _APP_DeviceAudioMIDIInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
             _memset
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _APP_DeviceAudioMIDISOFHandler
               _APP_DeviceAudioMIDIInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
   _APP_DeviceAudioMIDITasks
     _USBTransferOnePacket
     _scan_task
       _scan_init
       _set_timer
       _waiting_for_timer
       _set_clock_and_data
         _get_data (ARG)
       _get_data
       _is_end_of_scan
       _run_adc
       _is_adc_ready
       _get_adc
       _store_key_level
         _is_end_of_scan (ARG)
         _get_adc (ARG)
         _process_level (ARG)
           _LED_Off
           _LED_On
     _BUTTON_IsPressed

 _SYS_InterruptHigh (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       9       3        0.0%
BITBANK0            20      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               20     1B      20       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10      0      10       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      43       9       83.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            4C      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               4C      0      40      11       84.2%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      20      13       40.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      E0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      E9      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Tue May 10 15:22:05 2016

                              _USB_SD_Ptr 0321                                         pc 0002  
                             __CFG_CP$OFF 0000                                        l69 0B7B  
                             ?_LED_Enable 0070                             _USBDeviceInit 05BB  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0055      USER_USB_CALLBACK_EVENT_HANDLER@pdata 0057  
                                     l410 09A6                                       l404 0990  
                                     l309 090B                                       l406 0993  
             __end_of_USBStdGetDscHandler 0F7F                                       l407 0996  
                                     l408 0999                                       l290 0A0E  
                                     l370 09D8                                       l380 09BF  
                                     l364 09C2                                       l374 09A9  
                                     l366 09C5                                       l367 09C8  
                                     l376 09AC                                       l368 09CB  
                                     l720 0C5E                                       l800 01B4  
                                     l377 09AF                                       l801 01B5  
                                     l378 09B2                                       l650 02A0  
                                     l571 05FE                                       l715 0C51  
                                     l813 021D                                       l718 0C8E  
                                     l582 0403                                       l663 0E3E  
                                     l719 0C5B                                       l584 0407  
                                     l762 0DCF                                       l588 042D  
                                     _BDT 0020                                       l765 0E13  
                                     l597 048B                                       l678 0728  
                                     l598 04E1                                       l777 0CF0  
                                     l779 0CA3                                       l788 0CCD  
                                     _UIE 0E92                                       _UIR 0E90  
                  _APP_LEDUpdateUSBStatus 0BFD                                _USBSuspend 095E  
                    USBStdSetCfgHandler@i 005D                      USBStdSetCfgHandler@p 005A  
                             _USBRxHandle 0157                              __CFG_BORV$LO 0000  
                                     wreg 0009                            _USBDeviceTasks 03F6  
                          _USBDeviceState 006D                               _USBTxHandle 00E3  
                           _BUTTON_Enable 0902                                      S4774 0826  
                                    S4766 081A                                      S4776 0830  
                                    S4768 0800                                      S4778 083A  
                   ??_USBCtrlTrfRxService 0073                  USBEnableEndpoint@options 0078  
                            __CFG_LVP$OFF 0000                           __end_of_LED_Off 09C0  
                                    l3202 07C6                                      l3116 0105  
                                    l3108 00EB                                      l3214 07F4  
                                    l3134 0140                                      l3118 0108  
                                    l3070 0040                                      l3240 0691  
                                    l3064 0027                                      l4200 094F  
                                    l3234 0684                                      l3066 002A  
                                    l3412 05AD                                      l3404 0594  
                                    l3252 06C4                                      l3244 06A0  
                                    l3228 067C                                      l3084 0086  
              USBConfigureEndpoint@handle 0077                                      l3182 0A76  
                                    l3334 091F                                      l3406 059F  
                                    l3414 05B0                                      l3262 06E4  
                                    l3094 00A7                                      l2800 0C2A  
                                    l4240 041A                                      l3256 06CC  
                                    l3248 06B3                                      l3280 0937  
                                    l3096 00AA                                      l2810 0C40  
                                    l3186 0A7E                                      l3194 07B8  
                                    l4410 0EBE                                      l3426 0B3C  
                                    l3258 06D3                                      l3266 06EF  
                                    l3290 093E                                      l3436 099C  
                                    l2804 0C35                                      l2812 0C46  
                                    l4340 0B50                                      l4332 0B44  
                                    l3604 0D18                                      l4420 0EF2  
                                    l4324 04C5                                      l4308 0491  
                                    l4260 043D                                      l4228 040A  
                                    l3428 0B3D                                      l3268 06FA  
                                    l3292 0946                                      l3284 093C  
                                    l3526 0A66                                      l4510 0CAB  
                                    l4422 0EF5                                      l4326 04D5  
                                    l4318 04AC                                      l2920 0621  
                                    l4336 0B4A                                      l4344 0B53  
                                    l3528 0A68                                      l3624 0E36  
                                    l3608 0D2C                                      l4512 0CAE  
                                    l3720 0748                                      l4416 0EE3  
                                    l4280 0464                                      l4272 0455  
                                    l4248 0427                                      l3392 055E  
                                    l3376 051B                                      l2850 09F5  
                                    l2818 09B5                                      l4338 0B4D  
                                    l4442 0F9A                                      l4434 0F8A  
                                    l4522 0CBB                                      l4514 0CB1  
                                    l4290 0471                                      l4266 0443  
                                    l3394 055F                                      l2828 09CE  
                                    l3636 0E56                                      l3644 0E6F  
                                    l4452 0FAE                                      l3804 0F0B  
                                    l4620 0241                                      l4524 0CBE  
                                    l4540 0CE5                                      l4284 046A  
                                    l2926 0640                                      l2870 05C9  
                                    l3574 0BA9                                      l3646 0E73  
                                    l3654 0E8C                                      l3670 0275  
                                    l3822 0F6C                                      l3814 0F48  
                                    l3806 0F15                                      l4622 0249  
                                    l4606 020C                                      l4526 0CC1  
                                    l3734 07A7                                      l3726 0776  
                                    l3718 0730                                      l3910 0DCA  
                                    l2792 0C1A                                      l2784 0C04  
                                    l4376 02F6                                      l3824 0F6F  
                                    l3816 0F4B                                      l4616 0223  
                                    l4608 0211                                      l4536 0CD9  
                                    l3728 0782                                      l3920 0DF6  
                                    l2858 0A03                                      l4378 02FD  
                                    l3498 0D6D                                      l3666 0271  
                                    l4474 0FEB                                      l4458 0FC2  
                                    l3842 0C6A                                      l3930 0E1C  
                                    l4298 0484                                      l2796 0C1F  
                                    l2788 0C0F                                      l3828 0F72  
                                    l3852 0C82                                      l4580 01C0  
                                    l4572 019A                                      l4556 016C  
                                    l3932 0E1D                                      l3924 0E06  
                                    l2886 05E5                                      l2878 05D9  
                                    l3678 02AD                                      l3686 02B7  
                                    l4590 01D8                                      l4558 016E  
                                    l4592 01DF                                      l2898 0603  
                                    l4770 0B5C                                      l3890 0AED  
                                    l4772 0B76                                      l4596 01E8  
                                    l3798 0A14                                      l3896 0B12  
                                    u3065 0722                                      u3175 0A1E  
                                    u2560 0569                                      u2570 0576  
                                    u2562 056A                                      u2572 0577  
                                    u1925 05E8                                      u2805 0B8A  
                                    u2815 0B92                                      u2925 0D21  
                                    u2795 0B84                                      u3845 0E9F  
                   ??_USBCtrlTrfTxService 0071                                      _UCFG 0E91  
                                    _UEP0 0E98                                      _UEP1 0E99  
                                    _UEIE 0E97                                      _UEIR 0E93  
                                    _UCON 0E8E                                      _TMR0 0015  
                            __CFG_WRT$OFF 0000    USBStdFeatureReqHandler@current_ep_data 005E  
                                    _pDst 015E                                      _main 0948  
                                    fsr0h 0005                                      fsr1h 0007  
                                    fsr0l 0004                                      indf0 0000  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                                    start 000B                             __CFG_IESO$OFF 0000  
              process_level@current_state 0052                      process_level@idx_key 005A  
              __end_of_USBCheckStdRequest 0CF1                    ??_USBCtrlTrfOutHandler 0077  
                           __CFG_MCLRE$ON 0000                       USBDeviceInit@i_1706 0075  
               ??_USBStdFeatureReqHandler 005A                      process_level@on_flag 0058  
                ??_USBStdGetStatusHandler 0071                            ?_USBDeviceInit 0070  
             process_level@key_on_counter 01C4                                     ?_main 0070  
                           __CFG_WDTE$OFF 0000         __size_of_USBCtrlEPServiceComplete 0086  
                  __end_of_USBDeviceTasks 04E4                 ?_USBCtrlEPServiceComplete 0070  
                                   _UADDR 0E96                                     _RCREG 0199  
                                   _RCSTA 019D                                     _USTAT 0E8F  
                                   _TXREG 019A                                     _TXSTA 019E  
      __size_of_USBCtrlEPAllowStatusStage 0069                            __CFG_FCMEN$OFF 0000  
                          ?_BUTTON_Enable 0070                           __end_of_get_adc 08E4  
         __end_of_USBCtrlEPAllowDataStage 0D48                                     _sd000 03F2  
                                   _sd001 0392                                     _sd002 03C6  
          ?_USBIncrement1msInternalTimers 0070                             ?_is_adc_ready 0070  
   __end_of_APP_DeviceAudioMIDIInitialize 0AE5    __size_of_APP_DeviceAudioMIDIInitialize 002B  
           _APP_DeviceAudioMIDIInitialize 0ABA                           _store_key_level 0B14  
             __size_of_set_clock_and_data 001A                                     _pitch 00E6  
               __size_of_BUTTON_IsPressed 0013                           ??_process_level 0074  
                     __size_of_LED_Enable 0019                           __end_of_run_adc 0902  
      APP_DeviceAudioMIDITasks@scan_pitch 0069                                     status 0003  
                                   wtemp0 007E              __size_of_USBStdSetCfgHandler 0081  
                   process_level@off_flag 0056                           __initialization 0A92  
              is_end_of_scan@scan_counter 0161                              __end_of_main 095E  
              ??_APP_DeviceAudioMIDITasks 0061                            __CFG_LPBOR$OFF 0000  
                           scan_task@note 0060                 __size_of_USBCtrlEPService 0070  
                                  ??_main 007C                           ?_USBDeviceTasks 0070  
   __end_ofprocess_level@key_on_threshold 032C             process_level@key_on_threshold 032B  
                             ?_USBSuspend 0070                                 ??_LED_Off 0071  
                     __CFG_USBLSCLK$48MHz 0000                            ??_is_adc_ready 0071  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _ADCON2 009F                                    _ACTCON 039B  
                                  _ADRESH 009C                                    _ADRESL 009B  
                                  _ANSELA 018C                    SYSTEM_Initialize@state 0072  
                                  _LED_On 09C0                       set_clock_and_data@c 0073  
                     set_clock_and_data@d 0071                                    _OSCCON 0099  
                          __CFG_PWRTE$OFF 0000                         _shortPacketStatus 00E7  
                        __end_of_get_data 08E9                           USBDeviceTasks@i 0068  
             USBStdFeatureReqHandler@pUEP 005C                  USBTransferOnePacket@data 0072  
              USBCtrlTrfInHandler@lastDTS 0076                           ??_USBDeviceInit 0071  
                          __CFG_STVREN$ON 0000                         _USBEnableEndpoint 0A6D  
         __size_of_USBStdGetStatusHandler 004F                                    _memset 0A0F  
                      ?_USBEnableEndpoint 0078                                 ??_get_adc 0071  
                 __end_of_store_key_level 0B43             __size_of_USBTransferOnePacket 0050  
                         ??_BUTTON_Enable 0071                       ??_USBEnableEndpoint 0079  
                          process_level@L 0329                                 ??_run_adc 0071  
                             _CtrlTrfData 0048                   __size_of_is_end_of_scan 0013  
                    _controlTransferState 00E4                         _SYSTEM_Initialize 09F3  
                 __end_of__initialization 0AB7                        ?_SYSTEM_Initialize 0070  
                __size_of_USBStallHandler 0024                       __size_of_USBSuspend 0018  
                          __pcstackCOMMON 0070                 __end_of_USBEnableEndpoint 0A92  
            _APP_DeviceAudioMIDITasks$437 0065              _APP_DeviceAudioMIDITasks$438 0067  
            _APP_DeviceAudioMIDITasks$396 0063                             __end_of_sd000 03F6  
                           __end_of_sd001 03C6                             __end_of_sd002 03E0  
                     ??_SYSTEM_Initialize 0072                                 LED_On@led 0071  
        __size_of_USBCtrlEPAllowDataStage 0057                                _adc_levels 0220  
                  process_level@old_level 0072                    process_level@new_level 0073  
                            ??_LED_Enable 0071             __size_of_USBConfigureEndpoint 003F  
                  process_level@old_state 0050               __end_of_USBCtrlTrfInHandler 0E20  
                 ?_APP_LEDUpdateUSBStatus 0070                    store_key_level@idx_key 00E8  
                  __end_ofprocess_level@L 032A                            _OPTION_REGbits 0095  
                          scan_task@state 0162                store_key_level@end_of_scan 0077  
                ??_USBCtrlTrfSetupHandler 0061                   _USBTicksSinceSuspendEnd 015B  
               __end_of_SYSTEM_Initialize 0A0F                          _BUTTON_IsPressed 0935  
                  _USBStdGetStatusHandler 0C4C                                __pbssBANK0 006B  
                              __pbssBANK1 00E0                                __pbssBANK2 0120  
                              __pbssBANK3 01A4                                __pbssBANK4 0220  
                                 ?_LED_On 0070                        __end_of_LED_Enable 09A7  
                    store_key_level@level 007A               __size_of_USBWakeFromSuspend 001C  
                             _pBDTEntryIn 006B          __end_of_USBCtrlEPServiceComplete 02E4  
                      __size_of_scan_init 001D                                __pmaintext 0948  
                      __size_of_scan_task 00AB                      USBCtrlTrfRxService@i 0075  
                    __end_of_is_adc_ready 08EE                             LED_Enable@led 0071  
                         __CFG_PLLMULT$3x 0000            __end_of_APP_LEDUpdateUSBStatus 0C4C  
                              __pintentry 0004                                   _BAUDCON 019F  
                                 ?_memset 0071                                _device_dsc 03E0  
                        _USBCtrlEPService 0E90                                _ep_data_in 014A  
                      __size_of_set_timer 000B               __end_of_USBCtrlTrfRxService 07AF  
                      _USBCheckStdRequest 0C9B                          ?_store_key_level 0077  
                       _configDescriptor1 032D                         scan_task@velocity 005B  
                                 _LED_Off 09A7               __end_of_USBCtrlTrfTxService 0E90  
                     _USBStdSetCfgHandler 0F7F                                 ?_get_data 0070  
                     ?_USBCheckStdRequest 0070              __size_of_USBStdGetDscHandler 007F  
                                 _UIEbits 0E92                                __stringtab 0300  
                                 _UIRbits 0E90                           __size_of_LED_On 0019  
                       is_end_of_scan@res 0073            APP_LEDUpdateUSBStatus@ledCount 00E0  
         ??_USBIncrement1msInternalTimers 0071                      ?_USBStdSetCfgHandler 0070  
              __size_of_USBEnableEndpoint 0025                      ??_USBCheckStdRequest 0060  
           __size_of_USBCtrlTrfOutHandler 002F                          ??_USBDeviceTasks 0066  
                       ??_USBStallHandler 0071                           __size_of_memset 001D  
               __end_of_configDescriptor1 0392                                   __ptext1 000D  
                                 __ptext2 0935                                   __ptext3 0667  
                                 __ptext4 0B14                                   __ptext5 04E4  
                                 __ptext6 08E1                                   __ptext7 08E9  
                                 __ptext8 08FB                                   __ptext9 0922  
                                 _inPipes 00E9                                   _get_adc 08E1  
             _USBDeferOUTDataStagePackets 0156                              ??_USBSuspend 007B  
                           _scan_task$844 005C                             _scan_task$845 005E  
              __end_of_set_clock_and_data 09F3                         __end_of_scan_init 0A49  
                       __end_of_scan_task 0712                                   _run_adc 08FB  
                      __end_of_USB_CD_Ptr 0329                                ??_get_data 0071  
              __size_of_SYSTEM_Initialize 001C           __size_of_USBCtrlTrfSetupHandler 0042  
                                 clrloop0 08EF                            _is_end_of_scan 0922  
                    end_of_initialization 0AB7                        __end_of_USB_SD_Ptr 0327  
                     _pBDTEntryEP0OutNext 007C                                   memset@c 0071  
                                 memset@n 0073                                   memset@p 0077  
                   __end_of_process_level 05BB                           _USB1msTickCount 0146  
                ?_USBStdFeatureReqHandler 0070                         __end_of_set_timer 0917  
                   ??_USBStdSetCfgHandler 007B                                _note_event 014E  
                      __end_of_USBSuspend 0976                   _USBCtrlEPAllowDataStage 0CF1  
                               _RCSTAbits 019D                              __pstringtext 0300  
                _USBCtrlEPServiceComplete 025E                                _wait_timer 0160  
              _USBStatusStageEnabledFlag1 0158                _USBStatusStageEnabledFlag2 0159  
                      USBEnableEndpoint@p 0050                                 _PORTAbits 000C  
          ?_APP_DeviceAudioMIDISOFHandler 0070                          __CFG_FOSC$INTOSC 0000  
                               _TRISAbits 008C                                 _TRISBbits 008D  
                               _TRISCbits 008E                        _ReceivedDataBuffer 00A0  
                  __end_of_is_end_of_scan 0935                        _BothEP0OutUOWNsSet 0152  
               USBStdSetCfgHandler@i_2034 005C                 USBConfigureEndpoint@EPNum 0076  
       __size_of_APP_DeviceAudioMIDITasks 014A                ?_USBCtrlEPAllowStatusStage 0070  
               ?_APP_DeviceAudioMIDITasks 0070       USER_USB_CALLBACK_EVENT_HANDLER@size 0058  
                               _USTATcopy 006F              __end_of_USBTransferOnePacket 07FF  
                          __end_of_LED_On 09D9                     __size_of_is_adc_ready 0005  
                 process_level@midi_shift 032C               process_level@filtered_state 0059  
                      __CFG_PLLEN$ENABLED 0000                    _USBCtrlTrfSetupHandler 0BBB  
                 process_level@key_states 0120                  __end_of_BUTTON_IsPressed 0948  
                   __end_of_USBDeviceInit 0667     __end_of_USBIncrement1msInternalTimers 098E  
  __size_of_USBIncrement1msInternalTimers 0018             _USBIncrement1msInternalTimers 0976  
                              LED_Off@led 0071                            __end_of_memset 0A2C  
                       _USBBusIsSuspended 0154                       start_initialization 0A92  
                 ?_USBStdGetStatusHandler 0070                     __end_of_BUTTON_Enable 090C  
           USBCtrlTrfRxService@byteToRead 0076                           ?_is_end_of_scan 0070  
                          _is_initialized 015D                              _is_adc_ready 08E9  
            __end_of_USBConfigureEndpoint 0BBB           __end_of_USBStdFeatureReqHandler 025E  
                                ??_LED_On 0071         __end_of_USBCtrlEPAllowStatusStage 0DB1  
                __end_of_USBCtrlEPService 0F00                 ??_USBCtrlEPAllowDataStage 0074  
                          USBDeviceInit@i 0076                            USBDeviceInit@p 0073  
                  _pBDTEntryEP0OutCurrent 006E                   USBTransferOnePacket@dir 0071  
                 USBTransferOnePacket@len 0074                       _USBStdGetDscHandler 0F00  
                                ??_memset 0075    __end_ofprocess_level@key_off_threshold 032B  
          process_level@key_off_threshold 032A                    BUTTON_IsPressed@button 0071  
                  _USBActiveConfiguration 00EE            __end_of_USBStdGetStatusHandler 0C9B  
               process_level@idx_midi_map 0301                     _waiting_for_timer$796 0071  
                                ?_LED_Off 0070                               __pbssCOMMON 007C  
                           __pcstackBANK0 0050              __size_of_USBCtrlTrfInHandler 006F  
                    ?_USBStdGetDscHandler 0070                         __size_of_get_data 0005  
              __end_of_USBWakeFromSuspend 0300                           _USBStallHandler 0A49  
                            _pBDTEntryOut 0150            ?_APP_DeviceAudioMIDIInitialize 0070  
                               __pswtext1 081A                                 __pswtext2 0800  
                               __pswtext3 0826                                 __pswtext4 0830  
                               __pswtext5 083A                                  ?_get_adc 0070  
                    _USBTransferOnePacket 07AF                                 _msCounter 00E5  
            process_level@key_off_counter 01A4              __end_of_USBCtrlTrfOutHandler 0B14  
                   ??_USBStdGetDscHandler 0071                               _ep_data_out 014C  
                                ?_run_adc 0070              __size_of_USBCtrlTrfRxService 009D  
           USBConfigureEndpoint@direction 0071                  __size_of_store_key_level 002F  
                               _scan_init 0A2C                                 _scan_task 0667  
            __size_of_USBCtrlTrfTxService 0070                                  _LATCbits 010E  
              ??_USBCtrlEPServiceComplete 0076                                 clear_ram0 08EE  
                      _set_clock_and_data 09D9                                  _PIE1bits 0091  
                                _PIE2bits 0092                         _waiting_for_timer 0917  
                                _PIR2bits 0012                 USBCtrlEPService@setup_cnt 0065  
                      ?_waiting_for_timer 0070                                 _set_timer 090C  
                                _UEP0bits 0E98                _USBDeferINDataStagePackets 0155  
             __size_of_USBCheckStdRequest 0056                       ?_set_clock_and_data 0071  
                                _UCONbits 0E8E                      _USBConfigureEndpoint 0B7C  
         __end_ofprocess_level@midi_shift 032D          __size_of_USBStdFeatureReqHandler 0107  
        __end_of_APP_DeviceAudioMIDITasks 0157                       ??_waiting_for_timer 0071  
                              _ADCON0bits 009D                                _ADCON1bits 009E  
                              _ADCON2bits 009F                     ?_USBTransferOnePacket 0071  
                       _SYS_InterruptHigh 0004                              _RemoteWakeup 0153  
                        __size_of_LED_Off 0019                        ?_SYS_InterruptHigh 0070  
                       _process_level$833 0057                         _process_level$834 0054  
                 __end_of_USBStallHandler 0A6D                      ??_set_clock_and_data 0072  
             ??_USBCtrlEPAllowStatusStage 0071               __end_of_USBStdSetCfgHandler 1000  
                              ?_scan_init 0070                                ?_scan_task 005B  
                     ??_SYS_InterruptHigh 0070                 __end_of_waiting_for_timer 0922  
         ??_APP_DeviceAudioMIDISOFHandler 0071                        __end_of_device_dsc 03F2  
                ??_APP_LEDUpdateUSBStatus 0072                   ?_USBCtrlTrfSetupHandler 0070  
                 USBStdGetStatusHandler@p 0072                    USBTransferOnePacket@ep 0077  
                              ?_set_timer 0070                                  _SetupPkt 0040  
                   ?_USBConfigureEndpoint 0071                         ?_BUTTON_IsPressed 0070  
               __end_of_SYS_InterruptHigh 000B                        __end_of__stringtab 0301  
                      ??_BUTTON_IsPressed 0071                          ??_is_end_of_scan 0071  
                              _ANSELAbits 018C                                _ANSELBbits 018D  
                              _ANSELCbits 018E                          __size_of_get_adc 0003  
                  __size_of_process_level 00D7                   __size_of_USBDeviceTasks 00EE  
                                __ptext10 08E4                                  __ptext11 09D9  
                                __ptext20 0BBB                                  __ptext12 0917  
                                __ptext21 0C9B                                  __ptext13 090C  
                                __ptext30 0D48                                  __ptext22 0157  
                                __ptext14 0A2C                                  __ptext31 0A49  
                                __ptext23 0C4C                                  __ptext15 03F6  
                                __ptext40 08F4                                  __ptext32 0976  
                                __ptext24 0F00                                  __ptext16 0E90  
                                __ptext41 0BFD                                  __ptext33 095E  
                                __ptext25 0F7F                                  __ptext17 0DB1  
                                __ptext42 09C0                                  __ptext34 02E4  
                                __ptext26 0A0F                                  __ptext18 0AE5  
                                __ptext43 09A7                                  __ptext35 0B43  
                                __ptext27 025E                                  __ptext19 0712  
                                __ptext44 05BB                                  __ptext36 0ABA  
                                __ptext28 0CF1                                  __ptext45 09F3  
                                __ptext37 07AF                                  __ptext29 0E20  
                                __ptext46 0902                                  __ptext38 0A6D  
                                __ptext47 098E                                  __ptext39 0B7C  
                                _get_data 08E4                          __size_of_run_adc 0007  
                                _midiData 01A0            __end_of_USBCtrlTrfSetupHandler 0BFD  
                           __size_of_main 0016                         ?_USBCtrlEPService 0070  
                      ??_USBCtrlEPService 0062                         ??_store_key_level 0078  
                     _USBCtrlTrfInHandler 0DB1                       BUTTON_Enable@button 0071  
                                _outPipes 0140                      _USBCtrlTrfOutHandler 0AE5  
               _USBCtrlEPAllowStatusStage 0D48                                _LED_Enable 098E  
                  ??_USBTransferOnePacket 0075                 _USBDeferStatusStagePacket 00E2  
                              _INTCONbits 000B                      ?_USBCtrlTrfInHandler 0070  
                _APP_DeviceAudioMIDITasks 000D             USBCtrlTrfTxService@byteToSend 0073  
                                memset@p1 0076                          ?_USBStallHandler 0070  
                USBStdFeatureReqHandler@p 005F                                  intlevel1 0000  
                             ??_scan_init 0071                               ??_scan_task 007B  
                  __size_of_USBDeviceInit 00AC   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0B7C  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 0039          ?_USER_USB_CALLBACK_EVENT_HANDLER 0055  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 007B           _USER_USB_CALLBACK_EVENT_HANDLER 0B43  
              __size_of_waiting_for_timer 000B         __end_ofprocess_level@idx_midi_map 0321  
                       __CFG_CLKOUTEN$OFF 0000                             _process_level 04E4  
                             _sentNoteOff 015F           __size_of_APP_LEDUpdateUSBStatus 004F  
   __end_of_APP_DeviceAudioMIDISOFHandler 08FB    __size_of_APP_DeviceAudioMIDISOFHandler 0007  
           _APP_DeviceAudioMIDISOFHandler 08F4                               ??_set_timer 0071  
                  ??_USBConfigureEndpoint 0072                     ?_USBCtrlTrfOutHandler 0070  
                  __size_of_BUTTON_Enable 000A                      __CFG_CPUDIV$NOCLKDIV 0000  
                     _USBCtrlTrfRxService 0712                        _USBWakeFromSuspend 02E4  
                 _USBStdFeatureReqHandler 0157                       _USBCtrlTrfTxService 0E20  
              __size_of_SYS_InterruptHigh 0007           ??_APP_DeviceAudioMIDIInitialize 0053  
                     ?_USBWakeFromSuspend 0070                     ??_USBCtrlTrfInHandler 0074  
                   _USBAlternateInterface 00EF                       USBEnableEndpoint@ep 0052  
                         _endpoint_number 015C                      ?_USBCtrlTrfRxService 0070  
                ?_USBCtrlEPAllowDataStage 0070                      ?_USBCtrlTrfTxService 0070  
                          ?_process_level 0072              _USBStatusStageTimeoutCounter 015A  
                    ??_USBWakeFromSuspend 007B                USBTransferOnePacket@handle 0078  
                              _USB_CD_Ptr 0327          APP_DeviceAudioMIDITasks@velocity 006A  
