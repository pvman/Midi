

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri May 20 22:37:01 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	swtext1,local,class=CONST,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	swtext2,local,class=CONST,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	swtext3,local,class=CONST,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	swtext4,local,class=CONST,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	swtext5,local,class=CONST,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,delta=2
    67                           	psect	text47,local,class=CODE,merge=1,delta=2
    68                           	psect	intentry,global,class=CODE,delta=2
    69                           	dabs	1,0x20,32,_BDT
    70                           	dabs	1,0x48,8,_CtrlTrfData
    71                           	dabs	1,0x40,8,_SetupPkt
    72                           	dabs	1,0xA0,64,_ReceivedDataBuffer
    73                           	dabs	1,0x1A0,4,_midiData
    74                           	dabs	1,0x7E,2
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  0111                     	;# 
   122  0112                     	;# 
   123  0113                     	;# 
   124  0114                     	;# 
   125  0115                     	;# 
   126  0116                     	;# 
   127  0117                     	;# 
   128  0118                     	;# 
   129  0119                     	;# 
   130  011D                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  018E                     	;# 
   134  0191                     	;# 
   135  0191                     	;# 
   136  0192                     	;# 
   137  0193                     	;# 
   138  0193                     	;# 
   139  0194                     	;# 
   140  0195                     	;# 
   141  0196                     	;# 
   142  0197                     	;# 
   143  0199                     	;# 
   144  019A                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019C                     	;# 
   148  019D                     	;# 
   149  019E                     	;# 
   150  019F                     	;# 
   151  020C                     	;# 
   152  020D                     	;# 
   153  0211                     	;# 
   154  0211                     	;# 
   155  0212                     	;# 
   156  0212                     	;# 
   157  0213                     	;# 
   158  0213                     	;# 
   159  0214                     	;# 
   160  0214                     	;# 
   161  0215                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0216                     	;# 
   165  0216                     	;# 
   166  0217                     	;# 
   167  0217                     	;# 
   168  0391                     	;# 
   169  0392                     	;# 
   170  0393                     	;# 
   171  0394                     	;# 
   172  0395                     	;# 
   173  0396                     	;# 
   174  039A                     	;# 
   175  039B                     	;# 
   176  0611                     	;# 
   177  0612                     	;# 
   178  0613                     	;# 
   179  0613                     	;# 
   180  0614                     	;# 
   181  0615                     	;# 
   182  0616                     	;# 
   183  0616                     	;# 
   184  0691                     	;# 
   185  0692                     	;# 
   186  0693                     	;# 
   187  0694                     	;# 
   188  0695                     	;# 
   189  0E8E                     	;# 
   190  0E8F                     	;# 
   191  0E90                     	;# 
   192  0E91                     	;# 
   193  0E92                     	;# 
   194  0E93                     	;# 
   195  0E94                     	;# 
   196  0E94                     	;# 
   197  0E95                     	;# 
   198  0E96                     	;# 
   199  0E97                     	;# 
   200  0E98                     	;# 
   201  0E99                     	;# 
   202  0E9A                     	;# 
   203  0E9B                     	;# 
   204  0E9C                     	;# 
   205  0E9D                     	;# 
   206  0E9E                     	;# 
   207  0E9F                     	;# 
   208  0FE4                     	;# 
   209  0FE5                     	;# 
   210  0FE6                     	;# 
   211  0FE7                     	;# 
   212  0FE8                     	;# 
   213  0FE9                     	;# 
   214  0FEA                     	;# 
   215  0FEB                     	;# 
   216  0FED                     	;# 
   217  0FEE                     	;# 
   218  0FEF                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0095                     	;# 
   251  0096                     	;# 
   252  0097                     	;# 
   253  0098                     	;# 
   254  0099                     	;# 
   255  009A                     	;# 
   256  009B                     	;# 
   257  009B                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009E                     	;# 
   261  009F                     	;# 
   262  010C                     	;# 
   263  010D                     	;# 
   264  010E                     	;# 
   265  0111                     	;# 
   266  0112                     	;# 
   267  0113                     	;# 
   268  0114                     	;# 
   269  0115                     	;# 
   270  0116                     	;# 
   271  0117                     	;# 
   272  0118                     	;# 
   273  0119                     	;# 
   274  011D                     	;# 
   275  018C                     	;# 
   276  018D                     	;# 
   277  018E                     	;# 
   278  0191                     	;# 
   279  0191                     	;# 
   280  0192                     	;# 
   281  0193                     	;# 
   282  0193                     	;# 
   283  0194                     	;# 
   284  0195                     	;# 
   285  0196                     	;# 
   286  0197                     	;# 
   287  0199                     	;# 
   288  019A                     	;# 
   289  019B                     	;# 
   290  019B                     	;# 
   291  019C                     	;# 
   292  019D                     	;# 
   293  019E                     	;# 
   294  019F                     	;# 
   295  020C                     	;# 
   296  020D                     	;# 
   297  0211                     	;# 
   298  0211                     	;# 
   299  0212                     	;# 
   300  0212                     	;# 
   301  0213                     	;# 
   302  0213                     	;# 
   303  0214                     	;# 
   304  0214                     	;# 
   305  0215                     	;# 
   306  0215                     	;# 
   307  0215                     	;# 
   308  0216                     	;# 
   309  0216                     	;# 
   310  0217                     	;# 
   311  0217                     	;# 
   312  0391                     	;# 
   313  0392                     	;# 
   314  0393                     	;# 
   315  0394                     	;# 
   316  0395                     	;# 
   317  0396                     	;# 
   318  039A                     	;# 
   319  039B                     	;# 
   320  0611                     	;# 
   321  0612                     	;# 
   322  0613                     	;# 
   323  0613                     	;# 
   324  0614                     	;# 
   325  0615                     	;# 
   326  0616                     	;# 
   327  0616                     	;# 
   328  0691                     	;# 
   329  0692                     	;# 
   330  0693                     	;# 
   331  0694                     	;# 
   332  0695                     	;# 
   333  0E8E                     	;# 
   334  0E8F                     	;# 
   335  0E90                     	;# 
   336  0E91                     	;# 
   337  0E92                     	;# 
   338  0E93                     	;# 
   339  0E94                     	;# 
   340  0E94                     	;# 
   341  0E95                     	;# 
   342  0E96                     	;# 
   343  0E97                     	;# 
   344  0E98                     	;# 
   345  0E99                     	;# 
   346  0E9A                     	;# 
   347  0E9B                     	;# 
   348  0E9C                     	;# 
   349  0E9D                     	;# 
   350  0E9E                     	;# 
   351  0E9F                     	;# 
   352  0FE4                     	;# 
   353  0FE5                     	;# 
   354  0FE6                     	;# 
   355  0FE7                     	;# 
   356  0FE8                     	;# 
   357  0FE9                     	;# 
   358  0FEA                     	;# 
   359  0FEB                     	;# 
   360  0FED                     	;# 
   361  0FEE                     	;# 
   362  0FEF                     	;# 
   363  0000                     	;# 
   364  0001                     	;# 
   365  0002                     	;# 
   366  0003                     	;# 
   367  0004                     	;# 
   368  0005                     	;# 
   369  0006                     	;# 
   370  0007                     	;# 
   371  0008                     	;# 
   372  0009                     	;# 
   373  000A                     	;# 
   374  000B                     	;# 
   375  000C                     	;# 
   376  000D                     	;# 
   377  000E                     	;# 
   378  0011                     	;# 
   379  0012                     	;# 
   380  0015                     	;# 
   381  0016                     	;# 
   382  0016                     	;# 
   383  0017                     	;# 
   384  0018                     	;# 
   385  0019                     	;# 
   386  001A                     	;# 
   387  001B                     	;# 
   388  001C                     	;# 
   389  008C                     	;# 
   390  008D                     	;# 
   391  008E                     	;# 
   392  0091                     	;# 
   393  0092                     	;# 
   394  0095                     	;# 
   395  0096                     	;# 
   396  0097                     	;# 
   397  0098                     	;# 
   398  0099                     	;# 
   399  009A                     	;# 
   400  009B                     	;# 
   401  009B                     	;# 
   402  009C                     	;# 
   403  009D                     	;# 
   404  009E                     	;# 
   405  009F                     	;# 
   406  010C                     	;# 
   407  010D                     	;# 
   408  010E                     	;# 
   409  0111                     	;# 
   410  0112                     	;# 
   411  0113                     	;# 
   412  0114                     	;# 
   413  0115                     	;# 
   414  0116                     	;# 
   415  0117                     	;# 
   416  0118                     	;# 
   417  0119                     	;# 
   418  011D                     	;# 
   419  018C                     	;# 
   420  018D                     	;# 
   421  018E                     	;# 
   422  0191                     	;# 
   423  0191                     	;# 
   424  0192                     	;# 
   425  0193                     	;# 
   426  0193                     	;# 
   427  0194                     	;# 
   428  0195                     	;# 
   429  0196                     	;# 
   430  0197                     	;# 
   431  0199                     	;# 
   432  019A                     	;# 
   433  019B                     	;# 
   434  019B                     	;# 
   435  019C                     	;# 
   436  019D                     	;# 
   437  019E                     	;# 
   438  019F                     	;# 
   439  020C                     	;# 
   440  020D                     	;# 
   441  0211                     	;# 
   442  0211                     	;# 
   443  0212                     	;# 
   444  0212                     	;# 
   445  0213                     	;# 
   446  0213                     	;# 
   447  0214                     	;# 
   448  0214                     	;# 
   449  0215                     	;# 
   450  0215                     	;# 
   451  0215                     	;# 
   452  0216                     	;# 
   453  0216                     	;# 
   454  0217                     	;# 
   455  0217                     	;# 
   456  0391                     	;# 
   457  0392                     	;# 
   458  0393                     	;# 
   459  0394                     	;# 
   460  0395                     	;# 
   461  0396                     	;# 
   462  039A                     	;# 
   463  039B                     	;# 
   464  0611                     	;# 
   465  0612                     	;# 
   466  0613                     	;# 
   467  0613                     	;# 
   468  0614                     	;# 
   469  0615                     	;# 
   470  0616                     	;# 
   471  0616                     	;# 
   472  0691                     	;# 
   473  0692                     	;# 
   474  0693                     	;# 
   475  0694                     	;# 
   476  0695                     	;# 
   477  0E8E                     	;# 
   478  0E8F                     	;# 
   479  0E90                     	;# 
   480  0E91                     	;# 
   481  0E92                     	;# 
   482  0E93                     	;# 
   483  0E94                     	;# 
   484  0E94                     	;# 
   485  0E95                     	;# 
   486  0E96                     	;# 
   487  0E97                     	;# 
   488  0E98                     	;# 
   489  0E99                     	;# 
   490  0E9A                     	;# 
   491  0E9B                     	;# 
   492  0E9C                     	;# 
   493  0E9D                     	;# 
   494  0E9E                     	;# 
   495  0E9F                     	;# 
   496  0FE4                     	;# 
   497  0FE5                     	;# 
   498  0FE6                     	;# 
   499  0FE7                     	;# 
   500  0FE8                     	;# 
   501  0FE9                     	;# 
   502  0FEA                     	;# 
   503  0FEB                     	;# 
   504  0FED                     	;# 
   505  0FEE                     	;# 
   506  0FEF                     	;# 
   507  0000                     	;# 
   508  0001                     	;# 
   509  0002                     	;# 
   510  0003                     	;# 
   511  0004                     	;# 
   512  0005                     	;# 
   513  0006                     	;# 
   514  0007                     	;# 
   515  0008                     	;# 
   516  0009                     	;# 
   517  000A                     	;# 
   518  000B                     	;# 
   519  000C                     	;# 
   520  000D                     	;# 
   521  000E                     	;# 
   522  0011                     	;# 
   523  0012                     	;# 
   524  0015                     	;# 
   525  0016                     	;# 
   526  0016                     	;# 
   527  0017                     	;# 
   528  0018                     	;# 
   529  0019                     	;# 
   530  001A                     	;# 
   531  001B                     	;# 
   532  001C                     	;# 
   533  008C                     	;# 
   534  008D                     	;# 
   535  008E                     	;# 
   536  0091                     	;# 
   537  0092                     	;# 
   538  0095                     	;# 
   539  0096                     	;# 
   540  0097                     	;# 
   541  0098                     	;# 
   542  0099                     	;# 
   543  009A                     	;# 
   544  009B                     	;# 
   545  009B                     	;# 
   546  009C                     	;# 
   547  009D                     	;# 
   548  009E                     	;# 
   549  009F                     	;# 
   550  010C                     	;# 
   551  010D                     	;# 
   552  010E                     	;# 
   553  0111                     	;# 
   554  0112                     	;# 
   555  0113                     	;# 
   556  0114                     	;# 
   557  0115                     	;# 
   558  0116                     	;# 
   559  0117                     	;# 
   560  0118                     	;# 
   561  0119                     	;# 
   562  011D                     	;# 
   563  018C                     	;# 
   564  018D                     	;# 
   565  018E                     	;# 
   566  0191                     	;# 
   567  0191                     	;# 
   568  0192                     	;# 
   569  0193                     	;# 
   570  0193                     	;# 
   571  0194                     	;# 
   572  0195                     	;# 
   573  0196                     	;# 
   574  0197                     	;# 
   575  0199                     	;# 
   576  019A                     	;# 
   577  019B                     	;# 
   578  019B                     	;# 
   579  019C                     	;# 
   580  019D                     	;# 
   581  019E                     	;# 
   582  019F                     	;# 
   583  020C                     	;# 
   584  020D                     	;# 
   585  0211                     	;# 
   586  0211                     	;# 
   587  0212                     	;# 
   588  0212                     	;# 
   589  0213                     	;# 
   590  0213                     	;# 
   591  0214                     	;# 
   592  0214                     	;# 
   593  0215                     	;# 
   594  0215                     	;# 
   595  0215                     	;# 
   596  0216                     	;# 
   597  0216                     	;# 
   598  0217                     	;# 
   599  0217                     	;# 
   600  0391                     	;# 
   601  0392                     	;# 
   602  0393                     	;# 
   603  0394                     	;# 
   604  0395                     	;# 
   605  0396                     	;# 
   606  039A                     	;# 
   607  039B                     	;# 
   608  0611                     	;# 
   609  0612                     	;# 
   610  0613                     	;# 
   611  0613                     	;# 
   612  0614                     	;# 
   613  0615                     	;# 
   614  0616                     	;# 
   615  0616                     	;# 
   616  0691                     	;# 
   617  0692                     	;# 
   618  0693                     	;# 
   619  0694                     	;# 
   620  0695                     	;# 
   621  0E8E                     	;# 
   622  0E8F                     	;# 
   623  0E90                     	;# 
   624  0E91                     	;# 
   625  0E92                     	;# 
   626  0E93                     	;# 
   627  0E94                     	;# 
   628  0E94                     	;# 
   629  0E95                     	;# 
   630  0E96                     	;# 
   631  0E97                     	;# 
   632  0E98                     	;# 
   633  0E99                     	;# 
   634  0E9A                     	;# 
   635  0E9B                     	;# 
   636  0E9C                     	;# 
   637  0E9D                     	;# 
   638  0E9E                     	;# 
   639  0E9F                     	;# 
   640  0FE4                     	;# 
   641  0FE5                     	;# 
   642  0FE6                     	;# 
   643  0FE7                     	;# 
   644  0FE8                     	;# 
   645  0FE9                     	;# 
   646  0FEA                     	;# 
   647  0FEB                     	;# 
   648  0FED                     	;# 
   649  0FEE                     	;# 
   650  0FEF                     	;# 
   651  0000                     	;# 
   652  0001                     	;# 
   653  0002                     	;# 
   654  0003                     	;# 
   655  0004                     	;# 
   656  0005                     	;# 
   657  0006                     	;# 
   658  0007                     	;# 
   659  0008                     	;# 
   660  0009                     	;# 
   661  000A                     	;# 
   662  000B                     	;# 
   663  000C                     	;# 
   664  000D                     	;# 
   665  000E                     	;# 
   666  0011                     	;# 
   667  0012                     	;# 
   668  0015                     	;# 
   669  0016                     	;# 
   670  0016                     	;# 
   671  0017                     	;# 
   672  0018                     	;# 
   673  0019                     	;# 
   674  001A                     	;# 
   675  001B                     	;# 
   676  001C                     	;# 
   677  008C                     	;# 
   678  008D                     	;# 
   679  008E                     	;# 
   680  0091                     	;# 
   681  0092                     	;# 
   682  0095                     	;# 
   683  0096                     	;# 
   684  0097                     	;# 
   685  0098                     	;# 
   686  0099                     	;# 
   687  009A                     	;# 
   688  009B                     	;# 
   689  009B                     	;# 
   690  009C                     	;# 
   691  009D                     	;# 
   692  009E                     	;# 
   693  009F                     	;# 
   694  010C                     	;# 
   695  010D                     	;# 
   696  010E                     	;# 
   697  0111                     	;# 
   698  0112                     	;# 
   699  0113                     	;# 
   700  0114                     	;# 
   701  0115                     	;# 
   702  0116                     	;# 
   703  0117                     	;# 
   704  0118                     	;# 
   705  0119                     	;# 
   706  011D                     	;# 
   707  018C                     	;# 
   708  018D                     	;# 
   709  018E                     	;# 
   710  0191                     	;# 
   711  0191                     	;# 
   712  0192                     	;# 
   713  0193                     	;# 
   714  0193                     	;# 
   715  0194                     	;# 
   716  0195                     	;# 
   717  0196                     	;# 
   718  0197                     	;# 
   719  0199                     	;# 
   720  019A                     	;# 
   721  019B                     	;# 
   722  019B                     	;# 
   723  019C                     	;# 
   724  019D                     	;# 
   725  019E                     	;# 
   726  019F                     	;# 
   727  020C                     	;# 
   728  020D                     	;# 
   729  0211                     	;# 
   730  0211                     	;# 
   731  0212                     	;# 
   732  0212                     	;# 
   733  0213                     	;# 
   734  0213                     	;# 
   735  0214                     	;# 
   736  0214                     	;# 
   737  0215                     	;# 
   738  0215                     	;# 
   739  0215                     	;# 
   740  0216                     	;# 
   741  0216                     	;# 
   742  0217                     	;# 
   743  0217                     	;# 
   744  0391                     	;# 
   745  0392                     	;# 
   746  0393                     	;# 
   747  0394                     	;# 
   748  0395                     	;# 
   749  0396                     	;# 
   750  039A                     	;# 
   751  039B                     	;# 
   752  0611                     	;# 
   753  0612                     	;# 
   754  0613                     	;# 
   755  0613                     	;# 
   756  0614                     	;# 
   757  0615                     	;# 
   758  0616                     	;# 
   759  0616                     	;# 
   760  0691                     	;# 
   761  0692                     	;# 
   762  0693                     	;# 
   763  0694                     	;# 
   764  0695                     	;# 
   765  0E8E                     	;# 
   766  0E8F                     	;# 
   767  0E90                     	;# 
   768  0E91                     	;# 
   769  0E92                     	;# 
   770  0E93                     	;# 
   771  0E94                     	;# 
   772  0E94                     	;# 
   773  0E95                     	;# 
   774  0E96                     	;# 
   775  0E97                     	;# 
   776  0E98                     	;# 
   777  0E99                     	;# 
   778  0E9A                     	;# 
   779  0E9B                     	;# 
   780  0E9C                     	;# 
   781  0E9D                     	;# 
   782  0E9E                     	;# 
   783  0E9F                     	;# 
   784  0FE4                     	;# 
   785  0FE5                     	;# 
   786  0FE6                     	;# 
   787  0FE7                     	;# 
   788  0FE8                     	;# 
   789  0FE9                     	;# 
   790  0FEA                     	;# 
   791  0FEB                     	;# 
   792  0FED                     	;# 
   793  0FEE                     	;# 
   794  0FEF                     	;# 
   795  0000                     	;# 
   796  0001                     	;# 
   797  0002                     	;# 
   798  0003                     	;# 
   799  0004                     	;# 
   800  0005                     	;# 
   801  0006                     	;# 
   802  0007                     	;# 
   803  0008                     	;# 
   804  0009                     	;# 
   805  000A                     	;# 
   806  000B                     	;# 
   807  000C                     	;# 
   808  000D                     	;# 
   809  000E                     	;# 
   810  0011                     	;# 
   811  0012                     	;# 
   812  0015                     	;# 
   813  0016                     	;# 
   814  0016                     	;# 
   815  0017                     	;# 
   816  0018                     	;# 
   817  0019                     	;# 
   818  001A                     	;# 
   819  001B                     	;# 
   820  001C                     	;# 
   821  008C                     	;# 
   822  008D                     	;# 
   823  008E                     	;# 
   824  0091                     	;# 
   825  0092                     	;# 
   826  0095                     	;# 
   827  0096                     	;# 
   828  0097                     	;# 
   829  0098                     	;# 
   830  0099                     	;# 
   831  009A                     	;# 
   832  009B                     	;# 
   833  009B                     	;# 
   834  009C                     	;# 
   835  009D                     	;# 
   836  009E                     	;# 
   837  009F                     	;# 
   838  010C                     	;# 
   839  010D                     	;# 
   840  010E                     	;# 
   841  0111                     	;# 
   842  0112                     	;# 
   843  0113                     	;# 
   844  0114                     	;# 
   845  0115                     	;# 
   846  0116                     	;# 
   847  0117                     	;# 
   848  0118                     	;# 
   849  0119                     	;# 
   850  011D                     	;# 
   851  018C                     	;# 
   852  018D                     	;# 
   853  018E                     	;# 
   854  0191                     	;# 
   855  0191                     	;# 
   856  0192                     	;# 
   857  0193                     	;# 
   858  0193                     	;# 
   859  0194                     	;# 
   860  0195                     	;# 
   861  0196                     	;# 
   862  0197                     	;# 
   863  0199                     	;# 
   864  019A                     	;# 
   865  019B                     	;# 
   866  019B                     	;# 
   867  019C                     	;# 
   868  019D                     	;# 
   869  019E                     	;# 
   870  019F                     	;# 
   871  020C                     	;# 
   872  020D                     	;# 
   873  0211                     	;# 
   874  0211                     	;# 
   875  0212                     	;# 
   876  0212                     	;# 
   877  0213                     	;# 
   878  0213                     	;# 
   879  0214                     	;# 
   880  0214                     	;# 
   881  0215                     	;# 
   882  0215                     	;# 
   883  0215                     	;# 
   884  0216                     	;# 
   885  0216                     	;# 
   886  0217                     	;# 
   887  0217                     	;# 
   888  0391                     	;# 
   889  0392                     	;# 
   890  0393                     	;# 
   891  0394                     	;# 
   892  0395                     	;# 
   893  0396                     	;# 
   894  039A                     	;# 
   895  039B                     	;# 
   896  0611                     	;# 
   897  0612                     	;# 
   898  0613                     	;# 
   899  0613                     	;# 
   900  0614                     	;# 
   901  0615                     	;# 
   902  0616                     	;# 
   903  0616                     	;# 
   904  0691                     	;# 
   905  0692                     	;# 
   906  0693                     	;# 
   907  0694                     	;# 
   908  0695                     	;# 
   909  0E8E                     	;# 
   910  0E8F                     	;# 
   911  0E90                     	;# 
   912  0E91                     	;# 
   913  0E92                     	;# 
   914  0E93                     	;# 
   915  0E94                     	;# 
   916  0E94                     	;# 
   917  0E95                     	;# 
   918  0E96                     	;# 
   919  0E97                     	;# 
   920  0E98                     	;# 
   921  0E99                     	;# 
   922  0E9A                     	;# 
   923  0E9B                     	;# 
   924  0E9C                     	;# 
   925  0E9D                     	;# 
   926  0E9E                     	;# 
   927  0E9F                     	;# 
   928  0FE4                     	;# 
   929  0FE5                     	;# 
   930  0FE6                     	;# 
   931  0FE7                     	;# 
   932  0FE8                     	;# 
   933  0FE9                     	;# 
   934  0FEA                     	;# 
   935  0FEB                     	;# 
   936  0FED                     	;# 
   937  0FEE                     	;# 
   938  0FEF                     	;# 
   939  0000                     	;# 
   940  0001                     	;# 
   941  0002                     	;# 
   942  0003                     	;# 
   943  0004                     	;# 
   944  0005                     	;# 
   945  0006                     	;# 
   946  0007                     	;# 
   947  0008                     	;# 
   948  0009                     	;# 
   949  000A                     	;# 
   950  000B                     	;# 
   951  000C                     	;# 
   952  000D                     	;# 
   953  000E                     	;# 
   954  0011                     	;# 
   955  0012                     	;# 
   956  0015                     	;# 
   957  0016                     	;# 
   958  0016                     	;# 
   959  0017                     	;# 
   960  0018                     	;# 
   961  0019                     	;# 
   962  001A                     	;# 
   963  001B                     	;# 
   964  001C                     	;# 
   965  008C                     	;# 
   966  008D                     	;# 
   967  008E                     	;# 
   968  0091                     	;# 
   969  0092                     	;# 
   970  0095                     	;# 
   971  0096                     	;# 
   972  0097                     	;# 
   973  0098                     	;# 
   974  0099                     	;# 
   975  009A                     	;# 
   976  009B                     	;# 
   977  009B                     	;# 
   978  009C                     	;# 
   979  009D                     	;# 
   980  009E                     	;# 
   981  009F                     	;# 
   982  010C                     	;# 
   983  010D                     	;# 
   984  010E                     	;# 
   985  0111                     	;# 
   986  0112                     	;# 
   987  0113                     	;# 
   988  0114                     	;# 
   989  0115                     	;# 
   990  0116                     	;# 
   991  0117                     	;# 
   992  0118                     	;# 
   993  0119                     	;# 
   994  011D                     	;# 
   995  018C                     	;# 
   996  018D                     	;# 
   997  018E                     	;# 
   998  0191                     	;# 
   999  0191                     	;# 
  1000  0192                     	;# 
  1001  0193                     	;# 
  1002  0193                     	;# 
  1003  0194                     	;# 
  1004  0195                     	;# 
  1005  0196                     	;# 
  1006  0197                     	;# 
  1007  0199                     	;# 
  1008  019A                     	;# 
  1009  019B                     	;# 
  1010  019B                     	;# 
  1011  019C                     	;# 
  1012  019D                     	;# 
  1013  019E                     	;# 
  1014  019F                     	;# 
  1015  020C                     	;# 
  1016  020D                     	;# 
  1017  0211                     	;# 
  1018  0211                     	;# 
  1019  0212                     	;# 
  1020  0212                     	;# 
  1021  0213                     	;# 
  1022  0213                     	;# 
  1023  0214                     	;# 
  1024  0214                     	;# 
  1025  0215                     	;# 
  1026  0215                     	;# 
  1027  0215                     	;# 
  1028  0216                     	;# 
  1029  0216                     	;# 
  1030  0217                     	;# 
  1031  0217                     	;# 
  1032  0391                     	;# 
  1033  0392                     	;# 
  1034  0393                     	;# 
  1035  0394                     	;# 
  1036  0395                     	;# 
  1037  0396                     	;# 
  1038  039A                     	;# 
  1039  039B                     	;# 
  1040  0611                     	;# 
  1041  0612                     	;# 
  1042  0613                     	;# 
  1043  0613                     	;# 
  1044  0614                     	;# 
  1045  0615                     	;# 
  1046  0616                     	;# 
  1047  0616                     	;# 
  1048  0691                     	;# 
  1049  0692                     	;# 
  1050  0693                     	;# 
  1051  0694                     	;# 
  1052  0695                     	;# 
  1053  0E8E                     	;# 
  1054  0E8F                     	;# 
  1055  0E90                     	;# 
  1056  0E91                     	;# 
  1057  0E92                     	;# 
  1058  0E93                     	;# 
  1059  0E94                     	;# 
  1060  0E94                     	;# 
  1061  0E95                     	;# 
  1062  0E96                     	;# 
  1063  0E97                     	;# 
  1064  0E98                     	;# 
  1065  0E99                     	;# 
  1066  0E9A                     	;# 
  1067  0E9B                     	;# 
  1068  0E9C                     	;# 
  1069  0E9D                     	;# 
  1070  0E9E                     	;# 
  1071  0E9F                     	;# 
  1072  0FE4                     	;# 
  1073  0FE5                     	;# 
  1074  0FE6                     	;# 
  1075  0FE7                     	;# 
  1076  0FE8                     	;# 
  1077  0FE9                     	;# 
  1078  0FEA                     	;# 
  1079  0FEB                     	;# 
  1080  0FED                     	;# 
  1081  0FEE                     	;# 
  1082  0FEF                     	;# 
  1083  0000                     	;# 
  1084  0001                     	;# 
  1085  0002                     	;# 
  1086  0003                     	;# 
  1087  0004                     	;# 
  1088  0005                     	;# 
  1089  0006                     	;# 
  1090  0007                     	;# 
  1091  0008                     	;# 
  1092  0009                     	;# 
  1093  000A                     	;# 
  1094  000B                     	;# 
  1095  000C                     	;# 
  1096  000D                     	;# 
  1097  000E                     	;# 
  1098  0011                     	;# 
  1099  0012                     	;# 
  1100  0015                     	;# 
  1101  0016                     	;# 
  1102  0016                     	;# 
  1103  0017                     	;# 
  1104  0018                     	;# 
  1105  0019                     	;# 
  1106  001A                     	;# 
  1107  001B                     	;# 
  1108  001C                     	;# 
  1109  008C                     	;# 
  1110  008D                     	;# 
  1111  008E                     	;# 
  1112  0091                     	;# 
  1113  0092                     	;# 
  1114  0095                     	;# 
  1115  0096                     	;# 
  1116  0097                     	;# 
  1117  0098                     	;# 
  1118  0099                     	;# 
  1119  009A                     	;# 
  1120  009B                     	;# 
  1121  009B                     	;# 
  1122  009C                     	;# 
  1123  009D                     	;# 
  1124  009E                     	;# 
  1125  009F                     	;# 
  1126  010C                     	;# 
  1127  010D                     	;# 
  1128  010E                     	;# 
  1129  0111                     	;# 
  1130  0112                     	;# 
  1131  0113                     	;# 
  1132  0114                     	;# 
  1133  0115                     	;# 
  1134  0116                     	;# 
  1135  0117                     	;# 
  1136  0118                     	;# 
  1137  0119                     	;# 
  1138  011D                     	;# 
  1139  018C                     	;# 
  1140  018D                     	;# 
  1141  018E                     	;# 
  1142  0191                     	;# 
  1143  0191                     	;# 
  1144  0192                     	;# 
  1145  0193                     	;# 
  1146  0193                     	;# 
  1147  0194                     	;# 
  1148  0195                     	;# 
  1149  0196                     	;# 
  1150  0197                     	;# 
  1151  0199                     	;# 
  1152  019A                     	;# 
  1153  019B                     	;# 
  1154  019B                     	;# 
  1155  019C                     	;# 
  1156  019D                     	;# 
  1157  019E                     	;# 
  1158  019F                     	;# 
  1159  020C                     	;# 
  1160  020D                     	;# 
  1161  0211                     	;# 
  1162  0211                     	;# 
  1163  0212                     	;# 
  1164  0212                     	;# 
  1165  0213                     	;# 
  1166  0213                     	;# 
  1167  0214                     	;# 
  1168  0214                     	;# 
  1169  0215                     	;# 
  1170  0215                     	;# 
  1171  0215                     	;# 
  1172  0216                     	;# 
  1173  0216                     	;# 
  1174  0217                     	;# 
  1175  0217                     	;# 
  1176  0391                     	;# 
  1177  0392                     	;# 
  1178  0393                     	;# 
  1179  0394                     	;# 
  1180  0395                     	;# 
  1181  0396                     	;# 
  1182  039A                     	;# 
  1183  039B                     	;# 
  1184  0611                     	;# 
  1185  0612                     	;# 
  1186  0613                     	;# 
  1187  0613                     	;# 
  1188  0614                     	;# 
  1189  0615                     	;# 
  1190  0616                     	;# 
  1191  0616                     	;# 
  1192  0691                     	;# 
  1193  0692                     	;# 
  1194  0693                     	;# 
  1195  0694                     	;# 
  1196  0695                     	;# 
  1197  0E8E                     	;# 
  1198  0E8F                     	;# 
  1199  0E90                     	;# 
  1200  0E91                     	;# 
  1201  0E92                     	;# 
  1202  0E93                     	;# 
  1203  0E94                     	;# 
  1204  0E94                     	;# 
  1205  0E95                     	;# 
  1206  0E96                     	;# 
  1207  0E97                     	;# 
  1208  0E98                     	;# 
  1209  0E99                     	;# 
  1210  0E9A                     	;# 
  1211  0E9B                     	;# 
  1212  0E9C                     	;# 
  1213  0E9D                     	;# 
  1214  0E9E                     	;# 
  1215  0E9F                     	;# 
  1216  0FE4                     	;# 
  1217  0FE5                     	;# 
  1218  0FE6                     	;# 
  1219  0FE7                     	;# 
  1220  0FE8                     	;# 
  1221  0FE9                     	;# 
  1222  0FEA                     	;# 
  1223  0FEB                     	;# 
  1224  0FED                     	;# 
  1225  0FEE                     	;# 
  1226  0FEF                     	;# 
  1227  0000                     	;# 
  1228  0001                     	;# 
  1229  0002                     	;# 
  1230  0003                     	;# 
  1231  0004                     	;# 
  1232  0005                     	;# 
  1233  0006                     	;# 
  1234  0007                     	;# 
  1235  0008                     	;# 
  1236  0009                     	;# 
  1237  000A                     	;# 
  1238  000B                     	;# 
  1239  000C                     	;# 
  1240  000D                     	;# 
  1241  000E                     	;# 
  1242  0011                     	;# 
  1243  0012                     	;# 
  1244  0015                     	;# 
  1245  0016                     	;# 
  1246  0016                     	;# 
  1247  0017                     	;# 
  1248  0018                     	;# 
  1249  0019                     	;# 
  1250  001A                     	;# 
  1251  001B                     	;# 
  1252  001C                     	;# 
  1253  008C                     	;# 
  1254  008D                     	;# 
  1255  008E                     	;# 
  1256  0091                     	;# 
  1257  0092                     	;# 
  1258  0095                     	;# 
  1259  0096                     	;# 
  1260  0097                     	;# 
  1261  0098                     	;# 
  1262  0099                     	;# 
  1263  009A                     	;# 
  1264  009B                     	;# 
  1265  009B                     	;# 
  1266  009C                     	;# 
  1267  009D                     	;# 
  1268  009E                     	;# 
  1269  009F                     	;# 
  1270  010C                     	;# 
  1271  010D                     	;# 
  1272  010E                     	;# 
  1273  0111                     	;# 
  1274  0112                     	;# 
  1275  0113                     	;# 
  1276  0114                     	;# 
  1277  0115                     	;# 
  1278  0116                     	;# 
  1279  0117                     	;# 
  1280  0118                     	;# 
  1281  0119                     	;# 
  1282  011D                     	;# 
  1283  018C                     	;# 
  1284  018D                     	;# 
  1285  018E                     	;# 
  1286  0191                     	;# 
  1287  0191                     	;# 
  1288  0192                     	;# 
  1289  0193                     	;# 
  1290  0193                     	;# 
  1291  0194                     	;# 
  1292  0195                     	;# 
  1293  0196                     	;# 
  1294  0197                     	;# 
  1295  0199                     	;# 
  1296  019A                     	;# 
  1297  019B                     	;# 
  1298  019B                     	;# 
  1299  019C                     	;# 
  1300  019D                     	;# 
  1301  019E                     	;# 
  1302  019F                     	;# 
  1303  020C                     	;# 
  1304  020D                     	;# 
  1305  0211                     	;# 
  1306  0211                     	;# 
  1307  0212                     	;# 
  1308  0212                     	;# 
  1309  0213                     	;# 
  1310  0213                     	;# 
  1311  0214                     	;# 
  1312  0214                     	;# 
  1313  0215                     	;# 
  1314  0215                     	;# 
  1315  0215                     	;# 
  1316  0216                     	;# 
  1317  0216                     	;# 
  1318  0217                     	;# 
  1319  0217                     	;# 
  1320  0391                     	;# 
  1321  0392                     	;# 
  1322  0393                     	;# 
  1323  0394                     	;# 
  1324  0395                     	;# 
  1325  0396                     	;# 
  1326  039A                     	;# 
  1327  039B                     	;# 
  1328  0611                     	;# 
  1329  0612                     	;# 
  1330  0613                     	;# 
  1331  0613                     	;# 
  1332  0614                     	;# 
  1333  0615                     	;# 
  1334  0616                     	;# 
  1335  0616                     	;# 
  1336  0691                     	;# 
  1337  0692                     	;# 
  1338  0693                     	;# 
  1339  0694                     	;# 
  1340  0695                     	;# 
  1341  0E8E                     	;# 
  1342  0E8F                     	;# 
  1343  0E90                     	;# 
  1344  0E91                     	;# 
  1345  0E92                     	;# 
  1346  0E93                     	;# 
  1347  0E94                     	;# 
  1348  0E94                     	;# 
  1349  0E95                     	;# 
  1350  0E96                     	;# 
  1351  0E97                     	;# 
  1352  0E98                     	;# 
  1353  0E99                     	;# 
  1354  0E9A                     	;# 
  1355  0E9B                     	;# 
  1356  0E9C                     	;# 
  1357  0E9D                     	;# 
  1358  0E9E                     	;# 
  1359  0E9F                     	;# 
  1360  0FE4                     	;# 
  1361  0FE5                     	;# 
  1362  0FE6                     	;# 
  1363  0FE7                     	;# 
  1364  0FE8                     	;# 
  1365  0FE9                     	;# 
  1366  0FEA                     	;# 
  1367  0FEB                     	;# 
  1368  0FED                     	;# 
  1369  0FEE                     	;# 
  1370  0FEF                     	;# 
  1371  0000                     	;# 
  1372  0001                     	;# 
  1373  0002                     	;# 
  1374  0003                     	;# 
  1375  0004                     	;# 
  1376  0005                     	;# 
  1377  0006                     	;# 
  1378  0007                     	;# 
  1379  0008                     	;# 
  1380  0009                     	;# 
  1381  000A                     	;# 
  1382  000B                     	;# 
  1383  000C                     	;# 
  1384  000D                     	;# 
  1385  000E                     	;# 
  1386  0011                     	;# 
  1387  0012                     	;# 
  1388  0015                     	;# 
  1389  0016                     	;# 
  1390  0016                     	;# 
  1391  0017                     	;# 
  1392  0018                     	;# 
  1393  0019                     	;# 
  1394  001A                     	;# 
  1395  001B                     	;# 
  1396  001C                     	;# 
  1397  008C                     	;# 
  1398  008D                     	;# 
  1399  008E                     	;# 
  1400  0091                     	;# 
  1401  0092                     	;# 
  1402  0095                     	;# 
  1403  0096                     	;# 
  1404  0097                     	;# 
  1405  0098                     	;# 
  1406  0099                     	;# 
  1407  009A                     	;# 
  1408  009B                     	;# 
  1409  009B                     	;# 
  1410  009C                     	;# 
  1411  009D                     	;# 
  1412  009E                     	;# 
  1413  009F                     	;# 
  1414  010C                     	;# 
  1415  010D                     	;# 
  1416  010E                     	;# 
  1417  0111                     	;# 
  1418  0112                     	;# 
  1419  0113                     	;# 
  1420  0114                     	;# 
  1421  0115                     	;# 
  1422  0116                     	;# 
  1423  0117                     	;# 
  1424  0118                     	;# 
  1425  0119                     	;# 
  1426  011D                     	;# 
  1427  018C                     	;# 
  1428  018D                     	;# 
  1429  018E                     	;# 
  1430  0191                     	;# 
  1431  0191                     	;# 
  1432  0192                     	;# 
  1433  0193                     	;# 
  1434  0193                     	;# 
  1435  0194                     	;# 
  1436  0195                     	;# 
  1437  0196                     	;# 
  1438  0197                     	;# 
  1439  0199                     	;# 
  1440  019A                     	;# 
  1441  019B                     	;# 
  1442  019B                     	;# 
  1443  019C                     	;# 
  1444  019D                     	;# 
  1445  019E                     	;# 
  1446  019F                     	;# 
  1447  020C                     	;# 
  1448  020D                     	;# 
  1449  0211                     	;# 
  1450  0211                     	;# 
  1451  0212                     	;# 
  1452  0212                     	;# 
  1453  0213                     	;# 
  1454  0213                     	;# 
  1455  0214                     	;# 
  1456  0214                     	;# 
  1457  0215                     	;# 
  1458  0215                     	;# 
  1459  0215                     	;# 
  1460  0216                     	;# 
  1461  0216                     	;# 
  1462  0217                     	;# 
  1463  0217                     	;# 
  1464  0391                     	;# 
  1465  0392                     	;# 
  1466  0393                     	;# 
  1467  0394                     	;# 
  1468  0395                     	;# 
  1469  0396                     	;# 
  1470  039A                     	;# 
  1471  039B                     	;# 
  1472  0611                     	;# 
  1473  0612                     	;# 
  1474  0613                     	;# 
  1475  0613                     	;# 
  1476  0614                     	;# 
  1477  0615                     	;# 
  1478  0616                     	;# 
  1479  0616                     	;# 
  1480  0691                     	;# 
  1481  0692                     	;# 
  1482  0693                     	;# 
  1483  0694                     	;# 
  1484  0695                     	;# 
  1485  0E8E                     	;# 
  1486  0E8F                     	;# 
  1487  0E90                     	;# 
  1488  0E91                     	;# 
  1489  0E92                     	;# 
  1490  0E93                     	;# 
  1491  0E94                     	;# 
  1492  0E94                     	;# 
  1493  0E95                     	;# 
  1494  0E96                     	;# 
  1495  0E97                     	;# 
  1496  0E98                     	;# 
  1497  0E99                     	;# 
  1498  0E9A                     	;# 
  1499  0E9B                     	;# 
  1500  0E9C                     	;# 
  1501  0E9D                     	;# 
  1502  0E9E                     	;# 
  1503  0E9F                     	;# 
  1504  0FE4                     	;# 
  1505  0FE5                     	;# 
  1506  0FE6                     	;# 
  1507  0FE7                     	;# 
  1508  0FE8                     	;# 
  1509  0FE9                     	;# 
  1510  0FEA                     	;# 
  1511  0FEB                     	;# 
  1512  0FED                     	;# 
  1513  0FEE                     	;# 
  1514  0FEF                     	;# 
  1515  0000                     	;# 
  1516  0001                     	;# 
  1517  0002                     	;# 
  1518  0003                     	;# 
  1519  0004                     	;# 
  1520  0005                     	;# 
  1521  0006                     	;# 
  1522  0007                     	;# 
  1523  0008                     	;# 
  1524  0009                     	;# 
  1525  000A                     	;# 
  1526  000B                     	;# 
  1527  000C                     	;# 
  1528  000D                     	;# 
  1529  000E                     	;# 
  1530  0011                     	;# 
  1531  0012                     	;# 
  1532  0015                     	;# 
  1533  0016                     	;# 
  1534  0016                     	;# 
  1535  0017                     	;# 
  1536  0018                     	;# 
  1537  0019                     	;# 
  1538  001A                     	;# 
  1539  001B                     	;# 
  1540  001C                     	;# 
  1541  008C                     	;# 
  1542  008D                     	;# 
  1543  008E                     	;# 
  1544  0091                     	;# 
  1545  0092                     	;# 
  1546  0095                     	;# 
  1547  0096                     	;# 
  1548  0097                     	;# 
  1549  0098                     	;# 
  1550  0099                     	;# 
  1551  009A                     	;# 
  1552  009B                     	;# 
  1553  009B                     	;# 
  1554  009C                     	;# 
  1555  009D                     	;# 
  1556  009E                     	;# 
  1557  009F                     	;# 
  1558  010C                     	;# 
  1559  010D                     	;# 
  1560  010E                     	;# 
  1561  0111                     	;# 
  1562  0112                     	;# 
  1563  0113                     	;# 
  1564  0114                     	;# 
  1565  0115                     	;# 
  1566  0116                     	;# 
  1567  0117                     	;# 
  1568  0118                     	;# 
  1569  0119                     	;# 
  1570  011D                     	;# 
  1571  018C                     	;# 
  1572  018D                     	;# 
  1573  018E                     	;# 
  1574  0191                     	;# 
  1575  0191                     	;# 
  1576  0192                     	;# 
  1577  0193                     	;# 
  1578  0193                     	;# 
  1579  0194                     	;# 
  1580  0195                     	;# 
  1581  0196                     	;# 
  1582  0197                     	;# 
  1583  0199                     	;# 
  1584  019A                     	;# 
  1585  019B                     	;# 
  1586  019B                     	;# 
  1587  019C                     	;# 
  1588  019D                     	;# 
  1589  019E                     	;# 
  1590  019F                     	;# 
  1591  020C                     	;# 
  1592  020D                     	;# 
  1593  0211                     	;# 
  1594  0211                     	;# 
  1595  0212                     	;# 
  1596  0212                     	;# 
  1597  0213                     	;# 
  1598  0213                     	;# 
  1599  0214                     	;# 
  1600  0214                     	;# 
  1601  0215                     	;# 
  1602  0215                     	;# 
  1603  0215                     	;# 
  1604  0216                     	;# 
  1605  0216                     	;# 
  1606  0217                     	;# 
  1607  0217                     	;# 
  1608  0391                     	;# 
  1609  0392                     	;# 
  1610  0393                     	;# 
  1611  0394                     	;# 
  1612  0395                     	;# 
  1613  0396                     	;# 
  1614  039A                     	;# 
  1615  039B                     	;# 
  1616  0611                     	;# 
  1617  0612                     	;# 
  1618  0613                     	;# 
  1619  0613                     	;# 
  1620  0614                     	;# 
  1621  0615                     	;# 
  1622  0616                     	;# 
  1623  0616                     	;# 
  1624  0691                     	;# 
  1625  0692                     	;# 
  1626  0693                     	;# 
  1627  0694                     	;# 
  1628  0695                     	;# 
  1629  0E8E                     	;# 
  1630  0E8F                     	;# 
  1631  0E90                     	;# 
  1632  0E91                     	;# 
  1633  0E92                     	;# 
  1634  0E93                     	;# 
  1635  0E94                     	;# 
  1636  0E94                     	;# 
  1637  0E95                     	;# 
  1638  0E96                     	;# 
  1639  0E97                     	;# 
  1640  0E98                     	;# 
  1641  0E99                     	;# 
  1642  0E9A                     	;# 
  1643  0E9B                     	;# 
  1644  0E9C                     	;# 
  1645  0E9D                     	;# 
  1646  0E9E                     	;# 
  1647  0E9F                     	;# 
  1648  0FE4                     	;# 
  1649  0FE5                     	;# 
  1650  0FE6                     	;# 
  1651  0FE7                     	;# 
  1652  0FE8                     	;# 
  1653  0FE9                     	;# 
  1654  0FEA                     	;# 
  1655  0FEB                     	;# 
  1656  0FED                     	;# 
  1657  0FEE                     	;# 
  1658  0FEF                     	;# 
  1659                           
  1660                           	psect	stringtext
  1661  0288                     __pstringtext:	
  1662  0288                     process_level@idx_midi_map:	
  1663  0288  343F               	retlw	63
  1664  0289  3418               	retlw	24
  1665  028A  3418               	retlw	24
  1666  028B  3418               	retlw	24
  1667  028C  3418               	retlw	24
  1668  028D  3447               	retlw	71
  1669  028E  3418               	retlw	24
  1670  028F  3418               	retlw	24
  1671  0290  3418               	retlw	24
  1672  0291  3418               	retlw	24
  1673  0292  3418               	retlw	24
  1674  0293  3418               	retlw	24
  1675  0294  3418               	retlw	24
  1676  0295  3444               	retlw	68
  1677  0296  3445               	retlw	69
  1678  0297  3446               	retlw	70
  1679  0298  3431               	retlw	49
  1680  0299  3432               	retlw	50
  1681  029A  3418               	retlw	24
  1682  029B  3418               	retlw	24
  1683  029C  3430               	retlw	48
  1684  029D  3441               	retlw	65
  1685  029E  3442               	retlw	66
  1686  029F  3443               	retlw	67
  1687  02A0  3418               	retlw	24
  1688  02A1  3418               	retlw	24
  1689  02A2  3436               	retlw	54
  1690  02A3  3438               	retlw	56
  1691  02A4  3434               	retlw	52
  1692  02A5  343B               	retlw	59
  1693  02A6  343D               	retlw	61
  1694  02A7  3440               	retlw	64
  1695  02A8  3433               	retlw	51
  1696  02A9  3435               	retlw	53
  1697  02AA  3437               	retlw	55
  1698  02AB  3439               	retlw	57
  1699  02AC  343A               	retlw	58
  1700  02AD  343C               	retlw	60
  1701  02AE  343E               	retlw	62
  1702  02AF                     __end_ofprocess_level@idx_midi_map:	
  1703  02AF                     _USB_SD_Ptr:	
  1704  02AF  3480               	retlw	low (_sd000| (0+32768))
  1705  02B0  3483               	retlw	high (_sd000| (0+32768))
  1706  02B1  3420               	retlw	low (_sd001| (0+32768))
  1707  02B2  3483               	retlw	high (_sd001| (0+32768))
  1708  02B3  3454               	retlw	low (_sd002| (0+32768))
  1709  02B4  3483               	retlw	high (_sd002| (0+32768))
  1710  02B5                     __end_of_USB_SD_Ptr:	
  1711  02B5                     _USB_CD_Ptr:	
  1712  02B5  34BB               	retlw	low (_configDescriptor1| (0+32768))
  1713  02B6  3482               	retlw	high (_configDescriptor1| (0+32768))
  1714  02B7                     __end_of_USB_CD_Ptr:	
  1715  02B7                     process_level@L:	
  1716  02B7  340A               	retlw	10
  1717  02B8                     __end_ofprocess_level@L:	
  1718  02B8                     process_level@key_off_threshold:	
  1719  02B8  3405               	retlw	5
  1720  02B9                     __end_ofprocess_level@key_off_threshold:	
  1721  02B9                     process_level@key_on_threshold:	
  1722  02B9  3407               	retlw	7
  1723  02BA                     __end_ofprocess_level@key_on_threshold:	
  1724  02BA                     process_level@midi_shift:	
  1725  02BA  3400               	retlw	0
  1726  02BB                     __end_ofprocess_level@midi_shift:	
  1727  02BB                     _configDescriptor1:	
  1728  02BB  3409               	retlw	9
  1729  02BC  3402               	retlw	2
  1730  02BD  3465               	retlw	101
  1731  02BE  3400               	retlw	0
  1732  02BF  3402               	retlw	2
  1733  02C0  3401               	retlw	1
  1734  02C1  3400               	retlw	0
  1735  02C2  34C0               	retlw	192
  1736  02C3  3432               	retlw	50
  1737  02C4  3409               	retlw	9
  1738  02C5  3404               	retlw	4
  1739  02C6  3400               	retlw	0
  1740  02C7  3400               	retlw	0
  1741  02C8  3400               	retlw	0
  1742  02C9  3401               	retlw	1
  1743  02CA  3401               	retlw	1
  1744  02CB  3400               	retlw	0
  1745  02CC  3400               	retlw	0
  1746  02CD  3409               	retlw	9
  1747  02CE  3424               	retlw	36
  1748  02CF  3401               	retlw	1
  1749  02D0  3400               	retlw	0
  1750  02D1  3401               	retlw	1
  1751  02D2  3409               	retlw	9
  1752  02D3  3400               	retlw	0
  1753  02D4  3401               	retlw	1
  1754  02D5  3401               	retlw	1
  1755  02D6  3409               	retlw	9
  1756  02D7  3404               	retlw	4
  1757  02D8  3401               	retlw	1
  1758  02D9  3400               	retlw	0
  1759  02DA  3402               	retlw	2
  1760  02DB  3401               	retlw	1
  1761  02DC  3403               	retlw	3
  1762  02DD  3400               	retlw	0
  1763  02DE  3400               	retlw	0
  1764  02DF  3407               	retlw	7
  1765  02E0  3424               	retlw	36
  1766  02E1  3401               	retlw	1
  1767  02E2  3400               	retlw	0
  1768  02E3  3401               	retlw	1
  1769  02E4  3441               	retlw	65
  1770  02E5  3400               	retlw	0
  1771  02E6  3406               	retlw	6
  1772  02E7  3424               	retlw	36
  1773  02E8  3402               	retlw	2
  1774  02E9  3401               	retlw	1
  1775  02EA  3401               	retlw	1
  1776  02EB  3400               	retlw	0
  1777  02EC  3406               	retlw	6
  1778  02ED  3424               	retlw	36
  1779  02EE  3402               	retlw	2
  1780  02EF  3402               	retlw	2
  1781  02F0  3402               	retlw	2
  1782  02F1  3400               	retlw	0
  1783  02F2  3409               	retlw	9
  1784  02F3  3424               	retlw	36
  1785  02F4  3403               	retlw	3
  1786  02F5  3401               	retlw	1
  1787  02F6  3403               	retlw	3
  1788  02F7  3401               	retlw	1
  1789  02F8  3402               	retlw	2
  1790  02F9  3401               	retlw	1
  1791  02FA  3400               	retlw	0
  1792  02FB  3409               	retlw	9
  1793  02FC  3424               	retlw	36
  1794  02FD  3403               	retlw	3
  1795  02FE  3402               	retlw	2
  1796  02FF  3404               	retlw	4
  1797  0300  3401               	retlw	1
  1798  0301  3401               	retlw	1
  1799  0302  3401               	retlw	1
  1800  0303  3400               	retlw	0
  1801  0304  3409               	retlw	9
  1802  0305  3405               	retlw	5
  1803  0306  3401               	retlw	1
  1804  0307  3402               	retlw	2
  1805  0308  3440               	retlw	64
  1806  0309  3400               	retlw	0
  1807  030A  3400               	retlw	0
  1808  030B  3400               	retlw	0
  1809  030C  3400               	retlw	0
  1810  030D  3405               	retlw	5
  1811  030E  3425               	retlw	37
  1812  030F  3401               	retlw	1
  1813  0310  3401               	retlw	1
  1814  0311  3401               	retlw	1
  1815  0312  3409               	retlw	9
  1816  0313  3405               	retlw	5
  1817  0314  3481               	retlw	129
  1818  0315  3402               	retlw	2
  1819  0316  3440               	retlw	64
  1820  0317  3400               	retlw	0
  1821  0318  3400               	retlw	0
  1822  0319  3400               	retlw	0
  1823  031A  3400               	retlw	0
  1824  031B  3405               	retlw	5
  1825  031C  3425               	retlw	37
  1826  031D  3401               	retlw	1
  1827  031E  3401               	retlw	1
  1828  031F  3403               	retlw	3
  1829  0320                     __end_of_configDescriptor1:	
  1830  0320                     _sd001:	
  1831  0320  3434               	retlw	52
  1832  0321  3403               	retlw	3
  1833  0322  344D               	retlw	77
  1834  0323  3400               	retlw	0
  1835  0324  3469               	retlw	105
  1836  0325  3400               	retlw	0
  1837  0326  3463               	retlw	99
  1838  0327  3400               	retlw	0
  1839  0328  3472               	retlw	114
  1840  0329  3400               	retlw	0
  1841  032A  346F               	retlw	111
  1842  032B  3400               	retlw	0
  1843  032C  3463               	retlw	99
  1844  032D  3400               	retlw	0
  1845  032E  3468               	retlw	104
  1846  032F  3400               	retlw	0
  1847  0330  3469               	retlw	105
  1848  0331  3400               	retlw	0
  1849  0332  3470               	retlw	112
  1850  0333  3400               	retlw	0
  1851  0334  3420               	retlw	32
  1852  0335  3400               	retlw	0
  1853  0336  3454               	retlw	84
  1854  0337  3400               	retlw	0
  1855  0338  3465               	retlw	101
  1856  0339  3400               	retlw	0
  1857  033A  3463               	retlw	99
  1858  033B  3400               	retlw	0
  1859  033C  3468               	retlw	104
  1860  033D  3400               	retlw	0
  1861  033E  346E               	retlw	110
  1862  033F  3400               	retlw	0
  1863  0340  346F               	retlw	111
  1864  0341  3400               	retlw	0
  1865  0342  346C               	retlw	108
  1866  0343  3400               	retlw	0
  1867  0344  346F               	retlw	111
  1868  0345  3400               	retlw	0
  1869  0346  3467               	retlw	103
  1870  0347  3400               	retlw	0
  1871  0348  3479               	retlw	121
  1872  0349  3400               	retlw	0
  1873  034A  3420               	retlw	32
  1874  034B  3400               	retlw	0
  1875  034C  3449               	retlw	73
  1876  034D  3400               	retlw	0
  1877  034E  346E               	retlw	110
  1878  034F  3400               	retlw	0
  1879  0350  3463               	retlw	99
  1880  0351  3400               	retlw	0
  1881  0352  342E               	retlw	46
  1882  0353  3400               	retlw	0
  1883  0354                     __end_of_sd001:	
  1884  0354                     _sd002:	
  1885  0354  341A               	retlw	26
  1886  0355  3403               	retlw	3
  1887  0356  344D               	retlw	77
  1888  0357  3400               	retlw	0
  1889  0358  3449               	retlw	73
  1890  0359  3400               	retlw	0
  1891  035A  3444               	retlw	68
  1892  035B  3400               	retlw	0
  1893  035C  3449               	retlw	73
  1894  035D  3400               	retlw	0
  1895  035E  3420               	retlw	32
  1896  035F  3400               	retlw	0
  1897  0360  3445               	retlw	69
  1898  0361  3400               	retlw	0
  1899  0362  3478               	retlw	120
  1900  0363  3400               	retlw	0
  1901  0364  3461               	retlw	97
  1902  0365  3400               	retlw	0
  1903  0366  346D               	retlw	109
  1904  0367  3400               	retlw	0
  1905  0368  3470               	retlw	112
  1906  0369  3400               	retlw	0
  1907  036A  346C               	retlw	108
  1908  036B  3400               	retlw	0
  1909  036C  3465               	retlw	101
  1910  036D  3400               	retlw	0
  1911  036E                     __end_of_sd002:	
  1912  036E                     _device_dsc:	
  1913  036E  3412               	retlw	18
  1914  036F  3401               	retlw	1
  1915  0370  3400               	retlw	0
  1916  0371  3402               	retlw	2
  1917  0372  3400               	retlw	0
  1918  0373  3400               	retlw	0
  1919  0374  3400               	retlw	0
  1920  0375  3408               	retlw	8
  1921  0376  34D8               	retlw	216
  1922  0377  3404               	retlw	4
  1923  0378  3459               	retlw	89
  1924  0379  3400               	retlw	0
  1925  037A  3402               	retlw	2
  1926  037B  3400               	retlw	0
  1927  037C  3401               	retlw	1
  1928  037D  3402               	retlw	2
  1929  037E  3400               	retlw	0
  1930  037F  3401               	retlw	1
  1931  0380                     __end_of_device_dsc:	
  1932  0380                     _sd000:	
  1933  0380  3404               	retlw	4
  1934  0381  3403               	retlw	3
  1935  0382  3409               	retlw	9
  1936  0383  3404               	retlw	4
  1937  0384                     __end_of_sd000:	
  1938  000B                     _INTCONbits	set	11
  1939  0012                     _PIR2bits	set	18
  1940  000C                     _PORTAbits	set	12
  1941  0015                     _TMR0	set	21
  1942  009D                     _ADCON0	set	157
  1943  009D                     _ADCON0bits	set	157
  1944  009E                     _ADCON1	set	158
  1945  009E                     _ADCON1bits	set	158
  1946  009F                     _ADCON2	set	159
  1947  009F                     _ADCON2bits	set	159
  1948  009C                     _ADRESH	set	156
  1949  009B                     _ADRESL	set	155
  1950  0095                     _OPTION_REGbits	set	149
  1951  0099                     _OSCCON	set	153
  1952  0091                     _PIE1bits	set	145
  1953  0092                     _PIE2bits	set	146
  1954  008C                     _TRISAbits	set	140
  1955  008D                     _TRISBbits	set	141
  1956  008E                     _TRISCbits	set	142
  1957  010E                     _LATCbits	set	270
  1958  018C                     _ANSELA	set	396
  1959  018C                     _ANSELAbits	set	396
  1960  018D                     _ANSELBbits	set	397
  1961  018E                     _ANSELCbits	set	398
  1962  019F                     _BAUDCON	set	415
  1963  0199                     _RCREG	set	409
  1964  019D                     _RCSTA	set	413
  1965  019D                     _RCSTAbits	set	413
  1966  019A                     _TXREG	set	410
  1967  019E                     _TXSTA	set	414
  1968  039B                     _ACTCON	set	923
  1969  0E96                     _UADDR	set	3734
  1970  0E91                     _UCFG	set	3729
  1971  0E8E                     _UCON	set	3726
  1972  0E8E                     _UCONbits	set	3726
  1973  0E97                     _UEIE	set	3735
  1974  0E93                     _UEIR	set	3731
  1975  0E98                     _UEP0bits	set	3736
  1976  0E92                     _UIE	set	3730
  1977  0E92                     _UIEbits	set	3730
  1978  0E90                     _UIR	set	3728
  1979  0E90                     _UIRbits	set	3728
  1980  0E8F                     _USTAT	set	3727
  1981  0E98                     _UEP0	set	3736
  1982  0E99                     _UEP1	set	3737
  1983                           
  1984                           ; #config settings
  1985  0000                     
  1986                           	psect	cinit
  1987  000F                     start_initialization:	
  1988  000F                     __initialization:	
  1989                           
  1990                           ; Clear objects allocated to COMMON
  1991  000F  01FC               	clrf	__pbssCOMMON& (0+127)
  1992                           
  1993                           ; Clear objects allocated to BANK0
  1994  0010  01EB               	clrf	__pbssBANK0& (0+127)
  1995  0011  01EC               	clrf	(__pbssBANK0+1)& (0+127)
  1996  0012  01ED               	clrf	(__pbssBANK0+2)& (0+127)
  1997  0013  01EE               	clrf	(__pbssBANK0+3)& (0+127)
  1998  0014  01EF               	clrf	(__pbssBANK0+4)& (0+127)
  1999                           
  2000                           ; Clear objects allocated to BANK1
  2001  0015  30E0               	movlw	low __pbssBANK1
  2002  0016  0084               	movwf	4
  2003  0017  3000               	movlw	high __pbssBANK1
  2004  0018  0085               	movwf	5
  2005  0019  3010               	movlw	16
  2006  001A  3189  2103  3180   	fcall	clear_ram0
  2007                           
  2008                           ; Clear objects allocated to BANK2
  2009  001D  3020               	movlw	low __pbssBANK2
  2010  001E  0084               	movwf	4
  2011  001F  3001               	movlw	high __pbssBANK2
  2012  0020  0085               	movwf	5
  2013  0021  304B               	movlw	75
  2014  0022  3189  2103  3180   	fcall	clear_ram0
  2015                           
  2016                           ; Clear objects allocated to BANK3
  2017  0025  30A4               	movlw	low __pbssBANK3
  2018  0026  0084               	movwf	4
  2019  0027  3001               	movlw	high __pbssBANK3
  2020  0028  0085               	movwf	5
  2021  0029  3027               	movlw	39
  2022  002A  3189  2103  3180   	fcall	clear_ram0
  2023                           
  2024                           ; Clear objects allocated to BANK4
  2025  002D  3020               	movlw	low __pbssBANK4
  2026  002E  0084               	movwf	4
  2027  002F  3002               	movlw	high __pbssBANK4
  2028  0030  0085               	movwf	5
  2029  0031  304E               	movlw	78
  2030  0032  3189  2103         	fcall	clear_ram0
  2031  0034                     end_of_initialization:	
  2032                           ;End of C runtime variable initialization code
  2033                           
  2034  0034                     __end_of__initialization:	
  2035  0034  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2036  0035  0020               	movlb	0
  2037  0036  3189  297A         	ljmp	_main	;jump to C main() function
  2038                           
  2039                           	psect	bssCOMMON
  2040  007C                     __pbssCOMMON:	
  2041  007C                     _pBDTEntryEP0OutNext:	
  2042  007C                     	ds	1
  2043                           
  2044                           	psect	bssBANK0
  2045  006B                     __pbssBANK0:	
  2046  006B                     _pBDTEntryIn:	
  2047  006B                     	ds	2
  2048  006D                     _USBDeviceState:	
  2049  006D                     	ds	1
  2050  006E                     _pBDTEntryEP0OutCurrent:	
  2051  006E                     	ds	1
  2052  006F                     _USTATcopy:	
  2053  006F                     	ds	1
  2054                           
  2055                           	psect	bssBANK1
  2056  00E0                     __pbssBANK1:	
  2057  00E0                     _inPipes:	
  2058  00E0                     	ds	5
  2059  00E5                     APP_LEDUpdateUSBStatus@ledCount:	
  2060  00E5                     	ds	2
  2061  00E7                     _USBDeferStatusStagePacket:	
  2062  00E7                     	ds	1
  2063  00E8                     _USBTxHandle:	
  2064  00E8                     	ds	1
  2065  00E9                     _controlTransferState:	
  2066  00E9                     	ds	1
  2067  00EA                     _msCounter:	
  2068  00EA                     	ds	1
  2069  00EB                     _pitch:	
  2070  00EB                     	ds	1
  2071  00EC                     _shortPacketStatus:	
  2072  00EC                     	ds	1
  2073  00ED                     store_key_level@idx_key:	
  2074  00ED                     	ds	1
  2075  00EE                     _USBActiveConfiguration:	
  2076  00EE                     	ds	1
  2077  00EF                     _USBAlternateInterface:	
  2078  00EF                     	ds	1
  2079                           
  2080                           	psect	bssBANK2
  2081  0120                     __pbssBANK2:	
  2082  0120                     process_level@key_states:	
  2083  0120                     	ds	39
  2084  0147                     _outPipes:	
  2085  0147                     	ds	7
  2086  014E                     _USB1msTickCount:	
  2087  014E                     	ds	4
  2088  0152                     _ep_data_in:	
  2089  0152                     	ds	2
  2090  0154                     _ep_data_out:	
  2091  0154                     	ds	2
  2092  0156                     _note_event:	
  2093  0156                     	ds	2
  2094  0158                     _pBDTEntryOut:	
  2095  0158                     	ds	2
  2096  015A                     _BothEP0OutUOWNsSet:	
  2097  015A                     	ds	1
  2098  015B                     _RemoteWakeup:	
  2099  015B                     	ds	1
  2100  015C                     _USBBusIsSuspended:	
  2101  015C                     	ds	1
  2102  015D                     _USBDeferINDataStagePackets:	
  2103  015D                     	ds	1
  2104  015E                     _USBDeferOUTDataStagePackets:	
  2105  015E                     	ds	1
  2106  015F                     _USBRxHandle:	
  2107  015F                     	ds	1
  2108  0160                     _USBStatusStageEnabledFlag1:	
  2109  0160                     	ds	1
  2110  0161                     _USBStatusStageEnabledFlag2:	
  2111  0161                     	ds	1
  2112  0162                     _USBStatusStageTimeoutCounter:	
  2113  0162                     	ds	1
  2114  0163                     _USBTicksSinceSuspendEnd:	
  2115  0163                     	ds	1
  2116  0164                     _endpoint_number:	
  2117  0164                     	ds	1
  2118  0165                     _is_initialized:	
  2119  0165                     	ds	1
  2120  0166                     _pDst:	
  2121  0166                     	ds	1
  2122  0167                     _sentNoteOff:	
  2123  0167                     	ds	1
  2124  0168                     _wait_timer:	
  2125  0168                     	ds	1
  2126  0169                     is_end_of_scan@scan_counter:	
  2127  0169                     	ds	1
  2128  016A                     scan_task@state:	
  2129  016A                     	ds	1
  2130                           
  2131                           	psect	bssBANK3
  2132  01A4                     __pbssBANK3:	
  2133  01A4                     process_level@key_off_counter:	
  2134  01A4                     	ds	39
  2135                           
  2136                           	psect	bssBANK4
  2137  0220                     __pbssBANK4:	
  2138  0220                     _adc_levels:	
  2139  0220                     	ds	39
  2140  0247                     process_level@key_on_counter:	
  2141  0247                     	ds	39
  2142                           
  2143                           	psect	clrtext
  2144  0903                     clear_ram0:	
  2145                           ;	Called with FSR0 containing the base address, and
  2146                           ;	WREG with the size to clear
  2147                           
  2148  0903  0064               	clrwdt	;clear the watchdog before getting into this loop
  2149  0904                     clrloop0:	
  2150  0904  0180               	clrf	0	;clear RAM location pointed to by FSR
  2151  0905  3101               	addfsr 0,1
  2152  0906  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2153  0907  2904               	goto	clrloop0	;have we reached the end yet?
  2154  0908  3400               	retlw	0	;all done for this memory range, return
  2155                           
  2156                           	psect	cstackCOMMON
  2157  0070                     __pcstackCOMMON:	
  2158  0070                     ?_LED_Enable:	
  2159  0070                     ?_BUTTON_Enable:	
  2160                           ; 0 bytes @ 0x0
  2161                           
  2162  0070                     ?_LED_Off:	
  2163                           ; 0 bytes @ 0x0
  2164                           
  2165  0070                     ?_LED_On:	
  2166                           ; 0 bytes @ 0x0
  2167                           
  2168  0070                     ?_USBDeviceInit:	
  2169                           ; 0 bytes @ 0x0
  2170                           
  2171  0070                     ?_USBDeviceTasks:	
  2172                           ; 0 bytes @ 0x0
  2173                           
  2174  0070                     ?_APP_DeviceAudioMIDITasks:	
  2175                           ; 0 bytes @ 0x0
  2176                           
  2177  0070                     ?_APP_DeviceAudioMIDISOFHandler:	
  2178                           ; 0 bytes @ 0x0
  2179                           
  2180  0070                     ?_APP_DeviceAudioMIDIInitialize:	
  2181                           ; 0 bytes @ 0x0
  2182                           
  2183  0070                     ?_USBWakeFromSuspend:	
  2184                           ; 0 bytes @ 0x0
  2185                           
  2186  0070                     ?_USBSuspend:	
  2187                           ; 0 bytes @ 0x0
  2188                           
  2189  0070                     ?_USBIncrement1msInternalTimers:	
  2190                           ; 0 bytes @ 0x0
  2191                           
  2192  0070                     ?_USBCtrlEPAllowStatusStage:	
  2193                           ; 0 bytes @ 0x0
  2194                           
  2195  0070                     ?_USBStallHandler:	
  2196                           ; 0 bytes @ 0x0
  2197                           
  2198  0070                     ?_USBCtrlEPService:	
  2199                           ; 0 bytes @ 0x0
  2200                           
  2201  0070                     ?_USBCtrlTrfTxService:	
  2202                           ; 0 bytes @ 0x0
  2203                           
  2204  0070                     ?_USBCtrlTrfSetupHandler:	
  2205                           ; 0 bytes @ 0x0
  2206                           
  2207  0070                     ?_USBCtrlTrfOutHandler:	
  2208                           ; 0 bytes @ 0x0
  2209                           
  2210  0070                     ?_USBCtrlTrfInHandler:	
  2211                           ; 0 bytes @ 0x0
  2212                           
  2213  0070                     ?_USBCheckStdRequest:	
  2214                           ; 0 bytes @ 0x0
  2215                           
  2216  0070                     ?_USBStdFeatureReqHandler:	
  2217                           ; 0 bytes @ 0x0
  2218                           
  2219  0070                     ?_SYSTEM_Initialize:	
  2220                           ; 0 bytes @ 0x0
  2221                           
  2222  0070                     ?_SYS_InterruptHigh:	
  2223                           ; 0 bytes @ 0x0
  2224                           
  2225  0070                     ??_SYS_InterruptHigh:	
  2226                           ; 0 bytes @ 0x0
  2227                           
  2228  0070                     ?_APP_LEDUpdateUSBStatus:	
  2229                           ; 0 bytes @ 0x0
  2230                           
  2231  0070                     ?_main:	
  2232                           ; 0 bytes @ 0x0
  2233                           
  2234  0070                     ?_scan_init:	
  2235                           ; 0 bytes @ 0x0
  2236                           
  2237  0070                     ?_set_timer:	
  2238                           ; 0 bytes @ 0x0
  2239                           
  2240  0070                     ?_run_adc:	
  2241                           ; 0 bytes @ 0x0
  2242                           
  2243  0070                     ?_USBCtrlEPAllowDataStage:	
  2244                           ; 0 bytes @ 0x0
  2245                           
  2246  0070                     ?_USBCtrlEPServiceComplete:	
  2247                           ; 0 bytes @ 0x0
  2248                           
  2249  0070                     ?_USBCtrlTrfRxService:	
  2250                           ; 0 bytes @ 0x0
  2251                           
  2252  0070                     ?_USBStdSetCfgHandler:	
  2253                           ; 0 bytes @ 0x0
  2254                           
  2255  0070                     ?_USBStdGetDscHandler:	
  2256                           ; 0 bytes @ 0x0
  2257                           
  2258  0070                     ?_USBStdGetStatusHandler:	
  2259                           ; 0 bytes @ 0x0
  2260                           
  2261  0070                     ?_BUTTON_IsPressed:	
  2262                           ; 0 bytes @ 0x0
  2263                           
  2264  0070                     ?_waiting_for_timer:	
  2265                           ; 1 bytes @ 0x0
  2266                           
  2267  0070                     ?_get_data:	
  2268                           ; 1 bytes @ 0x0
  2269                           
  2270  0070                     ?_is_end_of_scan:	
  2271                           ; 1 bytes @ 0x0
  2272                           
  2273  0070                     ?_is_adc_ready:	
  2274                           ; 1 bytes @ 0x0
  2275                           
  2276  0070                     ?_get_adc:	
  2277                           ; 1 bytes @ 0x0
  2278                           
  2279                           
  2280                           ; 1 bytes @ 0x0
  2281  0070                     	ds	1
  2282  0071                     ??_LED_Enable:	
  2283  0071                     ??_BUTTON_Enable:	
  2284                           ; 0 bytes @ 0x1
  2285                           
  2286  0071                     ??_LED_Off:	
  2287                           ; 0 bytes @ 0x1
  2288                           
  2289  0071                     ??_LED_On:	
  2290                           ; 0 bytes @ 0x1
  2291                           
  2292  0071                     ??_USBDeviceInit:	
  2293                           ; 0 bytes @ 0x1
  2294                           
  2295  0071                     ??_APP_DeviceAudioMIDISOFHandler:	
  2296                           ; 0 bytes @ 0x1
  2297                           
  2298  0071                     ??_BUTTON_IsPressed:	
  2299                           ; 0 bytes @ 0x1
  2300                           
  2301  0071                     ??_USBIncrement1msInternalTimers:	
  2302                           ; 0 bytes @ 0x1
  2303                           
  2304  0071                     ??_USBCtrlEPAllowStatusStage:	
  2305                           ; 0 bytes @ 0x1
  2306                           
  2307  0071                     ??_USBStallHandler:	
  2308                           ; 0 bytes @ 0x1
  2309                           
  2310  0071                     ?_USBConfigureEndpoint:	
  2311                           ; 0 bytes @ 0x1
  2312                           
  2313  0071                     ??_USBCtrlTrfTxService:	
  2314                           ; 0 bytes @ 0x1
  2315                           
  2316  0071                     ??_scan_init:	
  2317                           ; 0 bytes @ 0x1
  2318                           
  2319  0071                     ??_set_timer:	
  2320                           ; 0 bytes @ 0x1
  2321                           
  2322  0071                     ??_waiting_for_timer:	
  2323                           ; 0 bytes @ 0x1
  2324                           
  2325  0071                     ?_set_clock_and_data:	
  2326                           ; 0 bytes @ 0x1
  2327                           
  2328  0071                     ??_get_data:	
  2329                           ; 0 bytes @ 0x1
  2330                           
  2331  0071                     ??_is_end_of_scan:	
  2332                           ; 0 bytes @ 0x1
  2333                           
  2334  0071                     ??_run_adc:	
  2335                           ; 0 bytes @ 0x1
  2336                           
  2337  0071                     ??_is_adc_ready:	
  2338                           ; 0 bytes @ 0x1
  2339                           
  2340  0071                     ??_get_adc:	
  2341                           ; 0 bytes @ 0x1
  2342                           
  2343  0071                     ??_USBStdGetDscHandler:	
  2344                           ; 0 bytes @ 0x1
  2345                           
  2346  0071                     ??_USBStdGetStatusHandler:	
  2347                           ; 0 bytes @ 0x1
  2348                           
  2349  0071                     ?_USBTransferOnePacket:	
  2350                           ; 0 bytes @ 0x1
  2351                           
  2352  0071                     ?_memset:	
  2353                           ; 1 bytes @ 0x1
  2354                           
  2355  0071                     _waiting_for_timer$823:	
  2356                           ; 1 bytes @ 0x1
  2357                           
  2358  0071                     set_clock_and_data@d:	
  2359                           ; 1 bytes @ 0x1
  2360                           
  2361  0071                     BUTTON_IsPressed@button:	
  2362                           ; 1 bytes @ 0x1
  2363                           
  2364  0071                     BUTTON_Enable@button:	
  2365                           ; 1 bytes @ 0x1
  2366                           
  2367  0071                     LED_On@led:	
  2368                           ; 1 bytes @ 0x1
  2369                           
  2370  0071                     LED_Off@led:	
  2371                           ; 1 bytes @ 0x1
  2372                           
  2373  0071                     LED_Enable@led:	
  2374                           ; 1 bytes @ 0x1
  2375                           
  2376  0071                     USBTransferOnePacket@dir:	
  2377                           ; 1 bytes @ 0x1
  2378                           
  2379  0071                     USBConfigureEndpoint@direction:	
  2380                           ; 1 bytes @ 0x1
  2381                           
  2382  0071                     memset@c:	
  2383                           ; 1 bytes @ 0x1
  2384                           
  2385                           
  2386                           ; 2 bytes @ 0x1
  2387  0071                     	ds	1
  2388  0072                     ??_USBConfigureEndpoint:	
  2389  0072                     ??_SYSTEM_Initialize:	
  2390                           ; 0 bytes @ 0x2
  2391                           
  2392  0072                     ??_APP_LEDUpdateUSBStatus:	
  2393                           ; 0 bytes @ 0x2
  2394                           
  2395  0072                     ??_set_clock_and_data:	
  2396                           ; 0 bytes @ 0x2
  2397                           
  2398  0072                     ?_process_level:	
  2399                           ; 0 bytes @ 0x2
  2400                           
  2401  0072                     SYSTEM_Initialize@state:	
  2402                           ; 0 bytes @ 0x2
  2403                           
  2404  0072                     set_clock_and_data@c:	
  2405                           ; 1 bytes @ 0x2
  2406                           
  2407  0072                     process_level@old_level:	
  2408                           ; 1 bytes @ 0x2
  2409                           
  2410  0072                     USBStdGetStatusHandler@p:	
  2411                           ; 1 bytes @ 0x2
  2412                           
  2413  0072                     USBDeviceInit@p:	
  2414                           ; 1 bytes @ 0x2
  2415                           
  2416  0072                     USBTransferOnePacket@data:	
  2417                           ; 2 bytes @ 0x2
  2418                           
  2419                           
  2420                           ; 2 bytes @ 0x2
  2421  0072                     	ds	1
  2422  0073                     ??_USBCtrlTrfRxService:	
  2423  0073                     is_end_of_scan@res:	
  2424                           ; 0 bytes @ 0x3
  2425                           
  2426  0073                     process_level@new_level:	
  2427                           ; 1 bytes @ 0x3
  2428                           
  2429  0073                     USBCtrlTrfTxService@byteToSend:	
  2430                           ; 1 bytes @ 0x3
  2431                           
  2432  0073                     memset@n:	
  2433                           ; 1 bytes @ 0x3
  2434                           
  2435                           
  2436                           ; 2 bytes @ 0x3
  2437  0073                     	ds	1
  2438  0074                     ??_USBCtrlTrfInHandler:	
  2439  0074                     ??_process_level:	
  2440                           ; 0 bytes @ 0x4
  2441                           
  2442  0074                     ??_USBCtrlEPAllowDataStage:	
  2443                           ; 0 bytes @ 0x4
  2444                           
  2445  0074                     USBDeviceInit@i_1715:	
  2446                           ; 0 bytes @ 0x4
  2447                           
  2448  0074                     USBTransferOnePacket@len:	
  2449                           ; 1 bytes @ 0x4
  2450                           
  2451                           
  2452                           ; 1 bytes @ 0x4
  2453  0074                     	ds	1
  2454  0075                     ??_USBTransferOnePacket:	
  2455  0075                     ??_memset:	
  2456                           ; 0 bytes @ 0x5
  2457                           
  2458  0075                     USBDeviceInit@i:	
  2459                           ; 0 bytes @ 0x5
  2460                           
  2461  0075                     USBCtrlTrfRxService@i:	
  2462                           ; 1 bytes @ 0x5
  2463                           
  2464                           
  2465                           ; 1 bytes @ 0x5
  2466  0075                     	ds	1
  2467  0076                     ??_USBCtrlEPServiceComplete:	
  2468  0076                     USBConfigureEndpoint@EPNum:	
  2469                           ; 0 bytes @ 0x6
  2470                           
  2471  0076                     USBCtrlTrfRxService@byteToRead:	
  2472                           ; 1 bytes @ 0x6
  2473                           
  2474  0076                     USBCtrlTrfInHandler@lastDTS:	
  2475                           ; 1 bytes @ 0x6
  2476                           
  2477  0076                     memset@p:	
  2478                           ; 1 bytes @ 0x6
  2479                           
  2480                           
  2481                           ; 1 bytes @ 0x6
  2482  0076                     	ds	1
  2483  0077                     ??_USBCtrlTrfOutHandler:	
  2484  0077                     ?_store_key_level:	
  2485                           ; 0 bytes @ 0x7
  2486                           
  2487  0077                     store_key_level@end_of_scan:	
  2488                           ; 1 bytes @ 0x7
  2489                           
  2490  0077                     USBTransferOnePacket@ep:	
  2491                           ; 1 bytes @ 0x7
  2492                           
  2493  0077                     USBConfigureEndpoint@handle:	
  2494                           ; 1 bytes @ 0x7
  2495                           
  2496  0077                     memset@p1:	
  2497                           ; 1 bytes @ 0x7
  2498                           
  2499                           
  2500                           ; 1 bytes @ 0x7
  2501  0077                     	ds	1
  2502  0078                     ?_USBEnableEndpoint:	
  2503  0078                     ??_store_key_level:	
  2504                           ; 0 bytes @ 0x8
  2505                           
  2506  0078                     USBEnableEndpoint@options:	
  2507                           ; 0 bytes @ 0x8
  2508                           
  2509  0078                     USBTransferOnePacket@handle:	
  2510                           ; 1 bytes @ 0x8
  2511                           
  2512                           
  2513                           ; 1 bytes @ 0x8
  2514  0078                     	ds	1
  2515  0079                     ??_USBEnableEndpoint:	
  2516                           
  2517                           ; 0 bytes @ 0x9
  2518  0079                     	ds	1
  2519  007A                     store_key_level@level:	
  2520                           
  2521                           ; 1 bytes @ 0xA
  2522  007A                     	ds	1
  2523  007B                     ??_scan_task:	
  2524  007B                     ??_USBWakeFromSuspend:	
  2525                           ; 0 bytes @ 0xB
  2526                           
  2527  007B                     ??_USBSuspend:	
  2528                           ; 0 bytes @ 0xB
  2529                           
  2530  007B                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2531                           ; 0 bytes @ 0xB
  2532                           
  2533  007B                     ??_USBStdSetCfgHandler:	
  2534                           ; 0 bytes @ 0xB
  2535                           
  2536                           
  2537                           ; 0 bytes @ 0xB
  2538  007B                     	ds	1
  2539  007C                     ??_main:	
  2540                           
  2541                           	psect	cstackBANK0
  2542  0050                     __pcstackBANK0:	
  2543                           ; 0 bytes @ 0xC
  2544                           
  2545  0050                     process_level@old_state:	
  2546  0050                     USBEnableEndpoint@p:	
  2547                           ; 2 bytes @ 0x0
  2548                           
  2549                           
  2550                           ; 2 bytes @ 0x0
  2551  0050                     	ds	2
  2552  0052                     USBEnableEndpoint@ep:	
  2553  0052                     process_level@current_state:	
  2554                           ; 1 bytes @ 0x2
  2555                           
  2556                           
  2557                           ; 2 bytes @ 0x2
  2558  0052                     	ds	1
  2559  0053                     ??_APP_DeviceAudioMIDIInitialize:	
  2560                           
  2561                           ; 0 bytes @ 0x3
  2562  0053                     	ds	1
  2563  0054                     _process_level$861:	
  2564                           
  2565                           ; 2 bytes @ 0x4
  2566  0054                     	ds	1
  2567  0055                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  2568  0055                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2569                           ; 1 bytes @ 0x5
  2570                           
  2571                           
  2572                           ; 2 bytes @ 0x5
  2573  0055                     	ds	1
  2574  0056                     process_level@off_flag:	
  2575                           
  2576                           ; 1 bytes @ 0x6
  2577  0056                     	ds	1
  2578  0057                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2579  0057                     _process_level$860:	
  2580                           ; 1 bytes @ 0x7
  2581                           
  2582                           
  2583                           ; 1 bytes @ 0x7
  2584  0057                     	ds	1
  2585  0058                     process_level@on_flag:	
  2586  0058                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2587                           ; 1 bytes @ 0x8
  2588                           
  2589                           
  2590                           ; 2 bytes @ 0x8
  2591  0058                     	ds	1
  2592  0059                     process_level@filtered_state:	
  2593                           
  2594                           ; 1 bytes @ 0x9
  2595  0059                     	ds	1
  2596  005A                     ??_USBStdFeatureReqHandler:	
  2597  005A                     process_level@idx_key:	
  2598                           ; 0 bytes @ 0xA
  2599                           
  2600  005A                     USBStdSetCfgHandler@p:	
  2601                           ; 1 bytes @ 0xA
  2602                           
  2603                           
  2604                           ; 2 bytes @ 0xA
  2605  005A                     	ds	1
  2606  005B                     ?_scan_task:	
  2607  005B                     scan_task@velocity:	
  2608                           ; 1 bytes @ 0xB
  2609                           
  2610                           
  2611                           ; 1 bytes @ 0xB
  2612  005B                     	ds	1
  2613  005C                     USBStdSetCfgHandler@i_2046:	
  2614  005C                     _scan_task$879:	
  2615                           ; 1 bytes @ 0xC
  2616                           
  2617  005C                     USBStdFeatureReqHandler@pUEP:	
  2618                           ; 2 bytes @ 0xC
  2619                           
  2620                           
  2621                           ; 2 bytes @ 0xC
  2622  005C                     	ds	1
  2623  005D                     USBStdSetCfgHandler@i:	
  2624                           
  2625                           ; 1 bytes @ 0xD
  2626  005D                     	ds	1
  2627  005E                     USBStdFeatureReqHandler@current_ep_data:	
  2628  005E                     _scan_task$883:	
  2629                           ; 1 bytes @ 0xE
  2630                           
  2631                           
  2632                           ; 2 bytes @ 0xE
  2633  005E                     	ds	1
  2634  005F                     USBStdFeatureReqHandler@p:	
  2635                           
  2636                           ; 1 bytes @ 0xF
  2637  005F                     	ds	1
  2638  0060                     ??_USBCheckStdRequest:	
  2639  0060                     scan_task@note:	
  2640                           ; 0 bytes @ 0x10
  2641                           
  2642                           
  2643                           ; 1 bytes @ 0x10
  2644  0060                     	ds	1
  2645  0061                     ??_APP_DeviceAudioMIDITasks:	
  2646  0061                     ??_USBCtrlTrfSetupHandler:	
  2647                           ; 0 bytes @ 0x11
  2648                           
  2649                           
  2650                           ; 0 bytes @ 0x11
  2651  0061                     	ds	1
  2652  0062                     ??_USBCtrlEPService:	
  2653                           
  2654                           ; 0 bytes @ 0x12
  2655  0062                     	ds	1
  2656  0063                     _APP_DeviceAudioMIDITasks$423:	
  2657                           
  2658                           ; 2 bytes @ 0x13
  2659  0063                     	ds	2
  2660  0065                     USBCtrlEPService@setup_cnt:	
  2661  0065                     _APP_DeviceAudioMIDITasks$464:	
  2662                           ; 1 bytes @ 0x15
  2663                           
  2664                           
  2665                           ; 2 bytes @ 0x15
  2666  0065                     	ds	1
  2667  0066                     ??_USBDeviceTasks:	
  2668                           
  2669                           ; 0 bytes @ 0x16
  2670  0066                     	ds	1
  2671  0067                     _APP_DeviceAudioMIDITasks$465:	
  2672                           
  2673                           ; 2 bytes @ 0x17
  2674  0067                     	ds	1
  2675  0068                     USBDeviceTasks@i:	
  2676                           
  2677                           ; 1 bytes @ 0x18
  2678  0068                     	ds	1
  2679  0069                     APP_DeviceAudioMIDITasks@scan_pitch:	
  2680                           
  2681                           ; 1 bytes @ 0x19
  2682  0069                     	ds	1
  2683  006A                     APP_DeviceAudioMIDITasks@velocity:	
  2684                           
  2685                           ; 1 bytes @ 0x1A
  2686  006A                     	ds	1
  2687                           
  2688                           	psect	maintext
  2689  097A                     __pmaintext:	
  2690 ;;
  2691 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2692 ;;
  2693 ;; *************** function _main *****************
  2694 ;; Defined at:
  2695 ;;		line 34 in file "../src/main.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;		None
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;		None
  2700 ;; Return value:  Size  Location     Type
  2701 ;;		None               void
  2702 ;; Registers used:
  2703 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : B1F/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2713 ;;Total ram usage:        0 bytes
  2714 ;; Hardware stack levels required when called:   10
  2715 ;; This function calls:
  2716 ;;		_APP_DeviceAudioMIDITasks
  2717 ;;		_SYSTEM_Initialize
  2718 ;;		_USBDeviceInit
  2719 ;;		_USBDeviceTasks
  2720 ;; This function is called by:
  2721 ;;		Startup code after reset
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           
  2726                           ;psect for function _main
  2727  097A                     _main:	
  2728                           
  2729                           ;main.c: 36: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  2730                           
  2731                           ;incstack = 0
  2732                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2733  097A  3000               	movlw	0
  2734  097B  318A  223F  3189   	fcall	_SYSTEM_Initialize
  2735                           
  2736                           ;main.c: 38: USBDeviceInit();
  2737  097E  3185  25FF  3189   	fcall	_USBDeviceInit
  2738  0981                     l4685:	
  2739                           ;main.c: 39: ;
  2740                           ;main.c: 41: while(1)
  2741                           
  2742                           ;main.c: 75: {
  2743                           ;main.c: 77: continue;
  2744                           
  2745                           ;main.c: 65: {
  2746                           ;main.c: 67: continue;
  2747                           
  2748                           
  2749                           ;main.c: 42: {
  2750                           ;main.c: 43: ;
  2751                           ;main.c: 58: USBDeviceTasks();
  2752  0981  3183  2384  3189   	fcall	_USBDeviceTasks
  2753                           
  2754                           ;main.c: 64: if( USBDeviceState < CONFIGURED_STATE )
  2755  0984  3020               	movlw	32
  2756  0985  0020               	movlb	0	; select bank0
  2757  0986  026D               	subwf	_USBDeviceState,w
  2758  0987  1C03               	btfss	3,0
  2759  0988  2981               	goto	l4685
  2760                           
  2761                           ;main.c: 68: }
  2762                           ;main.c: 74: if( UCONbits.SUSPND == 1 )
  2763  0989  003D               	movlb	29	; select bank29
  2764  098A  188E               	btfsc	14,1	;volatile
  2765  098B  2981               	goto	l4685
  2766                           
  2767                           ;main.c: 78: }
  2768                           ;main.c: 81: APP_DeviceAudioMIDITasks();
  2769  098C  3180  2038  3189   	fcall	_APP_DeviceAudioMIDITasks
  2770  098F  2981               	goto	l4685
  2771  0990                     __end_of_main:	
  2772                           
  2773                           	psect	text1
  2774  0384                     __ptext1:	
  2775 ;; *************** function _USBDeviceTasks *****************
  2776 ;; Defined at:
  2777 ;;		line 496 in file "../framework/usb/usb_device.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;		None
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;  i               1   24[BANK0 ] unsigned char 
  2782 ;; Return value:  Size  Location     Type
  2783 ;;		None               void
  2784 ;; Registers used:
  2785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2792 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2793 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2794 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2795 ;;Total ram usage:        3 bytes
  2796 ;; Hardware stack levels used:    1
  2797 ;; Hardware stack levels required when called:    9
  2798 ;; This function calls:
  2799 ;;		_USBCtrlEPAllowStatusStage
  2800 ;;		_USBCtrlEPService
  2801 ;;		_USBDeviceInit
  2802 ;;		_USBIncrement1msInternalTimers
  2803 ;;		_USBStallHandler
  2804 ;;		_USBSuspend
  2805 ;;		_USBWakeFromSuspend
  2806 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  2807 ;; This function is called by:
  2808 ;;		_main
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           
  2813                           ;psect for function _USBDeviceTasks
  2814  0384                     _USBDeviceTasks:	
  2815                           
  2816                           ;usb_device.c: 563: }
  2817                           ;usb_device.c: 585: if(USBDeviceState == DETACHED_STATE)
  2818                           
  2819                           ;usb_device.c: 562: return;
  2820                           
  2821                           ;usb_device.c: 561: PIR2bits.USBIF = 0;;
  2822                           
  2823                           ;usb_device.c: 533: USBDeviceState = DETACHED_STATE;
  2824                           
  2825                           ;usb_device.c: 530: UIE = 0;
  2826                           
  2827                           ;usb_device.c: 525: {
  2828                           ;usb_device.c: 527: UCON = 0;
  2829                           
  2830                           ;usb_device.c: 498: uint8_t i;
  2831                           ;usb_device.c: 524: if (1 != 1)
  2832                           
  2833                           ;incstack = 0
  2834                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2835  0384  0020               	movlb	0	; select bank0
  2836  0385  086D               	movf	_USBDeviceState,w
  2837  0386  1D03               	btfss	3,2
  2838  0387  2B98               	goto	l4581
  2839                           
  2840                           ;usb_device.c: 586: {
  2841                           ;usb_device.c: 588: UCON = 0;
  2842  0388  003D               	movlb	29	; select bank29
  2843  0389  018E               	clrf	14	;volatile
  2844                           
  2845                           ;usb_device.c: 591: UIE = 0;
  2846  038A  0192               	clrf	18	;volatile
  2847                           
  2848                           ;usb_device.c: 595: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  2849  038B  3016               	movlw	22
  2850  038C  0091               	movwf	17	;volatile
  2851  038D  309F               	movlw	159
  2852  038E  0097               	movwf	23	;volatile
  2853  038F  307B               	movlw	123
  2854  0390  0092               	movwf	18	;volatile
  2855  0391                     l582:	
  2856                           ;usb_device.c: 598: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  2857                           
  2858  0391  198E               	btfsc	14,3	;volatile
  2859  0392  2B95               	goto	l584
  2860  0393  158E               	bsf	14,3	;volatile
  2861  0394  2B91               	goto	l582
  2862  0395                     l584:	
  2863                           
  2864                           ;usb_device.c: 601: USBDeviceState = ATTACHED_STATE;
  2865  0395  0020               	movlb	0	; select bank0
  2866  0396  01ED               	clrf	_USBDeviceState
  2867  0397  0AED               	incf	_USBDeviceState,f
  2868  0398                     l4581:	
  2869                           
  2870                           ;usb_device.c: 606: }
  2871                           ;usb_device.c: 609: if(USBDeviceState == ATTACHED_STATE)
  2872  0398  036D               	decf	_USBDeviceState,w
  2873  0399  1D03               	btfss	3,2
  2874  039A  2BA7               	goto	l4593
  2875                           
  2876                           ;usb_device.c: 610: {
  2877                           ;usb_device.c: 620: if(!UCONbits.SE0)
  2878  039B  003D               	movlb	29	; select bank29
  2879  039C  1A8E               	btfsc	14,5	;volatile
  2880  039D  2BA7               	goto	l4593
  2881                           
  2882                           ;usb_device.c: 621: {
  2883                           ;usb_device.c: 627: {UIR = 0;};
  2884  039E  0190               	clrf	16	;volatile
  2885                           
  2886                           ;usb_device.c: 631: UIE=0;
  2887  039F  0192               	clrf	18	;volatile
  2888                           
  2889                           ;usb_device.c: 633: UIEbits.URSTIE = 1;
  2890  03A0  1412               	bsf	18,0	;volatile
  2891                           
  2892                           ;usb_device.c: 634: UIEbits.IDLEIE = 1;
  2893  03A1  1612               	bsf	18,4	;volatile
  2894                           
  2895                           ;usb_device.c: 635: USBDeviceState = POWERED_STATE;
  2896  03A2  3002               	movlw	2
  2897  03A3  0020               	movlb	0	; select bank0
  2898  03A4  00E6               	movwf	??_USBDeviceTasks
  2899  03A5  0866               	movf	??_USBDeviceTasks,w
  2900  03A6  00ED               	movwf	_USBDeviceState
  2901  03A7                     l4593:	
  2902                           
  2903                           ;usb_device.c: 636: }
  2904                           ;usb_device.c: 637: }
  2905                           ;usb_device.c: 653: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  2906  03A7  003D               	movlb	29	; select bank29
  2907  03A8  1910               	btfsc	16,2	;volatile
  2908  03A9  1D12               	btfss	18,2	;volatile
  2909  03AA  2BB4               	goto	l4601
  2910                           
  2911                           ;usb_device.c: 654: {
  2912                           ;usb_device.c: 655: (UIR &= 0xFB);
  2913  03AB  30FB               	movlw	251
  2914  03AC  0020               	movlb	0	; select bank0
  2915  03AD  00E6               	movwf	??_USBDeviceTasks
  2916  03AE  0866               	movf	??_USBDeviceTasks,w
  2917  03AF  003D               	movlb	29	; select bank29
  2918  03B0  0590               	andwf	16,f	;volatile
  2919                           
  2920                           ;usb_device.c: 659: USBWakeFromSuspend();
  2921  03B1  318A  2224  3183   	fcall	_USBWakeFromSuspend
  2922  03B4                     l4601:	
  2923                           
  2924                           ;usb_device.c: 661: }
  2925                           ;usb_device.c: 666: if(UCONbits.SUSPND==1)
  2926  03B4  003D               	movlb	29	; select bank29
  2927  03B5  1C8E               	btfss	14,1	;volatile
  2928  03B6  2BBA               	goto	l588
  2929                           
  2930                           ;usb_device.c: 667: {
  2931                           ;usb_device.c: 668: PIR2bits.USBIF = 0;;
  2932  03B7  0020               	movlb	0	; select bank0
  2933  03B8  1112               	bcf	18,2	;volatile
  2934                           
  2935                           ;usb_device.c: 669: return;
  2936  03B9  0008               	return
  2937  03BA                     l588:	
  2938                           
  2939                           ;usb_device.c: 670: }
  2940                           ;usb_device.c: 682: if(UIRbits.URSTIF && UIEbits.URSTIE)
  2941  03BA  1810               	btfsc	16,0	;volatile
  2942  03BB  1C12               	btfss	18,0	;volatile
  2943  03BC  2BCA               	goto	l4613
  2944                           
  2945                           ;usb_device.c: 683: {
  2946                           ;usb_device.c: 684: USBDeviceInit();
  2947  03BD  3185  25FF  3183   	fcall	_USBDeviceInit
  2948                           
  2949                           ;usb_device.c: 688: ;
  2950                           ;usb_device.c: 690: USBDeviceState = DEFAULT_STATE;
  2951  03C0  3004               	movlw	4
  2952  03C1  0020               	movlb	0	; select bank0
  2953  03C2  00E6               	movwf	??_USBDeviceTasks
  2954  03C3  0866               	movf	??_USBDeviceTasks,w
  2955  03C4  00ED               	movwf	_USBDeviceState
  2956                           
  2957                           ;usb_device.c: 700: (UIR &= 0xFE);
  2958  03C5  30FE               	movlw	254
  2959  03C6  00E6               	movwf	??_USBDeviceTasks
  2960  03C7  0866               	movf	??_USBDeviceTasks,w
  2961  03C8  003D               	movlb	29	; select bank29
  2962  03C9  0590               	andwf	16,f	;volatile
  2963  03CA                     l4613:	
  2964                           
  2965                           ;usb_device.c: 701: }
  2966                           ;usb_device.c: 706: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  2967  03CA  1A10               	btfsc	16,4	;volatile
  2968  03CB  1E12               	btfss	18,4	;volatile
  2969  03CC  2BD0               	goto	l4619
  2970                           
  2971                           ;usb_device.c: 707: {
  2972                           ;usb_device.c: 713: USBSuspend();
  2973  03CD  3189  2190  3183   	fcall	_USBSuspend
  2974  03D0                     l4619:	
  2975                           
  2976                           ;usb_device.c: 715: }
  2977                           ;usb_device.c: 727: if(UIRbits.SOFIF)
  2978  03D0  003D               	movlb	29	; select bank29
  2979  03D1  1F10               	btfss	16,6	;volatile
  2980  03D2  2BF7               	goto	l4635
  2981                           
  2982                           ;usb_device.c: 728: {
  2983                           ;usb_device.c: 730: if(UIEbits.SOFIE)
  2984  03D3  1F12               	btfss	18,6	;volatile
  2985  03D4  2BE2               	goto	l4625
  2986                           
  2987                           ;usb_device.c: 731: {
  2988                           ;usb_device.c: 732: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  2989  03D5  3073               	movlw	115
  2990  03D6  0020               	movlb	0	; select bank0
  2991  03D7  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  2992  03D8  3000               	movlw	0
  2993  03D9  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  2994  03DA  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  2995  03DB  3001               	movlw	1
  2996  03DC  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  2997  03DD  3000               	movlw	0
  2998  03DE  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  2999  03DF  318B  2349  3183   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3000  03E2                     l4625:	
  3001                           
  3002                           ;usb_device.c: 733: }
  3003                           ;usb_device.c: 734: (UIR &= 0xBF);
  3004  03E2  30BF               	movlw	191
  3005  03E3  0020               	movlb	0	; select bank0
  3006  03E4  00E6               	movwf	??_USBDeviceTasks
  3007  03E5  0866               	movf	??_USBDeviceTasks,w
  3008  03E6  003D               	movlb	29	; select bank29
  3009  03E7  0590               	andwf	16,f	;volatile
  3010                           
  3011                           ;usb_device.c: 737: USBIncrement1msInternalTimers();
  3012  03E8  3189  21A7  3183   	fcall	_USBIncrement1msInternalTimers
  3013                           
  3014                           ;usb_device.c: 754: if(USBStatusStageTimeoutCounter != 0u)
  3015  03EB  0022               	movlb	2	; select bank2
  3016  03EC  0862               	movf	_USBStatusStageTimeoutCounter^(0+256),w
  3017  03ED  1903               	btfsc	3,2
  3018  03EE  2BF1               	goto	l593
  3019                           
  3020                           ;usb_device.c: 755: {
  3021                           ;usb_device.c: 756: USBStatusStageTimeoutCounter--;
  3022  03EF  3001               	movlw	1
  3023  03F0  02E2               	subwf	_USBStatusStageTimeoutCounter^(0+256),f
  3024  03F1                     l593:	
  3025                           
  3026                           ;usb_device.c: 757: }
  3027                           ;usb_device.c: 763: if(USBStatusStageTimeoutCounter == 0)
  3028  03F1  0862               	movf	_USBStatusStageTimeoutCounter^(0+256),w
  3029  03F2  1D03               	btfss	3,2
  3030  03F3  2BF7               	goto	l4635
  3031                           
  3032                           ;usb_device.c: 764: {
  3033                           ;usb_device.c: 765: USBCtrlEPAllowStatusStage();
  3034  03F4  318D  25BB  3183   	fcall	_USBCtrlEPAllowStatusStage
  3035  03F7                     l4635:	
  3036                           
  3037                           ;usb_device.c: 766: }
  3038                           ;usb_device.c: 768: }
  3039                           ;usb_device.c: 770: if(UIRbits.STALLIF && UIEbits.STALLIE)
  3040  03F7  003D               	movlb	29	; select bank29
  3041  03F8  1A90               	btfsc	16,5	;volatile
  3042  03F9  1E92               	btfss	18,5	;volatile
  3043  03FA  2BFE               	goto	l4641
  3044                           
  3045                           ;usb_device.c: 771: {
  3046                           ;usb_device.c: 772: USBStallHandler();
  3047  03FB  318A  229B  3183   	fcall	_USBStallHandler
  3048  03FE                     l4641:	
  3049                           
  3050                           ;usb_device.c: 773: }
  3051                           ;usb_device.c: 775: if(UIRbits.UERRIF && UIEbits.UERRIE)
  3052  03FE  003D               	movlb	29	; select bank29
  3053  03FF  1890               	btfsc	16,1	;volatile
  3054  0400  1C92               	btfss	18,1	;volatile
  3055  0401  2C11               	goto	l4649
  3056                           
  3057                           ;usb_device.c: 776: {
  3058                           ;usb_device.c: 777: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  3059  0402  30FF               	movlw	255
  3060  0403  0020               	movlb	0	; select bank0
  3061  0404  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3062  0405  307F               	movlw	127
  3063  0406  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3064  0407  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3065  0408  3001               	movlw	1
  3066  0409  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3067  040A  3000               	movlw	0
  3068  040B  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3069  040C  318B  2349  3183   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3070                           
  3071                           ;usb_device.c: 778: {UEIR = 0;};
  3072  040F  003D               	movlb	29	; select bank29
  3073  0410  0193               	clrf	19	;volatile
  3074  0411                     l4649:	
  3075                           
  3076                           ;usb_device.c: 786: }
  3077                           ;usb_device.c: 793: if(USBDeviceState < DEFAULT_STATE)
  3078  0411  3004               	movlw	4
  3079  0412  0020               	movlb	0	; select bank0
  3080  0413  026D               	subwf	_USBDeviceState,w
  3081  0414  1803               	skipnc
  3082  0415  2C18               	goto	l597
  3083                           
  3084                           ;usb_device.c: 794: {
  3085                           ;usb_device.c: 795: PIR2bits.USBIF = 0;;
  3086  0416  1112               	bcf	18,2	;volatile
  3087                           
  3088                           ;usb_device.c: 796: return;
  3089  0417  0008               	return
  3090  0418                     l597:	
  3091                           
  3092                           ;usb_device.c: 797: }
  3093                           ;usb_device.c: 802: if(UIEbits.TRNIE)
  3094  0418  003D               	movlb	29	; select bank29
  3095  0419  1D92               	btfss	18,3	;volatile
  3096  041A  2C70               	goto	l598
  3097                           
  3098                           ;usb_device.c: 803: {
  3099                           ;usb_device.c: 804: for(i = 0; i < 4u; i++)
  3100  041B  0020               	movlb	0	; select bank0
  3101  041C  01E8               	clrf	USBDeviceTasks@i
  3102  041D  3004               	movlw	4
  3103  041E  0268               	subwf	USBDeviceTasks@i,w
  3104  041F  1803               	btfsc	3,0
  3105  0420  2C70               	goto	l598
  3106  0421                     l599:	
  3107                           
  3108                           ;usb_device.c: 805: {
  3109                           ;usb_device.c: 806: if(UIRbits.TRNIF)
  3110  0421  003D               	movlb	29	; select bank29
  3111  0422  1D90               	btfss	16,3	;volatile
  3112  0423  2C70               	goto	l598
  3113                           
  3114                           ;usb_device.c: 807: {
  3115                           ;usb_device.c: 809: USTATcopy.Val = USTAT;
  3116  0424  080F               	movf	15,w	;volatile
  3117  0425  0020               	movlb	0	; select bank0
  3118  0426  00E6               	movwf	??_USBDeviceTasks
  3119  0427  0866               	movf	??_USBDeviceTasks,w
  3120  0428  00EF               	movwf	_USTATcopy
  3121                           
  3122                           ;usb_device.c: 810: endpoint_number = USTATcopy.endpoint_number;
  3123  0429  0C6F               	rrf	_USTATcopy,w
  3124  042A  00E6               	movwf	??_USBDeviceTasks
  3125  042B  0CE6               	rrf	??_USBDeviceTasks,f
  3126  042C  0C66               	rrf	??_USBDeviceTasks,w
  3127  042D  390F               	andlw	15
  3128  042E  00E7               	movwf	??_USBDeviceTasks+1
  3129  042F  0867               	movf	??_USBDeviceTasks+1,w
  3130  0430  0022               	movlb	2	; select bank2
  3131  0431  00E4               	movwf	_endpoint_number^(0+256)
  3132                           
  3133                           ;usb_device.c: 812: (UIR &= 0xF7);
  3134  0432  30F7               	movlw	247
  3135  0433  0020               	movlb	0	; select bank0
  3136  0434  00E6               	movwf	??_USBDeviceTasks
  3137  0435  0866               	movf	??_USBDeviceTasks,w
  3138  0436  003D               	movlb	29	; select bank29
  3139  0437  0590               	andwf	16,f	;volatile
  3140                           
  3141                           ;usb_device.c: 817: if(USTATcopy.direction == 0)
  3142  0438  0020               	movlb	0	; select bank0
  3143  0439  196F               	btfsc	_USTATcopy,2
  3144  043A  2C3F               	goto	l4669
  3145                           
  3146                           ;usb_device.c: 818: {
  3147                           ;usb_device.c: 819: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  3148  043B  0022               	movlb	2	; select bank2
  3149  043C  0864               	movf	_endpoint_number^(0+256),w
  3150  043D  3E54               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  3151  043E  2C42               	goto	L1
  3152  043F                     l4669:	
  3153                           ;usb_device.c: 820: }
  3154                           
  3155                           
  3156                           ;usb_device.c: 821: else
  3157                           ;usb_device.c: 822: {
  3158                           ;usb_device.c: 823: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  3159  043F  0022               	movlb	2	; select bank2
  3160  0440  0864               	movf	_endpoint_number^(0+256),w
  3161  0441  3E52               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  3162  0442                     L1:	
  3163  0442  0086               	movwf	6
  3164  0443  3001               	movlw	1	; select bank2/3
  3165  0444  0087               	movwf	7
  3166  0445  0801               	movf	1,w
  3167  0446  3901               	andlw	1
  3168  0447  0020               	movlb	0	; select bank0
  3169  0448  00E6               	movwf	??_USBDeviceTasks
  3170  0449  3001               	movlw	1
  3171  044A  06E6               	xorwf	??_USBDeviceTasks,f
  3172  044B  0801               	movf	1,w
  3173  044C  0666               	xorwf	??_USBDeviceTasks,w
  3174  044D  39FE               	andlw	-2
  3175  044E  0666               	xorwf	??_USBDeviceTasks,w
  3176  044F  0081               	movwf	1
  3177                           
  3178                           ;usb_device.c: 824: }
  3179                           ;usb_device.c: 829: if(endpoint_number == 0)
  3180  0450  0022               	movlb	2	; select bank2
  3181  0451  0864               	movf	_endpoint_number^(0+256),w
  3182  0452  1D03               	btfss	3,2
  3183  0453  2C58               	goto	l4675
  3184                           
  3185                           ;usb_device.c: 830: {
  3186                           ;usb_device.c: 831: USBCtrlEPService();
  3187  0454  318E  2692  3183   	fcall	_USBCtrlEPService
  3188                           
  3189                           ;usb_device.c: 832: }
  3190  0457  2C67               	goto	l4677
  3191  0458                     l4675:	
  3192                           
  3193                           ;usb_device.c: 833: else
  3194                           ;usb_device.c: 834: {
  3195                           ;usb_device.c: 835: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  3196  0458  3072               	movlw	114
  3197  0459  0020               	movlb	0	; select bank0
  3198  045A  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3199  045B  3000               	movlw	0
  3200  045C  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3201  045D  306F               	movlw	(low (_USTATcopy| 0))& (0+255)
  3202  045E  00E6               	movwf	??_USBDeviceTasks
  3203  045F  0866               	movf	??_USBDeviceTasks,w
  3204  0460  00D7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3205  0461  3000               	movlw	0
  3206  0462  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3207  0463  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3208  0464  318B  2349  3183   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3209  0467                     l4677:	
  3210                           ;usb_device.c: 838: else
  3211                           ;usb_device.c: 839: {
  3212                           ;usb_device.c: 840: break;
  3213                           
  3214                           ;usb_device.c: 836: }
  3215                           ;usb_device.c: 837: }
  3216                           
  3217  0467  3001               	movlw	1
  3218  0468  0020               	movlb	0	; select bank0
  3219  0469  00E6               	movwf	??_USBDeviceTasks
  3220  046A  0866               	movf	??_USBDeviceTasks,w
  3221  046B  07E8               	addwf	USBDeviceTasks@i,f
  3222  046C  3004               	movlw	4
  3223  046D  0268               	subwf	USBDeviceTasks@i,w
  3224  046E  1C03               	skipc
  3225  046F  2C21               	goto	l599
  3226  0470                     l598:	
  3227                           
  3228                           ;usb_device.c: 841: }
  3229                           ;usb_device.c: 842: }
  3230                           ;usb_device.c: 843: }
  3231                           ;usb_device.c: 845: PIR2bits.USBIF = 0;;
  3232  0470  0020               	movlb	0	; select bank0
  3233  0471  1112               	bcf	18,2	;volatile
  3234  0472  0008               	return
  3235  0473                     __end_of_USBDeviceTasks:	
  3236                           
  3237                           	psect	text2
  3238  0A24                     __ptext2:	
  3239 ;; *************** function _USBWakeFromSuspend *****************
  3240 ;; Defined at:
  3241 ;;		line 2322 in file "../framework/usb/usb_device.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;		None
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;		None
  3246 ;; Return value:  Size  Location     Type
  3247 ;;		None               void
  3248 ;; Registers used:
  3249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3257 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3258 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3259 ;;Total ram usage:        1 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; Hardware stack levels required when called:    5
  3262 ;; This function calls:
  3263 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3264 ;; This function is called by:
  3265 ;;		_USBDeviceTasks
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           
  3270                           ;psect for function _USBWakeFromSuspend
  3271  0A24                     _USBWakeFromSuspend:	
  3272                           
  3273                           ;usb_device.c: 2324: USBBusIsSuspended = 0;
  3274                           
  3275                           ;incstack = 0
  3276                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3277  0A24  0022               	movlb	2	; select bank2
  3278  0A25  01DC               	clrf	_USBBusIsSuspended^(0+256)
  3279                           
  3280                           ;usb_device.c: 2330: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  3281  0A26  3074               	movlw	116
  3282  0A27  0020               	movlb	0	; select bank0
  3283  0A28  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3284  0A29  3000               	movlw	0
  3285  0A2A  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3286  0A2B  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3287  0A2C  3000               	movlw	0
  3288  0A2D  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3289  0A2E  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3290  0A2F  318B  2349  318A   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3291                           
  3292                           ;usb_device.c: 2337: UCONbits.SUSPND = 0;
  3293  0A32  003D               	movlb	29	; select bank29
  3294  0A33  108E               	bcf	14,1	;volatile
  3295                           
  3296                           ;usb_device.c: 2342: UIEbits.ACTVIE = 0;
  3297  0A34  1112               	bcf	18,2	;volatile
  3298  0A35                     l4513:	
  3299                           ;usb_device.c: 2360: while(UIRbits.ACTVIF)
  3300                           
  3301  0A35  1D10               	btfss	16,2	;volatile
  3302  0A36  2A3C               	goto	l4515
  3303                           
  3304                           ;usb_device.c: 2362: {
  3305                           ;usb_device.c: 2363: (UIR &= 0xFB);
  3306  0A37  30FB               	movlw	251
  3307  0A38  00FB               	movwf	??_USBWakeFromSuspend
  3308  0A39  087B               	movf	??_USBWakeFromSuspend,w
  3309  0A3A  0590               	andwf	16,f	;volatile
  3310  0A3B  2A35               	goto	l4513
  3311  0A3C                     l4515:	
  3312                           
  3313                           ;usb_device.c: 2364: }
  3314                           ;usb_device.c: 2366: USBTicksSinceSuspendEnd = 0;
  3315  0A3C  0022               	movlb	2	; select bank2
  3316  0A3D  01E3               	clrf	_USBTicksSinceSuspendEnd^(0+256)
  3317  0A3E  0008               	return
  3318  0A3F                     __end_of_USBWakeFromSuspend:	
  3319                           
  3320                           	psect	text3
  3321  0990                     __ptext3:	
  3322 ;; *************** function _USBSuspend *****************
  3323 ;; Defined at:
  3324 ;;		line 2264 in file "../framework/usb/usb_device.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;		None
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;		None
  3329 ;; Return value:  Size  Location     Type
  3330 ;;		None               void
  3331 ;; Registers used:
  3332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3340 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3341 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3342 ;;Total ram usage:        1 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:    5
  3345 ;; This function calls:
  3346 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3347 ;; This function is called by:
  3348 ;;		_USBDeviceTasks
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function _USBSuspend
  3354  0990                     _USBSuspend:	
  3355                           
  3356                           ;usb_device.c: 2289: UIEbits.ACTVIE = 1;
  3357                           
  3358                           ;incstack = 0
  3359                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3360  0990  003D               	movlb	29	; select bank29
  3361  0991  1512               	bsf	18,2	;volatile
  3362                           
  3363                           ;usb_device.c: 2290: (UIR &= 0xEF);
  3364  0992  30EF               	movlw	239
  3365  0993  00FB               	movwf	??_USBSuspend
  3366  0994  087B               	movf	??_USBSuspend,w
  3367  0995  0590               	andwf	16,f	;volatile
  3368                           
  3369                           ;usb_device.c: 2293: UCONbits.SUSPND = 1;
  3370  0996  148E               	bsf	14,1	;volatile
  3371                           
  3372                           ;usb_device.c: 2296: USBBusIsSuspended = 1;
  3373  0997  0022               	movlb	2	; select bank2
  3374  0998  01DC               	clrf	_USBBusIsSuspended^(0+256)
  3375  0999  0ADC               	incf	_USBBusIsSuspended^(0+256),f
  3376                           
  3377                           ;usb_device.c: 2297: USBTicksSinceSuspendEnd = 0;
  3378  099A  01E3               	clrf	_USBTicksSinceSuspendEnd^(0+256)
  3379                           
  3380                           ;usb_device.c: 2304: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  3381  099B  3075               	movlw	117
  3382  099C  0020               	movlb	0	; select bank0
  3383  099D  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3384  099E  3000               	movlw	0
  3385  099F  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3386  09A0  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3387  09A1  3000               	movlw	0
  3388  09A2  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3389  09A3  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3390  09A4  318B  2349         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3391  09A6  0008               	return
  3392  09A7                     __end_of_USBSuspend:	
  3393                           
  3394                           	psect	text4
  3395  0A9B                     __ptext4:	
  3396 ;; *************** function _USBStallHandler *****************
  3397 ;; Defined at:
  3398 ;;		line 2221 in file "../framework/usb/usb_device.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;		None
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;		None
  3403 ;; Return value:  Size  Location     Type
  3404 ;;		None               void
  3405 ;; Registers used:
  3406 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3414 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3415 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3416 ;;Total ram usage:        1 bytes
  3417 ;; Hardware stack levels used:    1
  3418 ;; Hardware stack levels required when called:    1
  3419 ;; This function calls:
  3420 ;;		Nothing
  3421 ;; This function is called by:
  3422 ;;		_USBDeviceTasks
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           
  3427                           ;psect for function _USBStallHandler
  3428  0A9B                     _USBStallHandler:	
  3429                           
  3430                           ;usb_device.c: 2233: if(UEP0bits.EPSTALL == 1)
  3431                           
  3432                           ;incstack = 0
  3433                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  3434  0A9B  003D               	movlb	29	; select bank29
  3435  0A9C  1C18               	btfss	24,0	;volatile
  3436  0A9D  2ABA               	goto	l3837
  3437                           
  3438                           ;usb_device.c: 2234: {
  3439                           ;usb_device.c: 2236: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  3440  0A9E  0020               	movlb	0	; select bank0
  3441  0A9F  086E               	movf	_pBDTEntryEP0OutCurrent,w
  3442  0AA0  0086               	movwf	6
  3443  0AA1  0187               	clrf	7
  3444  0AA2  3080               	movlw	128
  3445  0AA3  0601               	xorwf	1,w
  3446  0AA4  1D03               	btfss	3,2
  3447  0AA5  2AB8               	goto	l3835
  3448  0AA6  086B               	movf	_pBDTEntryIn,w
  3449  0AA7  0086               	movwf	6
  3450  0AA8  0187               	clrf	7
  3451  0AA9  3084               	movlw	132
  3452  0AAA  0601               	xorwf	1,w
  3453  0AAB  1D03               	btfss	3,2
  3454  0AAC  2AB8               	goto	l3835
  3455                           
  3456                           ;usb_device.c: 2237: {
  3457                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  3458  0AAD  300C               	movlw	12
  3459  0AAE  00F1               	movwf	??_USBStallHandler
  3460  0AAF  086E               	movf	_pBDTEntryEP0OutCurrent,w
  3461  0AB0  0086               	movwf	6
  3462  0AB1  0187               	clrf	7
  3463  0AB2  0871               	movf	??_USBStallHandler,w
  3464  0AB3  0081               	movwf	1
  3465                           
  3466                           ;usb_device.c: 2240: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  3467  0AB4  086E               	movf	_pBDTEntryEP0OutCurrent,w
  3468  0AB5  0086               	movwf	6
  3469  0AB6  0187               	clrf	7
  3470  0AB7  1781               	bsf	1,7
  3471  0AB8                     l3835:	
  3472                           
  3473                           ;usb_device.c: 2241: }
  3474                           ;usb_device.c: 2242: UEP0bits.EPSTALL = 0;
  3475  0AB8  003D               	movlb	29	; select bank29
  3476  0AB9  1018               	bcf	24,0	;volatile
  3477  0ABA                     l3837:	
  3478                           
  3479                           ;usb_device.c: 2243: }
  3480                           ;usb_device.c: 2245: (UIR &= 0xDF);
  3481  0ABA  30DF               	movlw	223
  3482  0ABB  00F1               	movwf	??_USBStallHandler
  3483  0ABC  0871               	movf	??_USBStallHandler,w
  3484  0ABD  0590               	andwf	16,f	;volatile
  3485  0ABE  0008               	return
  3486  0ABF                     __end_of_USBStallHandler:	
  3487                           
  3488                           	psect	text5
  3489  09A7                     __ptext5:	
  3490 ;; *************** function _USBIncrement1msInternalTimers *****************
  3491 ;; Defined at:
  3492 ;;		line 3050 in file "../framework/usb/usb_device.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;		None
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;		None
  3497 ;; Return value:  Size  Location     Type
  3498 ;;		None               void
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3508 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3509 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3510 ;;Total ram usage:        1 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:    1
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		_USBDeviceTasks
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           
  3521                           ;psect for function _USBIncrement1msInternalTimers
  3522  09A7                     _USBIncrement1msInternalTimers:	
  3523                           
  3524                           ;usb_device.c: 3058: USB1msTickCount++;
  3525                           
  3526                           ;incstack = 0
  3527                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  3528  09A7  3001               	movlw	1
  3529  09A8  0022               	movlb	2	; select bank2
  3530  09A9  07CE               	addwf	_USB1msTickCount^(0+256),f
  3531  09AA  3000               	movlw	0
  3532  09AB  3DCF               	addwfc	(_USB1msTickCount+1)^(0+256),f
  3533  09AC  3000               	movlw	0
  3534  09AD  3DD0               	addwfc	(_USB1msTickCount+2)^(0+256),f
  3535  09AE  3000               	movlw	0
  3536  09AF  3DD1               	addwfc	(_USB1msTickCount+3)^(0+256),f
  3537                           
  3538                           ;usb_device.c: 3059: if(USBBusIsSuspended == 0)
  3539  09B0  085C               	movf	_USBBusIsSuspended^(0+256),w
  3540  09B1  1D03               	btfss	3,2
  3541  09B2  0008               	return
  3542                           
  3543                           ;usb_device.c: 3060: {
  3544                           ;usb_device.c: 3061: USBTicksSinceSuspendEnd++;
  3545  09B3  3001               	movlw	1
  3546  09B4  00F1               	movwf	??_USBIncrement1msInternalTimers
  3547  09B5  0871               	movf	??_USBIncrement1msInternalTimers,w
  3548  09B6  07E3               	addwf	_USBTicksSinceSuspendEnd^(0+256),f
  3549                           
  3550                           ;usb_device.c: 3063: if(USBTicksSinceSuspendEnd == 0)
  3551  09B7  0863               	movf	_USBTicksSinceSuspendEnd^(0+256),w
  3552  09B8  1D03               	btfss	3,2
  3553  09B9  0008               	return
  3554                           
  3555                           ;usb_device.c: 3064: {
  3556                           ;usb_device.c: 3065: USBTicksSinceSuspendEnd = 255;
  3557  09BA  30FF               	movlw	255
  3558  09BB  00F1               	movwf	??_USBIncrement1msInternalTimers
  3559  09BC  0871               	movf	??_USBIncrement1msInternalTimers,w
  3560  09BD  00E3               	movwf	_USBTicksSinceSuspendEnd^(0+256)
  3561  09BE  0008               	return
  3562  09BF                     __end_of_USBIncrement1msInternalTimers:	
  3563                           
  3564                           	psect	text6
  3565  05FF                     __ptext6:	
  3566 ;; *************** function _USBDeviceInit *****************
  3567 ;; Defined at:
  3568 ;;		line 300 in file "../framework/usb/usb_device.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;		None
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;  p               2    2[COMMON] PTR unsigned char 
  3573 ;;		 -> UEP1(1), 
  3574 ;;  i               1    4[COMMON] unsigned char 
  3575 ;;  i               1    5[COMMON] unsigned char 
  3576 ;; Return value:  Size  Location     Type
  3577 ;;		None               void
  3578 ;; Registers used:
  3579 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3586 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3587 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3588 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3589 ;;Total ram usage:        5 bytes
  3590 ;; Hardware stack levels used:    1
  3591 ;; Hardware stack levels required when called:    1
  3592 ;; This function calls:
  3593 ;;		Nothing
  3594 ;; This function is called by:
  3595 ;;		_main
  3596 ;;		_USBDeviceTasks
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           
  3601                           ;psect for function _USBDeviceInit
  3602  05FF                     _USBDeviceInit:	
  3603                           
  3604                           ;usb_device.c: 302: uint8_t i;
  3605                           ;usb_device.c: 304: {PIE2bits.USBIE = 0;};
  3606                           
  3607                           ;incstack = 0
  3608                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  3609  05FF  0021               	movlb	1	; select bank1
  3610  0600  1112               	bcf	18,2	;volatile
  3611                           
  3612                           ;usb_device.c: 307: {UEIR = 0;};
  3613  0601  003D               	movlb	29	; select bank29
  3614  0602  0193               	clrf	19	;volatile
  3615                           
  3616                           ;usb_device.c: 310: {UIR = 0;};
  3617  0603  0190               	clrf	16	;volatile
  3618                           
  3619                           ;usb_device.c: 313: UEP0 = 0;
  3620  0604  0198               	clrf	24	;volatile
  3621                           
  3622                           ;usb_device.c: 315: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 0
      +                          ; };
  3623  0605  300E               	movlw	14
  3624  0606  00F3               	movwf	USBDeviceInit@p+1
  3625  0607  3099               	movlw	153
  3626  0608  00F2               	movwf	USBDeviceInit@p
  3627  0609  01F4               	clrf	USBDeviceInit@i_1715
  3628  060A  0874               	movf	USBDeviceInit@i_1715,w
  3629  060B  1D03               	btfss	3,2
  3630  060C  2E1D               	goto	l3659
  3631  060D                     l3651:	
  3632  060D  0872               	movf	USBDeviceInit@p,w
  3633  060E  0086               	movwf	6
  3634  060F  0873               	movf	USBDeviceInit@p+1,w
  3635  0610  0087               	movwf	7
  3636  0611  0181               	clrf	1
  3637  0612  3001               	movlw	1
  3638  0613  07F2               	addwf	USBDeviceInit@p,f
  3639  0614  3000               	movlw	0
  3640  0615  3DF3               	addwfc	USBDeviceInit@p+1,f
  3641  0616  3001               	movlw	1
  3642  0617  00F1               	movwf	??_USBDeviceInit
  3643  0618  0871               	movf	??_USBDeviceInit,w
  3644  0619  07F4               	addwf	USBDeviceInit@i_1715,f
  3645  061A  0874               	movf	USBDeviceInit@i_1715,w
  3646  061B  1903               	btfsc	3,2
  3647  061C  2E0D               	goto	l3651
  3648  061D                     l3659:	
  3649                           
  3650                           ;usb_device.c: 317: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  3651  061D  3016               	movlw	22
  3652  061E  003D               	movlb	29	; select bank29
  3653  061F  0091               	movwf	17	;volatile
  3654  0620  309F               	movlw	159
  3655  0621  0097               	movwf	23	;volatile
  3656  0622  307B               	movlw	123
  3657  0623  0092               	movwf	18	;volatile
  3658                           
  3659                           ;usb_device.c: 320: ;
  3660                           ;usb_device.c: 323: ;
  3661                           ;usb_device.c: 326: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  3662  0624  01F5               	clrf	USBDeviceInit@i
  3663  0625  3008               	movlw	8
  3664  0626  0275               	subwf	USBDeviceInit@i,w
  3665  0627  1803               	btfsc	3,0
  3666  0628  2E42               	goto	l571
  3667  0629                     l3667:	
  3668                           
  3669                           ;usb_device.c: 327: {
  3670                           ;usb_device.c: 328: BDT[i].Val = 0x00;
  3671  0629  0875               	movf	USBDeviceInit@i,w
  3672  062A  00F1               	movwf	??_USBDeviceInit
  3673  062B  3001               	movlw	1
  3674  062C                     u3125:	
  3675  062C  35F1               	lslf	??_USBDeviceInit,f
  3676  062D  3EFF               	addlw	-1
  3677  062E  1D03               	skipz
  3678  062F  2E2C               	goto	u3125
  3679  0630  3571               	lslf	??_USBDeviceInit,w
  3680  0631  3E20               	addlw	32
  3681  0632  0086               	movwf	6
  3682  0633  0187               	clrf	7
  3683  0634  3000               	movlw	0
  3684  0635  3FC0               	movwi [0]fsr1
  3685  0636  3000               	movlw	0
  3686  0637  3FC1               	movwi [1]fsr1
  3687  0638  3FC2               	movwi [2]fsr1
  3688  0639  3FC3               	movwi [3]fsr1
  3689  063A  3001               	movlw	1
  3690  063B  00F1               	movwf	??_USBDeviceInit
  3691  063C  0871               	movf	??_USBDeviceInit,w
  3692  063D  07F5               	addwf	USBDeviceInit@i,f
  3693  063E  3008               	movlw	8
  3694  063F  0275               	subwf	USBDeviceInit@i,w
  3695  0640  1C03               	skipc
  3696  0641  2E29               	goto	l3667
  3697  0642                     l571:	
  3698                           
  3699                           ;usb_device.c: 329: }
  3700                           ;usb_device.c: 332: UCONbits.PPBRST = 1;
  3701  0642  003D               	movlb	29	; select bank29
  3702  0643  170E               	bsf	14,6	;volatile
  3703                           
  3704                           ;usb_device.c: 335: UADDR = 0x00;
  3705  0644  0196               	clrf	22	;volatile
  3706                           
  3707                           ;usb_device.c: 338: UCONbits.PKTDIS = 0;
  3708  0645  120E               	bcf	14,4	;volatile
  3709                           
  3710                           ;usb_device.c: 341: UCONbits.PPBRST = 0;
  3711  0646  130E               	bcf	14,6	;volatile
  3712  0647                     l3679:	
  3713                           ;usb_device.c: 344: do
  3714                           
  3715                           
  3716                           ;usb_device.c: 345: {
  3717                           ;usb_device.c: 346: (UIR &= 0xF7);
  3718  0647  30F7               	movlw	247
  3719  0648  00F1               	movwf	??_USBDeviceInit
  3720  0649  0871               	movf	??_USBDeviceInit,w
  3721  064A  0590               	andwf	16,f	;volatile
  3722                           
  3723                           ;usb_device.c: 348: inPipes[0].info.Val = 0;
  3724  064B  0021               	movlb	1	; select bank1
  3725  064C  01E2               	clrf	(_inPipes^(0+128)+2)
  3726                           
  3727                           ;usb_device.c: 349: outPipes[0].info.Val = 0;
  3728  064D  0022               	movlb	2	; select bank2
  3729  064E  01C9               	clrf	(_outPipes^(0+256)+2)
  3730                           
  3731                           ;usb_device.c: 350: outPipes[0].wCount.Val = 0;
  3732  064F  01CA               	clrf	(_outPipes^(0+256)+3)
  3733  0650  01CB               	clrf	((_outPipes+1)^(0+256)+3)
  3734                           
  3735                           ;usb_device.c: 351: }while(UIRbits.TRNIF == 1);
  3736  0651  003D               	movlb	29	; select bank29
  3737  0652  1990               	btfsc	16,3	;volatile
  3738  0653  2E47               	goto	l3679
  3739                           
  3740                           ;usb_device.c: 355: USBStatusStageEnabledFlag1 = 1;
  3741  0654  3001               	movlw	1
  3742  0655  00F1               	movwf	??_USBDeviceInit
  3743  0656  0871               	movf	??_USBDeviceInit,w
  3744  0657  0022               	movlb	2	; select bank2
  3745  0658  00E0               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  3746                           
  3747                           ;usb_device.c: 356: USBStatusStageEnabledFlag2 = 1;
  3748  0659  3001               	movlw	1
  3749  065A  00F1               	movwf	??_USBDeviceInit
  3750  065B  0871               	movf	??_USBDeviceInit,w
  3751  065C  00E1               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  3752                           
  3753                           ;usb_device.c: 358: USBDeferINDataStagePackets = 0;
  3754  065D  01DD               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  3755                           
  3756                           ;usb_device.c: 359: USBDeferOUTDataStagePackets = 0;
  3757  065E  01DE               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  3758                           
  3759                           ;usb_device.c: 360: USBBusIsSuspended = 0;
  3760  065F  01DC               	clrf	_USBBusIsSuspended^(0+256)
  3761                           
  3762                           ;usb_device.c: 364: for(i = 0; i < (uint8_t)(1+1u); i++)
  3763  0660  01F5               	clrf	USBDeviceInit@i
  3764  0661  3002               	movlw	2
  3765  0662  0275               	subwf	USBDeviceInit@i,w
  3766  0663  1803               	btfsc	3,0
  3767  0664  2E84               	goto	l3707
  3768  0665                     l3701:	
  3769                           
  3770                           ;usb_device.c: 365: {
  3771                           ;usb_device.c: 366: pBDTEntryIn[i] = 0u;
  3772  0665  0875               	movf	USBDeviceInit@i,w
  3773  0666  3E6B               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  3774  0667  0086               	movwf	6
  3775  0668  0187               	clrf	7
  3776  0669  0181               	clrf	1
  3777                           
  3778                           ;usb_device.c: 367: pBDTEntryOut[i] = 0u;
  3779  066A  0875               	movf	USBDeviceInit@i,w
  3780  066B  3E58               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3781  066C  0086               	movwf	6
  3782  066D  3001               	movlw	1	; select bank2/3
  3783  066E  0087               	movwf	7
  3784  066F  0181               	clrf	1
  3785                           
  3786                           ;usb_device.c: 368: ep_data_in[i].Val = 0u;
  3787  0670  0875               	movf	USBDeviceInit@i,w
  3788  0671  3E52               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  3789  0672  0086               	movwf	6
  3790  0673  3001               	movlw	1	; select bank2/3
  3791  0674  0087               	movwf	7
  3792  0675  0181               	clrf	1
  3793                           
  3794                           ;usb_device.c: 369: ep_data_out[i].Val = 0u;
  3795  0676  0875               	movf	USBDeviceInit@i,w
  3796  0677  3E54               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  3797  0678  0086               	movwf	6
  3798  0679  3001               	movlw	1	; select bank2/3
  3799  067A  0087               	movwf	7
  3800  067B  0181               	clrf	1
  3801  067C  3001               	movlw	1
  3802  067D  00F1               	movwf	??_USBDeviceInit
  3803  067E  0871               	movf	??_USBDeviceInit,w
  3804  067F  07F5               	addwf	USBDeviceInit@i,f
  3805  0680  3002               	movlw	2
  3806  0681  0275               	subwf	USBDeviceInit@i,w
  3807  0682  1C03               	skipc
  3808  0683  2E65               	goto	l3701
  3809  0684                     l3707:	
  3810                           
  3811                           ;usb_device.c: 370: }
  3812                           ;usb_device.c: 373: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  3813  0684  3028               	movlw	40
  3814  0685  00F1               	movwf	??_USBDeviceInit
  3815  0686  0871               	movf	??_USBDeviceInit,w
  3816  0687  0020               	movlb	0	; select bank0
  3817  0688  00EB               	movwf	_pBDTEntryIn
  3818                           
  3819                           ;usb_device.c: 375: UEP0 = 0x06|0x10;
  3820  0689  3016               	movlw	22
  3821  068A  003D               	movlb	29	; select bank29
  3822  068B  0098               	movwf	24	;volatile
  3823                           
  3824                           ;usb_device.c: 377: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3825  068C  3000               	movlw	0
  3826  068D  0020               	movlb	0	; select bank0
  3827  068E  00A3               	movwf	35	;volatile
  3828  068F  3040               	movlw	64
  3829  0690  00A2               	movwf	34	;volatile
  3830                           
  3831                           ;usb_device.c: 378: BDT[0].CNT = 8;
  3832  0691  3008               	movlw	8
  3833  0692  00A1               	movwf	33	;volatile
  3834                           
  3835                           ;usb_device.c: 379: BDT[0].STAT.Val = 0x00|0x04;
  3836  0693  3004               	movlw	4
  3837  0694  00F1               	movwf	??_USBDeviceInit
  3838  0695  0871               	movf	??_USBDeviceInit,w
  3839  0696  00A0               	movwf	32	;volatile
  3840                           
  3841                           ;usb_device.c: 380: BDT[0].STAT.Val |= 0x80;
  3842  0697  17A0               	bsf	32,7	;volatile
  3843                           
  3844                           ;usb_device.c: 383: USBActiveConfiguration = 0;
  3845  0698  0021               	movlb	1	; select bank1
  3846  0699  01EE               	clrf	_USBActiveConfiguration^(0+128)
  3847                           
  3848                           ;usb_device.c: 385: USB1msTickCount = 0;
  3849  069A  3000               	movlw	0
  3850  069B  0022               	movlb	2	; select bank2
  3851  069C  00D1               	movwf	(_USB1msTickCount+3)^(0+256)
  3852  069D  3000               	movlw	0
  3853  069E  00D0               	movwf	(_USB1msTickCount+2)^(0+256)
  3854  069F  3000               	movlw	0
  3855  06A0  00CF               	movwf	(_USB1msTickCount+1)^(0+256)
  3856  06A1  3000               	movlw	0
  3857  06A2  00CE               	movwf	_USB1msTickCount^(0+256)
  3858                           
  3859                           ;usb_device.c: 386: USBTicksSinceSuspendEnd = 0;
  3860  06A3  01E3               	clrf	_USBTicksSinceSuspendEnd^(0+256)
  3861                           
  3862                           ;usb_device.c: 389: USBDeviceState = DETACHED_STATE;
  3863  06A4  0020               	movlb	0	; select bank0
  3864  06A5  01ED               	clrf	_USBDeviceState
  3865  06A6  0008               	return
  3866  06A7                     __end_of_USBDeviceInit:	
  3867                           
  3868                           	psect	text7
  3869  0E92                     __ptext7:	
  3870 ;; *************** function _USBCtrlEPService *****************
  3871 ;; Defined at:
  3872 ;;		line 2391 in file "../framework/usb/usb_device.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;		None
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;  setup_cnt       1   21[BANK0 ] unsigned char 
  3877 ;; Return value:  Size  Location     Type
  3878 ;;		None               void
  3879 ;; Registers used:
  3880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3887 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3888 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3889 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3890 ;;Total ram usage:        4 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    8
  3893 ;; This function calls:
  3894 ;;		_USBCtrlTrfInHandler
  3895 ;;		_USBCtrlTrfOutHandler
  3896 ;;		_USBCtrlTrfSetupHandler
  3897 ;; This function is called by:
  3898 ;;		_USBDeviceTasks
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           
  3903                           ;psect for function _USBCtrlEPService
  3904  0E92                     _USBCtrlEPService:	
  3905                           
  3906                           ;usb_device.c: 2397: USBStatusStageTimeoutCounter = (uint8_t)45;
  3907                           
  3908                           ;incstack = 0
  3909                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3910  0E92  302D               	movlw	45
  3911  0E93  0020               	movlb	0	; select bank0
  3912  0E94  00E2               	movwf	??_USBCtrlEPService
  3913  0E95  0862               	movf	??_USBCtrlEPService,w
  3914  0E96  0022               	movlb	2	; select bank2
  3915  0E97  00E2               	movwf	_USBStatusStageTimeoutCounter^(0+256)
  3916                           
  3917                           ;usb_device.c: 2401: if((USTATcopy.Val & ~0x02) == 0x00)
  3918  0E98  0020               	movlb	0	; select bank0
  3919  0E99  086F               	movf	_USTATcopy,w
  3920  0E9A  39FD               	andlw	253
  3921  0E9B  1D03               	btfss	3,2
  3922  0E9C  2EF7               	goto	l4559
  3923                           
  3924                           ;usb_device.c: 2402: {
  3925                           ;usb_device.c: 2405: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  3926  0E9D  366F               	lsrf	_USTATcopy,w
  3927  0E9E  393F               	andlw	63
  3928  0E9F  00E2               	movwf	??_USBCtrlEPService
  3929  0EA0  3001               	movlw	1
  3930  0EA1                     u4125:	
  3931  0EA1  35E2               	lslf	??_USBCtrlEPService,f
  3932  0EA2  3EFF               	addlw	-1
  3933  0EA3  1D03               	skipz
  3934  0EA4  2EA1               	goto	u4125
  3935  0EA5  3562               	lslf	??_USBCtrlEPService,w
  3936  0EA6  3E20               	addlw	32
  3937  0EA7  00E3               	movwf	??_USBCtrlEPService+1
  3938  0EA8  0863               	movf	??_USBCtrlEPService+1,w
  3939  0EA9  00EE               	movwf	_pBDTEntryEP0OutCurrent
  3940                           
  3941                           ;usb_device.c: 2413: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  3942  0EAA  086E               	movf	_pBDTEntryEP0OutCurrent,w
  3943  0EAB  00E2               	movwf	??_USBCtrlEPService
  3944  0EAC  0862               	movf	??_USBCtrlEPService,w
  3945  0EAD  00FC               	movwf	_pBDTEntryEP0OutNext
  3946                           
  3947                           ;usb_device.c: 2415: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  3948  0EAE  3004               	movlw	4
  3949  0EAF  00E2               	movwf	??_USBCtrlEPService
  3950  0EB0  0862               	movf	??_USBCtrlEPService,w
  3951  0EB1  06FC               	xorwf	_pBDTEntryEP0OutNext,f
  3952                           
  3953                           ;usb_device.c: 2418: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  3954  0EB2  086E               	movf	_pBDTEntryEP0OutCurrent,w
  3955  0EB3  0086               	movwf	6
  3956  0EB4  0187               	clrf	7
  3957  0EB5  0C01               	rrf	1,w
  3958  0EB6  0C89               	rrf	9,f
  3959  0EB7  390F               	andlw	15
  3960  0EB8  3A0D               	xorlw	13
  3961  0EB9  1D03               	skipz
  3962  0EBA  2EF4               	goto	l4557
  3963                           
  3964                           ;usb_device.c: 2419: {
  3965                           ;usb_device.c: 2420: unsigned char setup_cnt;
  3966                           ;usb_device.c: 2426: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  3967  0EBB  01E5               	clrf	USBCtrlEPService@setup_cnt
  3968  0EBC  3008               	movlw	8
  3969  0EBD  0265               	subwf	USBCtrlEPService@setup_cnt,w
  3970  0EBE  1803               	btfsc	3,0
  3971  0EBF  2EE5               	goto	l4553
  3972  0EC0                     l4547:	
  3973                           
  3974                           ;usb_device.c: 2427: {
  3975                           ;usb_device.c: 2428: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
  3976  0EC0  086E               	movf	_pBDTEntryEP0OutCurrent,w
  3977  0EC1  3E02               	addlw	2
  3978  0EC2  0086               	movwf	6
  3979  0EC3  0187               	clrf	7
  3980  0EC4  3F40               	moviw [0]fsr1
  3981  0EC5  00E2               	movwf	??_USBCtrlEPService
  3982  0EC6  3F41               	moviw [1]fsr1
  3983  0EC7  00E3               	movwf	??_USBCtrlEPService+1
  3984  0EC8  0862               	movf	??_USBCtrlEPService,w
  3985  0EC9  0086               	movwf	6
  3986  0ECA  0863               	movf	??_USBCtrlEPService+1,w
  3987  0ECB  0087               	movwf	7
  3988  0ECC  0801               	movf	1,w
  3989  0ECD  00E4               	movwf	??_USBCtrlEPService+2
  3990  0ECE  0865               	movf	USBCtrlEPService@setup_cnt,w
  3991  0ECF  3E40               	addlw	64
  3992  0ED0  0086               	movwf	6
  3993  0ED1  0187               	clrf	7
  3994  0ED2  0864               	movf	??_USBCtrlEPService+2,w
  3995  0ED3  0081               	movwf	1
  3996                           
  3997                           ;usb_device.c: 2429: pBDTEntryEP0OutCurrent->ADR++;
  3998  0ED4  086E               	movf	_pBDTEntryEP0OutCurrent,w
  3999  0ED5  3E02               	addlw	2
  4000  0ED6  0086               	movwf	6
  4001  0ED7  0187               	clrf	7
  4002  0ED8  3001               	movlw	1
  4003  0ED9  0781               	addwf	1,f
  4004  0EDA  3141               	addfsr 1,1
  4005  0EDB  1803               	skipnc
  4006  0EDC  0A81               	incf	1,f
  4007  0EDD  3001               	movlw	1
  4008  0EDE  00E2               	movwf	??_USBCtrlEPService
  4009  0EDF  0862               	movf	??_USBCtrlEPService,w
  4010  0EE0  07E5               	addwf	USBCtrlEPService@setup_cnt,f
  4011  0EE1  3008               	movlw	8
  4012  0EE2  0265               	subwf	USBCtrlEPService@setup_cnt,w
  4013  0EE3  1C03               	skipc
  4014  0EE4  2EC0               	goto	l4547
  4015  0EE5                     l4553:	
  4016                           
  4017                           ;usb_device.c: 2430: }
  4018                           ;usb_device.c: 2431: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4019  0EE5  3040               	movlw	64
  4020  0EE6  00E2               	movwf	??_USBCtrlEPService
  4021  0EE7  3000               	movlw	0
  4022  0EE8  00E3               	movwf	??_USBCtrlEPService+1
  4023  0EE9  086E               	movf	_pBDTEntryEP0OutCurrent,w
  4024  0EEA  3E02               	addlw	2
  4025  0EEB  0086               	movwf	6
  4026  0EEC  0187               	clrf	7
  4027  0EED  0862               	movf	??_USBCtrlEPService,w
  4028  0EEE  3FC0               	movwi [0]fsr1
  4029  0EEF  0863               	movf	??_USBCtrlEPService+1,w
  4030  0EF0  3FC1               	movwi [1]fsr1
  4031                           
  4032                           ;usb_device.c: 2434: USBCtrlTrfSetupHandler();
  4033  0EF1  3187  27BF         	fcall	_USBCtrlTrfSetupHandler
  4034                           
  4035                           ;usb_device.c: 2435: }
  4036  0EF3  0008               	return
  4037  0EF4                     l4557:	
  4038                           
  4039                           ;usb_device.c: 2436: else
  4040                           ;usb_device.c: 2437: {
  4041                           ;usb_device.c: 2439: USBCtrlTrfOutHandler();
  4042  0EF4  318A  22EA         	fcall	_USBCtrlTrfOutHandler
  4043                           
  4044                           ;usb_device.c: 2440: }
  4045                           ;usb_device.c: 2441: }
  4046  0EF6  0008               	return
  4047  0EF7                     l4559:	
  4048                           
  4049                           ;usb_device.c: 2442: else if((USTATcopy.Val & ~0x02) == 0x04)
  4050  0EF7  30FD               	movlw	253
  4051  0EF8  0020               	movlb	0	; select bank0
  4052  0EF9  056F               	andwf	_USTATcopy,w
  4053  0EFA  00E2               	movwf	??_USBCtrlEPService
  4054  0EFB  3004               	movlw	4
  4055  0EFC  0662               	xorwf	??_USBCtrlEPService,w
  4056  0EFD  1D03               	btfss	3,2
  4057  0EFE  0008               	return
  4058                           
  4059                           ;usb_device.c: 2443: {
  4060                           ;usb_device.c: 2446: USBCtrlTrfInHandler();
  4061  0EFF  318D  2554         	fcall	_USBCtrlTrfInHandler
  4062  0F01  0008               	return
  4063  0F02                     __end_of_USBCtrlEPService:	
  4064                           
  4065                           	psect	text8
  4066  07BF                     __ptext8:	
  4067 ;; *************** function _USBCtrlTrfSetupHandler *****************
  4068 ;; Defined at:
  4069 ;;		line 2491 in file "../framework/usb/usb_device.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;		None
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;		None
  4074 ;; Return value:  Size  Location     Type
  4075 ;;		None               void
  4076 ;; Registers used:
  4077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4085 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4086 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4087 ;;Total ram usage:        1 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:    7
  4090 ;; This function calls:
  4091 ;;		_USBCheckStdRequest
  4092 ;;		_USBCtrlEPServiceComplete
  4093 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4094 ;; This function is called by:
  4095 ;;		_USBCtrlEPService
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           
  4100                           ;psect for function _USBCtrlTrfSetupHandler
  4101  07BF                     _USBCtrlTrfSetupHandler:	
  4102                           
  4103                           ;usb_device.c: 2496: shortPacketStatus = 0;
  4104                           
  4105                           ;incstack = 0
  4106                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4107  07BF  0021               	movlb	1	; select bank1
  4108  07C0  01EC               	clrf	_shortPacketStatus^(0+128)
  4109                           
  4110                           ;usb_device.c: 2497: USBDeferStatusStagePacket = 0;
  4111  07C1  01E7               	clrf	_USBDeferStatusStagePacket^(0+128)	;volatile
  4112                           
  4113                           ;usb_device.c: 2498: USBDeferINDataStagePackets = 0;
  4114  07C2  0022               	movlb	2	; select bank2
  4115  07C3  01DD               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  4116                           
  4117                           ;usb_device.c: 2499: USBDeferOUTDataStagePackets = 0;
  4118  07C4  01DE               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  4119                           
  4120                           ;usb_device.c: 2500: BothEP0OutUOWNsSet = 0;
  4121  07C5  01DA               	clrf	_BothEP0OutUOWNsSet^(0+256)
  4122                           
  4123                           ;usb_device.c: 2501: controlTransferState = 0;
  4124  07C6  0021               	movlb	1	; select bank1
  4125  07C7  01E9               	clrf	_controlTransferState^(0+128)
  4126                           
  4127                           ;usb_device.c: 2510: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4128  07C8  307F               	movlw	127
  4129  07C9  0020               	movlb	0	; select bank0
  4130  07CA  00E1               	movwf	??_USBCtrlTrfSetupHandler
  4131  07CB  086B               	movf	_pBDTEntryIn,w
  4132  07CC  0086               	movwf	6
  4133  07CD  0187               	clrf	7
  4134  07CE  0861               	movf	??_USBCtrlTrfSetupHandler,w
  4135  07CF  0581               	andwf	1,f
  4136                           
  4137                           ;usb_device.c: 2511: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  4138  07D0  3004               	movlw	4
  4139  07D1  00E1               	movwf	??_USBCtrlTrfSetupHandler
  4140  07D2  0861               	movf	??_USBCtrlTrfSetupHandler,w
  4141  07D3  06EB               	xorwf	_pBDTEntryIn,f
  4142                           
  4143                           ;usb_device.c: 2512: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4144  07D4  307F               	movlw	127
  4145  07D5  00E1               	movwf	??_USBCtrlTrfSetupHandler
  4146  07D6  086B               	movf	_pBDTEntryIn,w
  4147  07D7  0086               	movwf	6
  4148  07D8  0187               	clrf	7
  4149  07D9  0861               	movf	??_USBCtrlTrfSetupHandler,w
  4150  07DA  0581               	andwf	1,f
  4151                           
  4152                           ;usb_device.c: 2513: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  4153  07DB  3004               	movlw	4
  4154  07DC  00E1               	movwf	??_USBCtrlTrfSetupHandler
  4155  07DD  0861               	movf	??_USBCtrlTrfSetupHandler,w
  4156  07DE  06EB               	xorwf	_pBDTEntryIn,f
  4157                           
  4158                           ;usb_device.c: 2514: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  4159  07DF  307F               	movlw	127
  4160  07E0  00E1               	movwf	??_USBCtrlTrfSetupHandler
  4161  07E1  087C               	movf	_pBDTEntryEP0OutNext,w
  4162  07E2  0086               	movwf	6
  4163  07E3  0187               	clrf	7
  4164  07E4  0861               	movf	??_USBCtrlTrfSetupHandler,w
  4165  07E5  0581               	andwf	1,f
  4166                           
  4167                           ;usb_device.c: 2516: inPipes[0].info.Val = 0;
  4168  07E6  0021               	movlb	1	; select bank1
  4169  07E7  01E2               	clrf	(_inPipes^(0+128)+2)
  4170                           
  4171                           ;usb_device.c: 2517: inPipes[0].wCount.Val = 0;
  4172  07E8  01E3               	clrf	(_inPipes^(0+128)+3)
  4173  07E9  01E4               	clrf	((_inPipes+1)^(0+128)+3)
  4174                           
  4175                           ;usb_device.c: 2518: outPipes[0].info.Val = 0;
  4176  07EA  0022               	movlb	2	; select bank2
  4177  07EB  01C9               	clrf	(_outPipes^(0+256)+2)
  4178                           
  4179                           ;usb_device.c: 2519: outPipes[0].wCount.Val = 0;
  4180  07EC  01CA               	clrf	(_outPipes^(0+256)+3)
  4181  07ED  01CB               	clrf	((_outPipes+1)^(0+256)+3)
  4182                           
  4183                           ;usb_device.c: 2525: USBCheckStdRequest();
  4184  07EE  318C  24FF  3187   	fcall	_USBCheckStdRequest
  4185                           
  4186                           ;usb_device.c: 2526: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  4187  07F1  3000               	movlw	0
  4188  07F2  0020               	movlb	0	; select bank0
  4189  07F3  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4190  07F4  3003               	movlw	3
  4191  07F5  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4192  07F6  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4193  07F7  3000               	movlw	0
  4194  07F8  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4195  07F9  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4196  07FA  318B  2349  3187   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4197                           
  4198                           ;usb_device.c: 2539: USBCtrlEPServiceComplete();
  4199  07FD  3187  2739         	fcall	_USBCtrlEPServiceComplete
  4200  07FF  0008               	return
  4201  0800                     __end_of_USBCtrlTrfSetupHandler:	
  4202                           
  4203                           	psect	text9
  4204  0739                     __ptext9:	
  4205 ;; *************** function _USBCtrlEPServiceComplete *****************
  4206 ;; Defined at:
  4207 ;;		line 1635 in file "../framework/usb/usb_device.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;		None
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;		None
  4212 ;; Return value:  Size  Location     Type
  4213 ;;		None               void
  4214 ;; Registers used:
  4215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4223 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4224 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4225 ;;Total ram usage:        2 bytes
  4226 ;; Hardware stack levels used:    1
  4227 ;; Hardware stack levels required when called:    3
  4228 ;; This function calls:
  4229 ;;		_USBCtrlEPAllowDataStage
  4230 ;;		_USBCtrlEPAllowStatusStage
  4231 ;; This function is called by:
  4232 ;;		_USBCtrlTrfSetupHandler
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           
  4237                           ;psect for function _USBCtrlEPServiceComplete
  4238  0739                     _USBCtrlEPServiceComplete:	
  4239                           
  4240                           ;usb_device.c: 1641: UCONbits.PKTDIS = 0;
  4241                           
  4242                           ;incstack = 0
  4243                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4244  0739  003D               	movlb	29	; select bank29
  4245  073A  120E               	bcf	14,4	;volatile
  4246                           
  4247                           ;usb_device.c: 1647: if(inPipes[0].info.bits.busy == 0)
  4248  073B  0021               	movlb	1	; select bank1
  4249  073C  1BE2               	btfsc	(_inPipes^(0+128)+2),7
  4250  073D  2F7B               	goto	l650
  4251                           
  4252                           ;usb_device.c: 1648: {
  4253                           ;usb_device.c: 1649: if(outPipes[0].info.bits.busy == 1)
  4254  073E  0022               	movlb	2	; select bank2
  4255  073F  1FC9               	btfss	(_outPipes^(0+256)+2),7
  4256  0740  2F50               	goto	l3335
  4257                           
  4258                           ;usb_device.c: 1650: {
  4259                           ;usb_device.c: 1651: controlTransferState = 2;
  4260  0741  3002               	movlw	2
  4261  0742  00F6               	movwf	??_USBCtrlEPServiceComplete
  4262  0743  0876               	movf	??_USBCtrlEPServiceComplete,w
  4263  0744  0021               	movlb	1	; select bank1
  4264  0745  00E9               	movwf	_controlTransferState^(0+128)
  4265                           
  4266                           ;usb_device.c: 1662: if(USBDeferOUTDataStagePackets == 0)
  4267  0746  0022               	movlb	2	; select bank2
  4268  0747  085E               	movf	_USBDeferOUTDataStagePackets^(0+256),w	;volatile
  4269  0748  1D03               	btfss	3,2
  4270  0749  2F4C               	goto	l3331
  4271                           
  4272                           ;usb_device.c: 1663: {
  4273                           ;usb_device.c: 1664: USBCtrlEPAllowDataStage();
  4274  074A  318C  24AB         	fcall	_USBCtrlEPAllowDataStage
  4275  074C                     l3331:	
  4276                           
  4277                           ;usb_device.c: 1665: }
  4278                           ;usb_device.c: 1669: USBStatusStageEnabledFlag2 = 0;
  4279  074C  0022               	movlb	2	; select bank2
  4280  074D  01E1               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  4281                           
  4282                           ;usb_device.c: 1670: USBStatusStageEnabledFlag1 = 0;
  4283  074E  01E0               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  4284                           
  4285                           ;usb_device.c: 1671: }
  4286  074F  0008               	return
  4287  0750                     l3335:	
  4288                           
  4289                           ;usb_device.c: 1672: else
  4290                           ;usb_device.c: 1673: {
  4291                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->CNT = 8;
  4292  0750  3008               	movlw	8
  4293  0751  00F6               	movwf	??_USBCtrlEPServiceComplete
  4294  0752  0A7C               	incf	_pBDTEntryEP0OutNext,w
  4295  0753  0086               	movwf	6
  4296  0754  0187               	clrf	7
  4297  0755  0876               	movf	??_USBCtrlEPServiceComplete,w
  4298  0756  0081               	movwf	1
  4299                           
  4300                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4301  0757  3040               	movlw	64
  4302  0758  00F6               	movwf	??_USBCtrlEPServiceComplete
  4303  0759  3000               	movlw	0
  4304  075A  00F7               	movwf	??_USBCtrlEPServiceComplete+1
  4305  075B  087C               	movf	_pBDTEntryEP0OutNext,w
  4306  075C  3E02               	addlw	2
  4307  075D  0086               	movwf	6
  4308  075E  0187               	clrf	7
  4309  075F  0876               	movf	??_USBCtrlEPServiceComplete,w
  4310  0760  3FC0               	movwi [0]fsr1
  4311  0761  0877               	movf	??_USBCtrlEPServiceComplete+1,w
  4312  0762  3FC1               	movwi [1]fsr1
  4313                           
  4314                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  4315  0763  300C               	movlw	12
  4316  0764  00F6               	movwf	??_USBCtrlEPServiceComplete
  4317  0765  087C               	movf	_pBDTEntryEP0OutNext,w
  4318  0766  0086               	movwf	6
  4319  0767  0187               	clrf	7
  4320  0768  0876               	movf	??_USBCtrlEPServiceComplete,w
  4321  0769  0081               	movwf	1
  4322                           
  4323                           ;usb_device.c: 1681: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  4324  076A  087C               	movf	_pBDTEntryEP0OutNext,w
  4325  076B  0086               	movwf	6
  4326  076C  0187               	clrf	7
  4327  076D  1781               	bsf	1,7
  4328                           
  4329                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val = 0x04;
  4330  076E  3004               	movlw	4
  4331  076F  00F6               	movwf	??_USBCtrlEPServiceComplete
  4332  0770  0020               	movlb	0	; select bank0
  4333  0771  086B               	movf	_pBDTEntryIn,w
  4334  0772  0086               	movwf	6
  4335  0773  0187               	clrf	7
  4336  0774  0876               	movf	??_USBCtrlEPServiceComplete,w
  4337  0775  0081               	movwf	1
  4338                           
  4339                           ;usb_device.c: 1683: pBDTEntryIn[0]->STAT.Val |= 0x80;
  4340  0776  086B               	movf	_pBDTEntryIn,w
  4341  0777  0086               	movwf	6
  4342  0778  0187               	clrf	7
  4343  0779  1781               	bsf	1,7
  4344                           
  4345                           ;usb_device.c: 1684: }
  4346                           ;usb_device.c: 1685: }
  4347  077A  0008               	return
  4348  077B                     l650:	
  4349                           
  4350                           ;usb_device.c: 1686: else
  4351                           ;usb_device.c: 1687: {
  4352                           ;usb_device.c: 1688: if(SetupPkt.DataDir == (0x80>>7))
  4353  077B  0020               	movlb	0	; select bank0
  4354  077C  1FC0               	btfss	64,7	;volatile
  4355  077D  2F92               	goto	l3361
  4356                           
  4357                           ;usb_device.c: 1689: {
  4358                           ;usb_device.c: 1690: controlTransferState = 1;
  4359  077E  0021               	movlb	1	; select bank1
  4360  077F  01E9               	clrf	_controlTransferState^(0+128)
  4361  0780  0AE9               	incf	_controlTransferState^(0+128),f
  4362                           
  4363                           ;usb_device.c: 1704: if(USBDeferINDataStagePackets == 0)
  4364  0781  0022               	movlb	2	; select bank2
  4365  0782  085D               	movf	_USBDeferINDataStagePackets^(0+256),w	;volatile
  4366  0783  1D03               	btfss	3,2
  4367  0784  2F88               	goto	l3353
  4368                           
  4369                           ;usb_device.c: 1705: {
  4370                           ;usb_device.c: 1706: USBCtrlEPAllowDataStage();
  4371  0785  318C  24AB  3187   	fcall	_USBCtrlEPAllowDataStage
  4372  0788                     l3353:	
  4373                           
  4374                           ;usb_device.c: 1707: }
  4375                           ;usb_device.c: 1729: USBStatusStageEnabledFlag2 = 0;
  4376  0788  0022               	movlb	2	; select bank2
  4377  0789  01E1               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  4378                           
  4379                           ;usb_device.c: 1730: USBStatusStageEnabledFlag1 = 0;
  4380  078A  01E0               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  4381                           
  4382                           ;usb_device.c: 1731: if(USBDeferStatusStagePacket == 0)
  4383  078B  0021               	movlb	1	; select bank1
  4384  078C  0867               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
  4385  078D  1D03               	btfss	3,2
  4386  078E  0008               	return
  4387                           
  4388                           ;usb_device.c: 1732: {
  4389                           ;usb_device.c: 1733: USBCtrlEPAllowStatusStage();
  4390  078F  318D  25BB         	fcall	_USBCtrlEPAllowStatusStage
  4391                           
  4392                           ;usb_device.c: 1734: }
  4393                           ;usb_device.c: 1735: }
  4394  0791  0008               	return
  4395  0792                     l3361:	
  4396                           
  4397                           ;usb_device.c: 1736: else
  4398                           ;usb_device.c: 1737: {
  4399                           ;usb_device.c: 1748: controlTransferState = 2;
  4400  0792  3002               	movlw	2
  4401  0793  00F6               	movwf	??_USBCtrlEPServiceComplete
  4402  0794  0876               	movf	??_USBCtrlEPServiceComplete,w
  4403  0795  0021               	movlb	1	; select bank1
  4404  0796  00E9               	movwf	_controlTransferState^(0+128)
  4405                           
  4406                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->CNT = 8;
  4407  0797  3008               	movlw	8
  4408  0798  00F6               	movwf	??_USBCtrlEPServiceComplete
  4409  0799  0A7C               	incf	_pBDTEntryEP0OutNext,w
  4410  079A  0086               	movwf	6
  4411  079B  0187               	clrf	7
  4412  079C  0876               	movf	??_USBCtrlEPServiceComplete,w
  4413  079D  0081               	movwf	1
  4414                           
  4415                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4416  079E  3040               	movlw	64
  4417  079F  00F6               	movwf	??_USBCtrlEPServiceComplete
  4418  07A0  3000               	movlw	0
  4419  07A1  00F7               	movwf	??_USBCtrlEPServiceComplete+1
  4420  07A2  087C               	movf	_pBDTEntryEP0OutNext,w
  4421  07A3  3E02               	addlw	2
  4422  07A4  0086               	movwf	6
  4423  07A5  0187               	clrf	7
  4424  07A6  0876               	movf	??_USBCtrlEPServiceComplete,w
  4425  07A7  3FC0               	movwi [0]fsr1
  4426  07A8  0877               	movf	??_USBCtrlEPServiceComplete+1,w
  4427  07A9  3FC1               	movwi [1]fsr1
  4428                           
  4429                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  4430  07AA  3004               	movlw	4
  4431  07AB  00F6               	movwf	??_USBCtrlEPServiceComplete
  4432  07AC  087C               	movf	_pBDTEntryEP0OutNext,w
  4433  07AD  0086               	movwf	6
  4434  07AE  0187               	clrf	7
  4435  07AF  0876               	movf	??_USBCtrlEPServiceComplete,w
  4436  07B0  0081               	movwf	1
  4437                           
  4438                           ;usb_device.c: 1754: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  4439  07B1  087C               	movf	_pBDTEntryEP0OutNext,w
  4440  07B2  0086               	movwf	6
  4441  07B3  0187               	clrf	7
  4442  07B4  1781               	bsf	1,7
  4443                           
  4444                           ;usb_device.c: 1757: USBStatusStageEnabledFlag2 = 0;
  4445  07B5  0022               	movlb	2	; select bank2
  4446  07B6  01E1               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  4447                           
  4448                           ;usb_device.c: 1758: USBStatusStageEnabledFlag1 = 0;
  4449  07B7  01E0               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  4450                           
  4451                           ;usb_device.c: 1759: if(USBDeferStatusStagePacket == 0)
  4452  07B8  0021               	movlb	1	; select bank1
  4453  07B9  0867               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
  4454  07BA  1D03               	btfss	3,2
  4455  07BB  0008               	return
  4456                           
  4457                           ;usb_device.c: 1760: {
  4458                           ;usb_device.c: 1761: USBCtrlEPAllowStatusStage();
  4459  07BC  318D  25BB         	fcall	_USBCtrlEPAllowStatusStage
  4460  07BE  0008               	return
  4461  07BF                     __end_of_USBCtrlEPServiceComplete:	
  4462                           
  4463                           	psect	text10
  4464  0CAB                     __ptext10:	
  4465 ;; *************** function _USBCtrlEPAllowDataStage *****************
  4466 ;; Defined at:
  4467 ;;		line 1507 in file "../framework/usb/usb_device.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;		None
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;		None
  4472 ;; Return value:  Size  Location     Type
  4473 ;;		None               void
  4474 ;; Registers used:
  4475 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/0
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4483 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4484 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4485 ;;Total ram usage:        2 bytes
  4486 ;; Hardware stack levels used:    1
  4487 ;; Hardware stack levels required when called:    2
  4488 ;; This function calls:
  4489 ;;		_USBCtrlTrfTxService
  4490 ;; This function is called by:
  4491 ;;		_USBCtrlEPServiceComplete
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           
  4496                           ;psect for function _USBCtrlEPAllowDataStage
  4497  0CAB                     _USBCtrlEPAllowDataStage:	
  4498                           
  4499                           ;usb_device.c: 1509: USBDeferINDataStagePackets = 0;
  4500                           
  4501                           ;incstack = 0
  4502                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4503  0CAB  0022               	movlb	2	; select bank2
  4504  0CAC  01DD               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  4505                           
  4506                           ;usb_device.c: 1510: USBDeferOUTDataStagePackets = 0;
  4507  0CAD  01DE               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  4508                           
  4509                           ;usb_device.c: 1512: if(controlTransferState == 2)
  4510  0CAE  3002               	movlw	2
  4511  0CAF  0021               	movlb	1	; select bank1
  4512  0CB0  0669               	xorwf	_controlTransferState^(0+128),w
  4513  0CB1  1D03               	btfss	3,2
  4514  0CB2  2CD2               	goto	l3069
  4515                           
  4516                           ;usb_device.c: 1513: {
  4517                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->CNT = 8;
  4518  0CB3  3008               	movlw	8
  4519  0CB4  00F4               	movwf	??_USBCtrlEPAllowDataStage
  4520  0CB5  0A7C               	incf	_pBDTEntryEP0OutNext,w
  4521  0CB6  0086               	movwf	6
  4522  0CB7  0187               	clrf	7
  4523  0CB8  0874               	movf	??_USBCtrlEPAllowDataStage,w
  4524  0CB9  0081               	movwf	1
  4525                           
  4526                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  4527  0CBA  3048               	movlw	72
  4528  0CBB  00F4               	movwf	??_USBCtrlEPAllowDataStage
  4529  0CBC  3000               	movlw	0
  4530  0CBD  00F5               	movwf	??_USBCtrlEPAllowDataStage+1
  4531  0CBE  087C               	movf	_pBDTEntryEP0OutNext,w
  4532  0CBF  3E02               	addlw	2
  4533  0CC0  0086               	movwf	6
  4534  0CC1  0187               	clrf	7
  4535  0CC2  0874               	movf	??_USBCtrlEPAllowDataStage,w
  4536  0CC3  3FC0               	movwi [0]fsr1
  4537  0CC4  0875               	movf	??_USBCtrlEPAllowDataStage+1,w
  4538  0CC5  3FC1               	movwi [1]fsr1
  4539                           
  4540                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  4541  0CC6  3048               	movlw	72
  4542  0CC7  00F4               	movwf	??_USBCtrlEPAllowDataStage
  4543  0CC8  087C               	movf	_pBDTEntryEP0OutNext,w
  4544  0CC9  0086               	movwf	6
  4545  0CCA  0187               	clrf	7
  4546  0CCB  0874               	movf	??_USBCtrlEPAllowDataStage,w
  4547  0CCC  0081               	movwf	1
  4548                           
  4549                           ;usb_device.c: 1518: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  4550  0CCD  087C               	movf	_pBDTEntryEP0OutNext,w
  4551  0CCE  0086               	movwf	6
  4552  0CCF  0187               	clrf	7
  4553  0CD0  1781               	bsf	1,7
  4554                           
  4555                           ;usb_device.c: 1519: }
  4556  0CD1  0008               	return
  4557  0CD2                     l3069:	
  4558                           
  4559                           ;usb_device.c: 1520: else
  4560                           ;usb_device.c: 1521: {
  4561                           ;usb_device.c: 1524: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  4562  0CD2  0864               	movf	((_inPipes+1)^(0+128)+3),w
  4563  0CD3  0020               	movlb	0	; select bank0
  4564  0CD4  0247               	subwf	71,w	;volatile
  4565  0CD5  1D03               	skipz
  4566  0CD6  2CDB               	goto	u2255
  4567  0CD7  0021               	movlb	1	; select bank1
  4568  0CD8  0863               	movf	(_inPipes^(0+128)+3),w
  4569  0CD9  0020               	movlb	0	; select bank0
  4570  0CDA  0246               	subwf	70,w	;volatile
  4571  0CDB                     u2255:	
  4572  0CDB  1803               	skipnc
  4573  0CDC  2CE4               	goto	l3073
  4574                           
  4575                           ;usb_device.c: 1525: {
  4576                           ;usb_device.c: 1526: inPipes[0].wCount.Val = SetupPkt.wLength;
  4577  0CDD  0847               	movf	71,w	;volatile
  4578  0CDE  0021               	movlb	1	; select bank1
  4579  0CDF  00E4               	movwf	((_inPipes+1)^(0+128)+3)
  4580  0CE0  0020               	movlb	0	; select bank0
  4581  0CE1  0846               	movf	70,w	;volatile
  4582  0CE2  0021               	movlb	1	; select bank1
  4583  0CE3  00E3               	movwf	(_inPipes^(0+128)+3)
  4584  0CE4                     l3073:	
  4585                           
  4586                           ;usb_device.c: 1527: }
  4587                           ;usb_device.c: 1528: USBCtrlTrfTxService();
  4588  0CE4  318E  2623         	fcall	_USBCtrlTrfTxService
  4589                           
  4590                           ;usb_device.c: 1533: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  4591  0CE6  3048               	movlw	72
  4592  0CE7  00F4               	movwf	??_USBCtrlEPAllowDataStage
  4593  0CE8  3000               	movlw	0
  4594  0CE9  00F5               	movwf	??_USBCtrlEPAllowDataStage+1
  4595  0CEA  0020               	movlb	0	; select bank0
  4596  0CEB  086B               	movf	_pBDTEntryIn,w
  4597  0CEC  3E02               	addlw	2
  4598  0CED  0086               	movwf	6
  4599  0CEE  0187               	clrf	7
  4600  0CEF  0874               	movf	??_USBCtrlEPAllowDataStage,w
  4601  0CF0  3FC0               	movwi [0]fsr1
  4602  0CF1  0875               	movf	??_USBCtrlEPAllowDataStage+1,w
  4603  0CF2  3FC1               	movwi [1]fsr1
  4604                           
  4605                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  4606  0CF3  3048               	movlw	72
  4607  0CF4  00F4               	movwf	??_USBCtrlEPAllowDataStage
  4608  0CF5  086B               	movf	_pBDTEntryIn,w
  4609  0CF6  0086               	movwf	6
  4610  0CF7  0187               	clrf	7
  4611  0CF8  0874               	movf	??_USBCtrlEPAllowDataStage,w
  4612  0CF9  0081               	movwf	1
  4613                           
  4614                           ;usb_device.c: 1535: pBDTEntryIn[0]->STAT.Val |= 0x80;
  4615  0CFA  086B               	movf	_pBDTEntryIn,w
  4616  0CFB  0086               	movwf	6
  4617  0CFC  0187               	clrf	7
  4618  0CFD  1781               	bsf	1,7
  4619  0CFE  0008               	return
  4620  0CFF                     __end_of_USBCtrlEPAllowDataStage:	
  4621                           
  4622                           	psect	text11
  4623  0CFF                     __ptext11:	
  4624 ;; *************** function _USBCheckStdRequest *****************
  4625 ;; Defined at:
  4626 ;;		line 2711 in file "../framework/usb/usb_device.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;		None
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;		None
  4631 ;; Return value:  Size  Location     Type
  4632 ;;		None               void
  4633 ;; Registers used:
  4634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4642 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4643 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4644 ;;Total ram usage:        1 bytes
  4645 ;; Hardware stack levels used:    1
  4646 ;; Hardware stack levels required when called:    6
  4647 ;; This function calls:
  4648 ;;		_USBStdFeatureReqHandler
  4649 ;;		_USBStdGetDscHandler
  4650 ;;		_USBStdGetStatusHandler
  4651 ;;		_USBStdSetCfgHandler
  4652 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4653 ;; This function is called by:
  4654 ;;		_USBCtrlTrfSetupHandler
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           
  4659                           ;psect for function _USBCheckStdRequest
  4660  0CFF                     _USBCheckStdRequest:	
  4661                           
  4662                           ;usb_device.c: 2713: if(SetupPkt.RequestType != (0x00>>5)) return;
  4663                           
  4664                           ;incstack = 0
  4665                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4666  0CFF  0020               	movlb	0	; select bank0
  4667  0D00  0E40               	swapf	64,w	;volatile
  4668  0D01  0C89               	rrf	9,f
  4669  0D02  3903               	andlw	3
  4670  0D03  3A00               	xorlw	0
  4671  0D04  1D03               	btfss	3,2
  4672  0D05  0008               	return
  4673  0D06  2D48               	goto	l4471
  4674  0D07                     l779:	
  4675                           ;usb_device.c: 2716: {
  4676                           ;usb_device.c: 2717: case 5:
  4677                           
  4678                           ;usb_device.c: 2715: switch(SetupPkt.bRequest)
  4679                           
  4680                           
  4681                           ;usb_device.c: 2718: inPipes[0].info.bits.busy = 1;
  4682  0D07  0021               	movlb	1	; select bank1
  4683  0D08  17E2               	bsf	(_inPipes^(0+128)+2),7
  4684                           
  4685                           ;usb_device.c: 2719: USBDeviceState = ADR_PENDING_STATE;
  4686  0D09  3008               	movlw	8
  4687  0D0A  0020               	movlb	0	; select bank0
  4688  0D0B  00E0               	movwf	??_USBCheckStdRequest
  4689  0D0C  0860               	movf	??_USBCheckStdRequest,w
  4690  0D0D  00ED               	movwf	_USBDeviceState
  4691                           
  4692                           ;usb_device.c: 2721: break;
  4693  0D0E  0008               	return
  4694  0D0F                     l4441:	
  4695                           ;usb_device.c: 2722: case 6:
  4696                           
  4697                           
  4698                           ;usb_device.c: 2723: USBStdGetDscHandler();
  4699  0D0F  318F  2702         	fcall	_USBStdGetDscHandler
  4700                           
  4701                           ;usb_device.c: 2724: break;
  4702  0D11  0008               	return
  4703  0D12                     l4443:	
  4704                           ;usb_device.c: 2725: case 9:
  4705                           
  4706                           
  4707                           ;usb_device.c: 2726: USBStdSetCfgHandler();
  4708  0D12  318F  2781         	fcall	_USBStdSetCfgHandler
  4709                           
  4710                           ;usb_device.c: 2727: break;
  4711  0D14  0008               	return
  4712  0D15                     l4445:	
  4713                           ;usb_device.c: 2728: case 8:
  4714                           
  4715                           
  4716                           ;usb_device.c: 2729: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  4717  0D15  30EE               	movlw	low _USBActiveConfiguration
  4718  0D16  0021               	movlb	1	; select bank1
  4719  0D17  00E0               	movwf	_inPipes^(0+128)
  4720  0D18  3000               	movlw	high _USBActiveConfiguration
  4721  0D19  00E1               	movwf	(_inPipes+1)^(0+128)
  4722                           
  4723                           ;usb_device.c: 2730: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  4724  0D1A  1462               	bsf	(_inPipes^(0+128)+2),0
  4725                           
  4726                           ;usb_device.c: 2731: inPipes[0].wCount.v[0] = 1;
  4727  0D1B  01E3               	clrf	(_inPipes^(0+128)+3)
  4728  0D1C  0AE3               	incf	(_inPipes^(0+128)+3),f
  4729                           
  4730                           ;usb_device.c: 2732: inPipes[0].info.bits.busy = 1;
  4731  0D1D  17E2               	bsf	(_inPipes^(0+128)+2),7
  4732                           
  4733                           ;usb_device.c: 2733: break;
  4734  0D1E  0008               	return
  4735  0D1F                     l4453:	
  4736                           ;usb_device.c: 2734: case 0:
  4737                           
  4738                           
  4739                           ;usb_device.c: 2735: USBStdGetStatusHandler();
  4740  0D1F  318C  240E         	fcall	_USBStdGetStatusHandler
  4741                           
  4742                           ;usb_device.c: 2736: break;
  4743  0D21  0008               	return
  4744  0D22                     l4455:	
  4745                           ;usb_device.c: 2737: case 1:
  4746                           
  4747                           
  4748                           ;usb_device.c: 2738: case 3:
  4749                           ;usb_device.c: 2739: USBStdFeatureReqHandler();
  4750  0D22  3181  2182         	fcall	_USBStdFeatureReqHandler
  4751                           
  4752                           ;usb_device.c: 2740: break;
  4753  0D24  0008               	return
  4754  0D25                     l4457:	
  4755                           ;usb_device.c: 2741: case 10:
  4756                           
  4757                           
  4758                           ;usb_device.c: 2742: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  4759  0D25  0020               	movlb	0	; select bank0
  4760  0D26  0844               	movf	68,w	;volatile
  4761  0D27  3EEF               	addlw	(low (_USBAlternateInterface| 0))& (0+255)
  4762  0D28  0021               	movlb	1	; select bank1
  4763  0D29  00E0               	movwf	_inPipes^(0+128)
  4764  0D2A  3000               	movlw	0
  4765  0D2B  00E1               	movwf	(_inPipes+1)^(0+128)
  4766                           
  4767                           ;usb_device.c: 2743: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  4768  0D2C  1462               	bsf	(_inPipes^(0+128)+2),0
  4769                           
  4770                           ;usb_device.c: 2744: inPipes[0].wCount.v[0] = 1;
  4771  0D2D  01E3               	clrf	(_inPipes^(0+128)+3)
  4772  0D2E  0AE3               	incf	(_inPipes^(0+128)+3),f
  4773                           
  4774                           ;usb_device.c: 2745: inPipes[0].info.bits.busy = 1;
  4775  0D2F  17E2               	bsf	(_inPipes^(0+128)+2),7
  4776                           
  4777                           ;usb_device.c: 2746: break;
  4778  0D30  0008               	return
  4779  0D31                     l788:	
  4780                           ;usb_device.c: 2747: case 11:
  4781                           
  4782                           
  4783                           ;usb_device.c: 2748: inPipes[0].info.bits.busy = 1;
  4784  0D31  0021               	movlb	1	; select bank1
  4785  0D32  17E2               	bsf	(_inPipes^(0+128)+2),7
  4786                           
  4787                           ;usb_device.c: 2749: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  4788  0D33  0020               	movlb	0	; select bank0
  4789  0D34  0842               	movf	66,w	;volatile
  4790  0D35  00E0               	movwf	??_USBCheckStdRequest
  4791  0D36  0844               	movf	68,w	;volatile
  4792  0D37  3EEF               	addlw	(low (_USBAlternateInterface| 0))& (0+255)
  4793  0D38  0086               	movwf	6
  4794  0D39  0187               	clrf	7
  4795  0D3A  0860               	movf	??_USBCheckStdRequest,w
  4796  0D3B  0081               	movwf	1
  4797                           
  4798                           ;usb_device.c: 2750: break;
  4799  0D3C  0008               	return
  4800  0D3D                     l4467:	
  4801                           ;usb_device.c: 2751: case 7:
  4802                           
  4803                           
  4804                           ;usb_device.c: 2752: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  4805  0D3D  3000               	movlw	0
  4806  0D3E  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4807  0D3F  3002               	movlw	2
  4808  0D40  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4809  0D41  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4810  0D42  3000               	movlw	0
  4811  0D43  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4812  0D44  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4813  0D45  318B  2349         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4814                           
  4815                           ;usb_device.c: 2757: }
  4816                           
  4817                           ;usb_device.c: 2756: break;
  4818                           
  4819                           ;usb_device.c: 2755: default:
  4820                           
  4821                           ;usb_device.c: 2754: case 12:
  4822                           
  4823                           ;usb_device.c: 2753: break;
  4824  0D47  0008               	return
  4825  0D48                     l4471:	
  4826  0D48  0020               	movlb	0	; select bank0
  4827  0D49  0841               	movf	65,w	;volatile
  4828                           
  4829                           ; Switch size 1, requested type "space"
  4830                           ; Number of cases is 11, Range of values is 0 to 12
  4831                           ; switch strategies available:
  4832                           ; Name         Instructions Cycles
  4833                           ; direct_byte           32     6 (fixed)
  4834                           ; simple_byte           34    18 (average)
  4835                           ; jumptable            260     6 (fixed)
  4836                           ;	Chosen strategy is direct_byte
  4837  0D4A  0084               	movwf	4
  4838  0D4B  300D               	movlw	13
  4839  0D4C  0204               	subwf	4,w
  4840  0D4D  1803               	skipnc
  4841  0D4E  0008               	return
  4842  0D4F  3188               	movlp	high S4835
  4843  0D50  3504               	lslf	4,w
  4844  0D51  3E00               	addlw	low S4835
  4845  0D52  0082               	movwf	2
  4846  0D53                     l777:	
  4847  0D53  0008               	return
  4848  0D54                     __end_of_USBCheckStdRequest:	
  4849                           
  4850                           	psect	swtext1
  4851  0800                     __pswtext1:	
  4852  0800                     S4835:	
  4853  0800  318D  2D1F         	ljmp	l4453
  4854  0802  318D  2D22         	ljmp	l4455
  4855  0804  318D  2D53         	ljmp	l777
  4856  0806  318D  2D22         	ljmp	l4455
  4857  0808  318D  2D53         	ljmp	l777
  4858  080A  318D  2D07         	ljmp	l779
  4859  080C  318D  2D0F         	ljmp	l4441
  4860  080E  318D  2D3D         	ljmp	l4467
  4861  0810  318D  2D15         	ljmp	l4445
  4862  0812  318D  2D12         	ljmp	l4443
  4863  0814  318D  2D25         	ljmp	l4457
  4864  0816  318D  2D31         	ljmp	l788
  4865  0818  318D  2D53         	ljmp	l777
  4866                           
  4867                           	psect	text12
  4868  0F81                     __ptext12:	
  4869 ;; *************** function _USBStdSetCfgHandler *****************
  4870 ;; Defined at:
  4871 ;;		line 1987 in file "../framework/usb/usb_device.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;		None
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;  p               2   10[BANK0 ] PTR unsigned char 
  4876 ;;		 -> UEP1(1), 
  4877 ;;  i               1   12[BANK0 ] unsigned char 
  4878 ;;  i               1   13[BANK0 ] unsigned char 
  4879 ;; Return value:  Size  Location     Type
  4880 ;;		None               void
  4881 ;; Registers used:
  4882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4889 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4890 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4891 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4892 ;;Total ram usage:        5 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; Hardware stack levels required when called:    5
  4895 ;; This function calls:
  4896 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4897 ;;		_memset
  4898 ;; This function is called by:
  4899 ;;		_USBCheckStdRequest
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           
  4903                           
  4904                           ;psect for function _USBStdSetCfgHandler
  4905  0F81                     _USBStdSetCfgHandler:	
  4906                           
  4907                           ;usb_device.c: 1989: uint8_t i;
  4908                           ;usb_device.c: 1992: inPipes[0].info.bits.busy = 1;
  4909                           
  4910                           ;incstack = 0
  4911                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4912  0F81  0021               	movlb	1	; select bank1
  4913  0F82  17E2               	bsf	(_inPipes^(0+128)+2),7
  4914                           
  4915                           ;usb_device.c: 1995: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 
      +                          0; };
  4916  0F83  300E               	movlw	14
  4917  0F84  0020               	movlb	0	; select bank0
  4918  0F85  00DB               	movwf	USBStdSetCfgHandler@p+1
  4919  0F86  3099               	movlw	153
  4920  0F87  00DA               	movwf	USBStdSetCfgHandler@p
  4921  0F88  01DC               	clrf	USBStdSetCfgHandler@i_2046
  4922  0F89  085C               	movf	USBStdSetCfgHandler@i_2046,w
  4923  0F8A  1D03               	btfss	3,2
  4924  0F8B  2F9C               	goto	l4319
  4925  0F8C                     l4311:	
  4926  0F8C  085A               	movf	USBStdSetCfgHandler@p,w
  4927  0F8D  0086               	movwf	6
  4928  0F8E  085B               	movf	USBStdSetCfgHandler@p+1,w
  4929  0F8F  0087               	movwf	7
  4930  0F90  0181               	clrf	1
  4931  0F91  3001               	movlw	1
  4932  0F92  07DA               	addwf	USBStdSetCfgHandler@p,f
  4933  0F93  3000               	movlw	0
  4934  0F94  3DDB               	addwfc	USBStdSetCfgHandler@p+1,f
  4935  0F95  3001               	movlw	1
  4936  0F96  00FB               	movwf	??_USBStdSetCfgHandler
  4937  0F97  087B               	movf	??_USBStdSetCfgHandler,w
  4938  0F98  07DC               	addwf	USBStdSetCfgHandler@i_2046,f
  4939  0F99  085C               	movf	USBStdSetCfgHandler@i_2046,w
  4940  0F9A  1903               	btfsc	3,2
  4941  0F9B  2F8C               	goto	l4311
  4942  0F9C                     l4319:	
  4943                           
  4944                           ;usb_device.c: 1998: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  4945  0F9C  3000               	movlw	0
  4946  0F9D  00F1               	movwf	memset@c
  4947  0F9E  00F2               	movwf	memset@c+1
  4948  0F9F  3020               	movlw	32
  4949  0FA0  00F3               	movwf	memset@n
  4950  0FA1  3000               	movlw	0
  4951  0FA2  00F4               	movwf	memset@n+1
  4952  0FA3  3020               	movlw	32
  4953  0FA4  318A  220A  318F   	fcall	_memset
  4954                           
  4955                           ;usb_device.c: 2001: UCONbits.PPBRST = 1;
  4956  0FA7  003D               	movlb	29	; select bank29
  4957  0FA8  170E               	bsf	14,6	;volatile
  4958                           
  4959                           ;usb_device.c: 2006: for(i = 0; i < (uint8_t)(1+1u); i++)
  4960  0FA9  0020               	movlb	0	; select bank0
  4961  0FAA  01DD               	clrf	USBStdSetCfgHandler@i
  4962  0FAB  3002               	movlw	2
  4963  0FAC  025D               	subwf	USBStdSetCfgHandler@i,w
  4964  0FAD  1803               	btfsc	3,0
  4965  0FAE  2FC3               	goto	l4335
  4966  0FAF                     l4329:	
  4967                           
  4968                           ;usb_device.c: 2007: {
  4969                           ;usb_device.c: 2008: ep_data_in[i].Val = 0u;
  4970  0FAF  085D               	movf	USBStdSetCfgHandler@i,w
  4971  0FB0  3E52               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4972  0FB1  0086               	movwf	6
  4973  0FB2  3001               	movlw	1	; select bank2/3
  4974  0FB3  0087               	movwf	7
  4975  0FB4  0181               	clrf	1
  4976                           
  4977                           ;usb_device.c: 2009: ep_data_out[i].Val = 0u;
  4978  0FB5  085D               	movf	USBStdSetCfgHandler@i,w
  4979  0FB6  3E54               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4980  0FB7  0086               	movwf	6
  4981  0FB8  3001               	movlw	1	; select bank2/3
  4982  0FB9  0087               	movwf	7
  4983  0FBA  0181               	clrf	1
  4984  0FBB  3001               	movlw	1
  4985  0FBC  00FB               	movwf	??_USBStdSetCfgHandler
  4986  0FBD  087B               	movf	??_USBStdSetCfgHandler,w
  4987  0FBE  07DD               	addwf	USBStdSetCfgHandler@i,f
  4988  0FBF  3002               	movlw	2
  4989  0FC0  025D               	subwf	USBStdSetCfgHandler@i,w
  4990  0FC1  1C03               	skipc
  4991  0FC2  2FAF               	goto	l4329
  4992  0FC3                     l4335:	
  4993                           
  4994                           ;usb_device.c: 2010: }
  4995                           ;usb_device.c: 2013: memset((void*)&USBAlternateInterface,0x00,1);
  4996  0FC3  3000               	movlw	0
  4997  0FC4  00F1               	movwf	memset@c
  4998  0FC5  00F2               	movwf	memset@c+1
  4999  0FC6  3001               	movlw	1
  5000  0FC7  00F3               	movwf	memset@n
  5001  0FC8  3000               	movlw	0
  5002  0FC9  00F4               	movwf	memset@n+1
  5003  0FCA  30EF               	movlw	(low (_USBAlternateInterface| 0))& (0+255)
  5004  0FCB  318A  220A  318F   	fcall	_memset
  5005                           
  5006                           ;usb_device.c: 2016: UCONbits.PPBRST = 0;
  5007  0FCE  003D               	movlb	29	; select bank29
  5008  0FCF  130E               	bcf	14,6	;volatile
  5009                           
  5010                           ;usb_device.c: 2018: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5011  0FD0  3028               	movlw	40
  5012  0FD1  00FB               	movwf	??_USBStdSetCfgHandler
  5013  0FD2  087B               	movf	??_USBStdSetCfgHandler,w
  5014  0FD3  0020               	movlb	0	; select bank0
  5015  0FD4  00EB               	movwf	_pBDTEntryIn
  5016                           
  5017                           ;usb_device.c: 2021: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  5018  0FD5  3020               	movlw	32
  5019  0FD6  00FB               	movwf	??_USBStdSetCfgHandler
  5020  0FD7  087B               	movf	??_USBStdSetCfgHandler,w
  5021  0FD8  00EE               	movwf	_pBDTEntryEP0OutCurrent
  5022                           
  5023                           ;usb_device.c: 2022: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5024  0FD9  086E               	movf	_pBDTEntryEP0OutCurrent,w
  5025  0FDA  00FB               	movwf	??_USBStdSetCfgHandler
  5026  0FDB  087B               	movf	??_USBStdSetCfgHandler,w
  5027  0FDC  00FC               	movwf	_pBDTEntryEP0OutNext
  5028                           
  5029                           ;usb_device.c: 2025: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  5030  0FDD  0842               	movf	66,w	;volatile
  5031  0FDE  00FB               	movwf	??_USBStdSetCfgHandler
  5032  0FDF  087B               	movf	??_USBStdSetCfgHandler,w
  5033  0FE0  0021               	movlb	1	; select bank1
  5034  0FE1  00EE               	movwf	_USBActiveConfiguration^(0+128)
  5035                           
  5036                           ;usb_device.c: 2028: if(USBActiveConfiguration == 0)
  5037  0FE2  086E               	movf	_USBActiveConfiguration^(0+128),w
  5038  0FE3  1D03               	btfss	3,2
  5039  0FE4  2FEB               	goto	l4351
  5040                           
  5041                           ;usb_device.c: 2029: {
  5042                           ;usb_device.c: 2031: USBDeviceState = ADDRESS_STATE;
  5043  0FE5  3010               	movlw	16
  5044  0FE6  00FB               	movwf	??_USBStdSetCfgHandler
  5045  0FE7  087B               	movf	??_USBStdSetCfgHandler,w
  5046  0FE8  0020               	movlb	0	; select bank0
  5047  0FE9  00ED               	movwf	_USBDeviceState
  5048                           
  5049                           ;usb_device.c: 2032: }
  5050  0FEA  0008               	return
  5051  0FEB                     l4351:	
  5052                           
  5053                           ;usb_device.c: 2033: else
  5054                           ;usb_device.c: 2034: {
  5055                           ;usb_device.c: 2036: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  5056  0FEB  3000               	movlw	0
  5057  0FEC  0020               	movlb	0	; select bank0
  5058  0FED  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5059  0FEE  3001               	movlw	1
  5060  0FEF  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5061  0FF0  30EE               	movlw	(low (_USBActiveConfiguration| 0))& (0+255)
  5062  0FF1  00FB               	movwf	??_USBStdSetCfgHandler
  5063  0FF2  087B               	movf	??_USBStdSetCfgHandler,w
  5064  0FF3  00D7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5065  0FF4  3001               	movlw	1
  5066  0FF5  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5067  0FF6  3000               	movlw	0
  5068  0FF7  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5069  0FF8  318B  2349         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5070                           
  5071                           ;usb_device.c: 2041: USBDeviceState = CONFIGURED_STATE;
  5072  0FFA  3020               	movlw	32
  5073  0FFB  00FB               	movwf	??_USBStdSetCfgHandler
  5074  0FFC  087B               	movf	??_USBStdSetCfgHandler,w
  5075  0FFD  0020               	movlb	0	; select bank0
  5076  0FFE  00ED               	movwf	_USBDeviceState
  5077  0FFF  0008               	return
  5078  1000                     __end_of_USBStdSetCfgHandler:	
  5079                           
  5080                           	psect	text13
  5081  0A0A                     __ptext13:	
  5082 ;; *************** function _memset *****************
  5083 ;; Defined at:
  5084 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;  p1              1    wreg     PTR void 
  5087 ;;		 -> USBAlternateInterface(1), BDT(32), 
  5088 ;;  c               2    1[COMMON] int 
  5089 ;;  n               2    3[COMMON] unsigned int 
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;  p1              1    7[COMMON] PTR void 
  5092 ;;		 -> USBAlternateInterface(1), BDT(32), 
  5093 ;;  p               1    6[COMMON] PTR unsigned char 
  5094 ;;		 -> USBAlternateInterface(1), BDT(32), 
  5095 ;; Return value:  Size  Location     Type
  5096 ;;                  1    wreg      PTR void 
  5097 ;; Registers used:
  5098 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5099 ;; Tracked objects:
  5100 ;;		On entry : 0/0
  5101 ;;		On exit  : 0/0
  5102 ;;		Unchanged: 0/0
  5103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5104 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5105 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5106 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5107 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5108 ;;Total ram usage:        7 bytes
  5109 ;; Hardware stack levels used:    1
  5110 ;; Hardware stack levels required when called:    1
  5111 ;; This function calls:
  5112 ;;		Nothing
  5113 ;; This function is called by:
  5114 ;;		_USBStdSetCfgHandler
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           
  5118                           
  5119                           ;psect for function _memset
  5120  0A0A                     _memset:	
  5121                           
  5122                           ;incstack = 0
  5123                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  5124                           ;memset@p1 stored from wreg
  5125  0A0A  00F7               	movwf	memset@p1
  5126  0A0B  0877               	movf	memset@p1,w
  5127  0A0C  00F5               	movwf	??_memset
  5128  0A0D  0875               	movf	??_memset,w
  5129  0A0E  00F6               	movwf	memset@p
  5130  0A0F                     l3019:	
  5131  0A0F  3001               	movlw	1
  5132  0A10  02F3               	subwf	memset@n,f
  5133  0A11  3000               	movlw	0
  5134  0A12  3BF4               	subwfb	memset@n+1,f
  5135  0A13  0A73               	incf	memset@n,w
  5136  0A14  1903               	btfsc	3,2
  5137  0A15  0A74               	incf	memset@n+1,w
  5138  0A16  1903               	btfsc	3,2
  5139  0A17  0008               	return
  5140  0A18  0871               	movf	memset@c,w
  5141  0A19  00F5               	movwf	??_memset
  5142  0A1A  0876               	movf	memset@p,w
  5143  0A1B  0086               	movwf	6
  5144  0A1C  0187               	clrf	7
  5145  0A1D  0875               	movf	??_memset,w
  5146  0A1E  0081               	movwf	1
  5147  0A1F  3001               	movlw	1
  5148  0A20  00F5               	movwf	??_memset
  5149  0A21  0875               	movf	??_memset,w
  5150  0A22  07F6               	addwf	memset@p,f
  5151  0A23  2A0F               	goto	l3019
  5152  0A24                     __end_of_memset:	
  5153                           ;	Return value of _memset is never used
  5154                           
  5155                           
  5156                           	psect	text14
  5157  0C0E                     __ptext14:	
  5158 ;; *************** function _USBStdGetStatusHandler *****************
  5159 ;; Defined at:
  5160 ;;		line 2148 in file "../framework/usb/usb_device.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;		None
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;  p               1    2[COMMON] PTR struct __BDT
  5165 ;;		 -> BDT(32), NULL(0), 
  5166 ;; Return value:  Size  Location     Type
  5167 ;;		None               void
  5168 ;; Registers used:
  5169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5176 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5177 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5178 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5179 ;;Total ram usage:        2 bytes
  5180 ;; Hardware stack levels used:    1
  5181 ;; Hardware stack levels required when called:    1
  5182 ;; This function calls:
  5183 ;;		Nothing
  5184 ;; This function is called by:
  5185 ;;		_USBCheckStdRequest
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188                           
  5189                           
  5190                           ;psect for function _USBStdGetStatusHandler
  5191  0C0E                     _USBStdGetStatusHandler:	
  5192                           
  5193                           ;usb_device.c: 2150: CtrlTrfData[0] = 0;
  5194                           
  5195                           ;incstack = 0
  5196                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  5197  0C0E  0020               	movlb	0	; select bank0
  5198  0C0F  01C8               	clrf	72	;volatile
  5199                           
  5200                           ;usb_device.c: 2151: CtrlTrfData[1] = 0;
  5201  0C10  01C9               	clrf	73	;volatile
  5202                           
  5203                           ;usb_device.c: 2153: switch(SetupPkt.Recipient)
  5204  0C11  2C42               	goto	l3183
  5205  0C12                     l715:	
  5206                           ;usb_device.c: 2154: {
  5207                           ;usb_device.c: 2155: case (0x00):
  5208                           
  5209                           
  5210                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  5211  0C12  0021               	movlb	1	; select bank1
  5212  0C13  17E2               	bsf	(_inPipes^(0+128)+2),7
  5213                           
  5214                           ;usb_device.c: 2164: }
  5215                           ;usb_device.c: 2166: if(RemoteWakeup == 1)
  5216                           
  5217                           ;usb_device.c: 2162: {
  5218                           ;usb_device.c: 2163: CtrlTrfData[0]|=0x01;
  5219                           
  5220                           ;usb_device.c: 2161: if(0 == 1)
  5221  0C14  0022               	movlb	2	; select bank2
  5222  0C15  035B               	decf	_RemoteWakeup^(0+256),w
  5223  0C16  1D03               	btfss	3,2
  5224  0C17  2C4E               	goto	l718
  5225                           
  5226                           ;usb_device.c: 2167: {
  5227                           ;usb_device.c: 2168: CtrlTrfData[0]|=0x02;
  5228  0C18  0020               	movlb	0	; select bank0
  5229  0C19  14C8               	bsf	72,1	;volatile
  5230                           
  5231                           ;usb_device.c: 2169: }
  5232                           ;usb_device.c: 2170: break;
  5233  0C1A  2C4E               	goto	l718
  5234  0C1B                     l719:	
  5235                           ;usb_device.c: 2171: case (0x01):
  5236                           
  5237                           
  5238                           ;usb_device.c: 2172: inPipes[0].info.bits.busy = 1;
  5239  0C1B  0021               	movlb	1	; select bank1
  5240  0C1C  17E2               	bsf	(_inPipes^(0+128)+2),7
  5241                           
  5242                           ;usb_device.c: 2173: break;
  5243  0C1D  2C4E               	goto	l718
  5244  0C1E                     l720:	
  5245                           ;usb_device.c: 2174: case (0x02):
  5246                           
  5247                           
  5248                           ;usb_device.c: 2175: inPipes[0].info.bits.busy = 1;
  5249  0C1E  0021               	movlb	1	; select bank1
  5250  0C1F  17E2               	bsf	(_inPipes^(0+128)+2),7
  5251                           
  5252                           ;usb_device.c: 2179: {
  5253                           ;usb_device.c: 2180: BDT_ENTRY *p;
  5254                           ;usb_device.c: 2182: if(SetupPkt.EPDir == 0)
  5255  0C20  0020               	movlb	0	; select bank0
  5256  0C21  1BC4               	btfsc	68,7	;volatile
  5257  0C22  2C2A               	goto	l3173
  5258                           
  5259                           ;usb_device.c: 2183: {
  5260                           ;usb_device.c: 2184: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  5261  0C23  0844               	movf	68,w	;volatile
  5262  0C24  390F               	andlw	15
  5263  0C25  3E58               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5264  0C26  0086               	movwf	6
  5265  0C27  3001               	movlw	1	; select bank2/3
  5266  0C28  0087               	movwf	7
  5267  0C29  2C2F               	goto	L2
  5268  0C2A                     l3173:	
  5269                           ;usb_device.c: 2185: }
  5270                           
  5271                           
  5272                           ;usb_device.c: 2186: else
  5273                           ;usb_device.c: 2187: {
  5274                           ;usb_device.c: 2188: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  5275  0C2A  0844               	movf	68,w	;volatile
  5276  0C2B  390F               	andlw	15
  5277  0C2C  3E6B               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  5278  0C2D  0086               	movwf	6
  5279  0C2E  0187               	clrf	7
  5280  0C2F                     L2:	
  5281  0C2F  0801               	movf	1,w
  5282  0C30  00F1               	movwf	??_USBStdGetStatusHandler
  5283  0C31  0871               	movf	??_USBStdGetStatusHandler,w
  5284  0C32  00F2               	movwf	USBStdGetStatusHandler@p
  5285                           
  5286                           ;usb_device.c: 2189: }
  5287                           ;usb_device.c: 2191: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  5288  0C33  0872               	movf	USBStdGetStatusHandler@p,w
  5289  0C34  0086               	movwf	6
  5290  0C35  0187               	clrf	7
  5291  0C36  1F81               	btfss	1,7
  5292  0C37  2C4E               	goto	l718
  5293  0C38  0872               	movf	USBStdGetStatusHandler@p,w
  5294  0C39  0086               	movwf	6
  5295  0C3A  0187               	clrf	7
  5296  0C3B  1D01               	btfss	1,2
  5297  0C3C  2C4E               	goto	l718
  5298                           
  5299                           ;usb_device.c: 2192: CtrlTrfData[0]=0x01;
  5300  0C3D  3001               	movlw	1
  5301  0C3E  00F1               	movwf	??_USBStdGetStatusHandler
  5302  0C3F  0871               	movf	??_USBStdGetStatusHandler,w
  5303  0C40  00C8               	movwf	72	;volatile
  5304                           
  5305                           ;usb_device.c: 2194: }
  5306                           ;usb_device.c: 2195: }
  5307                           
  5308                           ;usb_device.c: 2193: break;
  5309  0C41  2C4E               	goto	l718
  5310  0C42                     l3183:	
  5311  0C42  0840               	movf	64,w	;volatile
  5312  0C43  391F               	andlw	31
  5313                           
  5314                           ; Switch size 1, requested type "space"
  5315                           ; Number of cases is 3, Range of values is 0 to 2
  5316                           ; switch strategies available:
  5317                           ; Name         Instructions Cycles
  5318                           ; simple_byte           10     6 (average)
  5319                           ; direct_byte           12     6 (fixed)
  5320                           ; jumptable            260     6 (fixed)
  5321                           ;	Chosen strategy is simple_byte
  5322  0C44  3A00               	xorlw	0	; case 0
  5323  0C45  1903               	skipnz
  5324  0C46  2C12               	goto	l715
  5325  0C47  3A01               	xorlw	1	; case 1
  5326  0C48  1903               	skipnz
  5327  0C49  2C1B               	goto	l719
  5328  0C4A  3A03               	xorlw	3	; case 2
  5329  0C4B  1903               	skipnz
  5330  0C4C  2C1E               	goto	l720
  5331  0C4D  2C4E               	goto	l718
  5332  0C4E                     l718:	
  5333                           
  5334                           ;usb_device.c: 2197: if(inPipes[0].info.bits.busy == 1)
  5335  0C4E  0021               	movlb	1	; select bank1
  5336  0C4F  1FE2               	btfss	(_inPipes^(0+128)+2),7
  5337  0C50  0008               	return
  5338                           
  5339                           ;usb_device.c: 2198: {
  5340                           ;usb_device.c: 2199: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  5341  0C51  3048               	movlw	72
  5342  0C52  00E0               	movwf	_inPipes^(0+128)
  5343  0C53  3000               	movlw	0
  5344  0C54  00E1               	movwf	(_inPipes+1)^(0+128)
  5345                           
  5346                           ;usb_device.c: 2200: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5347  0C55  1462               	bsf	(_inPipes^(0+128)+2),0
  5348                           
  5349                           ;usb_device.c: 2201: inPipes[0].wCount.v[0] = 2;
  5350  0C56  3002               	movlw	2
  5351  0C57  00F1               	movwf	??_USBStdGetStatusHandler
  5352  0C58  0871               	movf	??_USBStdGetStatusHandler,w
  5353  0C59  00E3               	movwf	(_inPipes^(0+128)+3)
  5354  0C5A  0008               	return
  5355  0C5B                     __end_of_USBStdGetStatusHandler:	
  5356                           
  5357                           	psect	text15
  5358  0F02                     __ptext15:	
  5359 ;; *************** function _USBStdGetDscHandler *****************
  5360 ;; Defined at:
  5361 ;;		line 2062 in file "../framework/usb/usb_device.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;		None
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;		None
  5366 ;; Return value:  Size  Location     Type
  5367 ;;		None               void
  5368 ;; Registers used:
  5369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5377 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5378 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5379 ;;Total ram usage:        3 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; Hardware stack levels required when called:    1
  5382 ;; This function calls:
  5383 ;;		Nothing
  5384 ;; This function is called by:
  5385 ;;		_USBCheckStdRequest
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           
  5390                           ;psect for function _USBStdGetDscHandler
  5391  0F02                     _USBStdGetDscHandler:	
  5392                           
  5393                           ;usb_device.c: 2064: if(SetupPkt.bmRequestType == 0x80)
  5394                           
  5395                           ;incstack = 0
  5396                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  5397  0F02  3080               	movlw	128
  5398  0F03  0020               	movlb	0	; select bank0
  5399  0F04  0640               	xorwf	64,w	;volatile
  5400  0F05  1D03               	btfss	3,2
  5401  0F06  0008               	return
  5402                           
  5403                           ;usb_device.c: 2065: {
  5404                           ;usb_device.c: 2066: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  5405  0F07  30C0               	movlw	192
  5406  0F08  00F1               	movwf	??_USBStdGetDscHandler
  5407  0F09  0871               	movf	??_USBStdGetDscHandler,w
  5408  0F0A  0021               	movlb	1	; select bank1
  5409  0F0B  00E2               	movwf	(_inPipes^(0+128)+2)
  5410                           
  5411                           ;usb_device.c: 2068: switch(SetupPkt.bDescriptorType)
  5412  0F0C  2F74               	goto	l3161
  5413  0F0D                     l3137:	
  5414                           ;usb_device.c: 2069: {
  5415                           ;usb_device.c: 2070: case 0x01:
  5416                           
  5417                           
  5418                           ;usb_device.c: 2074: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  5419  0F0D  306E               	movlw	low (_device_dsc| (0+32768))
  5420  0F0E  0021               	movlb	1	; select bank1
  5421  0F0F  00E0               	movwf	_inPipes^(0+128)
  5422  0F10  3083               	movlw	high (_device_dsc| (0+32768))
  5423  0F11  00E1               	movwf	(_inPipes^(0+128)+1)
  5424                           
  5425                           ;usb_device.c: 2076: inPipes[0].wCount.Val = sizeof(device_dsc);
  5426  0F12  3012               	movlw	18
  5427  0F13  00E3               	movwf	(_inPipes^(0+128)+3)
  5428  0F14  3000               	movlw	0
  5429  0F15  00E4               	movwf	(_inPipes^(0+128)+4)
  5430                           
  5431                           ;usb_device.c: 2077: break;
  5432  0F16  0008               	return
  5433  0F17                     l3139:	
  5434                           ;usb_device.c: 2078: case 0x02:
  5435                           
  5436                           
  5437                           ;usb_device.c: 2082: if(SetupPkt.bDscIndex < 1)
  5438  0F17  0020               	movlb	0	; select bank0
  5439  0F18  0842               	movf	66,w	;volatile
  5440  0F19  1D03               	btfss	3,2
  5441  0F1A  2F4A               	goto	l3147
  5442                           
  5443                           ;usb_device.c: 2083: {
  5444                           ;usb_device.c: 2085: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  5445  0F1B  0842               	movf	66,w	;volatile
  5446  0F1C  00F1               	movwf	??_USBStdGetDscHandler
  5447  0F1D  01F2               	clrf	??_USBStdGetDscHandler+1
  5448  0F1E  35F1               	lslf	??_USBStdGetDscHandler,f
  5449  0F1F  0DF2               	rlf	??_USBStdGetDscHandler+1,f
  5450  0F20  30B5               	movlw	low (_USB_CD_Ptr| (0+32768))
  5451  0F21  0771               	addwf	??_USBStdGetDscHandler,w
  5452  0F22  0084               	movwf	4
  5453  0F23  3082               	movlw	high (_USB_CD_Ptr| (0+32768))
  5454  0F24  3D72               	addwfc	??_USBStdGetDscHandler+1,w
  5455  0F25  0085               	movwf	5
  5456  0F26  3F00               	moviw [0]fsr0
  5457  0F27  0021               	movlb	1	; select bank1
  5458  0F28  00E0               	movwf	_inPipes^(0+128)
  5459  0F29  3F01               	moviw [1]fsr0
  5460  0F2A  00E1               	movwf	(_inPipes+1)^(0+128)
  5461                           
  5462                           ;usb_device.c: 2093: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  5463  0F2B  0861               	movf	(_inPipes+1)^(0+128),w
  5464  0F2C  00F2               	movwf	??_USBStdGetDscHandler+1
  5465  0F2D  0860               	movf	_inPipes^(0+128),w
  5466  0F2E  00F1               	movwf	??_USBStdGetDscHandler
  5467  0F2F  3002               	movlw	2
  5468  0F30  0771               	addwf	??_USBStdGetDscHandler,w
  5469  0F31  0084               	movwf	4
  5470  0F32  0872               	movf	??_USBStdGetDscHandler+1,w
  5471  0F33  1803               	skipnc
  5472  0F34  0A72               	incf	??_USBStdGetDscHandler+1,w
  5473  0F35  0085               	movwf	5
  5474  0F36  0800               	movf	0,w	;code access
  5475  0F37  00F3               	movwf	??_USBStdGetDscHandler+2
  5476  0F38  0873               	movf	??_USBStdGetDscHandler+2,w
  5477  0F39  00E3               	movwf	(_inPipes^(0+128)+3)
  5478                           
  5479                           ;usb_device.c: 2094: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  5480  0F3A  0861               	movf	(_inPipes+1)^(0+128),w
  5481  0F3B  00F2               	movwf	??_USBStdGetDscHandler+1
  5482  0F3C  0860               	movf	_inPipes^(0+128),w
  5483  0F3D  00F1               	movwf	??_USBStdGetDscHandler
  5484  0F3E  3003               	movlw	3
  5485  0F3F  0771               	addwf	??_USBStdGetDscHandler,w
  5486  0F40  0084               	movwf	4
  5487  0F41  0872               	movf	??_USBStdGetDscHandler+1,w
  5488  0F42  1803               	skipnc
  5489  0F43  0A72               	incf	??_USBStdGetDscHandler+1,w
  5490  0F44  0085               	movwf	5
  5491  0F45  0800               	movf	0,w	;code access
  5492  0F46  00F3               	movwf	??_USBStdGetDscHandler+2
  5493  0F47  0873               	movf	??_USBStdGetDscHandler+2,w
  5494  0F48  00E4               	movwf	(_inPipes^(0+128)+4)
  5495                           
  5496                           ;usb_device.c: 2095: }
  5497  0F49  0008               	return
  5498  0F4A                     l3147:	
  5499                           
  5500                           ;usb_device.c: 2096: else
  5501                           ;usb_device.c: 2097: {
  5502                           ;usb_device.c: 2098: inPipes[0].info.Val = 0;
  5503  0F4A  0021               	movlb	1	; select bank1
  5504  0F4B  01E2               	clrf	(_inPipes^(0+128)+2)
  5505                           
  5506                           ;usb_device.c: 2099: }
  5507                           ;usb_device.c: 2100: break;
  5508  0F4C  0008               	return
  5509  0F4D                     l3149:	
  5510                           ;usb_device.c: 2101: case 0x03:
  5511                           
  5512                           
  5513                           ;usb_device.c: 2105: if(SetupPkt.bDscIndex<3)
  5514  0F4D  3003               	movlw	3
  5515  0F4E  0020               	movlb	0	; select bank0
  5516  0F4F  0242               	subwf	66,w	;volatile
  5517  0F50  1803               	skipnc
  5518  0F51  2F6E               	goto	l3155
  5519                           
  5520                           ;usb_device.c: 2106: {
  5521                           ;usb_device.c: 2108: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  5522  0F52  0842               	movf	66,w	;volatile
  5523  0F53  00F1               	movwf	??_USBStdGetDscHandler
  5524  0F54  01F2               	clrf	??_USBStdGetDscHandler+1
  5525  0F55  35F1               	lslf	??_USBStdGetDscHandler,f
  5526  0F56  0DF2               	rlf	??_USBStdGetDscHandler+1,f
  5527  0F57  30AF               	movlw	low (_USB_SD_Ptr| (0+32768))
  5528  0F58  0771               	addwf	??_USBStdGetDscHandler,w
  5529  0F59  0084               	movwf	4
  5530  0F5A  3082               	movlw	high (_USB_SD_Ptr| (0+32768))
  5531  0F5B  3D72               	addwfc	??_USBStdGetDscHandler+1,w
  5532  0F5C  0085               	movwf	5
  5533  0F5D  3F00               	moviw [0]fsr0
  5534  0F5E  0021               	movlb	1	; select bank1
  5535  0F5F  00E0               	movwf	_inPipes^(0+128)
  5536  0F60  3F01               	moviw [1]fsr0
  5537  0F61  00E1               	movwf	(_inPipes+1)^(0+128)
  5538                           
  5539                           ;usb_device.c: 2110: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  5540  0F62  0860               	movf	_inPipes^(0+128),w
  5541  0F63  0084               	movwf	4
  5542  0F64  0861               	movf	(_inPipes+1)^(0+128),w
  5543  0F65  0085               	movwf	5
  5544  0F66  0800               	movf	0,w	;code access
  5545  0F67  00F1               	movwf	??_USBStdGetDscHandler
  5546  0F68  01F2               	clrf	??_USBStdGetDscHandler+1
  5547  0F69  0871               	movf	??_USBStdGetDscHandler,w
  5548  0F6A  00E3               	movwf	(_inPipes^(0+128)+3)
  5549  0F6B  0872               	movf	??_USBStdGetDscHandler+1,w
  5550  0F6C  00E4               	movwf	((_inPipes+1)^(0+128)+3)
  5551                           
  5552                           ;usb_device.c: 2111: }
  5553  0F6D  0008               	return
  5554  0F6E                     l3155:	
  5555                           
  5556                           ;usb_device.c: 2121: else
  5557                           ;usb_device.c: 2122: {
  5558                           ;usb_device.c: 2123: inPipes[0].info.Val = 0;
  5559  0F6E  0021               	movlb	1	; select bank1
  5560  0F6F  01E2               	clrf	(_inPipes^(0+128)+2)
  5561                           
  5562                           ;usb_device.c: 2124: }
  5563                           ;usb_device.c: 2125: break;
  5564  0F70  0008               	return
  5565  0F71                     l3157:	
  5566                           ;usb_device.c: 2126: default:
  5567                           
  5568                           
  5569                           ;usb_device.c: 2127: inPipes[0].info.Val = 0;
  5570  0F71  0021               	movlb	1	; select bank1
  5571  0F72  01E2               	clrf	(_inPipes^(0+128)+2)
  5572                           
  5573                           ;usb_device.c: 2129: }
  5574                           
  5575                           ;usb_device.c: 2128: break;
  5576  0F73  0008               	return
  5577  0F74                     l3161:	
  5578  0F74  0020               	movlb	0	; select bank0
  5579  0F75  0843               	movf	67,w	;volatile
  5580                           
  5581                           ; Switch size 1, requested type "space"
  5582                           ; Number of cases is 3, Range of values is 1 to 3
  5583                           ; switch strategies available:
  5584                           ; Name         Instructions Cycles
  5585                           ; simple_byte           10     6 (average)
  5586                           ; direct_byte           15     9 (fixed)
  5587                           ; jumptable            263     9 (fixed)
  5588                           ;	Chosen strategy is simple_byte
  5589  0F76  3A01               	xorlw	1	; case 1
  5590  0F77  1903               	skipnz
  5591  0F78  2F0D               	goto	l3137
  5592  0F79  3A03               	xorlw	3	; case 2
  5593  0F7A  1903               	skipnz
  5594  0F7B  2F17               	goto	l3139
  5595  0F7C  3A01               	xorlw	1	; case 3
  5596  0F7D  1903               	skipnz
  5597  0F7E  2F4D               	goto	l3149
  5598  0F7F  2F71               	goto	l3157
  5599  0F80  0008               	return
  5600  0F81                     __end_of_USBStdGetDscHandler:	
  5601                           
  5602                           	psect	text16
  5603  0182                     __ptext16:	
  5604 ;; *************** function _USBStdFeatureReqHandler *****************
  5605 ;; Defined at:
  5606 ;;		line 2779 in file "../framework/usb/usb_device.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;		None
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;  pUEP            2   12[BANK0 ] PTR unsigned char 
  5611 ;;		 -> UEP0(1), 
  5612 ;;  p               1   15[BANK0 ] PTR struct __BDT
  5613 ;;		 -> BDT(32), NULL(0), 
  5614 ;;  current_ep_d    1   14[BANK0 ] struct .
  5615 ;; Return value:  Size  Location     Type
  5616 ;;		None               void
  5617 ;; Registers used:
  5618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5625 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5626 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5627 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5628 ;;Total ram usage:        6 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; Hardware stack levels required when called:    5
  5631 ;; This function calls:
  5632 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5633 ;; This function is called by:
  5634 ;;		_USBCheckStdRequest
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           
  5639                           ;psect for function _USBStdFeatureReqHandler
  5640  0182                     _USBStdFeatureReqHandler:	
  5641                           
  5642                           ;usb_device.c: 2781: BDT_ENTRY *p;
  5643                           ;usb_device.c: 2782: EP_STATUS current_ep_data;
  5644                           ;usb_device.c: 2786: unsigned char* pUEP;
  5645                           ;usb_device.c: 2824: if((SetupPkt.bFeature == 1)&&
  5646                           ;usb_device.c: 2825: (SetupPkt.Recipient == (0x00)))
  5647                           
  5648                           ;incstack = 0
  5649                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5650  0182  0020               	movlb	0	; select bank0
  5651  0183  0342               	decf	66,w	;volatile
  5652  0184  1D03               	btfss	3,2
  5653  0185  2998               	goto	l4367
  5654  0186  0840               	movf	64,w	;volatile
  5655  0187  391F               	andlw	31
  5656  0188  3A00               	xorlw	0
  5657  0189  1D03               	skipz
  5658  018A  2998               	goto	l4367
  5659                           
  5660                           ;usb_device.c: 2826: {
  5661                           ;usb_device.c: 2827: inPipes[0].info.bits.busy = 1;
  5662  018B  0021               	movlb	1	; select bank1
  5663  018C  17E2               	bsf	(_inPipes^(0+128)+2),7
  5664                           
  5665                           ;usb_device.c: 2828: if(SetupPkt.bRequest == 3)
  5666  018D  3003               	movlw	3
  5667  018E  0020               	movlb	0	; select bank0
  5668  018F  0641               	xorwf	65,w	;volatile
  5669  0190  1D03               	btfss	3,2
  5670  0191  2996               	goto	l4365
  5671                           
  5672                           ;usb_device.c: 2829: RemoteWakeup = 1;
  5673  0192  0022               	movlb	2	; select bank2
  5674  0193  01DB               	clrf	_RemoteWakeup^(0+256)
  5675  0194  0ADB               	incf	_RemoteWakeup^(0+256),f
  5676  0195  2998               	goto	l4367
  5677  0196                     l4365:	
  5678                           
  5679                           ;usb_device.c: 2830: else
  5680                           ;usb_device.c: 2831: RemoteWakeup = 0;
  5681  0196  0022               	movlb	2	; select bank2
  5682  0197  01DB               	clrf	_RemoteWakeup^(0+256)
  5683  0198                     l4367:	
  5684                           
  5685                           ;usb_device.c: 2832: }
  5686                           ;usb_device.c: 2835: if((SetupPkt.bFeature == 0)&&
  5687                           ;usb_device.c: 2836: (SetupPkt.Recipient == (0x02))&&
  5688                           ;usb_device.c: 2837: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
  5689                           ;usb_device.c: 2838: (USBDeviceState == CONFIGURED_STATE))
  5690  0198  0020               	movlb	0	; select bank0
  5691  0199  0842               	movf	66,w	;volatile
  5692  019A  1D03               	btfss	3,2
  5693  019B  0008               	return
  5694  019C  0840               	movf	64,w	;volatile
  5695  019D  391F               	andlw	31
  5696  019E  3A02               	xorlw	2
  5697  019F  1D03               	skipz
  5698  01A0  0008               	return
  5699  01A1  0844               	movf	68,w	;volatile
  5700  01A2  390F               	andlw	15
  5701  01A3  3A00               	xorlw	0
  5702  01A4  1903               	skipnz
  5703  01A5  0008               	return
  5704  01A6  0844               	movf	68,w	;volatile
  5705  01A7  390F               	andlw	15
  5706  01A8  00DA               	movwf	??_USBStdFeatureReqHandler
  5707  01A9  3002               	movlw	2
  5708  01AA  025A               	subwf	??_USBStdFeatureReqHandler,w
  5709  01AB  1803               	skipnc
  5710  01AC  0008               	return
  5711  01AD  3020               	movlw	32
  5712  01AE  066D               	xorwf	_USBDeviceState,w
  5713  01AF  1D03               	btfss	3,2
  5714  01B0  0008               	return
  5715                           
  5716                           ;usb_device.c: 2839: {
  5717                           ;usb_device.c: 2842: inPipes[0].info.bits.busy = 1;
  5718  01B1  0021               	movlb	1	; select bank1
  5719  01B2  17E2               	bsf	(_inPipes^(0+128)+2),7
  5720                           
  5721                           ;usb_device.c: 2845: if(SetupPkt.EPDir == 0)
  5722  01B3  0020               	movlb	0	; select bank0
  5723  01B4  1BC4               	btfsc	68,7	;volatile
  5724  01B5  29C4               	goto	l4381
  5725                           
  5726                           ;usb_device.c: 2846: {
  5727                           ;usb_device.c: 2847: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  5728  01B6  0844               	movf	68,w	;volatile
  5729  01B7  390F               	andlw	15
  5730  01B8  3E58               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5731  01B9  0086               	movwf	6
  5732  01BA  3001               	movlw	1	; select bank2/3
  5733  01BB  0087               	movwf	7
  5734  01BC  0801               	movf	1,w
  5735  01BD  00DA               	movwf	??_USBStdFeatureReqHandler
  5736  01BE  085A               	movf	??_USBStdFeatureReqHandler,w
  5737  01BF  00DF               	movwf	USBStdFeatureReqHandler@p
  5738                           
  5739                           ;usb_device.c: 2848: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  5740  01C0  0844               	movf	68,w	;volatile
  5741  01C1  390F               	andlw	15
  5742  01C2  3E54               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5743  01C3  29D0               	goto	L3
  5744  01C4                     l4381:	
  5745                           ;usb_device.c: 2849: }
  5746                           
  5747                           
  5748                           ;usb_device.c: 2850: else
  5749                           ;usb_device.c: 2851: {
  5750                           ;usb_device.c: 2852: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  5751  01C4  0844               	movf	68,w	;volatile
  5752  01C5  390F               	andlw	15
  5753  01C6  3E6B               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  5754  01C7  0086               	movwf	6
  5755  01C8  0187               	clrf	7
  5756  01C9  0801               	movf	1,w
  5757  01CA  00DA               	movwf	??_USBStdFeatureReqHandler
  5758  01CB  085A               	movf	??_USBStdFeatureReqHandler,w
  5759  01CC  00DF               	movwf	USBStdFeatureReqHandler@p
  5760                           
  5761                           ;usb_device.c: 2853: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  5762  01CD  0844               	movf	68,w	;volatile
  5763  01CE  390F               	andlw	15
  5764  01CF  3E52               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5765  01D0                     L3:	
  5766  01D0  0086               	movwf	6
  5767  01D1  3001               	movlw	1	; select bank2/3
  5768  01D2  0087               	movwf	7
  5769  01D3  0801               	movf	1,w
  5770  01D4  00DA               	movwf	??_USBStdFeatureReqHandler
  5771  01D5  085A               	movf	??_USBStdFeatureReqHandler,w
  5772  01D6  00DE               	movwf	USBStdFeatureReqHandler@current_ep_data
  5773                           
  5774                           ;usb_device.c: 2854: }
  5775                           ;usb_device.c: 2860: if(current_ep_data.bits.ping_pong_state == 0)
  5776  01D7  185E               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  5777  01D8  29DE               	goto	l800
  5778                           
  5779                           ;usb_device.c: 2861: {
  5780                           ;usb_device.c: 2862: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  5781  01D9  30FB               	movlw	251
  5782  01DA  00DA               	movwf	??_USBStdFeatureReqHandler
  5783  01DB  085A               	movf	??_USBStdFeatureReqHandler,w
  5784  01DC  05DF               	andwf	USBStdFeatureReqHandler@p,f
  5785                           
  5786                           ;usb_device.c: 2863: }
  5787  01DD  29DF               	goto	l801
  5788  01DE                     l800:	
  5789                           
  5790                           ;usb_device.c: 2864: else
  5791                           ;usb_device.c: 2865: {
  5792                           ;usb_device.c: 2866: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  5793  01DE  155F               	bsf	USBStdFeatureReqHandler@p,2
  5794  01DF                     l801:	
  5795                           
  5796                           ;usb_device.c: 2867: }
  5797                           ;usb_device.c: 2872: if(SetupPkt.EPDir == 0)
  5798  01DF  1BC4               	btfsc	68,7	;volatile
  5799  01E0  29EA               	goto	l4389
  5800                           
  5801                           ;usb_device.c: 2873: {
  5802                           ;usb_device.c: 2874: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  5803  01E1  085F               	movf	USBStdFeatureReqHandler@p,w
  5804  01E2  00DA               	movwf	??_USBStdFeatureReqHandler
  5805  01E3  0844               	movf	68,w	;volatile
  5806  01E4  390F               	andlw	15
  5807  01E5  3E58               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5808  01E6  0086               	movwf	6
  5809  01E7  3001               	movlw	1	; select bank2/3
  5810  01E8  0087               	movwf	7
  5811  01E9  29F1               	goto	L4
  5812  01EA                     l4389:	
  5813                           ;usb_device.c: 2875: }
  5814                           
  5815                           
  5816                           ;usb_device.c: 2876: else
  5817                           ;usb_device.c: 2877: {
  5818                           ;usb_device.c: 2878: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  5819  01EA  085F               	movf	USBStdFeatureReqHandler@p,w
  5820  01EB  00DA               	movwf	??_USBStdFeatureReqHandler
  5821  01EC  0844               	movf	68,w	;volatile
  5822  01ED  390F               	andlw	15
  5823  01EE  3E6B               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  5824  01EF  0086               	movwf	6
  5825  01F0  0187               	clrf	7
  5826  01F1                     L4:	
  5827  01F1  085A               	movf	??_USBStdFeatureReqHandler,w
  5828  01F2  0081               	movwf	1
  5829                           
  5830                           ;usb_device.c: 2879: }
  5831                           ;usb_device.c: 2882: if(SetupPkt.bRequest == 3)
  5832  01F3  3003               	movlw	3
  5833  01F4  0641               	xorwf	65,w	;volatile
  5834  01F5  1D03               	btfss	3,2
  5835  01F6  2A12               	goto	l4405
  5836                           
  5837                           ;usb_device.c: 2883: {
  5838                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  5839  01F7  085F               	movf	USBStdFeatureReqHandler@p,w
  5840  01F8  0086               	movwf	6
  5841  01F9  0187               	clrf	7
  5842  01FA  1F81               	btfss	1,7
  5843  01FB  2A09               	goto	l4401
  5844                           
  5845                           ;usb_device.c: 2885: {
  5846                           ;usb_device.c: 2888: if(SetupPkt.EPDir == 0)
  5847  01FC  1BC4               	btfsc	68,7	;volatile
  5848  01FD  2A02               	goto	l4399
  5849                           
  5850                           ;usb_device.c: 2889: {
  5851                           ;usb_device.c: 2890: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  5852  01FE  0844               	movf	68,w	;volatile
  5853  01FF  390F               	andlw	15
  5854  0200  3E54               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5855  0201  2A05               	goto	L5
  5856  0202                     l4399:	
  5857                           ;usb_device.c: 2891: }
  5858                           
  5859                           
  5860                           ;usb_device.c: 2892: else
  5861                           ;usb_device.c: 2893: {
  5862                           ;usb_device.c: 2894: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  5863  0202  0844               	movf	68,w	;volatile
  5864  0203  390F               	andlw	15
  5865  0204  3E52               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5866  0205                     L5:	
  5867  0205  0086               	movwf	6
  5868  0206  3001               	movlw	1	; select bank2/3
  5869  0207  0087               	movwf	7
  5870  0208  1481               	bsf	1,1
  5871  0209                     l4401:	
  5872                           
  5873                           ;usb_device.c: 2895: }
  5874                           ;usb_device.c: 2896: }
  5875                           ;usb_device.c: 2899: p->STAT.Val |= 0x04;
  5876  0209  085F               	movf	USBStdFeatureReqHandler@p,w
  5877  020A  0086               	movwf	6
  5878  020B  0187               	clrf	7
  5879  020C  1501               	bsf	1,2
  5880                           
  5881                           ;usb_device.c: 2900: p->STAT.Val |= 0x80;
  5882  020D  085F               	movf	USBStdFeatureReqHandler@p,w
  5883  020E  0086               	movwf	6
  5884  020F  0187               	clrf	7
  5885  0210  1781               	bsf	1,7
  5886                           
  5887                           ;usb_device.c: 2901: }
  5888  0211  0008               	return
  5889  0212                     l4405:	
  5890                           
  5891                           ;usb_device.c: 2902: else
  5892                           ;usb_device.c: 2903: {
  5893                           ;usb_device.c: 2907: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  5894  0212  3004               	movlw	4
  5895  0213  00DA               	movwf	??_USBStdFeatureReqHandler
  5896  0214  085A               	movf	??_USBStdFeatureReqHandler,w
  5897  0215  06DF               	xorwf	USBStdFeatureReqHandler@p,f
  5898                           
  5899                           ;usb_device.c: 2909: if(p->STAT.UOWN == 1)
  5900  0216  085F               	movf	USBStdFeatureReqHandler@p,w
  5901  0217  0086               	movwf	6
  5902  0218  0187               	clrf	7
  5903  0219  1F81               	btfss	1,7
  5904  021A  2A36               	goto	l4415
  5905                           
  5906                           ;usb_device.c: 2910: {
  5907                           ;usb_device.c: 2913: p->STAT.Val &= (~0x80);
  5908  021B  307F               	movlw	127
  5909  021C  00DA               	movwf	??_USBStdFeatureReqHandler
  5910  021D  085F               	movf	USBStdFeatureReqHandler@p,w
  5911  021E  0086               	movwf	6
  5912  021F  0187               	clrf	7
  5913  0220  085A               	movf	??_USBStdFeatureReqHandler,w
  5914  0221  0581               	andwf	1,f
  5915                           
  5916                           ;usb_device.c: 2914: p->STAT.Val |= 0x40;
  5917  0222  085F               	movf	USBStdFeatureReqHandler@p,w
  5918  0223  0086               	movwf	6
  5919  0224  0187               	clrf	7
  5920  0225  1701               	bsf	1,6
  5921                           
  5922                           ;usb_device.c: 2915: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  5923  0226  3000               	movlw	0
  5924  0227  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5925  0228  3005               	movlw	5
  5926  0229  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5927  022A  085F               	movf	USBStdFeatureReqHandler@p,w
  5928  022B  00DA               	movwf	??_USBStdFeatureReqHandler
  5929  022C  085A               	movf	??_USBStdFeatureReqHandler,w
  5930  022D  00D7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5931  022E  3001               	movlw	1
  5932  022F  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5933  0230  3000               	movlw	0
  5934  0231  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5935  0232  318B  2349  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5936                           
  5937                           ;usb_device.c: 2916: }
  5938  0235  2A3B               	goto	l4417
  5939  0236                     l4415:	
  5940                           
  5941                           ;usb_device.c: 2917: else
  5942                           ;usb_device.c: 2918: {
  5943                           ;usb_device.c: 2920: p->STAT.Val |= 0x40;
  5944  0236  0020               	movlb	0	; select bank0
  5945  0237  085F               	movf	USBStdFeatureReqHandler@p,w
  5946  0238  0086               	movwf	6
  5947  0239  0187               	clrf	7
  5948  023A  1701               	bsf	1,6
  5949  023B                     l4417:	
  5950                           
  5951                           ;usb_device.c: 2921: }
  5952                           ;usb_device.c: 2925: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  5953  023B  3004               	movlw	4
  5954  023C  0020               	movlb	0	; select bank0
  5955  023D  00DA               	movwf	??_USBStdFeatureReqHandler
  5956  023E  085A               	movf	??_USBStdFeatureReqHandler,w
  5957  023F  06DF               	xorwf	USBStdFeatureReqHandler@p,f
  5958                           
  5959                           ;usb_device.c: 2931: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  5960  0240  18DE               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  5961  0241  2A47               	goto	l813
  5962  0242  085F               	movf	USBStdFeatureReqHandler@p,w
  5963  0243  0086               	movwf	6
  5964  0244  0187               	clrf	7
  5965  0245  1F81               	btfss	1,7
  5966  0246  2A6B               	goto	l4429
  5967  0247                     l813:	
  5968                           
  5969                           ;usb_device.c: 2932: {
  5970                           ;usb_device.c: 2933: if(SetupPkt.EPDir == 0)
  5971  0247  1BC4               	btfsc	68,7	;volatile
  5972  0248  2A4D               	goto	l4425
  5973                           
  5974                           ;usb_device.c: 2934: {
  5975                           ;usb_device.c: 2935: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  5976  0249  0844               	movf	68,w	;volatile
  5977  024A  390F               	andlw	15
  5978  024B  3E54               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5979  024C  2A50               	goto	L6
  5980  024D                     l4425:	
  5981                           ;usb_device.c: 2936: }
  5982                           
  5983                           
  5984                           ;usb_device.c: 2937: else
  5985                           ;usb_device.c: 2938: {
  5986                           ;usb_device.c: 2939: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  5987  024D  0844               	movf	68,w	;volatile
  5988  024E  390F               	andlw	15
  5989  024F  3E52               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5990  0250                     L6:	
  5991  0250  0086               	movwf	6
  5992  0251  3001               	movlw	1	; select bank2/3
  5993  0252  0087               	movwf	7
  5994  0253  1081               	bcf	1,1
  5995                           
  5996                           ;usb_device.c: 2940: }
  5997                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  5998  0254  303B               	movlw	59
  5999  0255  00DA               	movwf	??_USBStdFeatureReqHandler
  6000  0256  085F               	movf	USBStdFeatureReqHandler@p,w
  6001  0257  0086               	movwf	6
  6002  0258  0187               	clrf	7
  6003  0259  085A               	movf	??_USBStdFeatureReqHandler,w
  6004  025A  0581               	andwf	1,f
  6005                           
  6006                           ;usb_device.c: 2945: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  6007  025B  3000               	movlw	0
  6008  025C  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6009  025D  3005               	movlw	5
  6010  025E  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6011  025F  085F               	movf	USBStdFeatureReqHandler@p,w
  6012  0260  00DA               	movwf	??_USBStdFeatureReqHandler
  6013  0261  085A               	movf	??_USBStdFeatureReqHandler,w
  6014  0262  00D7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6015  0263  3001               	movlw	1
  6016  0264  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6017  0265  3000               	movlw	0
  6018  0266  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6019  0267  318B  2349  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6020                           
  6021                           ;usb_device.c: 2946: }
  6022  026A  2A73               	goto	l4431
  6023  026B                     l4429:	
  6024                           
  6025                           ;usb_device.c: 2947: else
  6026                           ;usb_device.c: 2948: {
  6027                           ;usb_device.c: 2950: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  6028  026B  303B               	movlw	59
  6029  026C  0020               	movlb	0	; select bank0
  6030  026D  00DA               	movwf	??_USBStdFeatureReqHandler
  6031  026E  085F               	movf	USBStdFeatureReqHandler@p,w
  6032  026F  0086               	movwf	6
  6033  0270  0187               	clrf	7
  6034  0271  085A               	movf	??_USBStdFeatureReqHandler,w
  6035  0272  0581               	andwf	1,f
  6036  0273                     l4431:	
  6037                           
  6038                           ;usb_device.c: 2951: }
  6039                           ;usb_device.c: 2998: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  6040  0273  0020               	movlb	0	; select bank0
  6041  0274  0844               	movf	68,w	;volatile
  6042  0275  390F               	andlw	15
  6043  0276  3E98               	addlw	152
  6044  0277  00DA               	movwf	??_USBStdFeatureReqHandler
  6045  0278  01DB               	clrf	??_USBStdFeatureReqHandler+1
  6046  0279  300E               	movlw	14
  6047  027A  3DDB               	addwfc	??_USBStdFeatureReqHandler+1,f
  6048  027B  085A               	movf	??_USBStdFeatureReqHandler,w
  6049  027C  00DC               	movwf	USBStdFeatureReqHandler@pUEP
  6050  027D  085B               	movf	??_USBStdFeatureReqHandler+1,w
  6051  027E  00DD               	movwf	USBStdFeatureReqHandler@pUEP+1
  6052                           
  6053                           ;usb_device.c: 3002: *pUEP &= ~0x0001;
  6054  027F  30FE               	movlw	254
  6055  0280  00DA               	movwf	??_USBStdFeatureReqHandler
  6056  0281  085C               	movf	USBStdFeatureReqHandler@pUEP,w
  6057  0282  0086               	movwf	6
  6058  0283  085D               	movf	USBStdFeatureReqHandler@pUEP+1,w
  6059  0284  0087               	movwf	7
  6060  0285  085A               	movf	??_USBStdFeatureReqHandler,w
  6061  0286  0581               	andwf	1,f
  6062  0287  0008               	return
  6063  0288                     __end_of_USBStdFeatureReqHandler:	
  6064                           
  6065                           	psect	text17
  6066  0B49                     __ptext17:	
  6067 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  6068 ;; Defined at:
  6069 ;;		line 87 in file "../src/main.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;  event           2    5[BANK0 ] enum E2694
  6072 ;;  pdata           1    7[BANK0 ] PTR void 
  6073 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(32), NULL(0), 
  6074 ;;  size            2    8[BANK0 ] unsigned int 
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;		None
  6077 ;; Return value:  Size  Location     Type
  6078 ;;                  1    wreg      unsigned char 
  6079 ;; Registers used:
  6080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6081 ;; Tracked objects:
  6082 ;;		On entry : 0/0
  6083 ;;		On exit  : 0/0
  6084 ;;		Unchanged: 0/0
  6085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6086 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6089 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6090 ;;Total ram usage:        5 bytes
  6091 ;; Hardware stack levels used:    1
  6092 ;; Hardware stack levels required when called:    4
  6093 ;; This function calls:
  6094 ;;		_APP_DeviceAudioMIDIInitialize
  6095 ;;		_APP_DeviceAudioMIDISOFHandler
  6096 ;;		_APP_LEDUpdateUSBStatus
  6097 ;; This function is called by:
  6098 ;;		_USBDeviceTasks
  6099 ;;		_USBStdSetCfgHandler
  6100 ;;		_USBSuspend
  6101 ;;		_USBWakeFromSuspend
  6102 ;;		_USBCtrlTrfSetupHandler
  6103 ;;		_USBCheckStdRequest
  6104 ;;		_USBStdFeatureReqHandler
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           
  6109                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  6110  0B49                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  6111                           
  6112                           ;main.c: 89: switch( (int) event )
  6113                           
  6114                           ;incstack = 0
  6115                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  6116  0B49  2B59               	goto	l4293
  6117  0B4A                     l4281:	
  6118                           ;main.c: 94: case EVENT_SOF:
  6119                           
  6120                           ;main.c: 92: break;
  6121                           
  6122                           ;main.c: 90: {
  6123                           ;main.c: 91: case EVENT_TRANSFER:
  6124                           
  6125                           
  6126                           ;main.c: 97: APP_LEDUpdateUSBStatus();
  6127  0B4A  318B  23C1  318B   	fcall	_APP_LEDUpdateUSBStatus
  6128                           
  6129                           ;main.c: 98: APP_DeviceAudioMIDISOFHandler();
  6130  0B4D  3189  2117         	fcall	_APP_DeviceAudioMIDISOFHandler
  6131                           
  6132                           ;main.c: 99: break;
  6133  0B4F  0008               	return
  6134  0B50                     l4285:	
  6135                           ;main.c: 101: case EVENT_SUSPEND:
  6136                           
  6137                           
  6138                           ;main.c: 103: APP_LEDUpdateUSBStatus();
  6139  0B50  318B  23C1         	fcall	_APP_LEDUpdateUSBStatus
  6140                           
  6141                           ;main.c: 104: break;
  6142  0B52  0008               	return
  6143  0B53                     l4287:	
  6144                           ;main.c: 106: case EVENT_RESUME:
  6145                           
  6146                           
  6147                           ;main.c: 108: APP_LEDUpdateUSBStatus();
  6148  0B53  318B  23C1         	fcall	_APP_LEDUpdateUSBStatus
  6149                           
  6150                           ;main.c: 109: break;
  6151  0B55  0008               	return
  6152  0B56                     l4289:	
  6153                           ;main.c: 111: case EVENT_CONFIGURED:
  6154                           
  6155                           
  6156                           ;main.c: 114: APP_DeviceAudioMIDIInitialize();
  6157  0B56  318A  22BF         	fcall	_APP_DeviceAudioMIDIInitialize
  6158                           
  6159                           ;main.c: 131: }
  6160                           
  6161                           ;main.c: 130: break;
  6162                           
  6163                           ;main.c: 129: default:
  6164                           
  6165                           ;main.c: 127: break;
  6166                           
  6167                           ;main.c: 126: case EVENT_TRANSFER_TERMINATED:
  6168                           
  6169                           ;main.c: 124: break;
  6170                           
  6171                           ;main.c: 123: case EVENT_BUS_ERROR:
  6172                           
  6173                           ;main.c: 121: break;
  6174                           
  6175                           ;main.c: 120: case EVENT_EP0_REQUEST:
  6176                           
  6177                           ;main.c: 118: break;
  6178                           
  6179                           ;main.c: 117: case EVENT_SET_DESCRIPTOR:
  6180                           
  6181                           ;main.c: 115: break;
  6182  0B58  0008               	return
  6183  0B59                     l4293:	
  6184                           
  6185                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  6186                           ; Switch size 1, requested type "space"
  6187                           ; Number of cases is 2, Range of values is 0 to 127
  6188                           ; switch strategies available:
  6189                           ; Name         Instructions Cycles
  6190                           ; simple_byte            7     4 (average)
  6191                           ; direct_byte          262     6 (fixed)
  6192                           ; jumptable            260     6 (fixed)
  6193                           ;	Chosen strategy is simple_byte
  6194  0B59  0020               	movlb	0	; select bank0
  6195  0B5A  0856               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  6196  0B5B  3A00               	xorlw	0	; case 0
  6197  0B5C  1903               	skipnz
  6198  0B5D  2B62               	goto	l4837
  6199  0B5E  3A7F               	xorlw	127	; case 127
  6200  0B5F  1903               	skipnz
  6201  0B60  2B7C               	goto	l4839
  6202  0B61  2B81               	goto	l88
  6203  0B62                     l4837:	
  6204                           
  6205                           ; Switch size 1, requested type "space"
  6206                           ; Number of cases is 8, Range of values is 1 to 117
  6207                           ; switch strategies available:
  6208                           ; Name         Instructions Cycles
  6209                           ; simple_byte           25    13 (average)
  6210                           ; direct_byte          243     9 (fixed)
  6211                           ; jumptable            263     9 (fixed)
  6212                           ;	Chosen strategy is simple_byte
  6213  0B62  0855               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  6214  0B63  3A01               	xorlw	1	; case 1
  6215  0B64  1903               	skipnz
  6216  0B65  2B56               	goto	l4289
  6217  0B66  3A03               	xorlw	3	; case 2
  6218  0B67  1903               	skipnz
  6219  0B68  2B81               	goto	l88
  6220  0B69  3A01               	xorlw	1	; case 3
  6221  0B6A  1903               	skipnz
  6222  0B6B  2B81               	goto	l88
  6223  0B6C  3A06               	xorlw	6	; case 5
  6224  0B6D  1903               	skipnz
  6225  0B6E  2B81               	goto	l88
  6226  0B6F  3A77               	xorlw	119	; case 114
  6227  0B70  1903               	skipnz
  6228  0B71  2B81               	goto	l88
  6229  0B72  3A01               	xorlw	1	; case 115
  6230  0B73  1903               	skipnz
  6231  0B74  2B4A               	goto	l4281
  6232  0B75  3A07               	xorlw	7	; case 116
  6233  0B76  1903               	skipnz
  6234  0B77  2B53               	goto	l4287
  6235  0B78  3A01               	xorlw	1	; case 117
  6236  0B79  1903               	skipnz
  6237  0B7A  2B50               	goto	l4285
  6238  0B7B  2B81               	goto	l88
  6239  0B7C                     l4839:	
  6240                           
  6241                           ; Switch size 1, requested type "space"
  6242                           ; Number of cases is 1, Range of values is 255 to 255
  6243                           ; switch strategies available:
  6244                           ; Name         Instructions Cycles
  6245                           ; simple_byte            4     3 (average)
  6246                           ; direct_byte            7     5 (fixed)
  6247                           ; jumptable            263     9 (fixed)
  6248                           ;	Chosen strategy is simple_byte
  6249  0B7C  0855               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  6250  0B7D  3AFF               	xorlw	255	; case 255
  6251  0B7E  1903               	skipnz
  6252  0B7F  2B81               	goto	l88
  6253  0B80  2B81               	goto	l88
  6254  0B81                     l88:	
  6255                           ;main.c: 132: return 1;
  6256                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  6257                           
  6258  0B81  0008               	return
  6259  0B82                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  6260                           
  6261                           	psect	text18
  6262  0BC1                     __ptext18:	
  6263 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  6264 ;; Defined at:
  6265 ;;		line 23 in file "../src/app_led_usb_status.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;		None
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;		None
  6270 ;; Return value:  Size  Location     Type
  6271 ;;		None               void
  6272 ;; Registers used:
  6273 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6283 ;;Total ram usage:        0 bytes
  6284 ;; Hardware stack levels used:    1
  6285 ;; Hardware stack levels required when called:    2
  6286 ;; This function calls:
  6287 ;;		_LED_Off
  6288 ;;		_LED_On
  6289 ;; This function is called by:
  6290 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6291 ;; This function uses a non-reentrant model
  6292 ;;
  6293                           
  6294                           
  6295                           ;psect for function _APP_LEDUpdateUSBStatus
  6296  0BC1                     _APP_LEDUpdateUSBStatus:	
  6297                           
  6298                           ;app_led_usb_status.c: 25: static uint16_t ledCount = 0;
  6299                           ;app_led_usb_status.c: 27: if(UCONbits.SUSPND == 1)
  6300                           
  6301                           ;incstack = 0
  6302                           ; Regs used in _APP_LEDUpdateUSBStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6303  0BC1  003D               	movlb	29	; select bank29
  6304  0BC2  1C8E               	btfss	14,1	;volatile
  6305  0BC3  2C02               	goto	l2929
  6306                           
  6307                           ;app_led_usb_status.c: 28: {
  6308                           ;app_led_usb_status.c: 29: LED_Off(LED_D1);
  6309  0BC4  3001               	movlw	1
  6310  0BC5  3189  21BF         	fcall	_LED_Off
  6311                           
  6312                           ;app_led_usb_status.c: 30: return;
  6313  0BC7  0008               	return
  6314  0BC8                     l2903:	
  6315                           ;app_led_usb_status.c: 34: {
  6316                           ;app_led_usb_status.c: 35: case CONFIGURED_STATE:
  6317                           
  6318                           ;app_led_usb_status.c: 31: }
  6319                           ;app_led_usb_status.c: 33: switch(USBDeviceState)
  6320                           
  6321                           
  6322                           ;app_led_usb_status.c: 38: if(ledCount == 1)
  6323  0BC8  0021               	movlb	1	; select bank1
  6324  0BC9  0365               	decf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  6325  0BCA  0466               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  6326  0BCB  1D03               	btfss	3,2
  6327  0BCC  2BD2               	goto	l2907
  6328                           
  6329                           ;app_led_usb_status.c: 39: {
  6330                           ;app_led_usb_status.c: 40: LED_On(LED_D1);
  6331  0BCD  3001               	movlw	1
  6332  0BCE  3189  21D8  318B   	fcall	_LED_On
  6333                           
  6334                           ;app_led_usb_status.c: 41: }
  6335  0BD1  2C08               	goto	l2931
  6336  0BD2                     l2907:	
  6337                           
  6338                           ;app_led_usb_status.c: 42: else if(ledCount == 75)
  6339  0BD2  304B               	movlw	75
  6340  0BD3  0021               	movlb	1	; select bank1
  6341  0BD4  0665               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  6342  0BD5  0466               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  6343  0BD6  1D03               	btfss	3,2
  6344  0BD7  2BDD               	goto	l2911
  6345                           
  6346                           ;app_led_usb_status.c: 43: {
  6347                           ;app_led_usb_status.c: 44: LED_Off(LED_D1);
  6348  0BD8  3001               	movlw	1
  6349  0BD9  3189  21BF  318B   	fcall	_LED_Off
  6350                           
  6351                           ;app_led_usb_status.c: 45: }
  6352  0BDC  2C08               	goto	l2931
  6353  0BDD                     l2911:	
  6354                           
  6355                           ;app_led_usb_status.c: 46: else if(ledCount > 150)
  6356  0BDD  3000               	movlw	0
  6357  0BDE  0021               	movlb	1	; select bank1
  6358  0BDF  0266               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  6359  0BE0  3097               	movlw	151
  6360  0BE1  2BFB               	goto	L7
  6361  0BE2                     l2915:	
  6362                           ;app_led_usb_status.c: 52: default:
  6363                           
  6364                           ;app_led_usb_status.c: 49: }
  6365                           ;app_led_usb_status.c: 50: break;
  6366                           
  6367                           ;app_led_usb_status.c: 47: {
  6368                           ;app_led_usb_status.c: 48: ledCount = 0;
  6369                           
  6370                           
  6371                           ;app_led_usb_status.c: 55: if(ledCount == 1)
  6372  0BE2  0021               	movlb	1	; select bank1
  6373  0BE3  0365               	decf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  6374  0BE4  0466               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  6375  0BE5  1D03               	btfss	3,2
  6376  0BE6  2BEC               	goto	l2919
  6377                           
  6378                           ;app_led_usb_status.c: 56: {
  6379                           ;app_led_usb_status.c: 57: LED_On(LED_D1);
  6380  0BE7  3001               	movlw	1
  6381  0BE8  3189  21D8  318B   	fcall	_LED_On
  6382                           
  6383                           ;app_led_usb_status.c: 58: }
  6384  0BEB  2C08               	goto	l2931
  6385  0BEC                     l2919:	
  6386                           
  6387                           ;app_led_usb_status.c: 59: else if(ledCount == 50)
  6388  0BEC  3032               	movlw	50
  6389  0BED  0021               	movlb	1	; select bank1
  6390  0BEE  0665               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  6391  0BEF  0466               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  6392  0BF0  1D03               	btfss	3,2
  6393  0BF1  2BF7               	goto	l2923
  6394                           
  6395                           ;app_led_usb_status.c: 60: {
  6396                           ;app_led_usb_status.c: 61: LED_Off(LED_D1);
  6397  0BF2  3001               	movlw	1
  6398  0BF3  3189  21BF  318B   	fcall	_LED_Off
  6399                           
  6400                           ;app_led_usb_status.c: 62: }
  6401  0BF6  2C08               	goto	l2931
  6402  0BF7                     l2923:	
  6403                           
  6404                           ;app_led_usb_status.c: 63: else if(ledCount > 950)
  6405  0BF7  3003               	movlw	3
  6406  0BF8  0021               	movlb	1	; select bank1
  6407  0BF9  0266               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  6408  0BFA  30B7               	movlw	183
  6409  0BFB                     L7:	
  6410  0BFB  1903               	skipnz
  6411  0BFC  0265               	subwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  6412  0BFD  1C03               	skipc
  6413  0BFE  2C08               	goto	l2931
  6414                           
  6415                           ;app_led_usb_status.c: 64: {
  6416                           ;app_led_usb_status.c: 65: ledCount = 0;
  6417  0BFF  01E5               	clrf	APP_LEDUpdateUSBStatus@ledCount^(0+128)
  6418  0C00  01E6               	clrf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128)
  6419                           
  6420                           ;app_led_usb_status.c: 68: }
  6421                           
  6422                           ;app_led_usb_status.c: 66: }
  6423                           ;app_led_usb_status.c: 67: break;
  6424  0C01  2C08               	goto	l2931
  6425  0C02                     l2929:	
  6426  0C02  0020               	movlb	0	; select bank0
  6427  0C03  086D               	movf	_USBDeviceState,w
  6428                           
  6429                           ; Switch size 1, requested type "space"
  6430                           ; Number of cases is 1, Range of values is 32 to 32
  6431                           ; switch strategies available:
  6432                           ; Name         Instructions Cycles
  6433                           ; simple_byte            4     3 (average)
  6434                           ; direct_byte           11     9 (fixed)
  6435                           ; jumptable            263     9 (fixed)
  6436                           ;	Chosen strategy is simple_byte
  6437  0C04  3A20               	xorlw	32	; case 32
  6438  0C05  1903               	skipnz
  6439  0C06  2BC8               	goto	l2903
  6440  0C07  2BE2               	goto	l2915
  6441  0C08                     l2931:	
  6442                           
  6443                           ;app_led_usb_status.c: 71: ledCount++;
  6444  0C08  3001               	movlw	1
  6445  0C09  0021               	movlb	1	; select bank1
  6446  0C0A  07E5               	addwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),f
  6447  0C0B  3000               	movlw	0
  6448  0C0C  3DE6               	addwfc	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),f
  6449  0C0D  0008               	return
  6450  0C0E                     __end_of_APP_LEDUpdateUSBStatus:	
  6451                           
  6452                           	psect	text19
  6453  0917                     __ptext19:	
  6454 ;; *************** function _APP_DeviceAudioMIDISOFHandler *****************
  6455 ;; Defined at:
  6456 ;;		line 53 in file "../src/app_device_audio_midi.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;		None
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;		None
  6461 ;; Return value:  Size  Location     Type
  6462 ;;		None               void
  6463 ;; Registers used:
  6464 ;;		wreg, status,2, status,0
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6474 ;;Total ram usage:        0 bytes
  6475 ;; Hardware stack levels used:    1
  6476 ;; Hardware stack levels required when called:    1
  6477 ;; This function calls:
  6478 ;;		Nothing
  6479 ;; This function is called by:
  6480 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484                           
  6485                           ;psect for function _APP_DeviceAudioMIDISOFHandler
  6486  0917                     _APP_DeviceAudioMIDISOFHandler:	
  6487                           
  6488                           ;app_device_audio_midi.c: 54: if(msCounter != 0) msCounter--;
  6489                           
  6490                           ;incstack = 0
  6491                           ; Regs used in _APP_DeviceAudioMIDISOFHandler: [wreg+status,2+status,0]
  6492  0917  0021               	movlb	1	; select bank1
  6493  0918  086A               	movf	_msCounter^(0+128),w
  6494  0919  1903               	btfsc	3,2
  6495  091A  0008               	return
  6496  091B  3001               	movlw	1
  6497  091C  02EA               	subwf	_msCounter^(0+128),f
  6498  091D  0008               	return
  6499  091E                     __end_of_APP_DeviceAudioMIDISOFHandler:	
  6500                           
  6501                           	psect	text20
  6502  0ABF                     __ptext20:	
  6503 ;; *************** function _APP_DeviceAudioMIDIInitialize *****************
  6504 ;; Defined at:
  6505 ;;		line 40 in file "../src/app_device_audio_midi.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;		None
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;		None
  6510 ;; Return value:  Size  Location     Type
  6511 ;;		None               void
  6512 ;; Registers used:
  6513 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6521 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6522 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6523 ;;Total ram usage:        2 bytes
  6524 ;; Hardware stack levels used:    1
  6525 ;; Hardware stack levels required when called:    3
  6526 ;; This function calls:
  6527 ;;		_USBEnableEndpoint
  6528 ;;		_USBTransferOnePacket
  6529 ;; This function is called by:
  6530 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534                           
  6535                           ;psect for function _APP_DeviceAudioMIDIInitialize
  6536  0ABF                     _APP_DeviceAudioMIDIInitialize:	
  6537                           
  6538                           ;app_device_audio_midi.c: 42: USBTxHandle = (0);
  6539                           
  6540                           ;incstack = 0
  6541                           ; Regs used in _APP_DeviceAudioMIDIInitialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
  6542  0ABF  0021               	movlb	1	; select bank1
  6543  0AC0  01E8               	clrf	_USBTxHandle^(0+128)
  6544                           
  6545                           ;app_device_audio_midi.c: 43: USBRxHandle = (0);
  6546  0AC1  0022               	movlb	2	; select bank2
  6547  0AC2  01DF               	clrf	_USBRxHandle^(0+256)
  6548                           
  6549                           ;app_device_audio_midi.c: 44: pitch = 0x3C;
  6550  0AC3  303C               	movlw	60
  6551  0AC4  0020               	movlb	0	; select bank0
  6552  0AC5  00D3               	movwf	??_APP_DeviceAudioMIDIInitialize
  6553  0AC6  0853               	movf	??_APP_DeviceAudioMIDIInitialize,w
  6554  0AC7  0021               	movlb	1	; select bank1
  6555  0AC8  00EB               	movwf	_pitch^(0+128)
  6556                           
  6557                           ;app_device_audio_midi.c: 45: sentNoteOff = 1;
  6558  0AC9  0022               	movlb	2	; select bank2
  6559  0ACA  01E7               	clrf	_sentNoteOff^(0+256)
  6560  0ACB  0AE7               	incf	_sentNoteOff^(0+256),f
  6561                           
  6562                           ;app_device_audio_midi.c: 46: msCounter = 0;
  6563  0ACC  0021               	movlb	1	; select bank1
  6564  0ACD  01EA               	clrf	_msCounter^(0+128)
  6565                           
  6566                           ;app_device_audio_midi.c: 48: USBEnableEndpoint(1,0x04|0x02|0x10|0x08);
  6567  0ACE  301E               	movlw	30
  6568  0ACF  0020               	movlb	0	; select bank0
  6569  0AD0  00D3               	movwf	??_APP_DeviceAudioMIDIInitialize
  6570  0AD1  0853               	movf	??_APP_DeviceAudioMIDIInitialize,w
  6571  0AD2  00F8               	movwf	USBEnableEndpoint@options
  6572  0AD3  3001               	movlw	1
  6573  0AD4  318A  2278  318A   	fcall	_USBEnableEndpoint
  6574                           
  6575                           ;app_device_audio_midi.c: 50: USBRxHandle = USBTransferOnePacket(1,0,(uint8_t*)&Received
      +                          DataBuffer,64);
  6576  0AD7  01F1               	clrf	USBTransferOnePacket@dir
  6577  0AD8  30A0               	movlw	160
  6578  0AD9  00F2               	movwf	USBTransferOnePacket@data
  6579  0ADA  3000               	movlw	0
  6580  0ADB  00F3               	movwf	USBTransferOnePacket@data+1
  6581  0ADC  3040               	movlw	64
  6582  0ADD  0020               	movlb	0	; select bank0
  6583  0ADE  00D3               	movwf	??_APP_DeviceAudioMIDIInitialize
  6584  0ADF  0853               	movf	??_APP_DeviceAudioMIDIInitialize,w
  6585  0AE0  00F4               	movwf	USBTransferOnePacket@len
  6586  0AE1  3001               	movlw	1
  6587  0AE2  318C  245B         	fcall	_USBTransferOnePacket
  6588  0AE4  0020               	movlb	0	; select bank0
  6589  0AE5  00D4               	movwf	??_APP_DeviceAudioMIDIInitialize+1
  6590  0AE6  0854               	movf	??_APP_DeviceAudioMIDIInitialize+1,w
  6591  0AE7  0022               	movlb	2	; select bank2
  6592  0AE8  00DF               	movwf	_USBRxHandle^(0+256)
  6593  0AE9  0008               	return
  6594  0AEA                     __end_of_APP_DeviceAudioMIDIInitialize:	
  6595                           
  6596                           	psect	text21
  6597  0A78                     __ptext21:	
  6598 ;; *************** function _USBEnableEndpoint *****************
  6599 ;; Defined at:
  6600 ;;		line 897 in file "../framework/usb/usb_device.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;  ep              1    wreg     unsigned char 
  6603 ;;  options         1    8[COMMON] unsigned char 
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;  ep              1    2[BANK0 ] unsigned char 
  6606 ;;  p               2    0[BANK0 ] PTR unsigned char 
  6607 ;;		 -> UEP0(1), 
  6608 ;; Return value:  Size  Location     Type
  6609 ;;		None               void
  6610 ;; Registers used:
  6611 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6612 ;; Tracked objects:
  6613 ;;		On entry : 0/0
  6614 ;;		On exit  : 0/0
  6615 ;;		Unchanged: 0/0
  6616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6617 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6618 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6619 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6620 ;;      Totals:         3       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6621 ;;Total ram usage:        6 bytes
  6622 ;; Hardware stack levels used:    1
  6623 ;; Hardware stack levels required when called:    2
  6624 ;; This function calls:
  6625 ;;		_USBConfigureEndpoint
  6626 ;; This function is called by:
  6627 ;;		_APP_DeviceAudioMIDIInitialize
  6628 ;; This function uses a non-reentrant model
  6629 ;;
  6630                           
  6631                           
  6632                           ;psect for function _USBEnableEndpoint
  6633  0A78                     _USBEnableEndpoint:	
  6634                           
  6635                           ;incstack = 0
  6636                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6637                           ;USBEnableEndpoint@ep stored from wreg
  6638  0A78  0020               	movlb	0	; select bank0
  6639  0A79  00D2               	movwf	USBEnableEndpoint@ep
  6640                           
  6641                           ;usb_device.c: 899: unsigned char* p;
  6642                           ;usb_device.c: 903: if(options & 0x04)
  6643  0A7A  1D78               	btfss	USBEnableEndpoint@options,2
  6644  0A7B  2A81               	goto	l2861
  6645                           
  6646                           ;usb_device.c: 904: {
  6647                           ;usb_device.c: 905: USBConfigureEndpoint(ep, 0);
  6648  0A7C  01F1               	clrf	USBConfigureEndpoint@direction
  6649  0A7D  0852               	movf	USBEnableEndpoint@ep,w
  6650  0A7E  318B  2382  318A   	fcall	_USBConfigureEndpoint
  6651  0A81                     l2861:	
  6652                           
  6653                           ;usb_device.c: 906: }
  6654                           ;usb_device.c: 907: if(options & 0x02)
  6655  0A81  1CF8               	btfss	USBEnableEndpoint@options,1
  6656  0A82  2A89               	goto	l2865
  6657                           
  6658                           ;usb_device.c: 908: {
  6659                           ;usb_device.c: 909: USBConfigureEndpoint(ep, 1);
  6660  0A83  01F1               	clrf	USBConfigureEndpoint@direction
  6661  0A84  0AF1               	incf	USBConfigureEndpoint@direction,f
  6662  0A85  0020               	movlb	0	; select bank0
  6663  0A86  0852               	movf	USBEnableEndpoint@ep,w
  6664  0A87  318B  2382         	fcall	_USBConfigureEndpoint
  6665  0A89                     l2865:	
  6666                           
  6667                           ;usb_device.c: 910: }
  6668                           ;usb_device.c: 918: p = (unsigned char*)(&UEP0+ep);
  6669  0A89  0020               	movlb	0	; select bank0
  6670  0A8A  0852               	movf	USBEnableEndpoint@ep,w
  6671  0A8B  3E98               	addlw	152
  6672  0A8C  00F9               	movwf	??_USBEnableEndpoint
  6673  0A8D  01FA               	clrf	??_USBEnableEndpoint+1
  6674  0A8E  300E               	movlw	14
  6675  0A8F  3DFA               	addwfc	??_USBEnableEndpoint+1,f
  6676  0A90  0879               	movf	??_USBEnableEndpoint,w
  6677  0A91  00D0               	movwf	USBEnableEndpoint@p
  6678  0A92  087A               	movf	??_USBEnableEndpoint+1,w
  6679  0A93  00D1               	movwf	USBEnableEndpoint@p+1
  6680                           
  6681                           ;usb_device.c: 920: *p = options;
  6682  0A94  0850               	movf	USBEnableEndpoint@p,w
  6683  0A95  0086               	movwf	6
  6684  0A96  0851               	movf	USBEnableEndpoint@p+1,w
  6685  0A97  0087               	movwf	7
  6686  0A98  0878               	movf	USBEnableEndpoint@options,w
  6687  0A99  0081               	movwf	1
  6688  0A9A  0008               	return
  6689  0A9B                     __end_of_USBEnableEndpoint:	
  6690                           
  6691                           	psect	text22
  6692  0B82                     __ptext22:	
  6693 ;; *************** function _USBConfigureEndpoint *****************
  6694 ;; Defined at:
  6695 ;;		line 1562 in file "../framework/usb/usb_device.c"
  6696 ;; Parameters:    Size  Location     Type
  6697 ;;  EPNum           1    wreg     unsigned char 
  6698 ;;  direction       1    1[COMMON] unsigned char 
  6699 ;; Auto vars:     Size  Location     Type
  6700 ;;  EPNum           1    6[COMMON] unsigned char 
  6701 ;;  handle          1    7[COMMON] PTR volatile struct __BD
  6702 ;;		 -> BDT(32), 
  6703 ;; Return value:  Size  Location     Type
  6704 ;;		None               void
  6705 ;; Registers used:
  6706 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6707 ;; Tracked objects:
  6708 ;;		On entry : 0/0
  6709 ;;		On exit  : 0/0
  6710 ;;		Unchanged: 0/0
  6711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6712 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6713 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6714 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6715 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6716 ;;Total ram usage:        7 bytes
  6717 ;; Hardware stack levels used:    1
  6718 ;; Hardware stack levels required when called:    1
  6719 ;; This function calls:
  6720 ;;		Nothing
  6721 ;; This function is called by:
  6722 ;;		_USBEnableEndpoint
  6723 ;; This function uses a non-reentrant model
  6724 ;;
  6725                           
  6726                           
  6727                           ;psect for function _USBConfigureEndpoint
  6728  0B82                     _USBConfigureEndpoint:	
  6729                           
  6730                           ;incstack = 0
  6731                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  6732                           ;USBConfigureEndpoint@EPNum stored from wreg
  6733  0B82  00F6               	movwf	USBConfigureEndpoint@EPNum
  6734                           
  6735                           ;usb_device.c: 1564: volatile BDT_ENTRY* handle;
  6736                           ;usb_device.c: 1568: handle = (volatile BDT_ENTRY*)&BDT[0];
  6737  0B83  3020               	movlw	32
  6738  0B84  00F2               	movwf	??_USBConfigureEndpoint
  6739  0B85  0872               	movf	??_USBConfigureEndpoint,w
  6740  0B86  00F7               	movwf	USBConfigureEndpoint@handle
  6741                           
  6742                           ;usb_device.c: 1569: handle += (4*EPNum+2*direction+0u);
  6743  0B87  0871               	movf	USBConfigureEndpoint@direction,w
  6744  0B88  00F2               	movwf	??_USBConfigureEndpoint
  6745  0B89  3001               	movlw	1
  6746  0B8A                     u1965:	
  6747  0B8A  35F2               	lslf	??_USBConfigureEndpoint,f
  6748  0B8B  0B89               	decfsz	9,f
  6749  0B8C  2B8A               	goto	u1965
  6750  0B8D  0876               	movf	USBConfigureEndpoint@EPNum,w
  6751  0B8E  00F3               	movwf	??_USBConfigureEndpoint+1
  6752  0B8F  3001               	movlw	1
  6753  0B90                     u1975:	
  6754  0B90  35F3               	lslf	??_USBConfigureEndpoint+1,f
  6755  0B91  3EFF               	addlw	-1
  6756  0B92  1D03               	skipz
  6757  0B93  2B90               	goto	u1975
  6758  0B94  3573               	lslf	??_USBConfigureEndpoint+1,w
  6759  0B95  0772               	addwf	??_USBConfigureEndpoint,w
  6760  0B96  00F4               	movwf	??_USBConfigureEndpoint+2
  6761  0B97  3001               	movlw	1
  6762  0B98                     u1985:	
  6763  0B98  35F4               	lslf	??_USBConfigureEndpoint+2,f
  6764  0B99  3EFF               	addlw	-1
  6765  0B9A  1D03               	skipz
  6766  0B9B  2B98               	goto	u1985
  6767  0B9C  3574               	lslf	??_USBConfigureEndpoint+2,w
  6768  0B9D  00F5               	movwf	??_USBConfigureEndpoint+3
  6769  0B9E  0875               	movf	??_USBConfigureEndpoint+3,w
  6770  0B9F  07F7               	addwf	USBConfigureEndpoint@handle,f
  6771                           
  6772                           ;usb_device.c: 1571: handle->STAT.UOWN = 0;
  6773  0BA0  0877               	movf	USBConfigureEndpoint@handle,w
  6774  0BA1  0086               	movwf	6
  6775  0BA2  0187               	clrf	7
  6776  0BA3  1381               	bcf	1,7
  6777                           
  6778                           ;usb_device.c: 1576: if(direction == 0)
  6779  0BA4  0871               	movf	USBConfigureEndpoint@direction,w
  6780  0BA5  1D03               	btfss	3,2
  6781  0BA6  2BAF               	goto	l2831
  6782                           
  6783                           ;usb_device.c: 1577: {
  6784                           ;usb_device.c: 1578: pBDTEntryOut[EPNum] = handle;
  6785  0BA7  0877               	movf	USBConfigureEndpoint@handle,w
  6786  0BA8  00F2               	movwf	??_USBConfigureEndpoint
  6787  0BA9  0876               	movf	USBConfigureEndpoint@EPNum,w
  6788  0BAA  3E58               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6789  0BAB  0086               	movwf	6
  6790  0BAC  3001               	movlw	1	; select bank2/3
  6791  0BAD  0087               	movwf	7
  6792  0BAE  2BB5               	goto	L8
  6793  0BAF                     l2831:	
  6794                           ;usb_device.c: 1579: }
  6795                           
  6796                           
  6797                           ;usb_device.c: 1580: else
  6798                           ;usb_device.c: 1581: {
  6799                           ;usb_device.c: 1582: pBDTEntryIn[EPNum] = handle;
  6800  0BAF  0877               	movf	USBConfigureEndpoint@handle,w
  6801  0BB0  00F2               	movwf	??_USBConfigureEndpoint
  6802  0BB1  0876               	movf	USBConfigureEndpoint@EPNum,w
  6803  0BB2  3E6B               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  6804  0BB3  0086               	movwf	6
  6805  0BB4  0187               	clrf	7
  6806  0BB5                     L8:	
  6807  0BB5  0872               	movf	??_USBConfigureEndpoint,w
  6808  0BB6  0081               	movwf	1
  6809                           
  6810                           ;usb_device.c: 1583: }
  6811                           ;usb_device.c: 1586: handle->STAT.DTS = 0;
  6812  0BB7  0877               	movf	USBConfigureEndpoint@handle,w
  6813  0BB8  0086               	movwf	6
  6814  0BB9  0187               	clrf	7
  6815  0BBA  1301               	bcf	1,6
  6816                           
  6817                           ;usb_device.c: 1587: (handle+1)->STAT.DTS = 1;
  6818  0BBB  0877               	movf	USBConfigureEndpoint@handle,w
  6819  0BBC  3E04               	addlw	4
  6820  0BBD  0086               	movwf	6
  6821  0BBE  0187               	clrf	7
  6822  0BBF  1701               	bsf	1,6
  6823  0BC0  0008               	return
  6824  0BC1                     __end_of_USBConfigureEndpoint:	
  6825                           
  6826                           	psect	text23
  6827  0AEA                     __ptext23:	
  6828 ;; *************** function _USBCtrlTrfOutHandler *****************
  6829 ;; Defined at:
  6830 ;;		line 2563 in file "../framework/usb/usb_device.c"
  6831 ;; Parameters:    Size  Location     Type
  6832 ;;		None
  6833 ;; Auto vars:     Size  Location     Type
  6834 ;;		None
  6835 ;; Return value:  Size  Location     Type
  6836 ;;		None               void
  6837 ;; Registers used:
  6838 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6839 ;; Tracked objects:
  6840 ;;		On entry : 0/0
  6841 ;;		On exit  : 0/0
  6842 ;;		Unchanged: 0/0
  6843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6846 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6847 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6848 ;;Total ram usage:        2 bytes
  6849 ;; Hardware stack levels used:    1
  6850 ;; Hardware stack levels required when called:    3
  6851 ;; This function calls:
  6852 ;;		_USBCtrlTrfRxService
  6853 ;; This function is called by:
  6854 ;;		_USBCtrlEPService
  6855 ;; This function uses a non-reentrant model
  6856 ;;
  6857                           
  6858                           
  6859                           ;psect for function _USBCtrlTrfOutHandler
  6860  0AEA                     _USBCtrlTrfOutHandler:	
  6861                           
  6862                           ;usb_device.c: 2565: if(controlTransferState == 2)
  6863                           
  6864                           ;incstack = 0
  6865                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6866  0AEA  3002               	movlw	2
  6867  0AEB  0021               	movlb	1	; select bank1
  6868  0AEC  0669               	xorwf	_controlTransferState^(0+128),w
  6869  0AED  1D03               	btfss	3,2
  6870  0AEE  2AF2               	goto	l3577
  6871                           
  6872                           ;usb_device.c: 2566: {
  6873                           ;usb_device.c: 2567: USBCtrlTrfRxService();
  6874  0AEF  3186  26A7         	fcall	_USBCtrlTrfRxService
  6875                           
  6876                           ;usb_device.c: 2568: }
  6877  0AF1  0008               	return
  6878  0AF2                     l3577:	
  6879                           
  6880                           ;usb_device.c: 2569: else
  6881                           ;usb_device.c: 2570: {
  6882                           ;usb_device.c: 2573: controlTransferState = 0;
  6883  0AF2  0021               	movlb	1	; select bank1
  6884  0AF3  01E9               	clrf	_controlTransferState^(0+128)
  6885                           
  6886                           ;usb_device.c: 2580: if(BothEP0OutUOWNsSet == 0)
  6887  0AF4  0022               	movlb	2	; select bank2
  6888  0AF5  085A               	movf	_BothEP0OutUOWNsSet^(0+256),w
  6889  0AF6  1D03               	btfss	3,2
  6890  0AF7  2B17               	goto	l3589
  6891                           
  6892                           ;usb_device.c: 2581: {
  6893                           ;usb_device.c: 2582: pBDTEntryEP0OutNext->CNT = 8;
  6894  0AF8  3008               	movlw	8
  6895  0AF9  00F7               	movwf	??_USBCtrlTrfOutHandler
  6896  0AFA  0A7C               	incf	_pBDTEntryEP0OutNext,w
  6897  0AFB  0086               	movwf	6
  6898  0AFC  0187               	clrf	7
  6899  0AFD  0877               	movf	??_USBCtrlTrfOutHandler,w
  6900  0AFE  0081               	movwf	1
  6901                           
  6902                           ;usb_device.c: 2583: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6903  0AFF  3040               	movlw	64
  6904  0B00  00F7               	movwf	??_USBCtrlTrfOutHandler
  6905  0B01  3000               	movlw	0
  6906  0B02  00F8               	movwf	??_USBCtrlTrfOutHandler+1
  6907  0B03  087C               	movf	_pBDTEntryEP0OutNext,w
  6908  0B04  3E02               	addlw	2
  6909  0B05  0086               	movwf	6
  6910  0B06  0187               	clrf	7
  6911  0B07  0877               	movf	??_USBCtrlTrfOutHandler,w
  6912  0B08  3FC0               	movwi [0]fsr1
  6913  0B09  0878               	movf	??_USBCtrlTrfOutHandler+1,w
  6914  0B0A  3FC1               	movwi [1]fsr1
  6915                           
  6916                           ;usb_device.c: 2584: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6917  0B0B  300C               	movlw	12
  6918  0B0C  00F7               	movwf	??_USBCtrlTrfOutHandler
  6919  0B0D  087C               	movf	_pBDTEntryEP0OutNext,w
  6920  0B0E  0086               	movwf	6
  6921  0B0F  0187               	clrf	7
  6922  0B10  0877               	movf	??_USBCtrlTrfOutHandler,w
  6923  0B11  0081               	movwf	1
  6924                           
  6925                           ;usb_device.c: 2585: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6926  0B12  087C               	movf	_pBDTEntryEP0OutNext,w
  6927  0B13  0086               	movwf	6
  6928  0B14  0187               	clrf	7
  6929  0B15  1781               	bsf	1,7
  6930                           
  6931                           ;usb_device.c: 2586: }
  6932  0B16  0008               	return
  6933  0B17                     l3589:	
  6934                           
  6935                           ;usb_device.c: 2587: else
  6936                           ;usb_device.c: 2588: {
  6937                           ;usb_device.c: 2589: BothEP0OutUOWNsSet = 0;
  6938  0B17  01DA               	clrf	_BothEP0OutUOWNsSet^(0+256)
  6939  0B18  0008               	return
  6940  0B19                     __end_of_USBCtrlTrfOutHandler:	
  6941                           
  6942                           	psect	text24
  6943  06A7                     __ptext24:	
  6944 ;; *************** function _USBCtrlTrfRxService *****************
  6945 ;; Defined at:
  6946 ;;		line 1871 in file "../framework/usb/usb_device.c"
  6947 ;; Parameters:    Size  Location     Type
  6948 ;;		None
  6949 ;; Auto vars:     Size  Location     Type
  6950 ;;  byteToRead      1    6[COMMON] unsigned char 
  6951 ;;  i               1    5[COMMON] unsigned char 
  6952 ;; Return value:  Size  Location     Type
  6953 ;;		None               void
  6954 ;; Registers used:
  6955 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6956 ;; Tracked objects:
  6957 ;;		On entry : 0/0
  6958 ;;		On exit  : 0/0
  6959 ;;		Unchanged: 0/0
  6960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6962 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6963 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6964 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6965 ;;Total ram usage:        4 bytes
  6966 ;; Hardware stack levels used:    1
  6967 ;; Hardware stack levels required when called:    2
  6968 ;; This function calls:
  6969 ;;		_USBCtrlEPAllowStatusStage
  6970 ;; This function is called by:
  6971 ;;		_USBCtrlTrfOutHandler
  6972 ;; This function uses a non-reentrant model
  6973 ;;
  6974                           
  6975                           
  6976                           ;psect for function _USBCtrlTrfRxService
  6977  06A7                     _USBCtrlTrfRxService:	
  6978                           
  6979                           ;usb_device.c: 1873: uint8_t byteToRead;
  6980                           ;usb_device.c: 1874: uint8_t i;
  6981                           ;usb_device.c: 1878: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  6982                           
  6983                           ;incstack = 0
  6984                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6985  06A7  0020               	movlb	0	; select bank0
  6986  06A8  086E               	movf	_pBDTEntryEP0OutCurrent,w
  6987  06A9  0086               	movwf	6
  6988  06AA  0187               	clrf	7
  6989  06AB  3F41               	moviw [1]fsr1
  6990  06AC  00F6               	movwf	USBCtrlTrfRxService@byteToRead
  6991                           
  6992                           ;usb_device.c: 1884: if(byteToRead > outPipes[0].wCount.Val)
  6993  06AD  0876               	movf	USBCtrlTrfRxService@byteToRead,w
  6994  06AE  00F3               	movwf	??_USBCtrlTrfRxService
  6995  06AF  01F4               	clrf	??_USBCtrlTrfRxService+1
  6996  06B0  0874               	movf	??_USBCtrlTrfRxService+1,w
  6997  06B1  0022               	movlb	2	; select bank2
  6998  06B2  024B               	subwf	((_outPipes+1)^(0+256)+3),w
  6999  06B3  1D03               	skipz
  7000  06B4  2EB7               	goto	u2825
  7001  06B5  0873               	movf	??_USBCtrlTrfRxService,w
  7002  06B6  024A               	subwf	(_outPipes^(0+256)+3),w
  7003  06B7                     u2825:	
  7004  06B7  1803               	skipnc
  7005  06B8  2EBD               	goto	l678
  7006                           
  7007                           ;usb_device.c: 1885: {
  7008                           ;usb_device.c: 1886: byteToRead = outPipes[0].wCount.Val;
  7009  06B9  084A               	movf	(_outPipes^(0+256)+3),w
  7010  06BA  00F3               	movwf	??_USBCtrlTrfRxService
  7011  06BB  0873               	movf	??_USBCtrlTrfRxService,w
  7012  06BC  00F6               	movwf	USBCtrlTrfRxService@byteToRead
  7013  06BD                     l678:	
  7014                           
  7015                           ;usb_device.c: 1887: }
  7016                           ;usb_device.c: 1889: outPipes[0].wCount.Val -= byteToRead;
  7017  06BD  0876               	movf	USBCtrlTrfRxService@byteToRead,w
  7018  06BE  00F3               	movwf	??_USBCtrlTrfRxService
  7019  06BF  01F4               	clrf	??_USBCtrlTrfRxService+1
  7020  06C0  0873               	movf	??_USBCtrlTrfRxService,w
  7021  06C1  02CA               	subwf	(_outPipes^(0+256)+3),f
  7022  06C2  0874               	movf	??_USBCtrlTrfRxService+1,w
  7023  06C3  3BCB               	subwfb	((_outPipes+1)^(0+256)+3),f
  7024                           
  7025                           ;usb_device.c: 1893: for(i=0;i<byteToRead;i++)
  7026  06C4  01F5               	clrf	USBCtrlTrfRxService@i
  7027  06C5                     l3391:	
  7028  06C5  0876               	movf	USBCtrlTrfRxService@byteToRead,w
  7029  06C6  0275               	subwf	USBCtrlTrfRxService@i,w
  7030  06C7  1803               	btfsc	3,0
  7031  06C8  2EDD               	goto	l3393
  7032                           
  7033                           ;usb_device.c: 1894: {
  7034                           ;usb_device.c: 1895: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  7035  06C9  0875               	movf	USBCtrlTrfRxService@i,w
  7036  06CA  3E48               	addlw	72
  7037  06CB  0086               	movwf	6
  7038  06CC  0187               	clrf	7
  7039  06CD  0801               	movf	1,w
  7040  06CE  00F3               	movwf	??_USBCtrlTrfRxService
  7041  06CF  0847               	movf	_outPipes^(0+256),w
  7042  06D0  0086               	movwf	6
  7043  06D1  0187               	clrf	7
  7044  06D2  0873               	movf	??_USBCtrlTrfRxService,w
  7045  06D3  0081               	movwf	1
  7046  06D4  3001               	movlw	1
  7047  06D5  00F3               	movwf	??_USBCtrlTrfRxService
  7048  06D6  0873               	movf	??_USBCtrlTrfRxService,w
  7049  06D7  07C7               	addwf	_outPipes^(0+256),f
  7050  06D8  3001               	movlw	1
  7051  06D9  00F3               	movwf	??_USBCtrlTrfRxService
  7052  06DA  0873               	movf	??_USBCtrlTrfRxService,w
  7053  06DB  07F5               	addwf	USBCtrlTrfRxService@i,f
  7054  06DC  2EC5               	goto	l3391
  7055  06DD                     l3393:	
  7056                           
  7057                           ;usb_device.c: 1896: }
  7058                           ;usb_device.c: 1900: if(outPipes[0].wCount.Val > 0)
  7059  06DD  084A               	movf	(_outPipes^(0+256)+3),w
  7060  06DE  044B               	iorwf	((_outPipes+1)^(0+256)+3),w
  7061  06DF  1903               	btfsc	3,2
  7062  06E0  2F12               	goto	l3405
  7063                           
  7064                           ;usb_device.c: 1901: {
  7065                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->CNT = 8;
  7066  06E1  3008               	movlw	8
  7067  06E2  00F3               	movwf	??_USBCtrlTrfRxService
  7068  06E3  0A7C               	incf	_pBDTEntryEP0OutNext,w
  7069  06E4  0086               	movwf	6
  7070  06E5  0187               	clrf	7
  7071  06E6  0873               	movf	??_USBCtrlTrfRxService,w
  7072  06E7  0081               	movwf	1
  7073                           
  7074                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  7075  06E8  3048               	movlw	72
  7076  06E9  00F3               	movwf	??_USBCtrlTrfRxService
  7077  06EA  3000               	movlw	0
  7078  06EB  00F4               	movwf	??_USBCtrlTrfRxService+1
  7079  06EC  087C               	movf	_pBDTEntryEP0OutNext,w
  7080  06ED  3E02               	addlw	2
  7081  06EE  0086               	movwf	6
  7082  06EF  0187               	clrf	7
  7083  06F0  0873               	movf	??_USBCtrlTrfRxService,w
  7084  06F1  3FC0               	movwi [0]fsr1
  7085  06F2  0874               	movf	??_USBCtrlTrfRxService+1,w
  7086  06F3  3FC1               	movwi [1]fsr1
  7087                           
  7088                           ;usb_device.c: 1904: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  7089  06F4  0020               	movlb	0	; select bank0
  7090  06F5  086E               	movf	_pBDTEntryEP0OutCurrent,w
  7091  06F6  0086               	movwf	6
  7092  06F7  0187               	clrf	7
  7093  06F8  1B01               	btfsc	1,6
  7094  06F9  2F06               	goto	l3403
  7095                           
  7096                           ;usb_device.c: 1905: {
  7097                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  7098  06FA  3048               	movlw	72
  7099  06FB  00F3               	movwf	??_USBCtrlTrfRxService
  7100  06FC  087C               	movf	_pBDTEntryEP0OutNext,w
  7101  06FD  0086               	movwf	6
  7102  06FE  0187               	clrf	7
  7103  06FF  0873               	movf	??_USBCtrlTrfRxService,w
  7104  0700  0081               	movwf	1
  7105                           
  7106                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7107  0701  087C               	movf	_pBDTEntryEP0OutNext,w
  7108  0702  0086               	movwf	6
  7109  0703  0187               	clrf	7
  7110  0704  1781               	bsf	1,7
  7111                           
  7112                           ;usb_device.c: 1908: }
  7113  0705  0008               	return
  7114  0706                     l3403:	
  7115                           
  7116                           ;usb_device.c: 1909: else
  7117                           ;usb_device.c: 1910: {
  7118                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  7119  0706  3008               	movlw	8
  7120  0707  00F3               	movwf	??_USBCtrlTrfRxService
  7121  0708  087C               	movf	_pBDTEntryEP0OutNext,w
  7122  0709  0086               	movwf	6
  7123  070A  0187               	clrf	7
  7124  070B  0873               	movf	??_USBCtrlTrfRxService,w
  7125  070C  0081               	movwf	1
  7126                           
  7127                           ;usb_device.c: 1912: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7128  070D  087C               	movf	_pBDTEntryEP0OutNext,w
  7129  070E  0086               	movwf	6
  7130  070F  0187               	clrf	7
  7131  0710  1781               	bsf	1,7
  7132                           
  7133                           ;usb_device.c: 1913: }
  7134                           ;usb_device.c: 1914: }
  7135  0711  0008               	return
  7136  0712                     l3405:	
  7137                           
  7138                           ;usb_device.c: 1915: else
  7139                           ;usb_device.c: 1916: {
  7140                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->CNT = 8;
  7141  0712  3008               	movlw	8
  7142  0713  00F3               	movwf	??_USBCtrlTrfRxService
  7143  0714  0A7C               	incf	_pBDTEntryEP0OutNext,w
  7144  0715  0086               	movwf	6
  7145  0716  0187               	clrf	7
  7146  0717  0873               	movf	??_USBCtrlTrfRxService,w
  7147  0718  0081               	movwf	1
  7148                           
  7149                           ;usb_device.c: 1921: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7150  0719  3040               	movlw	64
  7151  071A  00F3               	movwf	??_USBCtrlTrfRxService
  7152  071B  3000               	movlw	0
  7153  071C  00F4               	movwf	??_USBCtrlTrfRxService+1
  7154  071D  087C               	movf	_pBDTEntryEP0OutNext,w
  7155  071E  3E02               	addlw	2
  7156  071F  0086               	movwf	6
  7157  0720  0187               	clrf	7
  7158  0721  0873               	movf	??_USBCtrlTrfRxService,w
  7159  0722  3FC0               	movwi [0]fsr1
  7160  0723  0874               	movf	??_USBCtrlTrfRxService+1,w
  7161  0724  3FC1               	movwi [1]fsr1
  7162                           
  7163                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  7164  0725  3004               	movlw	4
  7165  0726  00F3               	movwf	??_USBCtrlTrfRxService
  7166  0727  087C               	movf	_pBDTEntryEP0OutNext,w
  7167  0728  0086               	movwf	6
  7168  0729  0187               	clrf	7
  7169  072A  0873               	movf	??_USBCtrlTrfRxService,w
  7170  072B  0081               	movwf	1
  7171                           
  7172                           ;usb_device.c: 1926: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7173  072C  087C               	movf	_pBDTEntryEP0OutNext,w
  7174  072D  0086               	movwf	6
  7175  072E  0187               	clrf	7
  7176  072F  1781               	bsf	1,7
  7177                           
  7178                           ;usb_device.c: 1945: }
  7179                           ;usb_device.c: 1946: outPipes[0].info.bits.busy = 0;
  7180  0730  0022               	movlb	2	; select bank2
  7181  0731  13C9               	bcf	(_outPipes^(0+256)+2),7
  7182                           
  7183                           ;usb_device.c: 1960: if(USBDeferStatusStagePacket == 0)
  7184  0732  0021               	movlb	1	; select bank1
  7185  0733  0867               	movf	_USBDeferStatusStagePacket^(0+128),w	;volatile
  7186  0734  1D03               	btfss	3,2
  7187  0735  0008               	return
  7188                           
  7189                           ;usb_device.c: 1961: {
  7190                           ;usb_device.c: 1962: USBCtrlEPAllowStatusStage();
  7191  0736  318D  25BB         	fcall	_USBCtrlEPAllowStatusStage
  7192  0738  0008               	return
  7193  0739                     __end_of_USBCtrlTrfRxService:	
  7194                           
  7195                           	psect	text25
  7196  0DBB                     __ptext25:	
  7197 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  7198 ;; Defined at:
  7199 ;;		line 1435 in file "../framework/usb/usb_device.c"
  7200 ;; Parameters:    Size  Location     Type
  7201 ;;		None
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;		None
  7204 ;; Return value:  Size  Location     Type
  7205 ;;		None               void
  7206 ;; Registers used:
  7207 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7208 ;; Tracked objects:
  7209 ;;		On entry : 0/0
  7210 ;;		On exit  : 0/0
  7211 ;;		Unchanged: 0/0
  7212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7215 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7216 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7217 ;;Total ram usage:        2 bytes
  7218 ;; Hardware stack levels used:    1
  7219 ;; Hardware stack levels required when called:    1
  7220 ;; This function calls:
  7221 ;;		Nothing
  7222 ;; This function is called by:
  7223 ;;		_USBDeviceTasks
  7224 ;;		_USBCtrlEPServiceComplete
  7225 ;;		_USBCtrlTrfRxService
  7226 ;; This function uses a non-reentrant model
  7227 ;;
  7228                           
  7229                           
  7230                           ;psect for function _USBCtrlEPAllowStatusStage
  7231  0DBB                     _USBCtrlEPAllowStatusStage:	
  7232                           
  7233                           ;usb_device.c: 1442: if(USBStatusStageEnabledFlag1 == 0)
  7234                           
  7235                           ;incstack = 0
  7236                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  7237  0DBB  0022               	movlb	2	; select bank2
  7238  0DBC  0860               	movf	_USBStatusStageEnabledFlag1^(0+256),w	;volatile
  7239  0DBD  1D03               	btfss	3,2
  7240  0DBE  0008               	return
  7241                           
  7242                           ;usb_device.c: 1443: {
  7243                           ;usb_device.c: 1444: USBStatusStageEnabledFlag1 = 1;
  7244  0DBF  3001               	movlw	1
  7245  0DC0  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7246  0DC1  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7247  0DC2  00E0               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  7248                           
  7249                           ;usb_device.c: 1445: if(USBStatusStageEnabledFlag2 == 0)
  7250  0DC3  0861               	movf	_USBStatusStageEnabledFlag2^(0+256),w	;volatile
  7251  0DC4  1D03               	btfss	3,2
  7252  0DC5  0008               	return
  7253                           
  7254                           ;usb_device.c: 1446: {
  7255                           ;usb_device.c: 1447: USBStatusStageEnabledFlag2 = 1;
  7256  0DC6  3001               	movlw	1
  7257  0DC7  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7258  0DC8  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7259  0DC9  00E1               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  7260                           
  7261                           ;usb_device.c: 1451: if(controlTransferState == 2)
  7262  0DCA  3002               	movlw	2
  7263  0DCB  0021               	movlb	1	; select bank1
  7264  0DCC  0669               	xorwf	_controlTransferState^(0+128),w
  7265  0DCD  1D03               	btfss	3,2
  7266  0DCE  2DE0               	goto	l3037
  7267                           
  7268                           ;usb_device.c: 1452: {
  7269                           ;usb_device.c: 1453: pBDTEntryIn[0]->CNT = 0;
  7270  0DCF  0020               	movlb	0	; select bank0
  7271  0DD0  0A6B               	incf	_pBDTEntryIn,w
  7272  0DD1  0086               	movwf	6
  7273  0DD2  0187               	clrf	7
  7274  0DD3  0181               	clrf	1
  7275                           
  7276                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  7277  0DD4  3048               	movlw	72
  7278  0DD5  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7279  0DD6  086B               	movf	_pBDTEntryIn,w
  7280  0DD7  0086               	movwf	6
  7281  0DD8  0187               	clrf	7
  7282  0DD9  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7283  0DDA  0081               	movwf	1
  7284                           
  7285                           ;usb_device.c: 1455: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7286  0DDB  086B               	movf	_pBDTEntryIn,w
  7287  0DDC  0086               	movwf	6
  7288  0DDD  0187               	clrf	7
  7289  0DDE  1781               	bsf	1,7
  7290                           
  7291                           ;usb_device.c: 1456: }
  7292  0DDF  0008               	return
  7293  0DE0                     l3037:	
  7294                           
  7295                           ;usb_device.c: 1457: else if(controlTransferState == 1)
  7296  0DE0  0021               	movlb	1	; select bank1
  7297  0DE1  0369               	decf	_controlTransferState^(0+128),w
  7298  0DE2  1D03               	btfss	3,2
  7299  0DE3  0008               	return
  7300                           
  7301                           ;usb_device.c: 1458: {
  7302                           ;usb_device.c: 1459: BothEP0OutUOWNsSet = 0;
  7303  0DE4  0022               	movlb	2	; select bank2
  7304  0DE5  01DA               	clrf	_BothEP0OutUOWNsSet^(0+256)
  7305                           
  7306                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->CNT = 8;
  7307  0DE6  3008               	movlw	8
  7308  0DE7  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7309  0DE8  0020               	movlb	0	; select bank0
  7310  0DE9  0A6E               	incf	_pBDTEntryEP0OutCurrent,w
  7311  0DEA  0086               	movwf	6
  7312  0DEB  0187               	clrf	7
  7313  0DEC  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7314  0DED  0081               	movwf	1
  7315                           
  7316                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7317  0DEE  3040               	movlw	64
  7318  0DEF  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7319  0DF0  3000               	movlw	0
  7320  0DF1  00F2               	movwf	??_USBCtrlEPAllowStatusStage+1
  7321  0DF2  086E               	movf	_pBDTEntryEP0OutCurrent,w
  7322  0DF3  3E02               	addlw	2
  7323  0DF4  0086               	movwf	6
  7324  0DF5  0187               	clrf	7
  7325  0DF6  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7326  0DF7  3FC0               	movwi [0]fsr1
  7327  0DF8  0872               	movf	??_USBCtrlEPAllowStatusStage+1,w
  7328  0DF9  3FC1               	movwi [1]fsr1
  7329                           
  7330                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  7331  0DFA  3004               	movlw	4
  7332  0DFB  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7333  0DFC  086E               	movf	_pBDTEntryEP0OutCurrent,w
  7334  0DFD  0086               	movwf	6
  7335  0DFE  0187               	clrf	7
  7336  0DFF  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7337  0E00  0081               	movwf	1
  7338                           
  7339                           ;usb_device.c: 1467: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  7340  0E01  086E               	movf	_pBDTEntryEP0OutCurrent,w
  7341  0E02  0086               	movwf	6
  7342  0E03  0187               	clrf	7
  7343  0E04  1781               	bsf	1,7
  7344                           
  7345                           ;usb_device.c: 1468: BothEP0OutUOWNsSet = 1;
  7346  0E05  0022               	movlb	2	; select bank2
  7347  0E06  01DA               	clrf	_BothEP0OutUOWNsSet^(0+256)
  7348  0E07  0ADA               	incf	_BothEP0OutUOWNsSet^(0+256),f
  7349                           
  7350                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->CNT = 8;
  7351  0E08  3008               	movlw	8
  7352  0E09  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7353  0E0A  0A7C               	incf	_pBDTEntryEP0OutNext,w
  7354  0E0B  0086               	movwf	6
  7355  0E0C  0187               	clrf	7
  7356  0E0D  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7357  0E0E  0081               	movwf	1
  7358                           
  7359                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7360  0E0F  3040               	movlw	64
  7361  0E10  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7362  0E11  3000               	movlw	0
  7363  0E12  00F2               	movwf	??_USBCtrlEPAllowStatusStage+1
  7364  0E13  087C               	movf	_pBDTEntryEP0OutNext,w
  7365  0E14  3E02               	addlw	2
  7366  0E15  0086               	movwf	6
  7367  0E16  0187               	clrf	7
  7368  0E17  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7369  0E18  3FC0               	movwi [0]fsr1
  7370  0E19  0872               	movf	??_USBCtrlEPAllowStatusStage+1,w
  7371  0E1A  3FC1               	movwi [1]fsr1
  7372                           
  7373                           ;usb_device.c: 1474: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  7374  0E1B  3080               	movlw	128
  7375  0E1C  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7376  0E1D  087C               	movf	_pBDTEntryEP0OutNext,w
  7377  0E1E  0086               	movwf	6
  7378  0E1F  0187               	clrf	7
  7379  0E20  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7380  0E21  0081               	movwf	1
  7381  0E22  0008               	return
  7382  0E23                     __end_of_USBCtrlEPAllowStatusStage:	
  7383                           
  7384                           	psect	text26
  7385  0D54                     __ptext26:	
  7386 ;; *************** function _USBCtrlTrfInHandler *****************
  7387 ;; Defined at:
  7388 ;;		line 2617 in file "../framework/usb/usb_device.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;		None
  7391 ;; Auto vars:     Size  Location     Type
  7392 ;;  lastDTS         1    6[COMMON] unsigned char 
  7393 ;; Return value:  Size  Location     Type
  7394 ;;		None               void
  7395 ;; Registers used:
  7396 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7397 ;; Tracked objects:
  7398 ;;		On entry : 0/0
  7399 ;;		On exit  : 0/0
  7400 ;;		Unchanged: 0/0
  7401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7403 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7404 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7405 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7406 ;;Total ram usage:        3 bytes
  7407 ;; Hardware stack levels used:    1
  7408 ;; Hardware stack levels required when called:    2
  7409 ;; This function calls:
  7410 ;;		_USBCtrlTrfTxService
  7411 ;; This function is called by:
  7412 ;;		_USBCtrlEPService
  7413 ;; This function uses a non-reentrant model
  7414 ;;
  7415                           
  7416                           
  7417                           ;psect for function _USBCtrlTrfInHandler
  7418  0D54                     _USBCtrlTrfInHandler:	
  7419                           
  7420                           ;usb_device.c: 2619: uint8_t lastDTS;
  7421                           ;usb_device.c: 2621: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  7422                           
  7423                           ;incstack = 0
  7424                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7425  0D54  0020               	movlb	0	; select bank0
  7426  0D55  086B               	movf	_pBDTEntryIn,w
  7427  0D56  0086               	movwf	6
  7428  0D57  0187               	clrf	7
  7429  0D58  3000               	movlw	0
  7430  0D59  1B01               	btfsc	1,6
  7431  0D5A  3001               	movlw	1
  7432  0D5B  00F6               	movwf	USBCtrlTrfInHandler@lastDTS
  7433                           
  7434                           ;usb_device.c: 2624: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  7435  0D5C  3004               	movlw	4
  7436  0D5D  00F4               	movwf	??_USBCtrlTrfInHandler
  7437  0D5E  0874               	movf	??_USBCtrlTrfInHandler,w
  7438  0D5F  06EB               	xorwf	_pBDTEntryIn,f
  7439                           
  7440                           ;usb_device.c: 2629: if(USBDeviceState == ADR_PENDING_STATE)
  7441  0D60  3008               	movlw	8
  7442  0D61  066D               	xorwf	_USBDeviceState,w
  7443  0D62  1D03               	btfss	3,2
  7444  0D63  2D72               	goto	l3605
  7445                           
  7446                           ;usb_device.c: 2630: {
  7447                           ;usb_device.c: 2631: UADDR = (SetupPkt.bDevADR & 0x7F);
  7448  0D64  0842               	movf	66,w	;volatile
  7449  0D65  397F               	andlw	127
  7450  0D66  003D               	movlb	29	; select bank29
  7451  0D67  0096               	movwf	22	;volatile
  7452                           
  7453                           ;usb_device.c: 2632: if(UADDR != 0u)
  7454  0D68  0816               	movf	22,w	;volatile
  7455  0D69  1903               	btfsc	3,2
  7456  0D6A  2D6D               	goto	l3603
  7457                           
  7458                           ;usb_device.c: 2633: {
  7459                           ;usb_device.c: 2634: USBDeviceState=ADDRESS_STATE;
  7460  0D6B  3010               	movlw	16
  7461  0D6C  2D6E               	goto	L9
  7462  0D6D                     l3603:	
  7463                           ;usb_device.c: 2635: }
  7464                           
  7465                           
  7466                           ;usb_device.c: 2636: else
  7467                           ;usb_device.c: 2637: {
  7468                           ;usb_device.c: 2638: USBDeviceState=DEFAULT_STATE;
  7469  0D6D  3004               	movlw	4
  7470  0D6E                     L9:	
  7471  0D6E  00F4               	movwf	??_USBCtrlTrfInHandler
  7472  0D6F  0874               	movf	??_USBCtrlTrfInHandler,w
  7473  0D70  0020               	movlb	0	; select bank0
  7474  0D71  00ED               	movwf	_USBDeviceState
  7475  0D72                     l3605:	
  7476                           
  7477                           ;usb_device.c: 2639: }
  7478                           ;usb_device.c: 2640: }
  7479                           ;usb_device.c: 2643: if(controlTransferState == 1)
  7480  0D72  0021               	movlb	1	; select bank1
  7481  0D73  0369               	decf	_controlTransferState^(0+128),w
  7482  0D74  1D03               	btfss	3,2
  7483  0D75  2DB5               	goto	l765
  7484                           
  7485                           ;usb_device.c: 2644: {
  7486                           ;usb_device.c: 2645: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  7487  0D76  3048               	movlw	72
  7488  0D77  00F4               	movwf	??_USBCtrlTrfInHandler
  7489  0D78  3000               	movlw	0
  7490  0D79  00F5               	movwf	??_USBCtrlTrfInHandler+1
  7491  0D7A  0020               	movlb	0	; select bank0
  7492  0D7B  086B               	movf	_pBDTEntryIn,w
  7493  0D7C  3E02               	addlw	2
  7494  0D7D  0086               	movwf	6
  7495  0D7E  0187               	clrf	7
  7496  0D7F  0874               	movf	??_USBCtrlTrfInHandler,w
  7497  0D80  3FC0               	movwi [0]fsr1
  7498  0D81  0875               	movf	??_USBCtrlTrfInHandler+1,w
  7499  0D82  3FC1               	movwi [1]fsr1
  7500                           
  7501                           ;usb_device.c: 2646: USBCtrlTrfTxService();
  7502  0D83  318E  2623  318D   	fcall	_USBCtrlTrfTxService
  7503                           
  7504                           ;usb_device.c: 2652: if(shortPacketStatus == 2)
  7505  0D86  3002               	movlw	2
  7506  0D87  0021               	movlb	1	; select bank1
  7507  0D88  066C               	xorwf	_shortPacketStatus^(0+128),w
  7508  0D89  1D03               	btfss	3,2
  7509  0D8A  2D98               	goto	l3615
  7510                           
  7511                           ;usb_device.c: 2653: {
  7512                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val = 0x04;
  7513  0D8B  3004               	movlw	4
  7514  0D8C  00F4               	movwf	??_USBCtrlTrfInHandler
  7515  0D8D  0020               	movlb	0	; select bank0
  7516  0D8E  086B               	movf	_pBDTEntryIn,w
  7517  0D8F  0086               	movwf	6
  7518  0D90  0187               	clrf	7
  7519  0D91  0874               	movf	??_USBCtrlTrfInHandler,w
  7520  0D92  0081               	movwf	1
  7521                           
  7522                           ;usb_device.c: 2657: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7523  0D93  086B               	movf	_pBDTEntryIn,w
  7524  0D94  0086               	movwf	6
  7525  0D95  0187               	clrf	7
  7526  0D96  1781               	bsf	1,7
  7527                           
  7528                           ;usb_device.c: 2658: }
  7529  0D97  0008               	return
  7530  0D98                     l3615:	
  7531                           
  7532                           ;usb_device.c: 2659: else
  7533                           ;usb_device.c: 2660: {
  7534                           ;usb_device.c: 2661: if(lastDTS == 0)
  7535  0D98  0876               	movf	USBCtrlTrfInHandler@lastDTS,w
  7536  0D99  1D03               	btfss	3,2
  7537  0D9A  2DA8               	goto	l3619
  7538                           
  7539                           ;usb_device.c: 2662: {
  7540                           ;usb_device.c: 2663: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  7541  0D9B  3048               	movlw	72
  7542  0D9C  00F4               	movwf	??_USBCtrlTrfInHandler
  7543  0D9D  0020               	movlb	0	; select bank0
  7544  0D9E  086B               	movf	_pBDTEntryIn,w
  7545  0D9F  0086               	movwf	6
  7546  0DA0  0187               	clrf	7
  7547  0DA1  0874               	movf	??_USBCtrlTrfInHandler,w
  7548  0DA2  0081               	movwf	1
  7549                           
  7550                           ;usb_device.c: 2664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7551  0DA3  086B               	movf	_pBDTEntryIn,w
  7552  0DA4  0086               	movwf	6
  7553  0DA5  0187               	clrf	7
  7554  0DA6  1781               	bsf	1,7
  7555                           
  7556                           ;usb_device.c: 2665: }
  7557  0DA7  0008               	return
  7558  0DA8                     l3619:	
  7559                           
  7560                           ;usb_device.c: 2666: else
  7561                           ;usb_device.c: 2667: {
  7562                           ;usb_device.c: 2668: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  7563  0DA8  3008               	movlw	8
  7564  0DA9  00F4               	movwf	??_USBCtrlTrfInHandler
  7565  0DAA  0020               	movlb	0	; select bank0
  7566  0DAB  086B               	movf	_pBDTEntryIn,w
  7567  0DAC  0086               	movwf	6
  7568  0DAD  0187               	clrf	7
  7569  0DAE  0874               	movf	??_USBCtrlTrfInHandler,w
  7570  0DAF  0081               	movwf	1
  7571                           
  7572                           ;usb_device.c: 2669: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7573  0DB0  086B               	movf	_pBDTEntryIn,w
  7574  0DB1  0086               	movwf	6
  7575  0DB2  0187               	clrf	7
  7576  0DB3  1781               	bsf	1,7
  7577                           
  7578                           ;usb_device.c: 2670: }
  7579                           ;usb_device.c: 2671: }
  7580                           ;usb_device.c: 2672: }
  7581  0DB4  0008               	return
  7582  0DB5                     l765:	
  7583                           
  7584                           ;usb_device.c: 2673: else
  7585                           ;usb_device.c: 2674: {
  7586                           ;usb_device.c: 2678: if(outPipes[0].info.bits.busy == 1)
  7587  0DB5  0022               	movlb	2	; select bank2
  7588  0DB6  1BC9               	btfsc	(_outPipes^(0+256)+2),7
  7589                           
  7590                           ;usb_device.c: 2683: }
  7591                           ;usb_device.c: 2684: outPipes[0].info.bits.busy = 0;
  7592  0DB7  13C9               	bcf	(_outPipes^(0+256)+2),7
  7593                           
  7594                           ;usb_device.c: 2685: }
  7595                           ;usb_device.c: 2687: controlTransferState = 0;
  7596  0DB8  0021               	movlb	1	; select bank1
  7597  0DB9  01E9               	clrf	_controlTransferState^(0+128)
  7598  0DBA  0008               	return
  7599  0DBB                     __end_of_USBCtrlTrfInHandler:	
  7600                           
  7601                           	psect	text27
  7602  0E23                     __ptext27:	
  7603 ;; *************** function _USBCtrlTrfTxService *****************
  7604 ;; Defined at:
  7605 ;;		line 1790 in file "../framework/usb/usb_device.c"
  7606 ;; Parameters:    Size  Location     Type
  7607 ;;		None
  7608 ;; Auto vars:     Size  Location     Type
  7609 ;;  byteToSend      1    3[COMMON] unsigned char 
  7610 ;; Return value:  Size  Location     Type
  7611 ;;		None               void
  7612 ;; Registers used:
  7613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7614 ;; Tracked objects:
  7615 ;;		On entry : 0/0
  7616 ;;		On exit  : 0/0
  7617 ;;		Unchanged: 0/0
  7618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7620 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7621 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7622 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7623 ;;Total ram usage:        3 bytes
  7624 ;; Hardware stack levels used:    1
  7625 ;; Hardware stack levels required when called:    1
  7626 ;; This function calls:
  7627 ;;		Nothing
  7628 ;; This function is called by:
  7629 ;;		_USBCtrlEPAllowDataStage
  7630 ;;		_USBCtrlTrfInHandler
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           
  7635                           ;psect for function _USBCtrlTrfTxService
  7636  0E23                     _USBCtrlTrfTxService:	
  7637                           
  7638                           ;usb_device.c: 1792: uint8_t byteToSend;
  7639                           ;usb_device.c: 1796: byteToSend = 8;
  7640                           
  7641                           ;incstack = 0
  7642                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  7643  0E23  3008               	movlw	8
  7644  0E24  00F1               	movwf	??_USBCtrlTrfTxService
  7645  0E25  0871               	movf	??_USBCtrlTrfTxService,w
  7646  0E26  00F3               	movwf	USBCtrlTrfTxService@byteToSend
  7647                           
  7648                           ;usb_device.c: 1797: if(inPipes[0].wCount.Val < (uint8_t)8)
  7649  0E27  3000               	movlw	0
  7650  0E28  0021               	movlb	1	; select bank1
  7651  0E29  0264               	subwf	((_inPipes+1)^(0+128)+3),w
  7652  0E2A  3008               	movlw	8
  7653  0E2B  1903               	skipnz
  7654  0E2C  0263               	subwf	(_inPipes^(0+128)+3),w
  7655  0E2D  1803               	skipnc
  7656  0E2E  2E40               	goto	l663
  7657                           
  7658                           ;usb_device.c: 1798: {
  7659                           ;usb_device.c: 1799: byteToSend = inPipes[0].wCount.Val;
  7660  0E2F  0863               	movf	(_inPipes^(0+128)+3),w
  7661  0E30  00F1               	movwf	??_USBCtrlTrfTxService
  7662  0E31  0871               	movf	??_USBCtrlTrfTxService,w
  7663  0E32  00F3               	movwf	USBCtrlTrfTxService@byteToSend
  7664                           
  7665                           ;usb_device.c: 1806: if(shortPacketStatus == 0)
  7666  0E33  086C               	movf	_shortPacketStatus^(0+128),w
  7667  0E34  1D03               	btfss	3,2
  7668  0E35  2E39               	goto	l2981
  7669                           
  7670                           ;usb_device.c: 1807: {
  7671                           ;usb_device.c: 1808: shortPacketStatus = 1;
  7672  0E36  01EC               	clrf	_shortPacketStatus^(0+128)
  7673  0E37  0AEC               	incf	_shortPacketStatus^(0+128),f
  7674                           
  7675                           ;usb_device.c: 1809: }
  7676  0E38  2E40               	goto	l663
  7677  0E39                     l2981:	
  7678                           
  7679                           ;usb_device.c: 1810: else if(shortPacketStatus == 1)
  7680  0E39  036C               	decf	_shortPacketStatus^(0+128),w
  7681  0E3A  1D03               	btfss	3,2
  7682  0E3B  2E40               	goto	l663
  7683                           
  7684                           ;usb_device.c: 1811: {
  7685                           ;usb_device.c: 1812: shortPacketStatus = 2;
  7686  0E3C  3002               	movlw	2
  7687  0E3D  00F1               	movwf	??_USBCtrlTrfTxService
  7688  0E3E  0871               	movf	??_USBCtrlTrfTxService,w
  7689  0E3F  00EC               	movwf	_shortPacketStatus^(0+128)
  7690  0E40                     l663:	
  7691                           
  7692                           ;usb_device.c: 1813: }
  7693                           ;usb_device.c: 1814: }
  7694                           ;usb_device.c: 1818: inPipes[0].wCount.Val -= byteToSend;
  7695  0E40  0873               	movf	USBCtrlTrfTxService@byteToSend,w
  7696  0E41  00F1               	movwf	??_USBCtrlTrfTxService
  7697  0E42  01F2               	clrf	??_USBCtrlTrfTxService+1
  7698  0E43  0871               	movf	??_USBCtrlTrfTxService,w
  7699  0E44  02E3               	subwf	(_inPipes^(0+128)+3),f
  7700  0E45  0872               	movf	??_USBCtrlTrfTxService+1,w
  7701  0E46  3BE4               	subwfb	((_inPipes+1)^(0+128)+3),f
  7702                           
  7703                           ;usb_device.c: 1823: pBDTEntryIn[0]->CNT = byteToSend;
  7704  0E47  0873               	movf	USBCtrlTrfTxService@byteToSend,w
  7705  0E48  00F1               	movwf	??_USBCtrlTrfTxService
  7706  0E49  0020               	movlb	0	; select bank0
  7707  0E4A  0A6B               	incf	_pBDTEntryIn,w
  7708  0E4B  0086               	movwf	6
  7709  0E4C  0187               	clrf	7
  7710  0E4D  0871               	movf	??_USBCtrlTrfTxService,w
  7711  0E4E  0081               	movwf	1
  7712                           
  7713                           ;usb_device.c: 1827: pDst = ( uint8_t*)CtrlTrfData;
  7714  0E4F  3048               	movlw	72
  7715  0E50  00F1               	movwf	??_USBCtrlTrfTxService
  7716  0E51  0871               	movf	??_USBCtrlTrfTxService,w
  7717  0E52  0022               	movlb	2	; select bank2
  7718  0E53  00E6               	movwf	_pDst^(0+256)
  7719                           
  7720                           ;usb_device.c: 1828: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  7721  0E54  0021               	movlb	1	; select bank1
  7722  0E55  1C62               	btfss	(_inPipes^(0+128)+2),0
  7723  0E56  2E71               	goto	l3001
  7724  0E57  2E8E               	goto	l3011
  7725  0E58                     l2993:	
  7726                           ;usb_device.c: 1829: {
  7727                           ;usb_device.c: 1830: while(byteToSend)
  7728                           
  7729                           
  7730                           ;usb_device.c: 1831: {
  7731                           ;usb_device.c: 1832: *pDst++ = *inPipes[0].pSrc.bRom++;
  7732  0E58  0021               	movlb	1	; select bank1
  7733  0E59  0860               	movf	_inPipes^(0+128),w
  7734  0E5A  0084               	movwf	4
  7735  0E5B  0861               	movf	(_inPipes+1)^(0+128),w
  7736  0E5C  0085               	movwf	5
  7737  0E5D  0800               	movf	0,w	;code access
  7738  0E5E  00F1               	movwf	??_USBCtrlTrfTxService
  7739  0E5F  0022               	movlb	2	; select bank2
  7740  0E60  0866               	movf	_pDst^(0+256),w
  7741  0E61  0086               	movwf	6
  7742  0E62  0187               	clrf	7
  7743  0E63  0871               	movf	??_USBCtrlTrfTxService,w
  7744  0E64  0081               	movwf	1
  7745  0E65  3001               	movlw	1
  7746  0E66  0021               	movlb	1	; select bank1
  7747  0E67  07E0               	addwf	_inPipes^(0+128),f
  7748  0E68  3000               	movlw	0
  7749  0E69  3DE1               	addwfc	(_inPipes+1)^(0+128),f
  7750  0E6A  3001               	movlw	1
  7751  0E6B  00F1               	movwf	??_USBCtrlTrfTxService
  7752  0E6C  0871               	movf	??_USBCtrlTrfTxService,w
  7753  0E6D  0022               	movlb	2	; select bank2
  7754  0E6E  07E6               	addwf	_pDst^(0+256),f
  7755                           
  7756                           ;usb_device.c: 1833: byteToSend--;
  7757  0E6F  3001               	movlw	1
  7758  0E70  02F3               	subwf	USBCtrlTrfTxService@byteToSend,f
  7759  0E71                     l3001:	
  7760  0E71  0873               	movf	USBCtrlTrfTxService@byteToSend,w
  7761  0E72  1903               	btfsc	3,2
  7762  0E73  0008               	return
  7763  0E74  2E58               	goto	l2993
  7764  0E75                     l3003:	
  7765                           ;usb_device.c: 1836: else
  7766                           ;usb_device.c: 1837: {
  7767                           ;usb_device.c: 1838: while(byteToSend)
  7768                           
  7769                           ;usb_device.c: 1834: }
  7770                           ;usb_device.c: 1835: }
  7771                           
  7772                           
  7773                           ;usb_device.c: 1839: {
  7774                           ;usb_device.c: 1840: *pDst++ = *inPipes[0].pSrc.bRam++;
  7775  0E75  0021               	movlb	1	; select bank1
  7776  0E76  0860               	movf	_inPipes^(0+128),w
  7777  0E77  0084               	movwf	4
  7778  0E78  0861               	movf	(_inPipes+1)^(0+128),w
  7779  0E79  0085               	movwf	5
  7780  0E7A  0800               	movf	0,w	;code access
  7781  0E7B  00F1               	movwf	??_USBCtrlTrfTxService
  7782  0E7C  0022               	movlb	2	; select bank2
  7783  0E7D  0866               	movf	_pDst^(0+256),w
  7784  0E7E  0086               	movwf	6
  7785  0E7F  0187               	clrf	7
  7786  0E80  0871               	movf	??_USBCtrlTrfTxService,w
  7787  0E81  0081               	movwf	1
  7788  0E82  3001               	movlw	1
  7789  0E83  0021               	movlb	1	; select bank1
  7790  0E84  07E0               	addwf	_inPipes^(0+128),f
  7791  0E85  3000               	movlw	0
  7792  0E86  3DE1               	addwfc	(_inPipes+1)^(0+128),f
  7793  0E87  3001               	movlw	1
  7794  0E88  00F1               	movwf	??_USBCtrlTrfTxService
  7795  0E89  0871               	movf	??_USBCtrlTrfTxService,w
  7796  0E8A  0022               	movlb	2	; select bank2
  7797  0E8B  07E6               	addwf	_pDst^(0+256),f
  7798                           
  7799                           ;usb_device.c: 1841: byteToSend--;
  7800  0E8C  3001               	movlw	1
  7801  0E8D  02F3               	subwf	USBCtrlTrfTxService@byteToSend,f
  7802  0E8E                     l3011:	
  7803  0E8E  0873               	movf	USBCtrlTrfTxService@byteToSend,w
  7804  0E8F  1903               	btfsc	3,2
  7805  0E90  0008               	return
  7806  0E91  2E75               	goto	l3003
  7807  0E92                     __end_of_USBCtrlTrfTxService:	
  7808                           
  7809                           	psect	text28
  7810  0A3F                     __ptext28:	
  7811 ;; *************** function _SYSTEM_Initialize *****************
  7812 ;; Defined at:
  7813 ;;		line 86 in file "../src/pic16f1459/system.c"
  7814 ;; Parameters:    Size  Location     Type
  7815 ;;  state           1    wreg     enum E2644
  7816 ;; Auto vars:     Size  Location     Type
  7817 ;;  state           1    2[COMMON] enum E2644
  7818 ;; Return value:  Size  Location     Type
  7819 ;;		None               void
  7820 ;; Registers used:
  7821 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7822 ;; Tracked objects:
  7823 ;;		On entry : 0/0
  7824 ;;		On exit  : 0/0
  7825 ;;		Unchanged: 0/0
  7826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7828 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7830 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7831 ;;Total ram usage:        1 bytes
  7832 ;; Hardware stack levels used:    1
  7833 ;; Hardware stack levels required when called:    2
  7834 ;; This function calls:
  7835 ;;		_BUTTON_Enable
  7836 ;;		_LED_Enable
  7837 ;; This function is called by:
  7838 ;;		_main
  7839 ;; This function uses a non-reentrant model
  7840 ;;
  7841                           
  7842                           
  7843                           ;psect for function _SYSTEM_Initialize
  7844  0A3F                     _SYSTEM_Initialize:	
  7845                           
  7846                           ;incstack = 0
  7847                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7848                           ;SYSTEM_Initialize@state stored from wreg
  7849  0A3F  00F2               	movwf	SYSTEM_Initialize@state
  7850                           
  7851                           ;system.c: 88: switch(state)
  7852  0A40  2A4F               	goto	l3883
  7853  0A41                     l3875:	
  7854                           ;system.c: 89: {
  7855                           ;system.c: 90: case SYSTEM_STATE_USB_START:
  7856                           
  7857                           
  7858                           ;system.c: 94: OSCCON = 0xFC;
  7859  0A41  30FC               	movlw	252
  7860  0A42  0021               	movlb	1	; select bank1
  7861  0A43  0099               	movwf	25	;volatile
  7862                           
  7863                           ;system.c: 95: ACTCON = 0x90;
  7864  0A44  3090               	movlw	144
  7865  0A45  0027               	movlb	7	; select bank7
  7866  0A46  009B               	movwf	27	;volatile
  7867                           
  7868                           ;system.c: 97: LED_Enable(LED_D1);
  7869  0A47  3001               	movlw	1
  7870  0A48  3189  21F1  318A   	fcall	_LED_Enable
  7871                           
  7872                           ;system.c: 99: BUTTON_Enable(BUTTON_S1);
  7873  0A4B  3001               	movlw	1
  7874  0A4C  3189  211E         	fcall	_BUTTON_Enable
  7875                           
  7876                           ;system.c: 107: }
  7877                           
  7878                           ;system.c: 106: break;
  7879                           
  7880                           ;system.c: 105: case SYSTEM_STATE_USB_RESUME:
  7881                           
  7882                           ;system.c: 103: break;
  7883                           
  7884                           ;system.c: 102: case SYSTEM_STATE_USB_SUSPEND:
  7885                           
  7886                           ;system.c: 100: break;
  7887  0A4E  0008               	return
  7888  0A4F                     l3883:	
  7889  0A4F  0872               	movf	SYSTEM_Initialize@state,w
  7890                           
  7891                           ; Switch size 1, requested type "space"
  7892                           ; Number of cases is 3, Range of values is 0 to 2
  7893                           ; switch strategies available:
  7894                           ; Name         Instructions Cycles
  7895                           ; simple_byte           10     6 (average)
  7896                           ; direct_byte           12     6 (fixed)
  7897                           ; jumptable            260     6 (fixed)
  7898                           ;	Chosen strategy is simple_byte
  7899  0A50  3A00               	xorlw	0	; case 0
  7900  0A51  1903               	skipnz
  7901  0A52  2A41               	goto	l3875
  7902  0A53  3A01               	xorlw	1	; case 1
  7903  0A54  1903               	skipnz
  7904  0A55  2A5A               	goto	l16
  7905  0A56  3A03               	xorlw	3	; case 2
  7906  0A57  1903               	skipnz
  7907  0A58  2A5A               	goto	l16
  7908  0A59  2A5A               	goto	l16
  7909  0A5A                     l16:	
  7910  0A5A  0008               	return
  7911  0A5B                     __end_of_SYSTEM_Initialize:	
  7912                           
  7913                           	psect	text29
  7914  09F1                     __ptext29:	
  7915 ;; *************** function _LED_Enable *****************
  7916 ;; Defined at:
  7917 ;;		line 220 in file "../bsp/pic16f1459/leds.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;  led             1    wreg     enum E2
  7920 ;; Auto vars:     Size  Location     Type
  7921 ;;  led             1    1[COMMON] enum E2
  7922 ;; Return value:  Size  Location     Type
  7923 ;;		None               void
  7924 ;; Registers used:
  7925 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7926 ;; Tracked objects:
  7927 ;;		On entry : 0/0
  7928 ;;		On exit  : 0/0
  7929 ;;		Unchanged: 0/0
  7930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7932 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7934 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7935 ;;Total ram usage:        1 bytes
  7936 ;; Hardware stack levels used:    1
  7937 ;; Hardware stack levels required when called:    1
  7938 ;; This function calls:
  7939 ;;		Nothing
  7940 ;; This function is called by:
  7941 ;;		_SYSTEM_Initialize
  7942 ;; This function uses a non-reentrant model
  7943 ;;
  7944                           
  7945                           
  7946                           ;psect for function _LED_Enable
  7947  09F1                     _LED_Enable:	
  7948                           
  7949                           ;incstack = 0
  7950                           ; Regs used in _LED_Enable: [wreg-fsr0h+status,2+status,0]
  7951                           ;LED_Enable@led stored from wreg
  7952  09F1  00F1               	movwf	LED_Enable@led
  7953                           
  7954                           ;leds.c: 222: switch(led)
  7955  09F2  29FF               	goto	l3629
  7956  09F3                     l404:	
  7957                           ;leds.c: 223: {
  7958                           ;leds.c: 224: case LED_D1:
  7959                           
  7960                           
  7961                           ;leds.c: 225: TRISCbits.TRISC2 = 0;
  7962  09F3  0021               	movlb	1	; select bank1
  7963  09F4  110E               	bcf	14,2	;volatile
  7964                           
  7965                           ;leds.c: 226: break;
  7966  09F5  0008               	return
  7967  09F6                     l406:	
  7968                           ;leds.c: 228: case LED_D2:
  7969                           
  7970                           
  7971                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  7972  09F6  0021               	movlb	1	; select bank1
  7973  09F7  108E               	bcf	14,1	;volatile
  7974                           
  7975                           ;leds.c: 230: break;
  7976  09F8  0008               	return
  7977  09F9                     l407:	
  7978                           ;leds.c: 232: case LED_D3:
  7979                           
  7980                           
  7981                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  7982  09F9  0021               	movlb	1	; select bank1
  7983  09FA  110E               	bcf	14,2	;volatile
  7984                           
  7985                           ;leds.c: 234: break;
  7986  09FB  0008               	return
  7987  09FC                     l408:	
  7988                           ;leds.c: 236: case LED_D4:
  7989                           
  7990                           
  7991                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  7992  09FC  0021               	movlb	1	; select bank1
  7993  09FD  118E               	bcf	14,3	;volatile
  7994                           
  7995                           ;leds.c: 242: }
  7996                           
  7997                           ;leds.c: 241: break;
  7998                           
  7999                           ;leds.c: 240: case LED_NONE:
  8000                           
  8001                           ;leds.c: 238: break;
  8002  09FE  0008               	return
  8003  09FF                     l3629:	
  8004  09FF  0871               	movf	LED_Enable@led,w
  8005                           
  8006                           ; Switch size 1, requested type "space"
  8007                           ; Number of cases is 5, Range of values is 0 to 4
  8008                           ; switch strategies available:
  8009                           ; Name         Instructions Cycles
  8010                           ; direct_byte           16     6 (fixed)
  8011                           ; simple_byte           16     9 (average)
  8012                           ; jumptable            260     6 (fixed)
  8013                           ;	Chosen strategy is direct_byte
  8014  0A00  0084               	movwf	4
  8015  0A01  3005               	movlw	5
  8016  0A02  0204               	subwf	4,w
  8017  0A03  1803               	skipnc
  8018  0A04  0008               	return
  8019  0A05  3188               	movlp	high S4841
  8020  0A06  3504               	lslf	4,w
  8021  0A07  3E26               	addlw	low S4841
  8022  0A08  0082               	movwf	2
  8023  0A09                     l410:	
  8024  0A09  0008               	return
  8025  0A0A                     __end_of_LED_Enable:	
  8026                           
  8027                           	psect	swtext2
  8028  0826                     __pswtext2:	
  8029  0826                     S4841:	
  8030  0826  318A  2A09         	ljmp	l410
  8031  0828  3189  29F3         	ljmp	l404
  8032  082A  3189  29F6         	ljmp	l406
  8033  082C  3189  29F9         	ljmp	l407
  8034  082E  3189  29FC         	ljmp	l408
  8035                           
  8036                           	psect	text30
  8037  091E                     __ptext30:	
  8038 ;; *************** function _BUTTON_Enable *****************
  8039 ;; Defined at:
  8040 ;;		line 85 in file "../bsp/pic16f1459/buttons.c"
  8041 ;; Parameters:    Size  Location     Type
  8042 ;;  button          1    wreg     enum E2613
  8043 ;; Auto vars:     Size  Location     Type
  8044 ;;  button          1    1[COMMON] enum E2613
  8045 ;; Return value:  Size  Location     Type
  8046 ;;		None               void
  8047 ;; Registers used:
  8048 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8057 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8058 ;;Total ram usage:        1 bytes
  8059 ;; Hardware stack levels used:    1
  8060 ;; Hardware stack levels required when called:    1
  8061 ;; This function calls:
  8062 ;;		Nothing
  8063 ;; This function is called by:
  8064 ;;		_SYSTEM_Initialize
  8065 ;; This function uses a non-reentrant model
  8066 ;;
  8067                           
  8068                           
  8069                           ;psect for function _BUTTON_Enable
  8070  091E                     _BUTTON_Enable:	
  8071                           
  8072                           ;incstack = 0
  8073                           ; Regs used in _BUTTON_Enable: [wreg-fsr0h+status,2+status,0]
  8074                           ;BUTTON_Enable@button stored from wreg
  8075  091E  00F1               	movwf	BUTTON_Enable@button
  8076                           
  8077                           ;buttons.c: 94: }
  8078                           
  8079                           ;buttons.c: 93: break;
  8080                           
  8081                           ;buttons.c: 92: case BUTTON_NONE:
  8082                           
  8083                           ;buttons.c: 90: break;
  8084                           
  8085                           ;buttons.c: 88: {
  8086                           ;buttons.c: 89: case BUTTON_S1:
  8087                           
  8088                           ;buttons.c: 87: switch(button)
  8089  091F  0871               	movf	BUTTON_Enable@button,w
  8090                           
  8091                           ; Switch size 1, requested type "space"
  8092                           ; Number of cases is 2, Range of values is 0 to 1
  8093                           ; switch strategies available:
  8094                           ; Name         Instructions Cycles
  8095                           ; simple_byte            7     4 (average)
  8096                           ; direct_byte           10     6 (fixed)
  8097                           ; jumptable            260     6 (fixed)
  8098                           ;	Chosen strategy is simple_byte
  8099  0920  3A00               	xorlw	0	; case 0
  8100  0921  1903               	skipnz
  8101  0922  2927               	goto	l309
  8102  0923  3A01               	xorlw	1	; case 1
  8103  0924  1903               	skipnz
  8104  0925  2927               	goto	l309
  8105  0926  2927               	goto	l309
  8106  0927                     l309:	
  8107  0927  0008               	return
  8108  0928                     __end_of_BUTTON_Enable:	
  8109                           
  8110                           	psect	text31
  8111  0038                     __ptext31:	
  8112 ;; *************** function _APP_DeviceAudioMIDITasks *****************
  8113 ;; Defined at:
  8114 ;;		line 57 in file "../src/app_device_audio_midi.c"
  8115 ;; Parameters:    Size  Location     Type
  8116 ;;		None
  8117 ;; Auto vars:     Size  Location     Type
  8118 ;;  velocity        1   26[BANK0 ] unsigned char 
  8119 ;;  scan_pitch      1   25[BANK0 ] unsigned char 
  8120 ;; Return value:  Size  Location     Type
  8121 ;;		None               void
  8122 ;; Registers used:
  8123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8124 ;; Tracked objects:
  8125 ;;		On entry : 0/0
  8126 ;;		On exit  : 0/0
  8127 ;;		Unchanged: 0/0
  8128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8130 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8131 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8132 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8133 ;;Total ram usage:       10 bytes
  8134 ;; Hardware stack levels used:    1
  8135 ;; Hardware stack levels required when called:    5
  8136 ;; This function calls:
  8137 ;;		_BUTTON_IsPressed
  8138 ;;		_USBTransferOnePacket
  8139 ;;		_scan_task
  8140 ;; This function is called by:
  8141 ;;		_main
  8142 ;; This function uses a non-reentrant model
  8143 ;;
  8144                           
  8145                           
  8146                           ;psect for function _APP_DeviceAudioMIDITasks
  8147  0038                     _APP_DeviceAudioMIDITasks:	
  8148                           
  8149                           ;app_device_audio_midi.c: 59: if( USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND)
  8150                           
  8151                           ;incstack = 0
  8152                           ; Regs used in _APP_DeviceAudioMIDITasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8153  0038  3020               	movlw	32
  8154  0039  0020               	movlb	0	; select bank0
  8155  003A  026D               	subwf	_USBDeviceState,w
  8156  003B  1C03               	skipc
  8157  003C  0008               	return
  8158  003D  003D               	movlb	29	; select bank29
  8159  003E  188E               	btfsc	14,1	;volatile
  8160  003F  0008               	return
  8161                           
  8162                           ;app_device_audio_midi.c: 62: if(!(USBRxHandle==0?0:((volatile BDT_ENTRY*)USBRxHandle)->
      +                          STAT.UOWN))
  8163                           
  8164                           ;app_device_audio_midi.c: 60: return;
  8165  0040  0022               	movlb	2	; select bank2
  8166  0041  085F               	movf	_USBRxHandle^(0+256),w
  8167  0042  1903               	btfsc	3,2
  8168  0043  2852               	goto	l4011
  8169  0044  085F               	movf	_USBRxHandle^(0+256),w
  8170  0045  0086               	movwf	6
  8171  0046  0187               	clrf	7
  8172  0047  0D01               	rlf	1,w
  8173  0048  0D01               	rlf	1,w
  8174  0049  3901               	andlw	1
  8175  004A  0020               	movlb	0	; select bank0
  8176  004B  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8177  004C  01E2               	clrf	??_APP_DeviceAudioMIDITasks+1
  8178  004D  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8179  004E  00E3               	movwf	_APP_DeviceAudioMIDITasks$423
  8180  004F  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  8181  0050  00E4               	movwf	_APP_DeviceAudioMIDITasks$423+1
  8182  0051  2855               	goto	l4013
  8183  0052                     l4011:	
  8184  0052  0020               	movlb	0	; select bank0
  8185  0053  01E3               	clrf	_APP_DeviceAudioMIDITasks$423
  8186  0054  01E4               	clrf	_APP_DeviceAudioMIDITasks$423+1
  8187  0055                     l4013:	
  8188  0055  0863               	movf	_APP_DeviceAudioMIDITasks$423,w
  8189  0056  0464               	iorwf	_APP_DeviceAudioMIDITasks$423+1,w
  8190  0057  1D03               	btfss	3,2
  8191  0058  286B               	goto	l4017
  8192                           
  8193                           ;app_device_audio_midi.c: 63: {
  8194                           ;app_device_audio_midi.c: 70: USBRxHandle = USBTransferOnePacket(1,0,(uint8_t*)&Received
      +                          DataBuffer,64);
  8195  0059  01F1               	clrf	USBTransferOnePacket@dir
  8196  005A  30A0               	movlw	160
  8197  005B  00F2               	movwf	USBTransferOnePacket@data
  8198  005C  3000               	movlw	0
  8199  005D  00F3               	movwf	USBTransferOnePacket@data+1
  8200  005E  3040               	movlw	64
  8201  005F  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8202  0060  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8203  0061  00F4               	movwf	USBTransferOnePacket@len
  8204  0062  3001               	movlw	1
  8205  0063  318C  245B  3180   	fcall	_USBTransferOnePacket
  8206  0066  0020               	movlb	0	; select bank0
  8207  0067  00E2               	movwf	??_APP_DeviceAudioMIDITasks+1
  8208  0068  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  8209  0069  0022               	movlb	2	; select bank2
  8210  006A  00DF               	movwf	_USBRxHandle^(0+256)
  8211  006B                     l4017:	
  8212                           
  8213                           ;app_device_audio_midi.c: 71: }
  8214                           ;app_device_audio_midi.c: 73: {
  8215                           ;app_device_audio_midi.c: 74: uint8_t scan_pitch = 0x3C, velocity = 0;
  8216  006B  303C               	movlw	60
  8217  006C  0020               	movlb	0	; select bank0
  8218  006D  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8219  006E  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8220  006F  00E9               	movwf	APP_DeviceAudioMIDITasks@scan_pitch
  8221  0070  01EA               	clrf	APP_DeviceAudioMIDITasks@velocity
  8222                           
  8223                           ;app_device_audio_midi.c: 75: if (scan_task(&scan_pitch, &velocity)) {
  8224  0071  306A               	movlw	(low (APP_DeviceAudioMIDITasks@velocity| 0))& (0+255)
  8225  0072  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8226  0073  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8227  0074  00DB               	movwf	scan_task@velocity
  8228  0075  3069               	movlw	(low (APP_DeviceAudioMIDITasks@scan_pitch| 0))& (0+255)
  8229  0076  3185  2552  3180   	fcall	_scan_task
  8230  0079  3A00               	xorlw	0
  8231  007A  1903               	skipnz
  8232  007B  28B1               	goto	l4031
  8233                           
  8234                           ;app_device_audio_midi.c: 76: midiData.Val = 0;
  8235  007C  3000               	movlw	0
  8236  007D  0023               	movlb	3	; select bank3
  8237  007E  00A3               	movwf	35
  8238  007F  3000               	movlw	0
  8239  0080  00A2               	movwf	34
  8240  0081  3000               	movlw	0
  8241  0082  00A1               	movwf	33
  8242  0083  3000               	movlw	0
  8243  0084  00A0               	movwf	32
  8244                           
  8245                           ;app_device_audio_midi.c: 77: midiData.CableNumber = 0;
  8246  0085  300F               	movlw	-241
  8247  0086  05A0               	andwf	32,f
  8248                           
  8249                           ;app_device_audio_midi.c: 78: midiData.CodeIndexNumber = 0x9;
  8250  0087  0820               	movf	32,w
  8251  0088  39F0               	andlw	-16
  8252  0089  3809               	iorlw	9
  8253  008A  00A0               	movwf	32
  8254                           
  8255                           ;app_device_audio_midi.c: 79: midiData.DATA_0 = 0x90;
  8256  008B  3090               	movlw	144
  8257  008C  0020               	movlb	0	; select bank0
  8258  008D  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8259  008E  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8260  008F  0023               	movlb	3	; select bank3
  8261  0090  00A1               	movwf	33
  8262                           
  8263                           ;app_device_audio_midi.c: 80: midiData.DATA_1 = scan_pitch;
  8264  0091  0020               	movlb	0	; select bank0
  8265  0092  0869               	movf	APP_DeviceAudioMIDITasks@scan_pitch,w
  8266  0093  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8267  0094  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8268  0095  0023               	movlb	3	; select bank3
  8269  0096  00A2               	movwf	34
  8270                           
  8271                           ;app_device_audio_midi.c: 81: midiData.DATA_2 = velocity;
  8272  0097  0020               	movlb	0	; select bank0
  8273  0098  086A               	movf	APP_DeviceAudioMIDITasks@velocity,w
  8274  0099  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8275  009A  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8276  009B  0023               	movlb	3	; select bank3
  8277  009C  00A3               	movwf	35
  8278                           
  8279                           ;app_device_audio_midi.c: 82: USBTxHandle = USBTransferOnePacket(1,1,(uint8_t*)&midiData
      +                          ,4);
  8280  009D  01F1               	clrf	USBTransferOnePacket@dir
  8281  009E  0AF1               	incf	USBTransferOnePacket@dir,f
  8282  009F  30A0               	movlw	160
  8283  00A0  00F2               	movwf	USBTransferOnePacket@data
  8284  00A1  3001               	movlw	1
  8285  00A2  00F3               	movwf	USBTransferOnePacket@data+1
  8286  00A3  3004               	movlw	4
  8287  00A4  0020               	movlb	0	; select bank0
  8288  00A5  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8289  00A6  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8290  00A7  00F4               	movwf	USBTransferOnePacket@len
  8291  00A8  3001               	movlw	1
  8292  00A9  318C  245B  3180   	fcall	_USBTransferOnePacket
  8293  00AC  0020               	movlb	0	; select bank0
  8294  00AD  00E2               	movwf	??_APP_DeviceAudioMIDITasks+1
  8295  00AE  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  8296  00AF  0021               	movlb	1	; select bank1
  8297  00B0  00E8               	movwf	_USBTxHandle^(0+128)
  8298  00B1                     l4031:	
  8299                           
  8300                           ;app_device_audio_midi.c: 83: }
  8301                           ;app_device_audio_midi.c: 84: }
  8302                           ;app_device_audio_midi.c: 87: if(BUTTON_IsPressed(BUTTON_S1))
  8303  00B1  3001               	movlw	1
  8304  00B2  3189  2150  3180   	fcall	_BUTTON_IsPressed
  8305  00B5  3A00               	xorlw	0
  8306  00B6  1903               	skipnz
  8307  00B7  2916               	goto	l4055
  8308                           
  8309                           ;app_device_audio_midi.c: 88: {
  8310                           ;app_device_audio_midi.c: 92: if(msCounter == 0 && sentNoteOff && !(USBTxHandle==0?0:((v
      +                          olatile BDT_ENTRY*)USBTxHandle)->STAT.UOWN)) {
  8311  00B8  0021               	movlb	1	; select bank1
  8312  00B9  086A               	movf	_msCounter^(0+128),w
  8313  00BA  1D03               	btfss	3,2
  8314  00BB  0008               	return
  8315  00BC  0022               	movlb	2	; select bank2
  8316  00BD  0867               	movf	_sentNoteOff^(0+256),w
  8317  00BE  1903               	btfsc	3,2
  8318  00BF  0008               	return
  8319  00C0  0021               	movlb	1	; select bank1
  8320  00C1  0868               	movf	_USBTxHandle^(0+128),w
  8321  00C2  1903               	btfsc	3,2
  8322  00C3  28D2               	goto	l4041
  8323  00C4  0868               	movf	_USBTxHandle^(0+128),w
  8324  00C5  0086               	movwf	6
  8325  00C6  0187               	clrf	7
  8326  00C7  0D01               	rlf	1,w
  8327  00C8  0D01               	rlf	1,w
  8328  00C9  3901               	andlw	1
  8329  00CA  0020               	movlb	0	; select bank0
  8330  00CB  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8331  00CC  01E2               	clrf	??_APP_DeviceAudioMIDITasks+1
  8332  00CD  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8333  00CE  00E5               	movwf	_APP_DeviceAudioMIDITasks$464
  8334  00CF  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  8335  00D0  00E6               	movwf	_APP_DeviceAudioMIDITasks$464+1
  8336  00D1  28D5               	goto	l4043
  8337  00D2                     l4041:	
  8338  00D2  0020               	movlb	0	; select bank0
  8339  00D3  01E5               	clrf	_APP_DeviceAudioMIDITasks$464
  8340  00D4  01E6               	clrf	_APP_DeviceAudioMIDITasks$464+1
  8341  00D5                     l4043:	
  8342  00D5  0865               	movf	_APP_DeviceAudioMIDITasks$464,w
  8343  00D6  0466               	iorwf	_APP_DeviceAudioMIDITasks$464+1,w
  8344  00D7  1D03               	btfss	3,2
  8345  00D8  0008               	return
  8346                           
  8347                           ;app_device_audio_midi.c: 94: msCounter = 100;
  8348  00D9  3064               	movlw	100
  8349  00DA  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8350  00DB  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8351  00DC  0021               	movlb	1	; select bank1
  8352  00DD  00EA               	movwf	_msCounter^(0+128)
  8353                           
  8354                           ;app_device_audio_midi.c: 95: midiData.Val = 0;
  8355  00DE  3000               	movlw	0
  8356  00DF  0023               	movlb	3	; select bank3
  8357  00E0  00A3               	movwf	35
  8358  00E1  3000               	movlw	0
  8359  00E2  00A2               	movwf	34
  8360  00E3  3000               	movlw	0
  8361  00E4  00A1               	movwf	33
  8362  00E5  3000               	movlw	0
  8363  00E6  00A0               	movwf	32
  8364                           
  8365                           ;app_device_audio_midi.c: 97: midiData.CableNumber = 0;
  8366  00E7  300F               	movlw	-241
  8367  00E8  05A0               	andwf	32,f
  8368                           
  8369                           ;app_device_audio_midi.c: 98: midiData.CodeIndexNumber = 0x9;
  8370  00E9  0820               	movf	32,w
  8371  00EA  39F0               	andlw	-16
  8372  00EB  3809               	iorlw	9
  8373  00EC  00A0               	movwf	32
  8374                           
  8375                           ;app_device_audio_midi.c: 99: midiData.DATA_0 = 0x90;
  8376  00ED  3090               	movlw	144
  8377  00EE  0020               	movlb	0	; select bank0
  8378  00EF  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8379  00F0  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8380  00F1  0023               	movlb	3	; select bank3
  8381  00F2  00A1               	movwf	33
  8382                           
  8383                           ;app_device_audio_midi.c: 100: midiData.DATA_1 = pitch;
  8384  00F3  0021               	movlb	1	; select bank1
  8385  00F4  086B               	movf	_pitch^(0+128),w
  8386  00F5  0020               	movlb	0	; select bank0
  8387  00F6  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8388  00F7  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8389  00F8  0023               	movlb	3	; select bank3
  8390  00F9  00A2               	movwf	34
  8391                           
  8392                           ;app_device_audio_midi.c: 101: midiData.DATA_2 = 0x7F;
  8393  00FA  307F               	movlw	127
  8394  00FB  0020               	movlb	0	; select bank0
  8395  00FC  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8396  00FD  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8397  00FE  0023               	movlb	3	; select bank3
  8398  00FF  00A3               	movwf	35
  8399                           
  8400                           ;app_device_audio_midi.c: 102: USBTxHandle = USBTransferOnePacket(1,1,(uint8_t*)&midiDat
      +                          a,4);
  8401  0100  01F1               	clrf	USBTransferOnePacket@dir
  8402  0101  0AF1               	incf	USBTransferOnePacket@dir,f
  8403  0102  30A0               	movlw	160
  8404  0103  00F2               	movwf	USBTransferOnePacket@data
  8405  0104  3001               	movlw	1
  8406  0105  00F3               	movwf	USBTransferOnePacket@data+1
  8407  0106  3004               	movlw	4
  8408  0107  0020               	movlb	0	; select bank0
  8409  0108  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8410  0109  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8411  010A  00F4               	movwf	USBTransferOnePacket@len
  8412  010B  3001               	movlw	1
  8413  010C  318C  245B         	fcall	_USBTransferOnePacket
  8414  010E  0020               	movlb	0	; select bank0
  8415  010F  00E2               	movwf	??_APP_DeviceAudioMIDITasks+1
  8416  0110  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  8417  0111  0021               	movlb	1	; select bank1
  8418  0112  00E8               	movwf	_USBTxHandle^(0+128)
  8419                           
  8420                           ;app_device_audio_midi.c: 104: sentNoteOff = 0;
  8421  0113  0022               	movlb	2	; select bank2
  8422  0114  01E7               	clrf	_sentNoteOff^(0+256)
  8423                           
  8424                           ;app_device_audio_midi.c: 105: }
  8425                           ;app_device_audio_midi.c: 106: }
  8426  0115  0008               	return
  8427  0116                     l4055:	
  8428                           
  8429                           ;app_device_audio_midi.c: 107: else if (msCounter == 0 && !sentNoteOff && !(USBTxHandle=
      +                          =0?0:((volatile BDT_ENTRY*)USBTxHandle)->STAT.UOWN)) {
  8430  0116  0021               	movlb	1	; select bank1
  8431  0117  086A               	movf	_msCounter^(0+128),w
  8432  0118  1D03               	btfss	3,2
  8433  0119  0008               	return
  8434  011A  0022               	movlb	2	; select bank2
  8435  011B  0867               	movf	_sentNoteOff^(0+256),w
  8436  011C  1D03               	btfss	3,2
  8437  011D  0008               	return
  8438  011E  0021               	movlb	1	; select bank1
  8439  011F  0868               	movf	_USBTxHandle^(0+128),w
  8440  0120  1903               	btfsc	3,2
  8441  0121  2930               	goto	l4063
  8442  0122  0868               	movf	_USBTxHandle^(0+128),w
  8443  0123  0086               	movwf	6
  8444  0124  0187               	clrf	7
  8445  0125  0D01               	rlf	1,w
  8446  0126  0D01               	rlf	1,w
  8447  0127  3901               	andlw	1
  8448  0128  0020               	movlb	0	; select bank0
  8449  0129  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8450  012A  01E2               	clrf	??_APP_DeviceAudioMIDITasks+1
  8451  012B  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8452  012C  00E7               	movwf	_APP_DeviceAudioMIDITasks$465
  8453  012D  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  8454  012E  00E8               	movwf	_APP_DeviceAudioMIDITasks$465+1
  8455  012F  2933               	goto	l4065
  8456  0130                     l4063:	
  8457  0130  0020               	movlb	0	; select bank0
  8458  0131  01E7               	clrf	_APP_DeviceAudioMIDITasks$465
  8459  0132  01E8               	clrf	_APP_DeviceAudioMIDITasks$465+1
  8460  0133                     l4065:	
  8461  0133  0867               	movf	_APP_DeviceAudioMIDITasks$465,w
  8462  0134  0468               	iorwf	_APP_DeviceAudioMIDITasks$465+1,w
  8463  0135  1D03               	btfss	3,2
  8464  0136  0008               	return
  8465                           
  8466                           ;app_device_audio_midi.c: 109: msCounter = 100;
  8467  0137  3064               	movlw	100
  8468  0138  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8469  0139  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8470  013A  0021               	movlb	1	; select bank1
  8471  013B  00EA               	movwf	_msCounter^(0+128)
  8472                           
  8473                           ;app_device_audio_midi.c: 110: midiData.Val = 0;
  8474  013C  3000               	movlw	0
  8475  013D  0023               	movlb	3	; select bank3
  8476  013E  00A3               	movwf	35
  8477  013F  3000               	movlw	0
  8478  0140  00A2               	movwf	34
  8479  0141  3000               	movlw	0
  8480  0142  00A1               	movwf	33
  8481  0143  3000               	movlw	0
  8482  0144  00A0               	movwf	32
  8483                           
  8484                           ;app_device_audio_midi.c: 112: midiData.CableNumber = 0;
  8485  0145  300F               	movlw	-241
  8486  0146  05A0               	andwf	32,f
  8487                           
  8488                           ;app_device_audio_midi.c: 113: midiData.CodeIndexNumber = 0x9;
  8489  0147  0820               	movf	32,w
  8490  0148  39F0               	andlw	-16
  8491  0149  3809               	iorlw	9
  8492  014A  00A0               	movwf	32
  8493                           
  8494                           ;app_device_audio_midi.c: 114: midiData.DATA_0 = 0x90;
  8495  014B  3090               	movlw	144
  8496  014C  0020               	movlb	0	; select bank0
  8497  014D  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8498  014E  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8499  014F  0023               	movlb	3	; select bank3
  8500  0150  00A1               	movwf	33
  8501                           
  8502                           ;app_device_audio_midi.c: 115: midiData.DATA_1 = pitch++;
  8503  0151  0021               	movlb	1	; select bank1
  8504  0152  086B               	movf	_pitch^(0+128),w
  8505  0153  0020               	movlb	0	; select bank0
  8506  0154  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8507  0155  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8508  0156  0023               	movlb	3	; select bank3
  8509  0157  00A2               	movwf	34
  8510  0158  3001               	movlw	1
  8511  0159  0020               	movlb	0	; select bank0
  8512  015A  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8513  015B  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8514  015C  0021               	movlb	1	; select bank1
  8515  015D  07EB               	addwf	_pitch^(0+128),f
  8516                           
  8517                           ;app_device_audio_midi.c: 116: midiData.DATA_2 = 0x00;
  8518  015E  0023               	movlb	3	; select bank3
  8519  015F  01A3               	clrf	35
  8520                           
  8521                           ;app_device_audio_midi.c: 118: if(pitch == 0x49)
  8522  0160  3049               	movlw	73
  8523  0161  0021               	movlb	1	; select bank1
  8524  0162  066B               	xorwf	_pitch^(0+128),w
  8525  0163  1D03               	btfss	3,2
  8526  0164  296B               	goto	l4081
  8527                           
  8528                           ;app_device_audio_midi.c: 119: pitch = 0x3C;
  8529  0165  303C               	movlw	60
  8530  0166  0020               	movlb	0	; select bank0
  8531  0167  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8532  0168  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8533  0169  0021               	movlb	1	; select bank1
  8534  016A  00EB               	movwf	_pitch^(0+128)
  8535  016B                     l4081:	
  8536                           
  8537                           ;app_device_audio_midi.c: 120: USBTxHandle = USBTransferOnePacket(1,1,(uint8_t*)&midiDat
      +                          a,4);
  8538  016B  01F1               	clrf	USBTransferOnePacket@dir
  8539  016C  0AF1               	incf	USBTransferOnePacket@dir,f
  8540  016D  30A0               	movlw	160
  8541  016E  00F2               	movwf	USBTransferOnePacket@data
  8542  016F  3001               	movlw	1
  8543  0170  00F3               	movwf	USBTransferOnePacket@data+1
  8544  0171  3004               	movlw	4
  8545  0172  0020               	movlb	0	; select bank0
  8546  0173  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8547  0174  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8548  0175  00F4               	movwf	USBTransferOnePacket@len
  8549  0176  3001               	movlw	1
  8550  0177  318C  245B         	fcall	_USBTransferOnePacket
  8551  0179  0020               	movlb	0	; select bank0
  8552  017A  00E2               	movwf	??_APP_DeviceAudioMIDITasks+1
  8553  017B  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  8554  017C  0021               	movlb	1	; select bank1
  8555  017D  00E8               	movwf	_USBTxHandle^(0+128)
  8556                           
  8557                           ;app_device_audio_midi.c: 121: sentNoteOff = 1;
  8558  017E  0022               	movlb	2	; select bank2
  8559  017F  01E7               	clrf	_sentNoteOff^(0+256)
  8560  0180  0AE7               	incf	_sentNoteOff^(0+256),f
  8561  0181  0008               	return
  8562  0182                     __end_of_APP_DeviceAudioMIDITasks:	
  8563                           
  8564                           	psect	text32
  8565  0552                     __ptext32:	
  8566 ;; *************** function _scan_task *****************
  8567 ;; Defined at:
  8568 ;;		line 212 in file "../src/scan.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;  note            1    wreg     PTR unsigned char 
  8571 ;;		 -> APP_DeviceAudioMIDITasks@scan_pitch(1), 
  8572 ;;  velocity        1   11[BANK0 ] PTR unsigned char 
  8573 ;;		 -> APP_DeviceAudioMIDITasks@velocity(1), 
  8574 ;; Auto vars:     Size  Location     Type
  8575 ;;  note            1   16[BANK0 ] PTR unsigned char 
  8576 ;;		 -> APP_DeviceAudioMIDITasks@scan_pitch(1), 
  8577 ;; Return value:  Size  Location     Type
  8578 ;;                  1    wreg      unsigned char 
  8579 ;; Registers used:
  8580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8581 ;; Tracked objects:
  8582 ;;		On entry : 0/0
  8583 ;;		On exit  : 0/0
  8584 ;;		Unchanged: 0/0
  8585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8586 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8587 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8588 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8589 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8590 ;;Total ram usage:        7 bytes
  8591 ;; Hardware stack levels used:    1
  8592 ;; Hardware stack levels required when called:    4
  8593 ;; This function calls:
  8594 ;;		_get_adc
  8595 ;;		_get_data
  8596 ;;		_is_adc_ready
  8597 ;;		_is_end_of_scan
  8598 ;;		_run_adc
  8599 ;;		_scan_init
  8600 ;;		_set_clock_and_data
  8601 ;;		_set_timer
  8602 ;;		_store_key_level
  8603 ;;		_waiting_for_timer
  8604 ;; This function is called by:
  8605 ;;		_APP_DeviceAudioMIDITasks
  8606 ;; This function uses a non-reentrant model
  8607 ;;
  8608                           
  8609                           
  8610                           ;psect for function _scan_task
  8611  0552                     _scan_task:	
  8612                           
  8613                           ;incstack = 0
  8614                           ; Regs used in _scan_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8615                           ;scan_task@note stored from wreg
  8616  0552  0020               	movlb	0	; select bank0
  8617  0553  00E0               	movwf	scan_task@note
  8618                           
  8619                           ;scan.c: 213: static uint8_t state = S_INIT;
  8620                           ;scan.c: 215: note_event.pitch = note_event.velocity = 0;
  8621  0554  0022               	movlb	2	; select bank2
  8622  0555  01D7               	clrf	(_note_event^(0+256)+1)
  8623  0556  01D6               	clrf	_note_event^(0+256)
  8624                           
  8625                           ;scan.c: 216: *note = *velocity = 0;
  8626  0557  0020               	movlb	0	; select bank0
  8627  0558  085B               	movf	scan_task@velocity,w
  8628  0559  0086               	movwf	6
  8629  055A  0187               	clrf	7
  8630  055B  0181               	clrf	1
  8631  055C  0860               	movf	scan_task@note,w
  8632  055D  0086               	movwf	6
  8633  055E  0187               	clrf	7
  8634  055F  0181               	clrf	1
  8635                           
  8636                           ;scan.c: 218: if (!is_initialized)
  8637  0560  0022               	movlb	2	; select bank2
  8638  0561  0865               	movf	_is_initialized^(0+256),w
  8639  0562  1D03               	btfss	3,2
  8640  0563  2D67               	goto	l275
  8641                           
  8642                           ;scan.c: 219: scan_init();
  8643  0564  318A  225B  3185   	fcall	_scan_init
  8644  0567                     l275:	
  8645                           
  8646                           ;scan.c: 221: if (waiting_for_timer()) return 0;
  8647  0567  3189  2133  3185   	fcall	_waiting_for_timer
  8648  056A  3A00               	xorlw	0
  8649  056B  1903               	skipnz
  8650  056C  2DDA               	goto	l3763
  8651  056D  3000               	movlw	0
  8652  056E  0008               	return
  8653  056F                     l3731:	
  8654                           ;scan.c: 224: case(S_INIT):
  8655                           
  8656                           ;scan.c: 223: switch(state) {
  8657                           
  8658                           
  8659                           ;scan.c: 225: set_clock_and_data(0,1);
  8660  056F  01F1               	clrf	set_clock_and_data@d
  8661  0570  0AF1               	incf	set_clock_and_data@d,f
  8662  0571  3000               	movlw	0
  8663  0572  3189  213E  3185   	fcall	_set_clock_and_data
  8664                           
  8665                           ;scan.c: 226: state = S_GO;
  8666  0575  0022               	movlb	2	; select bank2
  8667  0576  01EA               	clrf	scan_task@state^(0+256)
  8668  0577  0AEA               	incf	scan_task@state^(0+256),f
  8669                           
  8670                           ;scan.c: 227: set_timer();
  8671  0578  3189  2128  3185   	fcall	_set_timer
  8672                           
  8673                           ;scan.c: 228: break;
  8674  057B  2DE5               	goto	l3765
  8675  057C                     l3737:	
  8676                           ;scan.c: 230: case(S_GO):
  8677                           
  8678                           
  8679                           ;scan.c: 231: set_clock_and_data(0,1);
  8680  057C  01F1               	clrf	set_clock_and_data@d
  8681  057D  0AF1               	incf	set_clock_and_data@d,f
  8682  057E  3000               	movlw	0
  8683  057F  3189  213E  3185   	fcall	_set_clock_and_data
  8684                           
  8685                           ;scan.c: 232: state = S_CLOCK_RAISE;
  8686  0582  3002               	movlw	2
  8687  0583  00FB               	movwf	??_scan_task
  8688  0584  087B               	movf	??_scan_task,w
  8689  0585  0022               	movlb	2	; select bank2
  8690  0586  00EA               	movwf	scan_task@state^(0+256)
  8691                           
  8692                           ;scan.c: 233: set_timer();
  8693  0587  3189  2128  3185   	fcall	_set_timer
  8694                           
  8695                           ;scan.c: 234: break;
  8696  058A  2DE5               	goto	l3765
  8697  058B                     l3741:	
  8698                           ;scan.c: 236: case(S_CLOCK_RAISE):
  8699                           
  8700                           
  8701                           ;scan.c: 237: set_clock_and_data(1, get_data());
  8702  058B  3188  20FE  3185   	fcall	_get_data
  8703  058E  00FB               	movwf	??_scan_task
  8704  058F  087B               	movf	??_scan_task,w
  8705  0590  00F1               	movwf	set_clock_and_data@d
  8706  0591  3001               	movlw	1
  8707  0592  3189  213E  3185   	fcall	_set_clock_and_data
  8708                           
  8709                           ;scan.c: 238: state = S_CLOCK_FALL;
  8710  0595  3003               	movlw	3
  8711  0596  00FB               	movwf	??_scan_task
  8712  0597  087B               	movf	??_scan_task,w
  8713  0598  0022               	movlb	2	; select bank2
  8714  0599  00EA               	movwf	scan_task@state^(0+256)
  8715                           
  8716                           ;scan.c: 239: set_timer();
  8717  059A  3189  2128  3185   	fcall	_set_timer
  8718                           
  8719                           ;scan.c: 240: break;
  8720  059D  2DE5               	goto	l3765
  8721  059E                     l3745:	
  8722                           ;scan.c: 242: case(S_CLOCK_FALL):
  8723                           
  8724                           
  8725                           ;scan.c: 243: set_clock_and_data(0,0);
  8726  059E  01F1               	clrf	set_clock_and_data@d
  8727  059F  3000               	movlw	0
  8728  05A0  3189  213E  3185   	fcall	_set_clock_and_data
  8729                           
  8730                           ;scan.c: 244: run_adc();
  8731  05A3  3189  2110  3185   	fcall	_run_adc
  8732                           
  8733                           ;scan.c: 245: state = S_ADC_WAIT;
  8734  05A6  3004               	movlw	4
  8735  05A7  00FB               	movwf	??_scan_task
  8736  05A8  087B               	movf	??_scan_task,w
  8737  05A9  0022               	movlb	2	; select bank2
  8738  05AA  00EA               	movwf	scan_task@state^(0+256)
  8739                           
  8740                           ;scan.c: 246: set_timer();
  8741  05AB  3189  2128  3185   	fcall	_set_timer
  8742                           
  8743                           ;scan.c: 247: break;
  8744  05AE  2DE5               	goto	l3765
  8745  05AF                     l3749:	
  8746                           ;scan.c: 249: case(S_ADC_WAIT):
  8747                           
  8748                           
  8749                           ;scan.c: 250: state = (is_adc_ready()? S_ADC_READ : S_ADC_WAIT);
  8750  05AF  3189  2109  3185   	fcall	_is_adc_ready
  8751  05B2  3A00               	xorlw	0
  8752  05B3  1D03               	skipz
  8753  05B4  2DB7               	goto	l3753
  8754  05B5  3004               	movlw	4
  8755  05B6  2DB8               	goto	L10
  8756  05B7                     l3753:	
  8757  05B7  3005               	movlw	5
  8758  05B8                     L10:	
  8759  05B8  0020               	movlb	0	; select bank0
  8760  05B9  00DC               	movwf	_scan_task$879
  8761  05BA  3000               	movlw	0
  8762  05BB  00DD               	movwf	_scan_task$879+1
  8763  05BC  085C               	movf	_scan_task$879,w
  8764  05BD  2DD5               	goto	L11
  8765  05BE                     l3755:	
  8766                           ;scan.c: 253: case(S_ADC_READ):
  8767                           
  8768                           ;scan.c: 251: break;
  8769                           
  8770                           
  8771                           ;scan.c: 254: state = (store_key_level(get_adc(), is_end_of_scan())? S_GO : S_CLOCK_RAIS
      +                          E);
  8772  05BE  3189  2165  3185   	fcall	_is_end_of_scan
  8773  05C1  00FB               	movwf	??_scan_task
  8774  05C2  087B               	movf	??_scan_task,w
  8775  05C3  00F7               	movwf	store_key_level@end_of_scan
  8776  05C4  3188  20FB  3185   	fcall	_get_adc
  8777  05C7  318B  2319  3185   	fcall	_store_key_level
  8778  05CA  3A00               	xorlw	0
  8779  05CB  1D03               	skipz
  8780  05CC  2DCF               	goto	l3759
  8781  05CD  3002               	movlw	2
  8782  05CE  2DD0               	goto	L12
  8783  05CF                     l3759:	
  8784  05CF  3001               	movlw	1
  8785  05D0                     L12:	
  8786  05D0  0020               	movlb	0	; select bank0
  8787  05D1  00DE               	movwf	_scan_task$883
  8788  05D2  3000               	movlw	0
  8789  05D3  00DF               	movwf	_scan_task$883+1
  8790  05D4  085E               	movf	_scan_task$883,w
  8791  05D5                     L11:	
  8792  05D5  00FB               	movwf	??_scan_task
  8793  05D6  087B               	movf	??_scan_task,w
  8794  05D7  0022               	movlb	2	; select bank2
  8795  05D8  00EA               	movwf	scan_task@state^(0+256)
  8796                           
  8797                           ;scan.c: 256: }
  8798                           
  8799                           ;scan.c: 255: break;
  8800  05D9  2DE5               	goto	l3765
  8801  05DA                     l3763:	
  8802  05DA  0022               	movlb	2	; select bank2
  8803  05DB  086A               	movf	scan_task@state^(0+256),w
  8804                           
  8805                           ; Switch size 1, requested type "space"
  8806                           ; Number of cases is 6, Range of values is 0 to 5
  8807                           ; switch strategies available:
  8808                           ; Name         Instructions Cycles
  8809                           ; direct_byte           18     6 (fixed)
  8810                           ; simple_byte           19    10 (average)
  8811                           ; jumptable            260     6 (fixed)
  8812                           ;	Chosen strategy is direct_byte
  8813  05DC  0084               	movwf	4
  8814  05DD  3006               	movlw	6
  8815  05DE  0204               	subwf	4,w
  8816  05DF  1803               	skipnc
  8817  05E0  2DE5               	goto	l3765
  8818  05E1  3188               	movlp	high S4843
  8819  05E2  3504               	lslf	4,w
  8820  05E3  3E1A               	addlw	low S4843
  8821  05E4  0082               	movwf	2
  8822  05E5                     l3765:	
  8823                           
  8824                           ;scan.c: 258: *note = note_event.pitch;
  8825  05E5  0022               	movlb	2	; select bank2
  8826  05E6  0856               	movf	_note_event^(0+256),w
  8827  05E7  00FB               	movwf	??_scan_task
  8828  05E8  0020               	movlb	0	; select bank0
  8829  05E9  0860               	movf	scan_task@note,w
  8830  05EA  0086               	movwf	6
  8831  05EB  0187               	clrf	7
  8832  05EC  087B               	movf	??_scan_task,w
  8833  05ED  0081               	movwf	1
  8834                           
  8835                           ;scan.c: 259: *velocity = note_event.velocity;
  8836  05EE  0022               	movlb	2	; select bank2
  8837  05EF  0857               	movf	(_note_event^(0+256)+1),w
  8838  05F0  00FB               	movwf	??_scan_task
  8839  05F1  0020               	movlb	0	; select bank0
  8840  05F2  085B               	movf	scan_task@velocity,w
  8841  05F3  0086               	movwf	6
  8842  05F4  0187               	clrf	7
  8843  05F5  087B               	movf	??_scan_task,w
  8844  05F6  0081               	movwf	1
  8845                           
  8846                           ;scan.c: 260: return !! note_event.pitch;
  8847  05F7  0022               	movlb	2	; select bank2
  8848  05F8  0856               	movf	_note_event^(0+256),w
  8849  05F9  1903               	btfsc	3,2
  8850  05FA  2DFD               	goto	u3210
  8851  05FB  3001               	movlw	1
  8852  05FC  0008               	return
  8853  05FD                     u3210:	
  8854  05FD  3000               	movlw	0
  8855  05FE  0008               	return
  8856  05FF                     __end_of_scan_task:	
  8857                           
  8858                           	psect	swtext3
  8859  081A                     __pswtext3:	
  8860  081A                     S4843:	
  8861  081A  3185  2D6F         	ljmp	l3731
  8862  081C  3185  2D7C         	ljmp	l3737
  8863  081E  3185  2D8B         	ljmp	l3741
  8864  0820  3185  2D9E         	ljmp	l3745
  8865  0822  3185  2DAF         	ljmp	l3749
  8866  0824  3185  2DBE         	ljmp	l3755
  8867                           
  8868                           	psect	text33
  8869  0933                     __ptext33:	
  8870 ;; *************** function _waiting_for_timer *****************
  8871 ;; Defined at:
  8872 ;;		line 64 in file "../src/scan.c"
  8873 ;; Parameters:    Size  Location     Type
  8874 ;;		None
  8875 ;; Auto vars:     Size  Location     Type
  8876 ;;		None
  8877 ;; Return value:  Size  Location     Type
  8878 ;;                  1    wreg      unsigned char 
  8879 ;; Registers used:
  8880 ;;		wreg, status,2, status,0
  8881 ;; Tracked objects:
  8882 ;;		On entry : 0/0
  8883 ;;		On exit  : 0/0
  8884 ;;		Unchanged: 0/0
  8885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8887 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8889 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8890 ;;Total ram usage:        1 bytes
  8891 ;; Hardware stack levels used:    1
  8892 ;; Hardware stack levels required when called:    1
  8893 ;; This function calls:
  8894 ;;		Nothing
  8895 ;; This function is called by:
  8896 ;;		_scan_task
  8897 ;; This function uses a non-reentrant model
  8898 ;;
  8899                           
  8900                           
  8901                           ;psect for function _waiting_for_timer
  8902  0933                     _waiting_for_timer:	
  8903                           
  8904                           ;scan.c: 65: return (wait_timer = wait_timer && !INTCONbits.TMR0IF);
  8905                           
  8906                           ;incstack = 0
  8907                           ; Regs used in _waiting_for_timer: [wreg+status,2+status,0]
  8908  0933  01F1               	clrf	_waiting_for_timer$823
  8909  0934  0022               	movlb	2	; select bank2
  8910  0935  0868               	movf	_wait_timer^(0+256),w
  8911  0936  1D03               	btfss	3,2
  8912  0937  190B               	btfsc	11,2	;volatile
  8913  0938  293B               	goto	l3499
  8914  0939  01F1               	clrf	_waiting_for_timer$823
  8915  093A  0AF1               	incf	_waiting_for_timer$823,f
  8916  093B                     l3499:	
  8917  093B  0871               	movf	_waiting_for_timer$823,w
  8918  093C  00E8               	movwf	_wait_timer^(0+256)
  8919  093D  0008               	return
  8920  093E                     __end_of_waiting_for_timer:	
  8921                           
  8922                           	psect	text34
  8923  0B19                     __ptext34:	
  8924 ;; *************** function _store_key_level *****************
  8925 ;; Defined at:
  8926 ;;		line 194 in file "../src/scan.c"
  8927 ;; Parameters:    Size  Location     Type
  8928 ;;  level           1    wreg     unsigned char 
  8929 ;;  end_of_scan     1    7[COMMON] unsigned char 
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;  level           1   10[COMMON] unsigned char 
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  1    wreg      unsigned char 
  8934 ;; Registers used:
  8935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/0
  8938 ;;		On exit  : 0/0
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8941 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8942 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8943 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8944 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8945 ;;Total ram usage:        4 bytes
  8946 ;; Hardware stack levels used:    1
  8947 ;; Hardware stack levels required when called:    3
  8948 ;; This function calls:
  8949 ;;		_process_level
  8950 ;; This function is called by:
  8951 ;;		_scan_task
  8952 ;; This function uses a non-reentrant model
  8953 ;;
  8954                           
  8955                           
  8956                           ;psect for function _store_key_level
  8957  0B19                     _store_key_level:	
  8958                           
  8959                           ;incstack = 0
  8960                           ; Regs used in _store_key_level: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8961                           ;store_key_level@level stored from wreg
  8962  0B19  00FA               	movwf	store_key_level@level
  8963                           
  8964                           ;scan.c: 195: static uint8_t idx_key = 0;
  8965                           ;scan.c: 196: process_level(idx_key, adc_levels[idx_key], level);
  8966  0B1A  0021               	movlb	1	; select bank1
  8967  0B1B  086D               	movf	store_key_level@idx_key^(0+128),w
  8968  0B1C  3E20               	addlw	(low (_adc_levels| (0+512)))& (0+255)
  8969  0B1D  0086               	movwf	6
  8970  0B1E  3002               	movlw	2	; select bank4/5
  8971  0B1F  0087               	movwf	7
  8972  0B20  0801               	movf	1,w
  8973  0B21  00F8               	movwf	??_store_key_level
  8974  0B22  0878               	movf	??_store_key_level,w
  8975  0B23  00F2               	movwf	process_level@old_level
  8976  0B24  087A               	movf	store_key_level@level,w
  8977  0B25  00F9               	movwf	??_store_key_level+1
  8978  0B26  0879               	movf	??_store_key_level+1,w
  8979  0B27  00F3               	movwf	process_level@new_level
  8980  0B28  086D               	movf	store_key_level@idx_key^(0+128),w
  8981  0B29  3184  2473  318B   	fcall	_process_level
  8982                           
  8983                           ;scan.c: 197: adc_levels[idx_key] = level;
  8984  0B2C  087A               	movf	store_key_level@level,w
  8985  0B2D  00F8               	movwf	??_store_key_level
  8986  0B2E  0021               	movlb	1	; select bank1
  8987  0B2F  086D               	movf	store_key_level@idx_key^(0+128),w
  8988  0B30  3E20               	addlw	(low (_adc_levels| (0+512)))& (0+255)
  8989  0B31  0086               	movwf	6
  8990  0B32  3002               	movlw	2	; select bank4/5
  8991  0B33  0087               	movwf	7
  8992  0B34  0878               	movf	??_store_key_level,w
  8993  0B35  0081               	movwf	1
  8994                           
  8995                           ;scan.c: 198: idx_key ++;
  8996  0B36  3001               	movlw	1
  8997  0B37  00F8               	movwf	??_store_key_level
  8998  0B38  0878               	movf	??_store_key_level,w
  8999  0B39  07ED               	addwf	store_key_level@idx_key^(0+128),f
  9000                           
  9001                           ;scan.c: 199: if (idx_key >= N_KEYS || end_of_scan) idx_key = 0;
  9002  0B3A  3027               	movlw	39
  9003  0B3B  026D               	subwf	store_key_level@idx_key^(0+128),w
  9004  0B3C  1803               	skipnc
  9005  0B3D  2B41               	goto	l3541
  9006  0B3E  0877               	movf	store_key_level@end_of_scan,w
  9007  0B3F  1903               	btfsc	3,2
  9008  0B40  2B42               	goto	l3543
  9009  0B41                     l3541:	
  9010  0B41  01ED               	clrf	store_key_level@idx_key^(0+128)
  9011  0B42                     l3543:	
  9012                           
  9013                           ;scan.c: 200: return idx_key == 0;
  9014  0B42  086D               	movf	store_key_level@idx_key^(0+128),w
  9015  0B43  1D03               	btfss	3,2
  9016  0B44  2B47               	goto	u2990
  9017  0B45  3001               	movlw	1
  9018  0B46  0008               	return
  9019  0B47                     u2990:	
  9020  0B47  3000               	movlw	0
  9021  0B48  0008               	return
  9022  0B49                     __end_of_store_key_level:	
  9023                           
  9024                           	psect	text35
  9025  0473                     __ptext35:	
  9026 ;; *************** function _process_level *****************
  9027 ;; Defined at:
  9028 ;;		line 145 in file "../src/scan.c"
  9029 ;; Parameters:    Size  Location     Type
  9030 ;;  idx_key         1    wreg     unsigned char 
  9031 ;;  old_level       1    2[COMMON] const unsigned char 
  9032 ;;  new_level       1    3[COMMON] const unsigned char 
  9033 ;; Auto vars:     Size  Location     Type
  9034 ;;  idx_key         1   10[BANK0 ] unsigned char 
  9035 ;;  filtered_sta    1    9[BANK0 ] unsigned char 
  9036 ;;  on_flag         1    8[BANK0 ] unsigned char 
  9037 ;;  off_flag        1    6[BANK0 ] unsigned char 
  9038 ;;  current_stat    2    2[BANK0 ] int 
  9039 ;;  old_state       2    0[BANK0 ] int 
  9040 ;; Return value:  Size  Location     Type
  9041 ;;		None               void
  9042 ;; Registers used:
  9043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9044 ;; Tracked objects:
  9045 ;;		On entry : 0/0
  9046 ;;		On exit  : 0/0
  9047 ;;		Unchanged: 0/0
  9048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9049 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9050 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9051 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9052 ;;      Totals:         5      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9053 ;;Total ram usage:       16 bytes
  9054 ;; Hardware stack levels used:    1
  9055 ;; Hardware stack levels required when called:    2
  9056 ;; This function calls:
  9057 ;;		_LED_Off
  9058 ;;		_LED_On
  9059 ;; This function is called by:
  9060 ;;		_store_key_level
  9061 ;; This function uses a non-reentrant model
  9062 ;;
  9063                           
  9064                           
  9065                           ;psect for function _process_level
  9066  0473                     _process_level:	
  9067                           
  9068                           ;incstack = 0
  9069                           ; Regs used in _process_level: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9070                           ;process_level@idx_key stored from wreg
  9071  0473  0020               	movlb	0	; select bank0
  9072  0474  00DA               	movwf	process_level@idx_key
  9073                           
  9074                           ;scan.c: 146: static const uint8_t L = 0x0A;
  9075                           ;scan.c: 147: static const uint8_t idx_midi_map[N_KEYS] = {
  9076                           ;scan.c: 148: 63, 24, 24, 24, 24, 71, 24, 24, 24, 24, 24,
  9077                           ;scan.c: 149: 24, 24, 68, 69, 70, 49, 50, 24, 24, 48, 65,
  9078                           ;scan.c: 150: 66, 67, 24, 24, 54, 56, 52, 59, 61, 64, 51,
  9079                           ;scan.c: 151: 53, 55, 57, 58, 60, 62
  9080                           ;scan.c: 152: };
  9081                           ;scan.c: 153: static bool key_states[N_KEYS] = {0, };
  9082                           ;scan.c: 154: static const uint8_t midi_shift = 0;
  9083                           ;scan.c: 155: static const uint8_t
  9084                           ;scan.c: 156: key_off_threshold = 5,
  9085                           ;scan.c: 157: key_on_threshold = 7;
  9086  0475  30B7               	movlw	low (process_level@L| (0+32768))
  9087  0476  0084               	movwf	4
  9088  0477  3082               	movlw	high (process_level@L| (0+32768))
  9089  0478  0085               	movwf	5
  9090  0479  0800               	movf	0,w	;code access
  9091  047A  00F4               	movwf	??_process_level
  9092  047B  0872               	movf	process_level@old_level,w
  9093  047C  0274               	subwf	??_process_level,w
  9094  047D  1803               	btfsc	3,0
  9095  047E  2C81               	goto	u2570
  9096  047F  3001               	movlw	1
  9097  0480  2C82               	goto	u2580
  9098  0481                     u2570:	
  9099  0481  3000               	movlw	0
  9100  0482                     u2580:	
  9101  0482  00F5               	movwf	??_process_level+1
  9102  0483  01F6               	clrf	??_process_level+2
  9103  0484  0875               	movf	??_process_level+1,w
  9104  0485  00D0               	movwf	process_level@old_state
  9105  0486  0876               	movf	??_process_level+2,w
  9106  0487  00D1               	movwf	process_level@old_state+1
  9107                           
  9108                           ;scan.c: 163: int current_state = (new_level > L);
  9109  0488  30B7               	movlw	low (process_level@L| (0+32768))
  9110  0489  0084               	movwf	4
  9111  048A  3082               	movlw	high (process_level@L| (0+32768))
  9112  048B  0085               	movwf	5
  9113  048C  0800               	movf	0,w	;code access
  9114  048D  00F4               	movwf	??_process_level
  9115  048E  0873               	movf	process_level@new_level,w
  9116  048F  0274               	subwf	??_process_level,w
  9117  0490  1803               	btfsc	3,0
  9118  0491  2C94               	goto	u2590
  9119  0492  3001               	movlw	1
  9120  0493  2C95               	goto	u2600
  9121  0494                     u2590:	
  9122  0494  3000               	movlw	0
  9123  0495                     u2600:	
  9124  0495  00F5               	movwf	??_process_level+1
  9125  0496  01F6               	clrf	??_process_level+2
  9126  0497  0875               	movf	??_process_level+1,w
  9127  0498  00D2               	movwf	process_level@current_state
  9128  0499  0876               	movf	??_process_level+2,w
  9129  049A  00D3               	movwf	process_level@current_state+1
  9130                           
  9131                           ;scan.c: 165: note_event.pitch = 0;
  9132  049B  0022               	movlb	2	; select bank2
  9133  049C  01D6               	clrf	_note_event^(0+256)
  9134                           
  9135                           ;scan.c: 166: note_event.velocity = 0;
  9136  049D  01D7               	clrf	(_note_event^(0+256)+1)
  9137                           
  9138                           ;scan.c: 168: if (current_state) {
  9139  049E  0020               	movlb	0	; select bank0
  9140  049F  0852               	movf	process_level@current_state,w
  9141  04A0  0453               	iorwf	process_level@current_state+1,w
  9142  04A1  1903               	btfsc	3,2
  9143  04A2  2CB0               	goto	l3281
  9144                           
  9145                           ;scan.c: 169: key_off_counter[idx_key] = 0;
  9146  04A3  085A               	movf	process_level@idx_key,w
  9147  04A4  3EA4               	addlw	(low (process_level@key_off_counter| (0+256)))& (0+255)
  9148  04A5  0086               	movwf	6
  9149  04A6  3001               	movlw	1	; select bank3/4
  9150  04A7  0087               	movwf	7
  9151  04A8  0181               	clrf	1
  9152                           
  9153                           ;scan.c: 170: key_on_counter [idx_key] ++;
  9154  04A9  3001               	movlw	1
  9155  04AA  00F4               	movwf	??_process_level
  9156  04AB  085A               	movf	process_level@idx_key,w
  9157  04AC  3E47               	addlw	(low (process_level@key_on_counter| (0+512)))& (0+255)
  9158  04AD  0086               	movwf	6
  9159  04AE  3002               	movlw	2	; select bank4/5
  9160  04AF  2CBC               	goto	L13
  9161  04B0                     l3281:	
  9162                           ;scan.c: 171: }
  9163                           
  9164                           
  9165                           ;scan.c: 172: else {
  9166                           ;scan.c: 173: key_on_counter[idx_key] = 0;
  9167  04B0  085A               	movf	process_level@idx_key,w
  9168  04B1  3E47               	addlw	(low (process_level@key_on_counter| (0+512)))& (0+255)
  9169  04B2  0086               	movwf	6
  9170  04B3  3002               	movlw	2	; select bank4/5
  9171  04B4  0087               	movwf	7
  9172  04B5  0181               	clrf	1
  9173                           
  9174                           ;scan.c: 174: key_off_counter [idx_key] ++;
  9175  04B6  3001               	movlw	1
  9176  04B7  00F4               	movwf	??_process_level
  9177  04B8  085A               	movf	process_level@idx_key,w
  9178  04B9  3EA4               	addlw	(low (process_level@key_off_counter| (0+256)))& (0+255)
  9179  04BA  0086               	movwf	6
  9180  04BB  3001               	movlw	1	; select bank3/4
  9181  04BC                     L13:	
  9182  04BC  0087               	movwf	7
  9183  04BD  0874               	movf	??_process_level,w
  9184  04BE  0781               	addwf	1,f
  9185                           
  9186                           ;scan.c: 175: }
  9187                           ;scan.c: 177: {
  9188                           ;scan.c: 178: bool
  9189                           ;scan.c: 179: on_flag = key_on_counter [idx_key] >= key_on_threshold,
  9190  04BF  085A               	movf	process_level@idx_key,w
  9191  04C0  3E47               	addlw	(low (process_level@key_on_counter| (0+512)))& (0+255)
  9192  04C1  0086               	movwf	6
  9193  04C2  3002               	movlw	2	; select bank4/5
  9194  04C3  0087               	movwf	7
  9195  04C4  30B9               	movlw	low (process_level@key_on_threshold| (0+32768))
  9196  04C5  0084               	movwf	4
  9197  04C6  3082               	movlw	high (process_level@key_on_threshold| (0+32768))
  9198  04C7  0085               	movwf	5
  9199  04C8  0800               	movf	0,w	;code access
  9200  04C9  0201               	subwf	1,w
  9201  04CA  1C03               	btfss	3,0
  9202  04CB  2CCE               	goto	u2620
  9203  04CC  3001               	movlw	1
  9204  04CD  2CCF               	goto	u2630
  9205  04CE                     u2620:	
  9206  04CE  3000               	movlw	0
  9207  04CF                     u2630:	
  9208  04CF  00F4               	movwf	??_process_level
  9209  04D0  0874               	movf	??_process_level,w
  9210  04D1  00D8               	movwf	process_level@on_flag
  9211                           
  9212                           ;scan.c: 180: off_flag = key_off_counter[idx_key] >= key_off_threshold,
  9213  04D2  085A               	movf	process_level@idx_key,w
  9214  04D3  3EA4               	addlw	(low (process_level@key_off_counter| (0+256)))& (0+255)
  9215  04D4  0086               	movwf	6
  9216  04D5  3001               	movlw	1	; select bank3/4
  9217  04D6  0087               	movwf	7
  9218  04D7  30B8               	movlw	low (process_level@key_off_threshold| (0+32768))
  9219  04D8  0084               	movwf	4
  9220  04D9  3082               	movlw	high (process_level@key_off_threshold| (0+32768))
  9221  04DA  0085               	movwf	5
  9222  04DB  0800               	movf	0,w	;code access
  9223  04DC  0201               	subwf	1,w
  9224  04DD  1C03               	btfss	3,0
  9225  04DE  2CE1               	goto	u2640
  9226  04DF  3001               	movlw	1
  9227  04E0  2CE2               	goto	u2650
  9228  04E1                     u2640:	
  9229  04E1  3000               	movlw	0
  9230  04E2                     u2650:	
  9231  04E2  00F4               	movwf	??_process_level
  9232  04E3  0874               	movf	??_process_level,w
  9233  04E4  00D6               	movwf	process_level@off_flag
  9234                           
  9235                           ;scan.c: 181: filtered_state = on_flag || !on_flag && !off_flag && key_states[idx_key];
  9236  04E5  01D7               	clrf	_process_level$860
  9237  04E6  0AD7               	incf	_process_level$860,f
  9238  04E7  0858               	movf	process_level@on_flag,w
  9239  04E8  1D03               	btfss	3,2
  9240  04E9  2CF8               	goto	l3299
  9241  04EA  0858               	movf	process_level@on_flag,w
  9242  04EB  1D03               	btfss	3,2
  9243  04EC  2CF7               	goto	l3297
  9244  04ED  0856               	movf	process_level@off_flag,w
  9245  04EE  1D03               	btfss	3,2
  9246  04EF  2CF7               	goto	l3297
  9247  04F0  085A               	movf	process_level@idx_key,w
  9248  04F1  3E20               	addlw	(low (process_level@key_states| (0+256)))& (0+255)
  9249  04F2  0086               	movwf	6
  9250  04F3  3001               	movlw	1	; select bank2/3
  9251  04F4  0087               	movwf	7
  9252  04F5  0801               	movf	1,w
  9253  04F6  1903               	btfsc	3,2
  9254  04F7                     l3297:	
  9255  04F7  01D7               	clrf	_process_level$860
  9256  04F8                     l3299:	
  9257  04F8  0857               	movf	_process_level$860,w
  9258  04F9  00F4               	movwf	??_process_level
  9259  04FA  0874               	movf	??_process_level,w
  9260  04FB  00D9               	movwf	process_level@filtered_state
  9261                           
  9262                           ;scan.c: 183: if (!key_states[idx_key] != !filtered_state) {
  9263  04FC  0859               	movf	process_level@filtered_state,w
  9264  04FD  1D03               	btfss	3,2
  9265  04FE  2D01               	goto	u2700
  9266  04FF  3001               	movlw	1
  9267  0500  2D02               	goto	u2702
  9268  0501                     u2700:	
  9269  0501  3000               	movlw	0
  9270  0502                     u2702:	
  9271  0502  00F4               	movwf	??_process_level
  9272  0503  085A               	movf	process_level@idx_key,w
  9273  0504  3E20               	addlw	(low (process_level@key_states| (0+256)))& (0+255)
  9274  0505  0086               	movwf	6
  9275  0506  3001               	movlw	1	; select bank2/3
  9276  0507  0087               	movwf	7
  9277  0508  0801               	movf	1,w
  9278  0509  1D03               	btfss	3,2
  9279  050A  2D0D               	goto	u2710
  9280  050B  3001               	movlw	1
  9281  050C  2D0E               	goto	u2712
  9282  050D                     u2710:	
  9283  050D  3000               	movlw	0
  9284  050E                     u2712:	
  9285  050E  0674               	xorwf	??_process_level,w
  9286  050F  1903               	skipnz
  9287  0510  2D47               	goto	l3319
  9288                           
  9289                           ;scan.c: 184: note_event.pitch = midi_shift + idx_midi_map[idx_key];
  9290  0511  30BA               	movlw	low (process_level@midi_shift| (0+32768))
  9291  0512  0084               	movwf	4
  9292  0513  3082               	movlw	high (process_level@midi_shift| (0+32768))
  9293  0514  0085               	movwf	5
  9294  0515  0800               	movf	0,w	;code access
  9295  0516  00F4               	movwf	??_process_level
  9296  0517  085A               	movf	process_level@idx_key,w
  9297  0518  3E88               	addlw	low (process_level@idx_midi_map| (0+32768))
  9298  0519  0084               	movwf	4
  9299  051A  3082               	movlw	high (process_level@idx_midi_map| (0+32768))
  9300  051B  1803               	skipnc
  9301  051C  3E01               	addlw	1
  9302  051D  0085               	movwf	5
  9303  051E  0800               	movf	0,w	;code access
  9304  051F  0774               	addwf	??_process_level,w
  9305  0520  00F5               	movwf	??_process_level+1
  9306  0521  0875               	movf	??_process_level+1,w
  9307  0522  0022               	movlb	2	; select bank2
  9308  0523  00D6               	movwf	_note_event^(0+256)
  9309                           
  9310                           ;scan.c: 185: note_event.velocity = (filtered_state? (new_level * 2 + 5): 0);
  9311  0524  0020               	movlb	0	; select bank0
  9312  0525  0859               	movf	process_level@filtered_state,w
  9313  0526  1D03               	btfss	3,2
  9314  0527  2D2B               	goto	l3309
  9315  0528  01D4               	clrf	_process_level$861
  9316  0529  01D5               	clrf	_process_level$861+1
  9317  052A  2D36               	goto	l3311
  9318  052B                     l3309:	
  9319  052B  0873               	movf	process_level@new_level,w
  9320  052C  00F4               	movwf	??_process_level
  9321  052D  01F5               	clrf	??_process_level+1
  9322  052E  35F4               	lslf	??_process_level,f
  9323  052F  0DF5               	rlf	??_process_level+1,f
  9324  0530  0874               	movf	??_process_level,w
  9325  0531  3E05               	addlw	5
  9326  0532  00D4               	movwf	_process_level$861
  9327  0533  3000               	movlw	0
  9328  0534  3D75               	addwfc	??_process_level+1,w
  9329  0535  00D5               	movwf	_process_level$861+1
  9330  0536                     l3311:	
  9331  0536  0854               	movf	_process_level$861,w
  9332  0537  00F4               	movwf	??_process_level
  9333  0538  0874               	movf	??_process_level,w
  9334  0539  0022               	movlb	2	; select bank2
  9335  053A  00D7               	movwf	(_note_event^(0+256)+1)
  9336                           
  9337                           ;scan.c: 186: if (filtered_state) LED_On(LED_D1);
  9338  053B  0020               	movlb	0	; select bank0
  9339  053C  0859               	movf	process_level@filtered_state,w
  9340  053D  1903               	btfsc	3,2
  9341  053E  2D44               	goto	l3317
  9342  053F  3001               	movlw	1
  9343  0540  3189  21D8  3184   	fcall	_LED_On
  9344  0543  2D47               	goto	l3319
  9345  0544                     l3317:	
  9346                           
  9347                           ;scan.c: 187: else LED_Off(LED_D1);
  9348  0544  3001               	movlw	1
  9349  0545  3189  21BF         	fcall	_LED_Off
  9350  0547                     l3319:	
  9351                           
  9352                           ;scan.c: 188: }
  9353                           ;scan.c: 189: key_states[idx_key] = filtered_state;
  9354  0547  0020               	movlb	0	; select bank0
  9355  0548  0859               	movf	process_level@filtered_state,w
  9356  0549  00F4               	movwf	??_process_level
  9357  054A  085A               	movf	process_level@idx_key,w
  9358  054B  3E20               	addlw	(low (process_level@key_states| (0+256)))& (0+255)
  9359  054C  0086               	movwf	6
  9360  054D  3001               	movlw	1	; select bank2/3
  9361  054E  0087               	movwf	7
  9362  054F  0874               	movf	??_process_level,w
  9363  0550  0081               	movwf	1
  9364  0551  0008               	return
  9365  0552                     __end_of_process_level:	
  9366                           
  9367                           	psect	text36
  9368  09D8                     __ptext36:	
  9369 ;; *************** function _LED_On *****************
  9370 ;; Defined at:
  9371 ;;		line 59 in file "../bsp/pic16f1459/leds.c"
  9372 ;; Parameters:    Size  Location     Type
  9373 ;;  led             1    wreg     enum E2
  9374 ;; Auto vars:     Size  Location     Type
  9375 ;;  led             1    1[COMMON] enum E2
  9376 ;; Return value:  Size  Location     Type
  9377 ;;		None               void
  9378 ;; Registers used:
  9379 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9380 ;; Tracked objects:
  9381 ;;		On entry : 0/0
  9382 ;;		On exit  : 0/0
  9383 ;;		Unchanged: 0/0
  9384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9388 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9389 ;;Total ram usage:        1 bytes
  9390 ;; Hardware stack levels used:    1
  9391 ;; Hardware stack levels required when called:    1
  9392 ;; This function calls:
  9393 ;;		Nothing
  9394 ;; This function is called by:
  9395 ;;		_APP_LEDUpdateUSBStatus
  9396 ;;		_process_level
  9397 ;; This function uses a non-reentrant model
  9398 ;;
  9399                           
  9400                           
  9401                           ;psect for function _LED_On
  9402  09D8                     _LED_On:	
  9403                           
  9404                           ;incstack = 0
  9405                           ; Regs used in _LED_On: [wreg-fsr0h+status,2+status,0]
  9406                           ;LED_On@led stored from wreg
  9407  09D8  00F1               	movwf	LED_On@led
  9408                           
  9409                           ;leds.c: 61: switch(led)
  9410  09D9  29E6               	goto	l2851
  9411  09DA                     l364:	
  9412                           ;leds.c: 62: {
  9413                           ;leds.c: 63: case LED_D1:
  9414                           
  9415                           
  9416                           ;leds.c: 64: LATCbits.LATC2 = 1;
  9417  09DA  0022               	movlb	2	; select bank2
  9418  09DB  150E               	bsf	14,2	;volatile
  9419                           
  9420                           ;leds.c: 65: break;
  9421  09DC  0008               	return
  9422  09DD                     l366:	
  9423                           ;leds.c: 67: case LED_D2:
  9424                           
  9425                           
  9426                           ;leds.c: 68: LATCbits.LATC1 = 1;
  9427  09DD  0022               	movlb	2	; select bank2
  9428  09DE  148E               	bsf	14,1	;volatile
  9429                           
  9430                           ;leds.c: 69: break;
  9431  09DF  0008               	return
  9432  09E0                     l367:	
  9433                           ;leds.c: 71: case LED_D3:
  9434                           
  9435                           
  9436                           ;leds.c: 72: LATCbits.LATC2 = 1;
  9437  09E0  0022               	movlb	2	; select bank2
  9438  09E1  150E               	bsf	14,2	;volatile
  9439                           
  9440                           ;leds.c: 73: break;
  9441  09E2  0008               	return
  9442  09E3                     l368:	
  9443                           ;leds.c: 75: case LED_D4:
  9444                           
  9445                           
  9446                           ;leds.c: 76: LATCbits.LATC3 = 1;
  9447  09E3  0022               	movlb	2	; select bank2
  9448  09E4  158E               	bsf	14,3	;volatile
  9449                           
  9450                           ;leds.c: 81: }
  9451                           
  9452                           ;leds.c: 80: break;
  9453                           
  9454                           ;leds.c: 79: case LED_NONE:
  9455                           
  9456                           ;leds.c: 77: break;
  9457  09E5  0008               	return
  9458  09E6                     l2851:	
  9459  09E6  0871               	movf	LED_On@led,w
  9460                           
  9461                           ; Switch size 1, requested type "space"
  9462                           ; Number of cases is 5, Range of values is 0 to 4
  9463                           ; switch strategies available:
  9464                           ; Name         Instructions Cycles
  9465                           ; direct_byte           16     6 (fixed)
  9466                           ; simple_byte           16     9 (average)
  9467                           ; jumptable            260     6 (fixed)
  9468                           ;	Chosen strategy is direct_byte
  9469  09E7  0084               	movwf	4
  9470  09E8  3005               	movlw	5
  9471  09E9  0204               	subwf	4,w
  9472  09EA  1803               	skipnc
  9473  09EB  0008               	return
  9474  09EC  3188               	movlp	high S4845
  9475  09ED  3504               	lslf	4,w
  9476  09EE  3E30               	addlw	low S4845
  9477  09EF  0082               	movwf	2
  9478  09F0                     l370:	
  9479  09F0  0008               	return
  9480  09F1                     __end_of_LED_On:	
  9481                           
  9482                           	psect	swtext4
  9483  0830                     __pswtext4:	
  9484  0830                     S4845:	
  9485  0830  3189  29F0         	ljmp	l370
  9486  0832  3189  29DA         	ljmp	l364
  9487  0834  3189  29DD         	ljmp	l366
  9488  0836  3189  29E0         	ljmp	l367
  9489  0838  3189  29E3         	ljmp	l368
  9490                           
  9491                           	psect	text37
  9492  09BF                     __ptext37:	
  9493 ;; *************** function _LED_Off *****************
  9494 ;; Defined at:
  9495 ;;		line 100 in file "../bsp/pic16f1459/leds.c"
  9496 ;; Parameters:    Size  Location     Type
  9497 ;;  led             1    wreg     enum E2
  9498 ;; Auto vars:     Size  Location     Type
  9499 ;;  led             1    1[COMMON] enum E2
  9500 ;; Return value:  Size  Location     Type
  9501 ;;		None               void
  9502 ;; Registers used:
  9503 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9504 ;; Tracked objects:
  9505 ;;		On entry : 0/0
  9506 ;;		On exit  : 0/0
  9507 ;;		Unchanged: 0/0
  9508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9510 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9512 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9513 ;;Total ram usage:        1 bytes
  9514 ;; Hardware stack levels used:    1
  9515 ;; Hardware stack levels required when called:    1
  9516 ;; This function calls:
  9517 ;;		Nothing
  9518 ;; This function is called by:
  9519 ;;		_APP_LEDUpdateUSBStatus
  9520 ;;		_process_level
  9521 ;; This function uses a non-reentrant model
  9522 ;;
  9523                           
  9524                           
  9525                           ;psect for function _LED_Off
  9526  09BF                     _LED_Off:	
  9527                           
  9528                           ;incstack = 0
  9529                           ; Regs used in _LED_Off: [wreg-fsr0h+status,2+status,0]
  9530                           ;LED_Off@led stored from wreg
  9531  09BF  00F1               	movwf	LED_Off@led
  9532                           
  9533                           ;leds.c: 102: switch(led)
  9534  09C0  29CD               	goto	l2841
  9535  09C1                     l374:	
  9536                           ;leds.c: 103: {
  9537                           ;leds.c: 104: case LED_D1:
  9538                           
  9539                           
  9540                           ;leds.c: 105: LATCbits.LATC2 = 0;
  9541  09C1  0022               	movlb	2	; select bank2
  9542  09C2  110E               	bcf	14,2	;volatile
  9543                           
  9544                           ;leds.c: 106: break;
  9545  09C3  0008               	return
  9546  09C4                     l376:	
  9547                           ;leds.c: 108: case LED_D2:
  9548                           
  9549                           
  9550                           ;leds.c: 109: LATCbits.LATC1 = 0;
  9551  09C4  0022               	movlb	2	; select bank2
  9552  09C5  108E               	bcf	14,1	;volatile
  9553                           
  9554                           ;leds.c: 110: break;
  9555  09C6  0008               	return
  9556  09C7                     l377:	
  9557                           ;leds.c: 112: case LED_D3:
  9558                           
  9559                           
  9560                           ;leds.c: 113: LATCbits.LATC2 = 0;
  9561  09C7  0022               	movlb	2	; select bank2
  9562  09C8  110E               	bcf	14,2	;volatile
  9563                           
  9564                           ;leds.c: 114: break;
  9565  09C9  0008               	return
  9566  09CA                     l378:	
  9567                           ;leds.c: 116: case LED_D4:
  9568                           
  9569                           
  9570                           ;leds.c: 117: LATCbits.LATC3 = 0;
  9571  09CA  0022               	movlb	2	; select bank2
  9572  09CB  118E               	bcf	14,3	;volatile
  9573                           
  9574                           ;leds.c: 122: }
  9575                           
  9576                           ;leds.c: 121: break;
  9577                           
  9578                           ;leds.c: 120: case LED_NONE:
  9579                           
  9580                           ;leds.c: 118: break;
  9581  09CC  0008               	return
  9582  09CD                     l2841:	
  9583  09CD  0871               	movf	LED_Off@led,w
  9584                           
  9585                           ; Switch size 1, requested type "space"
  9586                           ; Number of cases is 5, Range of values is 0 to 4
  9587                           ; switch strategies available:
  9588                           ; Name         Instructions Cycles
  9589                           ; direct_byte           16     6 (fixed)
  9590                           ; simple_byte           16     9 (average)
  9591                           ; jumptable            260     6 (fixed)
  9592                           ;	Chosen strategy is direct_byte
  9593  09CE  0084               	movwf	4
  9594  09CF  3005               	movlw	5
  9595  09D0  0204               	subwf	4,w
  9596  09D1  1803               	skipnc
  9597  09D2  0008               	return
  9598  09D3  3188               	movlp	high S4847
  9599  09D4  3504               	lslf	4,w
  9600  09D5  3E3A               	addlw	low S4847
  9601  09D6  0082               	movwf	2
  9602  09D7                     l380:	
  9603  09D7  0008               	return
  9604  09D8                     __end_of_LED_Off:	
  9605                           
  9606                           	psect	swtext5
  9607  083A                     __pswtext5:	
  9608  083A                     S4847:	
  9609  083A  3189  29D7         	ljmp	l380
  9610  083C  3189  29C1         	ljmp	l374
  9611  083E  3189  29C4         	ljmp	l376
  9612  0840  3189  29C7         	ljmp	l377
  9613  0842  3189  29CA         	ljmp	l378
  9614                           
  9615                           	psect	text38
  9616  0928                     __ptext38:	
  9617 ;; *************** function _set_timer *****************
  9618 ;; Defined at:
  9619 ;;		line 55 in file "../src/scan.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;		None
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;		None
  9624 ;; Return value:  Size  Location     Type
  9625 ;;		None               void
  9626 ;; Registers used:
  9627 ;;		status,2
  9628 ;; Tracked objects:
  9629 ;;		On entry : 0/0
  9630 ;;		On exit  : 0/0
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9637 ;;Total ram usage:        0 bytes
  9638 ;; Hardware stack levels used:    1
  9639 ;; Hardware stack levels required when called:    1
  9640 ;; This function calls:
  9641 ;;		Nothing
  9642 ;; This function is called by:
  9643 ;;		_scan_task
  9644 ;; This function uses a non-reentrant model
  9645 ;;
  9646                           
  9647                           
  9648                           ;psect for function _set_timer
  9649  0928                     _set_timer:	
  9650                           
  9651                           ;scan.c: 56: wait_timer = 1;
  9652                           
  9653                           ;incstack = 0
  9654                           ; Regs used in _set_timer: [status,2]
  9655  0928  0022               	movlb	2	; select bank2
  9656  0929  01E8               	clrf	_wait_timer^(0+256)
  9657  092A  0AE8               	incf	_wait_timer^(0+256),f
  9658                           
  9659                           ;scan.c: 57: OPTION_REGbits.TMR0CS = 0;
  9660  092B  0021               	movlb	1	; select bank1
  9661  092C  1295               	bcf	21,5	;volatile
  9662                           
  9663                           ;scan.c: 58: OPTION_REGbits.PSA = 1;
  9664  092D  1595               	bsf	21,3	;volatile
  9665                           
  9666                           ;scan.c: 59: INTCONbits.TMR0IE = 0;
  9667  092E  128B               	bcf	11,5	;volatile
  9668                           
  9669                           ;scan.c: 60: INTCONbits.TMR0IF = 0;
  9670  092F  110B               	bcf	11,2	;volatile
  9671                           
  9672                           ;scan.c: 61: TMR0 = 0;
  9673  0930  0020               	movlb	0	; select bank0
  9674  0931  0195               	clrf	21	;volatile
  9675  0932  0008               	return
  9676  0933                     __end_of_set_timer:	
  9677                           
  9678                           	psect	text39
  9679  093E                     __ptext39:	
  9680 ;; *************** function _set_clock_and_data *****************
  9681 ;; Defined at:
  9682 ;;		line 68 in file "../src/scan.c"
  9683 ;; Parameters:    Size  Location     Type
  9684 ;;  c               1    wreg     const unsigned char 
  9685 ;;  d               1    1[COMMON] const unsigned char 
  9686 ;; Auto vars:     Size  Location     Type
  9687 ;;  c               1    2[COMMON] const unsigned char 
  9688 ;; Return value:  Size  Location     Type
  9689 ;;		None               void
  9690 ;; Registers used:
  9691 ;;		wreg, status,2, status,0
  9692 ;; Tracked objects:
  9693 ;;		On entry : 0/0
  9694 ;;		On exit  : 0/0
  9695 ;;		Unchanged: 0/0
  9696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9697 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9698 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9700 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9701 ;;Total ram usage:        2 bytes
  9702 ;; Hardware stack levels used:    1
  9703 ;; Hardware stack levels required when called:    1
  9704 ;; This function calls:
  9705 ;;		Nothing
  9706 ;; This function is called by:
  9707 ;;		_scan_task
  9708 ;; This function uses a non-reentrant model
  9709 ;;
  9710                           
  9711                           
  9712                           ;psect for function _set_clock_and_data
  9713  093E                     _set_clock_and_data:	
  9714                           
  9715                           ;incstack = 0
  9716                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  9717                           ;set_clock_and_data@c stored from wreg
  9718  093E  00F2               	movwf	set_clock_and_data@c
  9719                           
  9720                           ;scan.c: 69: LATCbits.LATC4 = !!c;
  9721  093F  0872               	movf	set_clock_and_data@c,w
  9722  0940  1903               	btfsc	3,2
  9723  0941  2945               	goto	u2900
  9724  0942  0022               	movlb	2	; select bank2
  9725  0943  160E               	bsf	14,4	;volatile
  9726  0944  2947               	goto	u2914
  9727  0945                     u2900:	
  9728  0945  0022               	movlb	2	; select bank2
  9729  0946  120E               	bcf	14,4	;volatile
  9730  0947                     u2914:	
  9731                           
  9732                           ;scan.c: 70: LATCbits.LATC5 = !!d;
  9733  0947  0871               	movf	set_clock_and_data@d,w
  9734  0948  1903               	btfsc	3,2
  9735  0949  294D               	goto	u2920
  9736  094A  0022               	movlb	2	; select bank2
  9737  094B  168E               	bsf	14,5	;volatile
  9738  094C  0008               	return
  9739  094D                     u2920:	
  9740  094D  0022               	movlb	2	; select bank2
  9741  094E  128E               	bcf	14,5	;volatile
  9742  094F  0008               	return
  9743  0950                     __end_of_set_clock_and_data:	
  9744                           
  9745                           	psect	text40
  9746  0A5B                     __ptext40:	
  9747 ;; *************** function _scan_init *****************
  9748 ;; Defined at:
  9749 ;;		line 32 in file "../src/scan.c"
  9750 ;; Parameters:    Size  Location     Type
  9751 ;;		None
  9752 ;; Auto vars:     Size  Location     Type
  9753 ;;		None
  9754 ;; Return value:  Size  Location     Type
  9755 ;;		None               void
  9756 ;; Registers used:
  9757 ;;		wreg, status,2, status,0
  9758 ;; Tracked objects:
  9759 ;;		On entry : 0/0
  9760 ;;		On exit  : 0/0
  9761 ;;		Unchanged: 0/0
  9762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9767 ;;Total ram usage:        0 bytes
  9768 ;; Hardware stack levels used:    1
  9769 ;; Hardware stack levels required when called:    1
  9770 ;; This function calls:
  9771 ;;		Nothing
  9772 ;; This function is called by:
  9773 ;;		_scan_task
  9774 ;; This function uses a non-reentrant model
  9775 ;;
  9776                           
  9777                           
  9778                           ;psect for function _scan_init
  9779  0A5B                     _scan_init:	
  9780                           
  9781                           ;scan.c: 33: is_initialized = 1;
  9782                           
  9783                           ;incstack = 0
  9784                           ; Regs used in _scan_init: [wreg+status,2+status,0]
  9785  0A5B  0022               	movlb	2	; select bank2
  9786  0A5C  01E5               	clrf	_is_initialized^(0+256)
  9787  0A5D  0AE5               	incf	_is_initialized^(0+256),f
  9788                           
  9789                           ;scan.c: 34: TRISCbits.TRISC3 = PIN_INPUT;
  9790  0A5E  0021               	movlb	1	; select bank1
  9791  0A5F  158E               	bsf	14,3	;volatile
  9792                           
  9793                           ;scan.c: 35: TRISCbits.TRISC4 = PIN_OUTPUT;
  9794  0A60  120E               	bcf	14,4	;volatile
  9795                           
  9796                           ;scan.c: 36: TRISCbits.TRISC5 = PIN_OUTPUT;
  9797  0A61  128E               	bcf	14,5	;volatile
  9798                           
  9799                           ;scan.c: 38: ANSELA = 0;
  9800  0A62  0023               	movlb	3	; select bank3
  9801  0A63  018C               	clrf	12	;volatile
  9802                           
  9803                           ;scan.c: 40: ANSELCbits.ANSC3 = PIN_ANALOG;
  9804  0A64  158E               	bsf	14,3	;volatile
  9805                           
  9806                           ;scan.c: 41: LATCbits.LATC4 = 0;
  9807  0A65  0022               	movlb	2	; select bank2
  9808  0A66  120E               	bcf	14,4	;volatile
  9809                           
  9810                           ;scan.c: 42: LATCbits.LATC5 = 0;
  9811  0A67  128E               	bcf	14,5	;volatile
  9812                           
  9813                           ;scan.c: 44: ANSELAbits.ANSA4 = PIN_DIGITAL;
  9814  0A68  0023               	movlb	3	; select bank3
  9815  0A69  120C               	bcf	12,4	;volatile
  9816                           
  9817                           ;scan.c: 45: TRISAbits.TRISA4 = PIN_INPUT;
  9818  0A6A  0021               	movlb	1	; select bank1
  9819  0A6B  160C               	bsf	12,4	;volatile
  9820                           
  9821                           ;scan.c: 47: PIE1bits.ADIE = 0;
  9822  0A6C  1311               	bcf	17,6	;volatile
  9823                           
  9824                           ;scan.c: 48: ADCON0bits.ADON = 1;
  9825  0A6D  141D               	bsf	29,0	;volatile
  9826                           
  9827                           ;scan.c: 49: ADCON1bits.ADFM = 0;
  9828  0A6E  139E               	bcf	30,7	;volatile
  9829                           
  9830                           ;scan.c: 50: ADCON1bits.ADCS = 0b110;
  9831  0A6F  081E               	movf	30,w	;volatile
  9832  0A70  398F               	andlw	-113
  9833  0A71  3860               	iorlw	96
  9834  0A72  009E               	movwf	30	;volatile
  9835                           
  9836                           ;scan.c: 51: ADCON1bits.ADPREF = 0;
  9837  0A73  30FC               	movlw	-4
  9838  0A74  059E               	andwf	30,f	;volatile
  9839                           
  9840                           ;scan.c: 52: ADCON2bits.TRIGSEL = 0;
  9841  0A75  308F               	movlw	-113
  9842  0A76  059F               	andwf	31,f	;volatile
  9843  0A77  0008               	return
  9844  0A78                     __end_of_scan_init:	
  9845                           
  9846                           	psect	text41
  9847  0910                     __ptext41:	
  9848 ;; *************** function _run_adc *****************
  9849 ;; Defined at:
  9850 ;;		line 85 in file "../src/scan.c"
  9851 ;; Parameters:    Size  Location     Type
  9852 ;;		None
  9853 ;; Auto vars:     Size  Location     Type
  9854 ;;		None
  9855 ;; Return value:  Size  Location     Type
  9856 ;;		None               void
  9857 ;; Registers used:
  9858 ;;		wreg, status,2, status,0
  9859 ;; Tracked objects:
  9860 ;;		On entry : 0/0
  9861 ;;		On exit  : 0/0
  9862 ;;		Unchanged: 0/0
  9863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9868 ;;Total ram usage:        0 bytes
  9869 ;; Hardware stack levels used:    1
  9870 ;; Hardware stack levels required when called:    1
  9871 ;; This function calls:
  9872 ;;		Nothing
  9873 ;; This function is called by:
  9874 ;;		_scan_task
  9875 ;; This function uses a non-reentrant model
  9876 ;;
  9877                           
  9878                           
  9879                           ;psect for function _run_adc
  9880  0910                     _run_adc:	
  9881                           
  9882                           ;scan.c: 86: ADCON0bits.CHS = 7;
  9883                           
  9884                           ;incstack = 0
  9885                           ; Regs used in _run_adc: [wreg+status,2+status,0]
  9886  0910  0021               	movlb	1	; select bank1
  9887  0911  081D               	movf	29,w	;volatile
  9888  0912  3983               	andlw	-125
  9889  0913  381C               	iorlw	28
  9890  0914  009D               	movwf	29	;volatile
  9891                           
  9892                           ;scan.c: 87: ADCON0bits.GO = 1;
  9893  0915  149D               	bsf	29,1	;volatile
  9894  0916  0008               	return
  9895  0917                     __end_of_run_adc:	
  9896                           
  9897                           	psect	text42
  9898  0965                     __ptext42:	
  9899 ;; *************** function _is_end_of_scan *****************
  9900 ;; Defined at:
  9901 ;;		line 77 in file "../src/scan.c"
  9902 ;; Parameters:    Size  Location     Type
  9903 ;;		None
  9904 ;; Auto vars:     Size  Location     Type
  9905 ;;  res             1    3[COMMON] unsigned char 
  9906 ;; Return value:  Size  Location     Type
  9907 ;;                  1    wreg      unsigned char 
  9908 ;; Registers used:
  9909 ;;		wreg, status,2, status,0
  9910 ;; Tracked objects:
  9911 ;;		On entry : 0/0
  9912 ;;		On exit  : 0/0
  9913 ;;		Unchanged: 0/0
  9914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9916 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9917 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9918 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9919 ;;Total ram usage:        3 bytes
  9920 ;; Hardware stack levels used:    1
  9921 ;; Hardware stack levels required when called:    1
  9922 ;; This function calls:
  9923 ;;		Nothing
  9924 ;; This function is called by:
  9925 ;;		_scan_task
  9926 ;; This function uses a non-reentrant model
  9927 ;;
  9928                           
  9929                           
  9930                           ;psect for function _is_end_of_scan
  9931  0965                     _is_end_of_scan:	
  9932                           
  9933                           ;scan.c: 79: static uint8_t scan_counter = 0;
  9934                           ;scan.c: 80: bool res = (++scan_counter) >= N_KEYS;
  9935                           
  9936                           ;incstack = 0
  9937                           ; Regs used in _is_end_of_scan: [wreg+status,2+status,0]
  9938  0965  3001               	movlw	1
  9939  0966  00F1               	movwf	??_is_end_of_scan
  9940  0967  0871               	movf	??_is_end_of_scan,w
  9941  0968  0022               	movlb	2	; select bank2
  9942  0969  07E9               	addwf	is_end_of_scan@scan_counter^(0+256),f
  9943  096A  3027               	movlw	39
  9944  096B  0269               	subwf	is_end_of_scan@scan_counter^(0+256),w
  9945  096C  1C03               	btfss	3,0
  9946  096D  2970               	goto	u2940
  9947  096E  3001               	movlw	1
  9948  096F  2971               	goto	u2950
  9949  0970                     u2940:	
  9950  0970  3000               	movlw	0
  9951  0971                     u2950:	
  9952  0971  00F2               	movwf	??_is_end_of_scan+1
  9953  0972  0872               	movf	??_is_end_of_scan+1,w
  9954  0973  00F3               	movwf	is_end_of_scan@res
  9955                           
  9956                           ;scan.c: 81: if (scan_counter >= N_KEYS) scan_counter = 0;
  9957  0974  3027               	movlw	39
  9958  0975  0269               	subwf	is_end_of_scan@scan_counter^(0+256),w
  9959  0976  1803               	btfsc	3,0
  9960  0977  01E9               	clrf	is_end_of_scan@scan_counter^(0+256)
  9961                           
  9962                           ;scan.c: 82: return res;
  9963  0978  0873               	movf	is_end_of_scan@res,w
  9964  0979  0008               	return
  9965  097A                     __end_of_is_end_of_scan:	
  9966                           
  9967                           	psect	text43
  9968  0909                     __ptext43:	
  9969 ;; *************** function _is_adc_ready *****************
  9970 ;; Defined at:
  9971 ;;		line 90 in file "../src/scan.c"
  9972 ;; Parameters:    Size  Location     Type
  9973 ;;		None
  9974 ;; Auto vars:     Size  Location     Type
  9975 ;;		None
  9976 ;; Return value:  Size  Location     Type
  9977 ;;                  1    wreg      unsigned char 
  9978 ;; Registers used:
  9979 ;;		wreg, status,0
  9980 ;; Tracked objects:
  9981 ;;		On entry : 0/0
  9982 ;;		On exit  : 0/0
  9983 ;;		Unchanged: 0/0
  9984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9989 ;;Total ram usage:        0 bytes
  9990 ;; Hardware stack levels used:    1
  9991 ;; Hardware stack levels required when called:    1
  9992 ;; This function calls:
  9993 ;;		Nothing
  9994 ;; This function is called by:
  9995 ;;		_scan_task
  9996 ;; This function uses a non-reentrant model
  9997 ;;
  9998                           
  9999                           
 10000                           ;psect for function _is_adc_ready
 10001  0909                     _is_adc_ready:	
 10002                           
 10003                           ;scan.c: 91: return !ADCON0bits.GO_nDONE;
 10004                           
 10005                           ;incstack = 0
 10006                           ; Regs used in _is_adc_ready: [wreg+status,0]
 10007  0909  1003               	clrc
 10008  090A  0021               	movlb	1	; select bank1
 10009  090B  1C9D               	btfss	29,1	;volatile
 10010  090C  1403               	setc
 10011  090D  3000               	movlw	0
 10012  090E  3D09               	addwfc	9,w
 10013  090F  0008               	return
 10014  0910                     __end_of_is_adc_ready:	
 10015                           
 10016                           	psect	text44
 10017  08FE                     __ptext44:	
 10018 ;; *************** function _get_data *****************
 10019 ;; Defined at:
 10020 ;;		line 73 in file "../src/scan.c"
 10021 ;; Parameters:    Size  Location     Type
 10022 ;;		None
 10023 ;; Auto vars:     Size  Location     Type
 10024 ;;		None
 10025 ;; Return value:  Size  Location     Type
 10026 ;;                  1    wreg      unsigned char 
 10027 ;; Registers used:
 10028 ;;		wreg, status,2, status,0
 10029 ;; Tracked objects:
 10030 ;;		On entry : 0/0
 10031 ;;		On exit  : 0/0
 10032 ;;		Unchanged: 0/0
 10033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10038 ;;Total ram usage:        0 bytes
 10039 ;; Hardware stack levels used:    1
 10040 ;; Hardware stack levels required when called:    1
 10041 ;; This function calls:
 10042 ;;		Nothing
 10043 ;; This function is called by:
 10044 ;;		_scan_task
 10045 ;; This function uses a non-reentrant model
 10046 ;;
 10047                           
 10048                           
 10049                           ;psect for function _get_data
 10050  08FE                     _get_data:	
 10051                           
 10052                           ;scan.c: 74: return LATCbits.LATC5;
 10053                           
 10054                           ;incstack = 0
 10055                           ; Regs used in _get_data: [wreg+status,2+status,0]
 10056  08FE  0022               	movlb	2	; select bank2
 10057  08FF  0E0E               	swapf	14,w	;volatile
 10058  0900  0C89               	rrf	9,f
 10059  0901  3901               	andlw	1
 10060  0902  0008               	return
 10061  0903                     __end_of_get_data:	
 10062                           
 10063                           	psect	text45
 10064  08FB                     __ptext45:	
 10065 ;; *************** function _get_adc *****************
 10066 ;; Defined at:
 10067 ;;		line 94 in file "../src/scan.c"
 10068 ;; Parameters:    Size  Location     Type
 10069 ;;		None
 10070 ;; Auto vars:     Size  Location     Type
 10071 ;;		None
 10072 ;; Return value:  Size  Location     Type
 10073 ;;                  1    wreg      unsigned char 
 10074 ;; Registers used:
 10075 ;;		wreg
 10076 ;; Tracked objects:
 10077 ;;		On entry : 0/0
 10078 ;;		On exit  : 0/0
 10079 ;;		Unchanged: 0/0
 10080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10085 ;;Total ram usage:        0 bytes
 10086 ;; Hardware stack levels used:    1
 10087 ;; Hardware stack levels required when called:    1
 10088 ;; This function calls:
 10089 ;;		Nothing
 10090 ;; This function is called by:
 10091 ;;		_scan_task
 10092 ;; This function uses a non-reentrant model
 10093 ;;
 10094                           
 10095                           
 10096                           ;psect for function _get_adc
 10097  08FB                     _get_adc:	
 10098                           
 10099                           ;scan.c: 95: return ADRESH;
 10100                           
 10101                           ;incstack = 0
 10102                           ; Regs used in _get_adc: [wreg]
 10103  08FB  0021               	movlb	1	; select bank1
 10104  08FC  081C               	movf	28,w	;volatile
 10105  08FD  0008               	return
 10106  08FE                     __end_of_get_adc:	
 10107                           
 10108                           	psect	text46
 10109  0C5B                     __ptext46:	
 10110 ;; *************** function _USBTransferOnePacket *****************
 10111 ;; Defined at:
 10112 ;;		line 1014 in file "../framework/usb/usb_device.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;  ep              1    wreg     unsigned char 
 10115 ;;  dir             1    1[COMMON] unsigned char 
 10116 ;;  data            2    2[COMMON] PTR unsigned char 
 10117 ;;		 -> midiData(4), ReceivedDataBuffer(64), 
 10118 ;;  len             1    4[COMMON] unsigned char 
 10119 ;; Auto vars:     Size  Location     Type
 10120 ;;  ep              1    7[COMMON] unsigned char 
 10121 ;;  handle          1    8[COMMON] PTR volatile struct __BD
 10122 ;;		 -> BDT(32), NULL(0), 
 10123 ;; Return value:  Size  Location     Type
 10124 ;;                  1    wreg      PTR void 
 10125 ;; Registers used:
 10126 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10127 ;; Tracked objects:
 10128 ;;		On entry : 0/0
 10129 ;;		On exit  : 0/0
 10130 ;;		Unchanged: 0/0
 10131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10132 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10133 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10134 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10135 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10136 ;;Total ram usage:        8 bytes
 10137 ;; Hardware stack levels used:    1
 10138 ;; Hardware stack levels required when called:    1
 10139 ;; This function calls:
 10140 ;;		Nothing
 10141 ;; This function is called by:
 10142 ;;		_APP_DeviceAudioMIDIInitialize
 10143 ;;		_APP_DeviceAudioMIDITasks
 10144 ;; This function uses a non-reentrant model
 10145 ;;
 10146                           
 10147                           
 10148                           ;psect for function _USBTransferOnePacket
 10149  0C5B                     _USBTransferOnePacket:	
 10150                           
 10151                           ;incstack = 0
 10152                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
 10153                           ;USBTransferOnePacket@ep stored from wreg
 10154  0C5B  00F7               	movwf	USBTransferOnePacket@ep
 10155                           
 10156                           ;usb_device.c: 1016: volatile BDT_ENTRY* handle;
 10157                           ;usb_device.c: 1019: if(dir != 0)
 10158  0C5C  0871               	movf	USBTransferOnePacket@dir,w
 10159  0C5D  1903               	btfsc	3,2
 10160  0C5E  2C64               	goto	l2873
 10161                           
 10162                           ;usb_device.c: 1020: {
 10163                           ;usb_device.c: 1022: handle = pBDTEntryIn[ep];
 10164  0C5F  0877               	movf	USBTransferOnePacket@ep,w
 10165  0C60  3E6B               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 10166  0C61  0086               	movwf	6
 10167  0C62  0187               	clrf	7
 10168  0C63  2C69               	goto	L14
 10169  0C64                     l2873:	
 10170                           ;usb_device.c: 1023: }
 10171                           
 10172                           
 10173                           ;usb_device.c: 1024: else
 10174                           ;usb_device.c: 1025: {
 10175                           ;usb_device.c: 1027: handle = pBDTEntryOut[ep];
 10176  0C64  0877               	movf	USBTransferOnePacket@ep,w
 10177  0C65  3E58               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 10178  0C66  0086               	movwf	6
 10179  0C67  3001               	movlw	1	; select bank2/3
 10180  0C68  0087               	movwf	7
 10181  0C69                     L14:	
 10182  0C69  0801               	movf	1,w
 10183  0C6A  00F5               	movwf	??_USBTransferOnePacket
 10184  0C6B  0875               	movf	??_USBTransferOnePacket,w
 10185  0C6C  00F8               	movwf	USBTransferOnePacket@handle
 10186                           
 10187                           ;usb_device.c: 1028: }
 10188                           ;usb_device.c: 1032: if(handle == 0)
 10189  0C6D  0878               	movf	USBTransferOnePacket@handle,w
 10190  0C6E  1D03               	btfss	3,2
 10191  0C6F  2C72               	goto	l2881
 10192                           
 10193                           ;usb_device.c: 1033: {
 10194                           ;usb_device.c: 1034: return 0;
 10195  0C70  3000               	movlw	0
 10196  0C71  0008               	return
 10197  0C72                     l2881:	
 10198                           
 10199                           ;usb_device.c: 1035: }
 10200                           ;usb_device.c: 1048: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
 10201  0C72  30FF               	movlw	255
 10202  0C73  0572               	andwf	USBTransferOnePacket@data,w
 10203  0C74  00F5               	movwf	??_USBTransferOnePacket
 10204  0C75  307F               	movlw	127
 10205  0C76  0573               	andwf	USBTransferOnePacket@data+1,w
 10206  0C77  00F6               	movwf	??_USBTransferOnePacket+1
 10207  0C78  0878               	movf	USBTransferOnePacket@handle,w
 10208  0C79  3E02               	addlw	2
 10209  0C7A  0086               	movwf	6
 10210  0C7B  0187               	clrf	7
 10211  0C7C  0875               	movf	??_USBTransferOnePacket,w
 10212  0C7D  3FC0               	movwi [0]fsr1
 10213  0C7E  0876               	movf	??_USBTransferOnePacket+1,w
 10214  0C7F  3FC1               	movwi [1]fsr1
 10215                           
 10216                           ;usb_device.c: 1049: handle->CNT = len;
 10217  0C80  0874               	movf	USBTransferOnePacket@len,w
 10218  0C81  00F5               	movwf	??_USBTransferOnePacket
 10219  0C82  0A78               	incf	USBTransferOnePacket@handle,w
 10220  0C83  0086               	movwf	6
 10221  0C84  0187               	clrf	7
 10222  0C85  0875               	movf	??_USBTransferOnePacket,w
 10223  0C86  0081               	movwf	1
 10224                           
 10225                           ;usb_device.c: 1050: handle->STAT.Val &= 0x40;
 10226  0C87  3040               	movlw	64
 10227  0C88  00F5               	movwf	??_USBTransferOnePacket
 10228  0C89  0878               	movf	USBTransferOnePacket@handle,w
 10229  0C8A  0086               	movwf	6
 10230  0C8B  0187               	clrf	7
 10231  0C8C  0875               	movf	??_USBTransferOnePacket,w
 10232  0C8D  0581               	andwf	1,f
 10233                           
 10234                           ;usb_device.c: 1051: handle->STAT.Val |= (0x08 & 0x08);
 10235  0C8E  0878               	movf	USBTransferOnePacket@handle,w
 10236  0C8F  0086               	movwf	6
 10237  0C90  0187               	clrf	7
 10238  0C91  1581               	bsf	1,3
 10239                           
 10240                           ;usb_device.c: 1052: handle->STAT.Val |= 0x80;
 10241  0C92  0878               	movf	USBTransferOnePacket@handle,w
 10242  0C93  0086               	movwf	6
 10243  0C94  0187               	clrf	7
 10244  0C95  1781               	bsf	1,7
 10245                           
 10246                           ;usb_device.c: 1055: if(dir != 0)
 10247  0C96  0871               	movf	USBTransferOnePacket@dir,w
 10248  0C97  1903               	btfsc	3,2
 10249  0C98  2CA0               	goto	l2891
 10250                           
 10251                           ;usb_device.c: 1056: {
 10252                           ;usb_device.c: 1058: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 10253  0C99  3004               	movlw	4
 10254  0C9A  00F5               	movwf	??_USBTransferOnePacket
 10255  0C9B  0877               	movf	USBTransferOnePacket@ep,w
 10256  0C9C  3E6B               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 10257  0C9D  0086               	movwf	6
 10258  0C9E  0187               	clrf	7
 10259  0C9F  2CA7               	goto	L15
 10260  0CA0                     l2891:	
 10261                           ;usb_device.c: 1059: }
 10262                           
 10263                           
 10264                           ;usb_device.c: 1060: else
 10265                           ;usb_device.c: 1061: {
 10266                           ;usb_device.c: 1063: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 10267  0CA0  3004               	movlw	4
 10268  0CA1  00F5               	movwf	??_USBTransferOnePacket
 10269  0CA2  0877               	movf	USBTransferOnePacket@ep,w
 10270  0CA3  3E58               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 10271  0CA4  0086               	movwf	6
 10272  0CA5  3001               	movlw	1	; select bank2/3
 10273  0CA6  0087               	movwf	7
 10274  0CA7                     L15:	
 10275  0CA7  0875               	movf	??_USBTransferOnePacket,w
 10276  0CA8  0681               	xorwf	1,f
 10277                           
 10278                           ;usb_device.c: 1064: }
 10279                           ;usb_device.c: 1065: return (void*)handle;
 10280  0CA9  0878               	movf	USBTransferOnePacket@handle,w
 10281  0CAA  0008               	return
 10282  0CAB                     __end_of_USBTransferOnePacket:	
 10283                           
 10284                           	psect	text47
 10285  0950                     __ptext47:	
 10286 ;; *************** function _BUTTON_IsPressed *****************
 10287 ;; Defined at:
 10288 ;;		line 55 in file "../bsp/pic16f1459/buttons.c"
 10289 ;; Parameters:    Size  Location     Type
 10290 ;;  button          1    wreg     enum E2613
 10291 ;; Auto vars:     Size  Location     Type
 10292 ;;  button          1    1[COMMON] enum E2613
 10293 ;; Return value:  Size  Location     Type
 10294 ;;                  1    wreg      unsigned char 
 10295 ;; Registers used:
 10296 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10297 ;; Tracked objects:
 10298 ;;		On entry : 0/0
 10299 ;;		On exit  : 0/0
 10300 ;;		Unchanged: 0/0
 10301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10303 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10305 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10306 ;;Total ram usage:        1 bytes
 10307 ;; Hardware stack levels used:    1
 10308 ;; Hardware stack levels required when called:    1
 10309 ;; This function calls:
 10310 ;;		Nothing
 10311 ;; This function is called by:
 10312 ;;		_APP_DeviceAudioMIDITasks
 10313 ;; This function uses a non-reentrant model
 10314 ;;
 10315                           
 10316                           
 10317                           ;psect for function _BUTTON_IsPressed
 10318  0950                     _BUTTON_IsPressed:	
 10319                           
 10320                           ;incstack = 0
 10321                           ; Regs used in _BUTTON_IsPressed: [wreg-fsr0h+status,2+status,0]
 10322                           ;BUTTON_IsPressed@button stored from wreg
 10323  0950  00F1               	movwf	BUTTON_IsPressed@button
 10324                           
 10325                           ;buttons.c: 57: switch(button)
 10326  0951  295B               	goto	l3787
 10327  0952                     l3777:	
 10328                           ;buttons.c: 58: {
 10329                           ;buttons.c: 59: case BUTTON_S1:
 10330                           
 10331                           
 10332                           ;buttons.c: 60: return ( (PORTAbits.RA3 == 0) ? 1 : 0);
 10333  0952  1003               	clrc
 10334  0953  0020               	movlb	0	; select bank0
 10335  0954  1D8C               	btfss	12,3	;volatile
 10336  0955  1403               	setc
 10337  0956  3000               	movlw	0
 10338  0957  3D09               	addwfc	9,w
 10339  0958  0008               	return
 10340  0959                     l3781:	
 10341                           ;buttons.c: 62: case BUTTON_NONE:
 10342                           
 10343                           
 10344                           ;buttons.c: 63: return 0;
 10345  0959  3000               	movlw	0
 10346  095A  0008               	return
 10347  095B                     l3787:	
 10348                           ;buttons.c: 64: }
 10349                           
 10350  095B  0871               	movf	BUTTON_IsPressed@button,w
 10351                           
 10352                           ; Switch size 1, requested type "space"
 10353                           ; Number of cases is 2, Range of values is 0 to 1
 10354                           ; switch strategies available:
 10355                           ; Name         Instructions Cycles
 10356                           ; simple_byte            7     4 (average)
 10357                           ; direct_byte           10     6 (fixed)
 10358                           ; jumptable            260     6 (fixed)
 10359                           ;	Chosen strategy is simple_byte
 10360  095C  3A00               	xorlw	0	; case 0
 10361  095D  1903               	skipnz
 10362  095E  2959               	goto	l3781
 10363  095F  3A01               	xorlw	1	; case 1
 10364  0960  1903               	skipnz
 10365  0961  2952               	goto	l3777
 10366  0962  2963               	goto	l3789
 10367  0963                     l3789:	
 10368                           
 10369                           ;buttons.c: 66: return 0;
 10370  0963  3000               	movlw	0
 10371  0964  0008               	return
 10372  0965                     __end_of_BUTTON_IsPressed:	
 10373                           
 10374                           	psect	intentry
 10375  0004                     __pintentry:	
 10376 ;; *************** function _SYS_InterruptHigh *****************
 10377 ;; Defined at:
 10378 ;;		line 112 in file "../src/pic16f1459/system.c"
 10379 ;; Parameters:    Size  Location     Type
 10380 ;;		None
 10381 ;; Auto vars:     Size  Location     Type
 10382 ;;		None
 10383 ;; Return value:  Size  Location     Type
 10384 ;;		None               void
 10385 ;; Registers used:
 10386 ;;		None
 10387 ;; Tracked objects:
 10388 ;;		On entry : 0/0
 10389 ;;		On exit  : 0/0
 10390 ;;		Unchanged: 0/0
 10391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10394 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10395 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10396 ;;Total ram usage:        1 bytes
 10397 ;; Hardware stack levels used:    1
 10398 ;; This function calls:
 10399 ;;		Nothing
 10400 ;; This function is called by:
 10401 ;;		Interrupt level 1
 10402 ;; This function uses a non-reentrant model
 10403 ;;
 10404                           
 10405  0004                     _SYS_InterruptHigh:	
 10406                           
 10407                           ;incstack = 0
 10408                           ; Regs used in _SYS_InterruptHigh: []
 10409  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10410  0005  3180               	pagesel	$
 10411  0006  0020               	movlb	0	; select bank0
 10412  0007  087F               	movf	127,w
 10413  0008  00F0               	movwf	??_SYS_InterruptHigh
 10414  0009  0870               	movf	??_SYS_InterruptHigh,w
 10415  000A  00FF               	movwf	127
 10416  000B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10417  000C  0009               	retfie
 10418  000D                     __end_of_SYS_InterruptHigh:	
 10419  007E                     btemp	set	126	;btemp
 10420  007E                     int$flags	set	126
 10421  007E                     wtemp	set	126
 10422  007E                     wtemp0	set	126
 10423  0080                     wtemp1	set	128
 10424  0082                     wtemp2	set	130
 10425  0084                     wtemp3	set	132
 10426  0086                     wtemp4	set	134
 10427  0088                     wtemp5	set	136
 10428  007F                     wtemp6	set	127
 10429  007E                     ttemp	set	126
 10430  007E                     ttemp0	set	126
 10431  0081                     ttemp1	set	129
 10432  0084                     ttemp2	set	132
 10433  0087                     ttemp3	set	135
 10434  007F                     ttemp4	set	127
 10435  007E                     ltemp	set	126
 10436  007E                     ltemp0	set	126
 10437  0082                     ltemp1	set	130
 10438  0086                     ltemp2	set	134
 10439  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    252
    Data        0
    BSS         214
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            32     27      32
    BANK1            16      0      16
    BANK2            80      0      75
    BANK3            76      0      39
    BANK4            80      0      78
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(1) Largest target is 32
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK1[1]), BDT(BANK0[32]), NULL(NULL[0]), 

    memset@p1	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    memset@p	PTR unsigned char  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    sp__memset	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> midiData(BANK3[4]), ReceivedDataBuffer(BANK1[64]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    S1180$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S1170$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S1170$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S1146$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S1146$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S1146$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S1146$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    scan_task@velocity	PTR unsigned char  size(1) Largest target is 1
		 -> APP_DeviceAudioMIDITasks@velocity(BANK0[1]), 

    scan_task@note	PTR unsigned char  size(1) Largest target is 1
		 -> APP_DeviceAudioMIDITasks@scan_pitch(BANK0[1]), 

    sp__USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBRxHandle	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBTxHandle	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[26]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 101
		 -> configDescriptor1(CODE[101]), 


Critical Paths under _main in COMMON

    _USBDeviceTasks->_USBSuspend
    _USBDeviceTasks->_USBWakeFromSuspend
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdSetCfgHandler
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _APP_DeviceAudioMIDIInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _SYSTEM_Initialize->_BUTTON_Enable
    _SYSTEM_Initialize->_LED_Enable
    _APP_DeviceAudioMIDITasks->_scan_task
    _scan_task->_store_key_level
    _store_key_level->_process_level
    _process_level->_LED_Off
    _process_level->_LED_On

Critical Paths under _SYS_InterruptHigh in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_APP_DeviceAudioMIDITasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_APP_DeviceAudioMIDIInitialize
    _APP_DeviceAudioMIDIInitialize->_USBEnableEndpoint
    _APP_DeviceAudioMIDITasks->_scan_task
    _store_key_level->_process_level

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   44458
           _APP_DeviceAudioMIDITasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       3     3      0   40661
                                             22 BANK0      3     3      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   1     1      0    5506
                                             11 COMMON     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           1     1      0    5506
                                             11 COMMON     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        5     5      0     272
                                              1 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     4     4      0   23803
                                             18 BANK0      4     4      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               1     1      0   23475
                                             17 BANK0      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             2     2      0      92
                                              6 COMMON     2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              4 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   1     1      0   17877
                                             16 BANK0      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  5     5      0    6265
                                             11 COMMON     1     1      0
                                             10 BANK0      4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               7     3      4     524
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               2     2      0      46
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  3     3      0       0
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0    6060
                                             10 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      5     0      5    5506
                                              5 BANK0      5     0      5
      _APP_DeviceAudioMIDIInitialize
      _APP_DeviceAudioMIDISOFHandler
             _APP_LEDUpdateUSBStatus
 ---------------------------------------------------------------------------------
 (3) _APP_LEDUpdateUSBStatus                               0     0      0      44
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceAudioMIDISOFHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceAudioMIDIInitialize                        2     2      0    2311
                                              3 BANK0      2     2      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    6     5      1     644
                                              8 COMMON     3     2      1
                                              0 BANK0      3     3      0
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 7     6      1     400
                                              1 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 2     2      0     114
                                              7 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  4     4      0     114
                                              3 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  3     3      0     115
                                              4 COMMON     3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  3     3      0      92
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      66
                                              2 COMMON     1     1      0
                      _BUTTON_Enable
                         _LED_Enable
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTON_Enable                                        1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceAudioMIDITasks                            10    10      0    3459
                                             17 BANK0     10    10      0
                   _BUTTON_IsPressed
               _USBTransferOnePacket
                          _scan_task
 ---------------------------------------------------------------------------------
 (2) _scan_task                                            7     6      1    1600
                                             11 COMMON     1     1      0
                                             11 BANK0      6     5      1
                            _get_adc
                           _get_data
                       _is_adc_ready
                     _is_end_of_scan
                            _run_adc
                          _scan_init
                 _set_clock_and_data
                          _set_timer
                    _store_key_level
                  _waiting_for_timer
 ---------------------------------------------------------------------------------
 (3) _waiting_for_timer                                    1     1      0      24
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _store_key_level                                      4     3      1     892
                                              7 COMMON     4     3      1
                            _get_adc (ARG)
                     _is_end_of_scan (ARG)
                      _process_level
 ---------------------------------------------------------------------------------
 (4) _process_level                                       16    14      2     737
                                              2 COMMON     5     3      2
                                              0 BANK0     11    11      0
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (4) _LED_On                                               1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LED_Off                                              1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _set_timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _set_clock_and_data                                   2     1      1     400
                                              1 COMMON     2     1      1
                           _get_data (ARG)
 ---------------------------------------------------------------------------------
 (3) _scan_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _run_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _is_end_of_scan                                       3     3      0      23
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _is_adc_ready                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get_data                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 8     4      4    1667
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _BUTTON_IsPressed                                     1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SYS_InterruptHigh                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceAudioMIDITasks
     _BUTTON_IsPressed
     _USBTransferOnePacket
     _scan_task
       _get_adc
       _get_data
       _is_adc_ready
       _is_end_of_scan
       _run_adc
       _scan_init
       _set_clock_and_data
         _get_data (ARG)
       _set_timer
       _store_key_level
         _get_adc (ARG)
         _is_end_of_scan (ARG)
         _process_level (ARG)
           _LED_Off
           _LED_On
       _waiting_for_timer
   _SYSTEM_Initialize
     _BUTTON_Enable
     _LED_Enable
   _USBDeviceInit
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceAudioMIDIInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceAudioMIDISOFHandler
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceAudioMIDIInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceAudioMIDISOFHandler
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceAudioMIDIInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceAudioMIDISOFHandler
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceAudioMIDIInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceAudioMIDISOFHandler
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
     _USBDeviceInit
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceAudioMIDIInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceAudioMIDISOFHandler
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceAudioMIDIInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceAudioMIDISOFHandler
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceAudioMIDIInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceAudioMIDISOFHandler
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On

 _SYS_InterruptHigh (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            20      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               20     1B      20       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10      0      10       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4B       9       93.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            4C      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               4C      0      27      11       51.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4E      13       97.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      FD      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      FD      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri May 20 22:37:01 2016

                              _USB_SD_Ptr 02AF                                         pc 0002  
                             __CFG_CP$OFF 0000                                        l16 0A5A  
                                      l88 0B81                               ?_LED_Enable 0070  
                           _USBDeviceInit 05FF      USER_USB_CALLBACK_EVENT_HANDLER@event 0055  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 0057                                       l410 0A09  
                                     l404 09F3                                       l309 0927  
                                     l406 09F6               __end_of_USBStdGetDscHandler 0F81  
                                     l407 09F9                                       l408 09FC  
                                     l370 09F0                                       l275 0567  
                                     l380 09D7                                       l364 09DA  
                                     l374 09C1                                       l366 09DD  
                                     l367 09E0                                       l376 09C4  
                                     l368 09E3                                       l800 01DE  
                                     l720 0C1E                                       l377 09C7  
                                     l801 01DF                                       l378 09CA  
                                     l650 077B                                       l715 0C12  
                                     l571 0642                                       l813 0247  
                                     l718 0C4E                                       l582 0391  
                                     l663 0E40                                       l719 0C1B  
                                     l584 0395                                       l593 03F1  
                                     l588 03BA                                       _BDT 0020  
                                     l765 0DB5                                       l597 0418  
                                     l678 06BD                                       l598 0470  
                                     l599 0421                                       l777 0D53  
                                     l779 0D07                                       l788 0D31  
                                     _UIE 0E92                                       _UIR 0E90  
                  _APP_LEDUpdateUSBStatus 0BC1                                _USBSuspend 0990  
                    USBStdSetCfgHandler@i 005D                      USBStdSetCfgHandler@p 005A  
                             _USBRxHandle 015F                              __CFG_BORV$LO 0000  
                                     wreg 0009                            _USBDeviceTasks 0384  
                          _USBDeviceState 006D                               _USBTxHandle 00E8  
                           _BUTTON_Enable 091E                                      S4841 0826  
                                    S4843 081A                                      S4835 0800  
                                    S4845 0830                                      S4847 083A  
                   ??_USBCtrlTrfRxService 0073                  USBEnableEndpoint@options 0078  
                            __CFG_LVP$OFF 0000                           __end_of_LED_Off 09D8  
                                    l3001 0E71                                      l3003 0E75  
                                    l3011 0E8E                                      l4011 0052  
                                    l3019 0A0F                                      l4013 0055  
                                    l3037 0DE0                                      l3311 0536  
                                    l4031 00B1                                      l4041 00D2  
                                    l4017 006B                                      l3137 0F0D  
                                    l3161 0F74                                      l3073 0CE4  
                                    l4043 00D5                                      l3403 0706  
                                    l3155 0F6E                                      l3147 0F4A  
                                    l3139 0F17                                      l3331 074C  
              USBConfigureEndpoint@handle 0077                                      l3317 0544  
                                    l3309 052B                                      l3405 0712  
                                    l3157 0F71                                      l3149 0F4D  
                                    l3173 0C2A                                      l3069 0CD2  
                                    l3319 0547                                      l4063 0130  
                                    l4055 0116                                      l3183 0C42  
                                    l4311 0F8C                                      l3335 0750  
                                    l3281 04B0                                      l4081 016B  
                                    l4065 0133                                      l4401 0209  
                                    l3353 0788                                      l3361 0792  
                                    l3603 0D6D                                      l3541 0B41  
                                    l3605 0D72                                      l4405 0212  
                                    l3701 0665                                      l3543 0B42  
                                    l3615 0D98                                      l3391 06C5  
                                    l2831 0BAF                                      l2911 0BDD  
                                    l2903 0BC8                                      l4431 0273  
                                    l4415 0236                                      l4351 0FEB  
                                    l4335 0FC3                                      l4319 0F9C  
                                    l2841 09CD                                      l3297 04F7  
                                    l3393 06DD                                      l4281 0B4A  
                                    l4425 024D                                      l4417 023B  
                                    l4329 0FAF                                      l4441 0D0F  
                                    l4513 0A35                                      l4601 03B4  
                                    l2851 09E6                                      l3299 04F8  
                                    l3731 056F                                      l3619 0DA8  
                                    l2923 0BF7                                      l2915 0BE2  
                                    l2931 0C08                                      l2907 0BD2  
                                    l4443 0D12                                      l3707 0684  
                                    l3651 060D                                      l4515 0A3C  
                                    l3741 058B                                      l3629 09FF  
                                    l2861 0A81                                      l4285 0B50  
                                    l4293 0B59                                      l4429 026B  
                                    l4381 01C4                                      l4365 0196  
                                    l4453 0D1F                                      l4445 0D15  
                                    l4613 03CA                                      l2919 0BEC  
                                    l4287 0B53                                      l4367 0198  
                                    l4455 0D22                                      l4471 0D48  
                                    l2881 0C72                                      l2873 0C64  
                                    l3753 05B7                                      l3745 059E  
                                    l3737 057C                                      l3577 0AF2  
                                    l2865 0A89                                      l2929 0C02  
                                    l4289 0B56                                      l4457 0D25  
                                    l4553 0EE5                                      l4641 03FE  
                                    l4625 03E2                                      l2891 0CA0  
                                    l3499 093B                                      l3755 05BE  
                                    l3763 05DA                                      l4467 0D3D  
                                    l4547 0EC0                                      l3667 0629  
                                    l3659 061D                                      l3835 0AB8  
                                    l4635 03F7                                      l4619 03D0  
                                    l3781 0959                                      l3749 05AF  
                                    l3765 05E5                                      l2981 0E39  
                                    l3589 0B17                                      l4389 01EA  
                                    l4557 0EF4                                      l3837 0ABA  
                                    l4581 0398                                      l3759 05CF  
                                    l4399 0202                                      l4559 0EF7  
                                    l3679 0647                                      l3777 0952  
                                    l2993 0E58                                      l4649 0411  
                                    l4593 03A7                                      l3787 095B  
                                    l3875 0A41                                      l3883 0A4F  
                                    l4675 0458                                      l3789 0963  
                                    l4837 0B62                                      l4677 0467  
                                    l4669 043F                                      l4685 0981  
                                    l4839 0B7C                                      u3210 05FD  
                                    u3125 062C                                      u2255 0CDB  
                                    u2600 0495                                      u2700 0501  
                                    u2620 04CE                                      u4125 0EA1  
                                    u2710 050D                                      u2702 0502  
                                    u2630 04CF                                      u2712 050E  
                                    u2640 04E1                                      u2650 04E2  
                                    u2570 0481                                      u2900 0945  
                                    u2580 0482                                      u2590 0494  
                                    u2920 094D                                      u2825 06B7  
                                    u2914 0947                                      u2940 0970  
                                    u1965 0B8A                                      u2950 0971  
                                    u1975 0B90                                      u1985 0B98  
                                    u2990 0B47                     ??_USBCtrlTrfTxService 0071  
                                    _UCFG 0E91                                      _UEP0 0E98  
                                    _UEP1 0E99                                      _UEIE 0E97  
                                    _UEIR 0E93                                      _UCON 0E8E  
                                    _TMR0 0015                              __CFG_WRT$OFF 0000  
  USBStdFeatureReqHandler@current_ep_data 005E                                      _pDst 0166  
                                    _main 097A                                      fsr0h 0005  
                                    fsr1h 0007                                      fsr0l 0004  
                                    indf0 0000                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                           __CFG_BOREN$ON 0000                                      ltemp 007E  
                                    start 000D                                      ttemp 007E  
                                    wtemp 007E                             __CFG_IESO$OFF 0000  
              process_level@current_state 0052                      process_level@idx_key 005A  
              __end_of_USBCheckStdRequest 0D54                    ??_USBCtrlTrfOutHandler 0077  
                           __CFG_MCLRE$ON 0000                       USBDeviceInit@i_1715 0074  
               ??_USBStdFeatureReqHandler 005A                      process_level@on_flag 0058  
                ??_USBStdGetStatusHandler 0071                            ?_USBDeviceInit 0070  
             process_level@key_on_counter 0247                                     ?_main 0070  
                           __CFG_WDTE$OFF 0000         __size_of_USBCtrlEPServiceComplete 0086  
                  __end_of_USBDeviceTasks 0473                 ?_USBCtrlEPServiceComplete 0070  
                                   _UADDR 0E96                                     _RCREG 0199  
                                   _RCSTA 019D                                     _USTAT 0E8F  
                                   _TXREG 019A                                     _TXSTA 019E  
      __size_of_USBCtrlEPAllowStatusStage 0068                            __CFG_FCMEN$OFF 0000  
                          ?_BUTTON_Enable 0070                           __end_of_get_adc 08FE  
         __end_of_USBCtrlEPAllowDataStage 0CFF                                     _sd000 0380  
                                   _sd001 0320                                     _sd002 0354  
          ?_USBIncrement1msInternalTimers 0070                             ?_is_adc_ready 0070  
   __end_of_APP_DeviceAudioMIDIInitialize 0AEA    __size_of_APP_DeviceAudioMIDIInitialize 002B  
           _APP_DeviceAudioMIDIInitialize 0ABF                           _store_key_level 0B19  
             __size_of_set_clock_and_data 0012                                     _pitch 00EB  
               __size_of_BUTTON_IsPressed 0015                           ??_process_level 0074  
                                   ltemp0 007E                                     ltemp1 0082  
                                   ltemp2 0086                                     ltemp3 0080  
                     __size_of_LED_Enable 0019                           __end_of_run_adc 0917  
                                   ttemp0 007E                                     ttemp1 0081  
                                   ttemp2 0084                                     ttemp3 0087  
                                   ttemp4 007F        APP_DeviceAudioMIDITasks@scan_pitch 0069  
                                   status 0003                                     wtemp0 007E  
                                   wtemp1 0080                                     wtemp2 0082  
                                   wtemp3 0084                                     wtemp4 0086  
                                   wtemp5 0088                                     wtemp6 007F  
            __size_of_USBStdSetCfgHandler 007F                     process_level@off_flag 0056  
                         __initialization 000F                is_end_of_scan@scan_counter 0169  
                            __end_of_main 0990                ??_APP_DeviceAudioMIDITasks 0061  
                          __CFG_LPBOR$OFF 0000                             scan_task@note 0060  
               __size_of_USBCtrlEPService 0070                                    ??_main 007C  
                         ?_USBDeviceTasks 0070     __end_ofprocess_level@key_on_threshold 02BA  
           process_level@key_on_threshold 02B9                               ?_USBSuspend 0070  
                               ??_LED_Off 0071                       __CFG_USBLSCLK$48MHz 0000  
                          ??_is_adc_ready 0071                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _ADCON2 009F  
                                  _ACTCON 039B                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _ANSELA 018C  
                  SYSTEM_Initialize@state 0072                                    _LED_On 09D8  
                     set_clock_and_data@c 0072                       set_clock_and_data@d 0071  
                                  _OSCCON 0099                            __CFG_PWRTE$OFF 0000  
                       _shortPacketStatus 00EC                          __end_of_get_data 0903  
                         USBDeviceTasks@i 0068               USBStdFeatureReqHandler@pUEP 005C  
                USBTransferOnePacket@data 0072                USBCtrlTrfInHandler@lastDTS 0076  
                         ??_USBDeviceInit 0071                            __CFG_STVREN$ON 0000  
                       _USBEnableEndpoint 0A78           __size_of_USBStdGetStatusHandler 004D  
                                  _memset 0A0A                        ?_USBEnableEndpoint 0078  
                               ??_get_adc 0071                   __end_of_store_key_level 0B49  
           __size_of_USBTransferOnePacket 0050                           ??_BUTTON_Enable 0071  
                     ??_USBEnableEndpoint 0079                            process_level@L 02B7  
                               ??_run_adc 0071                               _CtrlTrfData 0048  
                 __size_of_is_end_of_scan 0015                      _controlTransferState 00E9  
                       _SYSTEM_Initialize 0A3F                   __end_of__initialization 0034  
                      ?_SYSTEM_Initialize 0070                  __size_of_USBStallHandler 0024  
                     __size_of_USBSuspend 0017                            __pcstackCOMMON 0070  
               __end_of_USBEnableEndpoint 0A9B              _APP_DeviceAudioMIDITasks$423 0063  
            _APP_DeviceAudioMIDITasks$464 0065              _APP_DeviceAudioMIDITasks$465 0067  
                           __end_of_sd000 0384                             __end_of_sd001 0354  
                           __end_of_sd002 036E                       ??_SYSTEM_Initialize 0072  
                               LED_On@led 0071          __size_of_USBCtrlEPAllowDataStage 0054  
                              _adc_levels 0220                    process_level@old_level 0072  
                  process_level@new_level 0073                              ??_LED_Enable 0071  
           __size_of_USBConfigureEndpoint 003F                    process_level@old_state 0050  
             __end_of_USBCtrlTrfInHandler 0DBB                   ?_APP_LEDUpdateUSBStatus 0070  
                  store_key_level@idx_key 00ED                    __end_ofprocess_level@L 02B8  
                          _OPTION_REGbits 0095                            scan_task@state 016A  
              store_key_level@end_of_scan 0077                  ??_USBCtrlTrfSetupHandler 0061  
                 _USBTicksSinceSuspendEnd 0163                 __end_of_SYSTEM_Initialize 0A5B  
                        _BUTTON_IsPressed 0950                    _USBStdGetStatusHandler 0C0E  
                              __pbssBANK0 006B                                __pbssBANK1 00E0  
                              __pbssBANK2 0120                                __pbssBANK3 01A4  
                              __pbssBANK4 0220                                   ?_LED_On 0070  
                      __end_of_LED_Enable 0A0A                      store_key_level@level 007A  
             __size_of_USBWakeFromSuspend 001B                               _pBDTEntryIn 006B  
        __end_of_USBCtrlEPServiceComplete 07BF                        __size_of_scan_init 001D  
                              __pmaintext 097A                        __size_of_scan_task 00AD  
                    USBCtrlTrfRxService@i 0075                      __end_of_is_adc_ready 0910  
                           LED_Enable@led 0071                           __CFG_PLLMULT$3x 0000  
          __end_of_APP_LEDUpdateUSBStatus 0C0E                                __pintentry 0004  
                                 _BAUDCON 019F                                   ?_memset 0071  
                              _device_dsc 036E                          _USBCtrlEPService 0E92  
                              _ep_data_in 0152                        __size_of_set_timer 000B  
             __end_of_USBCtrlTrfRxService 0739                        _USBCheckStdRequest 0CFF  
                        ?_store_key_level 0077                         _configDescriptor1 02BB  
                       scan_task@velocity 005B                                   _LED_Off 09BF  
             __end_of_USBCtrlTrfTxService 0E92                       _USBStdSetCfgHandler 0F81  
                               ?_get_data 0070                       ?_USBCheckStdRequest 0070  
            __size_of_USBStdGetDscHandler 007F                                   _UIEbits 0E92  
                                 _UIRbits 0E90                           __size_of_LED_On 0019  
                       is_end_of_scan@res 0073            APP_LEDUpdateUSBStatus@ledCount 00E5  
         ??_USBIncrement1msInternalTimers 0071                      ?_USBStdSetCfgHandler 0070  
              __size_of_USBEnableEndpoint 0023                      ??_USBCheckStdRequest 0060  
           __size_of_USBCtrlTrfOutHandler 002F                          ??_USBDeviceTasks 0066  
                       ??_USBStallHandler 0071                           __size_of_memset 001A  
               __end_of_configDescriptor1 0320                                   __ptext1 0384  
                                 __ptext2 0A24                                   __ptext3 0990  
                                 __ptext4 0A9B                                   __ptext5 09A7  
                                 __ptext6 05FF                                   __ptext7 0E92  
                                 __ptext8 07BF                                   __ptext9 0739  
                                 _inPipes 00E0                                   _get_adc 08FB  
             _USBDeferOUTDataStagePackets 015E                              ??_USBSuspend 007B  
                           _scan_task$883 005E                             _scan_task$879 005C  
              __end_of_set_clock_and_data 0950                         __end_of_scan_init 0A78  
                       __end_of_scan_task 05FF                                   _run_adc 0910  
                      __end_of_USB_CD_Ptr 02B7                                ??_get_data 0071  
              __size_of_SYSTEM_Initialize 001C           __size_of_USBCtrlTrfSetupHandler 0041  
                                 clrloop0 0904                            _is_end_of_scan 0965  
                    end_of_initialization 0034                        __end_of_USB_SD_Ptr 02B5  
                     _pBDTEntryEP0OutNext 007C                                   memset@c 0071  
                                 memset@n 0073                                   memset@p 0076  
                   __end_of_process_level 0552                           _USB1msTickCount 014E  
                ?_USBStdFeatureReqHandler 0070                         __end_of_set_timer 0933  
                   ??_USBStdSetCfgHandler 007B                                _note_event 0156  
                      __end_of_USBSuspend 09A7                   _USBCtrlEPAllowDataStage 0CAB  
                               _RCSTAbits 019D                              __pstringtext 0288  
                _USBCtrlEPServiceComplete 0739                                _wait_timer 0168  
              _USBStatusStageEnabledFlag1 0160                _USBStatusStageEnabledFlag2 0161  
                      USBEnableEndpoint@p 0050                                 _PORTAbits 000C  
          ?_APP_DeviceAudioMIDISOFHandler 0070                          __CFG_FOSC$INTOSC 0000  
                               _TRISAbits 008C                                 _TRISBbits 008D  
                               _TRISCbits 008E                        _ReceivedDataBuffer 00A0  
                  __end_of_is_end_of_scan 097A                        _BothEP0OutUOWNsSet 015A  
               USBStdSetCfgHandler@i_2046 005C                 USBConfigureEndpoint@EPNum 0076  
       __size_of_APP_DeviceAudioMIDITasks 014A                ?_USBCtrlEPAllowStatusStage 0070  
               ?_APP_DeviceAudioMIDITasks 0070       USER_USB_CALLBACK_EVENT_HANDLER@size 0058  
                               _USTATcopy 006F              __end_of_USBTransferOnePacket 0CAB  
                          __end_of_LED_On 09F1                     __size_of_is_adc_ready 0007  
                 process_level@midi_shift 02BA               process_level@filtered_state 0059  
                      __CFG_PLLEN$ENABLED 0000                    _USBCtrlTrfSetupHandler 07BF  
                 process_level@key_states 0120                  __end_of_BUTTON_IsPressed 0965  
                   __end_of_USBDeviceInit 06A7     __end_of_USBIncrement1msInternalTimers 09BF  
  __size_of_USBIncrement1msInternalTimers 0018             _USBIncrement1msInternalTimers 09A7  
                              LED_Off@led 0071                            __end_of_memset 0A24  
                       _USBBusIsSuspended 015C                       start_initialization 000F  
                 ?_USBStdGetStatusHandler 0070                     __end_of_BUTTON_Enable 0928  
           USBCtrlTrfRxService@byteToRead 0076                           ?_is_end_of_scan 0070  
                          _is_initialized 0165                              _is_adc_ready 0909  
            __end_of_USBConfigureEndpoint 0BC1           __end_of_USBStdFeatureReqHandler 0288  
                                ??_LED_On 0071         __end_of_USBCtrlEPAllowStatusStage 0E23  
                __end_of_USBCtrlEPService 0F02                 ??_USBCtrlEPAllowDataStage 0074  
                          USBDeviceInit@i 0075                            USBDeviceInit@p 0072  
                  _pBDTEntryEP0OutCurrent 006E                   USBTransferOnePacket@dir 0071  
                 USBTransferOnePacket@len 0074                       _USBStdGetDscHandler 0F02  
                                ??_memset 0075    __end_ofprocess_level@key_off_threshold 02B9  
          process_level@key_off_threshold 02B8                    BUTTON_IsPressed@button 0071  
                  _USBActiveConfiguration 00EE            __end_of_USBStdGetStatusHandler 0C5B  
               process_level@idx_midi_map 0288                     _waiting_for_timer$823 0071  
                                ?_LED_Off 0070                               __pbssCOMMON 007C  
                               ___latbits 0002                             __pcstackBANK0 0050  
            __size_of_USBCtrlTrfInHandler 0067                      ?_USBStdGetDscHandler 0070  
                       __size_of_get_data 0005                __end_of_USBWakeFromSuspend 0A3F  
                         _USBStallHandler 0A9B                              _pBDTEntryOut 0158  
          ?_APP_DeviceAudioMIDIInitialize 0070                                 __pswtext1 0800  
                               __pswtext2 0826                                 __pswtext3 081A  
                               __pswtext4 0830                                 __pswtext5 083A  
                                ?_get_adc 0070                      _USBTransferOnePacket 0C5B  
                               _msCounter 00EA              process_level@key_off_counter 01A4  
            __end_of_USBCtrlTrfOutHandler 0B19                     ??_USBStdGetDscHandler 0071  
                             _ep_data_out 0154                                  ?_run_adc 0070  
            __size_of_USBCtrlTrfRxService 0092             USBConfigureEndpoint@direction 0071  
                __size_of_store_key_level 0030                                 _scan_init 0A5B  
                               _scan_task 0552              __size_of_USBCtrlTrfTxService 006F  
                                _LATCbits 010E                ??_USBCtrlEPServiceComplete 0076  
                               clear_ram0 0903                        _set_clock_and_data 093E  
                                _PIE1bits 0091                                  _PIE2bits 0092  
                       _waiting_for_timer 0933                                  _PIR2bits 0012  
               USBCtrlEPService@setup_cnt 0065                        ?_waiting_for_timer 0070  
                               _set_timer 0928                                  _UEP0bits 0E98  
              _USBDeferINDataStagePackets 015D               __size_of_USBCheckStdRequest 0055  
                     ?_set_clock_and_data 0071                                  _UCONbits 0E8E  
                    _USBConfigureEndpoint 0B82           __end_ofprocess_level@midi_shift 02BB  
        __size_of_USBStdFeatureReqHandler 0106          __end_of_APP_DeviceAudioMIDITasks 0182  
                     ??_waiting_for_timer 0071                                _ADCON0bits 009D  
                              _ADCON1bits 009E                                _ADCON2bits 009F  
                   ?_USBTransferOnePacket 0071                         _SYS_InterruptHigh 0004  
                            _RemoteWakeup 015B                          __size_of_LED_Off 0019  
                      ?_SYS_InterruptHigh 0070                   __end_of_USBStallHandler 0ABF  
                       _process_level$860 0057                         _process_level$861 0054  
                    ??_set_clock_and_data 0072               ??_USBCtrlEPAllowStatusStage 0071  
             __end_of_USBStdSetCfgHandler 1000                                ?_scan_init 0070  
                              ?_scan_task 005B                       ??_SYS_InterruptHigh 0070  
               __end_of_waiting_for_timer 093E           ??_APP_DeviceAudioMIDISOFHandler 0071  
                      __end_of_device_dsc 0380                  ??_APP_LEDUpdateUSBStatus 0072  
                 ?_USBCtrlTrfSetupHandler 0070                   USBStdGetStatusHandler@p 0072  
                  USBTransferOnePacket@ep 0077                                ?_set_timer 0070  
                                _SetupPkt 0040                     ?_USBConfigureEndpoint 0071  
                       ?_BUTTON_IsPressed 0070                 __end_of_SYS_InterruptHigh 000D  
                      ??_BUTTON_IsPressed 0071                          ??_is_end_of_scan 0071  
                              _ANSELAbits 018C                                _ANSELBbits 018D  
                              _ANSELCbits 018E                          __size_of_get_adc 0003  
                  __size_of_process_level 00DF                   __size_of_USBDeviceTasks 00EF  
                                __ptext10 0CAB                                  __ptext11 0CFF  
                                __ptext20 0ABF                                  __ptext12 0F81  
                                __ptext21 0A78                                  __ptext13 0A0A  
                                __ptext30 091E                                  __ptext22 0B82  
                                __ptext14 0C0E                                  __ptext31 0038  
                                __ptext23 0AEA                                  __ptext15 0F02  
                                __ptext40 0A5B                                  __ptext32 0552  
                                __ptext24 06A7                                  __ptext16 0182  
                                __ptext41 0910                                  __ptext33 0933  
                                __ptext25 0DBB                                  __ptext17 0B49  
                                __ptext42 0965                                  __ptext34 0B19  
                                __ptext26 0D54                                  __ptext18 0BC1  
                                __ptext43 0909                                  __ptext35 0473  
                                __ptext27 0E23                                  __ptext19 0917  
                                __ptext44 08FE                                  __ptext36 09D8  
                                __ptext28 0A3F                                  __ptext45 08FB  
                                __ptext37 09BF                                  __ptext29 09F1  
                                __ptext46 0C5B                                  __ptext38 0928  
                                __ptext47 0950                                  __ptext39 093E  
                                _get_data 08FE                          __size_of_run_adc 0007  
                                _midiData 01A0            __end_of_USBCtrlTrfSetupHandler 0800  
                           __size_of_main 0016                         ?_USBCtrlEPService 0070  
                      ??_USBCtrlEPService 0062                         ??_store_key_level 0078  
                     _USBCtrlTrfInHandler 0D54                       BUTTON_Enable@button 0071  
                                _outPipes 0147                      _USBCtrlTrfOutHandler 0AEA  
                                int$flags 007E                 _USBCtrlEPAllowStatusStage 0DBB  
                              _LED_Enable 09F1                    ??_USBTransferOnePacket 0075  
               _USBDeferStatusStagePacket 00E7                                _INTCONbits 000B  
                    ?_USBCtrlTrfInHandler 0070                  _APP_DeviceAudioMIDITasks 0038  
           USBCtrlTrfTxService@byteToSend 0073                                  memset@p1 0077  
                        ?_USBStallHandler 0070                  USBStdFeatureReqHandler@p 005F  
                                intlevel1 0000                               ??_scan_init 0071  
                             ??_scan_task 007B                    __size_of_USBDeviceInit 00A8  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0B82  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0039  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0055         ??_USER_USB_CALLBACK_EVENT_HANDLER 007B  
         _USER_USB_CALLBACK_EVENT_HANDLER 0B49                __size_of_waiting_for_timer 000B  
       __end_ofprocess_level@idx_midi_map 02AF                         __CFG_CLKOUTEN$OFF 0000  
                           _process_level 0473                               _sentNoteOff 0167  
         __size_of_APP_LEDUpdateUSBStatus 004D     __end_of_APP_DeviceAudioMIDISOFHandler 091E  
  __size_of_APP_DeviceAudioMIDISOFHandler 0007             _APP_DeviceAudioMIDISOFHandler 0917  
                             ??_set_timer 0071                    ??_USBConfigureEndpoint 0072  
                   ?_USBCtrlTrfOutHandler 0070                    __size_of_BUTTON_Enable 000A  
                    __CFG_CPUDIV$NOCLKDIV 0000                       _USBCtrlTrfRxService 06A7  
                      _USBWakeFromSuspend 0A24                   _USBStdFeatureReqHandler 0182  
                     _USBCtrlTrfTxService 0E23                __size_of_SYS_InterruptHigh 0009  
         ??_APP_DeviceAudioMIDIInitialize 0053                       ?_USBWakeFromSuspend 0070  
                   ??_USBCtrlTrfInHandler 0074                     _USBAlternateInterface 00EF  
                     USBEnableEndpoint@ep 0052                           _endpoint_number 0164  
                    ?_USBCtrlTrfRxService 0070                  ?_USBCtrlEPAllowDataStage 0070  
                    ?_USBCtrlTrfTxService 0070                            ?_process_level 0072  
            _USBStatusStageTimeoutCounter 0162                      ??_USBWakeFromSuspend 007B  
              USBTransferOnePacket@handle 0078                                _USB_CD_Ptr 02B5  
        APP_DeviceAudioMIDITasks@velocity 006A  
