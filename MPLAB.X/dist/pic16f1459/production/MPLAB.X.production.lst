

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat May 21 21:35:53 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	swtext1,local,class=CONST,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	swtext2,local,class=CONST,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	swtext3,local,class=CONST,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	swtext4,local,class=CONST,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	swtext5,local,class=CONST,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    67                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text48,local,class=CODE,merge=1,delta=2
    69                           	psect	text49,local,class=CODE,merge=1,delta=2
    70                           	psect	text50,local,class=CODE,merge=1,delta=2
    71                           	psect	text51,local,class=CODE,merge=1,delta=2
    72                           	psect	text52,local,class=CODE,merge=1,delta=2
    73                           	psect	text53,local,class=CODE,merge=1,delta=2
    74                           	psect	text54,local,class=CODE,merge=1,delta=2
    75                           	psect	intentry,global,class=CODE,delta=2
    76                           	dabs	1,0x20,32,_BDT
    77                           	dabs	1,0x48,8,_CtrlTrfData
    78                           	dabs	1,0x40,8,_SetupPkt
    79                           	dabs	1,0xA0,64,_ReceivedDataBuffer
    80                           	dabs	1,0x1A0,4,_midiData
    81                           	dabs	1,0x7E,2
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  0111                     	;# 
   129  0112                     	;# 
   130  0113                     	;# 
   131  0114                     	;# 
   132  0115                     	;# 
   133  0116                     	;# 
   134  0117                     	;# 
   135  0118                     	;# 
   136  0119                     	;# 
   137  011D                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  018E                     	;# 
   141  0191                     	;# 
   142  0191                     	;# 
   143  0192                     	;# 
   144  0193                     	;# 
   145  0193                     	;# 
   146  0194                     	;# 
   147  0195                     	;# 
   148  0196                     	;# 
   149  0197                     	;# 
   150  0199                     	;# 
   151  019A                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019C                     	;# 
   155  019D                     	;# 
   156  019E                     	;# 
   157  019F                     	;# 
   158  020C                     	;# 
   159  020D                     	;# 
   160  0211                     	;# 
   161  0211                     	;# 
   162  0212                     	;# 
   163  0212                     	;# 
   164  0213                     	;# 
   165  0213                     	;# 
   166  0214                     	;# 
   167  0214                     	;# 
   168  0215                     	;# 
   169  0215                     	;# 
   170  0215                     	;# 
   171  0216                     	;# 
   172  0216                     	;# 
   173  0217                     	;# 
   174  0217                     	;# 
   175  0391                     	;# 
   176  0392                     	;# 
   177  0393                     	;# 
   178  0394                     	;# 
   179  0395                     	;# 
   180  0396                     	;# 
   181  039A                     	;# 
   182  039B                     	;# 
   183  0611                     	;# 
   184  0612                     	;# 
   185  0613                     	;# 
   186  0613                     	;# 
   187  0614                     	;# 
   188  0615                     	;# 
   189  0616                     	;# 
   190  0616                     	;# 
   191  0691                     	;# 
   192  0692                     	;# 
   193  0693                     	;# 
   194  0694                     	;# 
   195  0695                     	;# 
   196  0E8E                     	;# 
   197  0E8F                     	;# 
   198  0E90                     	;# 
   199  0E91                     	;# 
   200  0E92                     	;# 
   201  0E93                     	;# 
   202  0E94                     	;# 
   203  0E94                     	;# 
   204  0E95                     	;# 
   205  0E96                     	;# 
   206  0E97                     	;# 
   207  0E98                     	;# 
   208  0E99                     	;# 
   209  0E9A                     	;# 
   210  0E9B                     	;# 
   211  0E9C                     	;# 
   212  0E9D                     	;# 
   213  0E9E                     	;# 
   214  0E9F                     	;# 
   215  0FE4                     	;# 
   216  0FE5                     	;# 
   217  0FE6                     	;# 
   218  0FE7                     	;# 
   219  0FE8                     	;# 
   220  0FE9                     	;# 
   221  0FEA                     	;# 
   222  0FEB                     	;# 
   223  0FED                     	;# 
   224  0FEE                     	;# 
   225  0FEF                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  000E                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  010C                     	;# 
   270  010D                     	;# 
   271  010E                     	;# 
   272  0111                     	;# 
   273  0112                     	;# 
   274  0113                     	;# 
   275  0114                     	;# 
   276  0115                     	;# 
   277  0116                     	;# 
   278  0117                     	;# 
   279  0118                     	;# 
   280  0119                     	;# 
   281  011D                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  018E                     	;# 
   285  0191                     	;# 
   286  0191                     	;# 
   287  0192                     	;# 
   288  0193                     	;# 
   289  0193                     	;# 
   290  0194                     	;# 
   291  0195                     	;# 
   292  0196                     	;# 
   293  0197                     	;# 
   294  0199                     	;# 
   295  019A                     	;# 
   296  019B                     	;# 
   297  019B                     	;# 
   298  019C                     	;# 
   299  019D                     	;# 
   300  019E                     	;# 
   301  019F                     	;# 
   302  020C                     	;# 
   303  020D                     	;# 
   304  0211                     	;# 
   305  0211                     	;# 
   306  0212                     	;# 
   307  0212                     	;# 
   308  0213                     	;# 
   309  0213                     	;# 
   310  0214                     	;# 
   311  0214                     	;# 
   312  0215                     	;# 
   313  0215                     	;# 
   314  0215                     	;# 
   315  0216                     	;# 
   316  0216                     	;# 
   317  0217                     	;# 
   318  0217                     	;# 
   319  0391                     	;# 
   320  0392                     	;# 
   321  0393                     	;# 
   322  0394                     	;# 
   323  0395                     	;# 
   324  0396                     	;# 
   325  039A                     	;# 
   326  039B                     	;# 
   327  0611                     	;# 
   328  0612                     	;# 
   329  0613                     	;# 
   330  0613                     	;# 
   331  0614                     	;# 
   332  0615                     	;# 
   333  0616                     	;# 
   334  0616                     	;# 
   335  0691                     	;# 
   336  0692                     	;# 
   337  0693                     	;# 
   338  0694                     	;# 
   339  0695                     	;# 
   340  0E8E                     	;# 
   341  0E8F                     	;# 
   342  0E90                     	;# 
   343  0E91                     	;# 
   344  0E92                     	;# 
   345  0E93                     	;# 
   346  0E94                     	;# 
   347  0E94                     	;# 
   348  0E95                     	;# 
   349  0E96                     	;# 
   350  0E97                     	;# 
   351  0E98                     	;# 
   352  0E99                     	;# 
   353  0E9A                     	;# 
   354  0E9B                     	;# 
   355  0E9C                     	;# 
   356  0E9D                     	;# 
   357  0E9E                     	;# 
   358  0E9F                     	;# 
   359  0FE4                     	;# 
   360  0FE5                     	;# 
   361  0FE6                     	;# 
   362  0FE7                     	;# 
   363  0FE8                     	;# 
   364  0FE9                     	;# 
   365  0FEA                     	;# 
   366  0FEB                     	;# 
   367  0FED                     	;# 
   368  0FEE                     	;# 
   369  0FEF                     	;# 
   370  0000                     	;# 
   371  0001                     	;# 
   372  0002                     	;# 
   373  0003                     	;# 
   374  0004                     	;# 
   375  0005                     	;# 
   376  0006                     	;# 
   377  0007                     	;# 
   378  0008                     	;# 
   379  0009                     	;# 
   380  000A                     	;# 
   381  000B                     	;# 
   382  000C                     	;# 
   383  000D                     	;# 
   384  000E                     	;# 
   385  0011                     	;# 
   386  0012                     	;# 
   387  0015                     	;# 
   388  0016                     	;# 
   389  0016                     	;# 
   390  0017                     	;# 
   391  0018                     	;# 
   392  0019                     	;# 
   393  001A                     	;# 
   394  001B                     	;# 
   395  001C                     	;# 
   396  008C                     	;# 
   397  008D                     	;# 
   398  008E                     	;# 
   399  0091                     	;# 
   400  0092                     	;# 
   401  0095                     	;# 
   402  0096                     	;# 
   403  0097                     	;# 
   404  0098                     	;# 
   405  0099                     	;# 
   406  009A                     	;# 
   407  009B                     	;# 
   408  009B                     	;# 
   409  009C                     	;# 
   410  009D                     	;# 
   411  009E                     	;# 
   412  009F                     	;# 
   413  010C                     	;# 
   414  010D                     	;# 
   415  010E                     	;# 
   416  0111                     	;# 
   417  0112                     	;# 
   418  0113                     	;# 
   419  0114                     	;# 
   420  0115                     	;# 
   421  0116                     	;# 
   422  0117                     	;# 
   423  0118                     	;# 
   424  0119                     	;# 
   425  011D                     	;# 
   426  018C                     	;# 
   427  018D                     	;# 
   428  018E                     	;# 
   429  0191                     	;# 
   430  0191                     	;# 
   431  0192                     	;# 
   432  0193                     	;# 
   433  0193                     	;# 
   434  0194                     	;# 
   435  0195                     	;# 
   436  0196                     	;# 
   437  0197                     	;# 
   438  0199                     	;# 
   439  019A                     	;# 
   440  019B                     	;# 
   441  019B                     	;# 
   442  019C                     	;# 
   443  019D                     	;# 
   444  019E                     	;# 
   445  019F                     	;# 
   446  020C                     	;# 
   447  020D                     	;# 
   448  0211                     	;# 
   449  0211                     	;# 
   450  0212                     	;# 
   451  0212                     	;# 
   452  0213                     	;# 
   453  0213                     	;# 
   454  0214                     	;# 
   455  0214                     	;# 
   456  0215                     	;# 
   457  0215                     	;# 
   458  0215                     	;# 
   459  0216                     	;# 
   460  0216                     	;# 
   461  0217                     	;# 
   462  0217                     	;# 
   463  0391                     	;# 
   464  0392                     	;# 
   465  0393                     	;# 
   466  0394                     	;# 
   467  0395                     	;# 
   468  0396                     	;# 
   469  039A                     	;# 
   470  039B                     	;# 
   471  0611                     	;# 
   472  0612                     	;# 
   473  0613                     	;# 
   474  0613                     	;# 
   475  0614                     	;# 
   476  0615                     	;# 
   477  0616                     	;# 
   478  0616                     	;# 
   479  0691                     	;# 
   480  0692                     	;# 
   481  0693                     	;# 
   482  0694                     	;# 
   483  0695                     	;# 
   484  0E8E                     	;# 
   485  0E8F                     	;# 
   486  0E90                     	;# 
   487  0E91                     	;# 
   488  0E92                     	;# 
   489  0E93                     	;# 
   490  0E94                     	;# 
   491  0E94                     	;# 
   492  0E95                     	;# 
   493  0E96                     	;# 
   494  0E97                     	;# 
   495  0E98                     	;# 
   496  0E99                     	;# 
   497  0E9A                     	;# 
   498  0E9B                     	;# 
   499  0E9C                     	;# 
   500  0E9D                     	;# 
   501  0E9E                     	;# 
   502  0E9F                     	;# 
   503  0FE4                     	;# 
   504  0FE5                     	;# 
   505  0FE6                     	;# 
   506  0FE7                     	;# 
   507  0FE8                     	;# 
   508  0FE9                     	;# 
   509  0FEA                     	;# 
   510  0FEB                     	;# 
   511  0FED                     	;# 
   512  0FEE                     	;# 
   513  0FEF                     	;# 
   514  0000                     	;# 
   515  0001                     	;# 
   516  0002                     	;# 
   517  0003                     	;# 
   518  0004                     	;# 
   519  0005                     	;# 
   520  0006                     	;# 
   521  0007                     	;# 
   522  0008                     	;# 
   523  0009                     	;# 
   524  000A                     	;# 
   525  000B                     	;# 
   526  000C                     	;# 
   527  000D                     	;# 
   528  000E                     	;# 
   529  0011                     	;# 
   530  0012                     	;# 
   531  0015                     	;# 
   532  0016                     	;# 
   533  0016                     	;# 
   534  0017                     	;# 
   535  0018                     	;# 
   536  0019                     	;# 
   537  001A                     	;# 
   538  001B                     	;# 
   539  001C                     	;# 
   540  008C                     	;# 
   541  008D                     	;# 
   542  008E                     	;# 
   543  0091                     	;# 
   544  0092                     	;# 
   545  0095                     	;# 
   546  0096                     	;# 
   547  0097                     	;# 
   548  0098                     	;# 
   549  0099                     	;# 
   550  009A                     	;# 
   551  009B                     	;# 
   552  009B                     	;# 
   553  009C                     	;# 
   554  009D                     	;# 
   555  009E                     	;# 
   556  009F                     	;# 
   557  010C                     	;# 
   558  010D                     	;# 
   559  010E                     	;# 
   560  0111                     	;# 
   561  0112                     	;# 
   562  0113                     	;# 
   563  0114                     	;# 
   564  0115                     	;# 
   565  0116                     	;# 
   566  0117                     	;# 
   567  0118                     	;# 
   568  0119                     	;# 
   569  011D                     	;# 
   570  018C                     	;# 
   571  018D                     	;# 
   572  018E                     	;# 
   573  0191                     	;# 
   574  0191                     	;# 
   575  0192                     	;# 
   576  0193                     	;# 
   577  0193                     	;# 
   578  0194                     	;# 
   579  0195                     	;# 
   580  0196                     	;# 
   581  0197                     	;# 
   582  0199                     	;# 
   583  019A                     	;# 
   584  019B                     	;# 
   585  019B                     	;# 
   586  019C                     	;# 
   587  019D                     	;# 
   588  019E                     	;# 
   589  019F                     	;# 
   590  020C                     	;# 
   591  020D                     	;# 
   592  0211                     	;# 
   593  0211                     	;# 
   594  0212                     	;# 
   595  0212                     	;# 
   596  0213                     	;# 
   597  0213                     	;# 
   598  0214                     	;# 
   599  0214                     	;# 
   600  0215                     	;# 
   601  0215                     	;# 
   602  0215                     	;# 
   603  0216                     	;# 
   604  0216                     	;# 
   605  0217                     	;# 
   606  0217                     	;# 
   607  0391                     	;# 
   608  0392                     	;# 
   609  0393                     	;# 
   610  0394                     	;# 
   611  0395                     	;# 
   612  0396                     	;# 
   613  039A                     	;# 
   614  039B                     	;# 
   615  0611                     	;# 
   616  0612                     	;# 
   617  0613                     	;# 
   618  0613                     	;# 
   619  0614                     	;# 
   620  0615                     	;# 
   621  0616                     	;# 
   622  0616                     	;# 
   623  0691                     	;# 
   624  0692                     	;# 
   625  0693                     	;# 
   626  0694                     	;# 
   627  0695                     	;# 
   628  0E8E                     	;# 
   629  0E8F                     	;# 
   630  0E90                     	;# 
   631  0E91                     	;# 
   632  0E92                     	;# 
   633  0E93                     	;# 
   634  0E94                     	;# 
   635  0E94                     	;# 
   636  0E95                     	;# 
   637  0E96                     	;# 
   638  0E97                     	;# 
   639  0E98                     	;# 
   640  0E99                     	;# 
   641  0E9A                     	;# 
   642  0E9B                     	;# 
   643  0E9C                     	;# 
   644  0E9D                     	;# 
   645  0E9E                     	;# 
   646  0E9F                     	;# 
   647  0FE4                     	;# 
   648  0FE5                     	;# 
   649  0FE6                     	;# 
   650  0FE7                     	;# 
   651  0FE8                     	;# 
   652  0FE9                     	;# 
   653  0FEA                     	;# 
   654  0FEB                     	;# 
   655  0FED                     	;# 
   656  0FEE                     	;# 
   657  0FEF                     	;# 
   658  0000                     	;# 
   659  0001                     	;# 
   660  0002                     	;# 
   661  0003                     	;# 
   662  0004                     	;# 
   663  0005                     	;# 
   664  0006                     	;# 
   665  0007                     	;# 
   666  0008                     	;# 
   667  0009                     	;# 
   668  000A                     	;# 
   669  000B                     	;# 
   670  000C                     	;# 
   671  000D                     	;# 
   672  000E                     	;# 
   673  0011                     	;# 
   674  0012                     	;# 
   675  0015                     	;# 
   676  0016                     	;# 
   677  0016                     	;# 
   678  0017                     	;# 
   679  0018                     	;# 
   680  0019                     	;# 
   681  001A                     	;# 
   682  001B                     	;# 
   683  001C                     	;# 
   684  008C                     	;# 
   685  008D                     	;# 
   686  008E                     	;# 
   687  0091                     	;# 
   688  0092                     	;# 
   689  0095                     	;# 
   690  0096                     	;# 
   691  0097                     	;# 
   692  0098                     	;# 
   693  0099                     	;# 
   694  009A                     	;# 
   695  009B                     	;# 
   696  009B                     	;# 
   697  009C                     	;# 
   698  009D                     	;# 
   699  009E                     	;# 
   700  009F                     	;# 
   701  010C                     	;# 
   702  010D                     	;# 
   703  010E                     	;# 
   704  0111                     	;# 
   705  0112                     	;# 
   706  0113                     	;# 
   707  0114                     	;# 
   708  0115                     	;# 
   709  0116                     	;# 
   710  0117                     	;# 
   711  0118                     	;# 
   712  0119                     	;# 
   713  011D                     	;# 
   714  018C                     	;# 
   715  018D                     	;# 
   716  018E                     	;# 
   717  0191                     	;# 
   718  0191                     	;# 
   719  0192                     	;# 
   720  0193                     	;# 
   721  0193                     	;# 
   722  0194                     	;# 
   723  0195                     	;# 
   724  0196                     	;# 
   725  0197                     	;# 
   726  0199                     	;# 
   727  019A                     	;# 
   728  019B                     	;# 
   729  019B                     	;# 
   730  019C                     	;# 
   731  019D                     	;# 
   732  019E                     	;# 
   733  019F                     	;# 
   734  020C                     	;# 
   735  020D                     	;# 
   736  0211                     	;# 
   737  0211                     	;# 
   738  0212                     	;# 
   739  0212                     	;# 
   740  0213                     	;# 
   741  0213                     	;# 
   742  0214                     	;# 
   743  0214                     	;# 
   744  0215                     	;# 
   745  0215                     	;# 
   746  0215                     	;# 
   747  0216                     	;# 
   748  0216                     	;# 
   749  0217                     	;# 
   750  0217                     	;# 
   751  0391                     	;# 
   752  0392                     	;# 
   753  0393                     	;# 
   754  0394                     	;# 
   755  0395                     	;# 
   756  0396                     	;# 
   757  039A                     	;# 
   758  039B                     	;# 
   759  0611                     	;# 
   760  0612                     	;# 
   761  0613                     	;# 
   762  0613                     	;# 
   763  0614                     	;# 
   764  0615                     	;# 
   765  0616                     	;# 
   766  0616                     	;# 
   767  0691                     	;# 
   768  0692                     	;# 
   769  0693                     	;# 
   770  0694                     	;# 
   771  0695                     	;# 
   772  0E8E                     	;# 
   773  0E8F                     	;# 
   774  0E90                     	;# 
   775  0E91                     	;# 
   776  0E92                     	;# 
   777  0E93                     	;# 
   778  0E94                     	;# 
   779  0E94                     	;# 
   780  0E95                     	;# 
   781  0E96                     	;# 
   782  0E97                     	;# 
   783  0E98                     	;# 
   784  0E99                     	;# 
   785  0E9A                     	;# 
   786  0E9B                     	;# 
   787  0E9C                     	;# 
   788  0E9D                     	;# 
   789  0E9E                     	;# 
   790  0E9F                     	;# 
   791  0FE4                     	;# 
   792  0FE5                     	;# 
   793  0FE6                     	;# 
   794  0FE7                     	;# 
   795  0FE8                     	;# 
   796  0FE9                     	;# 
   797  0FEA                     	;# 
   798  0FEB                     	;# 
   799  0FED                     	;# 
   800  0FEE                     	;# 
   801  0FEF                     	;# 
   802  0000                     	;# 
   803  0001                     	;# 
   804  0002                     	;# 
   805  0003                     	;# 
   806  0004                     	;# 
   807  0005                     	;# 
   808  0006                     	;# 
   809  0007                     	;# 
   810  0008                     	;# 
   811  0009                     	;# 
   812  000A                     	;# 
   813  000B                     	;# 
   814  000C                     	;# 
   815  000D                     	;# 
   816  000E                     	;# 
   817  0011                     	;# 
   818  0012                     	;# 
   819  0015                     	;# 
   820  0016                     	;# 
   821  0016                     	;# 
   822  0017                     	;# 
   823  0018                     	;# 
   824  0019                     	;# 
   825  001A                     	;# 
   826  001B                     	;# 
   827  001C                     	;# 
   828  008C                     	;# 
   829  008D                     	;# 
   830  008E                     	;# 
   831  0091                     	;# 
   832  0092                     	;# 
   833  0095                     	;# 
   834  0096                     	;# 
   835  0097                     	;# 
   836  0098                     	;# 
   837  0099                     	;# 
   838  009A                     	;# 
   839  009B                     	;# 
   840  009B                     	;# 
   841  009C                     	;# 
   842  009D                     	;# 
   843  009E                     	;# 
   844  009F                     	;# 
   845  010C                     	;# 
   846  010D                     	;# 
   847  010E                     	;# 
   848  0111                     	;# 
   849  0112                     	;# 
   850  0113                     	;# 
   851  0114                     	;# 
   852  0115                     	;# 
   853  0116                     	;# 
   854  0117                     	;# 
   855  0118                     	;# 
   856  0119                     	;# 
   857  011D                     	;# 
   858  018C                     	;# 
   859  018D                     	;# 
   860  018E                     	;# 
   861  0191                     	;# 
   862  0191                     	;# 
   863  0192                     	;# 
   864  0193                     	;# 
   865  0193                     	;# 
   866  0194                     	;# 
   867  0195                     	;# 
   868  0196                     	;# 
   869  0197                     	;# 
   870  0199                     	;# 
   871  019A                     	;# 
   872  019B                     	;# 
   873  019B                     	;# 
   874  019C                     	;# 
   875  019D                     	;# 
   876  019E                     	;# 
   877  019F                     	;# 
   878  020C                     	;# 
   879  020D                     	;# 
   880  0211                     	;# 
   881  0211                     	;# 
   882  0212                     	;# 
   883  0212                     	;# 
   884  0213                     	;# 
   885  0213                     	;# 
   886  0214                     	;# 
   887  0214                     	;# 
   888  0215                     	;# 
   889  0215                     	;# 
   890  0215                     	;# 
   891  0216                     	;# 
   892  0216                     	;# 
   893  0217                     	;# 
   894  0217                     	;# 
   895  0391                     	;# 
   896  0392                     	;# 
   897  0393                     	;# 
   898  0394                     	;# 
   899  0395                     	;# 
   900  0396                     	;# 
   901  039A                     	;# 
   902  039B                     	;# 
   903  0611                     	;# 
   904  0612                     	;# 
   905  0613                     	;# 
   906  0613                     	;# 
   907  0614                     	;# 
   908  0615                     	;# 
   909  0616                     	;# 
   910  0616                     	;# 
   911  0691                     	;# 
   912  0692                     	;# 
   913  0693                     	;# 
   914  0694                     	;# 
   915  0695                     	;# 
   916  0E8E                     	;# 
   917  0E8F                     	;# 
   918  0E90                     	;# 
   919  0E91                     	;# 
   920  0E92                     	;# 
   921  0E93                     	;# 
   922  0E94                     	;# 
   923  0E94                     	;# 
   924  0E95                     	;# 
   925  0E96                     	;# 
   926  0E97                     	;# 
   927  0E98                     	;# 
   928  0E99                     	;# 
   929  0E9A                     	;# 
   930  0E9B                     	;# 
   931  0E9C                     	;# 
   932  0E9D                     	;# 
   933  0E9E                     	;# 
   934  0E9F                     	;# 
   935  0FE4                     	;# 
   936  0FE5                     	;# 
   937  0FE6                     	;# 
   938  0FE7                     	;# 
   939  0FE8                     	;# 
   940  0FE9                     	;# 
   941  0FEA                     	;# 
   942  0FEB                     	;# 
   943  0FED                     	;# 
   944  0FEE                     	;# 
   945  0FEF                     	;# 
   946  0000                     	;# 
   947  0001                     	;# 
   948  0002                     	;# 
   949  0003                     	;# 
   950  0004                     	;# 
   951  0005                     	;# 
   952  0006                     	;# 
   953  0007                     	;# 
   954  0008                     	;# 
   955  0009                     	;# 
   956  000A                     	;# 
   957  000B                     	;# 
   958  000C                     	;# 
   959  000D                     	;# 
   960  000E                     	;# 
   961  0011                     	;# 
   962  0012                     	;# 
   963  0015                     	;# 
   964  0016                     	;# 
   965  0016                     	;# 
   966  0017                     	;# 
   967  0018                     	;# 
   968  0019                     	;# 
   969  001A                     	;# 
   970  001B                     	;# 
   971  001C                     	;# 
   972  008C                     	;# 
   973  008D                     	;# 
   974  008E                     	;# 
   975  0091                     	;# 
   976  0092                     	;# 
   977  0095                     	;# 
   978  0096                     	;# 
   979  0097                     	;# 
   980  0098                     	;# 
   981  0099                     	;# 
   982  009A                     	;# 
   983  009B                     	;# 
   984  009B                     	;# 
   985  009C                     	;# 
   986  009D                     	;# 
   987  009E                     	;# 
   988  009F                     	;# 
   989  010C                     	;# 
   990  010D                     	;# 
   991  010E                     	;# 
   992  0111                     	;# 
   993  0112                     	;# 
   994  0113                     	;# 
   995  0114                     	;# 
   996  0115                     	;# 
   997  0116                     	;# 
   998  0117                     	;# 
   999  0118                     	;# 
  1000  0119                     	;# 
  1001  011D                     	;# 
  1002  018C                     	;# 
  1003  018D                     	;# 
  1004  018E                     	;# 
  1005  0191                     	;# 
  1006  0191                     	;# 
  1007  0192                     	;# 
  1008  0193                     	;# 
  1009  0193                     	;# 
  1010  0194                     	;# 
  1011  0195                     	;# 
  1012  0196                     	;# 
  1013  0197                     	;# 
  1014  0199                     	;# 
  1015  019A                     	;# 
  1016  019B                     	;# 
  1017  019B                     	;# 
  1018  019C                     	;# 
  1019  019D                     	;# 
  1020  019E                     	;# 
  1021  019F                     	;# 
  1022  020C                     	;# 
  1023  020D                     	;# 
  1024  0211                     	;# 
  1025  0211                     	;# 
  1026  0212                     	;# 
  1027  0212                     	;# 
  1028  0213                     	;# 
  1029  0213                     	;# 
  1030  0214                     	;# 
  1031  0214                     	;# 
  1032  0215                     	;# 
  1033  0215                     	;# 
  1034  0215                     	;# 
  1035  0216                     	;# 
  1036  0216                     	;# 
  1037  0217                     	;# 
  1038  0217                     	;# 
  1039  0391                     	;# 
  1040  0392                     	;# 
  1041  0393                     	;# 
  1042  0394                     	;# 
  1043  0395                     	;# 
  1044  0396                     	;# 
  1045  039A                     	;# 
  1046  039B                     	;# 
  1047  0611                     	;# 
  1048  0612                     	;# 
  1049  0613                     	;# 
  1050  0613                     	;# 
  1051  0614                     	;# 
  1052  0615                     	;# 
  1053  0616                     	;# 
  1054  0616                     	;# 
  1055  0691                     	;# 
  1056  0692                     	;# 
  1057  0693                     	;# 
  1058  0694                     	;# 
  1059  0695                     	;# 
  1060  0E8E                     	;# 
  1061  0E8F                     	;# 
  1062  0E90                     	;# 
  1063  0E91                     	;# 
  1064  0E92                     	;# 
  1065  0E93                     	;# 
  1066  0E94                     	;# 
  1067  0E94                     	;# 
  1068  0E95                     	;# 
  1069  0E96                     	;# 
  1070  0E97                     	;# 
  1071  0E98                     	;# 
  1072  0E99                     	;# 
  1073  0E9A                     	;# 
  1074  0E9B                     	;# 
  1075  0E9C                     	;# 
  1076  0E9D                     	;# 
  1077  0E9E                     	;# 
  1078  0E9F                     	;# 
  1079  0FE4                     	;# 
  1080  0FE5                     	;# 
  1081  0FE6                     	;# 
  1082  0FE7                     	;# 
  1083  0FE8                     	;# 
  1084  0FE9                     	;# 
  1085  0FEA                     	;# 
  1086  0FEB                     	;# 
  1087  0FED                     	;# 
  1088  0FEE                     	;# 
  1089  0FEF                     	;# 
  1090  0000                     	;# 
  1091  0001                     	;# 
  1092  0002                     	;# 
  1093  0003                     	;# 
  1094  0004                     	;# 
  1095  0005                     	;# 
  1096  0006                     	;# 
  1097  0007                     	;# 
  1098  0008                     	;# 
  1099  0009                     	;# 
  1100  000A                     	;# 
  1101  000B                     	;# 
  1102  000C                     	;# 
  1103  000D                     	;# 
  1104  000E                     	;# 
  1105  0011                     	;# 
  1106  0012                     	;# 
  1107  0015                     	;# 
  1108  0016                     	;# 
  1109  0016                     	;# 
  1110  0017                     	;# 
  1111  0018                     	;# 
  1112  0019                     	;# 
  1113  001A                     	;# 
  1114  001B                     	;# 
  1115  001C                     	;# 
  1116  008C                     	;# 
  1117  008D                     	;# 
  1118  008E                     	;# 
  1119  0091                     	;# 
  1120  0092                     	;# 
  1121  0095                     	;# 
  1122  0096                     	;# 
  1123  0097                     	;# 
  1124  0098                     	;# 
  1125  0099                     	;# 
  1126  009A                     	;# 
  1127  009B                     	;# 
  1128  009B                     	;# 
  1129  009C                     	;# 
  1130  009D                     	;# 
  1131  009E                     	;# 
  1132  009F                     	;# 
  1133  010C                     	;# 
  1134  010D                     	;# 
  1135  010E                     	;# 
  1136  0111                     	;# 
  1137  0112                     	;# 
  1138  0113                     	;# 
  1139  0114                     	;# 
  1140  0115                     	;# 
  1141  0116                     	;# 
  1142  0117                     	;# 
  1143  0118                     	;# 
  1144  0119                     	;# 
  1145  011D                     	;# 
  1146  018C                     	;# 
  1147  018D                     	;# 
  1148  018E                     	;# 
  1149  0191                     	;# 
  1150  0191                     	;# 
  1151  0192                     	;# 
  1152  0193                     	;# 
  1153  0193                     	;# 
  1154  0194                     	;# 
  1155  0195                     	;# 
  1156  0196                     	;# 
  1157  0197                     	;# 
  1158  0199                     	;# 
  1159  019A                     	;# 
  1160  019B                     	;# 
  1161  019B                     	;# 
  1162  019C                     	;# 
  1163  019D                     	;# 
  1164  019E                     	;# 
  1165  019F                     	;# 
  1166  020C                     	;# 
  1167  020D                     	;# 
  1168  0211                     	;# 
  1169  0211                     	;# 
  1170  0212                     	;# 
  1171  0212                     	;# 
  1172  0213                     	;# 
  1173  0213                     	;# 
  1174  0214                     	;# 
  1175  0214                     	;# 
  1176  0215                     	;# 
  1177  0215                     	;# 
  1178  0215                     	;# 
  1179  0216                     	;# 
  1180  0216                     	;# 
  1181  0217                     	;# 
  1182  0217                     	;# 
  1183  0391                     	;# 
  1184  0392                     	;# 
  1185  0393                     	;# 
  1186  0394                     	;# 
  1187  0395                     	;# 
  1188  0396                     	;# 
  1189  039A                     	;# 
  1190  039B                     	;# 
  1191  0611                     	;# 
  1192  0612                     	;# 
  1193  0613                     	;# 
  1194  0613                     	;# 
  1195  0614                     	;# 
  1196  0615                     	;# 
  1197  0616                     	;# 
  1198  0616                     	;# 
  1199  0691                     	;# 
  1200  0692                     	;# 
  1201  0693                     	;# 
  1202  0694                     	;# 
  1203  0695                     	;# 
  1204  0E8E                     	;# 
  1205  0E8F                     	;# 
  1206  0E90                     	;# 
  1207  0E91                     	;# 
  1208  0E92                     	;# 
  1209  0E93                     	;# 
  1210  0E94                     	;# 
  1211  0E94                     	;# 
  1212  0E95                     	;# 
  1213  0E96                     	;# 
  1214  0E97                     	;# 
  1215  0E98                     	;# 
  1216  0E99                     	;# 
  1217  0E9A                     	;# 
  1218  0E9B                     	;# 
  1219  0E9C                     	;# 
  1220  0E9D                     	;# 
  1221  0E9E                     	;# 
  1222  0E9F                     	;# 
  1223  0FE4                     	;# 
  1224  0FE5                     	;# 
  1225  0FE6                     	;# 
  1226  0FE7                     	;# 
  1227  0FE8                     	;# 
  1228  0FE9                     	;# 
  1229  0FEA                     	;# 
  1230  0FEB                     	;# 
  1231  0FED                     	;# 
  1232  0FEE                     	;# 
  1233  0FEF                     	;# 
  1234  0000                     	;# 
  1235  0001                     	;# 
  1236  0002                     	;# 
  1237  0003                     	;# 
  1238  0004                     	;# 
  1239  0005                     	;# 
  1240  0006                     	;# 
  1241  0007                     	;# 
  1242  0008                     	;# 
  1243  0009                     	;# 
  1244  000A                     	;# 
  1245  000B                     	;# 
  1246  000C                     	;# 
  1247  000D                     	;# 
  1248  000E                     	;# 
  1249  0011                     	;# 
  1250  0012                     	;# 
  1251  0015                     	;# 
  1252  0016                     	;# 
  1253  0016                     	;# 
  1254  0017                     	;# 
  1255  0018                     	;# 
  1256  0019                     	;# 
  1257  001A                     	;# 
  1258  001B                     	;# 
  1259  001C                     	;# 
  1260  008C                     	;# 
  1261  008D                     	;# 
  1262  008E                     	;# 
  1263  0091                     	;# 
  1264  0092                     	;# 
  1265  0095                     	;# 
  1266  0096                     	;# 
  1267  0097                     	;# 
  1268  0098                     	;# 
  1269  0099                     	;# 
  1270  009A                     	;# 
  1271  009B                     	;# 
  1272  009B                     	;# 
  1273  009C                     	;# 
  1274  009D                     	;# 
  1275  009E                     	;# 
  1276  009F                     	;# 
  1277  010C                     	;# 
  1278  010D                     	;# 
  1279  010E                     	;# 
  1280  0111                     	;# 
  1281  0112                     	;# 
  1282  0113                     	;# 
  1283  0114                     	;# 
  1284  0115                     	;# 
  1285  0116                     	;# 
  1286  0117                     	;# 
  1287  0118                     	;# 
  1288  0119                     	;# 
  1289  011D                     	;# 
  1290  018C                     	;# 
  1291  018D                     	;# 
  1292  018E                     	;# 
  1293  0191                     	;# 
  1294  0191                     	;# 
  1295  0192                     	;# 
  1296  0193                     	;# 
  1297  0193                     	;# 
  1298  0194                     	;# 
  1299  0195                     	;# 
  1300  0196                     	;# 
  1301  0197                     	;# 
  1302  0199                     	;# 
  1303  019A                     	;# 
  1304  019B                     	;# 
  1305  019B                     	;# 
  1306  019C                     	;# 
  1307  019D                     	;# 
  1308  019E                     	;# 
  1309  019F                     	;# 
  1310  020C                     	;# 
  1311  020D                     	;# 
  1312  0211                     	;# 
  1313  0211                     	;# 
  1314  0212                     	;# 
  1315  0212                     	;# 
  1316  0213                     	;# 
  1317  0213                     	;# 
  1318  0214                     	;# 
  1319  0214                     	;# 
  1320  0215                     	;# 
  1321  0215                     	;# 
  1322  0215                     	;# 
  1323  0216                     	;# 
  1324  0216                     	;# 
  1325  0217                     	;# 
  1326  0217                     	;# 
  1327  0391                     	;# 
  1328  0392                     	;# 
  1329  0393                     	;# 
  1330  0394                     	;# 
  1331  0395                     	;# 
  1332  0396                     	;# 
  1333  039A                     	;# 
  1334  039B                     	;# 
  1335  0611                     	;# 
  1336  0612                     	;# 
  1337  0613                     	;# 
  1338  0613                     	;# 
  1339  0614                     	;# 
  1340  0615                     	;# 
  1341  0616                     	;# 
  1342  0616                     	;# 
  1343  0691                     	;# 
  1344  0692                     	;# 
  1345  0693                     	;# 
  1346  0694                     	;# 
  1347  0695                     	;# 
  1348  0E8E                     	;# 
  1349  0E8F                     	;# 
  1350  0E90                     	;# 
  1351  0E91                     	;# 
  1352  0E92                     	;# 
  1353  0E93                     	;# 
  1354  0E94                     	;# 
  1355  0E94                     	;# 
  1356  0E95                     	;# 
  1357  0E96                     	;# 
  1358  0E97                     	;# 
  1359  0E98                     	;# 
  1360  0E99                     	;# 
  1361  0E9A                     	;# 
  1362  0E9B                     	;# 
  1363  0E9C                     	;# 
  1364  0E9D                     	;# 
  1365  0E9E                     	;# 
  1366  0E9F                     	;# 
  1367  0FE4                     	;# 
  1368  0FE5                     	;# 
  1369  0FE6                     	;# 
  1370  0FE7                     	;# 
  1371  0FE8                     	;# 
  1372  0FE9                     	;# 
  1373  0FEA                     	;# 
  1374  0FEB                     	;# 
  1375  0FED                     	;# 
  1376  0FEE                     	;# 
  1377  0FEF                     	;# 
  1378  0000                     	;# 
  1379  0001                     	;# 
  1380  0002                     	;# 
  1381  0003                     	;# 
  1382  0004                     	;# 
  1383  0005                     	;# 
  1384  0006                     	;# 
  1385  0007                     	;# 
  1386  0008                     	;# 
  1387  0009                     	;# 
  1388  000A                     	;# 
  1389  000B                     	;# 
  1390  000C                     	;# 
  1391  000D                     	;# 
  1392  000E                     	;# 
  1393  0011                     	;# 
  1394  0012                     	;# 
  1395  0015                     	;# 
  1396  0016                     	;# 
  1397  0016                     	;# 
  1398  0017                     	;# 
  1399  0018                     	;# 
  1400  0019                     	;# 
  1401  001A                     	;# 
  1402  001B                     	;# 
  1403  001C                     	;# 
  1404  008C                     	;# 
  1405  008D                     	;# 
  1406  008E                     	;# 
  1407  0091                     	;# 
  1408  0092                     	;# 
  1409  0095                     	;# 
  1410  0096                     	;# 
  1411  0097                     	;# 
  1412  0098                     	;# 
  1413  0099                     	;# 
  1414  009A                     	;# 
  1415  009B                     	;# 
  1416  009B                     	;# 
  1417  009C                     	;# 
  1418  009D                     	;# 
  1419  009E                     	;# 
  1420  009F                     	;# 
  1421  010C                     	;# 
  1422  010D                     	;# 
  1423  010E                     	;# 
  1424  0111                     	;# 
  1425  0112                     	;# 
  1426  0113                     	;# 
  1427  0114                     	;# 
  1428  0115                     	;# 
  1429  0116                     	;# 
  1430  0117                     	;# 
  1431  0118                     	;# 
  1432  0119                     	;# 
  1433  011D                     	;# 
  1434  018C                     	;# 
  1435  018D                     	;# 
  1436  018E                     	;# 
  1437  0191                     	;# 
  1438  0191                     	;# 
  1439  0192                     	;# 
  1440  0193                     	;# 
  1441  0193                     	;# 
  1442  0194                     	;# 
  1443  0195                     	;# 
  1444  0196                     	;# 
  1445  0197                     	;# 
  1446  0199                     	;# 
  1447  019A                     	;# 
  1448  019B                     	;# 
  1449  019B                     	;# 
  1450  019C                     	;# 
  1451  019D                     	;# 
  1452  019E                     	;# 
  1453  019F                     	;# 
  1454  020C                     	;# 
  1455  020D                     	;# 
  1456  0211                     	;# 
  1457  0211                     	;# 
  1458  0212                     	;# 
  1459  0212                     	;# 
  1460  0213                     	;# 
  1461  0213                     	;# 
  1462  0214                     	;# 
  1463  0214                     	;# 
  1464  0215                     	;# 
  1465  0215                     	;# 
  1466  0215                     	;# 
  1467  0216                     	;# 
  1468  0216                     	;# 
  1469  0217                     	;# 
  1470  0217                     	;# 
  1471  0391                     	;# 
  1472  0392                     	;# 
  1473  0393                     	;# 
  1474  0394                     	;# 
  1475  0395                     	;# 
  1476  0396                     	;# 
  1477  039A                     	;# 
  1478  039B                     	;# 
  1479  0611                     	;# 
  1480  0612                     	;# 
  1481  0613                     	;# 
  1482  0613                     	;# 
  1483  0614                     	;# 
  1484  0615                     	;# 
  1485  0616                     	;# 
  1486  0616                     	;# 
  1487  0691                     	;# 
  1488  0692                     	;# 
  1489  0693                     	;# 
  1490  0694                     	;# 
  1491  0695                     	;# 
  1492  0E8E                     	;# 
  1493  0E8F                     	;# 
  1494  0E90                     	;# 
  1495  0E91                     	;# 
  1496  0E92                     	;# 
  1497  0E93                     	;# 
  1498  0E94                     	;# 
  1499  0E94                     	;# 
  1500  0E95                     	;# 
  1501  0E96                     	;# 
  1502  0E97                     	;# 
  1503  0E98                     	;# 
  1504  0E99                     	;# 
  1505  0E9A                     	;# 
  1506  0E9B                     	;# 
  1507  0E9C                     	;# 
  1508  0E9D                     	;# 
  1509  0E9E                     	;# 
  1510  0E9F                     	;# 
  1511  0FE4                     	;# 
  1512  0FE5                     	;# 
  1513  0FE6                     	;# 
  1514  0FE7                     	;# 
  1515  0FE8                     	;# 
  1516  0FE9                     	;# 
  1517  0FEA                     	;# 
  1518  0FEB                     	;# 
  1519  0FED                     	;# 
  1520  0FEE                     	;# 
  1521  0FEF                     	;# 
  1522  0000                     	;# 
  1523  0001                     	;# 
  1524  0002                     	;# 
  1525  0003                     	;# 
  1526  0004                     	;# 
  1527  0005                     	;# 
  1528  0006                     	;# 
  1529  0007                     	;# 
  1530  0008                     	;# 
  1531  0009                     	;# 
  1532  000A                     	;# 
  1533  000B                     	;# 
  1534  000C                     	;# 
  1535  000D                     	;# 
  1536  000E                     	;# 
  1537  0011                     	;# 
  1538  0012                     	;# 
  1539  0015                     	;# 
  1540  0016                     	;# 
  1541  0016                     	;# 
  1542  0017                     	;# 
  1543  0018                     	;# 
  1544  0019                     	;# 
  1545  001A                     	;# 
  1546  001B                     	;# 
  1547  001C                     	;# 
  1548  008C                     	;# 
  1549  008D                     	;# 
  1550  008E                     	;# 
  1551  0091                     	;# 
  1552  0092                     	;# 
  1553  0095                     	;# 
  1554  0096                     	;# 
  1555  0097                     	;# 
  1556  0098                     	;# 
  1557  0099                     	;# 
  1558  009A                     	;# 
  1559  009B                     	;# 
  1560  009B                     	;# 
  1561  009C                     	;# 
  1562  009D                     	;# 
  1563  009E                     	;# 
  1564  009F                     	;# 
  1565  010C                     	;# 
  1566  010D                     	;# 
  1567  010E                     	;# 
  1568  0111                     	;# 
  1569  0112                     	;# 
  1570  0113                     	;# 
  1571  0114                     	;# 
  1572  0115                     	;# 
  1573  0116                     	;# 
  1574  0117                     	;# 
  1575  0118                     	;# 
  1576  0119                     	;# 
  1577  011D                     	;# 
  1578  018C                     	;# 
  1579  018D                     	;# 
  1580  018E                     	;# 
  1581  0191                     	;# 
  1582  0191                     	;# 
  1583  0192                     	;# 
  1584  0193                     	;# 
  1585  0193                     	;# 
  1586  0194                     	;# 
  1587  0195                     	;# 
  1588  0196                     	;# 
  1589  0197                     	;# 
  1590  0199                     	;# 
  1591  019A                     	;# 
  1592  019B                     	;# 
  1593  019B                     	;# 
  1594  019C                     	;# 
  1595  019D                     	;# 
  1596  019E                     	;# 
  1597  019F                     	;# 
  1598  020C                     	;# 
  1599  020D                     	;# 
  1600  0211                     	;# 
  1601  0211                     	;# 
  1602  0212                     	;# 
  1603  0212                     	;# 
  1604  0213                     	;# 
  1605  0213                     	;# 
  1606  0214                     	;# 
  1607  0214                     	;# 
  1608  0215                     	;# 
  1609  0215                     	;# 
  1610  0215                     	;# 
  1611  0216                     	;# 
  1612  0216                     	;# 
  1613  0217                     	;# 
  1614  0217                     	;# 
  1615  0391                     	;# 
  1616  0392                     	;# 
  1617  0393                     	;# 
  1618  0394                     	;# 
  1619  0395                     	;# 
  1620  0396                     	;# 
  1621  039A                     	;# 
  1622  039B                     	;# 
  1623  0611                     	;# 
  1624  0612                     	;# 
  1625  0613                     	;# 
  1626  0613                     	;# 
  1627  0614                     	;# 
  1628  0615                     	;# 
  1629  0616                     	;# 
  1630  0616                     	;# 
  1631  0691                     	;# 
  1632  0692                     	;# 
  1633  0693                     	;# 
  1634  0694                     	;# 
  1635  0695                     	;# 
  1636  0E8E                     	;# 
  1637  0E8F                     	;# 
  1638  0E90                     	;# 
  1639  0E91                     	;# 
  1640  0E92                     	;# 
  1641  0E93                     	;# 
  1642  0E94                     	;# 
  1643  0E94                     	;# 
  1644  0E95                     	;# 
  1645  0E96                     	;# 
  1646  0E97                     	;# 
  1647  0E98                     	;# 
  1648  0E99                     	;# 
  1649  0E9A                     	;# 
  1650  0E9B                     	;# 
  1651  0E9C                     	;# 
  1652  0E9D                     	;# 
  1653  0E9E                     	;# 
  1654  0E9F                     	;# 
  1655  0FE4                     	;# 
  1656  0FE5                     	;# 
  1657  0FE6                     	;# 
  1658  0FE7                     	;# 
  1659  0FE8                     	;# 
  1660  0FE9                     	;# 
  1661  0FEA                     	;# 
  1662  0FEB                     	;# 
  1663  0FED                     	;# 
  1664  0FEE                     	;# 
  1665  0FEF                     	;# 
  1666  0000                     	;# 
  1667  0001                     	;# 
  1668  0002                     	;# 
  1669  0003                     	;# 
  1670  0004                     	;# 
  1671  0005                     	;# 
  1672  0006                     	;# 
  1673  0007                     	;# 
  1674  0008                     	;# 
  1675  0009                     	;# 
  1676  000A                     	;# 
  1677  000B                     	;# 
  1678  000C                     	;# 
  1679  000D                     	;# 
  1680  000E                     	;# 
  1681  0011                     	;# 
  1682  0012                     	;# 
  1683  0015                     	;# 
  1684  0016                     	;# 
  1685  0016                     	;# 
  1686  0017                     	;# 
  1687  0018                     	;# 
  1688  0019                     	;# 
  1689  001A                     	;# 
  1690  001B                     	;# 
  1691  001C                     	;# 
  1692  008C                     	;# 
  1693  008D                     	;# 
  1694  008E                     	;# 
  1695  0091                     	;# 
  1696  0092                     	;# 
  1697  0095                     	;# 
  1698  0096                     	;# 
  1699  0097                     	;# 
  1700  0098                     	;# 
  1701  0099                     	;# 
  1702  009A                     	;# 
  1703  009B                     	;# 
  1704  009B                     	;# 
  1705  009C                     	;# 
  1706  009D                     	;# 
  1707  009E                     	;# 
  1708  009F                     	;# 
  1709  010C                     	;# 
  1710  010D                     	;# 
  1711  010E                     	;# 
  1712  0111                     	;# 
  1713  0112                     	;# 
  1714  0113                     	;# 
  1715  0114                     	;# 
  1716  0115                     	;# 
  1717  0116                     	;# 
  1718  0117                     	;# 
  1719  0118                     	;# 
  1720  0119                     	;# 
  1721  011D                     	;# 
  1722  018C                     	;# 
  1723  018D                     	;# 
  1724  018E                     	;# 
  1725  0191                     	;# 
  1726  0191                     	;# 
  1727  0192                     	;# 
  1728  0193                     	;# 
  1729  0193                     	;# 
  1730  0194                     	;# 
  1731  0195                     	;# 
  1732  0196                     	;# 
  1733  0197                     	;# 
  1734  0199                     	;# 
  1735  019A                     	;# 
  1736  019B                     	;# 
  1737  019B                     	;# 
  1738  019C                     	;# 
  1739  019D                     	;# 
  1740  019E                     	;# 
  1741  019F                     	;# 
  1742  020C                     	;# 
  1743  020D                     	;# 
  1744  0211                     	;# 
  1745  0211                     	;# 
  1746  0212                     	;# 
  1747  0212                     	;# 
  1748  0213                     	;# 
  1749  0213                     	;# 
  1750  0214                     	;# 
  1751  0214                     	;# 
  1752  0215                     	;# 
  1753  0215                     	;# 
  1754  0215                     	;# 
  1755  0216                     	;# 
  1756  0216                     	;# 
  1757  0217                     	;# 
  1758  0217                     	;# 
  1759  0391                     	;# 
  1760  0392                     	;# 
  1761  0393                     	;# 
  1762  0394                     	;# 
  1763  0395                     	;# 
  1764  0396                     	;# 
  1765  039A                     	;# 
  1766  039B                     	;# 
  1767  0611                     	;# 
  1768  0612                     	;# 
  1769  0613                     	;# 
  1770  0613                     	;# 
  1771  0614                     	;# 
  1772  0615                     	;# 
  1773  0616                     	;# 
  1774  0616                     	;# 
  1775  0691                     	;# 
  1776  0692                     	;# 
  1777  0693                     	;# 
  1778  0694                     	;# 
  1779  0695                     	;# 
  1780  0E8E                     	;# 
  1781  0E8F                     	;# 
  1782  0E90                     	;# 
  1783  0E91                     	;# 
  1784  0E92                     	;# 
  1785  0E93                     	;# 
  1786  0E94                     	;# 
  1787  0E94                     	;# 
  1788  0E95                     	;# 
  1789  0E96                     	;# 
  1790  0E97                     	;# 
  1791  0E98                     	;# 
  1792  0E99                     	;# 
  1793  0E9A                     	;# 
  1794  0E9B                     	;# 
  1795  0E9C                     	;# 
  1796  0E9D                     	;# 
  1797  0E9E                     	;# 
  1798  0E9F                     	;# 
  1799  0FE4                     	;# 
  1800  0FE5                     	;# 
  1801  0FE6                     	;# 
  1802  0FE7                     	;# 
  1803  0FE8                     	;# 
  1804  0FE9                     	;# 
  1805  0FEA                     	;# 
  1806  0FEB                     	;# 
  1807  0FED                     	;# 
  1808  0FEE                     	;# 
  1809  0FEF                     	;# 
  1810  0000                     	;# 
  1811  0001                     	;# 
  1812  0002                     	;# 
  1813  0003                     	;# 
  1814  0004                     	;# 
  1815  0005                     	;# 
  1816  0006                     	;# 
  1817  0007                     	;# 
  1818  0008                     	;# 
  1819  0009                     	;# 
  1820  000A                     	;# 
  1821  000B                     	;# 
  1822  000C                     	;# 
  1823  000D                     	;# 
  1824  000E                     	;# 
  1825  0011                     	;# 
  1826  0012                     	;# 
  1827  0015                     	;# 
  1828  0016                     	;# 
  1829  0016                     	;# 
  1830  0017                     	;# 
  1831  0018                     	;# 
  1832  0019                     	;# 
  1833  001A                     	;# 
  1834  001B                     	;# 
  1835  001C                     	;# 
  1836  008C                     	;# 
  1837  008D                     	;# 
  1838  008E                     	;# 
  1839  0091                     	;# 
  1840  0092                     	;# 
  1841  0095                     	;# 
  1842  0096                     	;# 
  1843  0097                     	;# 
  1844  0098                     	;# 
  1845  0099                     	;# 
  1846  009A                     	;# 
  1847  009B                     	;# 
  1848  009B                     	;# 
  1849  009C                     	;# 
  1850  009D                     	;# 
  1851  009E                     	;# 
  1852  009F                     	;# 
  1853  010C                     	;# 
  1854  010D                     	;# 
  1855  010E                     	;# 
  1856  0111                     	;# 
  1857  0112                     	;# 
  1858  0113                     	;# 
  1859  0114                     	;# 
  1860  0115                     	;# 
  1861  0116                     	;# 
  1862  0117                     	;# 
  1863  0118                     	;# 
  1864  0119                     	;# 
  1865  011D                     	;# 
  1866  018C                     	;# 
  1867  018D                     	;# 
  1868  018E                     	;# 
  1869  0191                     	;# 
  1870  0191                     	;# 
  1871  0192                     	;# 
  1872  0193                     	;# 
  1873  0193                     	;# 
  1874  0194                     	;# 
  1875  0195                     	;# 
  1876  0196                     	;# 
  1877  0197                     	;# 
  1878  0199                     	;# 
  1879  019A                     	;# 
  1880  019B                     	;# 
  1881  019B                     	;# 
  1882  019C                     	;# 
  1883  019D                     	;# 
  1884  019E                     	;# 
  1885  019F                     	;# 
  1886  020C                     	;# 
  1887  020D                     	;# 
  1888  0211                     	;# 
  1889  0211                     	;# 
  1890  0212                     	;# 
  1891  0212                     	;# 
  1892  0213                     	;# 
  1893  0213                     	;# 
  1894  0214                     	;# 
  1895  0214                     	;# 
  1896  0215                     	;# 
  1897  0215                     	;# 
  1898  0215                     	;# 
  1899  0216                     	;# 
  1900  0216                     	;# 
  1901  0217                     	;# 
  1902  0217                     	;# 
  1903  0391                     	;# 
  1904  0392                     	;# 
  1905  0393                     	;# 
  1906  0394                     	;# 
  1907  0395                     	;# 
  1908  0396                     	;# 
  1909  039A                     	;# 
  1910  039B                     	;# 
  1911  0611                     	;# 
  1912  0612                     	;# 
  1913  0613                     	;# 
  1914  0613                     	;# 
  1915  0614                     	;# 
  1916  0615                     	;# 
  1917  0616                     	;# 
  1918  0616                     	;# 
  1919  0691                     	;# 
  1920  0692                     	;# 
  1921  0693                     	;# 
  1922  0694                     	;# 
  1923  0695                     	;# 
  1924  0E8E                     	;# 
  1925  0E8F                     	;# 
  1926  0E90                     	;# 
  1927  0E91                     	;# 
  1928  0E92                     	;# 
  1929  0E93                     	;# 
  1930  0E94                     	;# 
  1931  0E94                     	;# 
  1932  0E95                     	;# 
  1933  0E96                     	;# 
  1934  0E97                     	;# 
  1935  0E98                     	;# 
  1936  0E99                     	;# 
  1937  0E9A                     	;# 
  1938  0E9B                     	;# 
  1939  0E9C                     	;# 
  1940  0E9D                     	;# 
  1941  0E9E                     	;# 
  1942  0E9F                     	;# 
  1943  0FE4                     	;# 
  1944  0FE5                     	;# 
  1945  0FE6                     	;# 
  1946  0FE7                     	;# 
  1947  0FE8                     	;# 
  1948  0FE9                     	;# 
  1949  0FEA                     	;# 
  1950  0FEB                     	;# 
  1951  0FED                     	;# 
  1952  0FEE                     	;# 
  1953  0FEF                     	;# 
  1954  0000                     	;# 
  1955  0001                     	;# 
  1956  0002                     	;# 
  1957  0003                     	;# 
  1958  0004                     	;# 
  1959  0005                     	;# 
  1960  0006                     	;# 
  1961  0007                     	;# 
  1962  0008                     	;# 
  1963  0009                     	;# 
  1964  000A                     	;# 
  1965  000B                     	;# 
  1966  000C                     	;# 
  1967  000D                     	;# 
  1968  000E                     	;# 
  1969  0011                     	;# 
  1970  0012                     	;# 
  1971  0015                     	;# 
  1972  0016                     	;# 
  1973  0016                     	;# 
  1974  0017                     	;# 
  1975  0018                     	;# 
  1976  0019                     	;# 
  1977  001A                     	;# 
  1978  001B                     	;# 
  1979  001C                     	;# 
  1980  008C                     	;# 
  1981  008D                     	;# 
  1982  008E                     	;# 
  1983  0091                     	;# 
  1984  0092                     	;# 
  1985  0095                     	;# 
  1986  0096                     	;# 
  1987  0097                     	;# 
  1988  0098                     	;# 
  1989  0099                     	;# 
  1990  009A                     	;# 
  1991  009B                     	;# 
  1992  009B                     	;# 
  1993  009C                     	;# 
  1994  009D                     	;# 
  1995  009E                     	;# 
  1996  009F                     	;# 
  1997  010C                     	;# 
  1998  010D                     	;# 
  1999  010E                     	;# 
  2000  0111                     	;# 
  2001  0112                     	;# 
  2002  0113                     	;# 
  2003  0114                     	;# 
  2004  0115                     	;# 
  2005  0116                     	;# 
  2006  0117                     	;# 
  2007  0118                     	;# 
  2008  0119                     	;# 
  2009  011D                     	;# 
  2010  018C                     	;# 
  2011  018D                     	;# 
  2012  018E                     	;# 
  2013  0191                     	;# 
  2014  0191                     	;# 
  2015  0192                     	;# 
  2016  0193                     	;# 
  2017  0193                     	;# 
  2018  0194                     	;# 
  2019  0195                     	;# 
  2020  0196                     	;# 
  2021  0197                     	;# 
  2022  0199                     	;# 
  2023  019A                     	;# 
  2024  019B                     	;# 
  2025  019B                     	;# 
  2026  019C                     	;# 
  2027  019D                     	;# 
  2028  019E                     	;# 
  2029  019F                     	;# 
  2030  020C                     	;# 
  2031  020D                     	;# 
  2032  0211                     	;# 
  2033  0211                     	;# 
  2034  0212                     	;# 
  2035  0212                     	;# 
  2036  0213                     	;# 
  2037  0213                     	;# 
  2038  0214                     	;# 
  2039  0214                     	;# 
  2040  0215                     	;# 
  2041  0215                     	;# 
  2042  0215                     	;# 
  2043  0216                     	;# 
  2044  0216                     	;# 
  2045  0217                     	;# 
  2046  0217                     	;# 
  2047  0391                     	;# 
  2048  0392                     	;# 
  2049  0393                     	;# 
  2050  0394                     	;# 
  2051  0395                     	;# 
  2052  0396                     	;# 
  2053  039A                     	;# 
  2054  039B                     	;# 
  2055  0611                     	;# 
  2056  0612                     	;# 
  2057  0613                     	;# 
  2058  0613                     	;# 
  2059  0614                     	;# 
  2060  0615                     	;# 
  2061  0616                     	;# 
  2062  0616                     	;# 
  2063  0691                     	;# 
  2064  0692                     	;# 
  2065  0693                     	;# 
  2066  0694                     	;# 
  2067  0695                     	;# 
  2068  0E8E                     	;# 
  2069  0E8F                     	;# 
  2070  0E90                     	;# 
  2071  0E91                     	;# 
  2072  0E92                     	;# 
  2073  0E93                     	;# 
  2074  0E94                     	;# 
  2075  0E94                     	;# 
  2076  0E95                     	;# 
  2077  0E96                     	;# 
  2078  0E97                     	;# 
  2079  0E98                     	;# 
  2080  0E99                     	;# 
  2081  0E9A                     	;# 
  2082  0E9B                     	;# 
  2083  0E9C                     	;# 
  2084  0E9D                     	;# 
  2085  0E9E                     	;# 
  2086  0E9F                     	;# 
  2087  0FE4                     	;# 
  2088  0FE5                     	;# 
  2089  0FE6                     	;# 
  2090  0FE7                     	;# 
  2091  0FE8                     	;# 
  2092  0FE9                     	;# 
  2093  0FEA                     	;# 
  2094  0FEB                     	;# 
  2095  0FED                     	;# 
  2096  0FEE                     	;# 
  2097  0FEF                     	;# 
  2098                           
  2099                           	psect	stringtext
  2100  0141                     __pstringtext:	
  2101  0141                     process_level@idx_midi_map:	
  2102  0141  343F               	retlw	63
  2103  0142  3418               	retlw	24
  2104  0143  3418               	retlw	24
  2105  0144  3418               	retlw	24
  2106  0145  3418               	retlw	24
  2107  0146  3447               	retlw	71
  2108  0147  3418               	retlw	24
  2109  0148  3418               	retlw	24
  2110  0149  3418               	retlw	24
  2111  014A  3418               	retlw	24
  2112  014B  3418               	retlw	24
  2113  014C  3418               	retlw	24
  2114  014D  3418               	retlw	24
  2115  014E  3444               	retlw	68
  2116  014F  3445               	retlw	69
  2117  0150  3446               	retlw	70
  2118  0151  3431               	retlw	49
  2119  0152  3432               	retlw	50
  2120  0153  3418               	retlw	24
  2121  0154  3418               	retlw	24
  2122  0155  3430               	retlw	48
  2123  0156  3441               	retlw	65
  2124  0157  3442               	retlw	66
  2125  0158  3443               	retlw	67
  2126  0159  3418               	retlw	24
  2127  015A  3418               	retlw	24
  2128  015B  3436               	retlw	54
  2129  015C  3438               	retlw	56
  2130  015D  3434               	retlw	52
  2131  015E  343B               	retlw	59
  2132  015F  343D               	retlw	61
  2133  0160  3440               	retlw	64
  2134  0161  3433               	retlw	51
  2135  0162  3435               	retlw	53
  2136  0163  3437               	retlw	55
  2137  0164  3439               	retlw	57
  2138  0165  343A               	retlw	58
  2139  0166  343C               	retlw	60
  2140  0167  343E               	retlw	62
  2141  0168                     __end_ofprocess_level@idx_midi_map:	
  2142  0168                     _USB_SD_Ptr:	
  2143  0168  3439               	retlw	low (_sd000| (0+32768))
  2144  0169  3482               	retlw	high (_sd000| (0+32768))
  2145  016A  34D9               	retlw	low (_sd001| (0+32768))
  2146  016B  3481               	retlw	high (_sd001| (0+32768))
  2147  016C  340D               	retlw	low (_sd002| (0+32768))
  2148  016D  3482               	retlw	high (_sd002| (0+32768))
  2149  016E                     __end_of_USB_SD_Ptr:	
  2150  016E                     _USB_CD_Ptr:	
  2151  016E  3474               	retlw	low (_configDescriptor1| (0+32768))
  2152  016F  3481               	retlw	high (_configDescriptor1| (0+32768))
  2153  0170                     __end_of_USB_CD_Ptr:	
  2154  0170                     process_level@L:	
  2155  0170  340A               	retlw	10
  2156  0171                     __end_ofprocess_level@L:	
  2157  0171                     process_level@key_off_threshold:	
  2158  0171  3405               	retlw	5
  2159  0172                     __end_ofprocess_level@key_off_threshold:	
  2160  0172                     process_level@key_on_threshold:	
  2161  0172  3407               	retlw	7
  2162  0173                     __end_ofprocess_level@key_on_threshold:	
  2163  0173                     process_level@midi_shift:	
  2164  0173  3400               	retlw	0
  2165  0174                     __end_ofprocess_level@midi_shift:	
  2166  0174                     _configDescriptor1:	
  2167  0174  3409               	retlw	9
  2168  0175  3402               	retlw	2
  2169  0176  3465               	retlw	101
  2170  0177  3400               	retlw	0
  2171  0178  3402               	retlw	2
  2172  0179  3401               	retlw	1
  2173  017A  3400               	retlw	0
  2174  017B  34C0               	retlw	192
  2175  017C  3432               	retlw	50
  2176  017D  3409               	retlw	9
  2177  017E  3404               	retlw	4
  2178  017F  3400               	retlw	0
  2179  0180  3400               	retlw	0
  2180  0181  3400               	retlw	0
  2181  0182  3401               	retlw	1
  2182  0183  3401               	retlw	1
  2183  0184  3400               	retlw	0
  2184  0185  3400               	retlw	0
  2185  0186  3409               	retlw	9
  2186  0187  3424               	retlw	36
  2187  0188  3401               	retlw	1
  2188  0189  3400               	retlw	0
  2189  018A  3401               	retlw	1
  2190  018B  3409               	retlw	9
  2191  018C  3400               	retlw	0
  2192  018D  3401               	retlw	1
  2193  018E  3401               	retlw	1
  2194  018F  3409               	retlw	9
  2195  0190  3404               	retlw	4
  2196  0191  3401               	retlw	1
  2197  0192  3400               	retlw	0
  2198  0193  3402               	retlw	2
  2199  0194  3401               	retlw	1
  2200  0195  3403               	retlw	3
  2201  0196  3400               	retlw	0
  2202  0197  3400               	retlw	0
  2203  0198  3407               	retlw	7
  2204  0199  3424               	retlw	36
  2205  019A  3401               	retlw	1
  2206  019B  3400               	retlw	0
  2207  019C  3401               	retlw	1
  2208  019D  3441               	retlw	65
  2209  019E  3400               	retlw	0
  2210  019F  3406               	retlw	6
  2211  01A0  3424               	retlw	36
  2212  01A1  3402               	retlw	2
  2213  01A2  3401               	retlw	1
  2214  01A3  3401               	retlw	1
  2215  01A4  3400               	retlw	0
  2216  01A5  3406               	retlw	6
  2217  01A6  3424               	retlw	36
  2218  01A7  3402               	retlw	2
  2219  01A8  3402               	retlw	2
  2220  01A9  3402               	retlw	2
  2221  01AA  3400               	retlw	0
  2222  01AB  3409               	retlw	9
  2223  01AC  3424               	retlw	36
  2224  01AD  3403               	retlw	3
  2225  01AE  3401               	retlw	1
  2226  01AF  3403               	retlw	3
  2227  01B0  3401               	retlw	1
  2228  01B1  3402               	retlw	2
  2229  01B2  3401               	retlw	1
  2230  01B3  3400               	retlw	0
  2231  01B4  3409               	retlw	9
  2232  01B5  3424               	retlw	36
  2233  01B6  3403               	retlw	3
  2234  01B7  3402               	retlw	2
  2235  01B8  3404               	retlw	4
  2236  01B9  3401               	retlw	1
  2237  01BA  3401               	retlw	1
  2238  01BB  3401               	retlw	1
  2239  01BC  3400               	retlw	0
  2240  01BD  3409               	retlw	9
  2241  01BE  3405               	retlw	5
  2242  01BF  3401               	retlw	1
  2243  01C0  3402               	retlw	2
  2244  01C1  3440               	retlw	64
  2245  01C2  3400               	retlw	0
  2246  01C3  3400               	retlw	0
  2247  01C4  3400               	retlw	0
  2248  01C5  3400               	retlw	0
  2249  01C6  3405               	retlw	5
  2250  01C7  3425               	retlw	37
  2251  01C8  3401               	retlw	1
  2252  01C9  3401               	retlw	1
  2253  01CA  3401               	retlw	1
  2254  01CB  3409               	retlw	9
  2255  01CC  3405               	retlw	5
  2256  01CD  3481               	retlw	129
  2257  01CE  3402               	retlw	2
  2258  01CF  3440               	retlw	64
  2259  01D0  3400               	retlw	0
  2260  01D1  3400               	retlw	0
  2261  01D2  3400               	retlw	0
  2262  01D3  3400               	retlw	0
  2263  01D4  3405               	retlw	5
  2264  01D5  3425               	retlw	37
  2265  01D6  3401               	retlw	1
  2266  01D7  3401               	retlw	1
  2267  01D8  3403               	retlw	3
  2268  01D9                     __end_of_configDescriptor1:	
  2269  01D9                     _sd001:	
  2270  01D9  3434               	retlw	52
  2271  01DA  3403               	retlw	3
  2272  01DB  344D               	retlw	77
  2273  01DC  3400               	retlw	0
  2274  01DD  3469               	retlw	105
  2275  01DE  3400               	retlw	0
  2276  01DF  3463               	retlw	99
  2277  01E0  3400               	retlw	0
  2278  01E1  3472               	retlw	114
  2279  01E2  3400               	retlw	0
  2280  01E3  346F               	retlw	111
  2281  01E4  3400               	retlw	0
  2282  01E5  3463               	retlw	99
  2283  01E6  3400               	retlw	0
  2284  01E7  3468               	retlw	104
  2285  01E8  3400               	retlw	0
  2286  01E9  3469               	retlw	105
  2287  01EA  3400               	retlw	0
  2288  01EB  3470               	retlw	112
  2289  01EC  3400               	retlw	0
  2290  01ED  3420               	retlw	32
  2291  01EE  3400               	retlw	0
  2292  01EF  3454               	retlw	84
  2293  01F0  3400               	retlw	0
  2294  01F1  3465               	retlw	101
  2295  01F2  3400               	retlw	0
  2296  01F3  3463               	retlw	99
  2297  01F4  3400               	retlw	0
  2298  01F5  3468               	retlw	104
  2299  01F6  3400               	retlw	0
  2300  01F7  346E               	retlw	110
  2301  01F8  3400               	retlw	0
  2302  01F9  346F               	retlw	111
  2303  01FA  3400               	retlw	0
  2304  01FB  346C               	retlw	108
  2305  01FC  3400               	retlw	0
  2306  01FD  346F               	retlw	111
  2307  01FE  3400               	retlw	0
  2308  01FF  3467               	retlw	103
  2309  0200  3400               	retlw	0
  2310  0201  3479               	retlw	121
  2311  0202  3400               	retlw	0
  2312  0203  3420               	retlw	32
  2313  0204  3400               	retlw	0
  2314  0205  3449               	retlw	73
  2315  0206  3400               	retlw	0
  2316  0207  346E               	retlw	110
  2317  0208  3400               	retlw	0
  2318  0209  3463               	retlw	99
  2319  020A  3400               	retlw	0
  2320  020B  342E               	retlw	46
  2321  020C  3400               	retlw	0
  2322  020D                     __end_of_sd001:	
  2323  020D                     _sd002:	
  2324  020D  341A               	retlw	26
  2325  020E  3403               	retlw	3
  2326  020F  344D               	retlw	77
  2327  0210  3400               	retlw	0
  2328  0211  3449               	retlw	73
  2329  0212  3400               	retlw	0
  2330  0213  3444               	retlw	68
  2331  0214  3400               	retlw	0
  2332  0215  3449               	retlw	73
  2333  0216  3400               	retlw	0
  2334  0217  3420               	retlw	32
  2335  0218  3400               	retlw	0
  2336  0219  3445               	retlw	69
  2337  021A  3400               	retlw	0
  2338  021B  3478               	retlw	120
  2339  021C  3400               	retlw	0
  2340  021D  3461               	retlw	97
  2341  021E  3400               	retlw	0
  2342  021F  346D               	retlw	109
  2343  0220  3400               	retlw	0
  2344  0221  3470               	retlw	112
  2345  0222  3400               	retlw	0
  2346  0223  346C               	retlw	108
  2347  0224  3400               	retlw	0
  2348  0225  3465               	retlw	101
  2349  0226  3400               	retlw	0
  2350  0227                     __end_of_sd002:	
  2351  0227                     _device_dsc:	
  2352  0227  3412               	retlw	18
  2353  0228  3401               	retlw	1
  2354  0229  3400               	retlw	0
  2355  022A  3402               	retlw	2
  2356  022B  3400               	retlw	0
  2357  022C  3400               	retlw	0
  2358  022D  3400               	retlw	0
  2359  022E  3408               	retlw	8
  2360  022F  34D8               	retlw	216
  2361  0230  3404               	retlw	4
  2362  0231  3459               	retlw	89
  2363  0232  3400               	retlw	0
  2364  0233  3402               	retlw	2
  2365  0234  3400               	retlw	0
  2366  0235  3401               	retlw	1
  2367  0236  3402               	retlw	2
  2368  0237  3400               	retlw	0
  2369  0238  3401               	retlw	1
  2370  0239                     __end_of_device_dsc:	
  2371  0239                     _sd000:	
  2372  0239  3404               	retlw	4
  2373  023A  3403               	retlw	3
  2374  023B  3409               	retlw	9
  2375  023C  3404               	retlw	4
  2376  023D                     __end_of_sd000:	
  2377  000B                     _INTCONbits	set	11
  2378  0012                     _PIR2bits	set	18
  2379  000C                     _PORTAbits	set	12
  2380  000D                     _PORTBbits	set	13
  2381  0015                     _TMR0	set	21
  2382  009D                     _ADCON0	set	157
  2383  009D                     _ADCON0bits	set	157
  2384  009E                     _ADCON1	set	158
  2385  009E                     _ADCON1bits	set	158
  2386  009F                     _ADCON2	set	159
  2387  009F                     _ADCON2bits	set	159
  2388  009C                     _ADRESH	set	156
  2389  009B                     _ADRESL	set	155
  2390  0095                     _OPTION_REGbits	set	149
  2391  0099                     _OSCCON	set	153
  2392  0091                     _PIE1bits	set	145
  2393  0092                     _PIE2bits	set	146
  2394  008C                     _TRISAbits	set	140
  2395  008D                     _TRISBbits	set	141
  2396  008E                     _TRISCbits	set	142
  2397  010D                     _LATBbits	set	269
  2398  010E                     _LATCbits	set	270
  2399  018C                     _ANSELA	set	396
  2400  018C                     _ANSELAbits	set	396
  2401  018D                     _ANSELBbits	set	397
  2402  018E                     _ANSELCbits	set	398
  2403  019F                     _BAUDCON	set	415
  2404  0199                     _RCREG	set	409
  2405  019D                     _RCSTA	set	413
  2406  019D                     _RCSTAbits	set	413
  2407  019A                     _TXREG	set	410
  2408  019E                     _TXSTA	set	414
  2409  0215                     _SSP1CON1	set	533
  2410  0215                     _SSP1CON1bits	set	533
  2411  0217                     _SSP1CON3	set	535
  2412  0214                     _SSP1STAT	set	532
  2413  0214                     _SSP1STATbits	set	532
  2414  0211                     _SSPBUF	set	529
  2415  039B                     _ACTCON	set	923
  2416  0E96                     _UADDR	set	3734
  2417  0E91                     _UCFG	set	3729
  2418  0E8E                     _UCON	set	3726
  2419  0E8E                     _UCONbits	set	3726
  2420  0E97                     _UEIE	set	3735
  2421  0E93                     _UEIR	set	3731
  2422  0E98                     _UEP0bits	set	3736
  2423  0E92                     _UIE	set	3730
  2424  0E92                     _UIEbits	set	3730
  2425  0E90                     _UIR	set	3728
  2426  0E90                     _UIRbits	set	3728
  2427  0E8F                     _USTAT	set	3727
  2428  0E98                     _UEP0	set	3736
  2429  0E99                     _UEP1	set	3737
  2430                           
  2431                           ; #config settings
  2432  0000                     
  2433                           	psect	cinit
  2434  000F                     start_initialization:	
  2435  000F                     __initialization:	
  2436                           
  2437                           ; Clear objects allocated to COMMON
  2438  000F  01FC               	clrf	__pbssCOMMON& (0+127)
  2439                           
  2440                           ; Clear objects allocated to BANK0
  2441  0010  3069               	movlw	low __pbssBANK0
  2442  0011  0084               	movwf	4
  2443  0012  3000               	movlw	high __pbssBANK0
  2444  0013  0085               	movwf	5
  2445  0014  3007               	movlw	7
  2446  0015  3189  212C  3180   	fcall	clear_ram0
  2447                           
  2448                           ; Clear objects allocated to BANK1
  2449  0018  30E0               	movlw	low __pbssBANK1
  2450  0019  0084               	movwf	4
  2451  001A  3000               	movlw	high __pbssBANK1
  2452  001B  0085               	movwf	5
  2453  001C  3010               	movlw	16
  2454  001D  3189  212C  3180   	fcall	clear_ram0
  2455                           
  2456                           ; Clear objects allocated to BANK2
  2457  0020  3020               	movlw	low __pbssBANK2
  2458  0021  0084               	movwf	4
  2459  0022  3001               	movlw	high __pbssBANK2
  2460  0023  0085               	movwf	5
  2461  0024  3049               	movlw	73
  2462  0025  3189  212C  3180   	fcall	clear_ram0
  2463                           
  2464                           ; Clear objects allocated to BANK3
  2465  0028  30A4               	movlw	low __pbssBANK3
  2466  0029  0084               	movwf	4
  2467  002A  3001               	movlw	high __pbssBANK3
  2468  002B  0085               	movwf	5
  2469  002C  3027               	movlw	39
  2470  002D  3189  212C  3180   	fcall	clear_ram0
  2471                           
  2472                           ; Clear objects allocated to BANK4
  2473  0030  3020               	movlw	low __pbssBANK4
  2474  0031  0084               	movwf	4
  2475  0032  3002               	movlw	high __pbssBANK4
  2476  0033  0085               	movwf	5
  2477  0034  304E               	movlw	78
  2478  0035  3189  212C         	fcall	clear_ram0
  2479  0037                     end_of_initialization:	
  2480                           ;End of C runtime variable initialization code
  2481                           
  2482  0037                     __end_of__initialization:	
  2483  0037  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2484  0038  0020               	movlb	0
  2485  0039  318A  2A1D         	ljmp	_main	;jump to C main() function
  2486                           
  2487                           	psect	bssCOMMON
  2488  007C                     __pbssCOMMON:	
  2489  007C                     _pBDTEntryEP0OutNext:	
  2490  007C                     	ds	1
  2491                           
  2492                           	psect	bssBANK0
  2493  0069                     __pbssBANK0:	
  2494  0069                     _pBDTEntryIn:	
  2495  0069                     	ds	2
  2496  006B                     _USBDeferStatusStagePacket:	
  2497  006B                     	ds	1
  2498  006C                     _USBDeviceState:	
  2499  006C                     	ds	1
  2500  006D                     _pBDTEntryEP0OutCurrent:	
  2501  006D                     	ds	1
  2502  006E                     store_key_level@idx_key:	
  2503  006E                     	ds	1
  2504  006F                     _USTATcopy:	
  2505  006F                     	ds	1
  2506                           
  2507                           	psect	bssBANK1
  2508  00E0                     __pbssBANK1:	
  2509  00E0                     _inPipes:	
  2510  00E0                     	ds	5
  2511  00E5                     APP_LEDUpdateUSBStatus@ledCount:	
  2512  00E5                     	ds	2
  2513  00E7                     _USBRxHandle:	
  2514  00E7                     	ds	1
  2515  00E8                     _USBTxHandle:	
  2516  00E8                     	ds	1
  2517  00E9                     _controlTransferState:	
  2518  00E9                     	ds	1
  2519  00EA                     _endpoint_number:	
  2520  00EA                     	ds	1
  2521  00EB                     _msCounter:	
  2522  00EB                     	ds	1
  2523  00EC                     _pitch:	
  2524  00EC                     	ds	1
  2525  00ED                     _shortPacketStatus:	
  2526  00ED                     	ds	1
  2527  00EE                     _USBActiveConfiguration:	
  2528  00EE                     	ds	1
  2529  00EF                     _USBAlternateInterface:	
  2530  00EF                     	ds	1
  2531                           
  2532                           	psect	bssBANK2
  2533  0120                     __pbssBANK2:	
  2534  0120                     process_level@key_states:	
  2535  0120                     	ds	39
  2536  0147                     _outPipes:	
  2537  0147                     	ds	7
  2538  014E                     _USB1msTickCount:	
  2539  014E                     	ds	4
  2540  0152                     _ep_data_in:	
  2541  0152                     	ds	2
  2542  0154                     _ep_data_out:	
  2543  0154                     	ds	2
  2544  0156                     _note_event:	
  2545  0156                     	ds	2
  2546  0158                     _pBDTEntryOut:	
  2547  0158                     	ds	2
  2548  015A                     _BothEP0OutUOWNsSet:	
  2549  015A                     	ds	1
  2550  015B                     _RemoteWakeup:	
  2551  015B                     	ds	1
  2552  015C                     _USBBusIsSuspended:	
  2553  015C                     	ds	1
  2554  015D                     _USBDeferINDataStagePackets:	
  2555  015D                     	ds	1
  2556  015E                     _USBDeferOUTDataStagePackets:	
  2557  015E                     	ds	1
  2558  015F                     _USBStatusStageEnabledFlag1:	
  2559  015F                     	ds	1
  2560  0160                     _USBStatusStageEnabledFlag2:	
  2561  0160                     	ds	1
  2562  0161                     _USBStatusStageTimeoutCounter:	
  2563  0161                     	ds	1
  2564  0162                     _USBTicksSinceSuspendEnd:	
  2565  0162                     	ds	1
  2566  0163                     _is_initialized:	
  2567  0163                     	ds	1
  2568  0164                     _pDst:	
  2569  0164                     	ds	1
  2570  0165                     _sentNoteOff:	
  2571  0165                     	ds	1
  2572  0166                     _wait_timer:	
  2573  0166                     	ds	1
  2574  0167                     is_end_of_scan@scan_counter:	
  2575  0167                     	ds	1
  2576  0168                     scan_task@state:	
  2577  0168                     	ds	1
  2578                           
  2579                           	psect	bssBANK3
  2580  01A4                     __pbssBANK3:	
  2581  01A4                     process_level@key_off_counter:	
  2582  01A4                     	ds	39
  2583                           
  2584                           	psect	bssBANK4
  2585  0220                     __pbssBANK4:	
  2586  0220                     _adc_levels:	
  2587  0220                     	ds	39
  2588  0247                     process_level@key_on_counter:	
  2589  0247                     	ds	39
  2590                           
  2591                           	psect	clrtext
  2592  092C                     clear_ram0:	
  2593                           ;	Called with FSR0 containing the base address, and
  2594                           ;	WREG with the size to clear
  2595                           
  2596  092C  0064               	clrwdt	;clear the watchdog before getting into this loop
  2597  092D                     clrloop0:	
  2598  092D  0180               	clrf	0	;clear RAM location pointed to by FSR
  2599  092E  3101               	addfsr 0,1
  2600  092F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2601  0930  292D               	goto	clrloop0	;have we reached the end yet?
  2602  0931  3400               	retlw	0	;all done for this memory range, return
  2603                           
  2604                           	psect	cstackCOMMON
  2605  0070                     __pcstackCOMMON:	
  2606  0070                     ?_LED_Enable:	
  2607  0070                     ?_LED_Off:	
  2608                           ; 0 bytes @ 0x0
  2609                           
  2610  0070                     ?_LED_On:	
  2611                           ; 0 bytes @ 0x0
  2612                           
  2613  0070                     ?_USBDeviceInit:	
  2614                           ; 0 bytes @ 0x0
  2615                           
  2616  0070                     ?_BLEDeviceInt:	
  2617                           ; 0 bytes @ 0x0
  2618                           
  2619  0070                     ?_USBDeviceTasks:	
  2620                           ; 0 bytes @ 0x0
  2621                           
  2622  0070                     ?_APP_DeviceAudioMIDITasks:	
  2623                           ; 0 bytes @ 0x0
  2624                           
  2625  0070                     ?_APP_DeviceAudioMIDISOFHandler:	
  2626                           ; 0 bytes @ 0x0
  2627                           
  2628  0070                     ?_APP_DeviceAudioMIDIInitialize:	
  2629                           ; 0 bytes @ 0x0
  2630                           
  2631  0070                     ?_USBWakeFromSuspend:	
  2632                           ; 0 bytes @ 0x0
  2633                           
  2634  0070                     ?_USBSuspend:	
  2635                           ; 0 bytes @ 0x0
  2636                           
  2637  0070                     ?_USBIncrement1msInternalTimers:	
  2638                           ; 0 bytes @ 0x0
  2639                           
  2640  0070                     ?_USBCtrlEPAllowStatusStage:	
  2641                           ; 0 bytes @ 0x0
  2642                           
  2643  0070                     ?_USBStallHandler:	
  2644                           ; 0 bytes @ 0x0
  2645                           
  2646  0070                     ?_USBCtrlEPService:	
  2647                           ; 0 bytes @ 0x0
  2648                           
  2649  0070                     ?_USBCtrlTrfTxService:	
  2650                           ; 0 bytes @ 0x0
  2651                           
  2652  0070                     ?_USBCtrlTrfSetupHandler:	
  2653                           ; 0 bytes @ 0x0
  2654                           
  2655  0070                     ?_USBCtrlTrfOutHandler:	
  2656                           ; 0 bytes @ 0x0
  2657                           
  2658  0070                     ?_USBCtrlTrfInHandler:	
  2659                           ; 0 bytes @ 0x0
  2660                           
  2661  0070                     ?_USBCheckStdRequest:	
  2662                           ; 0 bytes @ 0x0
  2663                           
  2664  0070                     ?_USBStdFeatureReqHandler:	
  2665                           ; 0 bytes @ 0x0
  2666                           
  2667  0070                     ?_SPI_ClearReceiveOverflowStatus:	
  2668                           ; 0 bytes @ 0x0
  2669                           
  2670  0070                     ?_SPI_ClearWriteCollisionStatus:	
  2671                           ; 0 bytes @ 0x0
  2672                           
  2673  0070                     ?_PIN_MANAGER_Initialize:	
  2674                           ; 0 bytes @ 0x0
  2675                           
  2676  0070                     ?_SPI_Initialize:	
  2677                           ; 0 bytes @ 0x0
  2678                           
  2679  0070                     ?_SYSTEM_Initialize:	
  2680                           ; 0 bytes @ 0x0
  2681                           
  2682  0070                     ?_SYS_InterruptHigh:	
  2683                           ; 0 bytes @ 0x0
  2684                           
  2685  0070                     ??_SYS_InterruptHigh:	
  2686                           ; 0 bytes @ 0x0
  2687                           
  2688  0070                     ?_APP_LEDUpdateUSBStatus:	
  2689                           ; 0 bytes @ 0x0
  2690                           
  2691  0070                     ?_main:	
  2692                           ; 0 bytes @ 0x0
  2693                           
  2694  0070                     ?_scan_init:	
  2695                           ; 0 bytes @ 0x0
  2696                           
  2697  0070                     ?_set_timer:	
  2698                           ; 0 bytes @ 0x0
  2699                           
  2700  0070                     ?_run_adc:	
  2701                           ; 0 bytes @ 0x0
  2702                           
  2703  0070                     ?_USBCtrlEPAllowDataStage:	
  2704                           ; 0 bytes @ 0x0
  2705                           
  2706  0070                     ?_USBCtrlEPServiceComplete:	
  2707                           ; 0 bytes @ 0x0
  2708                           
  2709  0070                     ?_USBCtrlTrfRxService:	
  2710                           ; 0 bytes @ 0x0
  2711                           
  2712  0070                     ?_USBStdSetCfgHandler:	
  2713                           ; 0 bytes @ 0x0
  2714                           
  2715  0070                     ?_USBStdGetDscHandler:	
  2716                           ; 0 bytes @ 0x0
  2717                           
  2718  0070                     ?_USBStdGetStatusHandler:	
  2719                           ; 0 bytes @ 0x0
  2720                           
  2721  0070                     ?_SPI_HasReceiveOverflowOccured:	
  2722                           ; 0 bytes @ 0x0
  2723                           
  2724  0070                     ?_SPI_HasWriteCollisionOccured:	
  2725                           ; 1 bytes @ 0x0
  2726                           
  2727  0070                     ?_SPI_Exchange8bit:	
  2728                           ; 1 bytes @ 0x0
  2729                           
  2730  0070                     ?_waiting_for_timer:	
  2731                           ; 1 bytes @ 0x0
  2732                           
  2733  0070                     ?_get_data:	
  2734                           ; 1 bytes @ 0x0
  2735                           
  2736  0070                     ?_is_end_of_scan:	
  2737                           ; 1 bytes @ 0x0
  2738                           
  2739  0070                     ?_is_adc_ready:	
  2740                           ; 1 bytes @ 0x0
  2741                           
  2742  0070                     ?_get_adc:	
  2743                           ; 1 bytes @ 0x0
  2744                           
  2745                           
  2746                           ; 1 bytes @ 0x0
  2747  0070                     	ds	1
  2748  0071                     ??_LED_Enable:	
  2749  0071                     ??_LED_Off:	
  2750                           ; 0 bytes @ 0x1
  2751                           
  2752  0071                     ??_LED_On:	
  2753                           ; 0 bytes @ 0x1
  2754                           
  2755  0071                     ??_USBDeviceInit:	
  2756                           ; 0 bytes @ 0x1
  2757                           
  2758  0071                     ??_BLEDeviceInt:	
  2759                           ; 0 bytes @ 0x1
  2760                           
  2761  0071                     ??_APP_DeviceAudioMIDISOFHandler:	
  2762                           ; 0 bytes @ 0x1
  2763                           
  2764  0071                     ??_USBIncrement1msInternalTimers:	
  2765                           ; 0 bytes @ 0x1
  2766                           
  2767  0071                     ??_USBCtrlEPAllowStatusStage:	
  2768                           ; 0 bytes @ 0x1
  2769                           
  2770  0071                     ??_USBStallHandler:	
  2771                           ; 0 bytes @ 0x1
  2772                           
  2773  0071                     ?_USBConfigureEndpoint:	
  2774                           ; 0 bytes @ 0x1
  2775                           
  2776  0071                     ??_USBCtrlTrfTxService:	
  2777                           ; 0 bytes @ 0x1
  2778                           
  2779  0071                     ??_SPI_HasReceiveOverflowOccured:	
  2780                           ; 0 bytes @ 0x1
  2781                           
  2782  0071                     ??_SPI_ClearReceiveOverflowStatus:	
  2783                           ; 0 bytes @ 0x1
  2784                           
  2785  0071                     ??_SPI_HasWriteCollisionOccured:	
  2786                           ; 0 bytes @ 0x1
  2787                           
  2788  0071                     ??_SPI_ClearWriteCollisionStatus:	
  2789                           ; 0 bytes @ 0x1
  2790                           
  2791  0071                     ??_SPI_Exchange8bit:	
  2792                           ; 0 bytes @ 0x1
  2793                           
  2794  0071                     ??_PIN_MANAGER_Initialize:	
  2795                           ; 0 bytes @ 0x1
  2796                           
  2797  0071                     ??_SPI_Initialize:	
  2798                           ; 0 bytes @ 0x1
  2799                           
  2800  0071                     ??_scan_init:	
  2801                           ; 0 bytes @ 0x1
  2802                           
  2803  0071                     ??_set_timer:	
  2804                           ; 0 bytes @ 0x1
  2805                           
  2806  0071                     ??_waiting_for_timer:	
  2807                           ; 0 bytes @ 0x1
  2808                           
  2809  0071                     ?_set_clock_and_data:	
  2810                           ; 0 bytes @ 0x1
  2811                           
  2812  0071                     ??_get_data:	
  2813                           ; 0 bytes @ 0x1
  2814                           
  2815  0071                     ??_is_end_of_scan:	
  2816                           ; 0 bytes @ 0x1
  2817                           
  2818  0071                     ??_run_adc:	
  2819                           ; 0 bytes @ 0x1
  2820                           
  2821  0071                     ??_is_adc_ready:	
  2822                           ; 0 bytes @ 0x1
  2823                           
  2824  0071                     ??_get_adc:	
  2825                           ; 0 bytes @ 0x1
  2826                           
  2827  0071                     ??_USBStdGetDscHandler:	
  2828                           ; 0 bytes @ 0x1
  2829                           
  2830  0071                     ??_USBStdGetStatusHandler:	
  2831                           ; 0 bytes @ 0x1
  2832                           
  2833  0071                     ?_USBTransferOnePacket:	
  2834                           ; 0 bytes @ 0x1
  2835                           
  2836  0071                     ?_memset:	
  2837                           ; 1 bytes @ 0x1
  2838                           
  2839  0071                     _waiting_for_timer$816:	
  2840                           ; 1 bytes @ 0x1
  2841                           
  2842  0071                     set_clock_and_data@d:	
  2843                           ; 1 bytes @ 0x1
  2844                           
  2845  0071                     LED_On@led:	
  2846                           ; 1 bytes @ 0x1
  2847                           
  2848  0071                     LED_Off@led:	
  2849                           ; 1 bytes @ 0x1
  2850                           
  2851  0071                     LED_Enable@led:	
  2852                           ; 1 bytes @ 0x1
  2853                           
  2854  0071                     USBTransferOnePacket@dir:	
  2855                           ; 1 bytes @ 0x1
  2856                           
  2857  0071                     USBConfigureEndpoint@direction:	
  2858                           ; 1 bytes @ 0x1
  2859                           
  2860  0071                     memset@c:	
  2861                           ; 1 bytes @ 0x1
  2862                           
  2863                           
  2864                           ; 2 bytes @ 0x1
  2865  0071                     	ds	1
  2866  0072                     ??_USBConfigureEndpoint:	
  2867  0072                     ??_SYSTEM_Initialize:	
  2868                           ; 0 bytes @ 0x2
  2869                           
  2870  0072                     ??_APP_LEDUpdateUSBStatus:	
  2871                           ; 0 bytes @ 0x2
  2872                           
  2873  0072                     ??_set_clock_and_data:	
  2874                           ; 0 bytes @ 0x2
  2875                           
  2876  0072                     ?_process_level:	
  2877                           ; 0 bytes @ 0x2
  2878                           
  2879  0072                     SYSTEM_Initialize@state:	
  2880                           ; 0 bytes @ 0x2
  2881                           
  2882  0072                     set_clock_and_data@c:	
  2883                           ; 1 bytes @ 0x2
  2884                           
  2885  0072                     process_level@old_level:	
  2886                           ; 1 bytes @ 0x2
  2887                           
  2888  0072                     USBStdGetStatusHandler@p:	
  2889                           ; 1 bytes @ 0x2
  2890                           
  2891  0072                     SPI_Exchange8bit@dummyRead:	
  2892                           ; 1 bytes @ 0x2
  2893                           
  2894  0072                     USBDeviceInit@p:	
  2895                           ; 1 bytes @ 0x2
  2896                           
  2897  0072                     USBTransferOnePacket@data:	
  2898                           ; 2 bytes @ 0x2
  2899                           
  2900                           
  2901                           ; 2 bytes @ 0x2
  2902  0072                     	ds	1
  2903  0073                     ??_USBCtrlTrfRxService:	
  2904  0073                     is_end_of_scan@res:	
  2905                           ; 0 bytes @ 0x3
  2906                           
  2907  0073                     process_level@new_level:	
  2908                           ; 1 bytes @ 0x3
  2909                           
  2910  0073                     USBCtrlTrfTxService@byteToSend:	
  2911                           ; 1 bytes @ 0x3
  2912                           
  2913  0073                     SPI_Exchange8bit@data:	
  2914                           ; 1 bytes @ 0x3
  2915                           
  2916  0073                     memset@n:	
  2917                           ; 1 bytes @ 0x3
  2918                           
  2919                           
  2920                           ; 2 bytes @ 0x3
  2921  0073                     	ds	1
  2922  0074                     ?_SendMidiData:	
  2923  0074                     ??_USBCtrlTrfInHandler:	
  2924                           ; 0 bytes @ 0x4
  2925                           
  2926  0074                     ??_process_level:	
  2927                           ; 0 bytes @ 0x4
  2928                           
  2929  0074                     ??_USBCtrlEPAllowDataStage:	
  2930                           ; 0 bytes @ 0x4
  2931                           
  2932  0074                     USBDeviceInit@i_1708:	
  2933                           ; 0 bytes @ 0x4
  2934                           
  2935  0074                     USBTransferOnePacket@len:	
  2936                           ; 1 bytes @ 0x4
  2937                           
  2938  0074                     SendMidiData@velocity:	
  2939                           ; 1 bytes @ 0x4
  2940                           
  2941                           
  2942                           ; 1 bytes @ 0x4
  2943  0074                     	ds	1
  2944  0075                     ??_USBTransferOnePacket:	
  2945  0075                     ??_SendMidiData:	
  2946                           ; 0 bytes @ 0x5
  2947                           
  2948  0075                     ??_memset:	
  2949                           ; 0 bytes @ 0x5
  2950                           
  2951  0075                     USBDeviceInit@i:	
  2952                           ; 0 bytes @ 0x5
  2953                           
  2954  0075                     USBCtrlTrfRxService@i:	
  2955                           ; 1 bytes @ 0x5
  2956                           
  2957                           
  2958                           ; 1 bytes @ 0x5
  2959  0075                     	ds	1
  2960  0076                     ??_USBCtrlEPServiceComplete:	
  2961  0076                     USBConfigureEndpoint@EPNum:	
  2962                           ; 0 bytes @ 0x6
  2963                           
  2964  0076                     USBCtrlTrfRxService@byteToRead:	
  2965                           ; 1 bytes @ 0x6
  2966                           
  2967  0076                     USBCtrlTrfInHandler@lastDTS:	
  2968                           ; 1 bytes @ 0x6
  2969                           
  2970  0076                     SendMidiData@tone:	
  2971                           ; 1 bytes @ 0x6
  2972                           
  2973  0076                     memset@p:	
  2974                           ; 1 bytes @ 0x6
  2975                           
  2976                           
  2977                           ; 1 bytes @ 0x6
  2978  0076                     	ds	1
  2979  0077                     ??_USBCtrlTrfOutHandler:	
  2980  0077                     ?_store_key_level:	
  2981                           ; 0 bytes @ 0x7
  2982                           
  2983  0077                     store_key_level@end_of_scan:	
  2984                           ; 1 bytes @ 0x7
  2985                           
  2986  0077                     USBTransferOnePacket@ep:	
  2987                           ; 1 bytes @ 0x7
  2988                           
  2989  0077                     USBConfigureEndpoint@handle:	
  2990                           ; 1 bytes @ 0x7
  2991                           
  2992  0077                     SendMidiData@timeout_ms:	
  2993                           ; 1 bytes @ 0x7
  2994                           
  2995  0077                     memset@p1:	
  2996                           ; 1 bytes @ 0x7
  2997                           
  2998                           
  2999                           ; 1 bytes @ 0x7
  3000  0077                     	ds	1
  3001  0078                     ?_USBEnableEndpoint:	
  3002  0078                     ??_store_key_level:	
  3003                           ; 0 bytes @ 0x8
  3004                           
  3005  0078                     USBEnableEndpoint@options:	
  3006                           ; 0 bytes @ 0x8
  3007                           
  3008  0078                     USBTransferOnePacket@handle:	
  3009                           ; 1 bytes @ 0x8
  3010                           
  3011                           
  3012                           ; 1 bytes @ 0x8
  3013  0078                     	ds	1
  3014  0079                     ??_USBEnableEndpoint:	
  3015                           
  3016                           ; 0 bytes @ 0x9
  3017  0079                     	ds	1
  3018  007A                     store_key_level@level:	
  3019                           
  3020                           ; 1 bytes @ 0xA
  3021  007A                     	ds	1
  3022  007B                     ??_scan_task:	
  3023  007B                     ??_USBWakeFromSuspend:	
  3024                           ; 0 bytes @ 0xB
  3025                           
  3026  007B                     ??_USBSuspend:	
  3027                           ; 0 bytes @ 0xB
  3028                           
  3029  007B                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  3030                           ; 0 bytes @ 0xB
  3031                           
  3032  007B                     ??_USBStdSetCfgHandler:	
  3033                           ; 0 bytes @ 0xB
  3034                           
  3035                           
  3036                           ; 0 bytes @ 0xB
  3037  007B                     	ds	1
  3038  007C                     ??_main:	
  3039                           
  3040                           	psect	cstackBANK0
  3041  0050                     __pcstackBANK0:	
  3042                           ; 0 bytes @ 0xC
  3043                           
  3044  0050                     process_level@old_state:	
  3045  0050                     USBEnableEndpoint@p:	
  3046                           ; 2 bytes @ 0x0
  3047                           
  3048                           
  3049                           ; 2 bytes @ 0x0
  3050  0050                     	ds	2
  3051  0052                     USBEnableEndpoint@ep:	
  3052  0052                     process_level@current_state:	
  3053                           ; 1 bytes @ 0x2
  3054                           
  3055                           
  3056                           ; 2 bytes @ 0x2
  3057  0052                     	ds	1
  3058  0053                     ??_APP_DeviceAudioMIDIInitialize:	
  3059                           
  3060                           ; 0 bytes @ 0x3
  3061  0053                     	ds	1
  3062  0054                     _process_level$854:	
  3063                           
  3064                           ; 2 bytes @ 0x4
  3065  0054                     	ds	1
  3066  0055                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  3067  0055                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  3068                           ; 1 bytes @ 0x5
  3069                           
  3070                           
  3071                           ; 2 bytes @ 0x5
  3072  0055                     	ds	1
  3073  0056                     process_level@off_flag:	
  3074                           
  3075                           ; 1 bytes @ 0x6
  3076  0056                     	ds	1
  3077  0057                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  3078  0057                     _process_level$853:	
  3079                           ; 1 bytes @ 0x7
  3080                           
  3081                           
  3082                           ; 1 bytes @ 0x7
  3083  0057                     	ds	1
  3084  0058                     process_level@on_flag:	
  3085  0058                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  3086                           ; 1 bytes @ 0x8
  3087                           
  3088                           
  3089                           ; 2 bytes @ 0x8
  3090  0058                     	ds	1
  3091  0059                     process_level@filtered_state:	
  3092                           
  3093                           ; 1 bytes @ 0x9
  3094  0059                     	ds	1
  3095  005A                     ??_USBStdFeatureReqHandler:	
  3096  005A                     process_level@idx_key:	
  3097                           ; 0 bytes @ 0xA
  3098                           
  3099  005A                     USBStdSetCfgHandler@p:	
  3100                           ; 1 bytes @ 0xA
  3101                           
  3102                           
  3103                           ; 2 bytes @ 0xA
  3104  005A                     	ds	1
  3105  005B                     ?_scan_task:	
  3106  005B                     scan_task@velocity:	
  3107                           ; 1 bytes @ 0xB
  3108                           
  3109                           
  3110                           ; 1 bytes @ 0xB
  3111  005B                     	ds	1
  3112  005C                     USBStdSetCfgHandler@i_2039:	
  3113  005C                     _scan_task$872:	
  3114                           ; 1 bytes @ 0xC
  3115                           
  3116  005C                     USBStdFeatureReqHandler@pUEP:	
  3117                           ; 2 bytes @ 0xC
  3118                           
  3119                           
  3120                           ; 2 bytes @ 0xC
  3121  005C                     	ds	1
  3122  005D                     USBStdSetCfgHandler@i:	
  3123                           
  3124                           ; 1 bytes @ 0xD
  3125  005D                     	ds	1
  3126  005E                     USBStdFeatureReqHandler@current_ep_data:	
  3127  005E                     _scan_task$876:	
  3128                           ; 1 bytes @ 0xE
  3129                           
  3130                           
  3131                           ; 2 bytes @ 0xE
  3132  005E                     	ds	1
  3133  005F                     USBStdFeatureReqHandler@p:	
  3134                           
  3135                           ; 1 bytes @ 0xF
  3136  005F                     	ds	1
  3137  0060                     ??_USBCheckStdRequest:	
  3138  0060                     scan_task@note:	
  3139                           ; 0 bytes @ 0x10
  3140                           
  3141                           
  3142                           ; 1 bytes @ 0x10
  3143  0060                     	ds	1
  3144  0061                     ??_APP_DeviceAudioMIDITasks:	
  3145  0061                     ??_USBCtrlTrfSetupHandler:	
  3146                           ; 0 bytes @ 0x11
  3147                           
  3148                           
  3149                           ; 0 bytes @ 0x11
  3150  0061                     	ds	1
  3151  0062                     ??_USBCtrlEPService:	
  3152                           
  3153                           ; 0 bytes @ 0x12
  3154  0062                     	ds	1
  3155  0063                     _APP_DeviceAudioMIDITasks$417:	
  3156                           
  3157                           ; 2 bytes @ 0x13
  3158  0063                     	ds	2
  3159  0065                     USBCtrlEPService@setup_cnt:	
  3160  0065                     _APP_DeviceAudioMIDITasks$458:	
  3161                           ; 1 bytes @ 0x15
  3162                           
  3163                           
  3164                           ; 2 bytes @ 0x15
  3165  0065                     	ds	1
  3166  0066                     ??_USBDeviceTasks:	
  3167                           
  3168                           ; 0 bytes @ 0x16
  3169  0066                     	ds	1
  3170  0067                     APP_DeviceAudioMIDITasks@scan_pitch:	
  3171                           
  3172                           ; 1 bytes @ 0x17
  3173  0067                     	ds	1
  3174  0068                     APP_DeviceAudioMIDITasks@velocity:	
  3175  0068                     USBDeviceTasks@i:	
  3176                           ; 1 bytes @ 0x18
  3177                           
  3178                           
  3179                           ; 1 bytes @ 0x18
  3180  0068                     	ds	1
  3181                           
  3182                           	psect	maintext
  3183  0A1D                     __pmaintext:	
  3184 ;;
  3185 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3186 ;;
  3187 ;; *************** function _main *****************
  3188 ;; Defined at:
  3189 ;;		line 34 in file "../src/main.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;		None
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;		None
  3194 ;; Return value:  Size  Location     Type
  3195 ;;		None               void
  3196 ;; Registers used:
  3197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3198 ;; Tracked objects:
  3199 ;;		On entry : B1F/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3207 ;;Total ram usage:        0 bytes
  3208 ;; Hardware stack levels required when called:   10
  3209 ;; This function calls:
  3210 ;;		_APP_DeviceAudioMIDITasks
  3211 ;;		_BLEDeviceInt
  3212 ;;		_SYSTEM_Initialize
  3213 ;;		_USBDeviceInit
  3214 ;;		_USBDeviceTasks
  3215 ;; This function is called by:
  3216 ;;		Startup code after reset
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           
  3221                           ;psect for function _main
  3222  0A1D                     _main:	
  3223                           
  3224                           ;main.c: 36: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3225                           
  3226                           ;incstack = 0
  3227                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3228  0A1D  3000               	movlw	0
  3229  0A1E  3189  21A2  318A   	fcall	_SYSTEM_Initialize
  3230                           
  3231                           ;main.c: 38: USBDeviceInit();
  3232  0A21  3185  25B3  318A   	fcall	_USBDeviceInit
  3233                           
  3234                           ;main.c: 39: ;
  3235                           ;main.c: 41: BLEDeviceInt();
  3236  0A24  3189  2126  318A   	fcall	_BLEDeviceInt
  3237  0A27                     l68:	
  3238                           ;main.c: 43: while(1)
  3239                           
  3240                           ;main.c: 78: {
  3241                           ;main.c: 80: continue;
  3242                           
  3243                           ;main.c: 68: {
  3244                           ;main.c: 70: continue;
  3245                           
  3246                           
  3247                           ;main.c: 44: {
  3248                           ;main.c: 45: ;
  3249                           ;main.c: 61: USBDeviceTasks();
  3250  0A27  3183  2338  318A   	fcall	_USBDeviceTasks
  3251                           
  3252                           ;main.c: 67: if( USBDeviceState < CONFIGURED_STATE )
  3253  0A2A  3020               	movlw	32
  3254  0A2B  0020               	movlb	0	; select bank0
  3255  0A2C  026C               	subwf	_USBDeviceState,w
  3256  0A2D  1C03               	btfss	3,0
  3257  0A2E  2A27               	goto	l68
  3258                           
  3259                           ;main.c: 71: }
  3260                           ;main.c: 77: if( UCONbits.SUSPND == 1 )
  3261  0A2F  003D               	movlb	29	; select bank29
  3262  0A30  188E               	btfsc	14,1	;volatile
  3263  0A31  2A27               	goto	l68
  3264                           
  3265                           ;main.c: 81: }
  3266                           ;main.c: 84: APP_DeviceAudioMIDITasks();
  3267  0A32  3182  223D  318A   	fcall	_APP_DeviceAudioMIDITasks
  3268  0A35  2A27               	goto	l68
  3269  0A36                     __end_of_main:	
  3270                           
  3271                           	psect	text1
  3272  0338                     __ptext1:	
  3273 ;; *************** function _USBDeviceTasks *****************
  3274 ;; Defined at:
  3275 ;;		line 496 in file "../framework/usb/usb_device.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;		None
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;  i               1   24[BANK0 ] unsigned char 
  3280 ;; Return value:  Size  Location     Type
  3281 ;;		None               void
  3282 ;; Registers used:
  3283 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3290 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3291 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3292 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3293 ;;Total ram usage:        3 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; Hardware stack levels required when called:    9
  3296 ;; This function calls:
  3297 ;;		_USBCtrlEPAllowStatusStage
  3298 ;;		_USBCtrlEPService
  3299 ;;		_USBDeviceInit
  3300 ;;		_USBIncrement1msInternalTimers
  3301 ;;		_USBStallHandler
  3302 ;;		_USBSuspend
  3303 ;;		_USBWakeFromSuspend
  3304 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3305 ;; This function is called by:
  3306 ;;		_main
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           
  3311                           ;psect for function _USBDeviceTasks
  3312  0338                     _USBDeviceTasks:	
  3313                           
  3314                           ;usb_device.c: 563: }
  3315                           ;usb_device.c: 585: if(USBDeviceState == DETACHED_STATE)
  3316                           
  3317                           ;usb_device.c: 562: return;
  3318                           
  3319                           ;usb_device.c: 561: PIR2bits.USBIF = 0;;
  3320                           
  3321                           ;usb_device.c: 533: USBDeviceState = DETACHED_STATE;
  3322                           
  3323                           ;usb_device.c: 530: UIE = 0;
  3324                           
  3325                           ;usb_device.c: 525: {
  3326                           ;usb_device.c: 527: UCON = 0;
  3327                           
  3328                           ;usb_device.c: 498: uint8_t i;
  3329                           ;usb_device.c: 524: if (1 != 1)
  3330                           
  3331                           ;incstack = 0
  3332                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3333  0338  0020               	movlb	0	; select bank0
  3334  0339  086C               	movf	_USBDeviceState,w
  3335  033A  1D03               	btfss	3,2
  3336  033B  2B4C               	goto	l4830
  3337                           
  3338                           ;usb_device.c: 586: {
  3339                           ;usb_device.c: 588: UCON = 0;
  3340  033C  003D               	movlb	29	; select bank29
  3341  033D  018E               	clrf	14	;volatile
  3342                           
  3343                           ;usb_device.c: 591: UIE = 0;
  3344  033E  0192               	clrf	18	;volatile
  3345                           
  3346                           ;usb_device.c: 595: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  3347  033F  3016               	movlw	22
  3348  0340  0091               	movwf	17	;volatile
  3349  0341  309F               	movlw	159
  3350  0342  0097               	movwf	23	;volatile
  3351  0343  307B               	movlw	123
  3352  0344  0092               	movwf	18	;volatile
  3353  0345                     l575:	
  3354                           ;usb_device.c: 598: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  3355                           
  3356  0345  198E               	btfsc	14,3	;volatile
  3357  0346  2B49               	goto	l577
  3358  0347  158E               	bsf	14,3	;volatile
  3359  0348  2B45               	goto	l575
  3360  0349                     l577:	
  3361                           
  3362                           ;usb_device.c: 601: USBDeviceState = ATTACHED_STATE;
  3363  0349  0020               	movlb	0	; select bank0
  3364  034A  01EC               	clrf	_USBDeviceState
  3365  034B  0AEC               	incf	_USBDeviceState,f
  3366  034C                     l4830:	
  3367                           
  3368                           ;usb_device.c: 606: }
  3369                           ;usb_device.c: 609: if(USBDeviceState == ATTACHED_STATE)
  3370  034C  036C               	decf	_USBDeviceState,w
  3371  034D  1D03               	btfss	3,2
  3372  034E  2B5B               	goto	l4842
  3373                           
  3374                           ;usb_device.c: 610: {
  3375                           ;usb_device.c: 620: if(!UCONbits.SE0)
  3376  034F  003D               	movlb	29	; select bank29
  3377  0350  1A8E               	btfsc	14,5	;volatile
  3378  0351  2B5B               	goto	l4842
  3379                           
  3380                           ;usb_device.c: 621: {
  3381                           ;usb_device.c: 627: {UIR = 0;};
  3382  0352  0190               	clrf	16	;volatile
  3383                           
  3384                           ;usb_device.c: 631: UIE=0;
  3385  0353  0192               	clrf	18	;volatile
  3386                           
  3387                           ;usb_device.c: 633: UIEbits.URSTIE = 1;
  3388  0354  1412               	bsf	18,0	;volatile
  3389                           
  3390                           ;usb_device.c: 634: UIEbits.IDLEIE = 1;
  3391  0355  1612               	bsf	18,4	;volatile
  3392                           
  3393                           ;usb_device.c: 635: USBDeviceState = POWERED_STATE;
  3394  0356  3002               	movlw	2
  3395  0357  0020               	movlb	0	; select bank0
  3396  0358  00E6               	movwf	??_USBDeviceTasks
  3397  0359  0866               	movf	??_USBDeviceTasks,w
  3398  035A  00EC               	movwf	_USBDeviceState
  3399  035B                     l4842:	
  3400                           
  3401                           ;usb_device.c: 636: }
  3402                           ;usb_device.c: 637: }
  3403                           ;usb_device.c: 653: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  3404  035B  003D               	movlb	29	; select bank29
  3405  035C  1910               	btfsc	16,2	;volatile
  3406  035D  1D12               	btfss	18,2	;volatile
  3407  035E  2B68               	goto	l4850
  3408                           
  3409                           ;usb_device.c: 654: {
  3410                           ;usb_device.c: 655: (UIR &= 0xFB);
  3411  035F  30FB               	movlw	251
  3412  0360  0020               	movlb	0	; select bank0
  3413  0361  00E6               	movwf	??_USBDeviceTasks
  3414  0362  0866               	movf	??_USBDeviceTasks,w
  3415  0363  003D               	movlb	29	; select bank29
  3416  0364  0590               	andwf	16,f	;volatile
  3417                           
  3418                           ;usb_device.c: 659: USBWakeFromSuspend();
  3419  0365  318A  2250  3183   	fcall	_USBWakeFromSuspend
  3420  0368                     l4850:	
  3421                           
  3422                           ;usb_device.c: 661: }
  3423                           ;usb_device.c: 666: if(UCONbits.SUSPND==1)
  3424  0368  003D               	movlb	29	; select bank29
  3425  0369  1C8E               	btfss	14,1	;volatile
  3426  036A  2B6E               	goto	l581
  3427                           
  3428                           ;usb_device.c: 667: {
  3429                           ;usb_device.c: 668: PIR2bits.USBIF = 0;;
  3430  036B  0020               	movlb	0	; select bank0
  3431  036C  1112               	bcf	18,2	;volatile
  3432                           
  3433                           ;usb_device.c: 669: return;
  3434  036D  0008               	return
  3435  036E                     l581:	
  3436                           
  3437                           ;usb_device.c: 670: }
  3438                           ;usb_device.c: 682: if(UIRbits.URSTIF && UIEbits.URSTIE)
  3439  036E  1810               	btfsc	16,0	;volatile
  3440  036F  1C12               	btfss	18,0	;volatile
  3441  0370  2B7E               	goto	l4862
  3442                           
  3443                           ;usb_device.c: 683: {
  3444                           ;usb_device.c: 684: USBDeviceInit();
  3445  0371  3185  25B3  3183   	fcall	_USBDeviceInit
  3446                           
  3447                           ;usb_device.c: 688: ;
  3448                           ;usb_device.c: 690: USBDeviceState = DEFAULT_STATE;
  3449  0374  3004               	movlw	4
  3450  0375  0020               	movlb	0	; select bank0
  3451  0376  00E6               	movwf	??_USBDeviceTasks
  3452  0377  0866               	movf	??_USBDeviceTasks,w
  3453  0378  00EC               	movwf	_USBDeviceState
  3454                           
  3455                           ;usb_device.c: 700: (UIR &= 0xFE);
  3456  0379  30FE               	movlw	254
  3457  037A  00E6               	movwf	??_USBDeviceTasks
  3458  037B  0866               	movf	??_USBDeviceTasks,w
  3459  037C  003D               	movlb	29	; select bank29
  3460  037D  0590               	andwf	16,f	;volatile
  3461  037E                     l4862:	
  3462                           
  3463                           ;usb_device.c: 701: }
  3464                           ;usb_device.c: 706: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  3465  037E  1A10               	btfsc	16,4	;volatile
  3466  037F  1E12               	btfss	18,4	;volatile
  3467  0380  2B84               	goto	l4868
  3468                           
  3469                           ;usb_device.c: 707: {
  3470                           ;usb_device.c: 713: USBSuspend();
  3471  0381  3189  218B  3183   	fcall	_USBSuspend
  3472  0384                     l4868:	
  3473                           
  3474                           ;usb_device.c: 715: }
  3475                           ;usb_device.c: 727: if(UIRbits.SOFIF)
  3476  0384  003D               	movlb	29	; select bank29
  3477  0385  1F10               	btfss	16,6	;volatile
  3478  0386  2BAB               	goto	l4884
  3479                           
  3480                           ;usb_device.c: 728: {
  3481                           ;usb_device.c: 730: if(UIEbits.SOFIE)
  3482  0387  1F12               	btfss	18,6	;volatile
  3483  0388  2B96               	goto	l4874
  3484                           
  3485                           ;usb_device.c: 731: {
  3486                           ;usb_device.c: 732: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  3487  0389  3073               	movlw	115
  3488  038A  0020               	movlb	0	; select bank0
  3489  038B  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3490  038C  3000               	movlw	0
  3491  038D  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3492  038E  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3493  038F  3001               	movlw	1
  3494  0390  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3495  0391  3000               	movlw	0
  3496  0392  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3497  0393  318B  2386  3183   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3498  0396                     l4874:	
  3499                           
  3500                           ;usb_device.c: 733: }
  3501                           ;usb_device.c: 734: (UIR &= 0xBF);
  3502  0396  30BF               	movlw	191
  3503  0397  0020               	movlb	0	; select bank0
  3504  0398  00E6               	movwf	??_USBDeviceTasks
  3505  0399  0866               	movf	??_USBDeviceTasks,w
  3506  039A  003D               	movlb	29	; select bank29
  3507  039B  0590               	andwf	16,f	;volatile
  3508                           
  3509                           ;usb_device.c: 737: USBIncrement1msInternalTimers();
  3510  039C  3189  21BA  3183   	fcall	_USBIncrement1msInternalTimers
  3511                           
  3512                           ;usb_device.c: 754: if(USBStatusStageTimeoutCounter != 0u)
  3513  039F  0022               	movlb	2	; select bank2
  3514  03A0  0861               	movf	_USBStatusStageTimeoutCounter^(0+256),w
  3515  03A1  1903               	btfsc	3,2
  3516  03A2  2BA5               	goto	l586
  3517                           
  3518                           ;usb_device.c: 755: {
  3519                           ;usb_device.c: 756: USBStatusStageTimeoutCounter--;
  3520  03A3  3001               	movlw	1
  3521  03A4  02E1               	subwf	_USBStatusStageTimeoutCounter^(0+256),f
  3522  03A5                     l586:	
  3523                           
  3524                           ;usb_device.c: 757: }
  3525                           ;usb_device.c: 763: if(USBStatusStageTimeoutCounter == 0)
  3526  03A5  0861               	movf	_USBStatusStageTimeoutCounter^(0+256),w
  3527  03A6  1D03               	btfss	3,2
  3528  03A7  2BAB               	goto	l4884
  3529                           
  3530                           ;usb_device.c: 764: {
  3531                           ;usb_device.c: 765: USBCtrlEPAllowStatusStage();
  3532  03A8  318E  263A  3183   	fcall	_USBCtrlEPAllowStatusStage
  3533  03AB                     l4884:	
  3534                           
  3535                           ;usb_device.c: 766: }
  3536                           ;usb_device.c: 768: }
  3537                           ;usb_device.c: 770: if(UIRbits.STALLIF && UIEbits.STALLIE)
  3538  03AB  003D               	movlb	29	; select bank29
  3539  03AC  1A90               	btfsc	16,5	;volatile
  3540  03AD  1E92               	btfss	18,5	;volatile
  3541  03AE  2BB2               	goto	l4890
  3542                           
  3543                           ;usb_device.c: 771: {
  3544                           ;usb_device.c: 772: USBStallHandler();
  3545  03AF  318A  22AB  3183   	fcall	_USBStallHandler
  3546  03B2                     l4890:	
  3547                           
  3548                           ;usb_device.c: 773: }
  3549                           ;usb_device.c: 775: if(UIRbits.UERRIF && UIEbits.UERRIE)
  3550  03B2  003D               	movlb	29	; select bank29
  3551  03B3  1890               	btfsc	16,1	;volatile
  3552  03B4  1C92               	btfss	18,1	;volatile
  3553  03B5  2BC5               	goto	l4898
  3554                           
  3555                           ;usb_device.c: 776: {
  3556                           ;usb_device.c: 777: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  3557  03B6  30FF               	movlw	255
  3558  03B7  0020               	movlb	0	; select bank0
  3559  03B8  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3560  03B9  307F               	movlw	127
  3561  03BA  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3562  03BB  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3563  03BC  3001               	movlw	1
  3564  03BD  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3565  03BE  3000               	movlw	0
  3566  03BF  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3567  03C0  318B  2386  3183   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3568                           
  3569                           ;usb_device.c: 778: {UEIR = 0;};
  3570  03C3  003D               	movlb	29	; select bank29
  3571  03C4  0193               	clrf	19	;volatile
  3572  03C5                     l4898:	
  3573                           
  3574                           ;usb_device.c: 786: }
  3575                           ;usb_device.c: 793: if(USBDeviceState < DEFAULT_STATE)
  3576  03C5  3004               	movlw	4
  3577  03C6  0020               	movlb	0	; select bank0
  3578  03C7  026C               	subwf	_USBDeviceState,w
  3579  03C8  1803               	skipnc
  3580  03C9  2BCC               	goto	l590
  3581                           
  3582                           ;usb_device.c: 794: {
  3583                           ;usb_device.c: 795: PIR2bits.USBIF = 0;;
  3584  03CA  1112               	bcf	18,2	;volatile
  3585                           
  3586                           ;usb_device.c: 796: return;
  3587  03CB  0008               	return
  3588  03CC                     l590:	
  3589                           
  3590                           ;usb_device.c: 797: }
  3591                           ;usb_device.c: 802: if(UIEbits.TRNIE)
  3592  03CC  003D               	movlb	29	; select bank29
  3593  03CD  1D92               	btfss	18,3	;volatile
  3594  03CE  2C24               	goto	l591
  3595                           
  3596                           ;usb_device.c: 803: {
  3597                           ;usb_device.c: 804: for(i = 0; i < 4u; i++)
  3598  03CF  0020               	movlb	0	; select bank0
  3599  03D0  01E8               	clrf	USBDeviceTasks@i
  3600  03D1  3004               	movlw	4
  3601  03D2  0268               	subwf	USBDeviceTasks@i,w
  3602  03D3  1803               	btfsc	3,0
  3603  03D4  2C24               	goto	l591
  3604  03D5                     l592:	
  3605                           
  3606                           ;usb_device.c: 805: {
  3607                           ;usb_device.c: 806: if(UIRbits.TRNIF)
  3608  03D5  003D               	movlb	29	; select bank29
  3609  03D6  1D90               	btfss	16,3	;volatile
  3610  03D7  2C24               	goto	l591
  3611                           
  3612                           ;usb_device.c: 807: {
  3613                           ;usb_device.c: 809: USTATcopy.Val = USTAT;
  3614  03D8  080F               	movf	15,w	;volatile
  3615  03D9  0020               	movlb	0	; select bank0
  3616  03DA  00E6               	movwf	??_USBDeviceTasks
  3617  03DB  0866               	movf	??_USBDeviceTasks,w
  3618  03DC  00EF               	movwf	_USTATcopy
  3619                           
  3620                           ;usb_device.c: 810: endpoint_number = USTATcopy.endpoint_number;
  3621  03DD  0C6F               	rrf	_USTATcopy,w
  3622  03DE  00E6               	movwf	??_USBDeviceTasks
  3623  03DF  0CE6               	rrf	??_USBDeviceTasks,f
  3624  03E0  0C66               	rrf	??_USBDeviceTasks,w
  3625  03E1  390F               	andlw	15
  3626  03E2  00E7               	movwf	??_USBDeviceTasks+1
  3627  03E3  0867               	movf	??_USBDeviceTasks+1,w
  3628  03E4  0021               	movlb	1	; select bank1
  3629  03E5  00EA               	movwf	_endpoint_number^(0+128)
  3630                           
  3631                           ;usb_device.c: 812: (UIR &= 0xF7);
  3632  03E6  30F7               	movlw	247
  3633  03E7  0020               	movlb	0	; select bank0
  3634  03E8  00E6               	movwf	??_USBDeviceTasks
  3635  03E9  0866               	movf	??_USBDeviceTasks,w
  3636  03EA  003D               	movlb	29	; select bank29
  3637  03EB  0590               	andwf	16,f	;volatile
  3638                           
  3639                           ;usb_device.c: 817: if(USTATcopy.direction == 0)
  3640  03EC  0020               	movlb	0	; select bank0
  3641  03ED  196F               	btfsc	_USTATcopy,2
  3642  03EE  2BF3               	goto	l4918
  3643                           
  3644                           ;usb_device.c: 818: {
  3645                           ;usb_device.c: 819: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  3646  03EF  0021               	movlb	1	; select bank1
  3647  03F0  086A               	movf	_endpoint_number^(0+128),w
  3648  03F1  3E54               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  3649  03F2  2BF6               	goto	L1
  3650  03F3                     l4918:	
  3651                           ;usb_device.c: 820: }
  3652                           
  3653                           
  3654                           ;usb_device.c: 821: else
  3655                           ;usb_device.c: 822: {
  3656                           ;usb_device.c: 823: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  3657  03F3  0021               	movlb	1	; select bank1
  3658  03F4  086A               	movf	_endpoint_number^(0+128),w
  3659  03F5  3E52               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  3660  03F6                     L1:	
  3661  03F6  0086               	movwf	6
  3662  03F7  3001               	movlw	1	; select bank2/3
  3663  03F8  0087               	movwf	7
  3664  03F9  0801               	movf	1,w
  3665  03FA  3901               	andlw	1
  3666  03FB  0020               	movlb	0	; select bank0
  3667  03FC  00E6               	movwf	??_USBDeviceTasks
  3668  03FD  3001               	movlw	1
  3669  03FE  06E6               	xorwf	??_USBDeviceTasks,f
  3670  03FF  0801               	movf	1,w
  3671  0400  0666               	xorwf	??_USBDeviceTasks,w
  3672  0401  39FE               	andlw	-2
  3673  0402  0666               	xorwf	??_USBDeviceTasks,w
  3674  0403  0081               	movwf	1
  3675                           
  3676                           ;usb_device.c: 824: }
  3677                           ;usb_device.c: 829: if(endpoint_number == 0)
  3678  0404  0021               	movlb	1	; select bank1
  3679  0405  086A               	movf	_endpoint_number^(0+128),w
  3680  0406  1D03               	btfss	3,2
  3681  0407  2C0C               	goto	l4924
  3682                           
  3683                           ;usb_device.c: 830: {
  3684                           ;usb_device.c: 831: USBCtrlEPService();
  3685  0408  318F  2711  3183   	fcall	_USBCtrlEPService
  3686                           
  3687                           ;usb_device.c: 832: }
  3688  040B  2C1B               	goto	l4926
  3689  040C                     l4924:	
  3690                           
  3691                           ;usb_device.c: 833: else
  3692                           ;usb_device.c: 834: {
  3693                           ;usb_device.c: 835: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  3694  040C  3072               	movlw	114
  3695  040D  0020               	movlb	0	; select bank0
  3696  040E  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3697  040F  3000               	movlw	0
  3698  0410  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3699  0411  306F               	movlw	(low (_USTATcopy| 0))& (0+255)
  3700  0412  00E6               	movwf	??_USBDeviceTasks
  3701  0413  0866               	movf	??_USBDeviceTasks,w
  3702  0414  00D7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3703  0415  3000               	movlw	0
  3704  0416  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3705  0417  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3706  0418  318B  2386  3183   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3707  041B                     l4926:	
  3708                           ;usb_device.c: 838: else
  3709                           ;usb_device.c: 839: {
  3710                           ;usb_device.c: 840: break;
  3711                           
  3712                           ;usb_device.c: 836: }
  3713                           ;usb_device.c: 837: }
  3714                           
  3715  041B  3001               	movlw	1
  3716  041C  0020               	movlb	0	; select bank0
  3717  041D  00E6               	movwf	??_USBDeviceTasks
  3718  041E  0866               	movf	??_USBDeviceTasks,w
  3719  041F  07E8               	addwf	USBDeviceTasks@i,f
  3720  0420  3004               	movlw	4
  3721  0421  0268               	subwf	USBDeviceTasks@i,w
  3722  0422  1C03               	skipc
  3723  0423  2BD5               	goto	l592
  3724  0424                     l591:	
  3725                           
  3726                           ;usb_device.c: 841: }
  3727                           ;usb_device.c: 842: }
  3728                           ;usb_device.c: 843: }
  3729                           ;usb_device.c: 845: PIR2bits.USBIF = 0;;
  3730  0424  0020               	movlb	0	; select bank0
  3731  0425  1112               	bcf	18,2	;volatile
  3732  0426  0008               	return
  3733  0427                     __end_of_USBDeviceTasks:	
  3734                           
  3735                           	psect	text2
  3736  0A50                     __ptext2:	
  3737 ;; *************** function _USBWakeFromSuspend *****************
  3738 ;; Defined at:
  3739 ;;		line 2322 in file "../framework/usb/usb_device.c"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;		None
  3742 ;; Auto vars:     Size  Location     Type
  3743 ;;		None
  3744 ;; Return value:  Size  Location     Type
  3745 ;;		None               void
  3746 ;; Registers used:
  3747 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3755 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3756 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3757 ;;Total ram usage:        1 bytes
  3758 ;; Hardware stack levels used:    1
  3759 ;; Hardware stack levels required when called:    5
  3760 ;; This function calls:
  3761 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3762 ;; This function is called by:
  3763 ;;		_USBDeviceTasks
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767                           
  3768                           ;psect for function _USBWakeFromSuspend
  3769  0A50                     _USBWakeFromSuspend:	
  3770                           
  3771                           ;usb_device.c: 2324: USBBusIsSuspended = 0;
  3772                           
  3773                           ;incstack = 0
  3774                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3775  0A50  0022               	movlb	2	; select bank2
  3776  0A51  01DC               	clrf	_USBBusIsSuspended^(0+256)
  3777                           
  3778                           ;usb_device.c: 2330: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  3779  0A52  3074               	movlw	116
  3780  0A53  0020               	movlb	0	; select bank0
  3781  0A54  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3782  0A55  3000               	movlw	0
  3783  0A56  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3784  0A57  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3785  0A58  3000               	movlw	0
  3786  0A59  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3787  0A5A  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3788  0A5B  318B  2386  318A   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3789                           
  3790                           ;usb_device.c: 2337: UCONbits.SUSPND = 0;
  3791  0A5E  003D               	movlb	29	; select bank29
  3792  0A5F  108E               	bcf	14,1	;volatile
  3793                           
  3794                           ;usb_device.c: 2342: UIEbits.ACTVIE = 0;
  3795  0A60  1112               	bcf	18,2	;volatile
  3796  0A61                     l4762:	
  3797                           ;usb_device.c: 2360: while(UIRbits.ACTVIF)
  3798                           
  3799  0A61  1D10               	btfss	16,2	;volatile
  3800  0A62  2A68               	goto	l4764
  3801                           
  3802                           ;usb_device.c: 2362: {
  3803                           ;usb_device.c: 2363: (UIR &= 0xFB);
  3804  0A63  30FB               	movlw	251
  3805  0A64  00FB               	movwf	??_USBWakeFromSuspend
  3806  0A65  087B               	movf	??_USBWakeFromSuspend,w
  3807  0A66  0590               	andwf	16,f	;volatile
  3808  0A67  2A61               	goto	l4762
  3809  0A68                     l4764:	
  3810                           
  3811                           ;usb_device.c: 2364: }
  3812                           ;usb_device.c: 2366: USBTicksSinceSuspendEnd = 0;
  3813  0A68  0022               	movlb	2	; select bank2
  3814  0A69  01E2               	clrf	_USBTicksSinceSuspendEnd^(0+256)
  3815  0A6A  0008               	return
  3816  0A6B                     __end_of_USBWakeFromSuspend:	
  3817                           
  3818                           	psect	text3
  3819  098B                     __ptext3:	
  3820 ;; *************** function _USBSuspend *****************
  3821 ;; Defined at:
  3822 ;;		line 2264 in file "../framework/usb/usb_device.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;		None
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;		None
  3827 ;; Return value:  Size  Location     Type
  3828 ;;		None               void
  3829 ;; Registers used:
  3830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3838 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3839 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3840 ;;Total ram usage:        1 bytes
  3841 ;; Hardware stack levels used:    1
  3842 ;; Hardware stack levels required when called:    5
  3843 ;; This function calls:
  3844 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3845 ;; This function is called by:
  3846 ;;		_USBDeviceTasks
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           
  3851                           ;psect for function _USBSuspend
  3852  098B                     _USBSuspend:	
  3853                           
  3854                           ;usb_device.c: 2289: UIEbits.ACTVIE = 1;
  3855                           
  3856                           ;incstack = 0
  3857                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3858  098B  003D               	movlb	29	; select bank29
  3859  098C  1512               	bsf	18,2	;volatile
  3860                           
  3861                           ;usb_device.c: 2290: (UIR &= 0xEF);
  3862  098D  30EF               	movlw	239
  3863  098E  00FB               	movwf	??_USBSuspend
  3864  098F  087B               	movf	??_USBSuspend,w
  3865  0990  0590               	andwf	16,f	;volatile
  3866                           
  3867                           ;usb_device.c: 2293: UCONbits.SUSPND = 1;
  3868  0991  148E               	bsf	14,1	;volatile
  3869                           
  3870                           ;usb_device.c: 2296: USBBusIsSuspended = 1;
  3871  0992  0022               	movlb	2	; select bank2
  3872  0993  01DC               	clrf	_USBBusIsSuspended^(0+256)
  3873  0994  0ADC               	incf	_USBBusIsSuspended^(0+256),f
  3874                           
  3875                           ;usb_device.c: 2297: USBTicksSinceSuspendEnd = 0;
  3876  0995  01E2               	clrf	_USBTicksSinceSuspendEnd^(0+256)
  3877                           
  3878                           ;usb_device.c: 2304: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  3879  0996  3075               	movlw	117
  3880  0997  0020               	movlb	0	; select bank0
  3881  0998  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3882  0999  3000               	movlw	0
  3883  099A  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3884  099B  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3885  099C  3000               	movlw	0
  3886  099D  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3887  099E  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3888  099F  318B  2386         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3889  09A1  0008               	return
  3890  09A2                     __end_of_USBSuspend:	
  3891                           
  3892                           	psect	text4
  3893  0AAB                     __ptext4:	
  3894 ;; *************** function _USBStallHandler *****************
  3895 ;; Defined at:
  3896 ;;		line 2221 in file "../framework/usb/usb_device.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;		None
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;		None
  3901 ;; Return value:  Size  Location     Type
  3902 ;;		None               void
  3903 ;; Registers used:
  3904 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3912 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3913 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3914 ;;Total ram usage:        1 bytes
  3915 ;; Hardware stack levels used:    1
  3916 ;; Hardware stack levels required when called:    1
  3917 ;; This function calls:
  3918 ;;		Nothing
  3919 ;; This function is called by:
  3920 ;;		_USBDeviceTasks
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923                           
  3924                           
  3925                           ;psect for function _USBStallHandler
  3926  0AAB                     _USBStallHandler:	
  3927                           
  3928                           ;usb_device.c: 2233: if(UEP0bits.EPSTALL == 1)
  3929                           
  3930                           ;incstack = 0
  3931                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  3932  0AAB  003D               	movlb	29	; select bank29
  3933  0AAC  1C18               	btfss	24,0	;volatile
  3934  0AAD  2ACA               	goto	l4044
  3935                           
  3936                           ;usb_device.c: 2234: {
  3937                           ;usb_device.c: 2236: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  3938  0AAE  0020               	movlb	0	; select bank0
  3939  0AAF  086D               	movf	_pBDTEntryEP0OutCurrent,w
  3940  0AB0  0086               	movwf	6
  3941  0AB1  0187               	clrf	7
  3942  0AB2  3080               	movlw	128
  3943  0AB3  0601               	xorwf	1,w
  3944  0AB4  1D03               	btfss	3,2
  3945  0AB5  2AC8               	goto	l4042
  3946  0AB6  0869               	movf	_pBDTEntryIn,w
  3947  0AB7  0086               	movwf	6
  3948  0AB8  0187               	clrf	7
  3949  0AB9  3084               	movlw	132
  3950  0ABA  0601               	xorwf	1,w
  3951  0ABB  1D03               	btfss	3,2
  3952  0ABC  2AC8               	goto	l4042
  3953                           
  3954                           ;usb_device.c: 2237: {
  3955                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  3956  0ABD  300C               	movlw	12
  3957  0ABE  00F1               	movwf	??_USBStallHandler
  3958  0ABF  086D               	movf	_pBDTEntryEP0OutCurrent,w
  3959  0AC0  0086               	movwf	6
  3960  0AC1  0187               	clrf	7
  3961  0AC2  0871               	movf	??_USBStallHandler,w
  3962  0AC3  0081               	movwf	1
  3963                           
  3964                           ;usb_device.c: 2240: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  3965  0AC4  086D               	movf	_pBDTEntryEP0OutCurrent,w
  3966  0AC5  0086               	movwf	6
  3967  0AC6  0187               	clrf	7
  3968  0AC7  1781               	bsf	1,7
  3969  0AC8                     l4042:	
  3970                           
  3971                           ;usb_device.c: 2241: }
  3972                           ;usb_device.c: 2242: UEP0bits.EPSTALL = 0;
  3973  0AC8  003D               	movlb	29	; select bank29
  3974  0AC9  1018               	bcf	24,0	;volatile
  3975  0ACA                     l4044:	
  3976                           
  3977                           ;usb_device.c: 2243: }
  3978                           ;usb_device.c: 2245: (UIR &= 0xDF);
  3979  0ACA  30DF               	movlw	223
  3980  0ACB  00F1               	movwf	??_USBStallHandler
  3981  0ACC  0871               	movf	??_USBStallHandler,w
  3982  0ACD  0590               	andwf	16,f	;volatile
  3983  0ACE  0008               	return
  3984  0ACF                     __end_of_USBStallHandler:	
  3985                           
  3986                           	psect	text5
  3987  09BA                     __ptext5:	
  3988 ;; *************** function _USBIncrement1msInternalTimers *****************
  3989 ;; Defined at:
  3990 ;;		line 3050 in file "../framework/usb/usb_device.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;		None
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;		None
  3995 ;; Return value:  Size  Location     Type
  3996 ;;		None               void
  3997 ;; Registers used:
  3998 ;;		wreg, status,2, status,0
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4006 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4007 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4008 ;;Total ram usage:        1 bytes
  4009 ;; Hardware stack levels used:    1
  4010 ;; Hardware stack levels required when called:    1
  4011 ;; This function calls:
  4012 ;;		Nothing
  4013 ;; This function is called by:
  4014 ;;		_USBDeviceTasks
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           
  4019                           ;psect for function _USBIncrement1msInternalTimers
  4020  09BA                     _USBIncrement1msInternalTimers:	
  4021                           
  4022                           ;usb_device.c: 3058: USB1msTickCount++;
  4023                           
  4024                           ;incstack = 0
  4025                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  4026  09BA  3001               	movlw	1
  4027  09BB  0022               	movlb	2	; select bank2
  4028  09BC  07CE               	addwf	_USB1msTickCount^(0+256),f
  4029  09BD  3000               	movlw	0
  4030  09BE  3DCF               	addwfc	(_USB1msTickCount+1)^(0+256),f
  4031  09BF  3000               	movlw	0
  4032  09C0  3DD0               	addwfc	(_USB1msTickCount+2)^(0+256),f
  4033  09C1  3000               	movlw	0
  4034  09C2  3DD1               	addwfc	(_USB1msTickCount+3)^(0+256),f
  4035                           
  4036                           ;usb_device.c: 3059: if(USBBusIsSuspended == 0)
  4037  09C3  085C               	movf	_USBBusIsSuspended^(0+256),w
  4038  09C4  1D03               	btfss	3,2
  4039  09C5  0008               	return
  4040                           
  4041                           ;usb_device.c: 3060: {
  4042                           ;usb_device.c: 3061: USBTicksSinceSuspendEnd++;
  4043  09C6  3001               	movlw	1
  4044  09C7  00F1               	movwf	??_USBIncrement1msInternalTimers
  4045  09C8  0871               	movf	??_USBIncrement1msInternalTimers,w
  4046  09C9  07E2               	addwf	_USBTicksSinceSuspendEnd^(0+256),f
  4047                           
  4048                           ;usb_device.c: 3063: if(USBTicksSinceSuspendEnd == 0)
  4049  09CA  0862               	movf	_USBTicksSinceSuspendEnd^(0+256),w
  4050  09CB  1D03               	btfss	3,2
  4051  09CC  0008               	return
  4052                           
  4053                           ;usb_device.c: 3064: {
  4054                           ;usb_device.c: 3065: USBTicksSinceSuspendEnd = 255;
  4055  09CD  30FF               	movlw	255
  4056  09CE  00F1               	movwf	??_USBIncrement1msInternalTimers
  4057  09CF  0871               	movf	??_USBIncrement1msInternalTimers,w
  4058  09D0  00E2               	movwf	_USBTicksSinceSuspendEnd^(0+256)
  4059  09D1  0008               	return
  4060  09D2                     __end_of_USBIncrement1msInternalTimers:	
  4061                           
  4062                           	psect	text6
  4063  05B3                     __ptext6:	
  4064 ;; *************** function _USBDeviceInit *****************
  4065 ;; Defined at:
  4066 ;;		line 300 in file "../framework/usb/usb_device.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;		None
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;  p               2    2[COMMON] PTR unsigned char 
  4071 ;;		 -> UEP1(1), 
  4072 ;;  i               1    4[COMMON] unsigned char 
  4073 ;;  i               1    5[COMMON] unsigned char 
  4074 ;; Return value:  Size  Location     Type
  4075 ;;		None               void
  4076 ;; Registers used:
  4077 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4084 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4085 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4086 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4087 ;;Total ram usage:        5 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:    1
  4090 ;; This function calls:
  4091 ;;		Nothing
  4092 ;; This function is called by:
  4093 ;;		_main
  4094 ;;		_USBDeviceTasks
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           
  4099                           ;psect for function _USBDeviceInit
  4100  05B3                     _USBDeviceInit:	
  4101                           
  4102                           ;usb_device.c: 302: uint8_t i;
  4103                           ;usb_device.c: 304: {PIE2bits.USBIE = 0;};
  4104                           
  4105                           ;incstack = 0
  4106                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  4107  05B3  0021               	movlb	1	; select bank1
  4108  05B4  1112               	bcf	18,2	;volatile
  4109                           
  4110                           ;usb_device.c: 307: {UEIR = 0;};
  4111  05B5  003D               	movlb	29	; select bank29
  4112  05B6  0193               	clrf	19	;volatile
  4113                           
  4114                           ;usb_device.c: 310: {UIR = 0;};
  4115  05B7  0190               	clrf	16	;volatile
  4116                           
  4117                           ;usb_device.c: 313: UEP0 = 0;
  4118  05B8  0198               	clrf	24	;volatile
  4119                           
  4120                           ;usb_device.c: 315: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 0
      +                          ; };
  4121  05B9  300E               	movlw	14
  4122  05BA  00F3               	movwf	USBDeviceInit@p+1
  4123  05BB  3099               	movlw	153
  4124  05BC  00F2               	movwf	USBDeviceInit@p
  4125  05BD  01F4               	clrf	USBDeviceInit@i_1708
  4126  05BE  0874               	movf	USBDeviceInit@i_1708,w
  4127  05BF  1D03               	btfss	3,2
  4128  05C0  2DD1               	goto	l3866
  4129  05C1                     l3858:	
  4130  05C1  0872               	movf	USBDeviceInit@p,w
  4131  05C2  0086               	movwf	6
  4132  05C3  0873               	movf	USBDeviceInit@p+1,w
  4133  05C4  0087               	movwf	7
  4134  05C5  0181               	clrf	1
  4135  05C6  3001               	movlw	1
  4136  05C7  07F2               	addwf	USBDeviceInit@p,f
  4137  05C8  3000               	movlw	0
  4138  05C9  3DF3               	addwfc	USBDeviceInit@p+1,f
  4139  05CA  3001               	movlw	1
  4140  05CB  00F1               	movwf	??_USBDeviceInit
  4141  05CC  0871               	movf	??_USBDeviceInit,w
  4142  05CD  07F4               	addwf	USBDeviceInit@i_1708,f
  4143  05CE  0874               	movf	USBDeviceInit@i_1708,w
  4144  05CF  1903               	btfsc	3,2
  4145  05D0  2DC1               	goto	l3858
  4146  05D1                     l3866:	
  4147                           
  4148                           ;usb_device.c: 317: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  4149  05D1  3016               	movlw	22
  4150  05D2  003D               	movlb	29	; select bank29
  4151  05D3  0091               	movwf	17	;volatile
  4152  05D4  309F               	movlw	159
  4153  05D5  0097               	movwf	23	;volatile
  4154  05D6  307B               	movlw	123
  4155  05D7  0092               	movwf	18	;volatile
  4156                           
  4157                           ;usb_device.c: 320: ;
  4158                           ;usb_device.c: 323: ;
  4159                           ;usb_device.c: 326: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  4160  05D8  01F5               	clrf	USBDeviceInit@i
  4161  05D9  3008               	movlw	8
  4162  05DA  0275               	subwf	USBDeviceInit@i,w
  4163  05DB  1803               	btfsc	3,0
  4164  05DC  2DF6               	goto	l564
  4165  05DD                     l3874:	
  4166                           
  4167                           ;usb_device.c: 327: {
  4168                           ;usb_device.c: 328: BDT[i].Val = 0x00;
  4169  05DD  0875               	movf	USBDeviceInit@i,w
  4170  05DE  00F1               	movwf	??_USBDeviceInit
  4171  05DF  3001               	movlw	1
  4172  05E0                     u3235:	
  4173  05E0  35F1               	lslf	??_USBDeviceInit,f
  4174  05E1  3EFF               	addlw	-1
  4175  05E2  1D03               	skipz
  4176  05E3  2DE0               	goto	u3235
  4177  05E4  3571               	lslf	??_USBDeviceInit,w
  4178  05E5  3E20               	addlw	32
  4179  05E6  0086               	movwf	6
  4180  05E7  0187               	clrf	7
  4181  05E8  3000               	movlw	0
  4182  05E9  3FC0               	movwi [0]fsr1
  4183  05EA  3000               	movlw	0
  4184  05EB  3FC1               	movwi [1]fsr1
  4185  05EC  3FC2               	movwi [2]fsr1
  4186  05ED  3FC3               	movwi [3]fsr1
  4187  05EE  3001               	movlw	1
  4188  05EF  00F1               	movwf	??_USBDeviceInit
  4189  05F0  0871               	movf	??_USBDeviceInit,w
  4190  05F1  07F5               	addwf	USBDeviceInit@i,f
  4191  05F2  3008               	movlw	8
  4192  05F3  0275               	subwf	USBDeviceInit@i,w
  4193  05F4  1C03               	skipc
  4194  05F5  2DDD               	goto	l3874
  4195  05F6                     l564:	
  4196                           
  4197                           ;usb_device.c: 329: }
  4198                           ;usb_device.c: 332: UCONbits.PPBRST = 1;
  4199  05F6  003D               	movlb	29	; select bank29
  4200  05F7  170E               	bsf	14,6	;volatile
  4201                           
  4202                           ;usb_device.c: 335: UADDR = 0x00;
  4203  05F8  0196               	clrf	22	;volatile
  4204                           
  4205                           ;usb_device.c: 338: UCONbits.PKTDIS = 0;
  4206  05F9  120E               	bcf	14,4	;volatile
  4207                           
  4208                           ;usb_device.c: 341: UCONbits.PPBRST = 0;
  4209  05FA  130E               	bcf	14,6	;volatile
  4210  05FB                     l3886:	
  4211                           ;usb_device.c: 344: do
  4212                           
  4213                           
  4214                           ;usb_device.c: 345: {
  4215                           ;usb_device.c: 346: (UIR &= 0xF7);
  4216  05FB  30F7               	movlw	247
  4217  05FC  00F1               	movwf	??_USBDeviceInit
  4218  05FD  0871               	movf	??_USBDeviceInit,w
  4219  05FE  0590               	andwf	16,f	;volatile
  4220                           
  4221                           ;usb_device.c: 348: inPipes[0].info.Val = 0;
  4222  05FF  0021               	movlb	1	; select bank1
  4223  0600  01E2               	clrf	(_inPipes^(0+128)+2)
  4224                           
  4225                           ;usb_device.c: 349: outPipes[0].info.Val = 0;
  4226  0601  0022               	movlb	2	; select bank2
  4227  0602  01C9               	clrf	(_outPipes^(0+256)+2)
  4228                           
  4229                           ;usb_device.c: 350: outPipes[0].wCount.Val = 0;
  4230  0603  01CA               	clrf	(_outPipes^(0+256)+3)
  4231  0604  01CB               	clrf	((_outPipes+1)^(0+256)+3)
  4232                           
  4233                           ;usb_device.c: 351: }while(UIRbits.TRNIF == 1);
  4234  0605  003D               	movlb	29	; select bank29
  4235  0606  1990               	btfsc	16,3	;volatile
  4236  0607  2DFB               	goto	l3886
  4237                           
  4238                           ;usb_device.c: 355: USBStatusStageEnabledFlag1 = 1;
  4239  0608  3001               	movlw	1
  4240  0609  00F1               	movwf	??_USBDeviceInit
  4241  060A  0871               	movf	??_USBDeviceInit,w
  4242  060B  0022               	movlb	2	; select bank2
  4243  060C  00DF               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  4244                           
  4245                           ;usb_device.c: 356: USBStatusStageEnabledFlag2 = 1;
  4246  060D  3001               	movlw	1
  4247  060E  00F1               	movwf	??_USBDeviceInit
  4248  060F  0871               	movf	??_USBDeviceInit,w
  4249  0610  00E0               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  4250                           
  4251                           ;usb_device.c: 358: USBDeferINDataStagePackets = 0;
  4252  0611  01DD               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  4253                           
  4254                           ;usb_device.c: 359: USBDeferOUTDataStagePackets = 0;
  4255  0612  01DE               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  4256                           
  4257                           ;usb_device.c: 360: USBBusIsSuspended = 0;
  4258  0613  01DC               	clrf	_USBBusIsSuspended^(0+256)
  4259                           
  4260                           ;usb_device.c: 364: for(i = 0; i < (uint8_t)(1+1u); i++)
  4261  0614  01F5               	clrf	USBDeviceInit@i
  4262  0615  3002               	movlw	2
  4263  0616  0275               	subwf	USBDeviceInit@i,w
  4264  0617  1803               	btfsc	3,0
  4265  0618  2E38               	goto	l3914
  4266  0619                     l3908:	
  4267                           
  4268                           ;usb_device.c: 365: {
  4269                           ;usb_device.c: 366: pBDTEntryIn[i] = 0u;
  4270  0619  0875               	movf	USBDeviceInit@i,w
  4271  061A  3E69               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  4272  061B  0086               	movwf	6
  4273  061C  0187               	clrf	7
  4274  061D  0181               	clrf	1
  4275                           
  4276                           ;usb_device.c: 367: pBDTEntryOut[i] = 0u;
  4277  061E  0875               	movf	USBDeviceInit@i,w
  4278  061F  3E58               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4279  0620  0086               	movwf	6
  4280  0621  3001               	movlw	1	; select bank2/3
  4281  0622  0087               	movwf	7
  4282  0623  0181               	clrf	1
  4283                           
  4284                           ;usb_device.c: 368: ep_data_in[i].Val = 0u;
  4285  0624  0875               	movf	USBDeviceInit@i,w
  4286  0625  3E52               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4287  0626  0086               	movwf	6
  4288  0627  3001               	movlw	1	; select bank2/3
  4289  0628  0087               	movwf	7
  4290  0629  0181               	clrf	1
  4291                           
  4292                           ;usb_device.c: 369: ep_data_out[i].Val = 0u;
  4293  062A  0875               	movf	USBDeviceInit@i,w
  4294  062B  3E54               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4295  062C  0086               	movwf	6
  4296  062D  3001               	movlw	1	; select bank2/3
  4297  062E  0087               	movwf	7
  4298  062F  0181               	clrf	1
  4299  0630  3001               	movlw	1
  4300  0631  00F1               	movwf	??_USBDeviceInit
  4301  0632  0871               	movf	??_USBDeviceInit,w
  4302  0633  07F5               	addwf	USBDeviceInit@i,f
  4303  0634  3002               	movlw	2
  4304  0635  0275               	subwf	USBDeviceInit@i,w
  4305  0636  1C03               	skipc
  4306  0637  2E19               	goto	l3908
  4307  0638                     l3914:	
  4308                           
  4309                           ;usb_device.c: 370: }
  4310                           ;usb_device.c: 373: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  4311  0638  3028               	movlw	40
  4312  0639  00F1               	movwf	??_USBDeviceInit
  4313  063A  0871               	movf	??_USBDeviceInit,w
  4314  063B  0020               	movlb	0	; select bank0
  4315  063C  00E9               	movwf	_pBDTEntryIn
  4316                           
  4317                           ;usb_device.c: 375: UEP0 = 0x06|0x10;
  4318  063D  3016               	movlw	22
  4319  063E  003D               	movlb	29	; select bank29
  4320  063F  0098               	movwf	24	;volatile
  4321                           
  4322                           ;usb_device.c: 377: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4323  0640  3000               	movlw	0
  4324  0641  0020               	movlb	0	; select bank0
  4325  0642  00A3               	movwf	35	;volatile
  4326  0643  3040               	movlw	64
  4327  0644  00A2               	movwf	34	;volatile
  4328                           
  4329                           ;usb_device.c: 378: BDT[0].CNT = 8;
  4330  0645  3008               	movlw	8
  4331  0646  00A1               	movwf	33	;volatile
  4332                           
  4333                           ;usb_device.c: 379: BDT[0].STAT.Val = 0x00|0x04;
  4334  0647  3004               	movlw	4
  4335  0648  00F1               	movwf	??_USBDeviceInit
  4336  0649  0871               	movf	??_USBDeviceInit,w
  4337  064A  00A0               	movwf	32	;volatile
  4338                           
  4339                           ;usb_device.c: 380: BDT[0].STAT.Val |= 0x80;
  4340  064B  17A0               	bsf	32,7	;volatile
  4341                           
  4342                           ;usb_device.c: 383: USBActiveConfiguration = 0;
  4343  064C  0021               	movlb	1	; select bank1
  4344  064D  01EE               	clrf	_USBActiveConfiguration^(0+128)
  4345                           
  4346                           ;usb_device.c: 385: USB1msTickCount = 0;
  4347  064E  3000               	movlw	0
  4348  064F  0022               	movlb	2	; select bank2
  4349  0650  00D1               	movwf	(_USB1msTickCount+3)^(0+256)
  4350  0651  3000               	movlw	0
  4351  0652  00D0               	movwf	(_USB1msTickCount+2)^(0+256)
  4352  0653  3000               	movlw	0
  4353  0654  00CF               	movwf	(_USB1msTickCount+1)^(0+256)
  4354  0655  3000               	movlw	0
  4355  0656  00CE               	movwf	_USB1msTickCount^(0+256)
  4356                           
  4357                           ;usb_device.c: 386: USBTicksSinceSuspendEnd = 0;
  4358  0657  01E2               	clrf	_USBTicksSinceSuspendEnd^(0+256)
  4359                           
  4360                           ;usb_device.c: 389: USBDeviceState = DETACHED_STATE;
  4361  0658  0020               	movlb	0	; select bank0
  4362  0659  01EC               	clrf	_USBDeviceState
  4363  065A  0008               	return
  4364  065B                     __end_of_USBDeviceInit:	
  4365                           
  4366                           	psect	text7
  4367  0F11                     __ptext7:	
  4368 ;; *************** function _USBCtrlEPService *****************
  4369 ;; Defined at:
  4370 ;;		line 2391 in file "../framework/usb/usb_device.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;		None
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;  setup_cnt       1   21[BANK0 ] unsigned char 
  4375 ;; Return value:  Size  Location     Type
  4376 ;;		None               void
  4377 ;; Registers used:
  4378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4385 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4386 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4387 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4388 ;;Total ram usage:        4 bytes
  4389 ;; Hardware stack levels used:    1
  4390 ;; Hardware stack levels required when called:    8
  4391 ;; This function calls:
  4392 ;;		_USBCtrlTrfInHandler
  4393 ;;		_USBCtrlTrfOutHandler
  4394 ;;		_USBCtrlTrfSetupHandler
  4395 ;; This function is called by:
  4396 ;;		_USBDeviceTasks
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           
  4401                           ;psect for function _USBCtrlEPService
  4402  0F11                     _USBCtrlEPService:	
  4403                           
  4404                           ;usb_device.c: 2397: USBStatusStageTimeoutCounter = (uint8_t)45;
  4405                           
  4406                           ;incstack = 0
  4407                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4408  0F11  302D               	movlw	45
  4409  0F12  0020               	movlb	0	; select bank0
  4410  0F13  00E2               	movwf	??_USBCtrlEPService
  4411  0F14  0862               	movf	??_USBCtrlEPService,w
  4412  0F15  0022               	movlb	2	; select bank2
  4413  0F16  00E1               	movwf	_USBStatusStageTimeoutCounter^(0+256)
  4414                           
  4415                           ;usb_device.c: 2401: if((USTATcopy.Val & ~0x02) == 0x00)
  4416  0F17  0020               	movlb	0	; select bank0
  4417  0F18  086F               	movf	_USTATcopy,w
  4418  0F19  39FD               	andlw	253
  4419  0F1A  1D03               	btfss	3,2
  4420  0F1B  2F76               	goto	l4808
  4421                           
  4422                           ;usb_device.c: 2402: {
  4423                           ;usb_device.c: 2405: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  4424  0F1C  366F               	lsrf	_USTATcopy,w
  4425  0F1D  393F               	andlw	63
  4426  0F1E  00E2               	movwf	??_USBCtrlEPService
  4427  0F1F  3001               	movlw	1
  4428  0F20                     u4325:	
  4429  0F20  35E2               	lslf	??_USBCtrlEPService,f
  4430  0F21  3EFF               	addlw	-1
  4431  0F22  1D03               	skipz
  4432  0F23  2F20               	goto	u4325
  4433  0F24  3562               	lslf	??_USBCtrlEPService,w
  4434  0F25  3E20               	addlw	32
  4435  0F26  00E3               	movwf	??_USBCtrlEPService+1
  4436  0F27  0863               	movf	??_USBCtrlEPService+1,w
  4437  0F28  00ED               	movwf	_pBDTEntryEP0OutCurrent
  4438                           
  4439                           ;usb_device.c: 2413: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  4440  0F29  086D               	movf	_pBDTEntryEP0OutCurrent,w
  4441  0F2A  00E2               	movwf	??_USBCtrlEPService
  4442  0F2B  0862               	movf	??_USBCtrlEPService,w
  4443  0F2C  00FC               	movwf	_pBDTEntryEP0OutNext
  4444                           
  4445                           ;usb_device.c: 2415: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  4446  0F2D  3004               	movlw	4
  4447  0F2E  00E2               	movwf	??_USBCtrlEPService
  4448  0F2F  0862               	movf	??_USBCtrlEPService,w
  4449  0F30  06FC               	xorwf	_pBDTEntryEP0OutNext,f
  4450                           
  4451                           ;usb_device.c: 2418: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  4452  0F31  086D               	movf	_pBDTEntryEP0OutCurrent,w
  4453  0F32  0086               	movwf	6
  4454  0F33  0187               	clrf	7
  4455  0F34  0C01               	rrf	1,w
  4456  0F35  0C89               	rrf	9,f
  4457  0F36  390F               	andlw	15
  4458  0F37  3A0D               	xorlw	13
  4459  0F38  1D03               	skipz
  4460  0F39  2F73               	goto	l4806
  4461                           
  4462                           ;usb_device.c: 2419: {
  4463                           ;usb_device.c: 2420: unsigned char setup_cnt;
  4464                           ;usb_device.c: 2426: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  4465  0F3A  01E5               	clrf	USBCtrlEPService@setup_cnt
  4466  0F3B  3008               	movlw	8
  4467  0F3C  0265               	subwf	USBCtrlEPService@setup_cnt,w
  4468  0F3D  1803               	btfsc	3,0
  4469  0F3E  2F64               	goto	l4802
  4470  0F3F                     l4796:	
  4471                           
  4472                           ;usb_device.c: 2427: {
  4473                           ;usb_device.c: 2428: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
  4474  0F3F  086D               	movf	_pBDTEntryEP0OutCurrent,w
  4475  0F40  3E02               	addlw	2
  4476  0F41  0086               	movwf	6
  4477  0F42  0187               	clrf	7
  4478  0F43  3F40               	moviw [0]fsr1
  4479  0F44  00E2               	movwf	??_USBCtrlEPService
  4480  0F45  3F41               	moviw [1]fsr1
  4481  0F46  00E3               	movwf	??_USBCtrlEPService+1
  4482  0F47  0862               	movf	??_USBCtrlEPService,w
  4483  0F48  0086               	movwf	6
  4484  0F49  0863               	movf	??_USBCtrlEPService+1,w
  4485  0F4A  0087               	movwf	7
  4486  0F4B  0801               	movf	1,w
  4487  0F4C  00E4               	movwf	??_USBCtrlEPService+2
  4488  0F4D  0865               	movf	USBCtrlEPService@setup_cnt,w
  4489  0F4E  3E40               	addlw	64
  4490  0F4F  0086               	movwf	6
  4491  0F50  0187               	clrf	7
  4492  0F51  0864               	movf	??_USBCtrlEPService+2,w
  4493  0F52  0081               	movwf	1
  4494                           
  4495                           ;usb_device.c: 2429: pBDTEntryEP0OutCurrent->ADR++;
  4496  0F53  086D               	movf	_pBDTEntryEP0OutCurrent,w
  4497  0F54  3E02               	addlw	2
  4498  0F55  0086               	movwf	6
  4499  0F56  0187               	clrf	7
  4500  0F57  3001               	movlw	1
  4501  0F58  0781               	addwf	1,f
  4502  0F59  3141               	addfsr 1,1
  4503  0F5A  1803               	skipnc
  4504  0F5B  0A81               	incf	1,f
  4505  0F5C  3001               	movlw	1
  4506  0F5D  00E2               	movwf	??_USBCtrlEPService
  4507  0F5E  0862               	movf	??_USBCtrlEPService,w
  4508  0F5F  07E5               	addwf	USBCtrlEPService@setup_cnt,f
  4509  0F60  3008               	movlw	8
  4510  0F61  0265               	subwf	USBCtrlEPService@setup_cnt,w
  4511  0F62  1C03               	skipc
  4512  0F63  2F3F               	goto	l4796
  4513  0F64                     l4802:	
  4514                           
  4515                           ;usb_device.c: 2430: }
  4516                           ;usb_device.c: 2431: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4517  0F64  3040               	movlw	64
  4518  0F65  00E2               	movwf	??_USBCtrlEPService
  4519  0F66  3000               	movlw	0
  4520  0F67  00E3               	movwf	??_USBCtrlEPService+1
  4521  0F68  086D               	movf	_pBDTEntryEP0OutCurrent,w
  4522  0F69  3E02               	addlw	2
  4523  0F6A  0086               	movwf	6
  4524  0F6B  0187               	clrf	7
  4525  0F6C  0862               	movf	??_USBCtrlEPService,w
  4526  0F6D  3FC0               	movwi [0]fsr1
  4527  0F6E  0863               	movf	??_USBCtrlEPService+1,w
  4528  0F6F  3FC1               	movwi [1]fsr1
  4529                           
  4530                           ;usb_device.c: 2434: USBCtrlTrfSetupHandler();
  4531  0F70  318B  23FE         	fcall	_USBCtrlTrfSetupHandler
  4532                           
  4533                           ;usb_device.c: 2435: }
  4534  0F72  0008               	return
  4535  0F73                     l4806:	
  4536                           
  4537                           ;usb_device.c: 2436: else
  4538                           ;usb_device.c: 2437: {
  4539                           ;usb_device.c: 2439: USBCtrlTrfOutHandler();
  4540  0F73  318B  2327         	fcall	_USBCtrlTrfOutHandler
  4541                           
  4542                           ;usb_device.c: 2440: }
  4543                           ;usb_device.c: 2441: }
  4544  0F75  0008               	return
  4545  0F76                     l4808:	
  4546                           
  4547                           ;usb_device.c: 2442: else if((USTATcopy.Val & ~0x02) == 0x04)
  4548  0F76  30FD               	movlw	253
  4549  0F77  0020               	movlb	0	; select bank0
  4550  0F78  056F               	andwf	_USTATcopy,w
  4551  0F79  00E2               	movwf	??_USBCtrlEPService
  4552  0F7A  3004               	movlw	4
  4553  0F7B  0662               	xorwf	??_USBCtrlEPService,w
  4554  0F7C  1D03               	btfss	3,2
  4555  0F7D  0008               	return
  4556                           
  4557                           ;usb_device.c: 2443: {
  4558                           ;usb_device.c: 2446: USBCtrlTrfInHandler();
  4559  0F7E  318D  25D3         	fcall	_USBCtrlTrfInHandler
  4560  0F80  0008               	return
  4561  0F81                     __end_of_USBCtrlEPService:	
  4562                           
  4563                           	psect	text8
  4564  0BFE                     __ptext8:	
  4565 ;; *************** function _USBCtrlTrfSetupHandler *****************
  4566 ;; Defined at:
  4567 ;;		line 2491 in file "../framework/usb/usb_device.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;		None
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;		None
  4572 ;; Return value:  Size  Location     Type
  4573 ;;		None               void
  4574 ;; Registers used:
  4575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4583 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4584 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4585 ;;Total ram usage:        1 bytes
  4586 ;; Hardware stack levels used:    1
  4587 ;; Hardware stack levels required when called:    7
  4588 ;; This function calls:
  4589 ;;		_USBCheckStdRequest
  4590 ;;		_USBCtrlEPServiceComplete
  4591 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4592 ;; This function is called by:
  4593 ;;		_USBCtrlEPService
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597                           
  4598                           ;psect for function _USBCtrlTrfSetupHandler
  4599  0BFE                     _USBCtrlTrfSetupHandler:	
  4600                           
  4601                           ;usb_device.c: 2496: shortPacketStatus = 0;
  4602                           
  4603                           ;incstack = 0
  4604                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4605  0BFE  0021               	movlb	1	; select bank1
  4606  0BFF  01ED               	clrf	_shortPacketStatus^(0+128)
  4607                           
  4608                           ;usb_device.c: 2497: USBDeferStatusStagePacket = 0;
  4609  0C00  0020               	movlb	0	; select bank0
  4610  0C01  01EB               	clrf	_USBDeferStatusStagePacket	;volatile
  4611                           
  4612                           ;usb_device.c: 2498: USBDeferINDataStagePackets = 0;
  4613  0C02  0022               	movlb	2	; select bank2
  4614  0C03  01DD               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  4615                           
  4616                           ;usb_device.c: 2499: USBDeferOUTDataStagePackets = 0;
  4617  0C04  01DE               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  4618                           
  4619                           ;usb_device.c: 2500: BothEP0OutUOWNsSet = 0;
  4620  0C05  01DA               	clrf	_BothEP0OutUOWNsSet^(0+256)
  4621                           
  4622                           ;usb_device.c: 2501: controlTransferState = 0;
  4623  0C06  0021               	movlb	1	; select bank1
  4624  0C07  01E9               	clrf	_controlTransferState^(0+128)
  4625                           
  4626                           ;usb_device.c: 2510: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4627  0C08  307F               	movlw	127
  4628  0C09  0020               	movlb	0	; select bank0
  4629  0C0A  00E1               	movwf	??_USBCtrlTrfSetupHandler
  4630  0C0B  0869               	movf	_pBDTEntryIn,w
  4631  0C0C  0086               	movwf	6
  4632  0C0D  0187               	clrf	7
  4633  0C0E  0861               	movf	??_USBCtrlTrfSetupHandler,w
  4634  0C0F  0581               	andwf	1,f
  4635                           
  4636                           ;usb_device.c: 2511: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  4637  0C10  3004               	movlw	4
  4638  0C11  00E1               	movwf	??_USBCtrlTrfSetupHandler
  4639  0C12  0861               	movf	??_USBCtrlTrfSetupHandler,w
  4640  0C13  06E9               	xorwf	_pBDTEntryIn,f
  4641                           
  4642                           ;usb_device.c: 2512: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4643  0C14  307F               	movlw	127
  4644  0C15  00E1               	movwf	??_USBCtrlTrfSetupHandler
  4645  0C16  0869               	movf	_pBDTEntryIn,w
  4646  0C17  0086               	movwf	6
  4647  0C18  0187               	clrf	7
  4648  0C19  0861               	movf	??_USBCtrlTrfSetupHandler,w
  4649  0C1A  0581               	andwf	1,f
  4650                           
  4651                           ;usb_device.c: 2513: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  4652  0C1B  3004               	movlw	4
  4653  0C1C  00E1               	movwf	??_USBCtrlTrfSetupHandler
  4654  0C1D  0861               	movf	??_USBCtrlTrfSetupHandler,w
  4655  0C1E  06E9               	xorwf	_pBDTEntryIn,f
  4656                           
  4657                           ;usb_device.c: 2514: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  4658  0C1F  307F               	movlw	127
  4659  0C20  00E1               	movwf	??_USBCtrlTrfSetupHandler
  4660  0C21  087C               	movf	_pBDTEntryEP0OutNext,w
  4661  0C22  0086               	movwf	6
  4662  0C23  0187               	clrf	7
  4663  0C24  0861               	movf	??_USBCtrlTrfSetupHandler,w
  4664  0C25  0581               	andwf	1,f
  4665                           
  4666                           ;usb_device.c: 2516: inPipes[0].info.Val = 0;
  4667  0C26  0021               	movlb	1	; select bank1
  4668  0C27  01E2               	clrf	(_inPipes^(0+128)+2)
  4669                           
  4670                           ;usb_device.c: 2517: inPipes[0].wCount.Val = 0;
  4671  0C28  01E3               	clrf	(_inPipes^(0+128)+3)
  4672  0C29  01E4               	clrf	((_inPipes+1)^(0+128)+3)
  4673                           
  4674                           ;usb_device.c: 2518: outPipes[0].info.Val = 0;
  4675  0C2A  0022               	movlb	2	; select bank2
  4676  0C2B  01C9               	clrf	(_outPipes^(0+256)+2)
  4677                           
  4678                           ;usb_device.c: 2519: outPipes[0].wCount.Val = 0;
  4679  0C2C  01CA               	clrf	(_outPipes^(0+256)+3)
  4680  0C2D  01CB               	clrf	((_outPipes+1)^(0+256)+3)
  4681                           
  4682                           ;usb_device.c: 2525: USBCheckStdRequest();
  4683  0C2E  318D  257E  318B   	fcall	_USBCheckStdRequest
  4684                           
  4685                           ;usb_device.c: 2526: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  4686  0C31  3000               	movlw	0
  4687  0C32  0020               	movlb	0	; select bank0
  4688  0C33  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4689  0C34  3003               	movlw	3
  4690  0C35  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4691  0C36  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4692  0C37  3000               	movlw	0
  4693  0C38  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4694  0C39  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4695  0C3A  318B  2386  318B   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4696                           
  4697                           ;usb_device.c: 2539: USBCtrlEPServiceComplete();
  4698  0C3D  3186  26ED         	fcall	_USBCtrlEPServiceComplete
  4699  0C3F  0008               	return
  4700  0C40                     __end_of_USBCtrlTrfSetupHandler:	
  4701                           
  4702                           	psect	text9
  4703  06ED                     __ptext9:	
  4704 ;; *************** function _USBCtrlEPServiceComplete *****************
  4705 ;; Defined at:
  4706 ;;		line 1635 in file "../framework/usb/usb_device.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;		None
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;		None
  4711 ;; Return value:  Size  Location     Type
  4712 ;;		None               void
  4713 ;; Registers used:
  4714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4715 ;; Tracked objects:
  4716 ;;		On entry : 0/0
  4717 ;;		On exit  : 0/0
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4722 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4723 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4724 ;;Total ram usage:        2 bytes
  4725 ;; Hardware stack levels used:    1
  4726 ;; Hardware stack levels required when called:    3
  4727 ;; This function calls:
  4728 ;;		_USBCtrlEPAllowDataStage
  4729 ;;		_USBCtrlEPAllowStatusStage
  4730 ;; This function is called by:
  4731 ;;		_USBCtrlTrfSetupHandler
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           
  4736                           ;psect for function _USBCtrlEPServiceComplete
  4737  06ED                     _USBCtrlEPServiceComplete:	
  4738                           
  4739                           ;usb_device.c: 1641: UCONbits.PKTDIS = 0;
  4740                           
  4741                           ;incstack = 0
  4742                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4743  06ED  003D               	movlb	29	; select bank29
  4744  06EE  120E               	bcf	14,4	;volatile
  4745                           
  4746                           ;usb_device.c: 1647: if(inPipes[0].info.bits.busy == 0)
  4747  06EF  0021               	movlb	1	; select bank1
  4748  06F0  1BE2               	btfsc	(_inPipes^(0+128)+2),7
  4749  06F1  2F2F               	goto	l643
  4750                           
  4751                           ;usb_device.c: 1648: {
  4752                           ;usb_device.c: 1649: if(outPipes[0].info.bits.busy == 1)
  4753  06F2  0022               	movlb	2	; select bank2
  4754  06F3  1FC9               	btfss	(_outPipes^(0+256)+2),7
  4755  06F4  2F04               	goto	l3528
  4756                           
  4757                           ;usb_device.c: 1650: {
  4758                           ;usb_device.c: 1651: controlTransferState = 2;
  4759  06F5  3002               	movlw	2
  4760  06F6  00F6               	movwf	??_USBCtrlEPServiceComplete
  4761  06F7  0876               	movf	??_USBCtrlEPServiceComplete,w
  4762  06F8  0021               	movlb	1	; select bank1
  4763  06F9  00E9               	movwf	_controlTransferState^(0+128)
  4764                           
  4765                           ;usb_device.c: 1662: if(USBDeferOUTDataStagePackets == 0)
  4766  06FA  0022               	movlb	2	; select bank2
  4767  06FB  085E               	movf	_USBDeferOUTDataStagePackets^(0+256),w	;volatile
  4768  06FC  1D03               	btfss	3,2
  4769  06FD  2F00               	goto	l3524
  4770                           
  4771                           ;usb_device.c: 1663: {
  4772                           ;usb_device.c: 1664: USBCtrlEPAllowDataStage();
  4773  06FE  318D  252A         	fcall	_USBCtrlEPAllowDataStage
  4774  0700                     l3524:	
  4775                           
  4776                           ;usb_device.c: 1665: }
  4777                           ;usb_device.c: 1669: USBStatusStageEnabledFlag2 = 0;
  4778  0700  0022               	movlb	2	; select bank2
  4779  0701  01E0               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  4780                           
  4781                           ;usb_device.c: 1670: USBStatusStageEnabledFlag1 = 0;
  4782  0702  01DF               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  4783                           
  4784                           ;usb_device.c: 1671: }
  4785  0703  0008               	return
  4786  0704                     l3528:	
  4787                           
  4788                           ;usb_device.c: 1672: else
  4789                           ;usb_device.c: 1673: {
  4790                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->CNT = 8;
  4791  0704  3008               	movlw	8
  4792  0705  00F6               	movwf	??_USBCtrlEPServiceComplete
  4793  0706  0A7C               	incf	_pBDTEntryEP0OutNext,w
  4794  0707  0086               	movwf	6
  4795  0708  0187               	clrf	7
  4796  0709  0876               	movf	??_USBCtrlEPServiceComplete,w
  4797  070A  0081               	movwf	1
  4798                           
  4799                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4800  070B  3040               	movlw	64
  4801  070C  00F6               	movwf	??_USBCtrlEPServiceComplete
  4802  070D  3000               	movlw	0
  4803  070E  00F7               	movwf	??_USBCtrlEPServiceComplete+1
  4804  070F  087C               	movf	_pBDTEntryEP0OutNext,w
  4805  0710  3E02               	addlw	2
  4806  0711  0086               	movwf	6
  4807  0712  0187               	clrf	7
  4808  0713  0876               	movf	??_USBCtrlEPServiceComplete,w
  4809  0714  3FC0               	movwi [0]fsr1
  4810  0715  0877               	movf	??_USBCtrlEPServiceComplete+1,w
  4811  0716  3FC1               	movwi [1]fsr1
  4812                           
  4813                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  4814  0717  300C               	movlw	12
  4815  0718  00F6               	movwf	??_USBCtrlEPServiceComplete
  4816  0719  087C               	movf	_pBDTEntryEP0OutNext,w
  4817  071A  0086               	movwf	6
  4818  071B  0187               	clrf	7
  4819  071C  0876               	movf	??_USBCtrlEPServiceComplete,w
  4820  071D  0081               	movwf	1
  4821                           
  4822                           ;usb_device.c: 1681: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  4823  071E  087C               	movf	_pBDTEntryEP0OutNext,w
  4824  071F  0086               	movwf	6
  4825  0720  0187               	clrf	7
  4826  0721  1781               	bsf	1,7
  4827                           
  4828                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val = 0x04;
  4829  0722  3004               	movlw	4
  4830  0723  00F6               	movwf	??_USBCtrlEPServiceComplete
  4831  0724  0020               	movlb	0	; select bank0
  4832  0725  0869               	movf	_pBDTEntryIn,w
  4833  0726  0086               	movwf	6
  4834  0727  0187               	clrf	7
  4835  0728  0876               	movf	??_USBCtrlEPServiceComplete,w
  4836  0729  0081               	movwf	1
  4837                           
  4838                           ;usb_device.c: 1683: pBDTEntryIn[0]->STAT.Val |= 0x80;
  4839  072A  0869               	movf	_pBDTEntryIn,w
  4840  072B  0086               	movwf	6
  4841  072C  0187               	clrf	7
  4842  072D  1781               	bsf	1,7
  4843                           
  4844                           ;usb_device.c: 1684: }
  4845                           ;usb_device.c: 1685: }
  4846  072E  0008               	return
  4847  072F                     l643:	
  4848                           
  4849                           ;usb_device.c: 1686: else
  4850                           ;usb_device.c: 1687: {
  4851                           ;usb_device.c: 1688: if(SetupPkt.DataDir == (0x80>>7))
  4852  072F  0020               	movlb	0	; select bank0
  4853  0730  1FC0               	btfss	64,7	;volatile
  4854  0731  2F46               	goto	l3554
  4855                           
  4856                           ;usb_device.c: 1689: {
  4857                           ;usb_device.c: 1690: controlTransferState = 1;
  4858  0732  0021               	movlb	1	; select bank1
  4859  0733  01E9               	clrf	_controlTransferState^(0+128)
  4860  0734  0AE9               	incf	_controlTransferState^(0+128),f
  4861                           
  4862                           ;usb_device.c: 1704: if(USBDeferINDataStagePackets == 0)
  4863  0735  0022               	movlb	2	; select bank2
  4864  0736  085D               	movf	_USBDeferINDataStagePackets^(0+256),w	;volatile
  4865  0737  1D03               	btfss	3,2
  4866  0738  2F3C               	goto	l3546
  4867                           
  4868                           ;usb_device.c: 1705: {
  4869                           ;usb_device.c: 1706: USBCtrlEPAllowDataStage();
  4870  0739  318D  252A  3186   	fcall	_USBCtrlEPAllowDataStage
  4871  073C                     l3546:	
  4872                           
  4873                           ;usb_device.c: 1707: }
  4874                           ;usb_device.c: 1729: USBStatusStageEnabledFlag2 = 0;
  4875  073C  0022               	movlb	2	; select bank2
  4876  073D  01E0               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  4877                           
  4878                           ;usb_device.c: 1730: USBStatusStageEnabledFlag1 = 0;
  4879  073E  01DF               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  4880                           
  4881                           ;usb_device.c: 1731: if(USBDeferStatusStagePacket == 0)
  4882  073F  0020               	movlb	0	; select bank0
  4883  0740  086B               	movf	_USBDeferStatusStagePacket,w	;volatile
  4884  0741  1D03               	btfss	3,2
  4885  0742  0008               	return
  4886                           
  4887                           ;usb_device.c: 1732: {
  4888                           ;usb_device.c: 1733: USBCtrlEPAllowStatusStage();
  4889  0743  318E  263A         	fcall	_USBCtrlEPAllowStatusStage
  4890                           
  4891                           ;usb_device.c: 1734: }
  4892                           ;usb_device.c: 1735: }
  4893  0745  0008               	return
  4894  0746                     l3554:	
  4895                           
  4896                           ;usb_device.c: 1736: else
  4897                           ;usb_device.c: 1737: {
  4898                           ;usb_device.c: 1748: controlTransferState = 2;
  4899  0746  3002               	movlw	2
  4900  0747  00F6               	movwf	??_USBCtrlEPServiceComplete
  4901  0748  0876               	movf	??_USBCtrlEPServiceComplete,w
  4902  0749  0021               	movlb	1	; select bank1
  4903  074A  00E9               	movwf	_controlTransferState^(0+128)
  4904                           
  4905                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->CNT = 8;
  4906  074B  3008               	movlw	8
  4907  074C  00F6               	movwf	??_USBCtrlEPServiceComplete
  4908  074D  0A7C               	incf	_pBDTEntryEP0OutNext,w
  4909  074E  0086               	movwf	6
  4910  074F  0187               	clrf	7
  4911  0750  0876               	movf	??_USBCtrlEPServiceComplete,w
  4912  0751  0081               	movwf	1
  4913                           
  4914                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4915  0752  3040               	movlw	64
  4916  0753  00F6               	movwf	??_USBCtrlEPServiceComplete
  4917  0754  3000               	movlw	0
  4918  0755  00F7               	movwf	??_USBCtrlEPServiceComplete+1
  4919  0756  087C               	movf	_pBDTEntryEP0OutNext,w
  4920  0757  3E02               	addlw	2
  4921  0758  0086               	movwf	6
  4922  0759  0187               	clrf	7
  4923  075A  0876               	movf	??_USBCtrlEPServiceComplete,w
  4924  075B  3FC0               	movwi [0]fsr1
  4925  075C  0877               	movf	??_USBCtrlEPServiceComplete+1,w
  4926  075D  3FC1               	movwi [1]fsr1
  4927                           
  4928                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  4929  075E  3004               	movlw	4
  4930  075F  00F6               	movwf	??_USBCtrlEPServiceComplete
  4931  0760  087C               	movf	_pBDTEntryEP0OutNext,w
  4932  0761  0086               	movwf	6
  4933  0762  0187               	clrf	7
  4934  0763  0876               	movf	??_USBCtrlEPServiceComplete,w
  4935  0764  0081               	movwf	1
  4936                           
  4937                           ;usb_device.c: 1754: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  4938  0765  087C               	movf	_pBDTEntryEP0OutNext,w
  4939  0766  0086               	movwf	6
  4940  0767  0187               	clrf	7
  4941  0768  1781               	bsf	1,7
  4942                           
  4943                           ;usb_device.c: 1757: USBStatusStageEnabledFlag2 = 0;
  4944  0769  0022               	movlb	2	; select bank2
  4945  076A  01E0               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  4946                           
  4947                           ;usb_device.c: 1758: USBStatusStageEnabledFlag1 = 0;
  4948  076B  01DF               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  4949                           
  4950                           ;usb_device.c: 1759: if(USBDeferStatusStagePacket == 0)
  4951  076C  0020               	movlb	0	; select bank0
  4952  076D  086B               	movf	_USBDeferStatusStagePacket,w	;volatile
  4953  076E  1D03               	btfss	3,2
  4954  076F  0008               	return
  4955                           
  4956                           ;usb_device.c: 1760: {
  4957                           ;usb_device.c: 1761: USBCtrlEPAllowStatusStage();
  4958  0770  318E  263A         	fcall	_USBCtrlEPAllowStatusStage
  4959  0772  0008               	return
  4960  0773                     __end_of_USBCtrlEPServiceComplete:	
  4961                           
  4962                           	psect	text10
  4963  0D2A                     __ptext10:	
  4964 ;; *************** function _USBCtrlEPAllowDataStage *****************
  4965 ;; Defined at:
  4966 ;;		line 1507 in file "../framework/usb/usb_device.c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;		None
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;		None
  4971 ;; Return value:  Size  Location     Type
  4972 ;;		None               void
  4973 ;; Registers used:
  4974 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4982 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4983 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4984 ;;Total ram usage:        2 bytes
  4985 ;; Hardware stack levels used:    1
  4986 ;; Hardware stack levels required when called:    2
  4987 ;; This function calls:
  4988 ;;		_USBCtrlTrfTxService
  4989 ;; This function is called by:
  4990 ;;		_USBCtrlEPServiceComplete
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           
  4994                           
  4995                           ;psect for function _USBCtrlEPAllowDataStage
  4996  0D2A                     _USBCtrlEPAllowDataStage:	
  4997                           
  4998                           ;usb_device.c: 1509: USBDeferINDataStagePackets = 0;
  4999                           
  5000                           ;incstack = 0
  5001                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5002  0D2A  0022               	movlb	2	; select bank2
  5003  0D2B  01DD               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  5004                           
  5005                           ;usb_device.c: 1510: USBDeferOUTDataStagePackets = 0;
  5006  0D2C  01DE               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  5007                           
  5008                           ;usb_device.c: 1512: if(controlTransferState == 2)
  5009  0D2D  3002               	movlw	2
  5010  0D2E  0021               	movlb	1	; select bank1
  5011  0D2F  0669               	xorwf	_controlTransferState^(0+128),w
  5012  0D30  1D03               	btfss	3,2
  5013  0D31  2D51               	goto	l3262
  5014                           
  5015                           ;usb_device.c: 1513: {
  5016                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->CNT = 8;
  5017  0D32  3008               	movlw	8
  5018  0D33  00F4               	movwf	??_USBCtrlEPAllowDataStage
  5019  0D34  0A7C               	incf	_pBDTEntryEP0OutNext,w
  5020  0D35  0086               	movwf	6
  5021  0D36  0187               	clrf	7
  5022  0D37  0874               	movf	??_USBCtrlEPAllowDataStage,w
  5023  0D38  0081               	movwf	1
  5024                           
  5025                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  5026  0D39  3048               	movlw	72
  5027  0D3A  00F4               	movwf	??_USBCtrlEPAllowDataStage
  5028  0D3B  3000               	movlw	0
  5029  0D3C  00F5               	movwf	??_USBCtrlEPAllowDataStage+1
  5030  0D3D  087C               	movf	_pBDTEntryEP0OutNext,w
  5031  0D3E  3E02               	addlw	2
  5032  0D3F  0086               	movwf	6
  5033  0D40  0187               	clrf	7
  5034  0D41  0874               	movf	??_USBCtrlEPAllowDataStage,w
  5035  0D42  3FC0               	movwi [0]fsr1
  5036  0D43  0875               	movf	??_USBCtrlEPAllowDataStage+1,w
  5037  0D44  3FC1               	movwi [1]fsr1
  5038                           
  5039                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  5040  0D45  3048               	movlw	72
  5041  0D46  00F4               	movwf	??_USBCtrlEPAllowDataStage
  5042  0D47  087C               	movf	_pBDTEntryEP0OutNext,w
  5043  0D48  0086               	movwf	6
  5044  0D49  0187               	clrf	7
  5045  0D4A  0874               	movf	??_USBCtrlEPAllowDataStage,w
  5046  0D4B  0081               	movwf	1
  5047                           
  5048                           ;usb_device.c: 1518: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5049  0D4C  087C               	movf	_pBDTEntryEP0OutNext,w
  5050  0D4D  0086               	movwf	6
  5051  0D4E  0187               	clrf	7
  5052  0D4F  1781               	bsf	1,7
  5053                           
  5054                           ;usb_device.c: 1519: }
  5055  0D50  0008               	return
  5056  0D51                     l3262:	
  5057                           
  5058                           ;usb_device.c: 1520: else
  5059                           ;usb_device.c: 1521: {
  5060                           ;usb_device.c: 1524: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  5061  0D51  0864               	movf	((_inPipes+1)^(0+128)+3),w
  5062  0D52  0020               	movlb	0	; select bank0
  5063  0D53  0247               	subwf	71,w	;volatile
  5064  0D54  1D03               	skipz
  5065  0D55  2D5A               	goto	u2355
  5066  0D56  0021               	movlb	1	; select bank1
  5067  0D57  0863               	movf	(_inPipes^(0+128)+3),w
  5068  0D58  0020               	movlb	0	; select bank0
  5069  0D59  0246               	subwf	70,w	;volatile
  5070  0D5A                     u2355:	
  5071  0D5A  1803               	skipnc
  5072  0D5B  2D63               	goto	l3266
  5073                           
  5074                           ;usb_device.c: 1525: {
  5075                           ;usb_device.c: 1526: inPipes[0].wCount.Val = SetupPkt.wLength;
  5076  0D5C  0847               	movf	71,w	;volatile
  5077  0D5D  0021               	movlb	1	; select bank1
  5078  0D5E  00E4               	movwf	((_inPipes+1)^(0+128)+3)
  5079  0D5F  0020               	movlb	0	; select bank0
  5080  0D60  0846               	movf	70,w	;volatile
  5081  0D61  0021               	movlb	1	; select bank1
  5082  0D62  00E3               	movwf	(_inPipes^(0+128)+3)
  5083  0D63                     l3266:	
  5084                           
  5085                           ;usb_device.c: 1527: }
  5086                           ;usb_device.c: 1528: USBCtrlTrfTxService();
  5087  0D63  318E  26A2         	fcall	_USBCtrlTrfTxService
  5088                           
  5089                           ;usb_device.c: 1533: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  5090  0D65  3048               	movlw	72
  5091  0D66  00F4               	movwf	??_USBCtrlEPAllowDataStage
  5092  0D67  3000               	movlw	0
  5093  0D68  00F5               	movwf	??_USBCtrlEPAllowDataStage+1
  5094  0D69  0020               	movlb	0	; select bank0
  5095  0D6A  0869               	movf	_pBDTEntryIn,w
  5096  0D6B  3E02               	addlw	2
  5097  0D6C  0086               	movwf	6
  5098  0D6D  0187               	clrf	7
  5099  0D6E  0874               	movf	??_USBCtrlEPAllowDataStage,w
  5100  0D6F  3FC0               	movwi [0]fsr1
  5101  0D70  0875               	movf	??_USBCtrlEPAllowDataStage+1,w
  5102  0D71  3FC1               	movwi [1]fsr1
  5103                           
  5104                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  5105  0D72  3048               	movlw	72
  5106  0D73  00F4               	movwf	??_USBCtrlEPAllowDataStage
  5107  0D74  0869               	movf	_pBDTEntryIn,w
  5108  0D75  0086               	movwf	6
  5109  0D76  0187               	clrf	7
  5110  0D77  0874               	movf	??_USBCtrlEPAllowDataStage,w
  5111  0D78  0081               	movwf	1
  5112                           
  5113                           ;usb_device.c: 1535: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5114  0D79  0869               	movf	_pBDTEntryIn,w
  5115  0D7A  0086               	movwf	6
  5116  0D7B  0187               	clrf	7
  5117  0D7C  1781               	bsf	1,7
  5118  0D7D  0008               	return
  5119  0D7E                     __end_of_USBCtrlEPAllowDataStage:	
  5120                           
  5121                           	psect	text11
  5122  0D7E                     __ptext11:	
  5123 ;; *************** function _USBCheckStdRequest *****************
  5124 ;; Defined at:
  5125 ;;		line 2711 in file "../framework/usb/usb_device.c"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;		None
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;		None
  5130 ;; Return value:  Size  Location     Type
  5131 ;;		None               void
  5132 ;; Registers used:
  5133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5134 ;; Tracked objects:
  5135 ;;		On entry : 0/0
  5136 ;;		On exit  : 0/0
  5137 ;;		Unchanged: 0/0
  5138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5141 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5142 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5143 ;;Total ram usage:        1 bytes
  5144 ;; Hardware stack levels used:    1
  5145 ;; Hardware stack levels required when called:    6
  5146 ;; This function calls:
  5147 ;;		_USBStdFeatureReqHandler
  5148 ;;		_USBStdGetDscHandler
  5149 ;;		_USBStdGetStatusHandler
  5150 ;;		_USBStdSetCfgHandler
  5151 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5152 ;; This function is called by:
  5153 ;;		_USBCtrlTrfSetupHandler
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           
  5158                           ;psect for function _USBCheckStdRequest
  5159  0D7E                     _USBCheckStdRequest:	
  5160                           
  5161                           ;usb_device.c: 2713: if(SetupPkt.RequestType != (0x00>>5)) return;
  5162                           
  5163                           ;incstack = 0
  5164                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5165  0D7E  0020               	movlb	0	; select bank0
  5166  0D7F  0E40               	swapf	64,w	;volatile
  5167  0D80  0C89               	rrf	9,f
  5168  0D81  3903               	andlw	3
  5169  0D82  3A00               	xorlw	0
  5170  0D83  1D03               	btfss	3,2
  5171  0D84  0008               	return
  5172  0D85  2DC7               	goto	l4720
  5173  0D86                     l772:	
  5174                           ;usb_device.c: 2716: {
  5175                           ;usb_device.c: 2717: case 5:
  5176                           
  5177                           ;usb_device.c: 2715: switch(SetupPkt.bRequest)
  5178                           
  5179                           
  5180                           ;usb_device.c: 2718: inPipes[0].info.bits.busy = 1;
  5181  0D86  0021               	movlb	1	; select bank1
  5182  0D87  17E2               	bsf	(_inPipes^(0+128)+2),7
  5183                           
  5184                           ;usb_device.c: 2719: USBDeviceState = ADR_PENDING_STATE;
  5185  0D88  3008               	movlw	8
  5186  0D89  0020               	movlb	0	; select bank0
  5187  0D8A  00E0               	movwf	??_USBCheckStdRequest
  5188  0D8B  0860               	movf	??_USBCheckStdRequest,w
  5189  0D8C  00EC               	movwf	_USBDeviceState
  5190                           
  5191                           ;usb_device.c: 2721: break;
  5192  0D8D  0008               	return
  5193  0D8E                     l4690:	
  5194                           ;usb_device.c: 2722: case 6:
  5195                           
  5196                           
  5197                           ;usb_device.c: 2723: USBStdGetDscHandler();
  5198  0D8E  318F  2781         	fcall	_USBStdGetDscHandler
  5199                           
  5200                           ;usb_device.c: 2724: break;
  5201  0D90  0008               	return
  5202  0D91                     l4692:	
  5203                           ;usb_device.c: 2725: case 9:
  5204                           
  5205                           
  5206                           ;usb_device.c: 2726: USBStdSetCfgHandler();
  5207  0D91  3187  2773         	fcall	_USBStdSetCfgHandler
  5208                           
  5209                           ;usb_device.c: 2727: break;
  5210  0D93  0008               	return
  5211  0D94                     l4694:	
  5212                           ;usb_device.c: 2728: case 8:
  5213                           
  5214                           
  5215                           ;usb_device.c: 2729: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  5216  0D94  30EE               	movlw	low _USBActiveConfiguration
  5217  0D95  0021               	movlb	1	; select bank1
  5218  0D96  00E0               	movwf	_inPipes^(0+128)
  5219  0D97  3000               	movlw	high _USBActiveConfiguration
  5220  0D98  00E1               	movwf	(_inPipes+1)^(0+128)
  5221                           
  5222                           ;usb_device.c: 2730: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5223  0D99  1462               	bsf	(_inPipes^(0+128)+2),0
  5224                           
  5225                           ;usb_device.c: 2731: inPipes[0].wCount.v[0] = 1;
  5226  0D9A  01E3               	clrf	(_inPipes^(0+128)+3)
  5227  0D9B  0AE3               	incf	(_inPipes^(0+128)+3),f
  5228                           
  5229                           ;usb_device.c: 2732: inPipes[0].info.bits.busy = 1;
  5230  0D9C  17E2               	bsf	(_inPipes^(0+128)+2),7
  5231                           
  5232                           ;usb_device.c: 2733: break;
  5233  0D9D  0008               	return
  5234  0D9E                     l4702:	
  5235                           ;usb_device.c: 2734: case 0:
  5236                           
  5237                           
  5238                           ;usb_device.c: 2735: USBStdGetStatusHandler();
  5239  0D9E  318C  248D         	fcall	_USBStdGetStatusHandler
  5240                           
  5241                           ;usb_device.c: 2736: break;
  5242  0DA0  0008               	return
  5243  0DA1                     l4704:	
  5244                           ;usb_device.c: 2737: case 1:
  5245                           
  5246                           
  5247                           ;usb_device.c: 2738: case 3:
  5248                           ;usb_device.c: 2739: USBStdFeatureReqHandler();
  5249  0DA1  3180  203B         	fcall	_USBStdFeatureReqHandler
  5250                           
  5251                           ;usb_device.c: 2740: break;
  5252  0DA3  0008               	return
  5253  0DA4                     l4706:	
  5254                           ;usb_device.c: 2741: case 10:
  5255                           
  5256                           
  5257                           ;usb_device.c: 2742: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  5258  0DA4  0020               	movlb	0	; select bank0
  5259  0DA5  0844               	movf	68,w	;volatile
  5260  0DA6  3EEF               	addlw	(low (_USBAlternateInterface| 0))& (0+255)
  5261  0DA7  0021               	movlb	1	; select bank1
  5262  0DA8  00E0               	movwf	_inPipes^(0+128)
  5263  0DA9  3000               	movlw	0
  5264  0DAA  00E1               	movwf	(_inPipes+1)^(0+128)
  5265                           
  5266                           ;usb_device.c: 2743: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5267  0DAB  1462               	bsf	(_inPipes^(0+128)+2),0
  5268                           
  5269                           ;usb_device.c: 2744: inPipes[0].wCount.v[0] = 1;
  5270  0DAC  01E3               	clrf	(_inPipes^(0+128)+3)
  5271  0DAD  0AE3               	incf	(_inPipes^(0+128)+3),f
  5272                           
  5273                           ;usb_device.c: 2745: inPipes[0].info.bits.busy = 1;
  5274  0DAE  17E2               	bsf	(_inPipes^(0+128)+2),7
  5275                           
  5276                           ;usb_device.c: 2746: break;
  5277  0DAF  0008               	return
  5278  0DB0                     l781:	
  5279                           ;usb_device.c: 2747: case 11:
  5280                           
  5281                           
  5282                           ;usb_device.c: 2748: inPipes[0].info.bits.busy = 1;
  5283  0DB0  0021               	movlb	1	; select bank1
  5284  0DB1  17E2               	bsf	(_inPipes^(0+128)+2),7
  5285                           
  5286                           ;usb_device.c: 2749: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  5287  0DB2  0020               	movlb	0	; select bank0
  5288  0DB3  0842               	movf	66,w	;volatile
  5289  0DB4  00E0               	movwf	??_USBCheckStdRequest
  5290  0DB5  0844               	movf	68,w	;volatile
  5291  0DB6  3EEF               	addlw	(low (_USBAlternateInterface| 0))& (0+255)
  5292  0DB7  0086               	movwf	6
  5293  0DB8  0187               	clrf	7
  5294  0DB9  0860               	movf	??_USBCheckStdRequest,w
  5295  0DBA  0081               	movwf	1
  5296                           
  5297                           ;usb_device.c: 2750: break;
  5298  0DBB  0008               	return
  5299  0DBC                     l4716:	
  5300                           ;usb_device.c: 2751: case 7:
  5301                           
  5302                           
  5303                           ;usb_device.c: 2752: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  5304  0DBC  3000               	movlw	0
  5305  0DBD  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5306  0DBE  3002               	movlw	2
  5307  0DBF  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5308  0DC0  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5309  0DC1  3000               	movlw	0
  5310  0DC2  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5311  0DC3  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5312  0DC4  318B  2386         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5313                           
  5314                           ;usb_device.c: 2757: }
  5315                           
  5316                           ;usb_device.c: 2756: break;
  5317                           
  5318                           ;usb_device.c: 2755: default:
  5319                           
  5320                           ;usb_device.c: 2754: case 12:
  5321                           
  5322                           ;usb_device.c: 2753: break;
  5323  0DC6  0008               	return
  5324  0DC7                     l4720:	
  5325  0DC7  0020               	movlb	0	; select bank0
  5326  0DC8  0841               	movf	65,w	;volatile
  5327                           
  5328                           ; Switch size 1, requested type "space"
  5329                           ; Number of cases is 11, Range of values is 0 to 12
  5330                           ; switch strategies available:
  5331                           ; Name         Instructions Cycles
  5332                           ; direct_byte           32     6 (fixed)
  5333                           ; simple_byte           34    18 (average)
  5334                           ; jumptable            260     6 (fixed)
  5335                           ;	Chosen strategy is direct_byte
  5336  0DC9  0084               	movwf	4
  5337  0DCA  300D               	movlw	13
  5338  0DCB  0204               	subwf	4,w
  5339  0DCC  1803               	skipnc
  5340  0DCD  0008               	return
  5341  0DCE  3188               	movlp	high S5084
  5342  0DCF  3504               	lslf	4,w
  5343  0DD0  3E00               	addlw	low S5084
  5344  0DD1  0082               	movwf	2
  5345  0DD2                     l770:	
  5346  0DD2  0008               	return
  5347  0DD3                     __end_of_USBCheckStdRequest:	
  5348                           
  5349                           	psect	swtext1
  5350  0800                     __pswtext1:	
  5351  0800                     S5084:	
  5352  0800  318D  2D9E         	ljmp	l4702
  5353  0802  318D  2DA1         	ljmp	l4704
  5354  0804  318D  2DD2         	ljmp	l770
  5355  0806  318D  2DA1         	ljmp	l4704
  5356  0808  318D  2DD2         	ljmp	l770
  5357  080A  318D  2D86         	ljmp	l772
  5358  080C  318D  2D8E         	ljmp	l4690
  5359  080E  318D  2DBC         	ljmp	l4716
  5360  0810  318D  2D94         	ljmp	l4694
  5361  0812  318D  2D91         	ljmp	l4692
  5362  0814  318D  2DA4         	ljmp	l4706
  5363  0816  318D  2DB0         	ljmp	l781
  5364  0818  318D  2DD2         	ljmp	l770
  5365                           
  5366                           	psect	text12
  5367  0773                     __ptext12:	
  5368 ;; *************** function _USBStdSetCfgHandler *****************
  5369 ;; Defined at:
  5370 ;;		line 1987 in file "../framework/usb/usb_device.c"
  5371 ;; Parameters:    Size  Location     Type
  5372 ;;		None
  5373 ;; Auto vars:     Size  Location     Type
  5374 ;;  p               2   10[BANK0 ] PTR unsigned char 
  5375 ;;		 -> UEP1(1), 
  5376 ;;  i               1   12[BANK0 ] unsigned char 
  5377 ;;  i               1   13[BANK0 ] unsigned char 
  5378 ;; Return value:  Size  Location     Type
  5379 ;;		None               void
  5380 ;; Registers used:
  5381 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5388 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5389 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5390 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5391 ;;Total ram usage:        5 bytes
  5392 ;; Hardware stack levels used:    1
  5393 ;; Hardware stack levels required when called:    5
  5394 ;; This function calls:
  5395 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5396 ;;		_memset
  5397 ;; This function is called by:
  5398 ;;		_USBCheckStdRequest
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           
  5403                           ;psect for function _USBStdSetCfgHandler
  5404  0773                     _USBStdSetCfgHandler:	
  5405                           
  5406                           ;usb_device.c: 1989: uint8_t i;
  5407                           ;usb_device.c: 1992: inPipes[0].info.bits.busy = 1;
  5408                           
  5409                           ;incstack = 0
  5410                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5411  0773  0021               	movlb	1	; select bank1
  5412  0774  17E2               	bsf	(_inPipes^(0+128)+2),7
  5413                           
  5414                           ;usb_device.c: 1995: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 
      +                          0; };
  5415  0775  300E               	movlw	14
  5416  0776  0020               	movlb	0	; select bank0
  5417  0777  00DB               	movwf	USBStdSetCfgHandler@p+1
  5418  0778  3099               	movlw	153
  5419  0779  00DA               	movwf	USBStdSetCfgHandler@p
  5420  077A  01DC               	clrf	USBStdSetCfgHandler@i_2039
  5421  077B  085C               	movf	USBStdSetCfgHandler@i_2039,w
  5422  077C  1D03               	btfss	3,2
  5423  077D  2F8E               	goto	l4568
  5424  077E                     l4560:	
  5425  077E  085A               	movf	USBStdSetCfgHandler@p,w
  5426  077F  0086               	movwf	6
  5427  0780  085B               	movf	USBStdSetCfgHandler@p+1,w
  5428  0781  0087               	movwf	7
  5429  0782  0181               	clrf	1
  5430  0783  3001               	movlw	1
  5431  0784  07DA               	addwf	USBStdSetCfgHandler@p,f
  5432  0785  3000               	movlw	0
  5433  0786  3DDB               	addwfc	USBStdSetCfgHandler@p+1,f
  5434  0787  3001               	movlw	1
  5435  0788  00FB               	movwf	??_USBStdSetCfgHandler
  5436  0789  087B               	movf	??_USBStdSetCfgHandler,w
  5437  078A  07DC               	addwf	USBStdSetCfgHandler@i_2039,f
  5438  078B  085C               	movf	USBStdSetCfgHandler@i_2039,w
  5439  078C  1903               	btfsc	3,2
  5440  078D  2F7E               	goto	l4560
  5441  078E                     l4568:	
  5442                           
  5443                           ;usb_device.c: 1998: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  5444  078E  3000               	movlw	0
  5445  078F  00F1               	movwf	memset@c
  5446  0790  00F2               	movwf	memset@c+1
  5447  0791  3020               	movlw	32
  5448  0792  00F3               	movwf	memset@n
  5449  0793  3000               	movlw	0
  5450  0794  00F4               	movwf	memset@n+1
  5451  0795  3020               	movlw	32
  5452  0796  318A  2236  3187   	fcall	_memset
  5453                           
  5454                           ;usb_device.c: 2001: UCONbits.PPBRST = 1;
  5455  0799  003D               	movlb	29	; select bank29
  5456  079A  170E               	bsf	14,6	;volatile
  5457                           
  5458                           ;usb_device.c: 2006: for(i = 0; i < (uint8_t)(1+1u); i++)
  5459  079B  0020               	movlb	0	; select bank0
  5460  079C  01DD               	clrf	USBStdSetCfgHandler@i
  5461  079D  3002               	movlw	2
  5462  079E  025D               	subwf	USBStdSetCfgHandler@i,w
  5463  079F  1803               	btfsc	3,0
  5464  07A0  2FB5               	goto	l4584
  5465  07A1                     l4578:	
  5466                           
  5467                           ;usb_device.c: 2007: {
  5468                           ;usb_device.c: 2008: ep_data_in[i].Val = 0u;
  5469  07A1  085D               	movf	USBStdSetCfgHandler@i,w
  5470  07A2  3E52               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5471  07A3  0086               	movwf	6
  5472  07A4  3001               	movlw	1	; select bank2/3
  5473  07A5  0087               	movwf	7
  5474  07A6  0181               	clrf	1
  5475                           
  5476                           ;usb_device.c: 2009: ep_data_out[i].Val = 0u;
  5477  07A7  085D               	movf	USBStdSetCfgHandler@i,w
  5478  07A8  3E54               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5479  07A9  0086               	movwf	6
  5480  07AA  3001               	movlw	1	; select bank2/3
  5481  07AB  0087               	movwf	7
  5482  07AC  0181               	clrf	1
  5483  07AD  3001               	movlw	1
  5484  07AE  00FB               	movwf	??_USBStdSetCfgHandler
  5485  07AF  087B               	movf	??_USBStdSetCfgHandler,w
  5486  07B0  07DD               	addwf	USBStdSetCfgHandler@i,f
  5487  07B1  3002               	movlw	2
  5488  07B2  025D               	subwf	USBStdSetCfgHandler@i,w
  5489  07B3  1C03               	skipc
  5490  07B4  2FA1               	goto	l4578
  5491  07B5                     l4584:	
  5492                           
  5493                           ;usb_device.c: 2010: }
  5494                           ;usb_device.c: 2013: memset((void*)&USBAlternateInterface,0x00,1);
  5495  07B5  3000               	movlw	0
  5496  07B6  00F1               	movwf	memset@c
  5497  07B7  00F2               	movwf	memset@c+1
  5498  07B8  3001               	movlw	1
  5499  07B9  00F3               	movwf	memset@n
  5500  07BA  3000               	movlw	0
  5501  07BB  00F4               	movwf	memset@n+1
  5502  07BC  30EF               	movlw	(low (_USBAlternateInterface| 0))& (0+255)
  5503  07BD  318A  2236  3187   	fcall	_memset
  5504                           
  5505                           ;usb_device.c: 2016: UCONbits.PPBRST = 0;
  5506  07C0  003D               	movlb	29	; select bank29
  5507  07C1  130E               	bcf	14,6	;volatile
  5508                           
  5509                           ;usb_device.c: 2018: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5510  07C2  3028               	movlw	40
  5511  07C3  00FB               	movwf	??_USBStdSetCfgHandler
  5512  07C4  087B               	movf	??_USBStdSetCfgHandler,w
  5513  07C5  0020               	movlb	0	; select bank0
  5514  07C6  00E9               	movwf	_pBDTEntryIn
  5515                           
  5516                           ;usb_device.c: 2021: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  5517  07C7  3020               	movlw	32
  5518  07C8  00FB               	movwf	??_USBStdSetCfgHandler
  5519  07C9  087B               	movf	??_USBStdSetCfgHandler,w
  5520  07CA  00ED               	movwf	_pBDTEntryEP0OutCurrent
  5521                           
  5522                           ;usb_device.c: 2022: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5523  07CB  086D               	movf	_pBDTEntryEP0OutCurrent,w
  5524  07CC  00FB               	movwf	??_USBStdSetCfgHandler
  5525  07CD  087B               	movf	??_USBStdSetCfgHandler,w
  5526  07CE  00FC               	movwf	_pBDTEntryEP0OutNext
  5527                           
  5528                           ;usb_device.c: 2025: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  5529  07CF  0842               	movf	66,w	;volatile
  5530  07D0  00FB               	movwf	??_USBStdSetCfgHandler
  5531  07D1  087B               	movf	??_USBStdSetCfgHandler,w
  5532  07D2  0021               	movlb	1	; select bank1
  5533  07D3  00EE               	movwf	_USBActiveConfiguration^(0+128)
  5534                           
  5535                           ;usb_device.c: 2028: if(USBActiveConfiguration == 0)
  5536  07D4  086E               	movf	_USBActiveConfiguration^(0+128),w
  5537  07D5  1D03               	btfss	3,2
  5538  07D6  2FDD               	goto	l4600
  5539                           
  5540                           ;usb_device.c: 2029: {
  5541                           ;usb_device.c: 2031: USBDeviceState = ADDRESS_STATE;
  5542  07D7  3010               	movlw	16
  5543  07D8  00FB               	movwf	??_USBStdSetCfgHandler
  5544  07D9  087B               	movf	??_USBStdSetCfgHandler,w
  5545  07DA  0020               	movlb	0	; select bank0
  5546  07DB  00EC               	movwf	_USBDeviceState
  5547                           
  5548                           ;usb_device.c: 2032: }
  5549  07DC  0008               	return
  5550  07DD                     l4600:	
  5551                           
  5552                           ;usb_device.c: 2033: else
  5553                           ;usb_device.c: 2034: {
  5554                           ;usb_device.c: 2036: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  5555  07DD  3000               	movlw	0
  5556  07DE  0020               	movlb	0	; select bank0
  5557  07DF  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5558  07E0  3001               	movlw	1
  5559  07E1  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5560  07E2  30EE               	movlw	(low (_USBActiveConfiguration| 0))& (0+255)
  5561  07E3  00FB               	movwf	??_USBStdSetCfgHandler
  5562  07E4  087B               	movf	??_USBStdSetCfgHandler,w
  5563  07E5  00D7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5564  07E6  3001               	movlw	1
  5565  07E7  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5566  07E8  3000               	movlw	0
  5567  07E9  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5568  07EA  318B  2386         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5569                           
  5570                           ;usb_device.c: 2041: USBDeviceState = CONFIGURED_STATE;
  5571  07EC  3020               	movlw	32
  5572  07ED  00FB               	movwf	??_USBStdSetCfgHandler
  5573  07EE  087B               	movf	??_USBStdSetCfgHandler,w
  5574  07EF  0020               	movlb	0	; select bank0
  5575  07F0  00EC               	movwf	_USBDeviceState
  5576  07F1  0008               	return
  5577  07F2                     __end_of_USBStdSetCfgHandler:	
  5578                           
  5579                           	psect	text13
  5580  0A36                     __ptext13:	
  5581 ;; *************** function _memset *****************
  5582 ;; Defined at:
  5583 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;  p1              1    wreg     PTR void 
  5586 ;;		 -> USBAlternateInterface(1), BDT(32), 
  5587 ;;  c               2    1[COMMON] int 
  5588 ;;  n               2    3[COMMON] unsigned int 
  5589 ;; Auto vars:     Size  Location     Type
  5590 ;;  p1              1    7[COMMON] PTR void 
  5591 ;;		 -> USBAlternateInterface(1), BDT(32), 
  5592 ;;  p               1    6[COMMON] PTR unsigned char 
  5593 ;;		 -> USBAlternateInterface(1), BDT(32), 
  5594 ;; Return value:  Size  Location     Type
  5595 ;;                  1    wreg      PTR void 
  5596 ;; Registers used:
  5597 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5603 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5604 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5605 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5606 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5607 ;;Total ram usage:        7 bytes
  5608 ;; Hardware stack levels used:    1
  5609 ;; Hardware stack levels required when called:    1
  5610 ;; This function calls:
  5611 ;;		Nothing
  5612 ;; This function is called by:
  5613 ;;		_USBStdSetCfgHandler
  5614 ;; This function uses a non-reentrant model
  5615 ;;
  5616                           
  5617                           
  5618                           ;psect for function _memset
  5619  0A36                     _memset:	
  5620                           
  5621                           ;incstack = 0
  5622                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  5623                           ;memset@p1 stored from wreg
  5624  0A36  00F7               	movwf	memset@p1
  5625  0A37  0877               	movf	memset@p1,w
  5626  0A38  00F5               	movwf	??_memset
  5627  0A39  0875               	movf	??_memset,w
  5628  0A3A  00F6               	movwf	memset@p
  5629  0A3B                     l3212:	
  5630  0A3B  3001               	movlw	1
  5631  0A3C  02F3               	subwf	memset@n,f
  5632  0A3D  3000               	movlw	0
  5633  0A3E  3BF4               	subwfb	memset@n+1,f
  5634  0A3F  0A73               	incf	memset@n,w
  5635  0A40  1903               	btfsc	3,2
  5636  0A41  0A74               	incf	memset@n+1,w
  5637  0A42  1903               	btfsc	3,2
  5638  0A43  0008               	return
  5639  0A44  0871               	movf	memset@c,w
  5640  0A45  00F5               	movwf	??_memset
  5641  0A46  0876               	movf	memset@p,w
  5642  0A47  0086               	movwf	6
  5643  0A48  0187               	clrf	7
  5644  0A49  0875               	movf	??_memset,w
  5645  0A4A  0081               	movwf	1
  5646  0A4B  3001               	movlw	1
  5647  0A4C  00F5               	movwf	??_memset
  5648  0A4D  0875               	movf	??_memset,w
  5649  0A4E  07F6               	addwf	memset@p,f
  5650  0A4F  2A3B               	goto	l3212
  5651  0A50                     __end_of_memset:	
  5652                           ;	Return value of _memset is never used
  5653                           
  5654                           
  5655                           	psect	text14
  5656  0C8D                     __ptext14:	
  5657 ;; *************** function _USBStdGetStatusHandler *****************
  5658 ;; Defined at:
  5659 ;;		line 2148 in file "../framework/usb/usb_device.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;		None
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;  p               1    2[COMMON] PTR struct __BDT
  5664 ;;		 -> BDT(32), NULL(0), 
  5665 ;; Return value:  Size  Location     Type
  5666 ;;		None               void
  5667 ;; Registers used:
  5668 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5675 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5676 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5677 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5678 ;;Total ram usage:        2 bytes
  5679 ;; Hardware stack levels used:    1
  5680 ;; Hardware stack levels required when called:    1
  5681 ;; This function calls:
  5682 ;;		Nothing
  5683 ;; This function is called by:
  5684 ;;		_USBCheckStdRequest
  5685 ;; This function uses a non-reentrant model
  5686 ;;
  5687                           
  5688                           
  5689                           ;psect for function _USBStdGetStatusHandler
  5690  0C8D                     _USBStdGetStatusHandler:	
  5691                           
  5692                           ;usb_device.c: 2150: CtrlTrfData[0] = 0;
  5693                           
  5694                           ;incstack = 0
  5695                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  5696  0C8D  0020               	movlb	0	; select bank0
  5697  0C8E  01C8               	clrf	72	;volatile
  5698                           
  5699                           ;usb_device.c: 2151: CtrlTrfData[1] = 0;
  5700  0C8F  01C9               	clrf	73	;volatile
  5701                           
  5702                           ;usb_device.c: 2153: switch(SetupPkt.Recipient)
  5703  0C90  2CC1               	goto	l3376
  5704  0C91                     l708:	
  5705                           ;usb_device.c: 2154: {
  5706                           ;usb_device.c: 2155: case (0x00):
  5707                           
  5708                           
  5709                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  5710  0C91  0021               	movlb	1	; select bank1
  5711  0C92  17E2               	bsf	(_inPipes^(0+128)+2),7
  5712                           
  5713                           ;usb_device.c: 2164: }
  5714                           ;usb_device.c: 2166: if(RemoteWakeup == 1)
  5715                           
  5716                           ;usb_device.c: 2162: {
  5717                           ;usb_device.c: 2163: CtrlTrfData[0]|=0x01;
  5718                           
  5719                           ;usb_device.c: 2161: if(0 == 1)
  5720  0C93  0022               	movlb	2	; select bank2
  5721  0C94  035B               	decf	_RemoteWakeup^(0+256),w
  5722  0C95  1D03               	btfss	3,2
  5723  0C96  2CCD               	goto	l711
  5724                           
  5725                           ;usb_device.c: 2167: {
  5726                           ;usb_device.c: 2168: CtrlTrfData[0]|=0x02;
  5727  0C97  0020               	movlb	0	; select bank0
  5728  0C98  14C8               	bsf	72,1	;volatile
  5729                           
  5730                           ;usb_device.c: 2169: }
  5731                           ;usb_device.c: 2170: break;
  5732  0C99  2CCD               	goto	l711
  5733  0C9A                     l712:	
  5734                           ;usb_device.c: 2171: case (0x01):
  5735                           
  5736                           
  5737                           ;usb_device.c: 2172: inPipes[0].info.bits.busy = 1;
  5738  0C9A  0021               	movlb	1	; select bank1
  5739  0C9B  17E2               	bsf	(_inPipes^(0+128)+2),7
  5740                           
  5741                           ;usb_device.c: 2173: break;
  5742  0C9C  2CCD               	goto	l711
  5743  0C9D                     l713:	
  5744                           ;usb_device.c: 2174: case (0x02):
  5745                           
  5746                           
  5747                           ;usb_device.c: 2175: inPipes[0].info.bits.busy = 1;
  5748  0C9D  0021               	movlb	1	; select bank1
  5749  0C9E  17E2               	bsf	(_inPipes^(0+128)+2),7
  5750                           
  5751                           ;usb_device.c: 2179: {
  5752                           ;usb_device.c: 2180: BDT_ENTRY *p;
  5753                           ;usb_device.c: 2182: if(SetupPkt.EPDir == 0)
  5754  0C9F  0020               	movlb	0	; select bank0
  5755  0CA0  1BC4               	btfsc	68,7	;volatile
  5756  0CA1  2CA9               	goto	l3366
  5757                           
  5758                           ;usb_device.c: 2183: {
  5759                           ;usb_device.c: 2184: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  5760  0CA2  0844               	movf	68,w	;volatile
  5761  0CA3  390F               	andlw	15
  5762  0CA4  3E58               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5763  0CA5  0086               	movwf	6
  5764  0CA6  3001               	movlw	1	; select bank2/3
  5765  0CA7  0087               	movwf	7
  5766  0CA8  2CAE               	goto	L2
  5767  0CA9                     l3366:	
  5768                           ;usb_device.c: 2185: }
  5769                           
  5770                           
  5771                           ;usb_device.c: 2186: else
  5772                           ;usb_device.c: 2187: {
  5773                           ;usb_device.c: 2188: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  5774  0CA9  0844               	movf	68,w	;volatile
  5775  0CAA  390F               	andlw	15
  5776  0CAB  3E69               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  5777  0CAC  0086               	movwf	6
  5778  0CAD  0187               	clrf	7
  5779  0CAE                     L2:	
  5780  0CAE  0801               	movf	1,w
  5781  0CAF  00F1               	movwf	??_USBStdGetStatusHandler
  5782  0CB0  0871               	movf	??_USBStdGetStatusHandler,w
  5783  0CB1  00F2               	movwf	USBStdGetStatusHandler@p
  5784                           
  5785                           ;usb_device.c: 2189: }
  5786                           ;usb_device.c: 2191: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  5787  0CB2  0872               	movf	USBStdGetStatusHandler@p,w
  5788  0CB3  0086               	movwf	6
  5789  0CB4  0187               	clrf	7
  5790  0CB5  1F81               	btfss	1,7
  5791  0CB6  2CCD               	goto	l711
  5792  0CB7  0872               	movf	USBStdGetStatusHandler@p,w
  5793  0CB8  0086               	movwf	6
  5794  0CB9  0187               	clrf	7
  5795  0CBA  1D01               	btfss	1,2
  5796  0CBB  2CCD               	goto	l711
  5797                           
  5798                           ;usb_device.c: 2192: CtrlTrfData[0]=0x01;
  5799  0CBC  3001               	movlw	1
  5800  0CBD  00F1               	movwf	??_USBStdGetStatusHandler
  5801  0CBE  0871               	movf	??_USBStdGetStatusHandler,w
  5802  0CBF  00C8               	movwf	72	;volatile
  5803                           
  5804                           ;usb_device.c: 2194: }
  5805                           ;usb_device.c: 2195: }
  5806                           
  5807                           ;usb_device.c: 2193: break;
  5808  0CC0  2CCD               	goto	l711
  5809  0CC1                     l3376:	
  5810  0CC1  0840               	movf	64,w	;volatile
  5811  0CC2  391F               	andlw	31
  5812                           
  5813                           ; Switch size 1, requested type "space"
  5814                           ; Number of cases is 3, Range of values is 0 to 2
  5815                           ; switch strategies available:
  5816                           ; Name         Instructions Cycles
  5817                           ; simple_byte           10     6 (average)
  5818                           ; direct_byte           12     6 (fixed)
  5819                           ; jumptable            260     6 (fixed)
  5820                           ;	Chosen strategy is simple_byte
  5821  0CC3  3A00               	xorlw	0	; case 0
  5822  0CC4  1903               	skipnz
  5823  0CC5  2C91               	goto	l708
  5824  0CC6  3A01               	xorlw	1	; case 1
  5825  0CC7  1903               	skipnz
  5826  0CC8  2C9A               	goto	l712
  5827  0CC9  3A03               	xorlw	3	; case 2
  5828  0CCA  1903               	skipnz
  5829  0CCB  2C9D               	goto	l713
  5830  0CCC  2CCD               	goto	l711
  5831  0CCD                     l711:	
  5832                           
  5833                           ;usb_device.c: 2197: if(inPipes[0].info.bits.busy == 1)
  5834  0CCD  0021               	movlb	1	; select bank1
  5835  0CCE  1FE2               	btfss	(_inPipes^(0+128)+2),7
  5836  0CCF  0008               	return
  5837                           
  5838                           ;usb_device.c: 2198: {
  5839                           ;usb_device.c: 2199: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  5840  0CD0  3048               	movlw	72
  5841  0CD1  00E0               	movwf	_inPipes^(0+128)
  5842  0CD2  3000               	movlw	0
  5843  0CD3  00E1               	movwf	(_inPipes+1)^(0+128)
  5844                           
  5845                           ;usb_device.c: 2200: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5846  0CD4  1462               	bsf	(_inPipes^(0+128)+2),0
  5847                           
  5848                           ;usb_device.c: 2201: inPipes[0].wCount.v[0] = 2;
  5849  0CD5  3002               	movlw	2
  5850  0CD6  00F1               	movwf	??_USBStdGetStatusHandler
  5851  0CD7  0871               	movf	??_USBStdGetStatusHandler,w
  5852  0CD8  00E3               	movwf	(_inPipes^(0+128)+3)
  5853  0CD9  0008               	return
  5854  0CDA                     __end_of_USBStdGetStatusHandler:	
  5855                           
  5856                           	psect	text15
  5857  0F81                     __ptext15:	
  5858 ;; *************** function _USBStdGetDscHandler *****************
  5859 ;; Defined at:
  5860 ;;		line 2062 in file "../framework/usb/usb_device.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;		None
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;		None
  5865 ;; Return value:  Size  Location     Type
  5866 ;;		None               void
  5867 ;; Registers used:
  5868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5876 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5877 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5878 ;;Total ram usage:        3 bytes
  5879 ;; Hardware stack levels used:    1
  5880 ;; Hardware stack levels required when called:    1
  5881 ;; This function calls:
  5882 ;;		Nothing
  5883 ;; This function is called by:
  5884 ;;		_USBCheckStdRequest
  5885 ;; This function uses a non-reentrant model
  5886 ;;
  5887                           
  5888                           
  5889                           ;psect for function _USBStdGetDscHandler
  5890  0F81                     _USBStdGetDscHandler:	
  5891                           
  5892                           ;usb_device.c: 2064: if(SetupPkt.bmRequestType == 0x80)
  5893                           
  5894                           ;incstack = 0
  5895                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  5896  0F81  3080               	movlw	128
  5897  0F82  0020               	movlb	0	; select bank0
  5898  0F83  0640               	xorwf	64,w	;volatile
  5899  0F84  1D03               	btfss	3,2
  5900  0F85  0008               	return
  5901                           
  5902                           ;usb_device.c: 2065: {
  5903                           ;usb_device.c: 2066: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  5904  0F86  30C0               	movlw	192
  5905  0F87  00F1               	movwf	??_USBStdGetDscHandler
  5906  0F88  0871               	movf	??_USBStdGetDscHandler,w
  5907  0F89  0021               	movlb	1	; select bank1
  5908  0F8A  00E2               	movwf	(_inPipes^(0+128)+2)
  5909                           
  5910                           ;usb_device.c: 2068: switch(SetupPkt.bDescriptorType)
  5911  0F8B  2FF3               	goto	l3354
  5912  0F8C                     l3330:	
  5913                           ;usb_device.c: 2069: {
  5914                           ;usb_device.c: 2070: case 0x01:
  5915                           
  5916                           
  5917                           ;usb_device.c: 2074: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  5918  0F8C  3027               	movlw	low (_device_dsc| (0+32768))
  5919  0F8D  0021               	movlb	1	; select bank1
  5920  0F8E  00E0               	movwf	_inPipes^(0+128)
  5921  0F8F  3082               	movlw	high (_device_dsc| (0+32768))
  5922  0F90  00E1               	movwf	(_inPipes^(0+128)+1)
  5923                           
  5924                           ;usb_device.c: 2076: inPipes[0].wCount.Val = sizeof(device_dsc);
  5925  0F91  3012               	movlw	18
  5926  0F92  00E3               	movwf	(_inPipes^(0+128)+3)
  5927  0F93  3000               	movlw	0
  5928  0F94  00E4               	movwf	(_inPipes^(0+128)+4)
  5929                           
  5930                           ;usb_device.c: 2077: break;
  5931  0F95  0008               	return
  5932  0F96                     l3332:	
  5933                           ;usb_device.c: 2078: case 0x02:
  5934                           
  5935                           
  5936                           ;usb_device.c: 2082: if(SetupPkt.bDscIndex < 1)
  5937  0F96  0020               	movlb	0	; select bank0
  5938  0F97  0842               	movf	66,w	;volatile
  5939  0F98  1D03               	btfss	3,2
  5940  0F99  2FC9               	goto	l3340
  5941                           
  5942                           ;usb_device.c: 2083: {
  5943                           ;usb_device.c: 2085: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  5944  0F9A  0842               	movf	66,w	;volatile
  5945  0F9B  00F1               	movwf	??_USBStdGetDscHandler
  5946  0F9C  01F2               	clrf	??_USBStdGetDscHandler+1
  5947  0F9D  35F1               	lslf	??_USBStdGetDscHandler,f
  5948  0F9E  0DF2               	rlf	??_USBStdGetDscHandler+1,f
  5949  0F9F  306E               	movlw	low (_USB_CD_Ptr| (0+32768))
  5950  0FA0  0771               	addwf	??_USBStdGetDscHandler,w
  5951  0FA1  0084               	movwf	4
  5952  0FA2  3081               	movlw	high (_USB_CD_Ptr| (0+32768))
  5953  0FA3  3D72               	addwfc	??_USBStdGetDscHandler+1,w
  5954  0FA4  0085               	movwf	5
  5955  0FA5  3F00               	moviw [0]fsr0
  5956  0FA6  0021               	movlb	1	; select bank1
  5957  0FA7  00E0               	movwf	_inPipes^(0+128)
  5958  0FA8  3F01               	moviw [1]fsr0
  5959  0FA9  00E1               	movwf	(_inPipes+1)^(0+128)
  5960                           
  5961                           ;usb_device.c: 2093: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  5962  0FAA  0861               	movf	(_inPipes+1)^(0+128),w
  5963  0FAB  00F2               	movwf	??_USBStdGetDscHandler+1
  5964  0FAC  0860               	movf	_inPipes^(0+128),w
  5965  0FAD  00F1               	movwf	??_USBStdGetDscHandler
  5966  0FAE  3002               	movlw	2
  5967  0FAF  0771               	addwf	??_USBStdGetDscHandler,w
  5968  0FB0  0084               	movwf	4
  5969  0FB1  0872               	movf	??_USBStdGetDscHandler+1,w
  5970  0FB2  1803               	skipnc
  5971  0FB3  0A72               	incf	??_USBStdGetDscHandler+1,w
  5972  0FB4  0085               	movwf	5
  5973  0FB5  0800               	movf	0,w	;code access
  5974  0FB6  00F3               	movwf	??_USBStdGetDscHandler+2
  5975  0FB7  0873               	movf	??_USBStdGetDscHandler+2,w
  5976  0FB8  00E3               	movwf	(_inPipes^(0+128)+3)
  5977                           
  5978                           ;usb_device.c: 2094: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  5979  0FB9  0861               	movf	(_inPipes+1)^(0+128),w
  5980  0FBA  00F2               	movwf	??_USBStdGetDscHandler+1
  5981  0FBB  0860               	movf	_inPipes^(0+128),w
  5982  0FBC  00F1               	movwf	??_USBStdGetDscHandler
  5983  0FBD  3003               	movlw	3
  5984  0FBE  0771               	addwf	??_USBStdGetDscHandler,w
  5985  0FBF  0084               	movwf	4
  5986  0FC0  0872               	movf	??_USBStdGetDscHandler+1,w
  5987  0FC1  1803               	skipnc
  5988  0FC2  0A72               	incf	??_USBStdGetDscHandler+1,w
  5989  0FC3  0085               	movwf	5
  5990  0FC4  0800               	movf	0,w	;code access
  5991  0FC5  00F3               	movwf	??_USBStdGetDscHandler+2
  5992  0FC6  0873               	movf	??_USBStdGetDscHandler+2,w
  5993  0FC7  00E4               	movwf	(_inPipes^(0+128)+4)
  5994                           
  5995                           ;usb_device.c: 2095: }
  5996  0FC8  0008               	return
  5997  0FC9                     l3340:	
  5998                           
  5999                           ;usb_device.c: 2096: else
  6000                           ;usb_device.c: 2097: {
  6001                           ;usb_device.c: 2098: inPipes[0].info.Val = 0;
  6002  0FC9  0021               	movlb	1	; select bank1
  6003  0FCA  01E2               	clrf	(_inPipes^(0+128)+2)
  6004                           
  6005                           ;usb_device.c: 2099: }
  6006                           ;usb_device.c: 2100: break;
  6007  0FCB  0008               	return
  6008  0FCC                     l3342:	
  6009                           ;usb_device.c: 2101: case 0x03:
  6010                           
  6011                           
  6012                           ;usb_device.c: 2105: if(SetupPkt.bDscIndex<3)
  6013  0FCC  3003               	movlw	3
  6014  0FCD  0020               	movlb	0	; select bank0
  6015  0FCE  0242               	subwf	66,w	;volatile
  6016  0FCF  1803               	skipnc
  6017  0FD0  2FED               	goto	l3348
  6018                           
  6019                           ;usb_device.c: 2106: {
  6020                           ;usb_device.c: 2108: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  6021  0FD1  0842               	movf	66,w	;volatile
  6022  0FD2  00F1               	movwf	??_USBStdGetDscHandler
  6023  0FD3  01F2               	clrf	??_USBStdGetDscHandler+1
  6024  0FD4  35F1               	lslf	??_USBStdGetDscHandler,f
  6025  0FD5  0DF2               	rlf	??_USBStdGetDscHandler+1,f
  6026  0FD6  3068               	movlw	low (_USB_SD_Ptr| (0+32768))
  6027  0FD7  0771               	addwf	??_USBStdGetDscHandler,w
  6028  0FD8  0084               	movwf	4
  6029  0FD9  3081               	movlw	high (_USB_SD_Ptr| (0+32768))
  6030  0FDA  3D72               	addwfc	??_USBStdGetDscHandler+1,w
  6031  0FDB  0085               	movwf	5
  6032  0FDC  3F00               	moviw [0]fsr0
  6033  0FDD  0021               	movlb	1	; select bank1
  6034  0FDE  00E0               	movwf	_inPipes^(0+128)
  6035  0FDF  3F01               	moviw [1]fsr0
  6036  0FE0  00E1               	movwf	(_inPipes+1)^(0+128)
  6037                           
  6038                           ;usb_device.c: 2110: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  6039  0FE1  0860               	movf	_inPipes^(0+128),w
  6040  0FE2  0084               	movwf	4
  6041  0FE3  0861               	movf	(_inPipes+1)^(0+128),w
  6042  0FE4  0085               	movwf	5
  6043  0FE5  0800               	movf	0,w	;code access
  6044  0FE6  00F1               	movwf	??_USBStdGetDscHandler
  6045  0FE7  01F2               	clrf	??_USBStdGetDscHandler+1
  6046  0FE8  0871               	movf	??_USBStdGetDscHandler,w
  6047  0FE9  00E3               	movwf	(_inPipes^(0+128)+3)
  6048  0FEA  0872               	movf	??_USBStdGetDscHandler+1,w
  6049  0FEB  00E4               	movwf	((_inPipes+1)^(0+128)+3)
  6050                           
  6051                           ;usb_device.c: 2111: }
  6052  0FEC  0008               	return
  6053  0FED                     l3348:	
  6054                           
  6055                           ;usb_device.c: 2121: else
  6056                           ;usb_device.c: 2122: {
  6057                           ;usb_device.c: 2123: inPipes[0].info.Val = 0;
  6058  0FED  0021               	movlb	1	; select bank1
  6059  0FEE  01E2               	clrf	(_inPipes^(0+128)+2)
  6060                           
  6061                           ;usb_device.c: 2124: }
  6062                           ;usb_device.c: 2125: break;
  6063  0FEF  0008               	return
  6064  0FF0                     l3350:	
  6065                           ;usb_device.c: 2126: default:
  6066                           
  6067                           
  6068                           ;usb_device.c: 2127: inPipes[0].info.Val = 0;
  6069  0FF0  0021               	movlb	1	; select bank1
  6070  0FF1  01E2               	clrf	(_inPipes^(0+128)+2)
  6071                           
  6072                           ;usb_device.c: 2129: }
  6073                           
  6074                           ;usb_device.c: 2128: break;
  6075  0FF2  0008               	return
  6076  0FF3                     l3354:	
  6077  0FF3  0020               	movlb	0	; select bank0
  6078  0FF4  0843               	movf	67,w	;volatile
  6079                           
  6080                           ; Switch size 1, requested type "space"
  6081                           ; Number of cases is 3, Range of values is 1 to 3
  6082                           ; switch strategies available:
  6083                           ; Name         Instructions Cycles
  6084                           ; simple_byte           10     6 (average)
  6085                           ; direct_byte           15     9 (fixed)
  6086                           ; jumptable            263     9 (fixed)
  6087                           ;	Chosen strategy is simple_byte
  6088  0FF5  3A01               	xorlw	1	; case 1
  6089  0FF6  1903               	skipnz
  6090  0FF7  2F8C               	goto	l3330
  6091  0FF8  3A03               	xorlw	3	; case 2
  6092  0FF9  1903               	skipnz
  6093  0FFA  2F96               	goto	l3332
  6094  0FFB  3A01               	xorlw	1	; case 3
  6095  0FFC  1903               	skipnz
  6096  0FFD  2FCC               	goto	l3342
  6097  0FFE  2FF0               	goto	l3350
  6098  0FFF  0008               	return
  6099  1000                     __end_of_USBStdGetDscHandler:	
  6100                           
  6101                           	psect	text16
  6102  003B                     __ptext16:	
  6103 ;; *************** function _USBStdFeatureReqHandler *****************
  6104 ;; Defined at:
  6105 ;;		line 2779 in file "../framework/usb/usb_device.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;		None
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;  pUEP            2   12[BANK0 ] PTR unsigned char 
  6110 ;;		 -> UEP0(1), 
  6111 ;;  p               1   15[BANK0 ] PTR struct __BDT
  6112 ;;		 -> BDT(32), NULL(0), 
  6113 ;;  current_ep_d    1   14[BANK0 ] struct .
  6114 ;; Return value:  Size  Location     Type
  6115 ;;		None               void
  6116 ;; Registers used:
  6117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6118 ;; Tracked objects:
  6119 ;;		On entry : 0/0
  6120 ;;		On exit  : 0/0
  6121 ;;		Unchanged: 0/0
  6122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6124 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6125 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6126 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6127 ;;Total ram usage:        6 bytes
  6128 ;; Hardware stack levels used:    1
  6129 ;; Hardware stack levels required when called:    5
  6130 ;; This function calls:
  6131 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6132 ;; This function is called by:
  6133 ;;		_USBCheckStdRequest
  6134 ;; This function uses a non-reentrant model
  6135 ;;
  6136                           
  6137                           
  6138                           ;psect for function _USBStdFeatureReqHandler
  6139  003B                     _USBStdFeatureReqHandler:	
  6140                           
  6141                           ;usb_device.c: 2781: BDT_ENTRY *p;
  6142                           ;usb_device.c: 2782: EP_STATUS current_ep_data;
  6143                           ;usb_device.c: 2786: unsigned char* pUEP;
  6144                           ;usb_device.c: 2824: if((SetupPkt.bFeature == 1)&&
  6145                           ;usb_device.c: 2825: (SetupPkt.Recipient == (0x00)))
  6146                           
  6147                           ;incstack = 0
  6148                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6149  003B  0020               	movlb	0	; select bank0
  6150  003C  0342               	decf	66,w	;volatile
  6151  003D  1D03               	btfss	3,2
  6152  003E  2851               	goto	l4616
  6153  003F  0840               	movf	64,w	;volatile
  6154  0040  391F               	andlw	31
  6155  0041  3A00               	xorlw	0
  6156  0042  1D03               	skipz
  6157  0043  2851               	goto	l4616
  6158                           
  6159                           ;usb_device.c: 2826: {
  6160                           ;usb_device.c: 2827: inPipes[0].info.bits.busy = 1;
  6161  0044  0021               	movlb	1	; select bank1
  6162  0045  17E2               	bsf	(_inPipes^(0+128)+2),7
  6163                           
  6164                           ;usb_device.c: 2828: if(SetupPkt.bRequest == 3)
  6165  0046  3003               	movlw	3
  6166  0047  0020               	movlb	0	; select bank0
  6167  0048  0641               	xorwf	65,w	;volatile
  6168  0049  1D03               	btfss	3,2
  6169  004A  284F               	goto	l4614
  6170                           
  6171                           ;usb_device.c: 2829: RemoteWakeup = 1;
  6172  004B  0022               	movlb	2	; select bank2
  6173  004C  01DB               	clrf	_RemoteWakeup^(0+256)
  6174  004D  0ADB               	incf	_RemoteWakeup^(0+256),f
  6175  004E  2851               	goto	l4616
  6176  004F                     l4614:	
  6177                           
  6178                           ;usb_device.c: 2830: else
  6179                           ;usb_device.c: 2831: RemoteWakeup = 0;
  6180  004F  0022               	movlb	2	; select bank2
  6181  0050  01DB               	clrf	_RemoteWakeup^(0+256)
  6182  0051                     l4616:	
  6183                           
  6184                           ;usb_device.c: 2832: }
  6185                           ;usb_device.c: 2835: if((SetupPkt.bFeature == 0)&&
  6186                           ;usb_device.c: 2836: (SetupPkt.Recipient == (0x02))&&
  6187                           ;usb_device.c: 2837: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
  6188                           ;usb_device.c: 2838: (USBDeviceState == CONFIGURED_STATE))
  6189  0051  0020               	movlb	0	; select bank0
  6190  0052  0842               	movf	66,w	;volatile
  6191  0053  1D03               	btfss	3,2
  6192  0054  0008               	return
  6193  0055  0840               	movf	64,w	;volatile
  6194  0056  391F               	andlw	31
  6195  0057  3A02               	xorlw	2
  6196  0058  1D03               	skipz
  6197  0059  0008               	return
  6198  005A  0844               	movf	68,w	;volatile
  6199  005B  390F               	andlw	15
  6200  005C  3A00               	xorlw	0
  6201  005D  1903               	skipnz
  6202  005E  0008               	return
  6203  005F  0844               	movf	68,w	;volatile
  6204  0060  390F               	andlw	15
  6205  0061  00DA               	movwf	??_USBStdFeatureReqHandler
  6206  0062  3002               	movlw	2
  6207  0063  025A               	subwf	??_USBStdFeatureReqHandler,w
  6208  0064  1803               	skipnc
  6209  0065  0008               	return
  6210  0066  3020               	movlw	32
  6211  0067  066C               	xorwf	_USBDeviceState,w
  6212  0068  1D03               	btfss	3,2
  6213  0069  0008               	return
  6214                           
  6215                           ;usb_device.c: 2839: {
  6216                           ;usb_device.c: 2842: inPipes[0].info.bits.busy = 1;
  6217  006A  0021               	movlb	1	; select bank1
  6218  006B  17E2               	bsf	(_inPipes^(0+128)+2),7
  6219                           
  6220                           ;usb_device.c: 2845: if(SetupPkt.EPDir == 0)
  6221  006C  0020               	movlb	0	; select bank0
  6222  006D  1BC4               	btfsc	68,7	;volatile
  6223  006E  287D               	goto	l4630
  6224                           
  6225                           ;usb_device.c: 2846: {
  6226                           ;usb_device.c: 2847: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6227  006F  0844               	movf	68,w	;volatile
  6228  0070  390F               	andlw	15
  6229  0071  3E58               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6230  0072  0086               	movwf	6
  6231  0073  3001               	movlw	1	; select bank2/3
  6232  0074  0087               	movwf	7
  6233  0075  0801               	movf	1,w
  6234  0076  00DA               	movwf	??_USBStdFeatureReqHandler
  6235  0077  085A               	movf	??_USBStdFeatureReqHandler,w
  6236  0078  00DF               	movwf	USBStdFeatureReqHandler@p
  6237                           
  6238                           ;usb_device.c: 2848: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  6239  0079  0844               	movf	68,w	;volatile
  6240  007A  390F               	andlw	15
  6241  007B  3E54               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  6242  007C  2889               	goto	L3
  6243  007D                     l4630:	
  6244                           ;usb_device.c: 2849: }
  6245                           
  6246                           
  6247                           ;usb_device.c: 2850: else
  6248                           ;usb_device.c: 2851: {
  6249                           ;usb_device.c: 2852: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6250  007D  0844               	movf	68,w	;volatile
  6251  007E  390F               	andlw	15
  6252  007F  3E69               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  6253  0080  0086               	movwf	6
  6254  0081  0187               	clrf	7
  6255  0082  0801               	movf	1,w
  6256  0083  00DA               	movwf	??_USBStdFeatureReqHandler
  6257  0084  085A               	movf	??_USBStdFeatureReqHandler,w
  6258  0085  00DF               	movwf	USBStdFeatureReqHandler@p
  6259                           
  6260                           ;usb_device.c: 2853: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  6261  0086  0844               	movf	68,w	;volatile
  6262  0087  390F               	andlw	15
  6263  0088  3E52               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  6264  0089                     L3:	
  6265  0089  0086               	movwf	6
  6266  008A  3001               	movlw	1	; select bank2/3
  6267  008B  0087               	movwf	7
  6268  008C  0801               	movf	1,w
  6269  008D  00DA               	movwf	??_USBStdFeatureReqHandler
  6270  008E  085A               	movf	??_USBStdFeatureReqHandler,w
  6271  008F  00DE               	movwf	USBStdFeatureReqHandler@current_ep_data
  6272                           
  6273                           ;usb_device.c: 2854: }
  6274                           ;usb_device.c: 2860: if(current_ep_data.bits.ping_pong_state == 0)
  6275  0090  185E               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  6276  0091  2897               	goto	l793
  6277                           
  6278                           ;usb_device.c: 2861: {
  6279                           ;usb_device.c: 2862: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  6280  0092  30FB               	movlw	251
  6281  0093  00DA               	movwf	??_USBStdFeatureReqHandler
  6282  0094  085A               	movf	??_USBStdFeatureReqHandler,w
  6283  0095  05DF               	andwf	USBStdFeatureReqHandler@p,f
  6284                           
  6285                           ;usb_device.c: 2863: }
  6286  0096  2898               	goto	l794
  6287  0097                     l793:	
  6288                           
  6289                           ;usb_device.c: 2864: else
  6290                           ;usb_device.c: 2865: {
  6291                           ;usb_device.c: 2866: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  6292  0097  155F               	bsf	USBStdFeatureReqHandler@p,2
  6293  0098                     l794:	
  6294                           
  6295                           ;usb_device.c: 2867: }
  6296                           ;usb_device.c: 2872: if(SetupPkt.EPDir == 0)
  6297  0098  1BC4               	btfsc	68,7	;volatile
  6298  0099  28A3               	goto	l4638
  6299                           
  6300                           ;usb_device.c: 2873: {
  6301                           ;usb_device.c: 2874: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6302  009A  085F               	movf	USBStdFeatureReqHandler@p,w
  6303  009B  00DA               	movwf	??_USBStdFeatureReqHandler
  6304  009C  0844               	movf	68,w	;volatile
  6305  009D  390F               	andlw	15
  6306  009E  3E58               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6307  009F  0086               	movwf	6
  6308  00A0  3001               	movlw	1	; select bank2/3
  6309  00A1  0087               	movwf	7
  6310  00A2  28AA               	goto	L4
  6311  00A3                     l4638:	
  6312                           ;usb_device.c: 2875: }
  6313                           
  6314                           
  6315                           ;usb_device.c: 2876: else
  6316                           ;usb_device.c: 2877: {
  6317                           ;usb_device.c: 2878: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6318  00A3  085F               	movf	USBStdFeatureReqHandler@p,w
  6319  00A4  00DA               	movwf	??_USBStdFeatureReqHandler
  6320  00A5  0844               	movf	68,w	;volatile
  6321  00A6  390F               	andlw	15
  6322  00A7  3E69               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  6323  00A8  0086               	movwf	6
  6324  00A9  0187               	clrf	7
  6325  00AA                     L4:	
  6326  00AA  085A               	movf	??_USBStdFeatureReqHandler,w
  6327  00AB  0081               	movwf	1
  6328                           
  6329                           ;usb_device.c: 2879: }
  6330                           ;usb_device.c: 2882: if(SetupPkt.bRequest == 3)
  6331  00AC  3003               	movlw	3
  6332  00AD  0641               	xorwf	65,w	;volatile
  6333  00AE  1D03               	btfss	3,2
  6334  00AF  28CB               	goto	l4654
  6335                           
  6336                           ;usb_device.c: 2883: {
  6337                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  6338  00B0  085F               	movf	USBStdFeatureReqHandler@p,w
  6339  00B1  0086               	movwf	6
  6340  00B2  0187               	clrf	7
  6341  00B3  1F81               	btfss	1,7
  6342  00B4  28C2               	goto	l4650
  6343                           
  6344                           ;usb_device.c: 2885: {
  6345                           ;usb_device.c: 2888: if(SetupPkt.EPDir == 0)
  6346  00B5  1BC4               	btfsc	68,7	;volatile
  6347  00B6  28BB               	goto	l4648
  6348                           
  6349                           ;usb_device.c: 2889: {
  6350                           ;usb_device.c: 2890: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6351  00B7  0844               	movf	68,w	;volatile
  6352  00B8  390F               	andlw	15
  6353  00B9  3E54               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  6354  00BA  28BE               	goto	L5
  6355  00BB                     l4648:	
  6356                           ;usb_device.c: 2891: }
  6357                           
  6358                           
  6359                           ;usb_device.c: 2892: else
  6360                           ;usb_device.c: 2893: {
  6361                           ;usb_device.c: 2894: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6362  00BB  0844               	movf	68,w	;volatile
  6363  00BC  390F               	andlw	15
  6364  00BD  3E52               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  6365  00BE                     L5:	
  6366  00BE  0086               	movwf	6
  6367  00BF  3001               	movlw	1	; select bank2/3
  6368  00C0  0087               	movwf	7
  6369  00C1  1481               	bsf	1,1
  6370  00C2                     l4650:	
  6371                           
  6372                           ;usb_device.c: 2895: }
  6373                           ;usb_device.c: 2896: }
  6374                           ;usb_device.c: 2899: p->STAT.Val |= 0x04;
  6375  00C2  085F               	movf	USBStdFeatureReqHandler@p,w
  6376  00C3  0086               	movwf	6
  6377  00C4  0187               	clrf	7
  6378  00C5  1501               	bsf	1,2
  6379                           
  6380                           ;usb_device.c: 2900: p->STAT.Val |= 0x80;
  6381  00C6  085F               	movf	USBStdFeatureReqHandler@p,w
  6382  00C7  0086               	movwf	6
  6383  00C8  0187               	clrf	7
  6384  00C9  1781               	bsf	1,7
  6385                           
  6386                           ;usb_device.c: 2901: }
  6387  00CA  0008               	return
  6388  00CB                     l4654:	
  6389                           
  6390                           ;usb_device.c: 2902: else
  6391                           ;usb_device.c: 2903: {
  6392                           ;usb_device.c: 2907: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  6393  00CB  3004               	movlw	4
  6394  00CC  00DA               	movwf	??_USBStdFeatureReqHandler
  6395  00CD  085A               	movf	??_USBStdFeatureReqHandler,w
  6396  00CE  06DF               	xorwf	USBStdFeatureReqHandler@p,f
  6397                           
  6398                           ;usb_device.c: 2909: if(p->STAT.UOWN == 1)
  6399  00CF  085F               	movf	USBStdFeatureReqHandler@p,w
  6400  00D0  0086               	movwf	6
  6401  00D1  0187               	clrf	7
  6402  00D2  1F81               	btfss	1,7
  6403  00D3  28EF               	goto	l4664
  6404                           
  6405                           ;usb_device.c: 2910: {
  6406                           ;usb_device.c: 2913: p->STAT.Val &= (~0x80);
  6407  00D4  307F               	movlw	127
  6408  00D5  00DA               	movwf	??_USBStdFeatureReqHandler
  6409  00D6  085F               	movf	USBStdFeatureReqHandler@p,w
  6410  00D7  0086               	movwf	6
  6411  00D8  0187               	clrf	7
  6412  00D9  085A               	movf	??_USBStdFeatureReqHandler,w
  6413  00DA  0581               	andwf	1,f
  6414                           
  6415                           ;usb_device.c: 2914: p->STAT.Val |= 0x40;
  6416  00DB  085F               	movf	USBStdFeatureReqHandler@p,w
  6417  00DC  0086               	movwf	6
  6418  00DD  0187               	clrf	7
  6419  00DE  1701               	bsf	1,6
  6420                           
  6421                           ;usb_device.c: 2915: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  6422  00DF  3000               	movlw	0
  6423  00E0  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6424  00E1  3005               	movlw	5
  6425  00E2  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6426  00E3  085F               	movf	USBStdFeatureReqHandler@p,w
  6427  00E4  00DA               	movwf	??_USBStdFeatureReqHandler
  6428  00E5  085A               	movf	??_USBStdFeatureReqHandler,w
  6429  00E6  00D7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6430  00E7  3001               	movlw	1
  6431  00E8  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6432  00E9  3000               	movlw	0
  6433  00EA  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6434  00EB  318B  2386  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6435                           
  6436                           ;usb_device.c: 2916: }
  6437  00EE  28F4               	goto	l4666
  6438  00EF                     l4664:	
  6439                           
  6440                           ;usb_device.c: 2917: else
  6441                           ;usb_device.c: 2918: {
  6442                           ;usb_device.c: 2920: p->STAT.Val |= 0x40;
  6443  00EF  0020               	movlb	0	; select bank0
  6444  00F0  085F               	movf	USBStdFeatureReqHandler@p,w
  6445  00F1  0086               	movwf	6
  6446  00F2  0187               	clrf	7
  6447  00F3  1701               	bsf	1,6
  6448  00F4                     l4666:	
  6449                           
  6450                           ;usb_device.c: 2921: }
  6451                           ;usb_device.c: 2925: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  6452  00F4  3004               	movlw	4
  6453  00F5  0020               	movlb	0	; select bank0
  6454  00F6  00DA               	movwf	??_USBStdFeatureReqHandler
  6455  00F7  085A               	movf	??_USBStdFeatureReqHandler,w
  6456  00F8  06DF               	xorwf	USBStdFeatureReqHandler@p,f
  6457                           
  6458                           ;usb_device.c: 2931: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  6459  00F9  18DE               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  6460  00FA  2900               	goto	l806
  6461  00FB  085F               	movf	USBStdFeatureReqHandler@p,w
  6462  00FC  0086               	movwf	6
  6463  00FD  0187               	clrf	7
  6464  00FE  1F81               	btfss	1,7
  6465  00FF  2924               	goto	l4678
  6466  0100                     l806:	
  6467                           
  6468                           ;usb_device.c: 2932: {
  6469                           ;usb_device.c: 2933: if(SetupPkt.EPDir == 0)
  6470  0100  1BC4               	btfsc	68,7	;volatile
  6471  0101  2906               	goto	l4674
  6472                           
  6473                           ;usb_device.c: 2934: {
  6474                           ;usb_device.c: 2935: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  6475  0102  0844               	movf	68,w	;volatile
  6476  0103  390F               	andlw	15
  6477  0104  3E54               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  6478  0105  2909               	goto	L6
  6479  0106                     l4674:	
  6480                           ;usb_device.c: 2936: }
  6481                           
  6482                           
  6483                           ;usb_device.c: 2937: else
  6484                           ;usb_device.c: 2938: {
  6485                           ;usb_device.c: 2939: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  6486  0106  0844               	movf	68,w	;volatile
  6487  0107  390F               	andlw	15
  6488  0108  3E52               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  6489  0109                     L6:	
  6490  0109  0086               	movwf	6
  6491  010A  3001               	movlw	1	; select bank2/3
  6492  010B  0087               	movwf	7
  6493  010C  1081               	bcf	1,1
  6494                           
  6495                           ;usb_device.c: 2940: }
  6496                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  6497  010D  303B               	movlw	59
  6498  010E  00DA               	movwf	??_USBStdFeatureReqHandler
  6499  010F  085F               	movf	USBStdFeatureReqHandler@p,w
  6500  0110  0086               	movwf	6
  6501  0111  0187               	clrf	7
  6502  0112  085A               	movf	??_USBStdFeatureReqHandler,w
  6503  0113  0581               	andwf	1,f
  6504                           
  6505                           ;usb_device.c: 2945: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  6506  0114  3000               	movlw	0
  6507  0115  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6508  0116  3005               	movlw	5
  6509  0117  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6510  0118  085F               	movf	USBStdFeatureReqHandler@p,w
  6511  0119  00DA               	movwf	??_USBStdFeatureReqHandler
  6512  011A  085A               	movf	??_USBStdFeatureReqHandler,w
  6513  011B  00D7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6514  011C  3001               	movlw	1
  6515  011D  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6516  011E  3000               	movlw	0
  6517  011F  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6518  0120  318B  2386  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6519                           
  6520                           ;usb_device.c: 2946: }
  6521  0123  292C               	goto	l4680
  6522  0124                     l4678:	
  6523                           
  6524                           ;usb_device.c: 2947: else
  6525                           ;usb_device.c: 2948: {
  6526                           ;usb_device.c: 2950: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  6527  0124  303B               	movlw	59
  6528  0125  0020               	movlb	0	; select bank0
  6529  0126  00DA               	movwf	??_USBStdFeatureReqHandler
  6530  0127  085F               	movf	USBStdFeatureReqHandler@p,w
  6531  0128  0086               	movwf	6
  6532  0129  0187               	clrf	7
  6533  012A  085A               	movf	??_USBStdFeatureReqHandler,w
  6534  012B  0581               	andwf	1,f
  6535  012C                     l4680:	
  6536                           
  6537                           ;usb_device.c: 2951: }
  6538                           ;usb_device.c: 2998: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  6539  012C  0020               	movlb	0	; select bank0
  6540  012D  0844               	movf	68,w	;volatile
  6541  012E  390F               	andlw	15
  6542  012F  3E98               	addlw	152
  6543  0130  00DA               	movwf	??_USBStdFeatureReqHandler
  6544  0131  01DB               	clrf	??_USBStdFeatureReqHandler+1
  6545  0132  300E               	movlw	14
  6546  0133  3DDB               	addwfc	??_USBStdFeatureReqHandler+1,f
  6547  0134  085A               	movf	??_USBStdFeatureReqHandler,w
  6548  0135  00DC               	movwf	USBStdFeatureReqHandler@pUEP
  6549  0136  085B               	movf	??_USBStdFeatureReqHandler+1,w
  6550  0137  00DD               	movwf	USBStdFeatureReqHandler@pUEP+1
  6551                           
  6552                           ;usb_device.c: 3002: *pUEP &= ~0x0001;
  6553  0138  30FE               	movlw	254
  6554  0139  00DA               	movwf	??_USBStdFeatureReqHandler
  6555  013A  085C               	movf	USBStdFeatureReqHandler@pUEP,w
  6556  013B  0086               	movwf	6
  6557  013C  085D               	movf	USBStdFeatureReqHandler@pUEP+1,w
  6558  013D  0087               	movwf	7
  6559  013E  085A               	movf	??_USBStdFeatureReqHandler,w
  6560  013F  0581               	andwf	1,f
  6561  0140  0008               	return
  6562  0141                     __end_of_USBStdFeatureReqHandler:	
  6563                           
  6564                           	psect	text17
  6565  0B86                     __ptext17:	
  6566 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  6567 ;; Defined at:
  6568 ;;		line 92 in file "../src/main.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;  event           2    5[BANK0 ] enum E2694
  6571 ;;  pdata           1    7[BANK0 ] PTR void 
  6572 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(32), NULL(0), 
  6573 ;;  size            2    8[BANK0 ] unsigned int 
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;		None
  6576 ;; Return value:  Size  Location     Type
  6577 ;;                  1    wreg      unsigned char 
  6578 ;; Registers used:
  6579 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 0/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6585 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6588 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6589 ;;Total ram usage:        5 bytes
  6590 ;; Hardware stack levels used:    1
  6591 ;; Hardware stack levels required when called:    4
  6592 ;; This function calls:
  6593 ;;		_APP_DeviceAudioMIDIInitialize
  6594 ;;		_APP_DeviceAudioMIDISOFHandler
  6595 ;;		_APP_LEDUpdateUSBStatus
  6596 ;; This function is called by:
  6597 ;;		_USBDeviceTasks
  6598 ;;		_USBStdSetCfgHandler
  6599 ;;		_USBSuspend
  6600 ;;		_USBWakeFromSuspend
  6601 ;;		_USBCtrlTrfSetupHandler
  6602 ;;		_USBCheckStdRequest
  6603 ;;		_USBStdFeatureReqHandler
  6604 ;; This function uses a non-reentrant model
  6605 ;;
  6606                           
  6607                           
  6608                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  6609  0B86                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  6610                           
  6611                           ;main.c: 94: switch( (int) event )
  6612                           
  6613                           ;incstack = 0
  6614                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  6615  0B86  2B96               	goto	l4542
  6616  0B87                     l4530:	
  6617                           ;main.c: 99: case EVENT_SOF:
  6618                           
  6619                           ;main.c: 97: break;
  6620                           
  6621                           ;main.c: 95: {
  6622                           ;main.c: 96: case EVENT_TRANSFER:
  6623                           
  6624                           
  6625                           ;main.c: 102: APP_LEDUpdateUSBStatus();
  6626  0B87  318C  2440  318B   	fcall	_APP_LEDUpdateUSBStatus
  6627                           
  6628                           ;main.c: 103: APP_DeviceAudioMIDISOFHandler();
  6629  0B8A  3189  2147         	fcall	_APP_DeviceAudioMIDISOFHandler
  6630                           
  6631                           ;main.c: 104: break;
  6632  0B8C  0008               	return
  6633  0B8D                     l4534:	
  6634                           ;main.c: 106: case EVENT_SUSPEND:
  6635                           
  6636                           
  6637                           ;main.c: 108: APP_LEDUpdateUSBStatus();
  6638  0B8D  318C  2440         	fcall	_APP_LEDUpdateUSBStatus
  6639                           
  6640                           ;main.c: 109: break;
  6641  0B8F  0008               	return
  6642  0B90                     l4536:	
  6643                           ;main.c: 111: case EVENT_RESUME:
  6644                           
  6645                           
  6646                           ;main.c: 113: APP_LEDUpdateUSBStatus();
  6647  0B90  318C  2440         	fcall	_APP_LEDUpdateUSBStatus
  6648                           
  6649                           ;main.c: 114: break;
  6650  0B92  0008               	return
  6651  0B93                     l4538:	
  6652                           ;main.c: 116: case EVENT_CONFIGURED:
  6653                           
  6654                           
  6655                           ;main.c: 119: APP_DeviceAudioMIDIInitialize();
  6656  0B93  318A  22CF         	fcall	_APP_DeviceAudioMIDIInitialize
  6657                           
  6658                           ;main.c: 136: }
  6659                           
  6660                           ;main.c: 135: break;
  6661                           
  6662                           ;main.c: 134: default:
  6663                           
  6664                           ;main.c: 132: break;
  6665                           
  6666                           ;main.c: 131: case EVENT_TRANSFER_TERMINATED:
  6667                           
  6668                           ;main.c: 129: break;
  6669                           
  6670                           ;main.c: 128: case EVENT_BUS_ERROR:
  6671                           
  6672                           ;main.c: 126: break;
  6673                           
  6674                           ;main.c: 125: case EVENT_EP0_REQUEST:
  6675                           
  6676                           ;main.c: 123: break;
  6677                           
  6678                           ;main.c: 122: case EVENT_SET_DESCRIPTOR:
  6679                           
  6680                           ;main.c: 120: break;
  6681  0B95  0008               	return
  6682  0B96                     l4542:	
  6683                           
  6684                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  6685                           ; Switch size 1, requested type "space"
  6686                           ; Number of cases is 2, Range of values is 0 to 127
  6687                           ; switch strategies available:
  6688                           ; Name         Instructions Cycles
  6689                           ; simple_byte            7     4 (average)
  6690                           ; direct_byte          262     6 (fixed)
  6691                           ; jumptable            260     6 (fixed)
  6692                           ;	Chosen strategy is simple_byte
  6693  0B96  0020               	movlb	0	; select bank0
  6694  0B97  0856               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  6695  0B98  3A00               	xorlw	0	; case 0
  6696  0B99  1903               	skipnz
  6697  0B9A  2B9F               	goto	l5086
  6698  0B9B  3A7F               	xorlw	127	; case 127
  6699  0B9C  1903               	skipnz
  6700  0B9D  2BB9               	goto	l5088
  6701  0B9E  2BBE               	goto	l88
  6702  0B9F                     l5086:	
  6703                           
  6704                           ; Switch size 1, requested type "space"
  6705                           ; Number of cases is 8, Range of values is 1 to 117
  6706                           ; switch strategies available:
  6707                           ; Name         Instructions Cycles
  6708                           ; simple_byte           25    13 (average)
  6709                           ; direct_byte          243     9 (fixed)
  6710                           ; jumptable            263     9 (fixed)
  6711                           ;	Chosen strategy is simple_byte
  6712  0B9F  0855               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  6713  0BA0  3A01               	xorlw	1	; case 1
  6714  0BA1  1903               	skipnz
  6715  0BA2  2B93               	goto	l4538
  6716  0BA3  3A03               	xorlw	3	; case 2
  6717  0BA4  1903               	skipnz
  6718  0BA5  2BBE               	goto	l88
  6719  0BA6  3A01               	xorlw	1	; case 3
  6720  0BA7  1903               	skipnz
  6721  0BA8  2BBE               	goto	l88
  6722  0BA9  3A06               	xorlw	6	; case 5
  6723  0BAA  1903               	skipnz
  6724  0BAB  2BBE               	goto	l88
  6725  0BAC  3A77               	xorlw	119	; case 114
  6726  0BAD  1903               	skipnz
  6727  0BAE  2BBE               	goto	l88
  6728  0BAF  3A01               	xorlw	1	; case 115
  6729  0BB0  1903               	skipnz
  6730  0BB1  2B87               	goto	l4530
  6731  0BB2  3A07               	xorlw	7	; case 116
  6732  0BB3  1903               	skipnz
  6733  0BB4  2B90               	goto	l4536
  6734  0BB5  3A01               	xorlw	1	; case 117
  6735  0BB6  1903               	skipnz
  6736  0BB7  2B8D               	goto	l4534
  6737  0BB8  2BBE               	goto	l88
  6738  0BB9                     l5088:	
  6739                           
  6740                           ; Switch size 1, requested type "space"
  6741                           ; Number of cases is 1, Range of values is 255 to 255
  6742                           ; switch strategies available:
  6743                           ; Name         Instructions Cycles
  6744                           ; simple_byte            4     3 (average)
  6745                           ; direct_byte            7     5 (fixed)
  6746                           ; jumptable            263     9 (fixed)
  6747                           ;	Chosen strategy is simple_byte
  6748  0BB9  0855               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  6749  0BBA  3AFF               	xorlw	255	; case 255
  6750  0BBB  1903               	skipnz
  6751  0BBC  2BBE               	goto	l88
  6752  0BBD  2BBE               	goto	l88
  6753  0BBE                     l88:	
  6754                           ;main.c: 137: return 1;
  6755                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  6756                           
  6757  0BBE  0008               	return
  6758  0BBF                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  6759                           
  6760                           	psect	text18
  6761  0C40                     __ptext18:	
  6762 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  6763 ;; Defined at:
  6764 ;;		line 23 in file "../src/app_led_usb_status.c"
  6765 ;; Parameters:    Size  Location     Type
  6766 ;;		None
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;		None
  6769 ;; Return value:  Size  Location     Type
  6770 ;;		None               void
  6771 ;; Registers used:
  6772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6773 ;; Tracked objects:
  6774 ;;		On entry : 0/0
  6775 ;;		On exit  : 0/0
  6776 ;;		Unchanged: 0/0
  6777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6782 ;;Total ram usage:        0 bytes
  6783 ;; Hardware stack levels used:    1
  6784 ;; Hardware stack levels required when called:    2
  6785 ;; This function calls:
  6786 ;;		_LED_Off
  6787 ;;		_LED_On
  6788 ;; This function is called by:
  6789 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6790 ;; This function uses a non-reentrant model
  6791 ;;
  6792                           
  6793                           
  6794                           ;psect for function _APP_LEDUpdateUSBStatus
  6795  0C40                     _APP_LEDUpdateUSBStatus:	
  6796                           
  6797                           ;app_led_usb_status.c: 25: static uint16_t ledCount = 0;
  6798                           ;app_led_usb_status.c: 27: if(UCONbits.SUSPND == 1)
  6799                           
  6800                           ;incstack = 0
  6801                           ; Regs used in _APP_LEDUpdateUSBStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6802  0C40  003D               	movlb	29	; select bank29
  6803  0C41  1C8E               	btfss	14,1	;volatile
  6804  0C42  2C81               	goto	l3122
  6805                           
  6806                           ;app_led_usb_status.c: 28: {
  6807                           ;app_led_usb_status.c: 29: LED_Off(LED_D1);
  6808  0C43  3001               	movlw	1
  6809  0C44  3189  21D2         	fcall	_LED_Off
  6810                           
  6811                           ;app_led_usb_status.c: 30: return;
  6812  0C46  0008               	return
  6813  0C47                     l3096:	
  6814                           ;app_led_usb_status.c: 34: {
  6815                           ;app_led_usb_status.c: 35: case CONFIGURED_STATE:
  6816                           
  6817                           ;app_led_usb_status.c: 31: }
  6818                           ;app_led_usb_status.c: 33: switch(USBDeviceState)
  6819                           
  6820                           
  6821                           ;app_led_usb_status.c: 38: if(ledCount == 1)
  6822  0C47  0021               	movlb	1	; select bank1
  6823  0C48  0365               	decf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  6824  0C49  0466               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  6825  0C4A  1D03               	btfss	3,2
  6826  0C4B  2C51               	goto	l3100
  6827                           
  6828                           ;app_led_usb_status.c: 39: {
  6829                           ;app_led_usb_status.c: 40: LED_On(LED_D1);
  6830  0C4C  3001               	movlw	1
  6831  0C4D  3189  21EB  318C   	fcall	_LED_On
  6832                           
  6833                           ;app_led_usb_status.c: 41: }
  6834  0C50  2C87               	goto	l3124
  6835  0C51                     l3100:	
  6836                           
  6837                           ;app_led_usb_status.c: 42: else if(ledCount == 75)
  6838  0C51  304B               	movlw	75
  6839  0C52  0021               	movlb	1	; select bank1
  6840  0C53  0665               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  6841  0C54  0466               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  6842  0C55  1D03               	btfss	3,2
  6843  0C56  2C5C               	goto	l3104
  6844                           
  6845                           ;app_led_usb_status.c: 43: {
  6846                           ;app_led_usb_status.c: 44: LED_Off(LED_D1);
  6847  0C57  3001               	movlw	1
  6848  0C58  3189  21D2  318C   	fcall	_LED_Off
  6849                           
  6850                           ;app_led_usb_status.c: 45: }
  6851  0C5B  2C87               	goto	l3124
  6852  0C5C                     l3104:	
  6853                           
  6854                           ;app_led_usb_status.c: 46: else if(ledCount > 150)
  6855  0C5C  3000               	movlw	0
  6856  0C5D  0021               	movlb	1	; select bank1
  6857  0C5E  0266               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  6858  0C5F  3097               	movlw	151
  6859  0C60  2C7A               	goto	L7
  6860  0C61                     l3108:	
  6861                           ;app_led_usb_status.c: 52: default:
  6862                           
  6863                           ;app_led_usb_status.c: 49: }
  6864                           ;app_led_usb_status.c: 50: break;
  6865                           
  6866                           ;app_led_usb_status.c: 47: {
  6867                           ;app_led_usb_status.c: 48: ledCount = 0;
  6868                           
  6869                           
  6870                           ;app_led_usb_status.c: 55: if(ledCount == 1)
  6871  0C61  0021               	movlb	1	; select bank1
  6872  0C62  0365               	decf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  6873  0C63  0466               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  6874  0C64  1D03               	btfss	3,2
  6875  0C65  2C6B               	goto	l3112
  6876                           
  6877                           ;app_led_usb_status.c: 56: {
  6878                           ;app_led_usb_status.c: 57: LED_On(LED_D1);
  6879  0C66  3001               	movlw	1
  6880  0C67  3189  21EB  318C   	fcall	_LED_On
  6881                           
  6882                           ;app_led_usb_status.c: 58: }
  6883  0C6A  2C87               	goto	l3124
  6884  0C6B                     l3112:	
  6885                           
  6886                           ;app_led_usb_status.c: 59: else if(ledCount == 50)
  6887  0C6B  3032               	movlw	50
  6888  0C6C  0021               	movlb	1	; select bank1
  6889  0C6D  0665               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  6890  0C6E  0466               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  6891  0C6F  1D03               	btfss	3,2
  6892  0C70  2C76               	goto	l3116
  6893                           
  6894                           ;app_led_usb_status.c: 60: {
  6895                           ;app_led_usb_status.c: 61: LED_Off(LED_D1);
  6896  0C71  3001               	movlw	1
  6897  0C72  3189  21D2  318C   	fcall	_LED_Off
  6898                           
  6899                           ;app_led_usb_status.c: 62: }
  6900  0C75  2C87               	goto	l3124
  6901  0C76                     l3116:	
  6902                           
  6903                           ;app_led_usb_status.c: 63: else if(ledCount > 950)
  6904  0C76  3003               	movlw	3
  6905  0C77  0021               	movlb	1	; select bank1
  6906  0C78  0266               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  6907  0C79  30B7               	movlw	183
  6908  0C7A                     L7:	
  6909  0C7A  1903               	skipnz
  6910  0C7B  0265               	subwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  6911  0C7C  1C03               	skipc
  6912  0C7D  2C87               	goto	l3124
  6913                           
  6914                           ;app_led_usb_status.c: 64: {
  6915                           ;app_led_usb_status.c: 65: ledCount = 0;
  6916  0C7E  01E5               	clrf	APP_LEDUpdateUSBStatus@ledCount^(0+128)
  6917  0C7F  01E6               	clrf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128)
  6918                           
  6919                           ;app_led_usb_status.c: 68: }
  6920                           
  6921                           ;app_led_usb_status.c: 66: }
  6922                           ;app_led_usb_status.c: 67: break;
  6923  0C80  2C87               	goto	l3124
  6924  0C81                     l3122:	
  6925  0C81  0020               	movlb	0	; select bank0
  6926  0C82  086C               	movf	_USBDeviceState,w
  6927                           
  6928                           ; Switch size 1, requested type "space"
  6929                           ; Number of cases is 1, Range of values is 32 to 32
  6930                           ; switch strategies available:
  6931                           ; Name         Instructions Cycles
  6932                           ; simple_byte            4     3 (average)
  6933                           ; direct_byte           11     9 (fixed)
  6934                           ; jumptable            263     9 (fixed)
  6935                           ;	Chosen strategy is simple_byte
  6936  0C83  3A20               	xorlw	32	; case 32
  6937  0C84  1903               	skipnz
  6938  0C85  2C47               	goto	l3096
  6939  0C86  2C61               	goto	l3108
  6940  0C87                     l3124:	
  6941                           
  6942                           ;app_led_usb_status.c: 71: ledCount++;
  6943  0C87  3001               	movlw	1
  6944  0C88  0021               	movlb	1	; select bank1
  6945  0C89  07E5               	addwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),f
  6946  0C8A  3000               	movlw	0
  6947  0C8B  3DE6               	addwfc	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),f
  6948  0C8C  0008               	return
  6949  0C8D                     __end_of_APP_LEDUpdateUSBStatus:	
  6950                           
  6951                           	psect	text19
  6952  0947                     __ptext19:	
  6953 ;; *************** function _APP_DeviceAudioMIDISOFHandler *****************
  6954 ;; Defined at:
  6955 ;;		line 54 in file "../src/app_device_audio_midi.c"
  6956 ;; Parameters:    Size  Location     Type
  6957 ;;		None
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;		None
  6960 ;; Return value:  Size  Location     Type
  6961 ;;		None               void
  6962 ;; Registers used:
  6963 ;;		wreg, status,2, status,0
  6964 ;; Tracked objects:
  6965 ;;		On entry : 0/0
  6966 ;;		On exit  : 0/0
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6973 ;;Total ram usage:        0 bytes
  6974 ;; Hardware stack levels used:    1
  6975 ;; Hardware stack levels required when called:    1
  6976 ;; This function calls:
  6977 ;;		Nothing
  6978 ;; This function is called by:
  6979 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6980 ;; This function uses a non-reentrant model
  6981 ;;
  6982                           
  6983                           
  6984                           ;psect for function _APP_DeviceAudioMIDISOFHandler
  6985  0947                     _APP_DeviceAudioMIDISOFHandler:	
  6986                           
  6987                           ;app_device_audio_midi.c: 55: if(msCounter != 0) msCounter--;
  6988                           
  6989                           ;incstack = 0
  6990                           ; Regs used in _APP_DeviceAudioMIDISOFHandler: [wreg+status,2+status,0]
  6991  0947  0021               	movlb	1	; select bank1
  6992  0948  086B               	movf	_msCounter^(0+128),w
  6993  0949  1903               	btfsc	3,2
  6994  094A  0008               	return
  6995  094B  3001               	movlw	1
  6996  094C  02EB               	subwf	_msCounter^(0+128),f
  6997  094D  0008               	return
  6998  094E                     __end_of_APP_DeviceAudioMIDISOFHandler:	
  6999                           
  7000                           	psect	text20
  7001  0ACF                     __ptext20:	
  7002 ;; *************** function _APP_DeviceAudioMIDIInitialize *****************
  7003 ;; Defined at:
  7004 ;;		line 41 in file "../src/app_device_audio_midi.c"
  7005 ;; Parameters:    Size  Location     Type
  7006 ;;		None
  7007 ;; Auto vars:     Size  Location     Type
  7008 ;;		None
  7009 ;; Return value:  Size  Location     Type
  7010 ;;		None               void
  7011 ;; Registers used:
  7012 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7013 ;; Tracked objects:
  7014 ;;		On entry : 0/0
  7015 ;;		On exit  : 0/0
  7016 ;;		Unchanged: 0/0
  7017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7020 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7021 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7022 ;;Total ram usage:        2 bytes
  7023 ;; Hardware stack levels used:    1
  7024 ;; Hardware stack levels required when called:    3
  7025 ;; This function calls:
  7026 ;;		_USBEnableEndpoint
  7027 ;;		_USBTransferOnePacket
  7028 ;; This function is called by:
  7029 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7030 ;; This function uses a non-reentrant model
  7031 ;;
  7032                           
  7033                           
  7034                           ;psect for function _APP_DeviceAudioMIDIInitialize
  7035  0ACF                     _APP_DeviceAudioMIDIInitialize:	
  7036                           
  7037                           ;app_device_audio_midi.c: 43: USBTxHandle = (0);
  7038                           
  7039                           ;incstack = 0
  7040                           ; Regs used in _APP_DeviceAudioMIDIInitialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
  7041  0ACF  0021               	movlb	1	; select bank1
  7042  0AD0  01E8               	clrf	_USBTxHandle^(0+128)
  7043                           
  7044                           ;app_device_audio_midi.c: 44: USBRxHandle = (0);
  7045  0AD1  01E7               	clrf	_USBRxHandle^(0+128)
  7046                           
  7047                           ;app_device_audio_midi.c: 45: pitch = 0x3C;
  7048  0AD2  303C               	movlw	60
  7049  0AD3  0020               	movlb	0	; select bank0
  7050  0AD4  00D3               	movwf	??_APP_DeviceAudioMIDIInitialize
  7051  0AD5  0853               	movf	??_APP_DeviceAudioMIDIInitialize,w
  7052  0AD6  0021               	movlb	1	; select bank1
  7053  0AD7  00EC               	movwf	_pitch^(0+128)
  7054                           
  7055                           ;app_device_audio_midi.c: 46: sentNoteOff = 1;
  7056  0AD8  0022               	movlb	2	; select bank2
  7057  0AD9  01E5               	clrf	_sentNoteOff^(0+256)
  7058  0ADA  0AE5               	incf	_sentNoteOff^(0+256),f
  7059                           
  7060                           ;app_device_audio_midi.c: 47: msCounter = 0;
  7061  0ADB  0021               	movlb	1	; select bank1
  7062  0ADC  01EB               	clrf	_msCounter^(0+128)
  7063                           
  7064                           ;app_device_audio_midi.c: 49: USBEnableEndpoint(1,0x04|0x02|0x10|0x08);
  7065  0ADD  301E               	movlw	30
  7066  0ADE  0020               	movlb	0	; select bank0
  7067  0ADF  00D3               	movwf	??_APP_DeviceAudioMIDIInitialize
  7068  0AE0  0853               	movf	??_APP_DeviceAudioMIDIInitialize,w
  7069  0AE1  00F8               	movwf	USBEnableEndpoint@options
  7070  0AE2  3001               	movlw	1
  7071  0AE3  318A  2288  318A   	fcall	_USBEnableEndpoint
  7072                           
  7073                           ;app_device_audio_midi.c: 51: USBRxHandle = USBTransferOnePacket(1,0,(uint8_t*)&Received
      +                          DataBuffer,64);
  7074  0AE6  01F1               	clrf	USBTransferOnePacket@dir
  7075  0AE7  30A0               	movlw	160
  7076  0AE8  00F2               	movwf	USBTransferOnePacket@data
  7077  0AE9  3000               	movlw	0
  7078  0AEA  00F3               	movwf	USBTransferOnePacket@data+1
  7079  0AEB  3040               	movlw	64
  7080  0AEC  0020               	movlb	0	; select bank0
  7081  0AED  00D3               	movwf	??_APP_DeviceAudioMIDIInitialize
  7082  0AEE  0853               	movf	??_APP_DeviceAudioMIDIInitialize,w
  7083  0AEF  00F4               	movwf	USBTransferOnePacket@len
  7084  0AF0  3001               	movlw	1
  7085  0AF1  318C  24DA         	fcall	_USBTransferOnePacket
  7086  0AF3  0020               	movlb	0	; select bank0
  7087  0AF4  00D4               	movwf	??_APP_DeviceAudioMIDIInitialize+1
  7088  0AF5  0854               	movf	??_APP_DeviceAudioMIDIInitialize+1,w
  7089  0AF6  0021               	movlb	1	; select bank1
  7090  0AF7  00E7               	movwf	_USBRxHandle^(0+128)
  7091  0AF8  0008               	return
  7092  0AF9                     __end_of_APP_DeviceAudioMIDIInitialize:	
  7093                           
  7094                           	psect	text21
  7095  0A88                     __ptext21:	
  7096 ;; *************** function _USBEnableEndpoint *****************
  7097 ;; Defined at:
  7098 ;;		line 897 in file "../framework/usb/usb_device.c"
  7099 ;; Parameters:    Size  Location     Type
  7100 ;;  ep              1    wreg     unsigned char 
  7101 ;;  options         1    8[COMMON] unsigned char 
  7102 ;; Auto vars:     Size  Location     Type
  7103 ;;  ep              1    2[BANK0 ] unsigned char 
  7104 ;;  p               2    0[BANK0 ] PTR unsigned char 
  7105 ;;		 -> UEP0(1), 
  7106 ;; Return value:  Size  Location     Type
  7107 ;;		None               void
  7108 ;; Registers used:
  7109 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7115 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7116 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7117 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7118 ;;      Totals:         3       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7119 ;;Total ram usage:        6 bytes
  7120 ;; Hardware stack levels used:    1
  7121 ;; Hardware stack levels required when called:    2
  7122 ;; This function calls:
  7123 ;;		_USBConfigureEndpoint
  7124 ;; This function is called by:
  7125 ;;		_APP_DeviceAudioMIDIInitialize
  7126 ;; This function uses a non-reentrant model
  7127 ;;
  7128                           
  7129                           
  7130                           ;psect for function _USBEnableEndpoint
  7131  0A88                     _USBEnableEndpoint:	
  7132                           
  7133                           ;incstack = 0
  7134                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7135                           ;USBEnableEndpoint@ep stored from wreg
  7136  0A88  0020               	movlb	0	; select bank0
  7137  0A89  00D2               	movwf	USBEnableEndpoint@ep
  7138                           
  7139                           ;usb_device.c: 899: unsigned char* p;
  7140                           ;usb_device.c: 903: if(options & 0x04)
  7141  0A8A  1D78               	btfss	USBEnableEndpoint@options,2
  7142  0A8B  2A91               	goto	l3054
  7143                           
  7144                           ;usb_device.c: 904: {
  7145                           ;usb_device.c: 905: USBConfigureEndpoint(ep, 0);
  7146  0A8C  01F1               	clrf	USBConfigureEndpoint@direction
  7147  0A8D  0852               	movf	USBEnableEndpoint@ep,w
  7148  0A8E  318B  23BF  318A   	fcall	_USBConfigureEndpoint
  7149  0A91                     l3054:	
  7150                           
  7151                           ;usb_device.c: 906: }
  7152                           ;usb_device.c: 907: if(options & 0x02)
  7153  0A91  1CF8               	btfss	USBEnableEndpoint@options,1
  7154  0A92  2A99               	goto	l3058
  7155                           
  7156                           ;usb_device.c: 908: {
  7157                           ;usb_device.c: 909: USBConfigureEndpoint(ep, 1);
  7158  0A93  01F1               	clrf	USBConfigureEndpoint@direction
  7159  0A94  0AF1               	incf	USBConfigureEndpoint@direction,f
  7160  0A95  0020               	movlb	0	; select bank0
  7161  0A96  0852               	movf	USBEnableEndpoint@ep,w
  7162  0A97  318B  23BF         	fcall	_USBConfigureEndpoint
  7163  0A99                     l3058:	
  7164                           
  7165                           ;usb_device.c: 910: }
  7166                           ;usb_device.c: 918: p = (unsigned char*)(&UEP0+ep);
  7167  0A99  0020               	movlb	0	; select bank0
  7168  0A9A  0852               	movf	USBEnableEndpoint@ep,w
  7169  0A9B  3E98               	addlw	152
  7170  0A9C  00F9               	movwf	??_USBEnableEndpoint
  7171  0A9D  01FA               	clrf	??_USBEnableEndpoint+1
  7172  0A9E  300E               	movlw	14
  7173  0A9F  3DFA               	addwfc	??_USBEnableEndpoint+1,f
  7174  0AA0  0879               	movf	??_USBEnableEndpoint,w
  7175  0AA1  00D0               	movwf	USBEnableEndpoint@p
  7176  0AA2  087A               	movf	??_USBEnableEndpoint+1,w
  7177  0AA3  00D1               	movwf	USBEnableEndpoint@p+1
  7178                           
  7179                           ;usb_device.c: 920: *p = options;
  7180  0AA4  0850               	movf	USBEnableEndpoint@p,w
  7181  0AA5  0086               	movwf	6
  7182  0AA6  0851               	movf	USBEnableEndpoint@p+1,w
  7183  0AA7  0087               	movwf	7
  7184  0AA8  0878               	movf	USBEnableEndpoint@options,w
  7185  0AA9  0081               	movwf	1
  7186  0AAA  0008               	return
  7187  0AAB                     __end_of_USBEnableEndpoint:	
  7188                           
  7189                           	psect	text22
  7190  0BBF                     __ptext22:	
  7191 ;; *************** function _USBConfigureEndpoint *****************
  7192 ;; Defined at:
  7193 ;;		line 1562 in file "../framework/usb/usb_device.c"
  7194 ;; Parameters:    Size  Location     Type
  7195 ;;  EPNum           1    wreg     unsigned char 
  7196 ;;  direction       1    1[COMMON] unsigned char 
  7197 ;; Auto vars:     Size  Location     Type
  7198 ;;  EPNum           1    6[COMMON] unsigned char 
  7199 ;;  handle          1    7[COMMON] PTR volatile struct __BD
  7200 ;;		 -> BDT(32), 
  7201 ;; Return value:  Size  Location     Type
  7202 ;;		None               void
  7203 ;; Registers used:
  7204 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7205 ;; Tracked objects:
  7206 ;;		On entry : 0/0
  7207 ;;		On exit  : 0/0
  7208 ;;		Unchanged: 0/0
  7209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7210 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7211 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7212 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7213 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7214 ;;Total ram usage:        7 bytes
  7215 ;; Hardware stack levels used:    1
  7216 ;; Hardware stack levels required when called:    1
  7217 ;; This function calls:
  7218 ;;		Nothing
  7219 ;; This function is called by:
  7220 ;;		_USBEnableEndpoint
  7221 ;; This function uses a non-reentrant model
  7222 ;;
  7223                           
  7224                           
  7225                           ;psect for function _USBConfigureEndpoint
  7226  0BBF                     _USBConfigureEndpoint:	
  7227                           
  7228                           ;incstack = 0
  7229                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  7230                           ;USBConfigureEndpoint@EPNum stored from wreg
  7231  0BBF  00F6               	movwf	USBConfigureEndpoint@EPNum
  7232                           
  7233                           ;usb_device.c: 1564: volatile BDT_ENTRY* handle;
  7234                           ;usb_device.c: 1568: handle = (volatile BDT_ENTRY*)&BDT[0];
  7235  0BC0  3020               	movlw	32
  7236  0BC1  00F2               	movwf	??_USBConfigureEndpoint
  7237  0BC2  0872               	movf	??_USBConfigureEndpoint,w
  7238  0BC3  00F7               	movwf	USBConfigureEndpoint@handle
  7239                           
  7240                           ;usb_device.c: 1569: handle += (4*EPNum+2*direction+0u);
  7241  0BC4  0871               	movf	USBConfigureEndpoint@direction,w
  7242  0BC5  00F2               	movwf	??_USBConfigureEndpoint
  7243  0BC6  3001               	movlw	1
  7244  0BC7                     u2065:	
  7245  0BC7  35F2               	lslf	??_USBConfigureEndpoint,f
  7246  0BC8  0B89               	decfsz	9,f
  7247  0BC9  2BC7               	goto	u2065
  7248  0BCA  0876               	movf	USBConfigureEndpoint@EPNum,w
  7249  0BCB  00F3               	movwf	??_USBConfigureEndpoint+1
  7250  0BCC  3001               	movlw	1
  7251  0BCD                     u2075:	
  7252  0BCD  35F3               	lslf	??_USBConfigureEndpoint+1,f
  7253  0BCE  3EFF               	addlw	-1
  7254  0BCF  1D03               	skipz
  7255  0BD0  2BCD               	goto	u2075
  7256  0BD1  3573               	lslf	??_USBConfigureEndpoint+1,w
  7257  0BD2  0772               	addwf	??_USBConfigureEndpoint,w
  7258  0BD3  00F4               	movwf	??_USBConfigureEndpoint+2
  7259  0BD4  3001               	movlw	1
  7260  0BD5                     u2085:	
  7261  0BD5  35F4               	lslf	??_USBConfigureEndpoint+2,f
  7262  0BD6  3EFF               	addlw	-1
  7263  0BD7  1D03               	skipz
  7264  0BD8  2BD5               	goto	u2085
  7265  0BD9  3574               	lslf	??_USBConfigureEndpoint+2,w
  7266  0BDA  00F5               	movwf	??_USBConfigureEndpoint+3
  7267  0BDB  0875               	movf	??_USBConfigureEndpoint+3,w
  7268  0BDC  07F7               	addwf	USBConfigureEndpoint@handle,f
  7269                           
  7270                           ;usb_device.c: 1571: handle->STAT.UOWN = 0;
  7271  0BDD  0877               	movf	USBConfigureEndpoint@handle,w
  7272  0BDE  0086               	movwf	6
  7273  0BDF  0187               	clrf	7
  7274  0BE0  1381               	bcf	1,7
  7275                           
  7276                           ;usb_device.c: 1576: if(direction == 0)
  7277  0BE1  0871               	movf	USBConfigureEndpoint@direction,w
  7278  0BE2  1D03               	btfss	3,2
  7279  0BE3  2BEC               	goto	l3024
  7280                           
  7281                           ;usb_device.c: 1577: {
  7282                           ;usb_device.c: 1578: pBDTEntryOut[EPNum] = handle;
  7283  0BE4  0877               	movf	USBConfigureEndpoint@handle,w
  7284  0BE5  00F2               	movwf	??_USBConfigureEndpoint
  7285  0BE6  0876               	movf	USBConfigureEndpoint@EPNum,w
  7286  0BE7  3E58               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7287  0BE8  0086               	movwf	6
  7288  0BE9  3001               	movlw	1	; select bank2/3
  7289  0BEA  0087               	movwf	7
  7290  0BEB  2BF2               	goto	L8
  7291  0BEC                     l3024:	
  7292                           ;usb_device.c: 1579: }
  7293                           
  7294                           
  7295                           ;usb_device.c: 1580: else
  7296                           ;usb_device.c: 1581: {
  7297                           ;usb_device.c: 1582: pBDTEntryIn[EPNum] = handle;
  7298  0BEC  0877               	movf	USBConfigureEndpoint@handle,w
  7299  0BED  00F2               	movwf	??_USBConfigureEndpoint
  7300  0BEE  0876               	movf	USBConfigureEndpoint@EPNum,w
  7301  0BEF  3E69               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  7302  0BF0  0086               	movwf	6
  7303  0BF1  0187               	clrf	7
  7304  0BF2                     L8:	
  7305  0BF2  0872               	movf	??_USBConfigureEndpoint,w
  7306  0BF3  0081               	movwf	1
  7307                           
  7308                           ;usb_device.c: 1583: }
  7309                           ;usb_device.c: 1586: handle->STAT.DTS = 0;
  7310  0BF4  0877               	movf	USBConfigureEndpoint@handle,w
  7311  0BF5  0086               	movwf	6
  7312  0BF6  0187               	clrf	7
  7313  0BF7  1301               	bcf	1,6
  7314                           
  7315                           ;usb_device.c: 1587: (handle+1)->STAT.DTS = 1;
  7316  0BF8  0877               	movf	USBConfigureEndpoint@handle,w
  7317  0BF9  3E04               	addlw	4
  7318  0BFA  0086               	movwf	6
  7319  0BFB  0187               	clrf	7
  7320  0BFC  1701               	bsf	1,6
  7321  0BFD  0008               	return
  7322  0BFE                     __end_of_USBConfigureEndpoint:	
  7323                           
  7324                           	psect	text23
  7325  0B27                     __ptext23:	
  7326 ;; *************** function _USBCtrlTrfOutHandler *****************
  7327 ;; Defined at:
  7328 ;;		line 2563 in file "../framework/usb/usb_device.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;		None
  7331 ;; Auto vars:     Size  Location     Type
  7332 ;;		None
  7333 ;; Return value:  Size  Location     Type
  7334 ;;		None               void
  7335 ;; Registers used:
  7336 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7337 ;; Tracked objects:
  7338 ;;		On entry : 0/0
  7339 ;;		On exit  : 0/0
  7340 ;;		Unchanged: 0/0
  7341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7344 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7345 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7346 ;;Total ram usage:        2 bytes
  7347 ;; Hardware stack levels used:    1
  7348 ;; Hardware stack levels required when called:    3
  7349 ;; This function calls:
  7350 ;;		_USBCtrlTrfRxService
  7351 ;; This function is called by:
  7352 ;;		_USBCtrlEPService
  7353 ;; This function uses a non-reentrant model
  7354 ;;
  7355                           
  7356                           
  7357                           ;psect for function _USBCtrlTrfOutHandler
  7358  0B27                     _USBCtrlTrfOutHandler:	
  7359                           
  7360                           ;usb_device.c: 2565: if(controlTransferState == 2)
  7361                           
  7362                           ;incstack = 0
  7363                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7364  0B27  3002               	movlw	2
  7365  0B28  0021               	movlb	1	; select bank1
  7366  0B29  0669               	xorwf	_controlTransferState^(0+128),w
  7367  0B2A  1D03               	btfss	3,2
  7368  0B2B  2B2F               	goto	l3770
  7369                           
  7370                           ;usb_device.c: 2566: {
  7371                           ;usb_device.c: 2567: USBCtrlTrfRxService();
  7372  0B2C  3186  265B         	fcall	_USBCtrlTrfRxService
  7373                           
  7374                           ;usb_device.c: 2568: }
  7375  0B2E  0008               	return
  7376  0B2F                     l3770:	
  7377                           
  7378                           ;usb_device.c: 2569: else
  7379                           ;usb_device.c: 2570: {
  7380                           ;usb_device.c: 2573: controlTransferState = 0;
  7381  0B2F  0021               	movlb	1	; select bank1
  7382  0B30  01E9               	clrf	_controlTransferState^(0+128)
  7383                           
  7384                           ;usb_device.c: 2580: if(BothEP0OutUOWNsSet == 0)
  7385  0B31  0022               	movlb	2	; select bank2
  7386  0B32  085A               	movf	_BothEP0OutUOWNsSet^(0+256),w
  7387  0B33  1D03               	btfss	3,2
  7388  0B34  2B54               	goto	l3782
  7389                           
  7390                           ;usb_device.c: 2581: {
  7391                           ;usb_device.c: 2582: pBDTEntryEP0OutNext->CNT = 8;
  7392  0B35  3008               	movlw	8
  7393  0B36  00F7               	movwf	??_USBCtrlTrfOutHandler
  7394  0B37  0A7C               	incf	_pBDTEntryEP0OutNext,w
  7395  0B38  0086               	movwf	6
  7396  0B39  0187               	clrf	7
  7397  0B3A  0877               	movf	??_USBCtrlTrfOutHandler,w
  7398  0B3B  0081               	movwf	1
  7399                           
  7400                           ;usb_device.c: 2583: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7401  0B3C  3040               	movlw	64
  7402  0B3D  00F7               	movwf	??_USBCtrlTrfOutHandler
  7403  0B3E  3000               	movlw	0
  7404  0B3F  00F8               	movwf	??_USBCtrlTrfOutHandler+1
  7405  0B40  087C               	movf	_pBDTEntryEP0OutNext,w
  7406  0B41  3E02               	addlw	2
  7407  0B42  0086               	movwf	6
  7408  0B43  0187               	clrf	7
  7409  0B44  0877               	movf	??_USBCtrlTrfOutHandler,w
  7410  0B45  3FC0               	movwi [0]fsr1
  7411  0B46  0878               	movf	??_USBCtrlTrfOutHandler+1,w
  7412  0B47  3FC1               	movwi [1]fsr1
  7413                           
  7414                           ;usb_device.c: 2584: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7415  0B48  300C               	movlw	12
  7416  0B49  00F7               	movwf	??_USBCtrlTrfOutHandler
  7417  0B4A  087C               	movf	_pBDTEntryEP0OutNext,w
  7418  0B4B  0086               	movwf	6
  7419  0B4C  0187               	clrf	7
  7420  0B4D  0877               	movf	??_USBCtrlTrfOutHandler,w
  7421  0B4E  0081               	movwf	1
  7422                           
  7423                           ;usb_device.c: 2585: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7424  0B4F  087C               	movf	_pBDTEntryEP0OutNext,w
  7425  0B50  0086               	movwf	6
  7426  0B51  0187               	clrf	7
  7427  0B52  1781               	bsf	1,7
  7428                           
  7429                           ;usb_device.c: 2586: }
  7430  0B53  0008               	return
  7431  0B54                     l3782:	
  7432                           
  7433                           ;usb_device.c: 2587: else
  7434                           ;usb_device.c: 2588: {
  7435                           ;usb_device.c: 2589: BothEP0OutUOWNsSet = 0;
  7436  0B54  01DA               	clrf	_BothEP0OutUOWNsSet^(0+256)
  7437  0B55  0008               	return
  7438  0B56                     __end_of_USBCtrlTrfOutHandler:	
  7439                           
  7440                           	psect	text24
  7441  065B                     __ptext24:	
  7442 ;; *************** function _USBCtrlTrfRxService *****************
  7443 ;; Defined at:
  7444 ;;		line 1871 in file "../framework/usb/usb_device.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;		None
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;  byteToRead      1    6[COMMON] unsigned char 
  7449 ;;  i               1    5[COMMON] unsigned char 
  7450 ;; Return value:  Size  Location     Type
  7451 ;;		None               void
  7452 ;; Registers used:
  7453 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7454 ;; Tracked objects:
  7455 ;;		On entry : 0/0
  7456 ;;		On exit  : 0/0
  7457 ;;		Unchanged: 0/0
  7458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7460 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7461 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7462 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7463 ;;Total ram usage:        4 bytes
  7464 ;; Hardware stack levels used:    1
  7465 ;; Hardware stack levels required when called:    2
  7466 ;; This function calls:
  7467 ;;		_USBCtrlEPAllowStatusStage
  7468 ;; This function is called by:
  7469 ;;		_USBCtrlTrfOutHandler
  7470 ;; This function uses a non-reentrant model
  7471 ;;
  7472                           
  7473                           
  7474                           ;psect for function _USBCtrlTrfRxService
  7475  065B                     _USBCtrlTrfRxService:	
  7476                           
  7477                           ;usb_device.c: 1873: uint8_t byteToRead;
  7478                           ;usb_device.c: 1874: uint8_t i;
  7479                           ;usb_device.c: 1878: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  7480                           
  7481                           ;incstack = 0
  7482                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7483  065B  0020               	movlb	0	; select bank0
  7484  065C  086D               	movf	_pBDTEntryEP0OutCurrent,w
  7485  065D  0086               	movwf	6
  7486  065E  0187               	clrf	7
  7487  065F  3F41               	moviw [1]fsr1
  7488  0660  00F6               	movwf	USBCtrlTrfRxService@byteToRead
  7489                           
  7490                           ;usb_device.c: 1884: if(byteToRead > outPipes[0].wCount.Val)
  7491  0661  0876               	movf	USBCtrlTrfRxService@byteToRead,w
  7492  0662  00F3               	movwf	??_USBCtrlTrfRxService
  7493  0663  01F4               	clrf	??_USBCtrlTrfRxService+1
  7494  0664  0874               	movf	??_USBCtrlTrfRxService+1,w
  7495  0665  0022               	movlb	2	; select bank2
  7496  0666  024B               	subwf	((_outPipes+1)^(0+256)+3),w
  7497  0667  1D03               	skipz
  7498  0668  2E6B               	goto	u2925
  7499  0669  0873               	movf	??_USBCtrlTrfRxService,w
  7500  066A  024A               	subwf	(_outPipes^(0+256)+3),w
  7501  066B                     u2925:	
  7502  066B  1803               	skipnc
  7503  066C  2E71               	goto	l671
  7504                           
  7505                           ;usb_device.c: 1885: {
  7506                           ;usb_device.c: 1886: byteToRead = outPipes[0].wCount.Val;
  7507  066D  084A               	movf	(_outPipes^(0+256)+3),w
  7508  066E  00F3               	movwf	??_USBCtrlTrfRxService
  7509  066F  0873               	movf	??_USBCtrlTrfRxService,w
  7510  0670  00F6               	movwf	USBCtrlTrfRxService@byteToRead
  7511  0671                     l671:	
  7512                           
  7513                           ;usb_device.c: 1887: }
  7514                           ;usb_device.c: 1889: outPipes[0].wCount.Val -= byteToRead;
  7515  0671  0876               	movf	USBCtrlTrfRxService@byteToRead,w
  7516  0672  00F3               	movwf	??_USBCtrlTrfRxService
  7517  0673  01F4               	clrf	??_USBCtrlTrfRxService+1
  7518  0674  0873               	movf	??_USBCtrlTrfRxService,w
  7519  0675  02CA               	subwf	(_outPipes^(0+256)+3),f
  7520  0676  0874               	movf	??_USBCtrlTrfRxService+1,w
  7521  0677  3BCB               	subwfb	((_outPipes+1)^(0+256)+3),f
  7522                           
  7523                           ;usb_device.c: 1893: for(i=0;i<byteToRead;i++)
  7524  0678  01F5               	clrf	USBCtrlTrfRxService@i
  7525  0679                     l3584:	
  7526  0679  0876               	movf	USBCtrlTrfRxService@byteToRead,w
  7527  067A  0275               	subwf	USBCtrlTrfRxService@i,w
  7528  067B  1803               	btfsc	3,0
  7529  067C  2E91               	goto	l3586
  7530                           
  7531                           ;usb_device.c: 1894: {
  7532                           ;usb_device.c: 1895: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  7533  067D  0875               	movf	USBCtrlTrfRxService@i,w
  7534  067E  3E48               	addlw	72
  7535  067F  0086               	movwf	6
  7536  0680  0187               	clrf	7
  7537  0681  0801               	movf	1,w
  7538  0682  00F3               	movwf	??_USBCtrlTrfRxService
  7539  0683  0847               	movf	_outPipes^(0+256),w
  7540  0684  0086               	movwf	6
  7541  0685  0187               	clrf	7
  7542  0686  0873               	movf	??_USBCtrlTrfRxService,w
  7543  0687  0081               	movwf	1
  7544  0688  3001               	movlw	1
  7545  0689  00F3               	movwf	??_USBCtrlTrfRxService
  7546  068A  0873               	movf	??_USBCtrlTrfRxService,w
  7547  068B  07C7               	addwf	_outPipes^(0+256),f
  7548  068C  3001               	movlw	1
  7549  068D  00F3               	movwf	??_USBCtrlTrfRxService
  7550  068E  0873               	movf	??_USBCtrlTrfRxService,w
  7551  068F  07F5               	addwf	USBCtrlTrfRxService@i,f
  7552  0690  2E79               	goto	l3584
  7553  0691                     l3586:	
  7554                           
  7555                           ;usb_device.c: 1896: }
  7556                           ;usb_device.c: 1900: if(outPipes[0].wCount.Val > 0)
  7557  0691  084A               	movf	(_outPipes^(0+256)+3),w
  7558  0692  044B               	iorwf	((_outPipes+1)^(0+256)+3),w
  7559  0693  1903               	btfsc	3,2
  7560  0694  2EC6               	goto	l3598
  7561                           
  7562                           ;usb_device.c: 1901: {
  7563                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->CNT = 8;
  7564  0695  3008               	movlw	8
  7565  0696  00F3               	movwf	??_USBCtrlTrfRxService
  7566  0697  0A7C               	incf	_pBDTEntryEP0OutNext,w
  7567  0698  0086               	movwf	6
  7568  0699  0187               	clrf	7
  7569  069A  0873               	movf	??_USBCtrlTrfRxService,w
  7570  069B  0081               	movwf	1
  7571                           
  7572                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  7573  069C  3048               	movlw	72
  7574  069D  00F3               	movwf	??_USBCtrlTrfRxService
  7575  069E  3000               	movlw	0
  7576  069F  00F4               	movwf	??_USBCtrlTrfRxService+1
  7577  06A0  087C               	movf	_pBDTEntryEP0OutNext,w
  7578  06A1  3E02               	addlw	2
  7579  06A2  0086               	movwf	6
  7580  06A3  0187               	clrf	7
  7581  06A4  0873               	movf	??_USBCtrlTrfRxService,w
  7582  06A5  3FC0               	movwi [0]fsr1
  7583  06A6  0874               	movf	??_USBCtrlTrfRxService+1,w
  7584  06A7  3FC1               	movwi [1]fsr1
  7585                           
  7586                           ;usb_device.c: 1904: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  7587  06A8  0020               	movlb	0	; select bank0
  7588  06A9  086D               	movf	_pBDTEntryEP0OutCurrent,w
  7589  06AA  0086               	movwf	6
  7590  06AB  0187               	clrf	7
  7591  06AC  1B01               	btfsc	1,6
  7592  06AD  2EBA               	goto	l3596
  7593                           
  7594                           ;usb_device.c: 1905: {
  7595                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  7596  06AE  3048               	movlw	72
  7597  06AF  00F3               	movwf	??_USBCtrlTrfRxService
  7598  06B0  087C               	movf	_pBDTEntryEP0OutNext,w
  7599  06B1  0086               	movwf	6
  7600  06B2  0187               	clrf	7
  7601  06B3  0873               	movf	??_USBCtrlTrfRxService,w
  7602  06B4  0081               	movwf	1
  7603                           
  7604                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7605  06B5  087C               	movf	_pBDTEntryEP0OutNext,w
  7606  06B6  0086               	movwf	6
  7607  06B7  0187               	clrf	7
  7608  06B8  1781               	bsf	1,7
  7609                           
  7610                           ;usb_device.c: 1908: }
  7611  06B9  0008               	return
  7612  06BA                     l3596:	
  7613                           
  7614                           ;usb_device.c: 1909: else
  7615                           ;usb_device.c: 1910: {
  7616                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  7617  06BA  3008               	movlw	8
  7618  06BB  00F3               	movwf	??_USBCtrlTrfRxService
  7619  06BC  087C               	movf	_pBDTEntryEP0OutNext,w
  7620  06BD  0086               	movwf	6
  7621  06BE  0187               	clrf	7
  7622  06BF  0873               	movf	??_USBCtrlTrfRxService,w
  7623  06C0  0081               	movwf	1
  7624                           
  7625                           ;usb_device.c: 1912: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7626  06C1  087C               	movf	_pBDTEntryEP0OutNext,w
  7627  06C2  0086               	movwf	6
  7628  06C3  0187               	clrf	7
  7629  06C4  1781               	bsf	1,7
  7630                           
  7631                           ;usb_device.c: 1913: }
  7632                           ;usb_device.c: 1914: }
  7633  06C5  0008               	return
  7634  06C6                     l3598:	
  7635                           
  7636                           ;usb_device.c: 1915: else
  7637                           ;usb_device.c: 1916: {
  7638                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->CNT = 8;
  7639  06C6  3008               	movlw	8
  7640  06C7  00F3               	movwf	??_USBCtrlTrfRxService
  7641  06C8  0A7C               	incf	_pBDTEntryEP0OutNext,w
  7642  06C9  0086               	movwf	6
  7643  06CA  0187               	clrf	7
  7644  06CB  0873               	movf	??_USBCtrlTrfRxService,w
  7645  06CC  0081               	movwf	1
  7646                           
  7647                           ;usb_device.c: 1921: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7648  06CD  3040               	movlw	64
  7649  06CE  00F3               	movwf	??_USBCtrlTrfRxService
  7650  06CF  3000               	movlw	0
  7651  06D0  00F4               	movwf	??_USBCtrlTrfRxService+1
  7652  06D1  087C               	movf	_pBDTEntryEP0OutNext,w
  7653  06D2  3E02               	addlw	2
  7654  06D3  0086               	movwf	6
  7655  06D4  0187               	clrf	7
  7656  06D5  0873               	movf	??_USBCtrlTrfRxService,w
  7657  06D6  3FC0               	movwi [0]fsr1
  7658  06D7  0874               	movf	??_USBCtrlTrfRxService+1,w
  7659  06D8  3FC1               	movwi [1]fsr1
  7660                           
  7661                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  7662  06D9  3004               	movlw	4
  7663  06DA  00F3               	movwf	??_USBCtrlTrfRxService
  7664  06DB  087C               	movf	_pBDTEntryEP0OutNext,w
  7665  06DC  0086               	movwf	6
  7666  06DD  0187               	clrf	7
  7667  06DE  0873               	movf	??_USBCtrlTrfRxService,w
  7668  06DF  0081               	movwf	1
  7669                           
  7670                           ;usb_device.c: 1926: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7671  06E0  087C               	movf	_pBDTEntryEP0OutNext,w
  7672  06E1  0086               	movwf	6
  7673  06E2  0187               	clrf	7
  7674  06E3  1781               	bsf	1,7
  7675                           
  7676                           ;usb_device.c: 1945: }
  7677                           ;usb_device.c: 1946: outPipes[0].info.bits.busy = 0;
  7678  06E4  0022               	movlb	2	; select bank2
  7679  06E5  13C9               	bcf	(_outPipes^(0+256)+2),7
  7680                           
  7681                           ;usb_device.c: 1960: if(USBDeferStatusStagePacket == 0)
  7682  06E6  0020               	movlb	0	; select bank0
  7683  06E7  086B               	movf	_USBDeferStatusStagePacket,w	;volatile
  7684  06E8  1D03               	btfss	3,2
  7685  06E9  0008               	return
  7686                           
  7687                           ;usb_device.c: 1961: {
  7688                           ;usb_device.c: 1962: USBCtrlEPAllowStatusStage();
  7689  06EA  318E  263A         	fcall	_USBCtrlEPAllowStatusStage
  7690  06EC  0008               	return
  7691  06ED                     __end_of_USBCtrlTrfRxService:	
  7692                           
  7693                           	psect	text25
  7694  0E3A                     __ptext25:	
  7695 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  7696 ;; Defined at:
  7697 ;;		line 1435 in file "../framework/usb/usb_device.c"
  7698 ;; Parameters:    Size  Location     Type
  7699 ;;		None
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;		None
  7702 ;; Return value:  Size  Location     Type
  7703 ;;		None               void
  7704 ;; Registers used:
  7705 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7706 ;; Tracked objects:
  7707 ;;		On entry : 0/0
  7708 ;;		On exit  : 0/0
  7709 ;;		Unchanged: 0/0
  7710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7713 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7715 ;;Total ram usage:        2 bytes
  7716 ;; Hardware stack levels used:    1
  7717 ;; Hardware stack levels required when called:    1
  7718 ;; This function calls:
  7719 ;;		Nothing
  7720 ;; This function is called by:
  7721 ;;		_USBDeviceTasks
  7722 ;;		_USBCtrlEPServiceComplete
  7723 ;;		_USBCtrlTrfRxService
  7724 ;; This function uses a non-reentrant model
  7725 ;;
  7726                           
  7727                           
  7728                           ;psect for function _USBCtrlEPAllowStatusStage
  7729  0E3A                     _USBCtrlEPAllowStatusStage:	
  7730                           
  7731                           ;usb_device.c: 1442: if(USBStatusStageEnabledFlag1 == 0)
  7732                           
  7733                           ;incstack = 0
  7734                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  7735  0E3A  0022               	movlb	2	; select bank2
  7736  0E3B  085F               	movf	_USBStatusStageEnabledFlag1^(0+256),w	;volatile
  7737  0E3C  1D03               	btfss	3,2
  7738  0E3D  0008               	return
  7739                           
  7740                           ;usb_device.c: 1443: {
  7741                           ;usb_device.c: 1444: USBStatusStageEnabledFlag1 = 1;
  7742  0E3E  3001               	movlw	1
  7743  0E3F  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7744  0E40  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7745  0E41  00DF               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  7746                           
  7747                           ;usb_device.c: 1445: if(USBStatusStageEnabledFlag2 == 0)
  7748  0E42  0860               	movf	_USBStatusStageEnabledFlag2^(0+256),w	;volatile
  7749  0E43  1D03               	btfss	3,2
  7750  0E44  0008               	return
  7751                           
  7752                           ;usb_device.c: 1446: {
  7753                           ;usb_device.c: 1447: USBStatusStageEnabledFlag2 = 1;
  7754  0E45  3001               	movlw	1
  7755  0E46  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7756  0E47  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7757  0E48  00E0               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  7758                           
  7759                           ;usb_device.c: 1451: if(controlTransferState == 2)
  7760  0E49  3002               	movlw	2
  7761  0E4A  0021               	movlb	1	; select bank1
  7762  0E4B  0669               	xorwf	_controlTransferState^(0+128),w
  7763  0E4C  1D03               	btfss	3,2
  7764  0E4D  2E5F               	goto	l3230
  7765                           
  7766                           ;usb_device.c: 1452: {
  7767                           ;usb_device.c: 1453: pBDTEntryIn[0]->CNT = 0;
  7768  0E4E  0020               	movlb	0	; select bank0
  7769  0E4F  0A69               	incf	_pBDTEntryIn,w
  7770  0E50  0086               	movwf	6
  7771  0E51  0187               	clrf	7
  7772  0E52  0181               	clrf	1
  7773                           
  7774                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  7775  0E53  3048               	movlw	72
  7776  0E54  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7777  0E55  0869               	movf	_pBDTEntryIn,w
  7778  0E56  0086               	movwf	6
  7779  0E57  0187               	clrf	7
  7780  0E58  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7781  0E59  0081               	movwf	1
  7782                           
  7783                           ;usb_device.c: 1455: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7784  0E5A  0869               	movf	_pBDTEntryIn,w
  7785  0E5B  0086               	movwf	6
  7786  0E5C  0187               	clrf	7
  7787  0E5D  1781               	bsf	1,7
  7788                           
  7789                           ;usb_device.c: 1456: }
  7790  0E5E  0008               	return
  7791  0E5F                     l3230:	
  7792                           
  7793                           ;usb_device.c: 1457: else if(controlTransferState == 1)
  7794  0E5F  0021               	movlb	1	; select bank1
  7795  0E60  0369               	decf	_controlTransferState^(0+128),w
  7796  0E61  1D03               	btfss	3,2
  7797  0E62  0008               	return
  7798                           
  7799                           ;usb_device.c: 1458: {
  7800                           ;usb_device.c: 1459: BothEP0OutUOWNsSet = 0;
  7801  0E63  0022               	movlb	2	; select bank2
  7802  0E64  01DA               	clrf	_BothEP0OutUOWNsSet^(0+256)
  7803                           
  7804                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->CNT = 8;
  7805  0E65  3008               	movlw	8
  7806  0E66  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7807  0E67  0020               	movlb	0	; select bank0
  7808  0E68  0A6D               	incf	_pBDTEntryEP0OutCurrent,w
  7809  0E69  0086               	movwf	6
  7810  0E6A  0187               	clrf	7
  7811  0E6B  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7812  0E6C  0081               	movwf	1
  7813                           
  7814                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7815  0E6D  3040               	movlw	64
  7816  0E6E  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7817  0E6F  3000               	movlw	0
  7818  0E70  00F2               	movwf	??_USBCtrlEPAllowStatusStage+1
  7819  0E71  086D               	movf	_pBDTEntryEP0OutCurrent,w
  7820  0E72  3E02               	addlw	2
  7821  0E73  0086               	movwf	6
  7822  0E74  0187               	clrf	7
  7823  0E75  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7824  0E76  3FC0               	movwi [0]fsr1
  7825  0E77  0872               	movf	??_USBCtrlEPAllowStatusStage+1,w
  7826  0E78  3FC1               	movwi [1]fsr1
  7827                           
  7828                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  7829  0E79  3004               	movlw	4
  7830  0E7A  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7831  0E7B  086D               	movf	_pBDTEntryEP0OutCurrent,w
  7832  0E7C  0086               	movwf	6
  7833  0E7D  0187               	clrf	7
  7834  0E7E  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7835  0E7F  0081               	movwf	1
  7836                           
  7837                           ;usb_device.c: 1467: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  7838  0E80  086D               	movf	_pBDTEntryEP0OutCurrent,w
  7839  0E81  0086               	movwf	6
  7840  0E82  0187               	clrf	7
  7841  0E83  1781               	bsf	1,7
  7842                           
  7843                           ;usb_device.c: 1468: BothEP0OutUOWNsSet = 1;
  7844  0E84  0022               	movlb	2	; select bank2
  7845  0E85  01DA               	clrf	_BothEP0OutUOWNsSet^(0+256)
  7846  0E86  0ADA               	incf	_BothEP0OutUOWNsSet^(0+256),f
  7847                           
  7848                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->CNT = 8;
  7849  0E87  3008               	movlw	8
  7850  0E88  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7851  0E89  0A7C               	incf	_pBDTEntryEP0OutNext,w
  7852  0E8A  0086               	movwf	6
  7853  0E8B  0187               	clrf	7
  7854  0E8C  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7855  0E8D  0081               	movwf	1
  7856                           
  7857                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7858  0E8E  3040               	movlw	64
  7859  0E8F  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7860  0E90  3000               	movlw	0
  7861  0E91  00F2               	movwf	??_USBCtrlEPAllowStatusStage+1
  7862  0E92  087C               	movf	_pBDTEntryEP0OutNext,w
  7863  0E93  3E02               	addlw	2
  7864  0E94  0086               	movwf	6
  7865  0E95  0187               	clrf	7
  7866  0E96  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7867  0E97  3FC0               	movwi [0]fsr1
  7868  0E98  0872               	movf	??_USBCtrlEPAllowStatusStage+1,w
  7869  0E99  3FC1               	movwi [1]fsr1
  7870                           
  7871                           ;usb_device.c: 1474: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  7872  0E9A  3080               	movlw	128
  7873  0E9B  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7874  0E9C  087C               	movf	_pBDTEntryEP0OutNext,w
  7875  0E9D  0086               	movwf	6
  7876  0E9E  0187               	clrf	7
  7877  0E9F  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7878  0EA0  0081               	movwf	1
  7879  0EA1  0008               	return
  7880  0EA2                     __end_of_USBCtrlEPAllowStatusStage:	
  7881                           
  7882                           	psect	text26
  7883  0DD3                     __ptext26:	
  7884 ;; *************** function _USBCtrlTrfInHandler *****************
  7885 ;; Defined at:
  7886 ;;		line 2617 in file "../framework/usb/usb_device.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;		None
  7889 ;; Auto vars:     Size  Location     Type
  7890 ;;  lastDTS         1    6[COMMON] unsigned char 
  7891 ;; Return value:  Size  Location     Type
  7892 ;;		None               void
  7893 ;; Registers used:
  7894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7895 ;; Tracked objects:
  7896 ;;		On entry : 0/0
  7897 ;;		On exit  : 0/0
  7898 ;;		Unchanged: 0/0
  7899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7902 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7903 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7904 ;;Total ram usage:        3 bytes
  7905 ;; Hardware stack levels used:    1
  7906 ;; Hardware stack levels required when called:    2
  7907 ;; This function calls:
  7908 ;;		_USBCtrlTrfTxService
  7909 ;; This function is called by:
  7910 ;;		_USBCtrlEPService
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           
  7915                           ;psect for function _USBCtrlTrfInHandler
  7916  0DD3                     _USBCtrlTrfInHandler:	
  7917                           
  7918                           ;usb_device.c: 2619: uint8_t lastDTS;
  7919                           ;usb_device.c: 2621: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  7920                           
  7921                           ;incstack = 0
  7922                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7923  0DD3  0020               	movlb	0	; select bank0
  7924  0DD4  0869               	movf	_pBDTEntryIn,w
  7925  0DD5  0086               	movwf	6
  7926  0DD6  0187               	clrf	7
  7927  0DD7  3000               	movlw	0
  7928  0DD8  1B01               	btfsc	1,6
  7929  0DD9  3001               	movlw	1
  7930  0DDA  00F6               	movwf	USBCtrlTrfInHandler@lastDTS
  7931                           
  7932                           ;usb_device.c: 2624: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  7933  0DDB  3004               	movlw	4
  7934  0DDC  00F4               	movwf	??_USBCtrlTrfInHandler
  7935  0DDD  0874               	movf	??_USBCtrlTrfInHandler,w
  7936  0DDE  06E9               	xorwf	_pBDTEntryIn,f
  7937                           
  7938                           ;usb_device.c: 2629: if(USBDeviceState == ADR_PENDING_STATE)
  7939  0DDF  3008               	movlw	8
  7940  0DE0  066C               	xorwf	_USBDeviceState,w
  7941  0DE1  1D03               	btfss	3,2
  7942  0DE2  2DF1               	goto	l3798
  7943                           
  7944                           ;usb_device.c: 2630: {
  7945                           ;usb_device.c: 2631: UADDR = (SetupPkt.bDevADR & 0x7F);
  7946  0DE3  0842               	movf	66,w	;volatile
  7947  0DE4  397F               	andlw	127
  7948  0DE5  003D               	movlb	29	; select bank29
  7949  0DE6  0096               	movwf	22	;volatile
  7950                           
  7951                           ;usb_device.c: 2632: if(UADDR != 0u)
  7952  0DE7  0816               	movf	22,w	;volatile
  7953  0DE8  1903               	btfsc	3,2
  7954  0DE9  2DEC               	goto	l3796
  7955                           
  7956                           ;usb_device.c: 2633: {
  7957                           ;usb_device.c: 2634: USBDeviceState=ADDRESS_STATE;
  7958  0DEA  3010               	movlw	16
  7959  0DEB  2DED               	goto	L9
  7960  0DEC                     l3796:	
  7961                           ;usb_device.c: 2635: }
  7962                           
  7963                           
  7964                           ;usb_device.c: 2636: else
  7965                           ;usb_device.c: 2637: {
  7966                           ;usb_device.c: 2638: USBDeviceState=DEFAULT_STATE;
  7967  0DEC  3004               	movlw	4
  7968  0DED                     L9:	
  7969  0DED  00F4               	movwf	??_USBCtrlTrfInHandler
  7970  0DEE  0874               	movf	??_USBCtrlTrfInHandler,w
  7971  0DEF  0020               	movlb	0	; select bank0
  7972  0DF0  00EC               	movwf	_USBDeviceState
  7973  0DF1                     l3798:	
  7974                           
  7975                           ;usb_device.c: 2639: }
  7976                           ;usb_device.c: 2640: }
  7977                           ;usb_device.c: 2643: if(controlTransferState == 1)
  7978  0DF1  0021               	movlb	1	; select bank1
  7979  0DF2  0369               	decf	_controlTransferState^(0+128),w
  7980  0DF3  1D03               	btfss	3,2
  7981  0DF4  2E34               	goto	l758
  7982                           
  7983                           ;usb_device.c: 2644: {
  7984                           ;usb_device.c: 2645: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  7985  0DF5  3048               	movlw	72
  7986  0DF6  00F4               	movwf	??_USBCtrlTrfInHandler
  7987  0DF7  3000               	movlw	0
  7988  0DF8  00F5               	movwf	??_USBCtrlTrfInHandler+1
  7989  0DF9  0020               	movlb	0	; select bank0
  7990  0DFA  0869               	movf	_pBDTEntryIn,w
  7991  0DFB  3E02               	addlw	2
  7992  0DFC  0086               	movwf	6
  7993  0DFD  0187               	clrf	7
  7994  0DFE  0874               	movf	??_USBCtrlTrfInHandler,w
  7995  0DFF  3FC0               	movwi [0]fsr1
  7996  0E00  0875               	movf	??_USBCtrlTrfInHandler+1,w
  7997  0E01  3FC1               	movwi [1]fsr1
  7998                           
  7999                           ;usb_device.c: 2646: USBCtrlTrfTxService();
  8000  0E02  318E  26A2  318D   	fcall	_USBCtrlTrfTxService
  8001                           
  8002                           ;usb_device.c: 2652: if(shortPacketStatus == 2)
  8003  0E05  3002               	movlw	2
  8004  0E06  0021               	movlb	1	; select bank1
  8005  0E07  066D               	xorwf	_shortPacketStatus^(0+128),w
  8006  0E08  1D03               	btfss	3,2
  8007  0E09  2E17               	goto	l3808
  8008                           
  8009                           ;usb_device.c: 2653: {
  8010                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val = 0x04;
  8011  0E0A  3004               	movlw	4
  8012  0E0B  00F4               	movwf	??_USBCtrlTrfInHandler
  8013  0E0C  0020               	movlb	0	; select bank0
  8014  0E0D  0869               	movf	_pBDTEntryIn,w
  8015  0E0E  0086               	movwf	6
  8016  0E0F  0187               	clrf	7
  8017  0E10  0874               	movf	??_USBCtrlTrfInHandler,w
  8018  0E11  0081               	movwf	1
  8019                           
  8020                           ;usb_device.c: 2657: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8021  0E12  0869               	movf	_pBDTEntryIn,w
  8022  0E13  0086               	movwf	6
  8023  0E14  0187               	clrf	7
  8024  0E15  1781               	bsf	1,7
  8025                           
  8026                           ;usb_device.c: 2658: }
  8027  0E16  0008               	return
  8028  0E17                     l3808:	
  8029                           
  8030                           ;usb_device.c: 2659: else
  8031                           ;usb_device.c: 2660: {
  8032                           ;usb_device.c: 2661: if(lastDTS == 0)
  8033  0E17  0876               	movf	USBCtrlTrfInHandler@lastDTS,w
  8034  0E18  1D03               	btfss	3,2
  8035  0E19  2E27               	goto	l3812
  8036                           
  8037                           ;usb_device.c: 2662: {
  8038                           ;usb_device.c: 2663: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8039  0E1A  3048               	movlw	72
  8040  0E1B  00F4               	movwf	??_USBCtrlTrfInHandler
  8041  0E1C  0020               	movlb	0	; select bank0
  8042  0E1D  0869               	movf	_pBDTEntryIn,w
  8043  0E1E  0086               	movwf	6
  8044  0E1F  0187               	clrf	7
  8045  0E20  0874               	movf	??_USBCtrlTrfInHandler,w
  8046  0E21  0081               	movwf	1
  8047                           
  8048                           ;usb_device.c: 2664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8049  0E22  0869               	movf	_pBDTEntryIn,w
  8050  0E23  0086               	movwf	6
  8051  0E24  0187               	clrf	7
  8052  0E25  1781               	bsf	1,7
  8053                           
  8054                           ;usb_device.c: 2665: }
  8055  0E26  0008               	return
  8056  0E27                     l3812:	
  8057                           
  8058                           ;usb_device.c: 2666: else
  8059                           ;usb_device.c: 2667: {
  8060                           ;usb_device.c: 2668: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  8061  0E27  3008               	movlw	8
  8062  0E28  00F4               	movwf	??_USBCtrlTrfInHandler
  8063  0E29  0020               	movlb	0	; select bank0
  8064  0E2A  0869               	movf	_pBDTEntryIn,w
  8065  0E2B  0086               	movwf	6
  8066  0E2C  0187               	clrf	7
  8067  0E2D  0874               	movf	??_USBCtrlTrfInHandler,w
  8068  0E2E  0081               	movwf	1
  8069                           
  8070                           ;usb_device.c: 2669: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8071  0E2F  0869               	movf	_pBDTEntryIn,w
  8072  0E30  0086               	movwf	6
  8073  0E31  0187               	clrf	7
  8074  0E32  1781               	bsf	1,7
  8075                           
  8076                           ;usb_device.c: 2670: }
  8077                           ;usb_device.c: 2671: }
  8078                           ;usb_device.c: 2672: }
  8079  0E33  0008               	return
  8080  0E34                     l758:	
  8081                           
  8082                           ;usb_device.c: 2673: else
  8083                           ;usb_device.c: 2674: {
  8084                           ;usb_device.c: 2678: if(outPipes[0].info.bits.busy == 1)
  8085  0E34  0022               	movlb	2	; select bank2
  8086  0E35  1BC9               	btfsc	(_outPipes^(0+256)+2),7
  8087                           
  8088                           ;usb_device.c: 2683: }
  8089                           ;usb_device.c: 2684: outPipes[0].info.bits.busy = 0;
  8090  0E36  13C9               	bcf	(_outPipes^(0+256)+2),7
  8091                           
  8092                           ;usb_device.c: 2685: }
  8093                           ;usb_device.c: 2687: controlTransferState = 0;
  8094  0E37  0021               	movlb	1	; select bank1
  8095  0E38  01E9               	clrf	_controlTransferState^(0+128)
  8096  0E39  0008               	return
  8097  0E3A                     __end_of_USBCtrlTrfInHandler:	
  8098                           
  8099                           	psect	text27
  8100  0EA2                     __ptext27:	
  8101 ;; *************** function _USBCtrlTrfTxService *****************
  8102 ;; Defined at:
  8103 ;;		line 1790 in file "../framework/usb/usb_device.c"
  8104 ;; Parameters:    Size  Location     Type
  8105 ;;		None
  8106 ;; Auto vars:     Size  Location     Type
  8107 ;;  byteToSend      1    3[COMMON] unsigned char 
  8108 ;; Return value:  Size  Location     Type
  8109 ;;		None               void
  8110 ;; Registers used:
  8111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8112 ;; Tracked objects:
  8113 ;;		On entry : 0/0
  8114 ;;		On exit  : 0/0
  8115 ;;		Unchanged: 0/0
  8116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8118 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8119 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8120 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8121 ;;Total ram usage:        3 bytes
  8122 ;; Hardware stack levels used:    1
  8123 ;; Hardware stack levels required when called:    1
  8124 ;; This function calls:
  8125 ;;		Nothing
  8126 ;; This function is called by:
  8127 ;;		_USBCtrlEPAllowDataStage
  8128 ;;		_USBCtrlTrfInHandler
  8129 ;; This function uses a non-reentrant model
  8130 ;;
  8131                           
  8132                           
  8133                           ;psect for function _USBCtrlTrfTxService
  8134  0EA2                     _USBCtrlTrfTxService:	
  8135                           
  8136                           ;usb_device.c: 1792: uint8_t byteToSend;
  8137                           ;usb_device.c: 1796: byteToSend = 8;
  8138                           
  8139                           ;incstack = 0
  8140                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  8141  0EA2  3008               	movlw	8
  8142  0EA3  00F1               	movwf	??_USBCtrlTrfTxService
  8143  0EA4  0871               	movf	??_USBCtrlTrfTxService,w
  8144  0EA5  00F3               	movwf	USBCtrlTrfTxService@byteToSend
  8145                           
  8146                           ;usb_device.c: 1797: if(inPipes[0].wCount.Val < (uint8_t)8)
  8147  0EA6  3000               	movlw	0
  8148  0EA7  0021               	movlb	1	; select bank1
  8149  0EA8  0264               	subwf	((_inPipes+1)^(0+128)+3),w
  8150  0EA9  3008               	movlw	8
  8151  0EAA  1903               	skipnz
  8152  0EAB  0263               	subwf	(_inPipes^(0+128)+3),w
  8153  0EAC  1803               	skipnc
  8154  0EAD  2EBF               	goto	l656
  8155                           
  8156                           ;usb_device.c: 1798: {
  8157                           ;usb_device.c: 1799: byteToSend = inPipes[0].wCount.Val;
  8158  0EAE  0863               	movf	(_inPipes^(0+128)+3),w
  8159  0EAF  00F1               	movwf	??_USBCtrlTrfTxService
  8160  0EB0  0871               	movf	??_USBCtrlTrfTxService,w
  8161  0EB1  00F3               	movwf	USBCtrlTrfTxService@byteToSend
  8162                           
  8163                           ;usb_device.c: 1806: if(shortPacketStatus == 0)
  8164  0EB2  086D               	movf	_shortPacketStatus^(0+128),w
  8165  0EB3  1D03               	btfss	3,2
  8166  0EB4  2EB8               	goto	l3174
  8167                           
  8168                           ;usb_device.c: 1807: {
  8169                           ;usb_device.c: 1808: shortPacketStatus = 1;
  8170  0EB5  01ED               	clrf	_shortPacketStatus^(0+128)
  8171  0EB6  0AED               	incf	_shortPacketStatus^(0+128),f
  8172                           
  8173                           ;usb_device.c: 1809: }
  8174  0EB7  2EBF               	goto	l656
  8175  0EB8                     l3174:	
  8176                           
  8177                           ;usb_device.c: 1810: else if(shortPacketStatus == 1)
  8178  0EB8  036D               	decf	_shortPacketStatus^(0+128),w
  8179  0EB9  1D03               	btfss	3,2
  8180  0EBA  2EBF               	goto	l656
  8181                           
  8182                           ;usb_device.c: 1811: {
  8183                           ;usb_device.c: 1812: shortPacketStatus = 2;
  8184  0EBB  3002               	movlw	2
  8185  0EBC  00F1               	movwf	??_USBCtrlTrfTxService
  8186  0EBD  0871               	movf	??_USBCtrlTrfTxService,w
  8187  0EBE  00ED               	movwf	_shortPacketStatus^(0+128)
  8188  0EBF                     l656:	
  8189                           
  8190                           ;usb_device.c: 1813: }
  8191                           ;usb_device.c: 1814: }
  8192                           ;usb_device.c: 1818: inPipes[0].wCount.Val -= byteToSend;
  8193  0EBF  0873               	movf	USBCtrlTrfTxService@byteToSend,w
  8194  0EC0  00F1               	movwf	??_USBCtrlTrfTxService
  8195  0EC1  01F2               	clrf	??_USBCtrlTrfTxService+1
  8196  0EC2  0871               	movf	??_USBCtrlTrfTxService,w
  8197  0EC3  02E3               	subwf	(_inPipes^(0+128)+3),f
  8198  0EC4  0872               	movf	??_USBCtrlTrfTxService+1,w
  8199  0EC5  3BE4               	subwfb	((_inPipes+1)^(0+128)+3),f
  8200                           
  8201                           ;usb_device.c: 1823: pBDTEntryIn[0]->CNT = byteToSend;
  8202  0EC6  0873               	movf	USBCtrlTrfTxService@byteToSend,w
  8203  0EC7  00F1               	movwf	??_USBCtrlTrfTxService
  8204  0EC8  0020               	movlb	0	; select bank0
  8205  0EC9  0A69               	incf	_pBDTEntryIn,w
  8206  0ECA  0086               	movwf	6
  8207  0ECB  0187               	clrf	7
  8208  0ECC  0871               	movf	??_USBCtrlTrfTxService,w
  8209  0ECD  0081               	movwf	1
  8210                           
  8211                           ;usb_device.c: 1827: pDst = ( uint8_t*)CtrlTrfData;
  8212  0ECE  3048               	movlw	72
  8213  0ECF  00F1               	movwf	??_USBCtrlTrfTxService
  8214  0ED0  0871               	movf	??_USBCtrlTrfTxService,w
  8215  0ED1  0022               	movlb	2	; select bank2
  8216  0ED2  00E4               	movwf	_pDst^(0+256)
  8217                           
  8218                           ;usb_device.c: 1828: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  8219  0ED3  0021               	movlb	1	; select bank1
  8220  0ED4  1C62               	btfss	(_inPipes^(0+128)+2),0
  8221  0ED5  2EF0               	goto	l3194
  8222  0ED6  2F0D               	goto	l3204
  8223  0ED7                     l3186:	
  8224                           ;usb_device.c: 1829: {
  8225                           ;usb_device.c: 1830: while(byteToSend)
  8226                           
  8227                           
  8228                           ;usb_device.c: 1831: {
  8229                           ;usb_device.c: 1832: *pDst++ = *inPipes[0].pSrc.bRom++;
  8230  0ED7  0021               	movlb	1	; select bank1
  8231  0ED8  0860               	movf	_inPipes^(0+128),w
  8232  0ED9  0084               	movwf	4
  8233  0EDA  0861               	movf	(_inPipes+1)^(0+128),w
  8234  0EDB  0085               	movwf	5
  8235  0EDC  0800               	movf	0,w	;code access
  8236  0EDD  00F1               	movwf	??_USBCtrlTrfTxService
  8237  0EDE  0022               	movlb	2	; select bank2
  8238  0EDF  0864               	movf	_pDst^(0+256),w
  8239  0EE0  0086               	movwf	6
  8240  0EE1  0187               	clrf	7
  8241  0EE2  0871               	movf	??_USBCtrlTrfTxService,w
  8242  0EE3  0081               	movwf	1
  8243  0EE4  3001               	movlw	1
  8244  0EE5  0021               	movlb	1	; select bank1
  8245  0EE6  07E0               	addwf	_inPipes^(0+128),f
  8246  0EE7  3000               	movlw	0
  8247  0EE8  3DE1               	addwfc	(_inPipes+1)^(0+128),f
  8248  0EE9  3001               	movlw	1
  8249  0EEA  00F1               	movwf	??_USBCtrlTrfTxService
  8250  0EEB  0871               	movf	??_USBCtrlTrfTxService,w
  8251  0EEC  0022               	movlb	2	; select bank2
  8252  0EED  07E4               	addwf	_pDst^(0+256),f
  8253                           
  8254                           ;usb_device.c: 1833: byteToSend--;
  8255  0EEE  3001               	movlw	1
  8256  0EEF  02F3               	subwf	USBCtrlTrfTxService@byteToSend,f
  8257  0EF0                     l3194:	
  8258  0EF0  0873               	movf	USBCtrlTrfTxService@byteToSend,w
  8259  0EF1  1903               	btfsc	3,2
  8260  0EF2  0008               	return
  8261  0EF3  2ED7               	goto	l3186
  8262  0EF4                     l3196:	
  8263                           ;usb_device.c: 1836: else
  8264                           ;usb_device.c: 1837: {
  8265                           ;usb_device.c: 1838: while(byteToSend)
  8266                           
  8267                           ;usb_device.c: 1834: }
  8268                           ;usb_device.c: 1835: }
  8269                           
  8270                           
  8271                           ;usb_device.c: 1839: {
  8272                           ;usb_device.c: 1840: *pDst++ = *inPipes[0].pSrc.bRam++;
  8273  0EF4  0021               	movlb	1	; select bank1
  8274  0EF5  0860               	movf	_inPipes^(0+128),w
  8275  0EF6  0084               	movwf	4
  8276  0EF7  0861               	movf	(_inPipes+1)^(0+128),w
  8277  0EF8  0085               	movwf	5
  8278  0EF9  0800               	movf	0,w	;code access
  8279  0EFA  00F1               	movwf	??_USBCtrlTrfTxService
  8280  0EFB  0022               	movlb	2	; select bank2
  8281  0EFC  0864               	movf	_pDst^(0+256),w
  8282  0EFD  0086               	movwf	6
  8283  0EFE  0187               	clrf	7
  8284  0EFF  0871               	movf	??_USBCtrlTrfTxService,w
  8285  0F00  0081               	movwf	1
  8286  0F01  3001               	movlw	1
  8287  0F02  0021               	movlb	1	; select bank1
  8288  0F03  07E0               	addwf	_inPipes^(0+128),f
  8289  0F04  3000               	movlw	0
  8290  0F05  3DE1               	addwfc	(_inPipes+1)^(0+128),f
  8291  0F06  3001               	movlw	1
  8292  0F07  00F1               	movwf	??_USBCtrlTrfTxService
  8293  0F08  0871               	movf	??_USBCtrlTrfTxService,w
  8294  0F09  0022               	movlb	2	; select bank2
  8295  0F0A  07E4               	addwf	_pDst^(0+256),f
  8296                           
  8297                           ;usb_device.c: 1841: byteToSend--;
  8298  0F0B  3001               	movlw	1
  8299  0F0C  02F3               	subwf	USBCtrlTrfTxService@byteToSend,f
  8300  0F0D                     l3204:	
  8301  0F0D  0873               	movf	USBCtrlTrfTxService@byteToSend,w
  8302  0F0E  1903               	btfsc	3,2
  8303  0F0F  0008               	return
  8304  0F10  2EF4               	goto	l3196
  8305  0F11                     __end_of_USBCtrlTrfTxService:	
  8306                           
  8307                           	psect	text28
  8308  09A2                     __ptext28:	
  8309 ;; *************** function _SYSTEM_Initialize *****************
  8310 ;; Defined at:
  8311 ;;		line 86 in file "../src/pic16f1459/system.c"
  8312 ;; Parameters:    Size  Location     Type
  8313 ;;  state           1    wreg     enum E2644
  8314 ;; Auto vars:     Size  Location     Type
  8315 ;;  state           1    2[COMMON] enum E2644
  8316 ;; Return value:  Size  Location     Type
  8317 ;;		None               void
  8318 ;; Registers used:
  8319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8326 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8328 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8329 ;;Total ram usage:        1 bytes
  8330 ;; Hardware stack levels used:    1
  8331 ;; Hardware stack levels required when called:    2
  8332 ;; This function calls:
  8333 ;;		_LED_Enable
  8334 ;; This function is called by:
  8335 ;;		_main
  8336 ;; This function uses a non-reentrant model
  8337 ;;
  8338                           
  8339                           
  8340                           ;psect for function _SYSTEM_Initialize
  8341  09A2                     _SYSTEM_Initialize:	
  8342                           
  8343                           ;incstack = 0
  8344                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8345                           ;SYSTEM_Initialize@state stored from wreg
  8346  09A2  00F2               	movwf	SYSTEM_Initialize@state
  8347                           
  8348                           ;system.c: 88: switch(state)
  8349  09A3  29AE               	goto	l4094
  8350  09A4                     l4088:	
  8351                           ;system.c: 89: {
  8352                           ;system.c: 90: case SYSTEM_STATE_USB_START:
  8353                           
  8354                           
  8355                           ;system.c: 94: OSCCON = 0xFC;
  8356  09A4  30FC               	movlw	252
  8357  09A5  0021               	movlb	1	; select bank1
  8358  09A6  0099               	movwf	25	;volatile
  8359                           
  8360                           ;system.c: 95: ACTCON = 0x90;
  8361  09A7  3090               	movlw	144
  8362  09A8  0027               	movlb	7	; select bank7
  8363  09A9  009B               	movwf	27	;volatile
  8364                           
  8365                           ;system.c: 97: LED_Enable(LED_D1);
  8366  09AA  3001               	movlw	1
  8367  09AB  318A  2204         	fcall	_LED_Enable
  8368                           
  8369                           ;system.c: 107: }
  8370                           
  8371                           ;system.c: 106: break;
  8372                           
  8373                           ;system.c: 105: case SYSTEM_STATE_USB_RESUME:
  8374                           
  8375                           ;system.c: 103: break;
  8376                           
  8377                           ;system.c: 102: case SYSTEM_STATE_USB_SUSPEND:
  8378                           
  8379                           ;system.c: 100: break;
  8380  09AD  0008               	return
  8381  09AE                     l4094:	
  8382  09AE  0872               	movf	SYSTEM_Initialize@state,w
  8383                           
  8384                           ; Switch size 1, requested type "space"
  8385                           ; Number of cases is 3, Range of values is 0 to 2
  8386                           ; switch strategies available:
  8387                           ; Name         Instructions Cycles
  8388                           ; simple_byte           10     6 (average)
  8389                           ; direct_byte           12     6 (fixed)
  8390                           ; jumptable            260     6 (fixed)
  8391                           ;	Chosen strategy is simple_byte
  8392  09AF  3A00               	xorlw	0	; case 0
  8393  09B0  1903               	skipnz
  8394  09B1  29A4               	goto	l4088
  8395  09B2  3A01               	xorlw	1	; case 1
  8396  09B3  1903               	skipnz
  8397  09B4  29B9               	goto	l14
  8398  09B5  3A03               	xorlw	3	; case 2
  8399  09B6  1903               	skipnz
  8400  09B7  29B9               	goto	l14
  8401  09B8  29B9               	goto	l14
  8402  09B9                     l14:	
  8403  09B9  0008               	return
  8404  09BA                     __end_of_SYSTEM_Initialize:	
  8405                           
  8406                           	psect	text29
  8407  0A04                     __ptext29:	
  8408 ;; *************** function _LED_Enable *****************
  8409 ;; Defined at:
  8410 ;;		line 220 in file "../bsp/pic16f1459/leds.c"
  8411 ;; Parameters:    Size  Location     Type
  8412 ;;  led             1    wreg     enum E2
  8413 ;; Auto vars:     Size  Location     Type
  8414 ;;  led             1    1[COMMON] enum E2
  8415 ;; Return value:  Size  Location     Type
  8416 ;;		None               void
  8417 ;; Registers used:
  8418 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8419 ;; Tracked objects:
  8420 ;;		On entry : 0/0
  8421 ;;		On exit  : 0/0
  8422 ;;		Unchanged: 0/0
  8423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8425 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8427 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8428 ;;Total ram usage:        1 bytes
  8429 ;; Hardware stack levels used:    1
  8430 ;; Hardware stack levels required when called:    1
  8431 ;; This function calls:
  8432 ;;		Nothing
  8433 ;; This function is called by:
  8434 ;;		_SYSTEM_Initialize
  8435 ;; This function uses a non-reentrant model
  8436 ;;
  8437                           
  8438                           
  8439                           ;psect for function _LED_Enable
  8440  0A04                     _LED_Enable:	
  8441                           
  8442                           ;incstack = 0
  8443                           ; Regs used in _LED_Enable: [wreg-fsr0h+status,2+status,0]
  8444                           ;LED_Enable@led stored from wreg
  8445  0A04  00F1               	movwf	LED_Enable@led
  8446                           
  8447                           ;leds.c: 222: switch(led)
  8448  0A05  2A12               	goto	l3842
  8449  0A06                     l397:	
  8450                           ;leds.c: 223: {
  8451                           ;leds.c: 224: case LED_D1:
  8452                           
  8453                           
  8454                           ;leds.c: 225: TRISCbits.TRISC2 = 0;
  8455  0A06  0021               	movlb	1	; select bank1
  8456  0A07  110E               	bcf	14,2	;volatile
  8457                           
  8458                           ;leds.c: 226: break;
  8459  0A08  0008               	return
  8460  0A09                     l399:	
  8461                           ;leds.c: 228: case LED_D2:
  8462                           
  8463                           
  8464                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  8465  0A09  0021               	movlb	1	; select bank1
  8466  0A0A  108E               	bcf	14,1	;volatile
  8467                           
  8468                           ;leds.c: 230: break;
  8469  0A0B  0008               	return
  8470  0A0C                     l400:	
  8471                           ;leds.c: 232: case LED_D3:
  8472                           
  8473                           
  8474                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  8475  0A0C  0021               	movlb	1	; select bank1
  8476  0A0D  110E               	bcf	14,2	;volatile
  8477                           
  8478                           ;leds.c: 234: break;
  8479  0A0E  0008               	return
  8480  0A0F                     l401:	
  8481                           ;leds.c: 236: case LED_D4:
  8482                           
  8483                           
  8484                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  8485  0A0F  0021               	movlb	1	; select bank1
  8486  0A10  118E               	bcf	14,3	;volatile
  8487                           
  8488                           ;leds.c: 242: }
  8489                           
  8490                           ;leds.c: 241: break;
  8491                           
  8492                           ;leds.c: 240: case LED_NONE:
  8493                           
  8494                           ;leds.c: 238: break;
  8495  0A11  0008               	return
  8496  0A12                     l3842:	
  8497  0A12  0871               	movf	LED_Enable@led,w
  8498                           
  8499                           ; Switch size 1, requested type "space"
  8500                           ; Number of cases is 5, Range of values is 0 to 4
  8501                           ; switch strategies available:
  8502                           ; Name         Instructions Cycles
  8503                           ; direct_byte           16     6 (fixed)
  8504                           ; simple_byte           16     9 (average)
  8505                           ; jumptable            260     6 (fixed)
  8506                           ;	Chosen strategy is direct_byte
  8507  0A13  0084               	movwf	4
  8508  0A14  3005               	movlw	5
  8509  0A15  0204               	subwf	4,w
  8510  0A16  1803               	skipnc
  8511  0A17  0008               	return
  8512  0A18  3188               	movlp	high S5090
  8513  0A19  3504               	lslf	4,w
  8514  0A1A  3E26               	addlw	low S5090
  8515  0A1B  0082               	movwf	2
  8516  0A1C                     l403:	
  8517  0A1C  0008               	return
  8518  0A1D                     __end_of_LED_Enable:	
  8519                           
  8520                           	psect	swtext2
  8521  0826                     __pswtext2:	
  8522  0826                     S5090:	
  8523  0826  318A  2A1C         	ljmp	l403
  8524  0828  318A  2A06         	ljmp	l397
  8525  082A  318A  2A09         	ljmp	l399
  8526  082C  318A  2A0C         	ljmp	l400
  8527  082E  318A  2A0F         	ljmp	l401
  8528                           
  8529                           	psect	text30
  8530  0926                     __ptext30:	
  8531 ;; *************** function _BLEDeviceInt *****************
  8532 ;; Defined at:
  8533 ;;		line 113 in file "../src/app_device_ble_midi.c"
  8534 ;; Parameters:    Size  Location     Type
  8535 ;;		None
  8536 ;; Auto vars:     Size  Location     Type
  8537 ;;		None
  8538 ;; Return value:  Size  Location     Type
  8539 ;;		None               void
  8540 ;; Registers used:
  8541 ;;		wreg, status,2, status,0, pclath, cstack
  8542 ;; Tracked objects:
  8543 ;;		On entry : 0/0
  8544 ;;		On exit  : 0/0
  8545 ;;		Unchanged: 0/0
  8546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8551 ;;Total ram usage:        0 bytes
  8552 ;; Hardware stack levels used:    1
  8553 ;; Hardware stack levels required when called:    2
  8554 ;; This function calls:
  8555 ;;		_PIN_MANAGER_Initialize
  8556 ;;		_SPI_Initialize
  8557 ;; This function is called by:
  8558 ;;		_main
  8559 ;; This function uses a non-reentrant model
  8560 ;;
  8561                           
  8562                           
  8563                           ;psect for function _BLEDeviceInt
  8564  0926                     _BLEDeviceInt:	
  8565                           
  8566                           ;app_device_ble_midi.c: 115: PIN_MANAGER_Initialize();
  8567                           
  8568                           ;incstack = 0
  8569                           ; Regs used in _BLEDeviceInt: [wreg+status,2+status,0+pclath+cstack]
  8570  0926  3189  2140  3189   	fcall	_PIN_MANAGER_Initialize
  8571                           
  8572                           ;app_device_ble_midi.c: 116: SPI_Initialize();
  8573  0929  3189  2120         	fcall	_SPI_Initialize
  8574  092B  0008               	return
  8575  092C                     __end_of_BLEDeviceInt:	
  8576                           
  8577                           	psect	text31
  8578  0920                     __ptext31:	
  8579 ;; *************** function _SPI_Initialize *****************
  8580 ;; Defined at:
  8581 ;;		line 64 in file "../src/spi.c"
  8582 ;; Parameters:    Size  Location     Type
  8583 ;;		None
  8584 ;; Auto vars:     Size  Location     Type
  8585 ;;		None
  8586 ;; Return value:  Size  Location     Type
  8587 ;;		None               void
  8588 ;; Registers used:
  8589 ;;		wreg, status,2
  8590 ;; Tracked objects:
  8591 ;;		On entry : 0/0
  8592 ;;		On exit  : 0/0
  8593 ;;		Unchanged: 0/0
  8594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8599 ;;Total ram usage:        0 bytes
  8600 ;; Hardware stack levels used:    1
  8601 ;; Hardware stack levels required when called:    1
  8602 ;; This function calls:
  8603 ;;		Nothing
  8604 ;; This function is called by:
  8605 ;;		_BLEDeviceInt
  8606 ;; This function uses a non-reentrant model
  8607 ;;
  8608                           
  8609                           
  8610                           ;psect for function _SPI_Initialize
  8611  0920                     _SPI_Initialize:	
  8612                           
  8613                           ;spi.c: 68: SSP1STAT = 0x00;
  8614                           
  8615                           ;incstack = 0
  8616                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  8617  0920  0024               	movlb	4	; select bank4
  8618  0921  0194               	clrf	20	;volatile
  8619                           
  8620                           ;spi.c: 71: SSP1CON1 = 0x35;
  8621  0922  3035               	movlw	53
  8622  0923  0095               	movwf	21	;volatile
  8623                           
  8624                           ;spi.c: 74: SSP1CON3 = 0x00;
  8625  0924  0197               	clrf	23	;volatile
  8626  0925  0008               	return
  8627  0926                     __end_of_SPI_Initialize:	
  8628                           
  8629                           	psect	text32
  8630  0940                     __ptext32:	
  8631 ;; *************** function _PIN_MANAGER_Initialize *****************
  8632 ;; Defined at:
  8633 ;;		line 50 in file "../src/pin_manager.c"
  8634 ;; Parameters:    Size  Location     Type
  8635 ;;		None
  8636 ;; Auto vars:     Size  Location     Type
  8637 ;;		None
  8638 ;; Return value:  Size  Location     Type
  8639 ;;		None               void
  8640 ;; Registers used:
  8641 ;;		None
  8642 ;; Tracked objects:
  8643 ;;		On entry : 0/0
  8644 ;;		On exit  : 0/0
  8645 ;;		Unchanged: 0/0
  8646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8651 ;;Total ram usage:        0 bytes
  8652 ;; Hardware stack levels used:    1
  8653 ;; Hardware stack levels required when called:    1
  8654 ;; This function calls:
  8655 ;;		Nothing
  8656 ;; This function is called by:
  8657 ;;		_BLEDeviceInt
  8658 ;; This function uses a non-reentrant model
  8659 ;;
  8660                           
  8661                           
  8662                           ;psect for function _PIN_MANAGER_Initialize
  8663  0940                     _PIN_MANAGER_Initialize:	
  8664                           
  8665                           ;incstack = 0
  8666                           ; Regs used in _PIN_MANAGER_Initialize: []
  8667                           ;pin_manager.c: 52: do { TRISBbits.TRISB4 = 1; } while(0);
  8668  0940  0021               	movlb	1	; select bank1
  8669  0941  160D               	bsf	13,4	;volatile
  8670                           
  8671                           ;pin_manager.c: 53: do { TRISBbits.TRISB5 = 1; } while(0);
  8672  0942  168D               	bsf	13,5	;volatile
  8673                           
  8674                           ;pin_manager.c: 54: do { TRISBbits.TRISB6 = 1; } while(0);
  8675  0943  170D               	bsf	13,6	;volatile
  8676                           
  8677                           ;pin_manager.c: 55: do { TRISBbits.TRISB7 = 0; } while(0);
  8678  0944  138D               	bcf	13,7	;volatile
  8679                           
  8680                           ;pin_manager.c: 56: do { TRISCbits.TRISC7 = 0; } while(0);
  8681  0945  138E               	bcf	14,7	;volatile
  8682  0946  0008               	return
  8683  0947                     __end_of_PIN_MANAGER_Initialize:	
  8684                           
  8685                           	psect	text33
  8686  023D                     __ptext33:	
  8687 ;; *************** function _APP_DeviceAudioMIDITasks *****************
  8688 ;; Defined at:
  8689 ;;		line 58 in file "../src/app_device_audio_midi.c"
  8690 ;; Parameters:    Size  Location     Type
  8691 ;;		None
  8692 ;; Auto vars:     Size  Location     Type
  8693 ;;  velocity        1   24[BANK0 ] unsigned char 
  8694 ;;  scan_pitch      1   23[BANK0 ] unsigned char 
  8695 ;; Return value:  Size  Location     Type
  8696 ;;		None               void
  8697 ;; Registers used:
  8698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8699 ;; Tracked objects:
  8700 ;;		On entry : 0/0
  8701 ;;		On exit  : 0/0
  8702 ;;		Unchanged: 0/0
  8703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8705 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8706 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8707 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8708 ;;Total ram usage:        8 bytes
  8709 ;; Hardware stack levels used:    1
  8710 ;; Hardware stack levels required when called:    5
  8711 ;; This function calls:
  8712 ;;		_SendMidiData
  8713 ;;		_USBTransferOnePacket
  8714 ;;		_scan_task
  8715 ;; This function is called by:
  8716 ;;		_main
  8717 ;; This function uses a non-reentrant model
  8718 ;;
  8719                           
  8720                           
  8721                           ;psect for function _APP_DeviceAudioMIDITasks
  8722  023D                     _APP_DeviceAudioMIDITasks:	
  8723                           
  8724                           ;app_device_audio_midi.c: 60: if( USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND)
  8725                           
  8726                           ;incstack = 0
  8727                           ; Regs used in _APP_DeviceAudioMIDITasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8728  023D  3020               	movlw	32
  8729  023E  0020               	movlb	0	; select bank0
  8730  023F  026C               	subwf	_USBDeviceState,w
  8731  0240  1C03               	skipc
  8732  0241  0008               	return
  8733  0242  003D               	movlb	29	; select bank29
  8734  0243  188E               	btfsc	14,1	;volatile
  8735  0244  0008               	return
  8736                           
  8737                           ;app_device_audio_midi.c: 63: if(!(USBRxHandle==0?0:((volatile BDT_ENTRY*)USBRxHandle)->
      +                          STAT.UOWN))
  8738                           
  8739                           ;app_device_audio_midi.c: 61: return;
  8740  0245  0021               	movlb	1	; select bank1
  8741  0246  0867               	movf	_USBRxHandle^(0+128),w
  8742  0247  1903               	btfsc	3,2
  8743  0248  2A57               	goto	l4226
  8744  0249  0867               	movf	_USBRxHandle^(0+128),w
  8745  024A  0086               	movwf	6
  8746  024B  0187               	clrf	7
  8747  024C  0D01               	rlf	1,w
  8748  024D  0D01               	rlf	1,w
  8749  024E  3901               	andlw	1
  8750  024F  0020               	movlb	0	; select bank0
  8751  0250  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8752  0251  01E2               	clrf	??_APP_DeviceAudioMIDITasks+1
  8753  0252  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8754  0253  00E3               	movwf	_APP_DeviceAudioMIDITasks$417
  8755  0254  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  8756  0255  00E4               	movwf	_APP_DeviceAudioMIDITasks$417+1
  8757  0256  2A5A               	goto	l4228
  8758  0257                     l4226:	
  8759  0257  0020               	movlb	0	; select bank0
  8760  0258  01E3               	clrf	_APP_DeviceAudioMIDITasks$417
  8761  0259  01E4               	clrf	_APP_DeviceAudioMIDITasks$417+1
  8762  025A                     l4228:	
  8763  025A  0863               	movf	_APP_DeviceAudioMIDITasks$417,w
  8764  025B  0464               	iorwf	_APP_DeviceAudioMIDITasks$417+1,w
  8765  025C  1D03               	btfss	3,2
  8766  025D  2A70               	goto	l4232
  8767                           
  8768                           ;app_device_audio_midi.c: 64: {
  8769                           ;app_device_audio_midi.c: 71: USBRxHandle = USBTransferOnePacket(1,0,(uint8_t*)&Received
      +                          DataBuffer,64);
  8770  025E  01F1               	clrf	USBTransferOnePacket@dir
  8771  025F  30A0               	movlw	160
  8772  0260  00F2               	movwf	USBTransferOnePacket@data
  8773  0261  3000               	movlw	0
  8774  0262  00F3               	movwf	USBTransferOnePacket@data+1
  8775  0263  3040               	movlw	64
  8776  0264  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8777  0265  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8778  0266  00F4               	movwf	USBTransferOnePacket@len
  8779  0267  3001               	movlw	1
  8780  0268  318C  24DA  3182   	fcall	_USBTransferOnePacket
  8781  026B  0020               	movlb	0	; select bank0
  8782  026C  00E2               	movwf	??_APP_DeviceAudioMIDITasks+1
  8783  026D  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  8784  026E  0021               	movlb	1	; select bank1
  8785  026F  00E7               	movwf	_USBRxHandle^(0+128)
  8786  0270                     l4232:	
  8787                           
  8788                           ;app_device_audio_midi.c: 72: }
  8789                           ;app_device_audio_midi.c: 74: {
  8790                           ;app_device_audio_midi.c: 75: uint8_t scan_pitch = 0x3C, velocity = 0;
  8791  0270  303C               	movlw	60
  8792  0271  0020               	movlb	0	; select bank0
  8793  0272  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8794  0273  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8795  0274  00E7               	movwf	APP_DeviceAudioMIDITasks@scan_pitch
  8796  0275  01E8               	clrf	APP_DeviceAudioMIDITasks@velocity
  8797                           
  8798                           ;app_device_audio_midi.c: 76: if (scan_task(&scan_pitch, &velocity)) {
  8799  0276  3068               	movlw	(low (APP_DeviceAudioMIDITasks@velocity| 0))& (0+255)
  8800  0277  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8801  0278  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8802  0279  00DB               	movwf	scan_task@velocity
  8803  027A  3067               	movlw	(low (APP_DeviceAudioMIDITasks@scan_pitch| 0))& (0+255)
  8804  027B  3185  2506  3182   	fcall	_scan_task
  8805  027E  3A00               	xorlw	0
  8806  027F  1903               	skipnz
  8807  0280  2AC1               	goto	l4248
  8808                           
  8809                           ;app_device_audio_midi.c: 77: midiData.Val = 0;
  8810  0281  3000               	movlw	0
  8811  0282  0023               	movlb	3	; select bank3
  8812  0283  00A3               	movwf	35
  8813  0284  3000               	movlw	0
  8814  0285  00A2               	movwf	34
  8815  0286  3000               	movlw	0
  8816  0287  00A1               	movwf	33
  8817  0288  3000               	movlw	0
  8818  0289  00A0               	movwf	32
  8819                           
  8820                           ;app_device_audio_midi.c: 78: midiData.CableNumber = 0;
  8821  028A  300F               	movlw	-241
  8822  028B  05A0               	andwf	32,f
  8823                           
  8824                           ;app_device_audio_midi.c: 79: midiData.CodeIndexNumber = 0x9;
  8825  028C  0820               	movf	32,w
  8826  028D  39F0               	andlw	-16
  8827  028E  3809               	iorlw	9
  8828  028F  00A0               	movwf	32
  8829                           
  8830                           ;app_device_audio_midi.c: 80: midiData.DATA_0 = 0x90;
  8831  0290  3090               	movlw	144
  8832  0291  0020               	movlb	0	; select bank0
  8833  0292  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8834  0293  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8835  0294  0023               	movlb	3	; select bank3
  8836  0295  00A1               	movwf	33
  8837                           
  8838                           ;app_device_audio_midi.c: 81: midiData.DATA_1 = scan_pitch;
  8839  0296  0020               	movlb	0	; select bank0
  8840  0297  0867               	movf	APP_DeviceAudioMIDITasks@scan_pitch,w
  8841  0298  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8842  0299  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8843  029A  0023               	movlb	3	; select bank3
  8844  029B  00A2               	movwf	34
  8845                           
  8846                           ;app_device_audio_midi.c: 82: midiData.DATA_2 = velocity;
  8847  029C  0020               	movlb	0	; select bank0
  8848  029D  0868               	movf	APP_DeviceAudioMIDITasks@velocity,w
  8849  029E  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8850  029F  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8851  02A0  0023               	movlb	3	; select bank3
  8852  02A1  00A3               	movwf	35
  8853                           
  8854                           ;app_device_audio_midi.c: 83: USBTxHandle = USBTransferOnePacket(1,1,(uint8_t*)&midiData
      +                          ,4);
  8855  02A2  01F1               	clrf	USBTransferOnePacket@dir
  8856  02A3  0AF1               	incf	USBTransferOnePacket@dir,f
  8857  02A4  30A0               	movlw	160
  8858  02A5  00F2               	movwf	USBTransferOnePacket@data
  8859  02A6  3001               	movlw	1
  8860  02A7  00F3               	movwf	USBTransferOnePacket@data+1
  8861  02A8  3004               	movlw	4
  8862  02A9  0020               	movlb	0	; select bank0
  8863  02AA  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8864  02AB  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8865  02AC  00F4               	movwf	USBTransferOnePacket@len
  8866  02AD  3001               	movlw	1
  8867  02AE  318C  24DA  3182   	fcall	_USBTransferOnePacket
  8868  02B1  0020               	movlb	0	; select bank0
  8869  02B2  00E2               	movwf	??_APP_DeviceAudioMIDITasks+1
  8870  02B3  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  8871  02B4  0021               	movlb	1	; select bank1
  8872  02B5  00E8               	movwf	_USBTxHandle^(0+128)
  8873                           
  8874                           ;app_device_audio_midi.c: 84: SendMidiData(midiData.DATA_1, midiData.DATA_2);
  8875  02B6  0023               	movlb	3	; select bank3
  8876  02B7  0823               	movf	35,w
  8877  02B8  0020               	movlb	0	; select bank0
  8878  02B9  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8879  02BA  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8880  02BB  00F4               	movwf	SendMidiData@velocity
  8881  02BC  0023               	movlb	3	; select bank3
  8882  02BD  0822               	movf	34,w
  8883  02BE  318A  22F9  3182   	fcall	_SendMidiData
  8884  02C1                     l4248:	
  8885                           
  8886                           ;app_device_audio_midi.c: 85: }
  8887                           ;app_device_audio_midi.c: 86: }
  8888                           ;app_device_audio_midi.c: 110: if (msCounter == 0 && !sentNoteOff && !(USBTxHandle==0?0:
      +                          ((volatile BDT_ENTRY*)USBTxHandle)->STAT.UOWN)) {
  8889  02C1  0021               	movlb	1	; select bank1
  8890  02C2  086B               	movf	_msCounter^(0+128),w
  8891  02C3  1D03               	btfss	3,2
  8892  02C4  0008               	return
  8893  02C5  0022               	movlb	2	; select bank2
  8894  02C6  0865               	movf	_sentNoteOff^(0+256),w
  8895  02C7  1D03               	btfss	3,2
  8896  02C8  0008               	return
  8897  02C9  0021               	movlb	1	; select bank1
  8898  02CA  0868               	movf	_USBTxHandle^(0+128),w
  8899  02CB  1903               	btfsc	3,2
  8900  02CC  2ADB               	goto	l4256
  8901  02CD  0868               	movf	_USBTxHandle^(0+128),w
  8902  02CE  0086               	movwf	6
  8903  02CF  0187               	clrf	7
  8904  02D0  0D01               	rlf	1,w
  8905  02D1  0D01               	rlf	1,w
  8906  02D2  3901               	andlw	1
  8907  02D3  0020               	movlb	0	; select bank0
  8908  02D4  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8909  02D5  01E2               	clrf	??_APP_DeviceAudioMIDITasks+1
  8910  02D6  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8911  02D7  00E5               	movwf	_APP_DeviceAudioMIDITasks$458
  8912  02D8  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  8913  02D9  00E6               	movwf	_APP_DeviceAudioMIDITasks$458+1
  8914  02DA  2ADE               	goto	l4258
  8915  02DB                     l4256:	
  8916  02DB  0020               	movlb	0	; select bank0
  8917  02DC  01E5               	clrf	_APP_DeviceAudioMIDITasks$458
  8918  02DD  01E6               	clrf	_APP_DeviceAudioMIDITasks$458+1
  8919  02DE                     l4258:	
  8920  02DE  0865               	movf	_APP_DeviceAudioMIDITasks$458,w
  8921  02DF  0466               	iorwf	_APP_DeviceAudioMIDITasks$458+1,w
  8922  02E0  1D03               	btfss	3,2
  8923  02E1  0008               	return
  8924                           
  8925                           ;app_device_audio_midi.c: 112: msCounter = 100;
  8926  02E2  3064               	movlw	100
  8927  02E3  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8928  02E4  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8929  02E5  0021               	movlb	1	; select bank1
  8930  02E6  00EB               	movwf	_msCounter^(0+128)
  8931                           
  8932                           ;app_device_audio_midi.c: 113: midiData.Val = 0;
  8933  02E7  3000               	movlw	0
  8934  02E8  0023               	movlb	3	; select bank3
  8935  02E9  00A3               	movwf	35
  8936  02EA  3000               	movlw	0
  8937  02EB  00A2               	movwf	34
  8938  02EC  3000               	movlw	0
  8939  02ED  00A1               	movwf	33
  8940  02EE  3000               	movlw	0
  8941  02EF  00A0               	movwf	32
  8942                           
  8943                           ;app_device_audio_midi.c: 115: midiData.CableNumber = 0;
  8944  02F0  300F               	movlw	-241
  8945  02F1  05A0               	andwf	32,f
  8946                           
  8947                           ;app_device_audio_midi.c: 116: midiData.CodeIndexNumber = 0x9;
  8948  02F2  0820               	movf	32,w
  8949  02F3  39F0               	andlw	-16
  8950  02F4  3809               	iorlw	9
  8951  02F5  00A0               	movwf	32
  8952                           
  8953                           ;app_device_audio_midi.c: 117: midiData.DATA_0 = 0x90;
  8954  02F6  3090               	movlw	144
  8955  02F7  0020               	movlb	0	; select bank0
  8956  02F8  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8957  02F9  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8958  02FA  0023               	movlb	3	; select bank3
  8959  02FB  00A1               	movwf	33
  8960                           
  8961                           ;app_device_audio_midi.c: 118: midiData.DATA_1 = pitch++;
  8962  02FC  0021               	movlb	1	; select bank1
  8963  02FD  086C               	movf	_pitch^(0+128),w
  8964  02FE  0020               	movlb	0	; select bank0
  8965  02FF  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8966  0300  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8967  0301  0023               	movlb	3	; select bank3
  8968  0302  00A2               	movwf	34
  8969  0303  3001               	movlw	1
  8970  0304  0020               	movlb	0	; select bank0
  8971  0305  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8972  0306  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8973  0307  0021               	movlb	1	; select bank1
  8974  0308  07EC               	addwf	_pitch^(0+128),f
  8975                           
  8976                           ;app_device_audio_midi.c: 119: midiData.DATA_2 = 0x00;
  8977  0309  0023               	movlb	3	; select bank3
  8978  030A  01A3               	clrf	35
  8979                           
  8980                           ;app_device_audio_midi.c: 121: if(pitch == 0x49)
  8981  030B  3049               	movlw	73
  8982  030C  0021               	movlb	1	; select bank1
  8983  030D  066C               	xorwf	_pitch^(0+128),w
  8984  030E  1D03               	btfss	3,2
  8985  030F  2B16               	goto	l4274
  8986                           
  8987                           ;app_device_audio_midi.c: 122: pitch = 0x3C;
  8988  0310  303C               	movlw	60
  8989  0311  0020               	movlb	0	; select bank0
  8990  0312  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8991  0313  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8992  0314  0021               	movlb	1	; select bank1
  8993  0315  00EC               	movwf	_pitch^(0+128)
  8994  0316                     l4274:	
  8995                           
  8996                           ;app_device_audio_midi.c: 123: USBTxHandle = USBTransferOnePacket(1,1,(uint8_t*)&midiDat
      +                          a,4);
  8997  0316  01F1               	clrf	USBTransferOnePacket@dir
  8998  0317  0AF1               	incf	USBTransferOnePacket@dir,f
  8999  0318  30A0               	movlw	160
  9000  0319  00F2               	movwf	USBTransferOnePacket@data
  9001  031A  3001               	movlw	1
  9002  031B  00F3               	movwf	USBTransferOnePacket@data+1
  9003  031C  3004               	movlw	4
  9004  031D  0020               	movlb	0	; select bank0
  9005  031E  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  9006  031F  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  9007  0320  00F4               	movwf	USBTransferOnePacket@len
  9008  0321  3001               	movlw	1
  9009  0322  318C  24DA  3182   	fcall	_USBTransferOnePacket
  9010  0325  0020               	movlb	0	; select bank0
  9011  0326  00E2               	movwf	??_APP_DeviceAudioMIDITasks+1
  9012  0327  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  9013  0328  0021               	movlb	1	; select bank1
  9014  0329  00E8               	movwf	_USBTxHandle^(0+128)
  9015                           
  9016                           ;app_device_audio_midi.c: 124: SendMidiData(midiData.DATA_1, midiData.DATA_2);
  9017  032A  0023               	movlb	3	; select bank3
  9018  032B  0823               	movf	35,w
  9019  032C  0020               	movlb	0	; select bank0
  9020  032D  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  9021  032E  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  9022  032F  00F4               	movwf	SendMidiData@velocity
  9023  0330  0023               	movlb	3	; select bank3
  9024  0331  0822               	movf	34,w
  9025  0332  318A  22F9         	fcall	_SendMidiData
  9026                           
  9027                           ;app_device_audio_midi.c: 125: sentNoteOff = 1;
  9028  0334  0022               	movlb	2	; select bank2
  9029  0335  01E5               	clrf	_sentNoteOff^(0+256)
  9030  0336  0AE5               	incf	_sentNoteOff^(0+256),f
  9031  0337  0008               	return
  9032  0338                     __end_of_APP_DeviceAudioMIDITasks:	
  9033                           
  9034                           	psect	text34
  9035  0506                     __ptext34:	
  9036 ;; *************** function _scan_task *****************
  9037 ;; Defined at:
  9038 ;;		line 212 in file "../src/scan.c"
  9039 ;; Parameters:    Size  Location     Type
  9040 ;;  note            1    wreg     PTR unsigned char 
  9041 ;;		 -> APP_DeviceAudioMIDITasks@scan_pitch(1), 
  9042 ;;  velocity        1   11[BANK0 ] PTR unsigned char 
  9043 ;;		 -> APP_DeviceAudioMIDITasks@velocity(1), 
  9044 ;; Auto vars:     Size  Location     Type
  9045 ;;  note            1   16[BANK0 ] PTR unsigned char 
  9046 ;;		 -> APP_DeviceAudioMIDITasks@scan_pitch(1), 
  9047 ;; Return value:  Size  Location     Type
  9048 ;;                  1    wreg      unsigned char 
  9049 ;; Registers used:
  9050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9051 ;; Tracked objects:
  9052 ;;		On entry : 0/0
  9053 ;;		On exit  : 0/0
  9054 ;;		Unchanged: 0/0
  9055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9056 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9057 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9058 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9059 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9060 ;;Total ram usage:        7 bytes
  9061 ;; Hardware stack levels used:    1
  9062 ;; Hardware stack levels required when called:    4
  9063 ;; This function calls:
  9064 ;;		_get_adc
  9065 ;;		_get_data
  9066 ;;		_is_adc_ready
  9067 ;;		_is_end_of_scan
  9068 ;;		_run_adc
  9069 ;;		_scan_init
  9070 ;;		_set_clock_and_data
  9071 ;;		_set_timer
  9072 ;;		_store_key_level
  9073 ;;		_waiting_for_timer
  9074 ;; This function is called by:
  9075 ;;		_APP_DeviceAudioMIDITasks
  9076 ;; This function uses a non-reentrant model
  9077 ;;
  9078                           
  9079                           
  9080                           ;psect for function _scan_task
  9081  0506                     _scan_task:	
  9082                           
  9083                           ;incstack = 0
  9084                           ; Regs used in _scan_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9085                           ;scan_task@note stored from wreg
  9086  0506  0020               	movlb	0	; select bank0
  9087  0507  00E0               	movwf	scan_task@note
  9088                           
  9089                           ;scan.c: 213: static uint8_t state = S_INIT;
  9090                           ;scan.c: 215: note_event.pitch = note_event.velocity = 0;
  9091  0508  0022               	movlb	2	; select bank2
  9092  0509  01D7               	clrf	(_note_event^(0+256)+1)
  9093  050A  01D6               	clrf	_note_event^(0+256)
  9094                           
  9095                           ;scan.c: 216: *note = *velocity = 0;
  9096  050B  0020               	movlb	0	; select bank0
  9097  050C  085B               	movf	scan_task@velocity,w
  9098  050D  0086               	movwf	6
  9099  050E  0187               	clrf	7
  9100  050F  0181               	clrf	1
  9101  0510  0860               	movf	scan_task@note,w
  9102  0511  0086               	movwf	6
  9103  0512  0187               	clrf	7
  9104  0513  0181               	clrf	1
  9105                           
  9106                           ;scan.c: 218: if (!is_initialized)
  9107  0514  0022               	movlb	2	; select bank2
  9108  0515  0863               	movf	_is_initialized^(0+256),w
  9109  0516  1D03               	btfss	3,2
  9110  0517  2D1B               	goto	l268
  9111                           
  9112                           ;scan.c: 219: scan_init();
  9113  0518  318A  226B  3185   	fcall	_scan_init
  9114  051B                     l268:	
  9115                           
  9116                           ;scan.c: 221: if (waiting_for_timer()) return 0;
  9117  051B  3189  2159  3185   	fcall	_waiting_for_timer
  9118  051E  3A00               	xorlw	0
  9119  051F  1903               	skipnz
  9120  0520  2D8E               	goto	l3970
  9121  0521  3000               	movlw	0
  9122  0522  0008               	return
  9123  0523                     l3938:	
  9124                           ;scan.c: 224: case(S_INIT):
  9125                           
  9126                           ;scan.c: 223: switch(state) {
  9127                           
  9128                           
  9129                           ;scan.c: 225: set_clock_and_data(0,1);
  9130  0523  01F1               	clrf	set_clock_and_data@d
  9131  0524  0AF1               	incf	set_clock_and_data@d,f
  9132  0525  3000               	movlw	0
  9133  0526  3189  2164  3185   	fcall	_set_clock_and_data
  9134                           
  9135                           ;scan.c: 226: state = S_GO;
  9136  0529  0022               	movlb	2	; select bank2
  9137  052A  01E8               	clrf	scan_task@state^(0+256)
  9138  052B  0AE8               	incf	scan_task@state^(0+256),f
  9139                           
  9140                           ;scan.c: 227: set_timer();
  9141  052C  3189  214E  3185   	fcall	_set_timer
  9142                           
  9143                           ;scan.c: 228: break;
  9144  052F  2D99               	goto	l3972
  9145  0530                     l3944:	
  9146                           ;scan.c: 230: case(S_GO):
  9147                           
  9148                           
  9149                           ;scan.c: 231: set_clock_and_data(0,1);
  9150  0530  01F1               	clrf	set_clock_and_data@d
  9151  0531  0AF1               	incf	set_clock_and_data@d,f
  9152  0532  3000               	movlw	0
  9153  0533  3189  2164  3185   	fcall	_set_clock_and_data
  9154                           
  9155                           ;scan.c: 232: state = S_CLOCK_RAISE;
  9156  0536  3002               	movlw	2
  9157  0537  00FB               	movwf	??_scan_task
  9158  0538  087B               	movf	??_scan_task,w
  9159  0539  0022               	movlb	2	; select bank2
  9160  053A  00E8               	movwf	scan_task@state^(0+256)
  9161                           
  9162                           ;scan.c: 233: set_timer();
  9163  053B  3189  214E  3185   	fcall	_set_timer
  9164                           
  9165                           ;scan.c: 234: break;
  9166  053E  2D99               	goto	l3972
  9167  053F                     l3948:	
  9168                           ;scan.c: 236: case(S_CLOCK_RAISE):
  9169                           
  9170                           
  9171                           ;scan.c: 237: set_clock_and_data(1, get_data());
  9172  053F  3189  2115  3185   	fcall	_get_data
  9173  0542  00FB               	movwf	??_scan_task
  9174  0543  087B               	movf	??_scan_task,w
  9175  0544  00F1               	movwf	set_clock_and_data@d
  9176  0545  3001               	movlw	1
  9177  0546  3189  2164  3185   	fcall	_set_clock_and_data
  9178                           
  9179                           ;scan.c: 238: state = S_CLOCK_FALL;
  9180  0549  3003               	movlw	3
  9181  054A  00FB               	movwf	??_scan_task
  9182  054B  087B               	movf	??_scan_task,w
  9183  054C  0022               	movlb	2	; select bank2
  9184  054D  00E8               	movwf	scan_task@state^(0+256)
  9185                           
  9186                           ;scan.c: 239: set_timer();
  9187  054E  3189  214E  3185   	fcall	_set_timer
  9188                           
  9189                           ;scan.c: 240: break;
  9190  0551  2D99               	goto	l3972
  9191  0552                     l3952:	
  9192                           ;scan.c: 242: case(S_CLOCK_FALL):
  9193                           
  9194                           
  9195                           ;scan.c: 243: set_clock_and_data(0,0);
  9196  0552  01F1               	clrf	set_clock_and_data@d
  9197  0553  3000               	movlw	0
  9198  0554  3189  2164  3185   	fcall	_set_clock_and_data
  9199                           
  9200                           ;scan.c: 244: run_adc();
  9201  0557  3189  2139  3185   	fcall	_run_adc
  9202                           
  9203                           ;scan.c: 245: state = S_ADC_WAIT;
  9204  055A  3004               	movlw	4
  9205  055B  00FB               	movwf	??_scan_task
  9206  055C  087B               	movf	??_scan_task,w
  9207  055D  0022               	movlb	2	; select bank2
  9208  055E  00E8               	movwf	scan_task@state^(0+256)
  9209                           
  9210                           ;scan.c: 246: set_timer();
  9211  055F  3189  214E  3185   	fcall	_set_timer
  9212                           
  9213                           ;scan.c: 247: break;
  9214  0562  2D99               	goto	l3972
  9215  0563                     l3956:	
  9216                           ;scan.c: 249: case(S_ADC_WAIT):
  9217                           
  9218                           
  9219                           ;scan.c: 250: state = (is_adc_ready()? S_ADC_READ : S_ADC_WAIT);
  9220  0563  3189  2132  3185   	fcall	_is_adc_ready
  9221  0566  3A00               	xorlw	0
  9222  0567  1D03               	skipz
  9223  0568  2D6B               	goto	l3960
  9224  0569  3004               	movlw	4
  9225  056A  2D6C               	goto	L10
  9226  056B                     l3960:	
  9227  056B  3005               	movlw	5
  9228  056C                     L10:	
  9229  056C  0020               	movlb	0	; select bank0
  9230  056D  00DC               	movwf	_scan_task$872
  9231  056E  3000               	movlw	0
  9232  056F  00DD               	movwf	_scan_task$872+1
  9233  0570  085C               	movf	_scan_task$872,w
  9234  0571  2D89               	goto	L11
  9235  0572                     l3962:	
  9236                           ;scan.c: 253: case(S_ADC_READ):
  9237                           
  9238                           ;scan.c: 251: break;
  9239                           
  9240                           
  9241                           ;scan.c: 254: state = (store_key_level(get_adc(), is_end_of_scan())? S_GO : S_CLOCK_RAIS
      +                          E);
  9242  0572  3189  2176  3185   	fcall	_is_end_of_scan
  9243  0575  00FB               	movwf	??_scan_task
  9244  0576  087B               	movf	??_scan_task,w
  9245  0577  00F7               	movwf	store_key_level@end_of_scan
  9246  0578  3189  210D  3185   	fcall	_get_adc
  9247  057B  318B  2356  3185   	fcall	_store_key_level
  9248  057E  3A00               	xorlw	0
  9249  057F  1D03               	skipz
  9250  0580  2D83               	goto	l3966
  9251  0581  3002               	movlw	2
  9252  0582  2D84               	goto	L12
  9253  0583                     l3966:	
  9254  0583  3001               	movlw	1
  9255  0584                     L12:	
  9256  0584  0020               	movlb	0	; select bank0
  9257  0585  00DE               	movwf	_scan_task$876
  9258  0586  3000               	movlw	0
  9259  0587  00DF               	movwf	_scan_task$876+1
  9260  0588  085E               	movf	_scan_task$876,w
  9261  0589                     L11:	
  9262  0589  00FB               	movwf	??_scan_task
  9263  058A  087B               	movf	??_scan_task,w
  9264  058B  0022               	movlb	2	; select bank2
  9265  058C  00E8               	movwf	scan_task@state^(0+256)
  9266                           
  9267                           ;scan.c: 256: }
  9268                           
  9269                           ;scan.c: 255: break;
  9270  058D  2D99               	goto	l3972
  9271  058E                     l3970:	
  9272  058E  0022               	movlb	2	; select bank2
  9273  058F  0868               	movf	scan_task@state^(0+256),w
  9274                           
  9275                           ; Switch size 1, requested type "space"
  9276                           ; Number of cases is 6, Range of values is 0 to 5
  9277                           ; switch strategies available:
  9278                           ; Name         Instructions Cycles
  9279                           ; direct_byte           18     6 (fixed)
  9280                           ; simple_byte           19    10 (average)
  9281                           ; jumptable            260     6 (fixed)
  9282                           ;	Chosen strategy is direct_byte
  9283  0590  0084               	movwf	4
  9284  0591  3006               	movlw	6
  9285  0592  0204               	subwf	4,w
  9286  0593  1803               	skipnc
  9287  0594  2D99               	goto	l3972
  9288  0595  3188               	movlp	high S5092
  9289  0596  3504               	lslf	4,w
  9290  0597  3E1A               	addlw	low S5092
  9291  0598  0082               	movwf	2
  9292  0599                     l3972:	
  9293                           
  9294                           ;scan.c: 258: *note = note_event.pitch;
  9295  0599  0022               	movlb	2	; select bank2
  9296  059A  0856               	movf	_note_event^(0+256),w
  9297  059B  00FB               	movwf	??_scan_task
  9298  059C  0020               	movlb	0	; select bank0
  9299  059D  0860               	movf	scan_task@note,w
  9300  059E  0086               	movwf	6
  9301  059F  0187               	clrf	7
  9302  05A0  087B               	movf	??_scan_task,w
  9303  05A1  0081               	movwf	1
  9304                           
  9305                           ;scan.c: 259: *velocity = note_event.velocity;
  9306  05A2  0022               	movlb	2	; select bank2
  9307  05A3  0857               	movf	(_note_event^(0+256)+1),w
  9308  05A4  00FB               	movwf	??_scan_task
  9309  05A5  0020               	movlb	0	; select bank0
  9310  05A6  085B               	movf	scan_task@velocity,w
  9311  05A7  0086               	movwf	6
  9312  05A8  0187               	clrf	7
  9313  05A9  087B               	movf	??_scan_task,w
  9314  05AA  0081               	movwf	1
  9315                           
  9316                           ;scan.c: 260: return !! note_event.pitch;
  9317  05AB  0022               	movlb	2	; select bank2
  9318  05AC  0856               	movf	_note_event^(0+256),w
  9319  05AD  1903               	btfsc	3,2
  9320  05AE  2DB1               	goto	u3320
  9321  05AF  3001               	movlw	1
  9322  05B0  0008               	return
  9323  05B1                     u3320:	
  9324  05B1  3000               	movlw	0
  9325  05B2  0008               	return
  9326  05B3                     __end_of_scan_task:	
  9327                           
  9328                           	psect	swtext3
  9329  081A                     __pswtext3:	
  9330  081A                     S5092:	
  9331  081A  3185  2D23         	ljmp	l3938
  9332  081C  3185  2D30         	ljmp	l3944
  9333  081E  3185  2D3F         	ljmp	l3948
  9334  0820  3185  2D52         	ljmp	l3952
  9335  0822  3185  2D63         	ljmp	l3956
  9336  0824  3185  2D72         	ljmp	l3962
  9337                           
  9338                           	psect	text35
  9339  0959                     __ptext35:	
  9340 ;; *************** function _waiting_for_timer *****************
  9341 ;; Defined at:
  9342 ;;		line 64 in file "../src/scan.c"
  9343 ;; Parameters:    Size  Location     Type
  9344 ;;		None
  9345 ;; Auto vars:     Size  Location     Type
  9346 ;;		None
  9347 ;; Return value:  Size  Location     Type
  9348 ;;                  1    wreg      unsigned char 
  9349 ;; Registers used:
  9350 ;;		wreg, status,2, status,0
  9351 ;; Tracked objects:
  9352 ;;		On entry : 0/0
  9353 ;;		On exit  : 0/0
  9354 ;;		Unchanged: 0/0
  9355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9357 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9359 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9360 ;;Total ram usage:        1 bytes
  9361 ;; Hardware stack levels used:    1
  9362 ;; Hardware stack levels required when called:    1
  9363 ;; This function calls:
  9364 ;;		Nothing
  9365 ;; This function is called by:
  9366 ;;		_scan_task
  9367 ;; This function uses a non-reentrant model
  9368 ;;
  9369                           
  9370                           
  9371                           ;psect for function _waiting_for_timer
  9372  0959                     _waiting_for_timer:	
  9373                           
  9374                           ;scan.c: 65: return (wait_timer = wait_timer && !INTCONbits.TMR0IF);
  9375                           
  9376                           ;incstack = 0
  9377                           ; Regs used in _waiting_for_timer: [wreg+status,2+status,0]
  9378  0959  01F1               	clrf	_waiting_for_timer$816
  9379  095A  0022               	movlb	2	; select bank2
  9380  095B  0866               	movf	_wait_timer^(0+256),w
  9381  095C  1D03               	btfss	3,2
  9382  095D  190B               	btfsc	11,2	;volatile
  9383  095E  2961               	goto	l3692
  9384  095F  01F1               	clrf	_waiting_for_timer$816
  9385  0960  0AF1               	incf	_waiting_for_timer$816,f
  9386  0961                     l3692:	
  9387  0961  0871               	movf	_waiting_for_timer$816,w
  9388  0962  00E6               	movwf	_wait_timer^(0+256)
  9389  0963  0008               	return
  9390  0964                     __end_of_waiting_for_timer:	
  9391                           
  9392                           	psect	text36
  9393  0B56                     __ptext36:	
  9394 ;; *************** function _store_key_level *****************
  9395 ;; Defined at:
  9396 ;;		line 194 in file "../src/scan.c"
  9397 ;; Parameters:    Size  Location     Type
  9398 ;;  level           1    wreg     unsigned char 
  9399 ;;  end_of_scan     1    7[COMMON] unsigned char 
  9400 ;; Auto vars:     Size  Location     Type
  9401 ;;  level           1   10[COMMON] unsigned char 
  9402 ;; Return value:  Size  Location     Type
  9403 ;;                  1    wreg      unsigned char 
  9404 ;; Registers used:
  9405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9406 ;; Tracked objects:
  9407 ;;		On entry : 0/0
  9408 ;;		On exit  : 0/0
  9409 ;;		Unchanged: 0/0
  9410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9411 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9412 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9413 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9414 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9415 ;;Total ram usage:        4 bytes
  9416 ;; Hardware stack levels used:    1
  9417 ;; Hardware stack levels required when called:    3
  9418 ;; This function calls:
  9419 ;;		_process_level
  9420 ;; This function is called by:
  9421 ;;		_scan_task
  9422 ;; This function uses a non-reentrant model
  9423 ;;
  9424                           
  9425                           
  9426                           ;psect for function _store_key_level
  9427  0B56                     _store_key_level:	
  9428                           
  9429                           ;incstack = 0
  9430                           ; Regs used in _store_key_level: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9431                           ;store_key_level@level stored from wreg
  9432  0B56  00FA               	movwf	store_key_level@level
  9433                           
  9434                           ;scan.c: 195: static uint8_t idx_key = 0;
  9435                           ;scan.c: 196: process_level(idx_key, adc_levels[idx_key], level);
  9436  0B57  0020               	movlb	0	; select bank0
  9437  0B58  086E               	movf	store_key_level@idx_key,w
  9438  0B59  3E20               	addlw	(low (_adc_levels| (0+512)))& (0+255)
  9439  0B5A  0086               	movwf	6
  9440  0B5B  3002               	movlw	2	; select bank4/5
  9441  0B5C  0087               	movwf	7
  9442  0B5D  0801               	movf	1,w
  9443  0B5E  00F8               	movwf	??_store_key_level
  9444  0B5F  0878               	movf	??_store_key_level,w
  9445  0B60  00F2               	movwf	process_level@old_level
  9446  0B61  087A               	movf	store_key_level@level,w
  9447  0B62  00F9               	movwf	??_store_key_level+1
  9448  0B63  0879               	movf	??_store_key_level+1,w
  9449  0B64  00F3               	movwf	process_level@new_level
  9450  0B65  086E               	movf	store_key_level@idx_key,w
  9451  0B66  3184  2427  318B   	fcall	_process_level
  9452                           
  9453                           ;scan.c: 197: adc_levels[idx_key] = level;
  9454  0B69  087A               	movf	store_key_level@level,w
  9455  0B6A  00F8               	movwf	??_store_key_level
  9456  0B6B  0020               	movlb	0	; select bank0
  9457  0B6C  086E               	movf	store_key_level@idx_key,w
  9458  0B6D  3E20               	addlw	(low (_adc_levels| (0+512)))& (0+255)
  9459  0B6E  0086               	movwf	6
  9460  0B6F  3002               	movlw	2	; select bank4/5
  9461  0B70  0087               	movwf	7
  9462  0B71  0878               	movf	??_store_key_level,w
  9463  0B72  0081               	movwf	1
  9464                           
  9465                           ;scan.c: 198: idx_key ++;
  9466  0B73  3001               	movlw	1
  9467  0B74  00F8               	movwf	??_store_key_level
  9468  0B75  0878               	movf	??_store_key_level,w
  9469  0B76  07EE               	addwf	store_key_level@idx_key,f
  9470                           
  9471                           ;scan.c: 199: if (idx_key >= N_KEYS || end_of_scan) idx_key = 0;
  9472  0B77  3027               	movlw	39
  9473  0B78  026E               	subwf	store_key_level@idx_key,w
  9474  0B79  1803               	skipnc
  9475  0B7A  2B7E               	goto	l3734
  9476  0B7B  0877               	movf	store_key_level@end_of_scan,w
  9477  0B7C  1903               	btfsc	3,2
  9478  0B7D  2B7F               	goto	l3736
  9479  0B7E                     l3734:	
  9480  0B7E  01EE               	clrf	store_key_level@idx_key
  9481  0B7F                     l3736:	
  9482                           
  9483                           ;scan.c: 200: return idx_key == 0;
  9484  0B7F  086E               	movf	store_key_level@idx_key,w
  9485  0B80  1D03               	btfss	3,2
  9486  0B81  2B84               	goto	u3090
  9487  0B82  3001               	movlw	1
  9488  0B83  0008               	return
  9489  0B84                     u3090:	
  9490  0B84  3000               	movlw	0
  9491  0B85  0008               	return
  9492  0B86                     __end_of_store_key_level:	
  9493                           
  9494                           	psect	text37
  9495  0427                     __ptext37:	
  9496 ;; *************** function _process_level *****************
  9497 ;; Defined at:
  9498 ;;		line 145 in file "../src/scan.c"
  9499 ;; Parameters:    Size  Location     Type
  9500 ;;  idx_key         1    wreg     unsigned char 
  9501 ;;  old_level       1    2[COMMON] const unsigned char 
  9502 ;;  new_level       1    3[COMMON] const unsigned char 
  9503 ;; Auto vars:     Size  Location     Type
  9504 ;;  idx_key         1   10[BANK0 ] unsigned char 
  9505 ;;  filtered_sta    1    9[BANK0 ] unsigned char 
  9506 ;;  on_flag         1    8[BANK0 ] unsigned char 
  9507 ;;  off_flag        1    6[BANK0 ] unsigned char 
  9508 ;;  current_stat    2    2[BANK0 ] int 
  9509 ;;  old_state       2    0[BANK0 ] int 
  9510 ;; Return value:  Size  Location     Type
  9511 ;;		None               void
  9512 ;; Registers used:
  9513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9514 ;; Tracked objects:
  9515 ;;		On entry : 0/0
  9516 ;;		On exit  : 0/0
  9517 ;;		Unchanged: 0/0
  9518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9519 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9520 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9521 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9522 ;;      Totals:         5      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9523 ;;Total ram usage:       16 bytes
  9524 ;; Hardware stack levels used:    1
  9525 ;; Hardware stack levels required when called:    2
  9526 ;; This function calls:
  9527 ;;		_LED_Off
  9528 ;;		_LED_On
  9529 ;; This function is called by:
  9530 ;;		_store_key_level
  9531 ;; This function uses a non-reentrant model
  9532 ;;
  9533                           
  9534                           
  9535                           ;psect for function _process_level
  9536  0427                     _process_level:	
  9537                           
  9538                           ;incstack = 0
  9539                           ; Regs used in _process_level: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9540                           ;process_level@idx_key stored from wreg
  9541  0427  0020               	movlb	0	; select bank0
  9542  0428  00DA               	movwf	process_level@idx_key
  9543                           
  9544                           ;scan.c: 146: static const uint8_t L = 0x0A;
  9545                           ;scan.c: 147: static const uint8_t idx_midi_map[N_KEYS] = {
  9546                           ;scan.c: 148: 63, 24, 24, 24, 24, 71, 24, 24, 24, 24, 24,
  9547                           ;scan.c: 149: 24, 24, 68, 69, 70, 49, 50, 24, 24, 48, 65,
  9548                           ;scan.c: 150: 66, 67, 24, 24, 54, 56, 52, 59, 61, 64, 51,
  9549                           ;scan.c: 151: 53, 55, 57, 58, 60, 62
  9550                           ;scan.c: 152: };
  9551                           ;scan.c: 153: static bool key_states[N_KEYS] = {0, };
  9552                           ;scan.c: 154: static const uint8_t midi_shift = 0;
  9553                           ;scan.c: 155: static const uint8_t
  9554                           ;scan.c: 156: key_off_threshold = 5,
  9555                           ;scan.c: 157: key_on_threshold = 7;
  9556  0429  3070               	movlw	low (process_level@L| (0+32768))
  9557  042A  0084               	movwf	4
  9558  042B  3081               	movlw	high (process_level@L| (0+32768))
  9559  042C  0085               	movwf	5
  9560  042D  0800               	movf	0,w	;code access
  9561  042E  00F4               	movwf	??_process_level
  9562  042F  0872               	movf	process_level@old_level,w
  9563  0430  0274               	subwf	??_process_level,w
  9564  0431  1803               	btfsc	3,0
  9565  0432  2C35               	goto	u2670
  9566  0433  3001               	movlw	1
  9567  0434  2C36               	goto	u2680
  9568  0435                     u2670:	
  9569  0435  3000               	movlw	0
  9570  0436                     u2680:	
  9571  0436  00F5               	movwf	??_process_level+1
  9572  0437  01F6               	clrf	??_process_level+2
  9573  0438  0875               	movf	??_process_level+1,w
  9574  0439  00D0               	movwf	process_level@old_state
  9575  043A  0876               	movf	??_process_level+2,w
  9576  043B  00D1               	movwf	process_level@old_state+1
  9577                           
  9578                           ;scan.c: 163: int current_state = (new_level > L);
  9579  043C  3070               	movlw	low (process_level@L| (0+32768))
  9580  043D  0084               	movwf	4
  9581  043E  3081               	movlw	high (process_level@L| (0+32768))
  9582  043F  0085               	movwf	5
  9583  0440  0800               	movf	0,w	;code access
  9584  0441  00F4               	movwf	??_process_level
  9585  0442  0873               	movf	process_level@new_level,w
  9586  0443  0274               	subwf	??_process_level,w
  9587  0444  1803               	btfsc	3,0
  9588  0445  2C48               	goto	u2690
  9589  0446  3001               	movlw	1
  9590  0447  2C49               	goto	u2700
  9591  0448                     u2690:	
  9592  0448  3000               	movlw	0
  9593  0449                     u2700:	
  9594  0449  00F5               	movwf	??_process_level+1
  9595  044A  01F6               	clrf	??_process_level+2
  9596  044B  0875               	movf	??_process_level+1,w
  9597  044C  00D2               	movwf	process_level@current_state
  9598  044D  0876               	movf	??_process_level+2,w
  9599  044E  00D3               	movwf	process_level@current_state+1
  9600                           
  9601                           ;scan.c: 165: note_event.pitch = 0;
  9602  044F  0022               	movlb	2	; select bank2
  9603  0450  01D6               	clrf	_note_event^(0+256)
  9604                           
  9605                           ;scan.c: 166: note_event.velocity = 0;
  9606  0451  01D7               	clrf	(_note_event^(0+256)+1)
  9607                           
  9608                           ;scan.c: 168: if (current_state) {
  9609  0452  0020               	movlb	0	; select bank0
  9610  0453  0852               	movf	process_level@current_state,w
  9611  0454  0453               	iorwf	process_level@current_state+1,w
  9612  0455  1903               	btfsc	3,2
  9613  0456  2C64               	goto	l3474
  9614                           
  9615                           ;scan.c: 169: key_off_counter[idx_key] = 0;
  9616  0457  085A               	movf	process_level@idx_key,w
  9617  0458  3EA4               	addlw	(low (process_level@key_off_counter| (0+256)))& (0+255)
  9618  0459  0086               	movwf	6
  9619  045A  3001               	movlw	1	; select bank3/4
  9620  045B  0087               	movwf	7
  9621  045C  0181               	clrf	1
  9622                           
  9623                           ;scan.c: 170: key_on_counter [idx_key] ++;
  9624  045D  3001               	movlw	1
  9625  045E  00F4               	movwf	??_process_level
  9626  045F  085A               	movf	process_level@idx_key,w
  9627  0460  3E47               	addlw	(low (process_level@key_on_counter| (0+512)))& (0+255)
  9628  0461  0086               	movwf	6
  9629  0462  3002               	movlw	2	; select bank4/5
  9630  0463  2C70               	goto	L13
  9631  0464                     l3474:	
  9632                           ;scan.c: 171: }
  9633                           
  9634                           
  9635                           ;scan.c: 172: else {
  9636                           ;scan.c: 173: key_on_counter[idx_key] = 0;
  9637  0464  085A               	movf	process_level@idx_key,w
  9638  0465  3E47               	addlw	(low (process_level@key_on_counter| (0+512)))& (0+255)
  9639  0466  0086               	movwf	6
  9640  0467  3002               	movlw	2	; select bank4/5
  9641  0468  0087               	movwf	7
  9642  0469  0181               	clrf	1
  9643                           
  9644                           ;scan.c: 174: key_off_counter [idx_key] ++;
  9645  046A  3001               	movlw	1
  9646  046B  00F4               	movwf	??_process_level
  9647  046C  085A               	movf	process_level@idx_key,w
  9648  046D  3EA4               	addlw	(low (process_level@key_off_counter| (0+256)))& (0+255)
  9649  046E  0086               	movwf	6
  9650  046F  3001               	movlw	1	; select bank3/4
  9651  0470                     L13:	
  9652  0470  0087               	movwf	7
  9653  0471  0874               	movf	??_process_level,w
  9654  0472  0781               	addwf	1,f
  9655                           
  9656                           ;scan.c: 175: }
  9657                           ;scan.c: 177: {
  9658                           ;scan.c: 178: bool
  9659                           ;scan.c: 179: on_flag = key_on_counter [idx_key] >= key_on_threshold,
  9660  0473  085A               	movf	process_level@idx_key,w
  9661  0474  3E47               	addlw	(low (process_level@key_on_counter| (0+512)))& (0+255)
  9662  0475  0086               	movwf	6
  9663  0476  3002               	movlw	2	; select bank4/5
  9664  0477  0087               	movwf	7
  9665  0478  3072               	movlw	low (process_level@key_on_threshold| (0+32768))
  9666  0479  0084               	movwf	4
  9667  047A  3081               	movlw	high (process_level@key_on_threshold| (0+32768))
  9668  047B  0085               	movwf	5
  9669  047C  0800               	movf	0,w	;code access
  9670  047D  0201               	subwf	1,w
  9671  047E  1C03               	btfss	3,0
  9672  047F  2C82               	goto	u2720
  9673  0480  3001               	movlw	1
  9674  0481  2C83               	goto	u2730
  9675  0482                     u2720:	
  9676  0482  3000               	movlw	0
  9677  0483                     u2730:	
  9678  0483  00F4               	movwf	??_process_level
  9679  0484  0874               	movf	??_process_level,w
  9680  0485  00D8               	movwf	process_level@on_flag
  9681                           
  9682                           ;scan.c: 180: off_flag = key_off_counter[idx_key] >= key_off_threshold,
  9683  0486  085A               	movf	process_level@idx_key,w
  9684  0487  3EA4               	addlw	(low (process_level@key_off_counter| (0+256)))& (0+255)
  9685  0488  0086               	movwf	6
  9686  0489  3001               	movlw	1	; select bank3/4
  9687  048A  0087               	movwf	7
  9688  048B  3071               	movlw	low (process_level@key_off_threshold| (0+32768))
  9689  048C  0084               	movwf	4
  9690  048D  3081               	movlw	high (process_level@key_off_threshold| (0+32768))
  9691  048E  0085               	movwf	5
  9692  048F  0800               	movf	0,w	;code access
  9693  0490  0201               	subwf	1,w
  9694  0491  1C03               	btfss	3,0
  9695  0492  2C95               	goto	u2740
  9696  0493  3001               	movlw	1
  9697  0494  2C96               	goto	u2750
  9698  0495                     u2740:	
  9699  0495  3000               	movlw	0
  9700  0496                     u2750:	
  9701  0496  00F4               	movwf	??_process_level
  9702  0497  0874               	movf	??_process_level,w
  9703  0498  00D6               	movwf	process_level@off_flag
  9704                           
  9705                           ;scan.c: 181: filtered_state = on_flag || !on_flag && !off_flag && key_states[idx_key];
  9706  0499  01D7               	clrf	_process_level$853
  9707  049A  0AD7               	incf	_process_level$853,f
  9708  049B  0858               	movf	process_level@on_flag,w
  9709  049C  1D03               	btfss	3,2
  9710  049D  2CAC               	goto	l3492
  9711  049E  0858               	movf	process_level@on_flag,w
  9712  049F  1D03               	btfss	3,2
  9713  04A0  2CAB               	goto	l3490
  9714  04A1  0856               	movf	process_level@off_flag,w
  9715  04A2  1D03               	btfss	3,2
  9716  04A3  2CAB               	goto	l3490
  9717  04A4  085A               	movf	process_level@idx_key,w
  9718  04A5  3E20               	addlw	(low (process_level@key_states| (0+256)))& (0+255)
  9719  04A6  0086               	movwf	6
  9720  04A7  3001               	movlw	1	; select bank2/3
  9721  04A8  0087               	movwf	7
  9722  04A9  0801               	movf	1,w
  9723  04AA  1903               	btfsc	3,2
  9724  04AB                     l3490:	
  9725  04AB  01D7               	clrf	_process_level$853
  9726  04AC                     l3492:	
  9727  04AC  0857               	movf	_process_level$853,w
  9728  04AD  00F4               	movwf	??_process_level
  9729  04AE  0874               	movf	??_process_level,w
  9730  04AF  00D9               	movwf	process_level@filtered_state
  9731                           
  9732                           ;scan.c: 183: if (!key_states[idx_key] != !filtered_state) {
  9733  04B0  0859               	movf	process_level@filtered_state,w
  9734  04B1  1D03               	btfss	3,2
  9735  04B2  2CB5               	goto	u2800
  9736  04B3  3001               	movlw	1
  9737  04B4  2CB6               	goto	u2802
  9738  04B5                     u2800:	
  9739  04B5  3000               	movlw	0
  9740  04B6                     u2802:	
  9741  04B6  00F4               	movwf	??_process_level
  9742  04B7  085A               	movf	process_level@idx_key,w
  9743  04B8  3E20               	addlw	(low (process_level@key_states| (0+256)))& (0+255)
  9744  04B9  0086               	movwf	6
  9745  04BA  3001               	movlw	1	; select bank2/3
  9746  04BB  0087               	movwf	7
  9747  04BC  0801               	movf	1,w
  9748  04BD  1D03               	btfss	3,2
  9749  04BE  2CC1               	goto	u2810
  9750  04BF  3001               	movlw	1
  9751  04C0  2CC2               	goto	u2812
  9752  04C1                     u2810:	
  9753  04C1  3000               	movlw	0
  9754  04C2                     u2812:	
  9755  04C2  0674               	xorwf	??_process_level,w
  9756  04C3  1903               	skipnz
  9757  04C4  2CFB               	goto	l3512
  9758                           
  9759                           ;scan.c: 184: note_event.pitch = midi_shift + idx_midi_map[idx_key];
  9760  04C5  3073               	movlw	low (process_level@midi_shift| (0+32768))
  9761  04C6  0084               	movwf	4
  9762  04C7  3081               	movlw	high (process_level@midi_shift| (0+32768))
  9763  04C8  0085               	movwf	5
  9764  04C9  0800               	movf	0,w	;code access
  9765  04CA  00F4               	movwf	??_process_level
  9766  04CB  085A               	movf	process_level@idx_key,w
  9767  04CC  3E41               	addlw	low (process_level@idx_midi_map| (0+32768))
  9768  04CD  0084               	movwf	4
  9769  04CE  3081               	movlw	high (process_level@idx_midi_map| (0+32768))
  9770  04CF  1803               	skipnc
  9771  04D0  3E01               	addlw	1
  9772  04D1  0085               	movwf	5
  9773  04D2  0800               	movf	0,w	;code access
  9774  04D3  0774               	addwf	??_process_level,w
  9775  04D4  00F5               	movwf	??_process_level+1
  9776  04D5  0875               	movf	??_process_level+1,w
  9777  04D6  0022               	movlb	2	; select bank2
  9778  04D7  00D6               	movwf	_note_event^(0+256)
  9779                           
  9780                           ;scan.c: 185: note_event.velocity = (filtered_state? (new_level * 2 + 5): 0);
  9781  04D8  0020               	movlb	0	; select bank0
  9782  04D9  0859               	movf	process_level@filtered_state,w
  9783  04DA  1D03               	btfss	3,2
  9784  04DB  2CDF               	goto	l3502
  9785  04DC  01D4               	clrf	_process_level$854
  9786  04DD  01D5               	clrf	_process_level$854+1
  9787  04DE  2CEA               	goto	l3504
  9788  04DF                     l3502:	
  9789  04DF  0873               	movf	process_level@new_level,w
  9790  04E0  00F4               	movwf	??_process_level
  9791  04E1  01F5               	clrf	??_process_level+1
  9792  04E2  35F4               	lslf	??_process_level,f
  9793  04E3  0DF5               	rlf	??_process_level+1,f
  9794  04E4  0874               	movf	??_process_level,w
  9795  04E5  3E05               	addlw	5
  9796  04E6  00D4               	movwf	_process_level$854
  9797  04E7  3000               	movlw	0
  9798  04E8  3D75               	addwfc	??_process_level+1,w
  9799  04E9  00D5               	movwf	_process_level$854+1
  9800  04EA                     l3504:	
  9801  04EA  0854               	movf	_process_level$854,w
  9802  04EB  00F4               	movwf	??_process_level
  9803  04EC  0874               	movf	??_process_level,w
  9804  04ED  0022               	movlb	2	; select bank2
  9805  04EE  00D7               	movwf	(_note_event^(0+256)+1)
  9806                           
  9807                           ;scan.c: 186: if (filtered_state) LED_On(LED_D1);
  9808  04EF  0020               	movlb	0	; select bank0
  9809  04F0  0859               	movf	process_level@filtered_state,w
  9810  04F1  1903               	btfsc	3,2
  9811  04F2  2CF8               	goto	l3510
  9812  04F3  3001               	movlw	1
  9813  04F4  3189  21EB  3184   	fcall	_LED_On
  9814  04F7  2CFB               	goto	l3512
  9815  04F8                     l3510:	
  9816                           
  9817                           ;scan.c: 187: else LED_Off(LED_D1);
  9818  04F8  3001               	movlw	1
  9819  04F9  3189  21D2         	fcall	_LED_Off
  9820  04FB                     l3512:	
  9821                           
  9822                           ;scan.c: 188: }
  9823                           ;scan.c: 189: key_states[idx_key] = filtered_state;
  9824  04FB  0020               	movlb	0	; select bank0
  9825  04FC  0859               	movf	process_level@filtered_state,w
  9826  04FD  00F4               	movwf	??_process_level
  9827  04FE  085A               	movf	process_level@idx_key,w
  9828  04FF  3E20               	addlw	(low (process_level@key_states| (0+256)))& (0+255)
  9829  0500  0086               	movwf	6
  9830  0501  3001               	movlw	1	; select bank2/3
  9831  0502  0087               	movwf	7
  9832  0503  0874               	movf	??_process_level,w
  9833  0504  0081               	movwf	1
  9834  0505  0008               	return
  9835  0506                     __end_of_process_level:	
  9836                           
  9837                           	psect	text38
  9838  09EB                     __ptext38:	
  9839 ;; *************** function _LED_On *****************
  9840 ;; Defined at:
  9841 ;;		line 59 in file "../bsp/pic16f1459/leds.c"
  9842 ;; Parameters:    Size  Location     Type
  9843 ;;  led             1    wreg     enum E2
  9844 ;; Auto vars:     Size  Location     Type
  9845 ;;  led             1    1[COMMON] enum E2
  9846 ;; Return value:  Size  Location     Type
  9847 ;;		None               void
  9848 ;; Registers used:
  9849 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9850 ;; Tracked objects:
  9851 ;;		On entry : 0/0
  9852 ;;		On exit  : 0/0
  9853 ;;		Unchanged: 0/0
  9854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9856 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9858 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9859 ;;Total ram usage:        1 bytes
  9860 ;; Hardware stack levels used:    1
  9861 ;; Hardware stack levels required when called:    1
  9862 ;; This function calls:
  9863 ;;		Nothing
  9864 ;; This function is called by:
  9865 ;;		_APP_LEDUpdateUSBStatus
  9866 ;;		_process_level
  9867 ;; This function uses a non-reentrant model
  9868 ;;
  9869                           
  9870                           
  9871                           ;psect for function _LED_On
  9872  09EB                     _LED_On:	
  9873                           
  9874                           ;incstack = 0
  9875                           ; Regs used in _LED_On: [wreg-fsr0h+status,2+status,0]
  9876                           ;LED_On@led stored from wreg
  9877  09EB  00F1               	movwf	LED_On@led
  9878                           
  9879                           ;leds.c: 61: switch(led)
  9880  09EC  29F9               	goto	l3044
  9881  09ED                     l357:	
  9882                           ;leds.c: 62: {
  9883                           ;leds.c: 63: case LED_D1:
  9884                           
  9885                           
  9886                           ;leds.c: 64: LATCbits.LATC2 = 1;
  9887  09ED  0022               	movlb	2	; select bank2
  9888  09EE  150E               	bsf	14,2	;volatile
  9889                           
  9890                           ;leds.c: 65: break;
  9891  09EF  0008               	return
  9892  09F0                     l359:	
  9893                           ;leds.c: 67: case LED_D2:
  9894                           
  9895                           
  9896                           ;leds.c: 68: LATCbits.LATC1 = 1;
  9897  09F0  0022               	movlb	2	; select bank2
  9898  09F1  148E               	bsf	14,1	;volatile
  9899                           
  9900                           ;leds.c: 69: break;
  9901  09F2  0008               	return
  9902  09F3                     l360:	
  9903                           ;leds.c: 71: case LED_D3:
  9904                           
  9905                           
  9906                           ;leds.c: 72: LATCbits.LATC2 = 1;
  9907  09F3  0022               	movlb	2	; select bank2
  9908  09F4  150E               	bsf	14,2	;volatile
  9909                           
  9910                           ;leds.c: 73: break;
  9911  09F5  0008               	return
  9912  09F6                     l361:	
  9913                           ;leds.c: 75: case LED_D4:
  9914                           
  9915                           
  9916                           ;leds.c: 76: LATCbits.LATC3 = 1;
  9917  09F6  0022               	movlb	2	; select bank2
  9918  09F7  158E               	bsf	14,3	;volatile
  9919                           
  9920                           ;leds.c: 81: }
  9921                           
  9922                           ;leds.c: 80: break;
  9923                           
  9924                           ;leds.c: 79: case LED_NONE:
  9925                           
  9926                           ;leds.c: 77: break;
  9927  09F8  0008               	return
  9928  09F9                     l3044:	
  9929  09F9  0871               	movf	LED_On@led,w
  9930                           
  9931                           ; Switch size 1, requested type "space"
  9932                           ; Number of cases is 5, Range of values is 0 to 4
  9933                           ; switch strategies available:
  9934                           ; Name         Instructions Cycles
  9935                           ; direct_byte           16     6 (fixed)
  9936                           ; simple_byte           16     9 (average)
  9937                           ; jumptable            260     6 (fixed)
  9938                           ;	Chosen strategy is direct_byte
  9939  09FA  0084               	movwf	4
  9940  09FB  3005               	movlw	5
  9941  09FC  0204               	subwf	4,w
  9942  09FD  1803               	skipnc
  9943  09FE  0008               	return
  9944  09FF  3188               	movlp	high S5094
  9945  0A00  3504               	lslf	4,w
  9946  0A01  3E30               	addlw	low S5094
  9947  0A02  0082               	movwf	2
  9948  0A03                     l363:	
  9949  0A03  0008               	return
  9950  0A04                     __end_of_LED_On:	
  9951                           
  9952                           	psect	swtext4
  9953  0830                     __pswtext4:	
  9954  0830                     S5094:	
  9955  0830  318A  2A03         	ljmp	l363
  9956  0832  3189  29ED         	ljmp	l357
  9957  0834  3189  29F0         	ljmp	l359
  9958  0836  3189  29F3         	ljmp	l360
  9959  0838  3189  29F6         	ljmp	l361
  9960                           
  9961                           	psect	text39
  9962  09D2                     __ptext39:	
  9963 ;; *************** function _LED_Off *****************
  9964 ;; Defined at:
  9965 ;;		line 100 in file "../bsp/pic16f1459/leds.c"
  9966 ;; Parameters:    Size  Location     Type
  9967 ;;  led             1    wreg     enum E2
  9968 ;; Auto vars:     Size  Location     Type
  9969 ;;  led             1    1[COMMON] enum E2
  9970 ;; Return value:  Size  Location     Type
  9971 ;;		None               void
  9972 ;; Registers used:
  9973 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9974 ;; Tracked objects:
  9975 ;;		On entry : 0/0
  9976 ;;		On exit  : 0/0
  9977 ;;		Unchanged: 0/0
  9978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9980 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9982 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9983 ;;Total ram usage:        1 bytes
  9984 ;; Hardware stack levels used:    1
  9985 ;; Hardware stack levels required when called:    1
  9986 ;; This function calls:
  9987 ;;		Nothing
  9988 ;; This function is called by:
  9989 ;;		_APP_LEDUpdateUSBStatus
  9990 ;;		_process_level
  9991 ;; This function uses a non-reentrant model
  9992 ;;
  9993                           
  9994                           
  9995                           ;psect for function _LED_Off
  9996  09D2                     _LED_Off:	
  9997                           
  9998                           ;incstack = 0
  9999                           ; Regs used in _LED_Off: [wreg-fsr0h+status,2+status,0]
 10000                           ;LED_Off@led stored from wreg
 10001  09D2  00F1               	movwf	LED_Off@led
 10002                           
 10003                           ;leds.c: 102: switch(led)
 10004  09D3  29E0               	goto	l3034
 10005  09D4                     l367:	
 10006                           ;leds.c: 103: {
 10007                           ;leds.c: 104: case LED_D1:
 10008                           
 10009                           
 10010                           ;leds.c: 105: LATCbits.LATC2 = 0;
 10011  09D4  0022               	movlb	2	; select bank2
 10012  09D5  110E               	bcf	14,2	;volatile
 10013                           
 10014                           ;leds.c: 106: break;
 10015  09D6  0008               	return
 10016  09D7                     l369:	
 10017                           ;leds.c: 108: case LED_D2:
 10018                           
 10019                           
 10020                           ;leds.c: 109: LATCbits.LATC1 = 0;
 10021  09D7  0022               	movlb	2	; select bank2
 10022  09D8  108E               	bcf	14,1	;volatile
 10023                           
 10024                           ;leds.c: 110: break;
 10025  09D9  0008               	return
 10026  09DA                     l370:	
 10027                           ;leds.c: 112: case LED_D3:
 10028                           
 10029                           
 10030                           ;leds.c: 113: LATCbits.LATC2 = 0;
 10031  09DA  0022               	movlb	2	; select bank2
 10032  09DB  110E               	bcf	14,2	;volatile
 10033                           
 10034                           ;leds.c: 114: break;
 10035  09DC  0008               	return
 10036  09DD                     l371:	
 10037                           ;leds.c: 116: case LED_D4:
 10038                           
 10039                           
 10040                           ;leds.c: 117: LATCbits.LATC3 = 0;
 10041  09DD  0022               	movlb	2	; select bank2
 10042  09DE  118E               	bcf	14,3	;volatile
 10043                           
 10044                           ;leds.c: 122: }
 10045                           
 10046                           ;leds.c: 121: break;
 10047                           
 10048                           ;leds.c: 120: case LED_NONE:
 10049                           
 10050                           ;leds.c: 118: break;
 10051  09DF  0008               	return
 10052  09E0                     l3034:	
 10053  09E0  0871               	movf	LED_Off@led,w
 10054                           
 10055                           ; Switch size 1, requested type "space"
 10056                           ; Number of cases is 5, Range of values is 0 to 4
 10057                           ; switch strategies available:
 10058                           ; Name         Instructions Cycles
 10059                           ; direct_byte           16     6 (fixed)
 10060                           ; simple_byte           16     9 (average)
 10061                           ; jumptable            260     6 (fixed)
 10062                           ;	Chosen strategy is direct_byte
 10063  09E1  0084               	movwf	4
 10064  09E2  3005               	movlw	5
 10065  09E3  0204               	subwf	4,w
 10066  09E4  1803               	skipnc
 10067  09E5  0008               	return
 10068  09E6  3188               	movlp	high S5096
 10069  09E7  3504               	lslf	4,w
 10070  09E8  3E3A               	addlw	low S5096
 10071  09E9  0082               	movwf	2
 10072  09EA                     l373:	
 10073  09EA  0008               	return
 10074  09EB                     __end_of_LED_Off:	
 10075                           
 10076                           	psect	swtext5
 10077  083A                     __pswtext5:	
 10078  083A                     S5096:	
 10079  083A  3189  29EA         	ljmp	l373
 10080  083C  3189  29D4         	ljmp	l367
 10081  083E  3189  29D7         	ljmp	l369
 10082  0840  3189  29DA         	ljmp	l370
 10083  0842  3189  29DD         	ljmp	l371
 10084                           
 10085                           	psect	text40
 10086  094E                     __ptext40:	
 10087 ;; *************** function _set_timer *****************
 10088 ;; Defined at:
 10089 ;;		line 55 in file "../src/scan.c"
 10090 ;; Parameters:    Size  Location     Type
 10091 ;;		None
 10092 ;; Auto vars:     Size  Location     Type
 10093 ;;		None
 10094 ;; Return value:  Size  Location     Type
 10095 ;;		None               void
 10096 ;; Registers used:
 10097 ;;		status,2
 10098 ;; Tracked objects:
 10099 ;;		On entry : 0/0
 10100 ;;		On exit  : 0/0
 10101 ;;		Unchanged: 0/0
 10102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10107 ;;Total ram usage:        0 bytes
 10108 ;; Hardware stack levels used:    1
 10109 ;; Hardware stack levels required when called:    1
 10110 ;; This function calls:
 10111 ;;		Nothing
 10112 ;; This function is called by:
 10113 ;;		_scan_task
 10114 ;; This function uses a non-reentrant model
 10115 ;;
 10116                           
 10117                           
 10118                           ;psect for function _set_timer
 10119  094E                     _set_timer:	
 10120                           
 10121                           ;scan.c: 56: wait_timer = 1;
 10122                           
 10123                           ;incstack = 0
 10124                           ; Regs used in _set_timer: [status,2]
 10125  094E  0022               	movlb	2	; select bank2
 10126  094F  01E6               	clrf	_wait_timer^(0+256)
 10127  0950  0AE6               	incf	_wait_timer^(0+256),f
 10128                           
 10129                           ;scan.c: 57: OPTION_REGbits.TMR0CS = 0;
 10130  0951  0021               	movlb	1	; select bank1
 10131  0952  1295               	bcf	21,5	;volatile
 10132                           
 10133                           ;scan.c: 58: OPTION_REGbits.PSA = 1;
 10134  0953  1595               	bsf	21,3	;volatile
 10135                           
 10136                           ;scan.c: 59: INTCONbits.TMR0IE = 0;
 10137  0954  128B               	bcf	11,5	;volatile
 10138                           
 10139                           ;scan.c: 60: INTCONbits.TMR0IF = 0;
 10140  0955  110B               	bcf	11,2	;volatile
 10141                           
 10142                           ;scan.c: 61: TMR0 = 0;
 10143  0956  0020               	movlb	0	; select bank0
 10144  0957  0195               	clrf	21	;volatile
 10145  0958  0008               	return
 10146  0959                     __end_of_set_timer:	
 10147                           
 10148                           	psect	text41
 10149  0964                     __ptext41:	
 10150 ;; *************** function _set_clock_and_data *****************
 10151 ;; Defined at:
 10152 ;;		line 68 in file "../src/scan.c"
 10153 ;; Parameters:    Size  Location     Type
 10154 ;;  c               1    wreg     const unsigned char 
 10155 ;;  d               1    1[COMMON] const unsigned char 
 10156 ;; Auto vars:     Size  Location     Type
 10157 ;;  c               1    2[COMMON] const unsigned char 
 10158 ;; Return value:  Size  Location     Type
 10159 ;;		None               void
 10160 ;; Registers used:
 10161 ;;		wreg, status,2, status,0
 10162 ;; Tracked objects:
 10163 ;;		On entry : 0/0
 10164 ;;		On exit  : 0/0
 10165 ;;		Unchanged: 0/0
 10166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10167 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10168 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10170 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10171 ;;Total ram usage:        2 bytes
 10172 ;; Hardware stack levels used:    1
 10173 ;; Hardware stack levels required when called:    1
 10174 ;; This function calls:
 10175 ;;		Nothing
 10176 ;; This function is called by:
 10177 ;;		_scan_task
 10178 ;; This function uses a non-reentrant model
 10179 ;;
 10180                           
 10181                           
 10182                           ;psect for function _set_clock_and_data
 10183  0964                     _set_clock_and_data:	
 10184                           
 10185                           ;incstack = 0
 10186                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
 10187                           ;set_clock_and_data@c stored from wreg
 10188  0964  00F2               	movwf	set_clock_and_data@c
 10189                           
 10190                           ;scan.c: 69: LATCbits.LATC4 = !!c;
 10191  0965  0872               	movf	set_clock_and_data@c,w
 10192  0966  1903               	btfsc	3,2
 10193  0967  296B               	goto	u3000
 10194  0968  0022               	movlb	2	; select bank2
 10195  0969  160E               	bsf	14,4	;volatile
 10196  096A  296D               	goto	u3014
 10197  096B                     u3000:	
 10198  096B  0022               	movlb	2	; select bank2
 10199  096C  120E               	bcf	14,4	;volatile
 10200  096D                     u3014:	
 10201                           
 10202                           ;scan.c: 70: LATCbits.LATC5 = !!d;
 10203  096D  0871               	movf	set_clock_and_data@d,w
 10204  096E  1903               	btfsc	3,2
 10205  096F  2973               	goto	u3020
 10206  0970  0022               	movlb	2	; select bank2
 10207  0971  168E               	bsf	14,5	;volatile
 10208  0972  0008               	return
 10209  0973                     u3020:	
 10210  0973  0022               	movlb	2	; select bank2
 10211  0974  128E               	bcf	14,5	;volatile
 10212  0975  0008               	return
 10213  0976                     __end_of_set_clock_and_data:	
 10214                           
 10215                           	psect	text42
 10216  0A6B                     __ptext42:	
 10217 ;; *************** function _scan_init *****************
 10218 ;; Defined at:
 10219 ;;		line 32 in file "../src/scan.c"
 10220 ;; Parameters:    Size  Location     Type
 10221 ;;		None
 10222 ;; Auto vars:     Size  Location     Type
 10223 ;;		None
 10224 ;; Return value:  Size  Location     Type
 10225 ;;		None               void
 10226 ;; Registers used:
 10227 ;;		wreg, status,2, status,0
 10228 ;; Tracked objects:
 10229 ;;		On entry : 0/0
 10230 ;;		On exit  : 0/0
 10231 ;;		Unchanged: 0/0
 10232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10237 ;;Total ram usage:        0 bytes
 10238 ;; Hardware stack levels used:    1
 10239 ;; Hardware stack levels required when called:    1
 10240 ;; This function calls:
 10241 ;;		Nothing
 10242 ;; This function is called by:
 10243 ;;		_scan_task
 10244 ;; This function uses a non-reentrant model
 10245 ;;
 10246                           
 10247                           
 10248                           ;psect for function _scan_init
 10249  0A6B                     _scan_init:	
 10250                           
 10251                           ;scan.c: 33: is_initialized = 1;
 10252                           
 10253                           ;incstack = 0
 10254                           ; Regs used in _scan_init: [wreg+status,2+status,0]
 10255  0A6B  0022               	movlb	2	; select bank2
 10256  0A6C  01E3               	clrf	_is_initialized^(0+256)
 10257  0A6D  0AE3               	incf	_is_initialized^(0+256),f
 10258                           
 10259                           ;scan.c: 34: TRISCbits.TRISC3 = PIN_INPUT;
 10260  0A6E  0021               	movlb	1	; select bank1
 10261  0A6F  158E               	bsf	14,3	;volatile
 10262                           
 10263                           ;scan.c: 35: TRISCbits.TRISC4 = PIN_OUTPUT;
 10264  0A70  120E               	bcf	14,4	;volatile
 10265                           
 10266                           ;scan.c: 36: TRISCbits.TRISC5 = PIN_OUTPUT;
 10267  0A71  128E               	bcf	14,5	;volatile
 10268                           
 10269                           ;scan.c: 38: ANSELA = 0;
 10270  0A72  0023               	movlb	3	; select bank3
 10271  0A73  018C               	clrf	12	;volatile
 10272                           
 10273                           ;scan.c: 40: ANSELCbits.ANSC3 = PIN_ANALOG;
 10274  0A74  158E               	bsf	14,3	;volatile
 10275                           
 10276                           ;scan.c: 41: LATCbits.LATC4 = 0;
 10277  0A75  0022               	movlb	2	; select bank2
 10278  0A76  120E               	bcf	14,4	;volatile
 10279                           
 10280                           ;scan.c: 42: LATCbits.LATC5 = 0;
 10281  0A77  128E               	bcf	14,5	;volatile
 10282                           
 10283                           ;scan.c: 44: ANSELAbits.ANSA4 = PIN_DIGITAL;
 10284  0A78  0023               	movlb	3	; select bank3
 10285  0A79  120C               	bcf	12,4	;volatile
 10286                           
 10287                           ;scan.c: 45: TRISAbits.TRISA4 = PIN_INPUT;
 10288  0A7A  0021               	movlb	1	; select bank1
 10289  0A7B  160C               	bsf	12,4	;volatile
 10290                           
 10291                           ;scan.c: 47: PIE1bits.ADIE = 0;
 10292  0A7C  1311               	bcf	17,6	;volatile
 10293                           
 10294                           ;scan.c: 48: ADCON0bits.ADON = 1;
 10295  0A7D  141D               	bsf	29,0	;volatile
 10296                           
 10297                           ;scan.c: 49: ADCON1bits.ADFM = 0;
 10298  0A7E  139E               	bcf	30,7	;volatile
 10299                           
 10300                           ;scan.c: 50: ADCON1bits.ADCS = 0b110;
 10301  0A7F  081E               	movf	30,w	;volatile
 10302  0A80  398F               	andlw	-113
 10303  0A81  3860               	iorlw	96
 10304  0A82  009E               	movwf	30	;volatile
 10305                           
 10306                           ;scan.c: 51: ADCON1bits.ADPREF = 0;
 10307  0A83  30FC               	movlw	-4
 10308  0A84  059E               	andwf	30,f	;volatile
 10309                           
 10310                           ;scan.c: 52: ADCON2bits.TRIGSEL = 0;
 10311  0A85  308F               	movlw	-113
 10312  0A86  059F               	andwf	31,f	;volatile
 10313  0A87  0008               	return
 10314  0A88                     __end_of_scan_init:	
 10315                           
 10316                           	psect	text43
 10317  0939                     __ptext43:	
 10318 ;; *************** function _run_adc *****************
 10319 ;; Defined at:
 10320 ;;		line 85 in file "../src/scan.c"
 10321 ;; Parameters:    Size  Location     Type
 10322 ;;		None
 10323 ;; Auto vars:     Size  Location     Type
 10324 ;;		None
 10325 ;; Return value:  Size  Location     Type
 10326 ;;		None               void
 10327 ;; Registers used:
 10328 ;;		wreg, status,2, status,0
 10329 ;; Tracked objects:
 10330 ;;		On entry : 0/0
 10331 ;;		On exit  : 0/0
 10332 ;;		Unchanged: 0/0
 10333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10338 ;;Total ram usage:        0 bytes
 10339 ;; Hardware stack levels used:    1
 10340 ;; Hardware stack levels required when called:    1
 10341 ;; This function calls:
 10342 ;;		Nothing
 10343 ;; This function is called by:
 10344 ;;		_scan_task
 10345 ;; This function uses a non-reentrant model
 10346 ;;
 10347                           
 10348                           
 10349                           ;psect for function _run_adc
 10350  0939                     _run_adc:	
 10351                           
 10352                           ;scan.c: 86: ADCON0bits.CHS = 7;
 10353                           
 10354                           ;incstack = 0
 10355                           ; Regs used in _run_adc: [wreg+status,2+status,0]
 10356  0939  0021               	movlb	1	; select bank1
 10357  093A  081D               	movf	29,w	;volatile
 10358  093B  3983               	andlw	-125
 10359  093C  381C               	iorlw	28
 10360  093D  009D               	movwf	29	;volatile
 10361                           
 10362                           ;scan.c: 87: ADCON0bits.GO = 1;
 10363  093E  149D               	bsf	29,1	;volatile
 10364  093F  0008               	return
 10365  0940                     __end_of_run_adc:	
 10366                           
 10367                           	psect	text44
 10368  0976                     __ptext44:	
 10369 ;; *************** function _is_end_of_scan *****************
 10370 ;; Defined at:
 10371 ;;		line 77 in file "../src/scan.c"
 10372 ;; Parameters:    Size  Location     Type
 10373 ;;		None
 10374 ;; Auto vars:     Size  Location     Type
 10375 ;;  res             1    3[COMMON] unsigned char 
 10376 ;; Return value:  Size  Location     Type
 10377 ;;                  1    wreg      unsigned char 
 10378 ;; Registers used:
 10379 ;;		wreg, status,2, status,0
 10380 ;; Tracked objects:
 10381 ;;		On entry : 0/0
 10382 ;;		On exit  : 0/0
 10383 ;;		Unchanged: 0/0
 10384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10387 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10388 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10389 ;;Total ram usage:        3 bytes
 10390 ;; Hardware stack levels used:    1
 10391 ;; Hardware stack levels required when called:    1
 10392 ;; This function calls:
 10393 ;;		Nothing
 10394 ;; This function is called by:
 10395 ;;		_scan_task
 10396 ;; This function uses a non-reentrant model
 10397 ;;
 10398                           
 10399                           
 10400                           ;psect for function _is_end_of_scan
 10401  0976                     _is_end_of_scan:	
 10402                           
 10403                           ;scan.c: 79: static uint8_t scan_counter = 0;
 10404                           ;scan.c: 80: bool res = (++scan_counter) >= N_KEYS;
 10405                           
 10406                           ;incstack = 0
 10407                           ; Regs used in _is_end_of_scan: [wreg+status,2+status,0]
 10408  0976  3001               	movlw	1
 10409  0977  00F1               	movwf	??_is_end_of_scan
 10410  0978  0871               	movf	??_is_end_of_scan,w
 10411  0979  0022               	movlb	2	; select bank2
 10412  097A  07E7               	addwf	is_end_of_scan@scan_counter^(0+256),f
 10413  097B  3027               	movlw	39
 10414  097C  0267               	subwf	is_end_of_scan@scan_counter^(0+256),w
 10415  097D  1C03               	btfss	3,0
 10416  097E  2981               	goto	u3040
 10417  097F  3001               	movlw	1
 10418  0980  2982               	goto	u3050
 10419  0981                     u3040:	
 10420  0981  3000               	movlw	0
 10421  0982                     u3050:	
 10422  0982  00F2               	movwf	??_is_end_of_scan+1
 10423  0983  0872               	movf	??_is_end_of_scan+1,w
 10424  0984  00F3               	movwf	is_end_of_scan@res
 10425                           
 10426                           ;scan.c: 81: if (scan_counter >= N_KEYS) scan_counter = 0;
 10427  0985  3027               	movlw	39
 10428  0986  0267               	subwf	is_end_of_scan@scan_counter^(0+256),w
 10429  0987  1803               	btfsc	3,0
 10430  0988  01E7               	clrf	is_end_of_scan@scan_counter^(0+256)
 10431                           
 10432                           ;scan.c: 82: return res;
 10433  0989  0873               	movf	is_end_of_scan@res,w
 10434  098A  0008               	return
 10435  098B                     __end_of_is_end_of_scan:	
 10436                           
 10437                           	psect	text45
 10438  0932                     __ptext45:	
 10439 ;; *************** function _is_adc_ready *****************
 10440 ;; Defined at:
 10441 ;;		line 90 in file "../src/scan.c"
 10442 ;; Parameters:    Size  Location     Type
 10443 ;;		None
 10444 ;; Auto vars:     Size  Location     Type
 10445 ;;		None
 10446 ;; Return value:  Size  Location     Type
 10447 ;;                  1    wreg      unsigned char 
 10448 ;; Registers used:
 10449 ;;		wreg, status,0
 10450 ;; Tracked objects:
 10451 ;;		On entry : 0/0
 10452 ;;		On exit  : 0/0
 10453 ;;		Unchanged: 0/0
 10454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10459 ;;Total ram usage:        0 bytes
 10460 ;; Hardware stack levels used:    1
 10461 ;; Hardware stack levels required when called:    1
 10462 ;; This function calls:
 10463 ;;		Nothing
 10464 ;; This function is called by:
 10465 ;;		_scan_task
 10466 ;; This function uses a non-reentrant model
 10467 ;;
 10468                           
 10469                           
 10470                           ;psect for function _is_adc_ready
 10471  0932                     _is_adc_ready:	
 10472                           
 10473                           ;scan.c: 91: return !ADCON0bits.GO_nDONE;
 10474                           
 10475                           ;incstack = 0
 10476                           ; Regs used in _is_adc_ready: [wreg+status,0]
 10477  0932  1003               	clrc
 10478  0933  0021               	movlb	1	; select bank1
 10479  0934  1C9D               	btfss	29,1	;volatile
 10480  0935  1403               	setc
 10481  0936  3000               	movlw	0
 10482  0937  3D09               	addwfc	9,w
 10483  0938  0008               	return
 10484  0939                     __end_of_is_adc_ready:	
 10485                           
 10486                           	psect	text46
 10487  0915                     __ptext46:	
 10488 ;; *************** function _get_data *****************
 10489 ;; Defined at:
 10490 ;;		line 73 in file "../src/scan.c"
 10491 ;; Parameters:    Size  Location     Type
 10492 ;;		None
 10493 ;; Auto vars:     Size  Location     Type
 10494 ;;		None
 10495 ;; Return value:  Size  Location     Type
 10496 ;;                  1    wreg      unsigned char 
 10497 ;; Registers used:
 10498 ;;		wreg, status,2, status,0
 10499 ;; Tracked objects:
 10500 ;;		On entry : 0/0
 10501 ;;		On exit  : 0/0
 10502 ;;		Unchanged: 0/0
 10503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10508 ;;Total ram usage:        0 bytes
 10509 ;; Hardware stack levels used:    1
 10510 ;; Hardware stack levels required when called:    1
 10511 ;; This function calls:
 10512 ;;		Nothing
 10513 ;; This function is called by:
 10514 ;;		_scan_task
 10515 ;; This function uses a non-reentrant model
 10516 ;;
 10517                           
 10518                           
 10519                           ;psect for function _get_data
 10520  0915                     _get_data:	
 10521                           
 10522                           ;scan.c: 74: return LATCbits.LATC5;
 10523                           
 10524                           ;incstack = 0
 10525                           ; Regs used in _get_data: [wreg+status,2+status,0]
 10526  0915  0022               	movlb	2	; select bank2
 10527  0916  0E0E               	swapf	14,w	;volatile
 10528  0917  0C89               	rrf	9,f
 10529  0918  3901               	andlw	1
 10530  0919  0008               	return
 10531  091A                     __end_of_get_data:	
 10532                           
 10533                           	psect	text47
 10534  090D                     __ptext47:	
 10535 ;; *************** function _get_adc *****************
 10536 ;; Defined at:
 10537 ;;		line 94 in file "../src/scan.c"
 10538 ;; Parameters:    Size  Location     Type
 10539 ;;		None
 10540 ;; Auto vars:     Size  Location     Type
 10541 ;;		None
 10542 ;; Return value:  Size  Location     Type
 10543 ;;                  1    wreg      unsigned char 
 10544 ;; Registers used:
 10545 ;;		wreg
 10546 ;; Tracked objects:
 10547 ;;		On entry : 0/0
 10548 ;;		On exit  : 0/0
 10549 ;;		Unchanged: 0/0
 10550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10555 ;;Total ram usage:        0 bytes
 10556 ;; Hardware stack levels used:    1
 10557 ;; Hardware stack levels required when called:    1
 10558 ;; This function calls:
 10559 ;;		Nothing
 10560 ;; This function is called by:
 10561 ;;		_scan_task
 10562 ;; This function uses a non-reentrant model
 10563 ;;
 10564                           
 10565                           
 10566                           ;psect for function _get_adc
 10567  090D                     _get_adc:	
 10568                           
 10569                           ;scan.c: 95: return ADRESH;
 10570                           
 10571                           ;incstack = 0
 10572                           ; Regs used in _get_adc: [wreg]
 10573  090D  0021               	movlb	1	; select bank1
 10574  090E  081C               	movf	28,w	;volatile
 10575  090F  0008               	return
 10576  0910                     __end_of_get_adc:	
 10577                           
 10578                           	psect	text48
 10579  0CDA                     __ptext48:	
 10580 ;; *************** function _USBTransferOnePacket *****************
 10581 ;; Defined at:
 10582 ;;		line 1014 in file "../framework/usb/usb_device.c"
 10583 ;; Parameters:    Size  Location     Type
 10584 ;;  ep              1    wreg     unsigned char 
 10585 ;;  dir             1    1[COMMON] unsigned char 
 10586 ;;  data            2    2[COMMON] PTR unsigned char 
 10587 ;;		 -> midiData(4), ReceivedDataBuffer(64), 
 10588 ;;  len             1    4[COMMON] unsigned char 
 10589 ;; Auto vars:     Size  Location     Type
 10590 ;;  ep              1    7[COMMON] unsigned char 
 10591 ;;  handle          1    8[COMMON] PTR volatile struct __BD
 10592 ;;		 -> BDT(32), NULL(0), 
 10593 ;; Return value:  Size  Location     Type
 10594 ;;                  1    wreg      PTR void 
 10595 ;; Registers used:
 10596 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10597 ;; Tracked objects:
 10598 ;;		On entry : 0/0
 10599 ;;		On exit  : 0/0
 10600 ;;		Unchanged: 0/0
 10601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10602 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10603 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10604 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10605 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10606 ;;Total ram usage:        8 bytes
 10607 ;; Hardware stack levels used:    1
 10608 ;; Hardware stack levels required when called:    1
 10609 ;; This function calls:
 10610 ;;		Nothing
 10611 ;; This function is called by:
 10612 ;;		_APP_DeviceAudioMIDIInitialize
 10613 ;;		_APP_DeviceAudioMIDITasks
 10614 ;; This function uses a non-reentrant model
 10615 ;;
 10616                           
 10617                           
 10618                           ;psect for function _USBTransferOnePacket
 10619  0CDA                     _USBTransferOnePacket:	
 10620                           
 10621                           ;incstack = 0
 10622                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
 10623                           ;USBTransferOnePacket@ep stored from wreg
 10624  0CDA  00F7               	movwf	USBTransferOnePacket@ep
 10625                           
 10626                           ;usb_device.c: 1016: volatile BDT_ENTRY* handle;
 10627                           ;usb_device.c: 1019: if(dir != 0)
 10628  0CDB  0871               	movf	USBTransferOnePacket@dir,w
 10629  0CDC  1903               	btfsc	3,2
 10630  0CDD  2CE3               	goto	l3066
 10631                           
 10632                           ;usb_device.c: 1020: {
 10633                           ;usb_device.c: 1022: handle = pBDTEntryIn[ep];
 10634  0CDE  0877               	movf	USBTransferOnePacket@ep,w
 10635  0CDF  3E69               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 10636  0CE0  0086               	movwf	6
 10637  0CE1  0187               	clrf	7
 10638  0CE2  2CE8               	goto	L14
 10639  0CE3                     l3066:	
 10640                           ;usb_device.c: 1023: }
 10641                           
 10642                           
 10643                           ;usb_device.c: 1024: else
 10644                           ;usb_device.c: 1025: {
 10645                           ;usb_device.c: 1027: handle = pBDTEntryOut[ep];
 10646  0CE3  0877               	movf	USBTransferOnePacket@ep,w
 10647  0CE4  3E58               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 10648  0CE5  0086               	movwf	6
 10649  0CE6  3001               	movlw	1	; select bank2/3
 10650  0CE7  0087               	movwf	7
 10651  0CE8                     L14:	
 10652  0CE8  0801               	movf	1,w
 10653  0CE9  00F5               	movwf	??_USBTransferOnePacket
 10654  0CEA  0875               	movf	??_USBTransferOnePacket,w
 10655  0CEB  00F8               	movwf	USBTransferOnePacket@handle
 10656                           
 10657                           ;usb_device.c: 1028: }
 10658                           ;usb_device.c: 1032: if(handle == 0)
 10659  0CEC  0878               	movf	USBTransferOnePacket@handle,w
 10660  0CED  1D03               	btfss	3,2
 10661  0CEE  2CF1               	goto	l3074
 10662                           
 10663                           ;usb_device.c: 1033: {
 10664                           ;usb_device.c: 1034: return 0;
 10665  0CEF  3000               	movlw	0
 10666  0CF0  0008               	return
 10667  0CF1                     l3074:	
 10668                           
 10669                           ;usb_device.c: 1035: }
 10670                           ;usb_device.c: 1048: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
 10671  0CF1  30FF               	movlw	255
 10672  0CF2  0572               	andwf	USBTransferOnePacket@data,w
 10673  0CF3  00F5               	movwf	??_USBTransferOnePacket
 10674  0CF4  307F               	movlw	127
 10675  0CF5  0573               	andwf	USBTransferOnePacket@data+1,w
 10676  0CF6  00F6               	movwf	??_USBTransferOnePacket+1
 10677  0CF7  0878               	movf	USBTransferOnePacket@handle,w
 10678  0CF8  3E02               	addlw	2
 10679  0CF9  0086               	movwf	6
 10680  0CFA  0187               	clrf	7
 10681  0CFB  0875               	movf	??_USBTransferOnePacket,w
 10682  0CFC  3FC0               	movwi [0]fsr1
 10683  0CFD  0876               	movf	??_USBTransferOnePacket+1,w
 10684  0CFE  3FC1               	movwi [1]fsr1
 10685                           
 10686                           ;usb_device.c: 1049: handle->CNT = len;
 10687  0CFF  0874               	movf	USBTransferOnePacket@len,w
 10688  0D00  00F5               	movwf	??_USBTransferOnePacket
 10689  0D01  0A78               	incf	USBTransferOnePacket@handle,w
 10690  0D02  0086               	movwf	6
 10691  0D03  0187               	clrf	7
 10692  0D04  0875               	movf	??_USBTransferOnePacket,w
 10693  0D05  0081               	movwf	1
 10694                           
 10695                           ;usb_device.c: 1050: handle->STAT.Val &= 0x40;
 10696  0D06  3040               	movlw	64
 10697  0D07  00F5               	movwf	??_USBTransferOnePacket
 10698  0D08  0878               	movf	USBTransferOnePacket@handle,w
 10699  0D09  0086               	movwf	6
 10700  0D0A  0187               	clrf	7
 10701  0D0B  0875               	movf	??_USBTransferOnePacket,w
 10702  0D0C  0581               	andwf	1,f
 10703                           
 10704                           ;usb_device.c: 1051: handle->STAT.Val |= (0x08 & 0x08);
 10705  0D0D  0878               	movf	USBTransferOnePacket@handle,w
 10706  0D0E  0086               	movwf	6
 10707  0D0F  0187               	clrf	7
 10708  0D10  1581               	bsf	1,3
 10709                           
 10710                           ;usb_device.c: 1052: handle->STAT.Val |= 0x80;
 10711  0D11  0878               	movf	USBTransferOnePacket@handle,w
 10712  0D12  0086               	movwf	6
 10713  0D13  0187               	clrf	7
 10714  0D14  1781               	bsf	1,7
 10715                           
 10716                           ;usb_device.c: 1055: if(dir != 0)
 10717  0D15  0871               	movf	USBTransferOnePacket@dir,w
 10718  0D16  1903               	btfsc	3,2
 10719  0D17  2D1F               	goto	l3084
 10720                           
 10721                           ;usb_device.c: 1056: {
 10722                           ;usb_device.c: 1058: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 10723  0D18  3004               	movlw	4
 10724  0D19  00F5               	movwf	??_USBTransferOnePacket
 10725  0D1A  0877               	movf	USBTransferOnePacket@ep,w
 10726  0D1B  3E69               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 10727  0D1C  0086               	movwf	6
 10728  0D1D  0187               	clrf	7
 10729  0D1E  2D26               	goto	L15
 10730  0D1F                     l3084:	
 10731                           ;usb_device.c: 1059: }
 10732                           
 10733                           
 10734                           ;usb_device.c: 1060: else
 10735                           ;usb_device.c: 1061: {
 10736                           ;usb_device.c: 1063: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 10737  0D1F  3004               	movlw	4
 10738  0D20  00F5               	movwf	??_USBTransferOnePacket
 10739  0D21  0877               	movf	USBTransferOnePacket@ep,w
 10740  0D22  3E58               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 10741  0D23  0086               	movwf	6
 10742  0D24  3001               	movlw	1	; select bank2/3
 10743  0D25  0087               	movwf	7
 10744  0D26                     L15:	
 10745  0D26  0875               	movf	??_USBTransferOnePacket,w
 10746  0D27  0681               	xorwf	1,f
 10747                           
 10748                           ;usb_device.c: 1064: }
 10749                           ;usb_device.c: 1065: return (void*)handle;
 10750  0D28  0878               	movf	USBTransferOnePacket@handle,w
 10751  0D29  0008               	return
 10752  0D2A                     __end_of_USBTransferOnePacket:	
 10753                           
 10754                           	psect	text49
 10755  0AF9                     __ptext49:	
 10756 ;; *************** function _SendMidiData *****************
 10757 ;; Defined at:
 10758 ;;		line 16 in file "../src/app_device_ble_midi.c"
 10759 ;; Parameters:    Size  Location     Type
 10760 ;;  tone            1    wreg     unsigned char 
 10761 ;;  velocity        1    4[COMMON] unsigned char 
 10762 ;; Auto vars:     Size  Location     Type
 10763 ;;  tone            1    6[COMMON] unsigned char 
 10764 ;;  timeout_ms      1    7[COMMON] volatile unsigned char 
 10765 ;; Return value:  Size  Location     Type
 10766 ;;		None               void
 10767 ;; Registers used:
 10768 ;;		wreg, status,2, status,0, pclath, cstack
 10769 ;; Tracked objects:
 10770 ;;		On entry : 0/0
 10771 ;;		On exit  : 0/0
 10772 ;;		Unchanged: 0/0
 10773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10774 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10775 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10776 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10777 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10778 ;;Total ram usage:        4 bytes
 10779 ;; Hardware stack levels used:    1
 10780 ;; Hardware stack levels required when called:    2
 10781 ;; This function calls:
 10782 ;;		_SPI_ClearReceiveOverflowStatus
 10783 ;;		_SPI_ClearWriteCollisionStatus
 10784 ;;		_SPI_Exchange8bit
 10785 ;;		_SPI_HasReceiveOverflowOccured
 10786 ;;		_SPI_HasWriteCollisionOccured
 10787 ;; This function is called by:
 10788 ;;		_APP_DeviceAudioMIDITasks
 10789 ;;		_PlayWrap
 10790 ;;		_APP_DeviceBLETask
 10791 ;; This function uses a non-reentrant model
 10792 ;;
 10793                           
 10794                           
 10795                           ;psect for function _SendMidiData
 10796  0AF9                     _SendMidiData:	
 10797                           
 10798                           ;incstack = 0
 10799                           ; Regs used in _SendMidiData: [wreg+status,2+status,0+pclath+cstack]
 10800                           ;SendMidiData@tone stored from wreg
 10801  0AF9  00F6               	movwf	SendMidiData@tone
 10802                           
 10803                           ;app_device_ble_midi.c: 18: volatile uint8_t timeout_ms = 10;
 10804  0AFA  300A               	movlw	10
 10805  0AFB  00F5               	movwf	??_SendMidiData
 10806  0AFC  0875               	movf	??_SendMidiData,w
 10807  0AFD  00F7               	movwf	SendMidiData@timeout_ms	;volatile
 10808                           
 10809                           ;app_device_ble_midi.c: 21: if (SPI_HasReceiveOverflowOccured()) {
 10810  0AFE  3189  211A  318A   	fcall	_SPI_HasReceiveOverflowOccured
 10811  0B01  3A00               	xorlw	0
 10812  0B02  1903               	skipnz
 10813  0B03  2B07               	goto	l3988
 10814                           
 10815                           ;app_device_ble_midi.c: 22: SPI_ClearReceiveOverflowStatus();
 10816  0B04  3189  2107  318A   	fcall	_SPI_ClearReceiveOverflowStatus
 10817  0B07                     l3988:	
 10818                           
 10819                           ;app_device_ble_midi.c: 23: }
 10820                           ;app_device_ble_midi.c: 25: if (SPI_HasWriteCollisionOccured()) {
 10821  0B07  3189  2110  318A   	fcall	_SPI_HasWriteCollisionOccured
 10822  0B0A  3A00               	xorlw	0
 10823  0B0B  1903               	skipnz
 10824  0B0C  2B10               	goto	l3992
 10825                           
 10826                           ;app_device_ble_midi.c: 26: SPI_ClearWriteCollisionStatus();
 10827  0B0D  3189  210A  318A   	fcall	_SPI_ClearWriteCollisionStatus
 10828  0B10                     l3992:	
 10829                           ;app_device_ble_midi.c: 27: }
 10830                           ;app_device_ble_midi.c: 30: do { LATBbits.LATB7 = 1; } while(0);
 10831                           
 10832  0B10  0022               	movlb	2	; select bank2
 10833  0B11  178D               	bsf	13,7	;volatile
 10834                           
 10835                           ;app_device_ble_midi.c: 31: do { LATBbits.LATB7 = 0; } while(0);
 10836  0B12  138D               	bcf	13,7	;volatile
 10837  0B13                     l847:	
 10838                           ;app_device_ble_midi.c: 33: while ((PORTBbits.RB5 != 0) && (timeout_ms > 0)) {
 10839                           
 10840  0B13  0020               	movlb	0	; select bank0
 10841  0B14  1E8D               	btfss	13,5	;volatile
 10842  0B15  2B19               	goto	l851
 10843  0B16  0877               	movf	SendMidiData@timeout_ms,w	;volatile
 10844  0B17  1D03               	btfss	3,2
 10845  0B18  2B13               	goto	l847
 10846  0B19                     l851:	
 10847                           
 10848                           ;app_device_ble_midi.c: 36: }
 10849                           ;app_device_ble_midi.c: 38: if (PORTBbits.RB5 == 0) {
 10850  0B19  1A8D               	btfsc	13,5	;volatile
 10851  0B1A  0008               	return
 10852                           
 10853                           ;app_device_ble_midi.c: 40: SPI_Exchange8bit(tone);
 10854  0B1B  0876               	movf	SendMidiData@tone,w
 10855  0B1C  3187  27F2  318A   	fcall	_SPI_Exchange8bit
 10856                           
 10857                           ;app_device_ble_midi.c: 41: SPI_Exchange8bit(velocity);
 10858  0B1F  0874               	movf	SendMidiData@velocity,w
 10859  0B20  3187  27F2  318A   	fcall	_SPI_Exchange8bit
 10860                           
 10861                           ;app_device_ble_midi.c: 42: SPI_Exchange8bit(0xAA);
 10862  0B23  30AA               	movlw	170
 10863  0B24  3187  27F2         	fcall	_SPI_Exchange8bit
 10864  0B26  0008               	return
 10865  0B27                     __end_of_SendMidiData:	
 10866                           
 10867                           	psect	text50
 10868  0910                     __ptext50:	
 10869 ;; *************** function _SPI_HasWriteCollisionOccured *****************
 10870 ;; Defined at:
 10871 ;;		line 123 in file "../src/spi.c"
 10872 ;; Parameters:    Size  Location     Type
 10873 ;;		None
 10874 ;; Auto vars:     Size  Location     Type
 10875 ;;		None
 10876 ;; Return value:  Size  Location     Type
 10877 ;;                  1    wreg      unsigned char 
 10878 ;; Registers used:
 10879 ;;		wreg, status,2, status,0
 10880 ;; Tracked objects:
 10881 ;;		On entry : 0/0
 10882 ;;		On exit  : 0/0
 10883 ;;		Unchanged: 0/0
 10884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10889 ;;Total ram usage:        0 bytes
 10890 ;; Hardware stack levels used:    1
 10891 ;; Hardware stack levels required when called:    1
 10892 ;; This function calls:
 10893 ;;		Nothing
 10894 ;; This function is called by:
 10895 ;;		_SendMidiData
 10896 ;; This function uses a non-reentrant model
 10897 ;;
 10898                           
 10899                           
 10900                           ;psect for function _SPI_HasWriteCollisionOccured
 10901  0910                     _SPI_HasWriteCollisionOccured:	
 10902                           
 10903                           ;spi.c: 124: return (SSP1CON1bits.WCOL);
 10904                           
 10905                           ;incstack = 0
 10906                           ; Regs used in _SPI_HasWriteCollisionOccured: [wreg+status,2+status,0]
 10907  0910  0024               	movlb	4	; select bank4
 10908  0911  0D15               	rlf	21,w	;volatile
 10909  0912  0D15               	rlf	21,w	;volatile
 10910  0913  3901               	andlw	1
 10911  0914  0008               	return
 10912  0915                     __end_of_SPI_HasWriteCollisionOccured:	
 10913                           
 10914                           	psect	text51
 10915  091A                     __ptext51:	
 10916 ;; *************** function _SPI_HasReceiveOverflowOccured *****************
 10917 ;; Defined at:
 10918 ;;		line 131 in file "../src/spi.c"
 10919 ;; Parameters:    Size  Location     Type
 10920 ;;		None
 10921 ;; Auto vars:     Size  Location     Type
 10922 ;;		None
 10923 ;; Return value:  Size  Location     Type
 10924 ;;                  1    wreg      unsigned char 
 10925 ;; Registers used:
 10926 ;;		wreg, status,2, status,0
 10927 ;; Tracked objects:
 10928 ;;		On entry : 0/0
 10929 ;;		On exit  : 0/0
 10930 ;;		Unchanged: 0/0
 10931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10936 ;;Total ram usage:        0 bytes
 10937 ;; Hardware stack levels used:    1
 10938 ;; Hardware stack levels required when called:    1
 10939 ;; This function calls:
 10940 ;;		Nothing
 10941 ;; This function is called by:
 10942 ;;		_SendMidiData
 10943 ;; This function uses a non-reentrant model
 10944 ;;
 10945                           
 10946                           
 10947                           ;psect for function _SPI_HasReceiveOverflowOccured
 10948  091A                     _SPI_HasReceiveOverflowOccured:	
 10949                           
 10950                           ;spi.c: 132: return (SSP1CON1bits.SSPOV);
 10951                           
 10952                           ;incstack = 0
 10953                           ; Regs used in _SPI_HasReceiveOverflowOccured: [wreg+status,2+status,0]
 10954  091A  0024               	movlb	4	; select bank4
 10955  091B  0E15               	swapf	21,w	;volatile
 10956  091C  0C89               	rrf	9,f
 10957  091D  0C89               	rrf	9,f
 10958  091E  3901               	andlw	1
 10959  091F  0008               	return
 10960  0920                     __end_of_SPI_HasReceiveOverflowOccured:	
 10961                           
 10962                           	psect	text52
 10963  07F2                     __ptext52:	
 10964 ;; *************** function _SPI_Exchange8bit *****************
 10965 ;; Defined at:
 10966 ;;		line 77 in file "../src/spi.c"
 10967 ;; Parameters:    Size  Location     Type
 10968 ;;  data            1    wreg     unsigned char 
 10969 ;; Auto vars:     Size  Location     Type
 10970 ;;  data            1    3[COMMON] unsigned char 
 10971 ;;  dummyRead       1    2[COMMON] unsigned char 
 10972 ;; Return value:  Size  Location     Type
 10973 ;;                  1    wreg      unsigned char 
 10974 ;; Registers used:
 10975 ;;		wreg
 10976 ;; Tracked objects:
 10977 ;;		On entry : 0/0
 10978 ;;		On exit  : 0/0
 10979 ;;		Unchanged: 0/0
 10980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10982 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10983 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10984 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10985 ;;Total ram usage:        3 bytes
 10986 ;; Hardware stack levels used:    1
 10987 ;; Hardware stack levels required when called:    1
 10988 ;; This function calls:
 10989 ;;		Nothing
 10990 ;; This function is called by:
 10991 ;;		_SendMidiData
 10992 ;;		_SPI_Exchange8bitBuffer
 10993 ;; This function uses a non-reentrant model
 10994 ;;
 10995                           
 10996                           
 10997                           ;psect for function _SPI_Exchange8bit
 10998  07F2                     _SPI_Exchange8bit:	
 10999                           
 11000                           ;incstack = 0
 11001                           ; Regs used in _SPI_Exchange8bit: [wreg]
 11002                           ;SPI_Exchange8bit@data stored from wreg
 11003  07F2  00F3               	movwf	SPI_Exchange8bit@data
 11004                           
 11005                           ;spi.c: 78: uint8_t dummyRead = SSPBUF;
 11006  07F3  0024               	movlb	4	; select bank4
 11007  07F4  0811               	movf	17,w	;volatile
 11008  07F5  00F1               	movwf	??_SPI_Exchange8bit
 11009  07F6  0871               	movf	??_SPI_Exchange8bit,w
 11010  07F7  00F2               	movwf	SPI_Exchange8bit@dummyRead
 11011                           
 11012                           ;spi.c: 81: SSP1CON1bits.WCOL = 0;
 11013  07F8  1395               	bcf	21,7	;volatile
 11014                           
 11015                           ;spi.c: 83: SSPBUF = data;
 11016  07F9  0873               	movf	SPI_Exchange8bit@data,w
 11017  07FA  0091               	movwf	17	;volatile
 11018  07FB                     l909:	
 11019                           ;spi.c: 85: while (SSP1STATbits.BF == 0x0) {
 11020                           
 11021  07FB  1C14               	btfss	20,0	;volatile
 11022  07FC  2FFB               	goto	l909
 11023                           
 11024                           ;spi.c: 86: }
 11025                           ;spi.c: 88: return (SSPBUF);
 11026  07FD  0811               	movf	17,w	;volatile
 11027  07FE  0008               	return
 11028  07FF                     __end_of_SPI_Exchange8bit:	
 11029                           
 11030                           	psect	text53
 11031  090A                     __ptext53:	
 11032 ;; *************** function _SPI_ClearWriteCollisionStatus *****************
 11033 ;; Defined at:
 11034 ;;		line 127 in file "../src/spi.c"
 11035 ;; Parameters:    Size  Location     Type
 11036 ;;		None
 11037 ;; Auto vars:     Size  Location     Type
 11038 ;;		None
 11039 ;; Return value:  Size  Location     Type
 11040 ;;		None               void
 11041 ;; Registers used:
 11042 ;;		None
 11043 ;; Tracked objects:
 11044 ;;		On entry : 0/0
 11045 ;;		On exit  : 0/0
 11046 ;;		Unchanged: 0/0
 11047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11052 ;;Total ram usage:        0 bytes
 11053 ;; Hardware stack levels used:    1
 11054 ;; Hardware stack levels required when called:    1
 11055 ;; This function calls:
 11056 ;;		Nothing
 11057 ;; This function is called by:
 11058 ;;		_SendMidiData
 11059 ;; This function uses a non-reentrant model
 11060 ;;
 11061                           
 11062                           
 11063                           ;psect for function _SPI_ClearWriteCollisionStatus
 11064  090A                     _SPI_ClearWriteCollisionStatus:	
 11065                           
 11066                           ;spi.c: 128: SSP1CON1bits.WCOL = 0;
 11067                           
 11068                           ;incstack = 0
 11069                           ; Regs used in _SPI_ClearWriteCollisionStatus: []
 11070  090A  0024               	movlb	4	; select bank4
 11071  090B  1395               	bcf	21,7	;volatile
 11072  090C  0008               	return
 11073  090D                     __end_of_SPI_ClearWriteCollisionStatus:	
 11074                           
 11075                           	psect	text54
 11076  0907                     __ptext54:	
 11077 ;; *************** function _SPI_ClearReceiveOverflowStatus *****************
 11078 ;; Defined at:
 11079 ;;		line 135 in file "../src/spi.c"
 11080 ;; Parameters:    Size  Location     Type
 11081 ;;		None
 11082 ;; Auto vars:     Size  Location     Type
 11083 ;;		None
 11084 ;; Return value:  Size  Location     Type
 11085 ;;		None               void
 11086 ;; Registers used:
 11087 ;;		None
 11088 ;; Tracked objects:
 11089 ;;		On entry : 0/0
 11090 ;;		On exit  : 0/0
 11091 ;;		Unchanged: 0/0
 11092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11097 ;;Total ram usage:        0 bytes
 11098 ;; Hardware stack levels used:    1
 11099 ;; Hardware stack levels required when called:    1
 11100 ;; This function calls:
 11101 ;;		Nothing
 11102 ;; This function is called by:
 11103 ;;		_SendMidiData
 11104 ;; This function uses a non-reentrant model
 11105 ;;
 11106                           
 11107                           
 11108                           ;psect for function _SPI_ClearReceiveOverflowStatus
 11109  0907                     _SPI_ClearReceiveOverflowStatus:	
 11110                           
 11111                           ;spi.c: 136: SSP1CON1bits.SSPOV = 0;
 11112                           
 11113                           ;incstack = 0
 11114                           ; Regs used in _SPI_ClearReceiveOverflowStatus: []
 11115  0907  0024               	movlb	4	; select bank4
 11116  0908  1315               	bcf	21,6	;volatile
 11117  0909  0008               	return
 11118  090A                     __end_of_SPI_ClearReceiveOverflowStatus:	
 11119                           
 11120                           	psect	intentry
 11121  0004                     __pintentry:	
 11122 ;; *************** function _SYS_InterruptHigh *****************
 11123 ;; Defined at:
 11124 ;;		line 112 in file "../src/pic16f1459/system.c"
 11125 ;; Parameters:    Size  Location     Type
 11126 ;;		None
 11127 ;; Auto vars:     Size  Location     Type
 11128 ;;		None
 11129 ;; Return value:  Size  Location     Type
 11130 ;;		None               void
 11131 ;; Registers used:
 11132 ;;		None
 11133 ;; Tracked objects:
 11134 ;;		On entry : 0/0
 11135 ;;		On exit  : 0/0
 11136 ;;		Unchanged: 0/0
 11137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11140 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11141 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11142 ;;Total ram usage:        1 bytes
 11143 ;; Hardware stack levels used:    1
 11144 ;; This function calls:
 11145 ;;		Nothing
 11146 ;; This function is called by:
 11147 ;;		Interrupt level 1
 11148 ;; This function uses a non-reentrant model
 11149 ;;
 11150                           
 11151  0004                     _SYS_InterruptHigh:	
 11152                           
 11153                           ;incstack = 0
 11154                           ; Regs used in _SYS_InterruptHigh: []
 11155  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 11156  0005  3180               	pagesel	$
 11157  0006  0020               	movlb	0	; select bank0
 11158  0007  087F               	movf	127,w
 11159  0008  00F0               	movwf	??_SYS_InterruptHigh
 11160  0009  0870               	movf	??_SYS_InterruptHigh,w
 11161  000A  00FF               	movwf	127
 11162  000B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 11163  000C  0009               	retfie
 11164  000D                     __end_of_SYS_InterruptHigh:	
 11165  007E                     btemp	set	126	;btemp
 11166  007E                     int$flags	set	126
 11167  007E                     wtemp	set	126
 11168  007E                     wtemp0	set	126
 11169  0080                     wtemp1	set	128
 11170  0082                     wtemp2	set	130
 11171  0084                     wtemp3	set	132
 11172  0086                     wtemp4	set	134
 11173  0088                     wtemp5	set	136
 11174  007F                     wtemp6	set	127
 11175  007E                     ttemp	set	126
 11176  007E                     ttemp0	set	126
 11177  0081                     ttemp1	set	129
 11178  0084                     ttemp2	set	132
 11179  0087                     ttemp3	set	135
 11180  007F                     ttemp4	set	127
 11181  007E                     ltemp	set	126
 11182  007E                     ltemp0	set	126
 11183  0082                     ltemp1	set	130
 11184  0086                     ltemp2	set	134
 11185  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    252
    Data        0
    BSS         214
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            32     25      32
    BANK1            16      0      16
    BANK2            80      0      73
    BANK3            76      0      39
    BANK4            80      0      78
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(1) Largest target is 32
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK1[1]), BDT(BANK0[32]), NULL(NULL[0]), 

    memset@p1	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    memset@p	PTR unsigned char  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    sp__memset	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> midiData(BANK3[4]), ReceivedDataBuffer(BANK1[64]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    S1173$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S1163$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S1163$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S1139$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S1139$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S1139$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S1139$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    scan_task@velocity	PTR unsigned char  size(1) Largest target is 1
		 -> APP_DeviceAudioMIDITasks@velocity(BANK0[1]), 

    scan_task@note	PTR unsigned char  size(1) Largest target is 1
		 -> APP_DeviceAudioMIDITasks@scan_pitch(BANK0[1]), 

    sp__USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBRxHandle	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBTxHandle	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[26]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 101
		 -> configDescriptor1(CODE[101]), 


Critical Paths under _main in COMMON

    _USBDeviceTasks->_USBSuspend
    _USBDeviceTasks->_USBWakeFromSuspend
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdSetCfgHandler
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _APP_DeviceAudioMIDIInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _SYSTEM_Initialize->_LED_Enable
    _APP_DeviceAudioMIDITasks->_scan_task
    _scan_task->_store_key_level
    _store_key_level->_process_level
    _process_level->_LED_Off
    _process_level->_LED_On
    _SendMidiData->_SPI_Exchange8bit

Critical Paths under _SYS_InterruptHigh in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_APP_DeviceAudioMIDITasks
    _main->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_APP_DeviceAudioMIDIInitialize
    _APP_DeviceAudioMIDIInitialize->_USBEnableEndpoint
    _APP_DeviceAudioMIDITasks->_scan_task
    _store_key_level->_process_level

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   42700
           _APP_DeviceAudioMIDITasks
                       _BLEDeviceInt
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       3     3      0   38792
                                             22 BANK0      3     3      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   1     1      0    5239
                                             11 COMMON     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           1     1      0    5239
                                             11 COMMON     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        5     5      0     272
                                              1 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     4     4      0   22735
                                             18 BANK0      4     4      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               1     1      0   22407
                                             17 BANK0      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             2     2      0      92
                                              6 COMMON     2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              4 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   1     1      0   17076
                                             16 BANK0      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  5     5      0    5998
                                             11 COMMON     1     1      0
                                             10 BANK0      4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               7     3      4     524
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               2     2      0      46
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  3     3      0       0
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0    5793
                                             10 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      5     0      5    5239
                                              5 BANK0      5     0      5
      _APP_DeviceAudioMIDIInitialize
      _APP_DeviceAudioMIDISOFHandler
             _APP_LEDUpdateUSBStatus
 ---------------------------------------------------------------------------------
 (3) _APP_LEDUpdateUSBStatus                               0     0      0      44
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceAudioMIDISOFHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceAudioMIDIInitialize                        2     2      0    2044
                                              3 BANK0      2     2      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    6     5      1     644
                                              8 COMMON     3     2      1
                                              0 BANK0      3     3      0
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 7     6      1     400
                                              1 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 2     2      0     114
                                              7 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  4     4      0     114
                                              3 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  3     3      0     115
                                              4 COMMON     3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  3     3      0      92
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      44
                                              2 COMMON     1     1      0
                         _LED_Enable
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BLEDeviceInt                                         0     0      0       0
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceAudioMIDITasks                             8     8      0    3592
                                             17 BANK0      8     8      0
                       _SendMidiData
               _USBTransferOnePacket
                          _scan_task
 ---------------------------------------------------------------------------------
 (2) _scan_task                                            7     6      1    1600
                                             11 COMMON     1     1      0
                                             11 BANK0      6     5      1
                            _get_adc
                           _get_data
                       _is_adc_ready
                     _is_end_of_scan
                            _run_adc
                          _scan_init
                 _set_clock_and_data
                          _set_timer
                    _store_key_level
                  _waiting_for_timer
 ---------------------------------------------------------------------------------
 (3) _waiting_for_timer                                    1     1      0      24
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _store_key_level                                      4     3      1     892
                                              7 COMMON     4     3      1
                            _get_adc (ARG)
                     _is_end_of_scan (ARG)
                      _process_level
 ---------------------------------------------------------------------------------
 (4) _process_level                                       16    14      2     737
                                              2 COMMON     5     3      2
                                              0 BANK0     11    11      0
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (4) _LED_On                                               1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LED_Off                                              1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _set_timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _set_clock_and_data                                   2     1      1     400
                                              1 COMMON     2     1      1
                           _get_data (ARG)
 ---------------------------------------------------------------------------------
 (3) _scan_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _run_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _is_end_of_scan                                       3     3      0      23
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _is_adc_ready                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get_data                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 8     4      4    1400
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _SendMidiData                                         4     3      1     446
                                              4 COMMON     4     3      1
     _SPI_ClearReceiveOverflowStatus
      _SPI_ClearWriteCollisionStatus
                   _SPI_Exchange8bit
      _SPI_HasReceiveOverflowOccured
       _SPI_HasWriteCollisionOccured
 ---------------------------------------------------------------------------------
 (3) _SPI_HasWriteCollisionOccured                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SPI_HasReceiveOverflowOccured                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SPI_Exchange8bit                                     3     3      0      23
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _SPI_ClearWriteCollisionStatus                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SPI_ClearReceiveOverflowStatus                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SYS_InterruptHigh                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceAudioMIDITasks
     _SendMidiData
       _SPI_ClearReceiveOverflowStatus
       _SPI_ClearWriteCollisionStatus
       _SPI_Exchange8bit
       _SPI_HasReceiveOverflowOccured
       _SPI_HasWriteCollisionOccured
     _USBTransferOnePacket
     _scan_task
       _get_adc
       _get_data
       _is_adc_ready
       _is_end_of_scan
       _run_adc
       _scan_init
       _set_clock_and_data
         _get_data (ARG)
       _set_timer
       _store_key_level
         _get_adc (ARG)
         _is_end_of_scan (ARG)
         _process_level (ARG)
           _LED_Off
           _LED_On
       _waiting_for_timer
   _BLEDeviceInt
     _PIN_MANAGER_Initialize
     _SPI_Initialize
   _SYSTEM_Initialize
     _LED_Enable
   _USBDeviceInit
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceAudioMIDIInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceAudioMIDISOFHandler
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceAudioMIDIInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceAudioMIDISOFHandler
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceAudioMIDIInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceAudioMIDISOFHandler
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceAudioMIDIInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceAudioMIDISOFHandler
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
     _USBDeviceInit
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceAudioMIDIInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceAudioMIDISOFHandler
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceAudioMIDIInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceAudioMIDISOFHandler
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceAudioMIDIInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceAudioMIDISOFHandler
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On

 _SYS_InterruptHigh (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            20      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               20     19      20       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10      0      10       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      49       9       91.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            4C      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               4C      0      27      11       51.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4E      13       97.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      FB      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      FB      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat May 21 21:35:53 2016

                          _SPI_Initialize 0920                                _USB_SD_Ptr 0168  
                                       pc 0002                               __CFG_CP$OFF 0000  
                                      l14 09B9                                        l68 0A27  
                                      l88 0BBE                               ?_LED_Enable 0070  
                           _USBDeviceInit 05B3      USER_USB_CALLBACK_EVENT_HANDLER@event 0055  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 0057                                       l400 0A0C  
                                     l401 0A0F                                       l403 0A1C  
             __end_of_USBStdGetDscHandler 1000                                       l360 09F3  
                                     l361 09F6                                       l370 09DA  
                                     l371 09DD                                       l363 0A03  
                                     l268 051B                                       l373 09EA  
                                     l357 09ED                                       l367 09D4  
                                     l359 09F0                                       l711 0CCD  
                                     l712 0C9A                                       l369 09D7  
                                     l713 0C9D                                       l643 072F  
                                     l708 0C91                                       l564 05F6  
                                     l397 0A06                                       l581 036E  
                                     l806 0100                                       l590 03CC  
                                     l399 0A09                                       l671 0671  
                                     l591 0424                                       l575 0345  
                                     l656 0EBF                                       l592 03D5  
                                     l577 0349                                       l770 0DD2  
                                     l586 03A5                                       l851 0B19  
                                     l772 0D86                                       _BDT 0020  
                                     l909 07FB                                       l781 0DB0  
                                     l758 0E34                                       l847 0B13  
                                     l793 0097                                       l794 0098  
                                     _UIE 0E92                                       _UIR 0E90  
                  _APP_LEDUpdateUSBStatus 0C40                                _USBSuspend 098B  
                        SendMidiData@tone 0076                      USBStdSetCfgHandler@i 005D  
                    USBStdSetCfgHandler@p 005A                               _USBRxHandle 00E7  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                          _USBDeviceTasks 0338                            _USBDeviceState 006C  
                             _USBTxHandle 00E8                      __end_of_BLEDeviceInt 092C  
                                    S5090 0826                                      S5092 081A  
                                    S5084 0800                                      S5094 0830  
                                    S5096 083A                     ??_USBCtrlTrfRxService 0073  
                USBEnableEndpoint@options 0078                              __CFG_LVP$OFF 0000  
                         __end_of_LED_Off 09EB                                      l3100 0C51  
                                    l3024 0BEC                                      l3112 0C6B  
                                    l3104 0C5C                                      l3034 09E0  
                                    l3122 0C81                                      l3044 09F9  
                                    l3204 0F0D                                      l3116 0C76  
                                    l3108 0C61                                      l3124 0C87  
                                    l3212 0A3B                                      l3230 0E5F  
                                    l3054 0A91                                      l3074 0CF1  
                                    l3066 0CE3                                      l3058 0A99  
                                    l3330 0F8C                                      l4042 0AC8  
                                    l3084 0D1F                                      l3340 0FC9  
                                    l3332 0F96                                      l4044 0ACA  
              USBConfigureEndpoint@handle 0077                                      l3510 04F8  
                                    l3502 04DF                                      l3174 0EB8  
                                    l3350 0FF0                                      l3342 0FCC  
                                    l3262 0D51                                      l3504 04EA  
                                    l3512 04FB                                      l4232 0270  
                                    l3096 0C47                                      l4226 0257  
                                    l3186 0ED7                                      l3194 0EF0  
                                    l3354 0FF3                                      l3266 0D63  
                                    l4228 025A                                      l3196 0EF4  
                                    l3348 0FED                                      l3524 0700  
                                    l4094 09AE                                      l3366 0CA9  
                                    l4256 02DB                                      l4248 02C1  
                                    l4088 09A4                                      l3376 0CC1  
                                    l4600 07DD                                      l3528 0704  
                                    l3490 04AB                                      l3474 0464  
                                    l4274 0316                                      l4258 02DE  
                                    l4530 0B87                                      l3546 073C  
                                    l3554 0746                                      l3492 04AC  
                                    l3812 0E27                                      l3734 0B7E  
                                    l5086 0B9F                                      l4534 0B8D  
                                    l4542 0B96                                      l4630 007D  
                                    l4614 004F                                      l4702 0D9E  
                                    l3736 0B7F                                      l3808 0E17  
                                    l3584 0679                                      l5088 0BB9  
                                    l4536 0B90                                      l4616 0051  
                                    l4560 077E                                      l4704 0DA1  
                                    l4720 0DC7                                      l3842 0A12  
                                    l3586 0691                                      l3770 0B2F  
                                    l4538 0B93                                      l4650 00C2  
                                    l4706 0DA4                                      l4802 0F64  
                                    l3914 0638                                      l3692 0961  
                                    l3596 06BA                                      l4716 0DBC  
                                    l3908 0619                                      l3598 06C6  
                                    l3782 0B54                                      l4654 00CB  
                                    l4638 00A3                                      l4806 0F73  
                                    l4830 034C                                      l3960 056B  
                                    l3952 0552                                      l3944 0530  
                                    l4680 012C                                      l4664 00EF  
                                    l4648 00BB                                      l4584 07B5  
                                    l4568 078E                                      l4808 0F76  
                                    l3962 0572                                      l3938 0523  
                                    l3970 058E                                      l4674 0106  
                                    l4666 00F4                                      l4578 07A1  
                                    l4690 0D8E                                      l3874 05DD  
                                    l3866 05D1                                      l3858 05C1  
                                    l4762 0A61                                      l4850 0368  
                                    l4842 035B                                      l3956 0563  
                                    l3948 053F                                      l3972 0599  
                                    l3796 0DEC                                      l4692 0D91  
                                    l4764 0A68                                      l4924 040C  
                                    l3966 0583                                      l3798 0DF1  
                                    l4678 0124                                      l4694 0D94  
                                    l3886 05FB                                      l4926 041B  
                                    l4918 03F3                                      l4862 037E  
                                    l3992 0B10                                      l4890 03B2  
                                    l4874 0396                                      l3988 0B07  
                                    l4796 0F3F                                      l4884 03AB  
                                    l4868 0384                                      l4898 03C5  
                                    u3000 096B                                      u3020 0973  
                                    u3014 096D                                      u3040 0981  
                                    u2065 0BC7                                      u3050 0982  
                                    u2075 0BCD                                      u2085 0BD5  
                                    u3320 05B1                                      u3090 0B84  
                                    u2355 0D5A                                      u3235 05E0  
                                    u2700 0449                                      u2800 04B5  
                                    u2720 0482                                      u2810 04C1  
                                    u2802 04B6                                      u2730 0483  
                                    u2812 04C2                                      u2740 0495  
                                    u4325 0F20                                      u2750 0496  
                                    u2670 0435                                      u2680 0436  
                                    u2690 0448                                      u2925 066B  
                   ??_USBCtrlTrfTxService 0071                                      _UCFG 0E91  
                                    _UEP0 0E98                                      _UEP1 0E99  
                                    _UEIE 0E97                                      _UEIR 0E93  
                                    _UCON 0E8E                                      _TMR0 0015  
                            __CFG_WRT$OFF 0000    USBStdFeatureReqHandler@current_ep_data 005E  
                                    _pDst 0164                                      _main 0A1D  
                                    fsr0h 0005                                      fsr1h 0007  
                                    fsr0l 0004                                      indf0 0000  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                                    ltemp 007E                                      start 000D  
                                    ttemp 007E                                      wtemp 007E  
                           __CFG_IESO$OFF 0000                process_level@current_state 0052  
                  __end_of_SPI_Initialize 0926                      process_level@idx_key 005A  
              __end_of_USBCheckStdRequest 0DD3                    ??_USBCtrlTrfOutHandler 0077  
                           __CFG_MCLRE$ON 0000                       USBDeviceInit@i_1708 0074  
               ??_USBStdFeatureReqHandler 005A                      process_level@on_flag 0058  
                ??_USBStdGetStatusHandler 0071                            ?_USBDeviceInit 0070  
             process_level@key_on_counter 0247                                     ?_main 0070  
                           __CFG_WDTE$OFF 0000         __size_of_USBCtrlEPServiceComplete 0086  
                  __end_of_USBDeviceTasks 0427                 ?_USBCtrlEPServiceComplete 0070  
                                   _UADDR 0E96                                     _RCREG 0199  
                                   _RCSTA 019D                                     _USTAT 0E8F  
                                   _TXREG 019A                                     _TXSTA 019E  
         ??_SPI_ClearWriteCollisionStatus 0071        __size_of_USBCtrlEPAllowStatusStage 0068  
                          __CFG_FCMEN$OFF 0000                           __end_of_get_adc 0910  
         __end_of_USBCtrlEPAllowDataStage 0D7E                                     _sd000 0239  
                                   _sd001 01D9                                     _sd002 020D  
          ?_USBIncrement1msInternalTimers 0070                             ?_is_adc_ready 0070  
   __end_of_APP_DeviceAudioMIDIInitialize 0AF9    __size_of_APP_DeviceAudioMIDIInitialize 002A  
           _APP_DeviceAudioMIDIInitialize 0ACF                           _store_key_level 0B56  
             __size_of_set_clock_and_data 0012                                     _pitch 00EC  
                         ??_process_level 0074                                     ltemp0 007E  
                                   ltemp1 0082                                     ltemp2 0086  
                                   ltemp3 0080                       __size_of_LED_Enable 0019  
                         __end_of_run_adc 0940                                     ttemp0 007E  
                                   ttemp1 0081                                     ttemp2 0084  
                                   ttemp3 0087                                     ttemp4 007F  
      APP_DeviceAudioMIDITasks@scan_pitch 0067                                     status 0003  
                                   wtemp0 007E                                     wtemp1 0080  
                                   wtemp2 0082                                     wtemp3 0084  
                                   wtemp4 0086                                     wtemp5 0088  
                                   wtemp6 007F                           ?_SPI_Initialize 0070  
            __size_of_USBStdSetCfgHandler 007F                     process_level@off_flag 0056  
                         __initialization 000F            ?_SPI_HasReceiveOverflowOccured 0070  
              is_end_of_scan@scan_counter 0167                              __end_of_main 0A36  
              ??_APP_DeviceAudioMIDITasks 0061                            __CFG_LPBOR$OFF 0000  
                           scan_task@note 0060                 __size_of_USBCtrlEPService 0070  
                                  ??_main 007C                           ?_USBDeviceTasks 0070  
   __end_ofprocess_level@key_on_threshold 0173             process_level@key_on_threshold 0172  
                             ?_USBSuspend 0070                                 ??_LED_Off 0071  
                     __CFG_USBLSCLK$48MHz 0000                            ??_is_adc_ready 0071  
                __end_of_SPI_Exchange8bit 07FF                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _ADCON2 009F  
                                  _ACTCON 039B                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _ANSELA 018C  
                  SYSTEM_Initialize@state 0072                                    _LED_On 09EB  
                     set_clock_and_data@c 0072                       set_clock_and_data@d 0071  
                                  _OSCCON 0099          ??_SPI_ClearReceiveOverflowStatus 0071  
         ?_SPI_ClearReceiveOverflowStatus 0070                                    _SSPBUF 0211  
                          __CFG_PWRTE$OFF 0000                         _shortPacketStatus 00ED  
                        __end_of_get_data 091A                           USBDeviceTasks@i 0068  
             USBStdFeatureReqHandler@pUEP 005C                  USBTransferOnePacket@data 0072  
              USBCtrlTrfInHandler@lastDTS 0076                           ??_USBDeviceInit 0071  
                          __CFG_STVREN$ON 0000                         _USBEnableEndpoint 0A88  
         __size_of_USBStdGetStatusHandler 004D                                    _memset 0A36  
                           ?_SendMidiData 0074                        ?_USBEnableEndpoint 0078  
                               ??_get_adc 0071                     __size_of_BLEDeviceInt 0006  
                 __end_of_store_key_level 0B86             __size_of_USBTransferOnePacket 0050  
                     ??_USBEnableEndpoint 0079                            process_level@L 0170  
                               ??_run_adc 0071                               _CtrlTrfData 0048  
   __end_of_SPI_ClearWriteCollisionStatus 090D    __size_of_SPI_ClearWriteCollisionStatus 0003  
           _SPI_ClearWriteCollisionStatus 090A                   __size_of_is_end_of_scan 0015  
                    _controlTransferState 00E9                         _SYSTEM_Initialize 09A2  
                 __end_of__initialization 0037                        ?_SYSTEM_Initialize 0070  
                __size_of_USBStallHandler 0024                       __size_of_USBSuspend 0017  
                          __pcstackCOMMON 0070                 __end_of_USBEnableEndpoint 0AAB  
            _APP_DeviceAudioMIDITasks$417 0063              _APP_DeviceAudioMIDITasks$458 0065  
                            _BLEDeviceInt 0926                             __end_of_sd000 023D  
                           __end_of_sd001 020D                             __end_of_sd002 0227  
           ?_SPI_HasWriteCollisionOccured 0070                       ??_SYSTEM_Initialize 0072  
                               LED_On@led 0071          __size_of_USBCtrlEPAllowDataStage 0054  
                              _adc_levels 0220                    process_level@old_level 0072  
                  process_level@new_level 0073                            ??_SendMidiData 0075  
                            ??_LED_Enable 0071             __size_of_USBConfigureEndpoint 003F  
                  process_level@old_state 0050               __end_of_USBCtrlTrfInHandler 0E3A  
                 ?_APP_LEDUpdateUSBStatus 0070                    store_key_level@idx_key 006E  
                  __end_ofprocess_level@L 0171                            _OPTION_REGbits 0095  
                          scan_task@state 0168                store_key_level@end_of_scan 0077  
                ??_USBCtrlTrfSetupHandler 0061                   _USBTicksSinceSuspendEnd 0162  
               __end_of_SYSTEM_Initialize 09BA                    _USBStdGetStatusHandler 0C8D  
                              __pbssBANK0 0069                                __pbssBANK1 00E0  
                              __pbssBANK2 0120                                __pbssBANK3 01A4  
                              __pbssBANK4 0220                                   ?_LED_On 0070  
                      __end_of_LED_Enable 0A1D                      store_key_level@level 007A  
             __size_of_USBWakeFromSuspend 001B                               _pBDTEntryIn 0069  
        __end_of_USBCtrlEPServiceComplete 0773                        __size_of_scan_init 001D  
                              __pmaintext 0A1D                        __size_of_scan_task 00AD  
                    USBCtrlTrfRxService@i 0075                      __end_of_is_adc_ready 0939  
                           LED_Enable@led 0071                           __CFG_PLLMULT$3x 0000  
          __end_of_APP_LEDUpdateUSBStatus 0C8D                                __pintentry 0004  
                                 _BAUDCON 019F                                   ?_memset 0071  
                              _device_dsc 0227                          _USBCtrlEPService 0F11  
                              _ep_data_in 0152                        __size_of_set_timer 000B  
             __end_of_USBCtrlTrfRxService 06ED                        _USBCheckStdRequest 0D7E  
                        ?_store_key_level 0077                         _configDescriptor1 0174  
                       scan_task@velocity 005B                                   _LED_Off 09D2  
             __end_of_USBCtrlTrfTxService 0F11                       _USBStdSetCfgHandler 0773  
                               ?_get_data 0070                       ?_USBCheckStdRequest 0070  
            __size_of_USBStdGetDscHandler 007F                                   _UIEbits 0E92  
                                 _UIRbits 0E90                          ??_SPI_Initialize 0071  
                         __size_of_LED_On 0019                         is_end_of_scan@res 0073  
          APP_LEDUpdateUSBStatus@ledCount 00E5           ??_USBIncrement1msInternalTimers 0071  
                    ?_USBStdSetCfgHandler 0070                __size_of_USBEnableEndpoint 0023  
                    ??_USBCheckStdRequest 0060             __size_of_USBCtrlTrfOutHandler 002F  
                        ??_USBDeviceTasks 0066                         ??_USBStallHandler 0071  
                         __size_of_memset 001A                 __end_of_configDescriptor1 01D9  
                                 __ptext1 0338                                   __ptext2 0A50  
                                 __ptext3 098B                                   __ptext4 0AAB  
                                 __ptext5 09BA                                   __ptext6 05B3  
                                 __ptext7 0F11                                   __ptext8 0BFE  
                                 __ptext9 06ED            ??_SPI_HasWriteCollisionOccured 0071  
                                 _inPipes 00E0                                   _get_adc 090D  
             _USBDeferOUTDataStagePackets 015E                              ??_USBSuspend 007B  
                           _scan_task$872 005C                             _scan_task$876 005E  
                ??_PIN_MANAGER_Initialize 0071                __end_of_set_clock_and_data 0976  
         ??_SPI_HasReceiveOverflowOccured 0071                      SendMidiData@velocity 0074  
                       __end_of_scan_init 0A88                         __end_of_scan_task 05B3  
                       ?_SPI_Exchange8bit 0070                                   _run_adc 0939  
                      __end_of_USB_CD_Ptr 0170                                ??_get_data 0071  
              __size_of_SYSTEM_Initialize 0018           __size_of_USBCtrlTrfSetupHandler 0042  
                                 clrloop0 092D                            _is_end_of_scan 0976  
                    end_of_initialization 0037                        ??_SPI_Exchange8bit 0071  
                    SPI_Exchange8bit@data 0073                        __end_of_USB_SD_Ptr 016E  
                    __end_of_SendMidiData 0B27                       _pBDTEntryEP0OutNext 007C  
                                 memset@c 0071                                   memset@n 0073  
                                 memset@p 0076                     __end_of_process_level 0506  
                         _USB1msTickCount 014E                  ?_USBStdFeatureReqHandler 0070  
                       __end_of_set_timer 0959                     ??_USBStdSetCfgHandler 007B  
                              _note_event 0156                        __end_of_USBSuspend 09A2  
                 _USBCtrlEPAllowDataStage 0D2A                                 _RCSTAbits 019D  
                            __pstringtext 0141                  _USBCtrlEPServiceComplete 06ED  
                              _wait_timer 0166    __end_of_SPI_ClearReceiveOverflowStatus 090A  
 __size_of_SPI_ClearReceiveOverflowStatus 0003            _SPI_ClearReceiveOverflowStatus 0907  
              _USBStatusStageEnabledFlag1 015F                _USBStatusStageEnabledFlag2 0160  
                      USBEnableEndpoint@p 0050                                 _PORTAbits 000C  
                               _PORTBbits 000D            ?_APP_DeviceAudioMIDISOFHandler 0070  
                        __CFG_FOSC$INTOSC 0000                                 _TRISAbits 008C  
                               _TRISBbits 008D                                 _TRISCbits 008E  
                      _ReceivedDataBuffer 00A0                    __end_of_is_end_of_scan 098B  
                      _BothEP0OutUOWNsSet 015A                 USBStdSetCfgHandler@i_2039 005C  
               USBConfigureEndpoint@EPNum 0076         __size_of_APP_DeviceAudioMIDITasks 00FB  
              ?_USBCtrlEPAllowStatusStage 0070                 ?_APP_DeviceAudioMIDITasks 0070  
     USER_USB_CALLBACK_EVENT_HANDLER@size 0058                                 _USTATcopy 006F  
            __end_of_USBTransferOnePacket 0D2A                            __end_of_LED_On 0A04  
                   __size_of_is_adc_ready 0007                   process_level@midi_shift 0173  
             process_level@filtered_state 0059                        __CFG_PLLEN$ENABLED 0000  
                  _USBCtrlTrfSetupHandler 0BFE                   process_level@key_states 0120  
                   __end_of_USBDeviceInit 065B     __end_of_USBIncrement1msInternalTimers 09D2  
  __size_of_USBIncrement1msInternalTimers 0018             _USBIncrement1msInternalTimers 09BA  
                              LED_Off@led 0071                            __end_of_memset 0A50  
                       _USBBusIsSuspended 015C                       start_initialization 000F  
                 ?_USBStdGetStatusHandler 0070             USBCtrlTrfRxService@byteToRead 0076  
         __size_of_PIN_MANAGER_Initialize 0007                           ?_is_end_of_scan 0070  
                          _is_initialized 0163                              _is_adc_ready 0932  
            __end_of_USBConfigureEndpoint 0BFE           __end_of_USBStdFeatureReqHandler 0141  
   __end_of_SPI_HasReceiveOverflowOccured 0920    __size_of_SPI_HasReceiveOverflowOccured 0006  
           _SPI_HasReceiveOverflowOccured 091A                                  ??_LED_On 0071  
       __end_of_USBCtrlEPAllowStatusStage 0EA2                  __end_of_USBCtrlEPService 0F81  
               ??_USBCtrlEPAllowDataStage 0074                            USBDeviceInit@i 0075  
                          USBDeviceInit@p 0072                    _pBDTEntryEP0OutCurrent 006D  
                 USBTransferOnePacket@dir 0071                   USBTransferOnePacket@len 0074  
                     _USBStdGetDscHandler 0F81                                  ??_memset 0075  
  __end_ofprocess_level@key_off_threshold 0172            process_level@key_off_threshold 0171  
                  _USBActiveConfiguration 00EE            __end_of_USBStdGetStatusHandler 0CDA  
               process_level@idx_midi_map 0141                     _waiting_for_timer$816 0071  
                                ?_LED_Off 0070                               __pbssCOMMON 007C  
                               ___latbits 0002                             __pcstackBANK0 0050  
            __size_of_USBCtrlTrfInHandler 0067                     __size_of_SendMidiData 002E  
                    ?_USBStdGetDscHandler 0070                         __size_of_get_data 0005  
              __end_of_USBWakeFromSuspend 0A6B                           _USBStallHandler 0AAB  
                            _pBDTEntryOut 0158            ?_APP_DeviceAudioMIDIInitialize 0070  
                  _PIN_MANAGER_Initialize 0940                              _SendMidiData 0AF9  
                               __pswtext1 0800                                 __pswtext2 0826  
                               __pswtext3 081A                                 __pswtext4 0830  
                               __pswtext5 083A                                  ?_get_adc 0070  
                    _USBTransferOnePacket 0CDA                                 _msCounter 00EB  
            process_level@key_off_counter 01A4              __end_of_USBCtrlTrfOutHandler 0B56  
                   ??_USBStdGetDscHandler 0071                               _ep_data_out 0154  
                                ?_run_adc 0070              __size_of_USBCtrlTrfRxService 0092  
           USBConfigureEndpoint@direction 0071                  __size_of_store_key_level 0030  
                               _scan_init 0A6B                                 _scan_task 0506  
            __size_of_USBCtrlTrfTxService 006F                                  _LATBbits 010D  
                                _LATCbits 010E                ??_USBCtrlEPServiceComplete 0076  
                               clear_ram0 092C                        _set_clock_and_data 0964  
                                _PIE1bits 0091                                  _PIE2bits 0092  
                       _waiting_for_timer 0959                                  _PIR2bits 0012  
               USBCtrlEPService@setup_cnt 0065                 __size_of_SPI_Exchange8bit 000D  
                      ?_waiting_for_timer 0070                                 _set_timer 094E  
                                _UEP0bits 0E98                    SendMidiData@timeout_ms 0077  
              _USBDeferINDataStagePackets 015D                                  _SSP1CON1 0215  
                                _SSP1CON3 0217               __size_of_USBCheckStdRequest 0055  
                     ?_set_clock_and_data 0071                                  _SSP1STAT 0214  
                                _UCONbits 0E8E                      _USBConfigureEndpoint 0BBF  
         __end_ofprocess_level@midi_shift 0174          __size_of_USBStdFeatureReqHandler 0106  
        __end_of_APP_DeviceAudioMIDITasks 0338                       ??_waiting_for_timer 0071  
                              _ADCON0bits 009D                                _ADCON1bits 009E  
                              _ADCON2bits 009F                     ?_USBTransferOnePacket 0071  
                       _SYS_InterruptHigh 0004                              _RemoteWakeup 015B  
                        __size_of_LED_Off 0019                        ?_SYS_InterruptHigh 0070  
                 __end_of_USBStallHandler 0ACF                         _process_level$853 0057  
                       _process_level$854 0054                      ??_set_clock_and_data 0072  
             ??_USBCtrlEPAllowStatusStage 0071               __end_of_USBStdSetCfgHandler 07F2  
                              ?_scan_init 0070                                ?_scan_task 005B  
                     ??_SYS_InterruptHigh 0070                 __end_of_waiting_for_timer 0964  
         ??_APP_DeviceAudioMIDISOFHandler 0071      __end_of_SPI_HasWriteCollisionOccured 0915  
   __size_of_SPI_HasWriteCollisionOccured 0005              _SPI_HasWriteCollisionOccured 0910  
                      __end_of_device_dsc 0239                  ??_APP_LEDUpdateUSBStatus 0072  
                 ?_USBCtrlTrfSetupHandler 0070                   USBStdGetStatusHandler@p 0072  
          ?_SPI_ClearWriteCollisionStatus 0070                    USBTransferOnePacket@ep 0077  
                           ?_BLEDeviceInt 0070                                ?_set_timer 0070  
                                _SetupPkt 0040                   __size_of_SPI_Initialize 0006  
                   ?_USBConfigureEndpoint 0071                 __end_of_SYS_InterruptHigh 000D  
                        ??_is_end_of_scan 0071                                _ANSELAbits 018C  
                              _ANSELBbits 018D                                _ANSELCbits 018E  
                        __size_of_get_adc 0003                    __size_of_process_level 00DF  
                 __size_of_USBDeviceTasks 00EF                                  __ptext10 0D2A  
                                __ptext11 0D7E                                  __ptext20 0ACF  
                                __ptext12 0773                                  __ptext21 0A88  
                                __ptext13 0A36                                  __ptext30 0926  
                                __ptext22 0BBF                                  __ptext14 0C8D  
                                __ptext31 0920                                  __ptext23 0B27  
                                __ptext15 0F81                                  __ptext40 094E  
                                __ptext32 0940                                  __ptext24 065B  
                                __ptext16 003B                                  __ptext41 0964  
                                __ptext33 023D                                  __ptext25 0E3A  
                                __ptext17 0B86                                  __ptext50 0910  
                                __ptext42 0A6B                                  __ptext34 0506  
                                __ptext26 0DD3                                  __ptext18 0C40  
                                __ptext51 091A                                  __ptext43 0939  
                                __ptext35 0959                                  __ptext27 0EA2  
                                __ptext19 0947                                  __ptext52 07F2  
                                __ptext44 0976                                  __ptext36 0B56  
                                __ptext28 09A2                                  __ptext53 090A  
                                __ptext45 0932                                  __ptext37 0427  
                                __ptext29 0A04                                  __ptext54 0907  
                                __ptext46 0915                                  __ptext38 09EB  
                                __ptext47 090D                                  __ptext39 09D2  
                                __ptext48 0CDA                                  __ptext49 0AF9  
                            _SSP1CON1bits 0215                                  _get_data 0915  
                        __size_of_run_adc 0007                                  _midiData 01A0  
          __end_of_USBCtrlTrfSetupHandler 0C40                             __size_of_main 0019  
                       ?_USBCtrlEPService 0070                        ??_USBCtrlEPService 0062  
                       ??_store_key_level 0078                            ??_BLEDeviceInt 0071  
                     _USBCtrlTrfInHandler 0DD3                                  _outPipes 0147  
                    _USBCtrlTrfOutHandler 0B27                                  int$flags 007E  
               _USBCtrlEPAllowStatusStage 0E3A                                _LED_Enable 0A04  
                            _SSP1STATbits 0214                    ??_USBTransferOnePacket 0075  
               _USBDeferStatusStagePacket 006B                                _INTCONbits 000B  
                    ?_USBCtrlTrfInHandler 0070                  _APP_DeviceAudioMIDITasks 023D  
           USBCtrlTrfTxService@byteToSend 0073                                  memset@p1 0077  
                        ?_USBStallHandler 0070                  USBStdFeatureReqHandler@p 005F  
                                intlevel1 0000                 SPI_Exchange8bit@dummyRead 0072  
                             ??_scan_init 0071                               ??_scan_task 007B  
                  __size_of_USBDeviceInit 00A8   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0BBF  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 0039          ?_USER_USB_CALLBACK_EVENT_HANDLER 0055  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 007B           _USER_USB_CALLBACK_EVENT_HANDLER 0B86  
              __size_of_waiting_for_timer 000B         __end_ofprocess_level@idx_midi_map 0168  
                 ?_PIN_MANAGER_Initialize 0070                         __CFG_CLKOUTEN$OFF 0000  
                           _process_level 0427                               _sentNoteOff 0165  
         __size_of_APP_LEDUpdateUSBStatus 004D                          _SPI_Exchange8bit 07F2  
   __end_of_APP_DeviceAudioMIDISOFHandler 094E    __size_of_APP_DeviceAudioMIDISOFHandler 0007  
           _APP_DeviceAudioMIDISOFHandler 0947                               ??_set_timer 0071  
                  ??_USBConfigureEndpoint 0072                     ?_USBCtrlTrfOutHandler 0070  
                    __CFG_CPUDIV$NOCLKDIV 0000                       _USBCtrlTrfRxService 065B  
                      _USBWakeFromSuspend 0A50                   _USBStdFeatureReqHandler 003B  
                     _USBCtrlTrfTxService 0EA2                __size_of_SYS_InterruptHigh 0009  
         ??_APP_DeviceAudioMIDIInitialize 0053                       ?_USBWakeFromSuspend 0070  
                   ??_USBCtrlTrfInHandler 0074                     _USBAlternateInterface 00EF  
                     USBEnableEndpoint@ep 0052                           _endpoint_number 00EA  
                    ?_USBCtrlTrfRxService 0070            __end_of_PIN_MANAGER_Initialize 0947  
                ?_USBCtrlEPAllowDataStage 0070                      ?_USBCtrlTrfTxService 0070  
                          ?_process_level 0072              _USBStatusStageTimeoutCounter 0161  
                    ??_USBWakeFromSuspend 007B                USBTransferOnePacket@handle 0078  
                              _USB_CD_Ptr 016E          APP_DeviceAudioMIDITasks@velocity 0068  
