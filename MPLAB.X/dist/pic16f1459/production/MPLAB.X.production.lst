

Microchip Technology PIC LITE Macro Assembler V1.20 build 52243 
                                                                                               Fri May 20 15:12:49 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	16F1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	swtext1,local,class=CONST,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	swtext2,local,class=CONST,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	swtext3,local,class=CONST,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	swtext4,local,class=CONST,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,delta=2
    67                           	psect	swtext5,local,class=CONST,delta=2
    68                           	psect	intentry,global,class=CODE,delta=2
    69                           	dabs	1,0x20,32,_BDT
    70                           	dabs	1,0x48,8,_CtrlTrfData
    71                           	dabs	1,0x40,8,_SetupPkt
    72                           	dabs	1,0xA0,64,_ReceivedDataBuffer
    73                           	dabs	1,0x1A0,4,_midiData
    74                           	dabs	1,0x7E,2
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  0111                     	;# 
   122  0112                     	;# 
   123  0113                     	;# 
   124  0114                     	;# 
   125  0115                     	;# 
   126  0116                     	;# 
   127  0117                     	;# 
   128  0118                     	;# 
   129  0119                     	;# 
   130  011D                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  018E                     	;# 
   134  0191                     	;# 
   135  0191                     	;# 
   136  0192                     	;# 
   137  0193                     	;# 
   138  0193                     	;# 
   139  0194                     	;# 
   140  0195                     	;# 
   141  0196                     	;# 
   142  0197                     	;# 
   143  0199                     	;# 
   144  019A                     	;# 
   145  019B                     	;# 
   146  019C                     	;# 
   147  019D                     	;# 
   148  019E                     	;# 
   149  019F                     	;# 
   150  020C                     	;# 
   151  020D                     	;# 
   152  0211                     	;# 
   153  0211                     	;# 
   154  0212                     	;# 
   155  0212                     	;# 
   156  0213                     	;# 
   157  0213                     	;# 
   158  0214                     	;# 
   159  0214                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0215                     	;# 
   163  0216                     	;# 
   164  0216                     	;# 
   165  0217                     	;# 
   166  0217                     	;# 
   167  0391                     	;# 
   168  0392                     	;# 
   169  0393                     	;# 
   170  0394                     	;# 
   171  0395                     	;# 
   172  0396                     	;# 
   173  039A                     	;# 
   174  039B                     	;# 
   175  0611                     	;# 
   176  0612                     	;# 
   177  0613                     	;# 
   178  0613                     	;# 
   179  0614                     	;# 
   180  0615                     	;# 
   181  0616                     	;# 
   182  0616                     	;# 
   183  0691                     	;# 
   184  0692                     	;# 
   185  0693                     	;# 
   186  0694                     	;# 
   187  0695                     	;# 
   188  0E8E                     	;# 
   189  0E8F                     	;# 
   190  0E90                     	;# 
   191  0E91                     	;# 
   192  0E92                     	;# 
   193  0E93                     	;# 
   194  0E94                     	;# 
   195  0E94                     	;# 
   196  0E95                     	;# 
   197  0E96                     	;# 
   198  0E97                     	;# 
   199  0E98                     	;# 
   200  0E99                     	;# 
   201  0E9A                     	;# 
   202  0E9B                     	;# 
   203  0E9C                     	;# 
   204  0E9D                     	;# 
   205  0E9E                     	;# 
   206  0E9F                     	;# 
   207  0FE4                     	;# 
   208  0FE5                     	;# 
   209  0FE6                     	;# 
   210  0FE7                     	;# 
   211  0FE8                     	;# 
   212  0FE9                     	;# 
   213  0FEA                     	;# 
   214  0FEB                     	;# 
   215  0FED                     	;# 
   216  0FEE                     	;# 
   217  0FEF                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0095                     	;# 
   250  0096                     	;# 
   251  0097                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009A                     	;# 
   255  009B                     	;# 
   256  009B                     	;# 
   257  009C                     	;# 
   258  009D                     	;# 
   259  009E                     	;# 
   260  009F                     	;# 
   261  010C                     	;# 
   262  010D                     	;# 
   263  010E                     	;# 
   264  0111                     	;# 
   265  0112                     	;# 
   266  0113                     	;# 
   267  0114                     	;# 
   268  0115                     	;# 
   269  0116                     	;# 
   270  0117                     	;# 
   271  0118                     	;# 
   272  0119                     	;# 
   273  011D                     	;# 
   274  018C                     	;# 
   275  018D                     	;# 
   276  018E                     	;# 
   277  0191                     	;# 
   278  0191                     	;# 
   279  0192                     	;# 
   280  0193                     	;# 
   281  0193                     	;# 
   282  0194                     	;# 
   283  0195                     	;# 
   284  0196                     	;# 
   285  0197                     	;# 
   286  0199                     	;# 
   287  019A                     	;# 
   288  019B                     	;# 
   289  019C                     	;# 
   290  019D                     	;# 
   291  019E                     	;# 
   292  019F                     	;# 
   293  020C                     	;# 
   294  020D                     	;# 
   295  0211                     	;# 
   296  0211                     	;# 
   297  0212                     	;# 
   298  0212                     	;# 
   299  0213                     	;# 
   300  0213                     	;# 
   301  0214                     	;# 
   302  0214                     	;# 
   303  0215                     	;# 
   304  0215                     	;# 
   305  0215                     	;# 
   306  0216                     	;# 
   307  0216                     	;# 
   308  0217                     	;# 
   309  0217                     	;# 
   310  0391                     	;# 
   311  0392                     	;# 
   312  0393                     	;# 
   313  0394                     	;# 
   314  0395                     	;# 
   315  0396                     	;# 
   316  039A                     	;# 
   317  039B                     	;# 
   318  0611                     	;# 
   319  0612                     	;# 
   320  0613                     	;# 
   321  0613                     	;# 
   322  0614                     	;# 
   323  0615                     	;# 
   324  0616                     	;# 
   325  0616                     	;# 
   326  0691                     	;# 
   327  0692                     	;# 
   328  0693                     	;# 
   329  0694                     	;# 
   330  0695                     	;# 
   331  0E8E                     	;# 
   332  0E8F                     	;# 
   333  0E90                     	;# 
   334  0E91                     	;# 
   335  0E92                     	;# 
   336  0E93                     	;# 
   337  0E94                     	;# 
   338  0E94                     	;# 
   339  0E95                     	;# 
   340  0E96                     	;# 
   341  0E97                     	;# 
   342  0E98                     	;# 
   343  0E99                     	;# 
   344  0E9A                     	;# 
   345  0E9B                     	;# 
   346  0E9C                     	;# 
   347  0E9D                     	;# 
   348  0E9E                     	;# 
   349  0E9F                     	;# 
   350  0FE4                     	;# 
   351  0FE5                     	;# 
   352  0FE6                     	;# 
   353  0FE7                     	;# 
   354  0FE8                     	;# 
   355  0FE9                     	;# 
   356  0FEA                     	;# 
   357  0FEB                     	;# 
   358  0FED                     	;# 
   359  0FEE                     	;# 
   360  0FEF                     	;# 
   361  0000                     	;# 
   362  0001                     	;# 
   363  0002                     	;# 
   364  0003                     	;# 
   365  0004                     	;# 
   366  0005                     	;# 
   367  0006                     	;# 
   368  0007                     	;# 
   369  0008                     	;# 
   370  0009                     	;# 
   371  000A                     	;# 
   372  000B                     	;# 
   373  000C                     	;# 
   374  000D                     	;# 
   375  000E                     	;# 
   376  0011                     	;# 
   377  0012                     	;# 
   378  0015                     	;# 
   379  0016                     	;# 
   380  0016                     	;# 
   381  0017                     	;# 
   382  0018                     	;# 
   383  0019                     	;# 
   384  001A                     	;# 
   385  001B                     	;# 
   386  001C                     	;# 
   387  008C                     	;# 
   388  008D                     	;# 
   389  008E                     	;# 
   390  0091                     	;# 
   391  0092                     	;# 
   392  0095                     	;# 
   393  0096                     	;# 
   394  0097                     	;# 
   395  0098                     	;# 
   396  0099                     	;# 
   397  009A                     	;# 
   398  009B                     	;# 
   399  009B                     	;# 
   400  009C                     	;# 
   401  009D                     	;# 
   402  009E                     	;# 
   403  009F                     	;# 
   404  010C                     	;# 
   405  010D                     	;# 
   406  010E                     	;# 
   407  0111                     	;# 
   408  0112                     	;# 
   409  0113                     	;# 
   410  0114                     	;# 
   411  0115                     	;# 
   412  0116                     	;# 
   413  0117                     	;# 
   414  0118                     	;# 
   415  0119                     	;# 
   416  011D                     	;# 
   417  018C                     	;# 
   418  018D                     	;# 
   419  018E                     	;# 
   420  0191                     	;# 
   421  0191                     	;# 
   422  0192                     	;# 
   423  0193                     	;# 
   424  0193                     	;# 
   425  0194                     	;# 
   426  0195                     	;# 
   427  0196                     	;# 
   428  0197                     	;# 
   429  0199                     	;# 
   430  019A                     	;# 
   431  019B                     	;# 
   432  019C                     	;# 
   433  019D                     	;# 
   434  019E                     	;# 
   435  019F                     	;# 
   436  020C                     	;# 
   437  020D                     	;# 
   438  0211                     	;# 
   439  0211                     	;# 
   440  0212                     	;# 
   441  0212                     	;# 
   442  0213                     	;# 
   443  0213                     	;# 
   444  0214                     	;# 
   445  0214                     	;# 
   446  0215                     	;# 
   447  0215                     	;# 
   448  0215                     	;# 
   449  0216                     	;# 
   450  0216                     	;# 
   451  0217                     	;# 
   452  0217                     	;# 
   453  0391                     	;# 
   454  0392                     	;# 
   455  0393                     	;# 
   456  0394                     	;# 
   457  0395                     	;# 
   458  0396                     	;# 
   459  039A                     	;# 
   460  039B                     	;# 
   461  0611                     	;# 
   462  0612                     	;# 
   463  0613                     	;# 
   464  0613                     	;# 
   465  0614                     	;# 
   466  0615                     	;# 
   467  0616                     	;# 
   468  0616                     	;# 
   469  0691                     	;# 
   470  0692                     	;# 
   471  0693                     	;# 
   472  0694                     	;# 
   473  0695                     	;# 
   474  0E8E                     	;# 
   475  0E8F                     	;# 
   476  0E90                     	;# 
   477  0E91                     	;# 
   478  0E92                     	;# 
   479  0E93                     	;# 
   480  0E94                     	;# 
   481  0E94                     	;# 
   482  0E95                     	;# 
   483  0E96                     	;# 
   484  0E97                     	;# 
   485  0E98                     	;# 
   486  0E99                     	;# 
   487  0E9A                     	;# 
   488  0E9B                     	;# 
   489  0E9C                     	;# 
   490  0E9D                     	;# 
   491  0E9E                     	;# 
   492  0E9F                     	;# 
   493  0FE4                     	;# 
   494  0FE5                     	;# 
   495  0FE6                     	;# 
   496  0FE7                     	;# 
   497  0FE8                     	;# 
   498  0FE9                     	;# 
   499  0FEA                     	;# 
   500  0FEB                     	;# 
   501  0FED                     	;# 
   502  0FEE                     	;# 
   503  0FEF                     	;# 
   504  0000                     	;# 
   505  0001                     	;# 
   506  0002                     	;# 
   507  0003                     	;# 
   508  0004                     	;# 
   509  0005                     	;# 
   510  0006                     	;# 
   511  0007                     	;# 
   512  0008                     	;# 
   513  0009                     	;# 
   514  000A                     	;# 
   515  000B                     	;# 
   516  000C                     	;# 
   517  000D                     	;# 
   518  000E                     	;# 
   519  0011                     	;# 
   520  0012                     	;# 
   521  0015                     	;# 
   522  0016                     	;# 
   523  0016                     	;# 
   524  0017                     	;# 
   525  0018                     	;# 
   526  0019                     	;# 
   527  001A                     	;# 
   528  001B                     	;# 
   529  001C                     	;# 
   530  008C                     	;# 
   531  008D                     	;# 
   532  008E                     	;# 
   533  0091                     	;# 
   534  0092                     	;# 
   535  0095                     	;# 
   536  0096                     	;# 
   537  0097                     	;# 
   538  0098                     	;# 
   539  0099                     	;# 
   540  009A                     	;# 
   541  009B                     	;# 
   542  009B                     	;# 
   543  009C                     	;# 
   544  009D                     	;# 
   545  009E                     	;# 
   546  009F                     	;# 
   547  010C                     	;# 
   548  010D                     	;# 
   549  010E                     	;# 
   550  0111                     	;# 
   551  0112                     	;# 
   552  0113                     	;# 
   553  0114                     	;# 
   554  0115                     	;# 
   555  0116                     	;# 
   556  0117                     	;# 
   557  0118                     	;# 
   558  0119                     	;# 
   559  011D                     	;# 
   560  018C                     	;# 
   561  018D                     	;# 
   562  018E                     	;# 
   563  0191                     	;# 
   564  0191                     	;# 
   565  0192                     	;# 
   566  0193                     	;# 
   567  0193                     	;# 
   568  0194                     	;# 
   569  0195                     	;# 
   570  0196                     	;# 
   571  0197                     	;# 
   572  0199                     	;# 
   573  019A                     	;# 
   574  019B                     	;# 
   575  019C                     	;# 
   576  019D                     	;# 
   577  019E                     	;# 
   578  019F                     	;# 
   579  020C                     	;# 
   580  020D                     	;# 
   581  0211                     	;# 
   582  0211                     	;# 
   583  0212                     	;# 
   584  0212                     	;# 
   585  0213                     	;# 
   586  0213                     	;# 
   587  0214                     	;# 
   588  0214                     	;# 
   589  0215                     	;# 
   590  0215                     	;# 
   591  0215                     	;# 
   592  0216                     	;# 
   593  0216                     	;# 
   594  0217                     	;# 
   595  0217                     	;# 
   596  0391                     	;# 
   597  0392                     	;# 
   598  0393                     	;# 
   599  0394                     	;# 
   600  0395                     	;# 
   601  0396                     	;# 
   602  039A                     	;# 
   603  039B                     	;# 
   604  0611                     	;# 
   605  0612                     	;# 
   606  0613                     	;# 
   607  0613                     	;# 
   608  0614                     	;# 
   609  0615                     	;# 
   610  0616                     	;# 
   611  0616                     	;# 
   612  0691                     	;# 
   613  0692                     	;# 
   614  0693                     	;# 
   615  0694                     	;# 
   616  0695                     	;# 
   617  0E8E                     	;# 
   618  0E8F                     	;# 
   619  0E90                     	;# 
   620  0E91                     	;# 
   621  0E92                     	;# 
   622  0E93                     	;# 
   623  0E94                     	;# 
   624  0E94                     	;# 
   625  0E95                     	;# 
   626  0E96                     	;# 
   627  0E97                     	;# 
   628  0E98                     	;# 
   629  0E99                     	;# 
   630  0E9A                     	;# 
   631  0E9B                     	;# 
   632  0E9C                     	;# 
   633  0E9D                     	;# 
   634  0E9E                     	;# 
   635  0E9F                     	;# 
   636  0FE4                     	;# 
   637  0FE5                     	;# 
   638  0FE6                     	;# 
   639  0FE7                     	;# 
   640  0FE8                     	;# 
   641  0FE9                     	;# 
   642  0FEA                     	;# 
   643  0FEB                     	;# 
   644  0FED                     	;# 
   645  0FEE                     	;# 
   646  0FEF                     	;# 
   647  0000                     	;# 
   648  0001                     	;# 
   649  0002                     	;# 
   650  0003                     	;# 
   651  0004                     	;# 
   652  0005                     	;# 
   653  0006                     	;# 
   654  0007                     	;# 
   655  0008                     	;# 
   656  0009                     	;# 
   657  000A                     	;# 
   658  000B                     	;# 
   659  000C                     	;# 
   660  000D                     	;# 
   661  000E                     	;# 
   662  0011                     	;# 
   663  0012                     	;# 
   664  0015                     	;# 
   665  0016                     	;# 
   666  0016                     	;# 
   667  0017                     	;# 
   668  0018                     	;# 
   669  0019                     	;# 
   670  001A                     	;# 
   671  001B                     	;# 
   672  001C                     	;# 
   673  008C                     	;# 
   674  008D                     	;# 
   675  008E                     	;# 
   676  0091                     	;# 
   677  0092                     	;# 
   678  0095                     	;# 
   679  0096                     	;# 
   680  0097                     	;# 
   681  0098                     	;# 
   682  0099                     	;# 
   683  009A                     	;# 
   684  009B                     	;# 
   685  009B                     	;# 
   686  009C                     	;# 
   687  009D                     	;# 
   688  009E                     	;# 
   689  009F                     	;# 
   690  010C                     	;# 
   691  010D                     	;# 
   692  010E                     	;# 
   693  0111                     	;# 
   694  0112                     	;# 
   695  0113                     	;# 
   696  0114                     	;# 
   697  0115                     	;# 
   698  0116                     	;# 
   699  0117                     	;# 
   700  0118                     	;# 
   701  0119                     	;# 
   702  011D                     	;# 
   703  018C                     	;# 
   704  018D                     	;# 
   705  018E                     	;# 
   706  0191                     	;# 
   707  0191                     	;# 
   708  0192                     	;# 
   709  0193                     	;# 
   710  0193                     	;# 
   711  0194                     	;# 
   712  0195                     	;# 
   713  0196                     	;# 
   714  0197                     	;# 
   715  0199                     	;# 
   716  019A                     	;# 
   717  019B                     	;# 
   718  019C                     	;# 
   719  019D                     	;# 
   720  019E                     	;# 
   721  019F                     	;# 
   722  020C                     	;# 
   723  020D                     	;# 
   724  0211                     	;# 
   725  0211                     	;# 
   726  0212                     	;# 
   727  0212                     	;# 
   728  0213                     	;# 
   729  0213                     	;# 
   730  0214                     	;# 
   731  0214                     	;# 
   732  0215                     	;# 
   733  0215                     	;# 
   734  0215                     	;# 
   735  0216                     	;# 
   736  0216                     	;# 
   737  0217                     	;# 
   738  0217                     	;# 
   739  0391                     	;# 
   740  0392                     	;# 
   741  0393                     	;# 
   742  0394                     	;# 
   743  0395                     	;# 
   744  0396                     	;# 
   745  039A                     	;# 
   746  039B                     	;# 
   747  0611                     	;# 
   748  0612                     	;# 
   749  0613                     	;# 
   750  0613                     	;# 
   751  0614                     	;# 
   752  0615                     	;# 
   753  0616                     	;# 
   754  0616                     	;# 
   755  0691                     	;# 
   756  0692                     	;# 
   757  0693                     	;# 
   758  0694                     	;# 
   759  0695                     	;# 
   760  0E8E                     	;# 
   761  0E8F                     	;# 
   762  0E90                     	;# 
   763  0E91                     	;# 
   764  0E92                     	;# 
   765  0E93                     	;# 
   766  0E94                     	;# 
   767  0E94                     	;# 
   768  0E95                     	;# 
   769  0E96                     	;# 
   770  0E97                     	;# 
   771  0E98                     	;# 
   772  0E99                     	;# 
   773  0E9A                     	;# 
   774  0E9B                     	;# 
   775  0E9C                     	;# 
   776  0E9D                     	;# 
   777  0E9E                     	;# 
   778  0E9F                     	;# 
   779  0FE4                     	;# 
   780  0FE5                     	;# 
   781  0FE6                     	;# 
   782  0FE7                     	;# 
   783  0FE8                     	;# 
   784  0FE9                     	;# 
   785  0FEA                     	;# 
   786  0FEB                     	;# 
   787  0FED                     	;# 
   788  0FEE                     	;# 
   789  0FEF                     	;# 
   790  0000                     	;# 
   791  0001                     	;# 
   792  0002                     	;# 
   793  0003                     	;# 
   794  0004                     	;# 
   795  0005                     	;# 
   796  0006                     	;# 
   797  0007                     	;# 
   798  0008                     	;# 
   799  0009                     	;# 
   800  000A                     	;# 
   801  000B                     	;# 
   802  000C                     	;# 
   803  000D                     	;# 
   804  000E                     	;# 
   805  0011                     	;# 
   806  0012                     	;# 
   807  0015                     	;# 
   808  0016                     	;# 
   809  0016                     	;# 
   810  0017                     	;# 
   811  0018                     	;# 
   812  0019                     	;# 
   813  001A                     	;# 
   814  001B                     	;# 
   815  001C                     	;# 
   816  008C                     	;# 
   817  008D                     	;# 
   818  008E                     	;# 
   819  0091                     	;# 
   820  0092                     	;# 
   821  0095                     	;# 
   822  0096                     	;# 
   823  0097                     	;# 
   824  0098                     	;# 
   825  0099                     	;# 
   826  009A                     	;# 
   827  009B                     	;# 
   828  009B                     	;# 
   829  009C                     	;# 
   830  009D                     	;# 
   831  009E                     	;# 
   832  009F                     	;# 
   833  010C                     	;# 
   834  010D                     	;# 
   835  010E                     	;# 
   836  0111                     	;# 
   837  0112                     	;# 
   838  0113                     	;# 
   839  0114                     	;# 
   840  0115                     	;# 
   841  0116                     	;# 
   842  0117                     	;# 
   843  0118                     	;# 
   844  0119                     	;# 
   845  011D                     	;# 
   846  018C                     	;# 
   847  018D                     	;# 
   848  018E                     	;# 
   849  0191                     	;# 
   850  0191                     	;# 
   851  0192                     	;# 
   852  0193                     	;# 
   853  0193                     	;# 
   854  0194                     	;# 
   855  0195                     	;# 
   856  0196                     	;# 
   857  0197                     	;# 
   858  0199                     	;# 
   859  019A                     	;# 
   860  019B                     	;# 
   861  019C                     	;# 
   862  019D                     	;# 
   863  019E                     	;# 
   864  019F                     	;# 
   865  020C                     	;# 
   866  020D                     	;# 
   867  0211                     	;# 
   868  0211                     	;# 
   869  0212                     	;# 
   870  0212                     	;# 
   871  0213                     	;# 
   872  0213                     	;# 
   873  0214                     	;# 
   874  0214                     	;# 
   875  0215                     	;# 
   876  0215                     	;# 
   877  0215                     	;# 
   878  0216                     	;# 
   879  0216                     	;# 
   880  0217                     	;# 
   881  0217                     	;# 
   882  0391                     	;# 
   883  0392                     	;# 
   884  0393                     	;# 
   885  0394                     	;# 
   886  0395                     	;# 
   887  0396                     	;# 
   888  039A                     	;# 
   889  039B                     	;# 
   890  0611                     	;# 
   891  0612                     	;# 
   892  0613                     	;# 
   893  0613                     	;# 
   894  0614                     	;# 
   895  0615                     	;# 
   896  0616                     	;# 
   897  0616                     	;# 
   898  0691                     	;# 
   899  0692                     	;# 
   900  0693                     	;# 
   901  0694                     	;# 
   902  0695                     	;# 
   903  0E8E                     	;# 
   904  0E8F                     	;# 
   905  0E90                     	;# 
   906  0E91                     	;# 
   907  0E92                     	;# 
   908  0E93                     	;# 
   909  0E94                     	;# 
   910  0E94                     	;# 
   911  0E95                     	;# 
   912  0E96                     	;# 
   913  0E97                     	;# 
   914  0E98                     	;# 
   915  0E99                     	;# 
   916  0E9A                     	;# 
   917  0E9B                     	;# 
   918  0E9C                     	;# 
   919  0E9D                     	;# 
   920  0E9E                     	;# 
   921  0E9F                     	;# 
   922  0FE4                     	;# 
   923  0FE5                     	;# 
   924  0FE6                     	;# 
   925  0FE7                     	;# 
   926  0FE8                     	;# 
   927  0FE9                     	;# 
   928  0FEA                     	;# 
   929  0FEB                     	;# 
   930  0FED                     	;# 
   931  0FEE                     	;# 
   932  0FEF                     	;# 
   933  0000                     	;# 
   934  0001                     	;# 
   935  0002                     	;# 
   936  0003                     	;# 
   937  0004                     	;# 
   938  0005                     	;# 
   939  0006                     	;# 
   940  0007                     	;# 
   941  0008                     	;# 
   942  0009                     	;# 
   943  000A                     	;# 
   944  000B                     	;# 
   945  000C                     	;# 
   946  000D                     	;# 
   947  000E                     	;# 
   948  0011                     	;# 
   949  0012                     	;# 
   950  0015                     	;# 
   951  0016                     	;# 
   952  0016                     	;# 
   953  0017                     	;# 
   954  0018                     	;# 
   955  0019                     	;# 
   956  001A                     	;# 
   957  001B                     	;# 
   958  001C                     	;# 
   959  008C                     	;# 
   960  008D                     	;# 
   961  008E                     	;# 
   962  0091                     	;# 
   963  0092                     	;# 
   964  0095                     	;# 
   965  0096                     	;# 
   966  0097                     	;# 
   967  0098                     	;# 
   968  0099                     	;# 
   969  009A                     	;# 
   970  009B                     	;# 
   971  009B                     	;# 
   972  009C                     	;# 
   973  009D                     	;# 
   974  009E                     	;# 
   975  009F                     	;# 
   976  010C                     	;# 
   977  010D                     	;# 
   978  010E                     	;# 
   979  0111                     	;# 
   980  0112                     	;# 
   981  0113                     	;# 
   982  0114                     	;# 
   983  0115                     	;# 
   984  0116                     	;# 
   985  0117                     	;# 
   986  0118                     	;# 
   987  0119                     	;# 
   988  011D                     	;# 
   989  018C                     	;# 
   990  018D                     	;# 
   991  018E                     	;# 
   992  0191                     	;# 
   993  0191                     	;# 
   994  0192                     	;# 
   995  0193                     	;# 
   996  0193                     	;# 
   997  0194                     	;# 
   998  0195                     	;# 
   999  0196                     	;# 
  1000  0197                     	;# 
  1001  0199                     	;# 
  1002  019A                     	;# 
  1003  019B                     	;# 
  1004  019C                     	;# 
  1005  019D                     	;# 
  1006  019E                     	;# 
  1007  019F                     	;# 
  1008  020C                     	;# 
  1009  020D                     	;# 
  1010  0211                     	;# 
  1011  0211                     	;# 
  1012  0212                     	;# 
  1013  0212                     	;# 
  1014  0213                     	;# 
  1015  0213                     	;# 
  1016  0214                     	;# 
  1017  0214                     	;# 
  1018  0215                     	;# 
  1019  0215                     	;# 
  1020  0215                     	;# 
  1021  0216                     	;# 
  1022  0216                     	;# 
  1023  0217                     	;# 
  1024  0217                     	;# 
  1025  0391                     	;# 
  1026  0392                     	;# 
  1027  0393                     	;# 
  1028  0394                     	;# 
  1029  0395                     	;# 
  1030  0396                     	;# 
  1031  039A                     	;# 
  1032  039B                     	;# 
  1033  0611                     	;# 
  1034  0612                     	;# 
  1035  0613                     	;# 
  1036  0613                     	;# 
  1037  0614                     	;# 
  1038  0615                     	;# 
  1039  0616                     	;# 
  1040  0616                     	;# 
  1041  0691                     	;# 
  1042  0692                     	;# 
  1043  0693                     	;# 
  1044  0694                     	;# 
  1045  0695                     	;# 
  1046  0E8E                     	;# 
  1047  0E8F                     	;# 
  1048  0E90                     	;# 
  1049  0E91                     	;# 
  1050  0E92                     	;# 
  1051  0E93                     	;# 
  1052  0E94                     	;# 
  1053  0E94                     	;# 
  1054  0E95                     	;# 
  1055  0E96                     	;# 
  1056  0E97                     	;# 
  1057  0E98                     	;# 
  1058  0E99                     	;# 
  1059  0E9A                     	;# 
  1060  0E9B                     	;# 
  1061  0E9C                     	;# 
  1062  0E9D                     	;# 
  1063  0E9E                     	;# 
  1064  0E9F                     	;# 
  1065  0FE4                     	;# 
  1066  0FE5                     	;# 
  1067  0FE6                     	;# 
  1068  0FE7                     	;# 
  1069  0FE8                     	;# 
  1070  0FE9                     	;# 
  1071  0FEA                     	;# 
  1072  0FEB                     	;# 
  1073  0FED                     	;# 
  1074  0FEE                     	;# 
  1075  0FEF                     	;# 
  1076  0000                     	;# 
  1077  0001                     	;# 
  1078  0002                     	;# 
  1079  0003                     	;# 
  1080  0004                     	;# 
  1081  0005                     	;# 
  1082  0006                     	;# 
  1083  0007                     	;# 
  1084  0008                     	;# 
  1085  0009                     	;# 
  1086  000A                     	;# 
  1087  000B                     	;# 
  1088  000C                     	;# 
  1089  000D                     	;# 
  1090  000E                     	;# 
  1091  0011                     	;# 
  1092  0012                     	;# 
  1093  0015                     	;# 
  1094  0016                     	;# 
  1095  0016                     	;# 
  1096  0017                     	;# 
  1097  0018                     	;# 
  1098  0019                     	;# 
  1099  001A                     	;# 
  1100  001B                     	;# 
  1101  001C                     	;# 
  1102  008C                     	;# 
  1103  008D                     	;# 
  1104  008E                     	;# 
  1105  0091                     	;# 
  1106  0092                     	;# 
  1107  0095                     	;# 
  1108  0096                     	;# 
  1109  0097                     	;# 
  1110  0098                     	;# 
  1111  0099                     	;# 
  1112  009A                     	;# 
  1113  009B                     	;# 
  1114  009B                     	;# 
  1115  009C                     	;# 
  1116  009D                     	;# 
  1117  009E                     	;# 
  1118  009F                     	;# 
  1119  010C                     	;# 
  1120  010D                     	;# 
  1121  010E                     	;# 
  1122  0111                     	;# 
  1123  0112                     	;# 
  1124  0113                     	;# 
  1125  0114                     	;# 
  1126  0115                     	;# 
  1127  0116                     	;# 
  1128  0117                     	;# 
  1129  0118                     	;# 
  1130  0119                     	;# 
  1131  011D                     	;# 
  1132  018C                     	;# 
  1133  018D                     	;# 
  1134  018E                     	;# 
  1135  0191                     	;# 
  1136  0191                     	;# 
  1137  0192                     	;# 
  1138  0193                     	;# 
  1139  0193                     	;# 
  1140  0194                     	;# 
  1141  0195                     	;# 
  1142  0196                     	;# 
  1143  0197                     	;# 
  1144  0199                     	;# 
  1145  019A                     	;# 
  1146  019B                     	;# 
  1147  019C                     	;# 
  1148  019D                     	;# 
  1149  019E                     	;# 
  1150  019F                     	;# 
  1151  020C                     	;# 
  1152  020D                     	;# 
  1153  0211                     	;# 
  1154  0211                     	;# 
  1155  0212                     	;# 
  1156  0212                     	;# 
  1157  0213                     	;# 
  1158  0213                     	;# 
  1159  0214                     	;# 
  1160  0214                     	;# 
  1161  0215                     	;# 
  1162  0215                     	;# 
  1163  0215                     	;# 
  1164  0216                     	;# 
  1165  0216                     	;# 
  1166  0217                     	;# 
  1167  0217                     	;# 
  1168  0391                     	;# 
  1169  0392                     	;# 
  1170  0393                     	;# 
  1171  0394                     	;# 
  1172  0395                     	;# 
  1173  0396                     	;# 
  1174  039A                     	;# 
  1175  039B                     	;# 
  1176  0611                     	;# 
  1177  0612                     	;# 
  1178  0613                     	;# 
  1179  0613                     	;# 
  1180  0614                     	;# 
  1181  0615                     	;# 
  1182  0616                     	;# 
  1183  0616                     	;# 
  1184  0691                     	;# 
  1185  0692                     	;# 
  1186  0693                     	;# 
  1187  0694                     	;# 
  1188  0695                     	;# 
  1189  0E8E                     	;# 
  1190  0E8F                     	;# 
  1191  0E90                     	;# 
  1192  0E91                     	;# 
  1193  0E92                     	;# 
  1194  0E93                     	;# 
  1195  0E94                     	;# 
  1196  0E94                     	;# 
  1197  0E95                     	;# 
  1198  0E96                     	;# 
  1199  0E97                     	;# 
  1200  0E98                     	;# 
  1201  0E99                     	;# 
  1202  0E9A                     	;# 
  1203  0E9B                     	;# 
  1204  0E9C                     	;# 
  1205  0E9D                     	;# 
  1206  0E9E                     	;# 
  1207  0E9F                     	;# 
  1208  0FE4                     	;# 
  1209  0FE5                     	;# 
  1210  0FE6                     	;# 
  1211  0FE7                     	;# 
  1212  0FE8                     	;# 
  1213  0FE9                     	;# 
  1214  0FEA                     	;# 
  1215  0FEB                     	;# 
  1216  0FED                     	;# 
  1217  0FEE                     	;# 
  1218  0FEF                     	;# 
  1219  0000                     	;# 
  1220  0001                     	;# 
  1221  0002                     	;# 
  1222  0003                     	;# 
  1223  0004                     	;# 
  1224  0005                     	;# 
  1225  0006                     	;# 
  1226  0007                     	;# 
  1227  0008                     	;# 
  1228  0009                     	;# 
  1229  000A                     	;# 
  1230  000B                     	;# 
  1231  000C                     	;# 
  1232  000D                     	;# 
  1233  000E                     	;# 
  1234  0011                     	;# 
  1235  0012                     	;# 
  1236  0015                     	;# 
  1237  0016                     	;# 
  1238  0016                     	;# 
  1239  0017                     	;# 
  1240  0018                     	;# 
  1241  0019                     	;# 
  1242  001A                     	;# 
  1243  001B                     	;# 
  1244  001C                     	;# 
  1245  008C                     	;# 
  1246  008D                     	;# 
  1247  008E                     	;# 
  1248  0091                     	;# 
  1249  0092                     	;# 
  1250  0095                     	;# 
  1251  0096                     	;# 
  1252  0097                     	;# 
  1253  0098                     	;# 
  1254  0099                     	;# 
  1255  009A                     	;# 
  1256  009B                     	;# 
  1257  009B                     	;# 
  1258  009C                     	;# 
  1259  009D                     	;# 
  1260  009E                     	;# 
  1261  009F                     	;# 
  1262  010C                     	;# 
  1263  010D                     	;# 
  1264  010E                     	;# 
  1265  0111                     	;# 
  1266  0112                     	;# 
  1267  0113                     	;# 
  1268  0114                     	;# 
  1269  0115                     	;# 
  1270  0116                     	;# 
  1271  0117                     	;# 
  1272  0118                     	;# 
  1273  0119                     	;# 
  1274  011D                     	;# 
  1275  018C                     	;# 
  1276  018D                     	;# 
  1277  018E                     	;# 
  1278  0191                     	;# 
  1279  0191                     	;# 
  1280  0192                     	;# 
  1281  0193                     	;# 
  1282  0193                     	;# 
  1283  0194                     	;# 
  1284  0195                     	;# 
  1285  0196                     	;# 
  1286  0197                     	;# 
  1287  0199                     	;# 
  1288  019A                     	;# 
  1289  019B                     	;# 
  1290  019C                     	;# 
  1291  019D                     	;# 
  1292  019E                     	;# 
  1293  019F                     	;# 
  1294  020C                     	;# 
  1295  020D                     	;# 
  1296  0211                     	;# 
  1297  0211                     	;# 
  1298  0212                     	;# 
  1299  0212                     	;# 
  1300  0213                     	;# 
  1301  0213                     	;# 
  1302  0214                     	;# 
  1303  0214                     	;# 
  1304  0215                     	;# 
  1305  0215                     	;# 
  1306  0215                     	;# 
  1307  0216                     	;# 
  1308  0216                     	;# 
  1309  0217                     	;# 
  1310  0217                     	;# 
  1311  0391                     	;# 
  1312  0392                     	;# 
  1313  0393                     	;# 
  1314  0394                     	;# 
  1315  0395                     	;# 
  1316  0396                     	;# 
  1317  039A                     	;# 
  1318  039B                     	;# 
  1319  0611                     	;# 
  1320  0612                     	;# 
  1321  0613                     	;# 
  1322  0613                     	;# 
  1323  0614                     	;# 
  1324  0615                     	;# 
  1325  0616                     	;# 
  1326  0616                     	;# 
  1327  0691                     	;# 
  1328  0692                     	;# 
  1329  0693                     	;# 
  1330  0694                     	;# 
  1331  0695                     	;# 
  1332  0E8E                     	;# 
  1333  0E8F                     	;# 
  1334  0E90                     	;# 
  1335  0E91                     	;# 
  1336  0E92                     	;# 
  1337  0E93                     	;# 
  1338  0E94                     	;# 
  1339  0E94                     	;# 
  1340  0E95                     	;# 
  1341  0E96                     	;# 
  1342  0E97                     	;# 
  1343  0E98                     	;# 
  1344  0E99                     	;# 
  1345  0E9A                     	;# 
  1346  0E9B                     	;# 
  1347  0E9C                     	;# 
  1348  0E9D                     	;# 
  1349  0E9E                     	;# 
  1350  0E9F                     	;# 
  1351  0FE4                     	;# 
  1352  0FE5                     	;# 
  1353  0FE6                     	;# 
  1354  0FE7                     	;# 
  1355  0FE8                     	;# 
  1356  0FE9                     	;# 
  1357  0FEA                     	;# 
  1358  0FEB                     	;# 
  1359  0FED                     	;# 
  1360  0FEE                     	;# 
  1361  0FEF                     	;# 
  1362  0000                     	;# 
  1363  0001                     	;# 
  1364  0002                     	;# 
  1365  0003                     	;# 
  1366  0004                     	;# 
  1367  0005                     	;# 
  1368  0006                     	;# 
  1369  0007                     	;# 
  1370  0008                     	;# 
  1371  0009                     	;# 
  1372  000A                     	;# 
  1373  000B                     	;# 
  1374  000C                     	;# 
  1375  000D                     	;# 
  1376  000E                     	;# 
  1377  0011                     	;# 
  1378  0012                     	;# 
  1379  0015                     	;# 
  1380  0016                     	;# 
  1381  0016                     	;# 
  1382  0017                     	;# 
  1383  0018                     	;# 
  1384  0019                     	;# 
  1385  001A                     	;# 
  1386  001B                     	;# 
  1387  001C                     	;# 
  1388  008C                     	;# 
  1389  008D                     	;# 
  1390  008E                     	;# 
  1391  0091                     	;# 
  1392  0092                     	;# 
  1393  0095                     	;# 
  1394  0096                     	;# 
  1395  0097                     	;# 
  1396  0098                     	;# 
  1397  0099                     	;# 
  1398  009A                     	;# 
  1399  009B                     	;# 
  1400  009B                     	;# 
  1401  009C                     	;# 
  1402  009D                     	;# 
  1403  009E                     	;# 
  1404  009F                     	;# 
  1405  010C                     	;# 
  1406  010D                     	;# 
  1407  010E                     	;# 
  1408  0111                     	;# 
  1409  0112                     	;# 
  1410  0113                     	;# 
  1411  0114                     	;# 
  1412  0115                     	;# 
  1413  0116                     	;# 
  1414  0117                     	;# 
  1415  0118                     	;# 
  1416  0119                     	;# 
  1417  011D                     	;# 
  1418  018C                     	;# 
  1419  018D                     	;# 
  1420  018E                     	;# 
  1421  0191                     	;# 
  1422  0191                     	;# 
  1423  0192                     	;# 
  1424  0193                     	;# 
  1425  0193                     	;# 
  1426  0194                     	;# 
  1427  0195                     	;# 
  1428  0196                     	;# 
  1429  0197                     	;# 
  1430  0199                     	;# 
  1431  019A                     	;# 
  1432  019B                     	;# 
  1433  019C                     	;# 
  1434  019D                     	;# 
  1435  019E                     	;# 
  1436  019F                     	;# 
  1437  020C                     	;# 
  1438  020D                     	;# 
  1439  0211                     	;# 
  1440  0211                     	;# 
  1441  0212                     	;# 
  1442  0212                     	;# 
  1443  0213                     	;# 
  1444  0213                     	;# 
  1445  0214                     	;# 
  1446  0214                     	;# 
  1447  0215                     	;# 
  1448  0215                     	;# 
  1449  0215                     	;# 
  1450  0216                     	;# 
  1451  0216                     	;# 
  1452  0217                     	;# 
  1453  0217                     	;# 
  1454  0391                     	;# 
  1455  0392                     	;# 
  1456  0393                     	;# 
  1457  0394                     	;# 
  1458  0395                     	;# 
  1459  0396                     	;# 
  1460  039A                     	;# 
  1461  039B                     	;# 
  1462  0611                     	;# 
  1463  0612                     	;# 
  1464  0613                     	;# 
  1465  0613                     	;# 
  1466  0614                     	;# 
  1467  0615                     	;# 
  1468  0616                     	;# 
  1469  0616                     	;# 
  1470  0691                     	;# 
  1471  0692                     	;# 
  1472  0693                     	;# 
  1473  0694                     	;# 
  1474  0695                     	;# 
  1475  0E8E                     	;# 
  1476  0E8F                     	;# 
  1477  0E90                     	;# 
  1478  0E91                     	;# 
  1479  0E92                     	;# 
  1480  0E93                     	;# 
  1481  0E94                     	;# 
  1482  0E94                     	;# 
  1483  0E95                     	;# 
  1484  0E96                     	;# 
  1485  0E97                     	;# 
  1486  0E98                     	;# 
  1487  0E99                     	;# 
  1488  0E9A                     	;# 
  1489  0E9B                     	;# 
  1490  0E9C                     	;# 
  1491  0E9D                     	;# 
  1492  0E9E                     	;# 
  1493  0E9F                     	;# 
  1494  0FE4                     	;# 
  1495  0FE5                     	;# 
  1496  0FE6                     	;# 
  1497  0FE7                     	;# 
  1498  0FE8                     	;# 
  1499  0FE9                     	;# 
  1500  0FEA                     	;# 
  1501  0FEB                     	;# 
  1502  0FED                     	;# 
  1503  0FEE                     	;# 
  1504  0FEF                     	;# 
  1505  0000                     	;# 
  1506  0001                     	;# 
  1507  0002                     	;# 
  1508  0003                     	;# 
  1509  0004                     	;# 
  1510  0005                     	;# 
  1511  0006                     	;# 
  1512  0007                     	;# 
  1513  0008                     	;# 
  1514  0009                     	;# 
  1515  000A                     	;# 
  1516  000B                     	;# 
  1517  000C                     	;# 
  1518  000D                     	;# 
  1519  000E                     	;# 
  1520  0011                     	;# 
  1521  0012                     	;# 
  1522  0015                     	;# 
  1523  0016                     	;# 
  1524  0016                     	;# 
  1525  0017                     	;# 
  1526  0018                     	;# 
  1527  0019                     	;# 
  1528  001A                     	;# 
  1529  001B                     	;# 
  1530  001C                     	;# 
  1531  008C                     	;# 
  1532  008D                     	;# 
  1533  008E                     	;# 
  1534  0091                     	;# 
  1535  0092                     	;# 
  1536  0095                     	;# 
  1537  0096                     	;# 
  1538  0097                     	;# 
  1539  0098                     	;# 
  1540  0099                     	;# 
  1541  009A                     	;# 
  1542  009B                     	;# 
  1543  009B                     	;# 
  1544  009C                     	;# 
  1545  009D                     	;# 
  1546  009E                     	;# 
  1547  009F                     	;# 
  1548  010C                     	;# 
  1549  010D                     	;# 
  1550  010E                     	;# 
  1551  0111                     	;# 
  1552  0112                     	;# 
  1553  0113                     	;# 
  1554  0114                     	;# 
  1555  0115                     	;# 
  1556  0116                     	;# 
  1557  0117                     	;# 
  1558  0118                     	;# 
  1559  0119                     	;# 
  1560  011D                     	;# 
  1561  018C                     	;# 
  1562  018D                     	;# 
  1563  018E                     	;# 
  1564  0191                     	;# 
  1565  0191                     	;# 
  1566  0192                     	;# 
  1567  0193                     	;# 
  1568  0193                     	;# 
  1569  0194                     	;# 
  1570  0195                     	;# 
  1571  0196                     	;# 
  1572  0197                     	;# 
  1573  0199                     	;# 
  1574  019A                     	;# 
  1575  019B                     	;# 
  1576  019C                     	;# 
  1577  019D                     	;# 
  1578  019E                     	;# 
  1579  019F                     	;# 
  1580  020C                     	;# 
  1581  020D                     	;# 
  1582  0211                     	;# 
  1583  0211                     	;# 
  1584  0212                     	;# 
  1585  0212                     	;# 
  1586  0213                     	;# 
  1587  0213                     	;# 
  1588  0214                     	;# 
  1589  0214                     	;# 
  1590  0215                     	;# 
  1591  0215                     	;# 
  1592  0215                     	;# 
  1593  0216                     	;# 
  1594  0216                     	;# 
  1595  0217                     	;# 
  1596  0217                     	;# 
  1597  0391                     	;# 
  1598  0392                     	;# 
  1599  0393                     	;# 
  1600  0394                     	;# 
  1601  0395                     	;# 
  1602  0396                     	;# 
  1603  039A                     	;# 
  1604  039B                     	;# 
  1605  0611                     	;# 
  1606  0612                     	;# 
  1607  0613                     	;# 
  1608  0613                     	;# 
  1609  0614                     	;# 
  1610  0615                     	;# 
  1611  0616                     	;# 
  1612  0616                     	;# 
  1613  0691                     	;# 
  1614  0692                     	;# 
  1615  0693                     	;# 
  1616  0694                     	;# 
  1617  0695                     	;# 
  1618  0E8E                     	;# 
  1619  0E8F                     	;# 
  1620  0E90                     	;# 
  1621  0E91                     	;# 
  1622  0E92                     	;# 
  1623  0E93                     	;# 
  1624  0E94                     	;# 
  1625  0E94                     	;# 
  1626  0E95                     	;# 
  1627  0E96                     	;# 
  1628  0E97                     	;# 
  1629  0E98                     	;# 
  1630  0E99                     	;# 
  1631  0E9A                     	;# 
  1632  0E9B                     	;# 
  1633  0E9C                     	;# 
  1634  0E9D                     	;# 
  1635  0E9E                     	;# 
  1636  0E9F                     	;# 
  1637  0FE4                     	;# 
  1638  0FE5                     	;# 
  1639  0FE6                     	;# 
  1640  0FE7                     	;# 
  1641  0FE8                     	;# 
  1642  0FE9                     	;# 
  1643  0FEA                     	;# 
  1644  0FEB                     	;# 
  1645  0FED                     	;# 
  1646  0FEE                     	;# 
  1647  0FEF                     	;# 
  1648                           
  1649                           	psect	stringtext
  1650  0300                     __pstringtext:	
  1651  0300                     __stringtab:	
  1652  0300  3400               	retlw	0
  1653  0301                     __end_of__stringtab:	
  1654  0301                     process_level@idx_midi_map:	
  1655  0301  3400               	retlw	0
  1656  0302  3401               	retlw	1
  1657  0303  3402               	retlw	2
  1658  0304  3403               	retlw	3
  1659  0305  3404               	retlw	4
  1660  0306  3405               	retlw	5
  1661  0307  3406               	retlw	6
  1662  0308  3407               	retlw	7
  1663  0309  3408               	retlw	8
  1664  030A  3409               	retlw	9
  1665  030B  340A               	retlw	10
  1666  030C  340B               	retlw	11
  1667  030D  340C               	retlw	12
  1668  030E  340D               	retlw	13
  1669  030F  340E               	retlw	14
  1670  0310  340F               	retlw	15
  1671  0311  3410               	retlw	16
  1672  0312  3411               	retlw	17
  1673  0313  3412               	retlw	18
  1674  0314  3413               	retlw	19
  1675  0315  3414               	retlw	20
  1676  0316  3415               	retlw	21
  1677  0317  3416               	retlw	22
  1678  0318  3417               	retlw	23
  1679  0319  3418               	retlw	24
  1680  031A  3419               	retlw	25
  1681  031B  341A               	retlw	26
  1682  031C  341B               	retlw	27
  1683  031D  341C               	retlw	28
  1684  031E  341D               	retlw	29
  1685  031F  341E               	retlw	30
  1686  0320  341F               	retlw	31
  1687  0321  3420               	retlw	32
  1688  0322  3421               	retlw	33
  1689  0323  3422               	retlw	34
  1690  0324  3423               	retlw	35
  1691  0325  3424               	retlw	36
  1692  0326  3425               	retlw	37
  1693  0327  3426               	retlw	38
  1694  0328                     __end_ofprocess_level@idx_midi_map:	
  1695  0328                     _USB_SD_Ptr:	
  1696  0328  34F9               	retlw	low (_sd000| (0+32768))
  1697  0329  3483               	retlw	high (_sd000| (0+32768))
  1698  032A  3499               	retlw	low (_sd001| (0+32768))
  1699  032B  3483               	retlw	high (_sd001| (0+32768))
  1700  032C  34CD               	retlw	low (_sd002| (0+32768))
  1701  032D  3483               	retlw	high (_sd002| (0+32768))
  1702  032E                     __end_of_USB_SD_Ptr:	
  1703  032E                     _USB_CD_Ptr:	
  1704  032E  3434               	retlw	low (_configDescriptor1| (0+32768))
  1705  032F  3483               	retlw	high (_configDescriptor1| (0+32768))
  1706  0330                     __end_of_USB_CD_Ptr:	
  1707  0330                     process_level@L:	
  1708  0330  340A               	retlw	10
  1709  0331                     __end_ofprocess_level@L:	
  1710  0331                     process_level@key_off_threshold:	
  1711  0331  3405               	retlw	5
  1712  0332                     __end_ofprocess_level@key_off_threshold:	
  1713  0332                     process_level@key_on_threshold:	
  1714  0332  3407               	retlw	7
  1715  0333                     __end_ofprocess_level@key_on_threshold:	
  1716  0333                     process_level@midi_shift:	
  1717  0333  3430               	retlw	48
  1718  0334                     __end_ofprocess_level@midi_shift:	
  1719  0334                     _configDescriptor1:	
  1720  0334  3409               	retlw	9
  1721  0335  3402               	retlw	2
  1722  0336  3465               	retlw	101
  1723  0337  3400               	retlw	0
  1724  0338  3402               	retlw	2
  1725  0339  3401               	retlw	1
  1726  033A  3400               	retlw	0
  1727  033B  34C0               	retlw	192
  1728  033C  3432               	retlw	50
  1729  033D  3409               	retlw	9
  1730  033E  3404               	retlw	4
  1731  033F  3400               	retlw	0
  1732  0340  3400               	retlw	0
  1733  0341  3400               	retlw	0
  1734  0342  3401               	retlw	1
  1735  0343  3401               	retlw	1
  1736  0344  3400               	retlw	0
  1737  0345  3400               	retlw	0
  1738  0346  3409               	retlw	9
  1739  0347  3424               	retlw	36
  1740  0348  3401               	retlw	1
  1741  0349  3400               	retlw	0
  1742  034A  3401               	retlw	1
  1743  034B  3409               	retlw	9
  1744  034C  3400               	retlw	0
  1745  034D  3401               	retlw	1
  1746  034E  3401               	retlw	1
  1747  034F  3409               	retlw	9
  1748  0350  3404               	retlw	4
  1749  0351  3401               	retlw	1
  1750  0352  3400               	retlw	0
  1751  0353  3402               	retlw	2
  1752  0354  3401               	retlw	1
  1753  0355  3403               	retlw	3
  1754  0356  3400               	retlw	0
  1755  0357  3400               	retlw	0
  1756  0358  3407               	retlw	7
  1757  0359  3424               	retlw	36
  1758  035A  3401               	retlw	1
  1759  035B  3400               	retlw	0
  1760  035C  3401               	retlw	1
  1761  035D  3441               	retlw	65
  1762  035E  3400               	retlw	0
  1763  035F  3406               	retlw	6
  1764  0360  3424               	retlw	36
  1765  0361  3402               	retlw	2
  1766  0362  3401               	retlw	1
  1767  0363  3401               	retlw	1
  1768  0364  3400               	retlw	0
  1769  0365  3406               	retlw	6
  1770  0366  3424               	retlw	36
  1771  0367  3402               	retlw	2
  1772  0368  3402               	retlw	2
  1773  0369  3402               	retlw	2
  1774  036A  3400               	retlw	0
  1775  036B  3409               	retlw	9
  1776  036C  3424               	retlw	36
  1777  036D  3403               	retlw	3
  1778  036E  3401               	retlw	1
  1779  036F  3403               	retlw	3
  1780  0370  3401               	retlw	1
  1781  0371  3402               	retlw	2
  1782  0372  3401               	retlw	1
  1783  0373  3400               	retlw	0
  1784  0374  3409               	retlw	9
  1785  0375  3424               	retlw	36
  1786  0376  3403               	retlw	3
  1787  0377  3402               	retlw	2
  1788  0378  3404               	retlw	4
  1789  0379  3401               	retlw	1
  1790  037A  3401               	retlw	1
  1791  037B  3401               	retlw	1
  1792  037C  3400               	retlw	0
  1793  037D  3409               	retlw	9
  1794  037E  3405               	retlw	5
  1795  037F  3401               	retlw	1
  1796  0380  3402               	retlw	2
  1797  0381  3440               	retlw	64
  1798  0382  3400               	retlw	0
  1799  0383  3400               	retlw	0
  1800  0384  3400               	retlw	0
  1801  0385  3400               	retlw	0
  1802  0386  3405               	retlw	5
  1803  0387  3425               	retlw	37
  1804  0388  3401               	retlw	1
  1805  0389  3401               	retlw	1
  1806  038A  3401               	retlw	1
  1807  038B  3409               	retlw	9
  1808  038C  3405               	retlw	5
  1809  038D  3481               	retlw	129
  1810  038E  3402               	retlw	2
  1811  038F  3440               	retlw	64
  1812  0390  3400               	retlw	0
  1813  0391  3400               	retlw	0
  1814  0392  3400               	retlw	0
  1815  0393  3400               	retlw	0
  1816  0394  3405               	retlw	5
  1817  0395  3425               	retlw	37
  1818  0396  3401               	retlw	1
  1819  0397  3401               	retlw	1
  1820  0398  3403               	retlw	3
  1821  0399                     __end_of_configDescriptor1:	
  1822  0399                     _sd001:	
  1823  0399  3434               	retlw	52
  1824  039A  3403               	retlw	3
  1825  039B  344D               	retlw	77
  1826  039C  3400               	retlw	0
  1827  039D  3469               	retlw	105
  1828  039E  3400               	retlw	0
  1829  039F  3463               	retlw	99
  1830  03A0  3400               	retlw	0
  1831  03A1  3472               	retlw	114
  1832  03A2  3400               	retlw	0
  1833  03A3  346F               	retlw	111
  1834  03A4  3400               	retlw	0
  1835  03A5  3463               	retlw	99
  1836  03A6  3400               	retlw	0
  1837  03A7  3468               	retlw	104
  1838  03A8  3400               	retlw	0
  1839  03A9  3469               	retlw	105
  1840  03AA  3400               	retlw	0
  1841  03AB  3470               	retlw	112
  1842  03AC  3400               	retlw	0
  1843  03AD  3420               	retlw	32
  1844  03AE  3400               	retlw	0
  1845  03AF  3454               	retlw	84
  1846  03B0  3400               	retlw	0
  1847  03B1  3465               	retlw	101
  1848  03B2  3400               	retlw	0
  1849  03B3  3463               	retlw	99
  1850  03B4  3400               	retlw	0
  1851  03B5  3468               	retlw	104
  1852  03B6  3400               	retlw	0
  1853  03B7  346E               	retlw	110
  1854  03B8  3400               	retlw	0
  1855  03B9  346F               	retlw	111
  1856  03BA  3400               	retlw	0
  1857  03BB  346C               	retlw	108
  1858  03BC  3400               	retlw	0
  1859  03BD  346F               	retlw	111
  1860  03BE  3400               	retlw	0
  1861  03BF  3467               	retlw	103
  1862  03C0  3400               	retlw	0
  1863  03C1  3479               	retlw	121
  1864  03C2  3400               	retlw	0
  1865  03C3  3420               	retlw	32
  1866  03C4  3400               	retlw	0
  1867  03C5  3449               	retlw	73
  1868  03C6  3400               	retlw	0
  1869  03C7  346E               	retlw	110
  1870  03C8  3400               	retlw	0
  1871  03C9  3463               	retlw	99
  1872  03CA  3400               	retlw	0
  1873  03CB  342E               	retlw	46
  1874  03CC  3400               	retlw	0
  1875  03CD                     __end_of_sd001:	
  1876  03CD                     _sd002:	
  1877  03CD  341A               	retlw	26
  1878  03CE  3403               	retlw	3
  1879  03CF  344D               	retlw	77
  1880  03D0  3400               	retlw	0
  1881  03D1  3449               	retlw	73
  1882  03D2  3400               	retlw	0
  1883  03D3  3444               	retlw	68
  1884  03D4  3400               	retlw	0
  1885  03D5  3449               	retlw	73
  1886  03D6  3400               	retlw	0
  1887  03D7  3420               	retlw	32
  1888  03D8  3400               	retlw	0
  1889  03D9  3445               	retlw	69
  1890  03DA  3400               	retlw	0
  1891  03DB  3478               	retlw	120
  1892  03DC  3400               	retlw	0
  1893  03DD  3461               	retlw	97
  1894  03DE  3400               	retlw	0
  1895  03DF  346D               	retlw	109
  1896  03E0  3400               	retlw	0
  1897  03E1  3470               	retlw	112
  1898  03E2  3400               	retlw	0
  1899  03E3  346C               	retlw	108
  1900  03E4  3400               	retlw	0
  1901  03E5  3465               	retlw	101
  1902  03E6  3400               	retlw	0
  1903  03E7                     __end_of_sd002:	
  1904  03E7                     _device_dsc:	
  1905  03E7  3412               	retlw	18
  1906  03E8  3401               	retlw	1
  1907  03E9  3400               	retlw	0
  1908  03EA  3402               	retlw	2
  1909  03EB  3400               	retlw	0
  1910  03EC  3400               	retlw	0
  1911  03ED  3400               	retlw	0
  1912  03EE  3408               	retlw	8
  1913  03EF  34D8               	retlw	216
  1914  03F0  3404               	retlw	4
  1915  03F1  3459               	retlw	89
  1916  03F2  3400               	retlw	0
  1917  03F3  3402               	retlw	2
  1918  03F4  3400               	retlw	0
  1919  03F5  3401               	retlw	1
  1920  03F6  3402               	retlw	2
  1921  03F7  3400               	retlw	0
  1922  03F8  3401               	retlw	1
  1923  03F9                     __end_of_device_dsc:	
  1924  03F9                     _sd000:	
  1925  03F9  3404               	retlw	4
  1926  03FA  3403               	retlw	3
  1927  03FB  3409               	retlw	9
  1928  03FC  3404               	retlw	4
  1929  03FD                     __end_of_sd000:	
  1930  000B                     _INTCONbits	set	11
  1931  0012                     _PIR2bits	set	18
  1932  000C                     _PORTAbits	set	12
  1933  0015                     _TMR0	set	21
  1934  009D                     _ADCON0	set	157
  1935  009D                     _ADCON0bits	set	157
  1936  009E                     _ADCON1	set	158
  1937  009E                     _ADCON1bits	set	158
  1938  009F                     _ADCON2	set	159
  1939  009F                     _ADCON2bits	set	159
  1940  009C                     _ADRESH	set	156
  1941  009B                     _ADRESL	set	155
  1942  0095                     _OPTION_REGbits	set	149
  1943  0099                     _OSCCON	set	153
  1944  0091                     _PIE1bits	set	145
  1945  0092                     _PIE2bits	set	146
  1946  008C                     _TRISAbits	set	140
  1947  008D                     _TRISBbits	set	141
  1948  008E                     _TRISCbits	set	142
  1949  010E                     _LATCbits	set	270
  1950  018C                     _ANSELA	set	396
  1951  018C                     _ANSELAbits	set	396
  1952  018D                     _ANSELBbits	set	397
  1953  018E                     _ANSELCbits	set	398
  1954  019F                     _BAUDCON	set	415
  1955  0199                     _RCREG	set	409
  1956  019D                     _RCSTA	set	413
  1957  019D                     _RCSTAbits	set	413
  1958  019A                     _TXREG	set	410
  1959  019E                     _TXSTA	set	414
  1960  039B                     _ACTCON	set	923
  1961  0E96                     _UADDR	set	3734
  1962  0E91                     _UCFG	set	3729
  1963  0E8E                     _UCON	set	3726
  1964  0E8E                     _UCONbits	set	3726
  1965  0E97                     _UEIE	set	3735
  1966  0E93                     _UEIR	set	3731
  1967  0E98                     _UEP0bits	set	3736
  1968  0E92                     _UIE	set	3730
  1969  0E92                     _UIEbits	set	3730
  1970  0E90                     _UIR	set	3728
  1971  0E90                     _UIRbits	set	3728
  1972  0E8F                     _USTAT	set	3727
  1973  0E98                     _UEP0	set	3736
  1974  0E99                     _UEP1	set	3737
  1975                           
  1976                           ; #config settings
  1977  0000                     
  1978                           	psect	cinit
  1979  0A84                     start_initialization:	
  1980  0A84                     __initialization:	
  1981                           
  1982                           ; Clear objects allocated to COMMON
  1983  0A84  01FC               	clrf	__pbssCOMMON& (0+127)
  1984                           
  1985                           ; Clear objects allocated to BANK0
  1986  0A85  01EB               	clrf	__pbssBANK0& (0+127)
  1987  0A86  01EC               	clrf	(__pbssBANK0+1)& (0+127)
  1988  0A87  01ED               	clrf	(__pbssBANK0+2)& (0+127)
  1989  0A88  01EE               	clrf	(__pbssBANK0+3)& (0+127)
  1990  0A89  01EF               	clrf	(__pbssBANK0+4)& (0+127)
  1991                           
  1992                           ; Clear objects allocated to BANK1
  1993  0A8A  30E0               	movlw	low __pbssBANK1
  1994  0A8B  0084               	movwf	4
  1995  0A8C  3000               	movlw	high __pbssBANK1
  1996  0A8D  0085               	movwf	5
  1997  0A8E  3010               	movlw	16
  1998  0A8F  3187  27FA  318A   	fcall	clear_ram0
  1999                           
  2000                           ; Clear objects allocated to BANK2
  2001  0A92  3020               	movlw	low __pbssBANK2
  2002  0A93  0084               	movwf	4
  2003  0A94  3001               	movlw	high __pbssBANK2
  2004  0A95  0085               	movwf	5
  2005  0A96  304A               	movlw	74
  2006  0A97  3187  27FA  318A   	fcall	clear_ram0
  2007                           
  2008                           ; Clear objects allocated to BANK3
  2009  0A9A  30A4               	movlw	low __pbssBANK3
  2010  0A9B  0084               	movwf	4
  2011  0A9C  3001               	movlw	high __pbssBANK3
  2012  0A9D  0085               	movwf	5
  2013  0A9E  3027               	movlw	39
  2014  0A9F  3187  27FA  318A   	fcall	clear_ram0
  2015                           
  2016                           ; Clear objects allocated to BANK4
  2017  0AA2  3020               	movlw	low __pbssBANK4
  2018  0AA3  0084               	movwf	4
  2019  0AA4  3002               	movlw	high __pbssBANK4
  2020  0AA5  0085               	movwf	5
  2021  0AA6  304E               	movlw	78
  2022  0AA7  3187  27FA         	fcall	clear_ram0
  2023  0AA9                     end_of_initialization:	
  2024                           ;End of C runtime variable initialization code
  2025                           
  2026  0AA9                     __end_of__initialization:	
  2027  0AA9  0020               	movlb	0
  2028  0AAA  3189  293A         	ljmp	_main	;jump to C main() function
  2029                           
  2030                           	psect	bssCOMMON
  2031  007C                     __pbssCOMMON:	
  2032  007C                     _pBDTEntryEP0OutNext:	
  2033  007C                     	ds	1
  2034                           
  2035                           	psect	bssBANK0
  2036  006B                     __pbssBANK0:	
  2037  006B                     _pBDTEntryIn:	
  2038  006B                     	ds	2
  2039  006D                     _USBDeviceState:	
  2040  006D                     	ds	1
  2041  006E                     _pBDTEntryEP0OutCurrent:	
  2042  006E                     	ds	1
  2043  006F                     _USTATcopy:	
  2044  006F                     	ds	1
  2045                           
  2046                           	psect	bssBANK1
  2047  00E0                     __pbssBANK1:	
  2048  00E0                     APP_LEDUpdateUSBStatus@ledCount:	
  2049  00E0                     	ds	2
  2050  00E2                     _USBDeferStatusStagePacket:	
  2051  00E2                     	ds	1
  2052  00E3                     _USBTxHandle:	
  2053  00E3                     	ds	1
  2054  00E4                     _controlTransferState:	
  2055  00E4                     	ds	1
  2056  00E5                     _msCounter:	
  2057  00E5                     	ds	1
  2058  00E6                     _pitch:	
  2059  00E6                     	ds	1
  2060  00E7                     _shortPacketStatus:	
  2061  00E7                     	ds	1
  2062  00E8                     store_key_level@idx_key:	
  2063  00E8                     	ds	1
  2064  00E9                     _inPipes:	
  2065  00E9                     	ds	5
  2066  00EE                     _USBActiveConfiguration:	
  2067  00EE                     	ds	1
  2068  00EF                     _USBAlternateInterface:	
  2069  00EF                     	ds	1
  2070                           
  2071                           	psect	bssBANK2
  2072  0120                     __pbssBANK2:	
  2073  0120                     process_level@key_states:	
  2074  0120                     	ds	39
  2075  0147                     _outPipes:	
  2076  0147                     	ds	6
  2077  014D                     _USB1msTickCount:	
  2078  014D                     	ds	4
  2079  0151                     _ep_data_in:	
  2080  0151                     	ds	2
  2081  0153                     _ep_data_out:	
  2082  0153                     	ds	2
  2083  0155                     _note_event:	
  2084  0155                     	ds	2
  2085  0157                     _pBDTEntryOut:	
  2086  0157                     	ds	2
  2087  0159                     _BothEP0OutUOWNsSet:	
  2088  0159                     	ds	1
  2089  015A                     _RemoteWakeup:	
  2090  015A                     	ds	1
  2091  015B                     _USBBusIsSuspended:	
  2092  015B                     	ds	1
  2093  015C                     _USBDeferINDataStagePackets:	
  2094  015C                     	ds	1
  2095  015D                     _USBDeferOUTDataStagePackets:	
  2096  015D                     	ds	1
  2097  015E                     _USBRxHandle:	
  2098  015E                     	ds	1
  2099  015F                     _USBStatusStageEnabledFlag1:	
  2100  015F                     	ds	1
  2101  0160                     _USBStatusStageEnabledFlag2:	
  2102  0160                     	ds	1
  2103  0161                     _USBStatusStageTimeoutCounter:	
  2104  0161                     	ds	1
  2105  0162                     _USBTicksSinceSuspendEnd:	
  2106  0162                     	ds	1
  2107  0163                     _endpoint_number:	
  2108  0163                     	ds	1
  2109  0164                     _is_initialized:	
  2110  0164                     	ds	1
  2111  0165                     _pDst:	
  2112  0165                     	ds	1
  2113  0166                     _sentNoteOff:	
  2114  0166                     	ds	1
  2115  0167                     _wait_timer:	
  2116  0167                     	ds	1
  2117  0168                     is_end_of_scan@scan_counter:	
  2118  0168                     	ds	1
  2119  0169                     scan_task@state:	
  2120  0169                     	ds	1
  2121                           
  2122                           	psect	bssBANK3
  2123  01A4                     __pbssBANK3:	
  2124  01A4                     process_level@key_off_counter:	
  2125  01A4                     	ds	39
  2126                           
  2127                           	psect	bssBANK4
  2128  0220                     __pbssBANK4:	
  2129  0220                     _adc_levels:	
  2130  0220                     	ds	39
  2131  0247                     process_level@key_on_counter:	
  2132  0247                     	ds	39
  2133                           
  2134                           	psect	clrtext
  2135  07FA                     clear_ram0:	
  2136                           ;	Called with FSR0 containing the base address, and
  2137                           ;	WREG with the size to clear
  2138                           
  2139  07FA  0064               	clrwdt	;clear the watchdog before getting into this loop
  2140  07FB                     clrloop0:	
  2141  07FB  0180               	clrf	0	;clear RAM location pointed to by FSR
  2142  07FC  3101               	addfsr 0,1
  2143  07FD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2144  07FE  2FFB               	goto	clrloop0	;have we reached the end yet?
  2145  07FF  3400               	retlw	0	;all done for this memory range, return
  2146                           
  2147                           	psect	cstackCOMMON
  2148  0070                     __pcstackCOMMON:	
  2149  0070                     ?_LED_Enable:	
  2150  0070                     ?_BUTTON_Enable:	
  2151                           ; 0 bytes @ 0x0
  2152                           
  2153  0070                     ?_LED_Off:	
  2154                           ; 0 bytes @ 0x0
  2155                           
  2156  0070                     ?_LED_On:	
  2157                           ; 0 bytes @ 0x0
  2158                           
  2159  0070                     ?_USBDeviceInit:	
  2160                           ; 0 bytes @ 0x0
  2161                           
  2162  0070                     ?_USBDeviceTasks:	
  2163                           ; 0 bytes @ 0x0
  2164                           
  2165  0070                     ?_APP_DeviceAudioMIDITasks:	
  2166                           ; 0 bytes @ 0x0
  2167                           
  2168  0070                     ?_APP_DeviceAudioMIDISOFHandler:	
  2169                           ; 0 bytes @ 0x0
  2170                           
  2171  0070                     ?_APP_DeviceAudioMIDIInitialize:	
  2172                           ; 0 bytes @ 0x0
  2173                           
  2174  0070                     ?_USBWakeFromSuspend:	
  2175                           ; 0 bytes @ 0x0
  2176                           
  2177  0070                     ?_USBSuspend:	
  2178                           ; 0 bytes @ 0x0
  2179                           
  2180  0070                     ?_USBIncrement1msInternalTimers:	
  2181                           ; 0 bytes @ 0x0
  2182                           
  2183  0070                     ?_USBCtrlEPAllowStatusStage:	
  2184                           ; 0 bytes @ 0x0
  2185                           
  2186  0070                     ?_USBStallHandler:	
  2187                           ; 0 bytes @ 0x0
  2188                           
  2189  0070                     ?_USBCtrlEPService:	
  2190                           ; 0 bytes @ 0x0
  2191                           
  2192  0070                     ?_USBCtrlTrfTxService:	
  2193                           ; 0 bytes @ 0x0
  2194                           
  2195  0070                     ?_USBCtrlTrfSetupHandler:	
  2196                           ; 0 bytes @ 0x0
  2197                           
  2198  0070                     ?_USBCtrlTrfOutHandler:	
  2199                           ; 0 bytes @ 0x0
  2200                           
  2201  0070                     ?_USBCtrlTrfInHandler:	
  2202                           ; 0 bytes @ 0x0
  2203                           
  2204  0070                     ?_USBCheckStdRequest:	
  2205                           ; 0 bytes @ 0x0
  2206                           
  2207  0070                     ?_USBStdFeatureReqHandler:	
  2208                           ; 0 bytes @ 0x0
  2209                           
  2210  0070                     ?_SYSTEM_Initialize:	
  2211                           ; 0 bytes @ 0x0
  2212                           
  2213  0070                     ?_SYS_InterruptHigh:	
  2214                           ; 0 bytes @ 0x0
  2215                           
  2216  0070                     ??_SYS_InterruptHigh:	
  2217                           ; 0 bytes @ 0x0
  2218                           
  2219  0070                     ?_APP_LEDUpdateUSBStatus:	
  2220                           ; 0 bytes @ 0x0
  2221                           
  2222  0070                     ?_main:	
  2223                           ; 0 bytes @ 0x0
  2224                           
  2225  0070                     ?_scan_init:	
  2226                           ; 0 bytes @ 0x0
  2227                           
  2228  0070                     ?_set_timer:	
  2229                           ; 0 bytes @ 0x0
  2230                           
  2231  0070                     ?_run_adc:	
  2232                           ; 0 bytes @ 0x0
  2233                           
  2234  0070                     ?_USBCtrlEPAllowDataStage:	
  2235                           ; 0 bytes @ 0x0
  2236                           
  2237  0070                     ?_USBCtrlEPServiceComplete:	
  2238                           ; 0 bytes @ 0x0
  2239                           
  2240  0070                     ?_USBCtrlTrfRxService:	
  2241                           ; 0 bytes @ 0x0
  2242                           
  2243  0070                     ?_USBStdSetCfgHandler:	
  2244                           ; 0 bytes @ 0x0
  2245                           
  2246  0070                     ?_USBStdGetDscHandler:	
  2247                           ; 0 bytes @ 0x0
  2248                           
  2249  0070                     ?_USBStdGetStatusHandler:	
  2250                           ; 0 bytes @ 0x0
  2251                           
  2252  0070                     ?_BUTTON_IsPressed:	
  2253                           ; 0 bytes @ 0x0
  2254                           
  2255  0070                     ?_waiting_for_timer:	
  2256                           ; 1 bytes @ 0x0
  2257                           
  2258  0070                     ?_get_data:	
  2259                           ; 1 bytes @ 0x0
  2260                           
  2261  0070                     ?_is_end_of_scan:	
  2262                           ; 1 bytes @ 0x0
  2263                           
  2264  0070                     ?_is_adc_ready:	
  2265                           ; 1 bytes @ 0x0
  2266                           
  2267  0070                     ?_get_adc:	
  2268                           ; 1 bytes @ 0x0
  2269                           
  2270                           
  2271                           ; 1 bytes @ 0x0
  2272  0070                     	ds	1
  2273  0071                     ??_LED_Enable:	
  2274  0071                     ??_BUTTON_Enable:	
  2275                           ; 0 bytes @ 0x1
  2276                           
  2277  0071                     ??_LED_Off:	
  2278                           ; 0 bytes @ 0x1
  2279                           
  2280  0071                     ??_LED_On:	
  2281                           ; 0 bytes @ 0x1
  2282                           
  2283  0071                     ??_USBDeviceInit:	
  2284                           ; 0 bytes @ 0x1
  2285                           
  2286  0071                     ??_APP_DeviceAudioMIDISOFHandler:	
  2287                           ; 0 bytes @ 0x1
  2288                           
  2289  0071                     ??_BUTTON_IsPressed:	
  2290                           ; 0 bytes @ 0x1
  2291                           
  2292  0071                     ??_USBIncrement1msInternalTimers:	
  2293                           ; 0 bytes @ 0x1
  2294                           
  2295  0071                     ??_USBCtrlEPAllowStatusStage:	
  2296                           ; 0 bytes @ 0x1
  2297                           
  2298  0071                     ??_USBStallHandler:	
  2299                           ; 0 bytes @ 0x1
  2300                           
  2301  0071                     ?_USBConfigureEndpoint:	
  2302                           ; 0 bytes @ 0x1
  2303                           
  2304  0071                     ??_USBCtrlTrfTxService:	
  2305                           ; 0 bytes @ 0x1
  2306                           
  2307  0071                     ??_scan_init:	
  2308                           ; 0 bytes @ 0x1
  2309                           
  2310  0071                     ??_set_timer:	
  2311                           ; 0 bytes @ 0x1
  2312                           
  2313  0071                     ??_waiting_for_timer:	
  2314                           ; 0 bytes @ 0x1
  2315                           
  2316  0071                     ?_set_clock_and_data:	
  2317                           ; 0 bytes @ 0x1
  2318                           
  2319  0071                     ??_get_data:	
  2320                           ; 0 bytes @ 0x1
  2321                           
  2322  0071                     ??_is_end_of_scan:	
  2323                           ; 0 bytes @ 0x1
  2324                           
  2325  0071                     ??_run_adc:	
  2326                           ; 0 bytes @ 0x1
  2327                           
  2328  0071                     ??_is_adc_ready:	
  2329                           ; 0 bytes @ 0x1
  2330                           
  2331  0071                     ??_get_adc:	
  2332                           ; 0 bytes @ 0x1
  2333                           
  2334  0071                     ??_USBStdGetDscHandler:	
  2335                           ; 0 bytes @ 0x1
  2336                           
  2337  0071                     ??_USBStdGetStatusHandler:	
  2338                           ; 0 bytes @ 0x1
  2339                           
  2340  0071                     ?_USBTransferOnePacket:	
  2341                           ; 0 bytes @ 0x1
  2342                           
  2343  0071                     ?_memset:	
  2344                           ; 1 bytes @ 0x1
  2345                           
  2346  0071                     _waiting_for_timer$821:	
  2347                           ; 1 bytes @ 0x1
  2348                           
  2349  0071                     set_clock_and_data@d:	
  2350                           ; 1 bytes @ 0x1
  2351                           
  2352  0071                     BUTTON_IsPressed@button:	
  2353                           ; 1 bytes @ 0x1
  2354                           
  2355  0071                     BUTTON_Enable@button:	
  2356                           ; 1 bytes @ 0x1
  2357                           
  2358  0071                     LED_On@led:	
  2359                           ; 1 bytes @ 0x1
  2360                           
  2361  0071                     LED_Off@led:	
  2362                           ; 1 bytes @ 0x1
  2363                           
  2364  0071                     LED_Enable@led:	
  2365                           ; 1 bytes @ 0x1
  2366                           
  2367  0071                     USBTransferOnePacket@dir:	
  2368                           ; 1 bytes @ 0x1
  2369                           
  2370  0071                     USBConfigureEndpoint@direction:	
  2371                           ; 1 bytes @ 0x1
  2372                           
  2373  0071                     memset@c:	
  2374                           ; 1 bytes @ 0x1
  2375                           
  2376                           
  2377                           ; 2 bytes @ 0x1
  2378  0071                     	ds	1
  2379  0072                     ??_USBConfigureEndpoint:	
  2380  0072                     ??_SYSTEM_Initialize:	
  2381                           ; 0 bytes @ 0x2
  2382                           
  2383  0072                     ??_APP_LEDUpdateUSBStatus:	
  2384                           ; 0 bytes @ 0x2
  2385                           
  2386  0072                     ??_set_clock_and_data:	
  2387                           ; 0 bytes @ 0x2
  2388                           
  2389  0072                     ?_process_level:	
  2390                           ; 0 bytes @ 0x2
  2391                           
  2392  0072                     SYSTEM_Initialize@state:	
  2393                           ; 0 bytes @ 0x2
  2394                           
  2395  0072                     process_level@old_level:	
  2396                           ; 1 bytes @ 0x2
  2397                           
  2398  0072                     USBStdGetStatusHandler@p:	
  2399                           ; 1 bytes @ 0x2
  2400                           
  2401  0072                     USBTransferOnePacket@data:	
  2402                           ; 1 bytes @ 0x2
  2403                           
  2404                           
  2405                           ; 2 bytes @ 0x2
  2406  0072                     	ds	1
  2407  0073                     ??_USBCtrlTrfRxService:	
  2408  0073                     set_clock_and_data@c:	
  2409                           ; 0 bytes @ 0x3
  2410                           
  2411  0073                     is_end_of_scan@res:	
  2412                           ; 1 bytes @ 0x3
  2413                           
  2414  0073                     process_level@new_level:	
  2415                           ; 1 bytes @ 0x3
  2416                           
  2417  0073                     USBCtrlTrfTxService@byteToSend:	
  2418                           ; 1 bytes @ 0x3
  2419                           
  2420  0073                     USBDeviceInit@p:	
  2421                           ; 1 bytes @ 0x3
  2422                           
  2423  0073                     memset@n:	
  2424                           ; 2 bytes @ 0x3
  2425                           
  2426                           
  2427                           ; 2 bytes @ 0x3
  2428  0073                     	ds	1
  2429  0074                     ??_USBCtrlTrfInHandler:	
  2430  0074                     ??_process_level:	
  2431                           ; 0 bytes @ 0x4
  2432                           
  2433  0074                     ??_USBCtrlEPAllowDataStage:	
  2434                           ; 0 bytes @ 0x4
  2435                           
  2436  0074                     USBTransferOnePacket@len:	
  2437                           ; 0 bytes @ 0x4
  2438                           
  2439                           
  2440                           ; 1 bytes @ 0x4
  2441  0074                     	ds	1
  2442  0075                     ??_USBTransferOnePacket:	
  2443  0075                     ??_memset:	
  2444                           ; 0 bytes @ 0x5
  2445                           
  2446  0075                     USBDeviceInit@i_1702:	
  2447                           ; 0 bytes @ 0x5
  2448                           
  2449  0075                     USBCtrlTrfRxService@i:	
  2450                           ; 1 bytes @ 0x5
  2451                           
  2452                           
  2453                           ; 1 bytes @ 0x5
  2454  0075                     	ds	1
  2455  0076                     ??_USBCtrlEPServiceComplete:	
  2456  0076                     USBDeviceInit@i:	
  2457                           ; 0 bytes @ 0x6
  2458                           
  2459  0076                     USBConfigureEndpoint@EPNum:	
  2460                           ; 1 bytes @ 0x6
  2461                           
  2462  0076                     USBCtrlTrfRxService@byteToRead:	
  2463                           ; 1 bytes @ 0x6
  2464                           
  2465  0076                     USBCtrlTrfInHandler@lastDTS:	
  2466                           ; 1 bytes @ 0x6
  2467                           
  2468  0076                     memset@p1:	
  2469                           ; 1 bytes @ 0x6
  2470                           
  2471                           
  2472                           ; 1 bytes @ 0x6
  2473  0076                     	ds	1
  2474  0077                     ??_USBCtrlTrfOutHandler:	
  2475  0077                     ?_store_key_level:	
  2476                           ; 0 bytes @ 0x7
  2477                           
  2478  0077                     store_key_level@end_of_scan:	
  2479                           ; 1 bytes @ 0x7
  2480                           
  2481  0077                     USBTransferOnePacket@ep:	
  2482                           ; 1 bytes @ 0x7
  2483                           
  2484  0077                     USBConfigureEndpoint@handle:	
  2485                           ; 1 bytes @ 0x7
  2486                           
  2487  0077                     memset@p:	
  2488                           ; 1 bytes @ 0x7
  2489                           
  2490                           
  2491                           ; 1 bytes @ 0x7
  2492  0077                     	ds	1
  2493  0078                     ?_USBEnableEndpoint:	
  2494  0078                     ??_store_key_level:	
  2495                           ; 0 bytes @ 0x8
  2496                           
  2497  0078                     USBEnableEndpoint@options:	
  2498                           ; 0 bytes @ 0x8
  2499                           
  2500  0078                     USBTransferOnePacket@handle:	
  2501                           ; 1 bytes @ 0x8
  2502                           
  2503                           
  2504                           ; 1 bytes @ 0x8
  2505  0078                     	ds	1
  2506  0079                     ??_USBEnableEndpoint:	
  2507                           
  2508                           ; 0 bytes @ 0x9
  2509  0079                     	ds	1
  2510  007A                     store_key_level@level:	
  2511                           
  2512                           ; 1 bytes @ 0xA
  2513  007A                     	ds	1
  2514  007B                     ??_scan_task:	
  2515  007B                     ??_USBWakeFromSuspend:	
  2516                           ; 0 bytes @ 0xB
  2517                           
  2518  007B                     ??_USBSuspend:	
  2519                           ; 0 bytes @ 0xB
  2520                           
  2521  007B                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2522                           ; 0 bytes @ 0xB
  2523                           
  2524  007B                     ??_USBStdSetCfgHandler:	
  2525                           ; 0 bytes @ 0xB
  2526                           
  2527                           
  2528                           ; 0 bytes @ 0xB
  2529  007B                     	ds	1
  2530  007C                     ??_main:	
  2531                           
  2532                           	psect	cstackBANK0
  2533  0050                     __pcstackBANK0:	
  2534                           ; 0 bytes @ 0xC
  2535                           
  2536  0050                     process_level@old_state:	
  2537  0050                     USBEnableEndpoint@p:	
  2538                           ; 2 bytes @ 0x0
  2539                           
  2540                           
  2541                           ; 2 bytes @ 0x0
  2542  0050                     	ds	2
  2543  0052                     USBEnableEndpoint@ep:	
  2544  0052                     process_level@current_state:	
  2545                           ; 1 bytes @ 0x2
  2546                           
  2547                           
  2548                           ; 2 bytes @ 0x2
  2549  0052                     	ds	1
  2550  0053                     ??_APP_DeviceAudioMIDIInitialize:	
  2551                           
  2552                           ; 0 bytes @ 0x3
  2553  0053                     	ds	1
  2554  0054                     _process_level$859:	
  2555                           
  2556                           ; 2 bytes @ 0x4
  2557  0054                     	ds	1
  2558  0055                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  2559  0055                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2560                           ; 1 bytes @ 0x5
  2561                           
  2562                           
  2563                           ; 2 bytes @ 0x5
  2564  0055                     	ds	1
  2565  0056                     process_level@off_flag:	
  2566                           
  2567                           ; 1 bytes @ 0x6
  2568  0056                     	ds	1
  2569  0057                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2570  0057                     _process_level$858:	
  2571                           ; 1 bytes @ 0x7
  2572                           
  2573                           
  2574                           ; 1 bytes @ 0x7
  2575  0057                     	ds	1
  2576  0058                     process_level@on_flag:	
  2577  0058                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2578                           ; 1 bytes @ 0x8
  2579                           
  2580                           
  2581                           ; 2 bytes @ 0x8
  2582  0058                     	ds	1
  2583  0059                     process_level@filtered_state:	
  2584                           
  2585                           ; 1 bytes @ 0x9
  2586  0059                     	ds	1
  2587  005A                     ??_USBStdFeatureReqHandler:	
  2588  005A                     process_level@idx_key:	
  2589                           ; 0 bytes @ 0xA
  2590                           
  2591  005A                     USBStdSetCfgHandler@p:	
  2592                           ; 1 bytes @ 0xA
  2593                           
  2594                           
  2595                           ; 2 bytes @ 0xA
  2596  005A                     	ds	1
  2597  005B                     ?_scan_task:	
  2598  005B                     scan_task@velocity:	
  2599                           ; 1 bytes @ 0xB
  2600                           
  2601                           
  2602                           ; 1 bytes @ 0xB
  2603  005B                     	ds	1
  2604  005C                     USBStdSetCfgHandler@i_2030:	
  2605  005C                     _scan_task$869:	
  2606                           ; 1 bytes @ 0xC
  2607                           
  2608  005C                     USBStdFeatureReqHandler@pUEP:	
  2609                           ; 2 bytes @ 0xC
  2610                           
  2611                           
  2612                           ; 2 bytes @ 0xC
  2613  005C                     	ds	1
  2614  005D                     USBStdSetCfgHandler@i:	
  2615                           
  2616                           ; 1 bytes @ 0xD
  2617  005D                     	ds	1
  2618  005E                     USBStdFeatureReqHandler@current_ep_data:	
  2619  005E                     _scan_task$870:	
  2620                           ; 1 bytes @ 0xE
  2621                           
  2622                           
  2623                           ; 2 bytes @ 0xE
  2624  005E                     	ds	1
  2625  005F                     USBStdFeatureReqHandler@p:	
  2626                           
  2627                           ; 1 bytes @ 0xF
  2628  005F                     	ds	1
  2629  0060                     ??_USBCheckStdRequest:	
  2630  0060                     scan_task@note:	
  2631                           ; 0 bytes @ 0x10
  2632                           
  2633                           
  2634                           ; 1 bytes @ 0x10
  2635  0060                     	ds	1
  2636  0061                     ??_APP_DeviceAudioMIDITasks:	
  2637  0061                     ??_USBCtrlTrfSetupHandler:	
  2638                           ; 0 bytes @ 0x11
  2639                           
  2640                           
  2641                           ; 0 bytes @ 0x11
  2642  0061                     	ds	1
  2643  0062                     ??_USBCtrlEPService:	
  2644                           
  2645                           ; 0 bytes @ 0x12
  2646  0062                     	ds	1
  2647  0063                     _APP_DeviceAudioMIDITasks$421:	
  2648                           
  2649                           ; 2 bytes @ 0x13
  2650  0063                     	ds	2
  2651  0065                     USBCtrlEPService@setup_cnt:	
  2652  0065                     _APP_DeviceAudioMIDITasks$462:	
  2653                           ; 1 bytes @ 0x15
  2654                           
  2655                           
  2656                           ; 2 bytes @ 0x15
  2657  0065                     	ds	1
  2658  0066                     ??_USBDeviceTasks:	
  2659                           
  2660                           ; 0 bytes @ 0x16
  2661  0066                     	ds	1
  2662  0067                     _APP_DeviceAudioMIDITasks$463:	
  2663                           
  2664                           ; 2 bytes @ 0x17
  2665  0067                     	ds	1
  2666  0068                     USBDeviceTasks@i:	
  2667                           
  2668                           ; 1 bytes @ 0x18
  2669  0068                     	ds	1
  2670  0069                     APP_DeviceAudioMIDITasks@scan_pitch:	
  2671                           
  2672                           ; 1 bytes @ 0x19
  2673  0069                     	ds	1
  2674  006A                     APP_DeviceAudioMIDITasks@velocity:	
  2675                           
  2676                           ; 1 bytes @ 0x1A
  2677  006A                     	ds	1
  2678                           
  2679                           	psect	maintext
  2680  093A                     __pmaintext:	
  2681 ;;
  2682 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2683 ;;
  2684 ;; *************** function _main *****************
  2685 ;; Defined at:
  2686 ;;		line 35 in file "../src/main.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;		None
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;		None
  2691 ;; Return value:  Size  Location     Type
  2692 ;;		None               void
  2693 ;; Registers used:
  2694 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2695 ;; Tracked objects:
  2696 ;;		On entry : 17F/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2704 ;;Total ram usage:        0 bytes
  2705 ;; Hardware stack levels required when called:   10
  2706 ;; This function calls:
  2707 ;;		_SYSTEM_Initialize
  2708 ;;		_USBDeviceInit
  2709 ;;		_USBDeviceTasks
  2710 ;;		_APP_DeviceAudioMIDITasks
  2711 ;; This function is called by:
  2712 ;;		Startup code after reset
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           
  2717                           ;psect for function _main
  2718  093A                     _main:	
  2719                           
  2720                           ;main.c: 36: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  2721                           
  2722                           ;incstack = 0
  2723                           ; Regs used in _main: [allreg]
  2724  093A  3000               	movlw	0
  2725  093B  3189  21E5  3189   	fcall	_SYSTEM_Initialize
  2726                           
  2727                           ;main.c: 38: USBDeviceInit();
  2728  093E  3185  25C4  3189   	fcall	_USBDeviceInit
  2729  0941                     l4200:	
  2730                           ;main.c: 39: ;
  2731                           ;main.c: 41: while(1)
  2732                           
  2733                           ;main.c: 75: {
  2734                           ;main.c: 77: continue;
  2735                           
  2736                           ;main.c: 65: {
  2737                           ;main.c: 67: continue;
  2738                           
  2739                           
  2740                           ;main.c: 42: {
  2741                           ;main.c: 43: ;
  2742                           ;main.c: 58: USBDeviceTasks();
  2743  0941  3183  23FD  3189   	fcall	_USBDeviceTasks
  2744                           
  2745                           ;main.c: 64: if( USBDeviceState < CONFIGURED_STATE )
  2746  0944  3020               	movlw	32
  2747  0945  0020               	movlb	0	; select bank0
  2748  0946  026D               	subwf	_USBDeviceState,w
  2749  0947  1C03               	btfss	3,0
  2750  0948  2941               	goto	l4200
  2751                           
  2752                           ;main.c: 68: }
  2753                           ;main.c: 74: if( UCONbits.SUSPND == 1 )
  2754  0949  003D               	movlb	29	; select bank29
  2755  094A  188E               	btfsc	14,1	;volatile
  2756  094B  2941               	goto	l4200
  2757                           
  2758                           ;main.c: 78: }
  2759                           ;main.c: 81: APP_DeviceAudioMIDITasks();
  2760  094C  3180  200D  3189   	fcall	_APP_DeviceAudioMIDITasks
  2761  094F  2941               	goto	l4200
  2762  0950                     __end_of_main:	
  2763                           
  2764                           	psect	text1
  2765  000D                     __ptext1:	
  2766 ;; *************** function _APP_DeviceAudioMIDITasks *****************
  2767 ;; Defined at:
  2768 ;;		line 58 in file "../src/app_device_audio_midi.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;		None
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  velocity        1   26[BANK0 ] unsigned char 
  2773 ;;  scan_pitch      1   25[BANK0 ] unsigned char 
  2774 ;; Return value:  Size  Location     Type
  2775 ;;		None               void
  2776 ;; Registers used:
  2777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2784 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2785 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2786 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2787 ;;Total ram usage:       10 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    5
  2790 ;; This function calls:
  2791 ;;		_USBTransferOnePacket
  2792 ;;		_scan_task
  2793 ;;		_BUTTON_IsPressed
  2794 ;; This function is called by:
  2795 ;;		_main
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           
  2800                           ;psect for function _APP_DeviceAudioMIDITasks
  2801  000D                     _APP_DeviceAudioMIDITasks:	
  2802                           
  2803                           ;app_device_audio_midi.c: 59: if( USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND)
  2804                           
  2805                           ;incstack = 0
  2806                           ; Regs used in _APP_DeviceAudioMIDITasks: [allreg]
  2807  000D  3020               	movlw	32
  2808  000E  0020               	movlb	0	; select bank0
  2809  000F  026D               	subwf	_USBDeviceState,w
  2810  0010  1C03               	skipc
  2811  0011  0008               	return
  2812  0012  003D               	movlb	29	; select bank29
  2813  0013  188E               	btfsc	14,1	;volatile
  2814  0014  0008               	return
  2815                           
  2816                           ;app_device_audio_midi.c: 62: if(!(USBRxHandle==0?0:((volatile BDT_ENTRY*)USBRxHandle)->
      +                          STAT.UOWN))
  2817                           
  2818                           ;app_device_audio_midi.c: 60: return;
  2819  0015  0022               	movlb	2	; select bank2
  2820  0016  085E               	movf	_USBRxHandle^(0+256),w
  2821  0017  1903               	btfsc	3,2
  2822  0018  2827               	goto	l3080
  2823  0019  085E               	movf	_USBRxHandle^(0+256),w
  2824  001A  0086               	movwf	6
  2825  001B  0187               	clrf	7
  2826  001C  0D01               	rlf	1,w
  2827  001D  0D01               	rlf	1,w
  2828  001E  3901               	andlw	1
  2829  001F  0020               	movlb	0	; select bank0
  2830  0020  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  2831  0021  01E2               	clrf	??_APP_DeviceAudioMIDITasks+1
  2832  0022  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  2833  0023  00E3               	movwf	_APP_DeviceAudioMIDITasks$421
  2834  0024  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  2835  0025  00E4               	movwf	_APP_DeviceAudioMIDITasks$421+1
  2836  0026  282A               	goto	l3082
  2837  0027                     l3080:	
  2838  0027  0020               	movlb	0	; select bank0
  2839  0028  01E3               	clrf	_APP_DeviceAudioMIDITasks$421
  2840  0029  01E4               	clrf	_APP_DeviceAudioMIDITasks$421+1
  2841  002A                     l3082:	
  2842  002A  0864               	movf	_APP_DeviceAudioMIDITasks$421+1,w
  2843  002B  0463               	iorwf	_APP_DeviceAudioMIDITasks$421,w
  2844  002C  1D03               	skipz
  2845  002D  2840               	goto	l3086
  2846                           
  2847                           ;app_device_audio_midi.c: 63: {
  2848                           ;app_device_audio_midi.c: 70: USBRxHandle = USBTransferOnePacket(1,0,(uint8_t*)&Received
      +                          DataBuffer,64);
  2849  002E  01F1               	clrf	?_USBTransferOnePacket
  2850  002F  30A0               	movlw	160
  2851  0030  00F2               	movwf	?_USBTransferOnePacket+1
  2852  0031  3000               	movlw	0
  2853  0032  00F3               	movwf	?_USBTransferOnePacket+2
  2854  0033  3040               	movlw	64
  2855  0034  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  2856  0035  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  2857  0036  00F4               	movwf	?_USBTransferOnePacket+3
  2858  0037  3001               	movlw	1
  2859  0038  318C  244B  3180   	fcall	_USBTransferOnePacket
  2860  003B  0020               	movlb	0	; select bank0
  2861  003C  00E2               	movwf	??_APP_DeviceAudioMIDITasks+1
  2862  003D  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  2863  003E  0022               	movlb	2	; select bank2
  2864  003F  00DE               	movwf	_USBRxHandle^(0+256)
  2865  0040                     l3086:	
  2866                           
  2867                           ;app_device_audio_midi.c: 71: }
  2868                           ;app_device_audio_midi.c: 73: {
  2869                           ;app_device_audio_midi.c: 74: uint8_t scan_pitch = 0x3C, velocity = 0;
  2870  0040  303C               	movlw	60
  2871  0041  0020               	movlb	0	; select bank0
  2872  0042  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  2873  0043  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  2874  0044  00E9               	movwf	APP_DeviceAudioMIDITasks@scan_pitch
  2875  0045  01EA               	clrf	APP_DeviceAudioMIDITasks@velocity
  2876                           
  2877                           ;app_device_audio_midi.c: 75: if (scan_task(&scan_pitch, &velocity)) {
  2878  0046  306A               	movlw	APP_DeviceAudioMIDITasks@velocity& (0+255)
  2879  0047  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  2880  0048  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  2881  0049  00DB               	movwf	?_scan_task
  2882  004A  3069               	movlw	APP_DeviceAudioMIDITasks@scan_pitch& (0+255)
  2883  004B  3186  2670  3180   	fcall	_scan_task
  2884  004E  3A00               	xorlw	0
  2885  004F  1903               	skipnz
  2886  0050  2886               	goto	l3100
  2887                           
  2888                           ;app_device_audio_midi.c: 76: midiData.Val = 0;
  2889  0051  3000               	movlw	0
  2890  0052  0023               	movlb	3	; select bank3
  2891  0053  00A3               	movwf	35
  2892  0054  3000               	movlw	0
  2893  0055  00A2               	movwf	34
  2894  0056  3000               	movlw	0
  2895  0057  00A1               	movwf	33
  2896  0058  3000               	movlw	0
  2897  0059  00A0               	movwf	32
  2898                           
  2899                           ;app_device_audio_midi.c: 77: midiData.CableNumber = 0;
  2900  005A  300F               	movlw	-241
  2901  005B  05A0               	andwf	32,f
  2902                           
  2903                           ;app_device_audio_midi.c: 78: midiData.CodeIndexNumber = 0x9;
  2904  005C  0820               	movf	32,w
  2905  005D  39F0               	andlw	-16
  2906  005E  3809               	iorlw	9
  2907  005F  00A0               	movwf	32
  2908                           
  2909                           ;app_device_audio_midi.c: 79: midiData.DATA_0 = 0x90;
  2910  0060  3090               	movlw	144
  2911  0061  0020               	movlb	0	; select bank0
  2912  0062  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  2913  0063  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  2914  0064  0023               	movlb	3	; select bank3
  2915  0065  00A1               	movwf	33
  2916                           
  2917                           ;app_device_audio_midi.c: 80: midiData.DATA_1 = scan_pitch;
  2918  0066  0020               	movlb	0	; select bank0
  2919  0067  0869               	movf	APP_DeviceAudioMIDITasks@scan_pitch,w
  2920  0068  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  2921  0069  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  2922  006A  0023               	movlb	3	; select bank3
  2923  006B  00A2               	movwf	34
  2924                           
  2925                           ;app_device_audio_midi.c: 81: midiData.DATA_2 = velocity;
  2926  006C  0020               	movlb	0	; select bank0
  2927  006D  086A               	movf	APP_DeviceAudioMIDITasks@velocity,w
  2928  006E  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  2929  006F  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  2930  0070  0023               	movlb	3	; select bank3
  2931  0071  00A3               	movwf	35
  2932                           
  2933                           ;app_device_audio_midi.c: 82: USBTxHandle = USBTransferOnePacket(1,1,(uint8_t*)&midiData
      +                          ,4);
  2934  0072  01F1               	clrf	?_USBTransferOnePacket
  2935  0073  0AF1               	incf	?_USBTransferOnePacket,f
  2936  0074  30A0               	movlw	160
  2937  0075  00F2               	movwf	?_USBTransferOnePacket+1
  2938  0076  3001               	movlw	1
  2939  0077  00F3               	movwf	?_USBTransferOnePacket+2
  2940  0078  3004               	movlw	4
  2941  0079  0020               	movlb	0	; select bank0
  2942  007A  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  2943  007B  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  2944  007C  00F4               	movwf	?_USBTransferOnePacket+3
  2945  007D  3001               	movlw	1
  2946  007E  318C  244B  3180   	fcall	_USBTransferOnePacket
  2947  0081  0020               	movlb	0	; select bank0
  2948  0082  00E2               	movwf	??_APP_DeviceAudioMIDITasks+1
  2949  0083  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  2950  0084  0021               	movlb	1	; select bank1
  2951  0085  00E3               	movwf	_USBTxHandle^(0+128)
  2952  0086                     l3100:	
  2953                           
  2954                           ;app_device_audio_midi.c: 83: }
  2955                           ;app_device_audio_midi.c: 84: }
  2956                           ;app_device_audio_midi.c: 87: if(BUTTON_IsPressed(BUTTON_S1))
  2957  0086  3001               	movlw	1
  2958  0087  3189  2127  3180   	fcall	_BUTTON_IsPressed
  2959  008A  3A00               	xorlw	0
  2960  008B  1903               	skipnz
  2961  008C  28EB               	goto	l3124
  2962                           
  2963                           ;app_device_audio_midi.c: 88: {
  2964                           ;app_device_audio_midi.c: 92: if(msCounter == 0 && sentNoteOff && !(USBTxHandle==0?0:((v
      +                          olatile BDT_ENTRY*)USBTxHandle)->STAT.UOWN)) {
  2965  008D  0021               	movlb	1	; select bank1
  2966  008E  08E5               	movf	_msCounter^(0+128),f
  2967  008F  1D03               	skipz
  2968  0090  0008               	return
  2969  0091  0022               	movlb	2	; select bank2
  2970  0092  0866               	movf	_sentNoteOff^(0+256),w
  2971  0093  1903               	btfsc	3,2
  2972  0094  0008               	return
  2973  0095  0021               	movlb	1	; select bank1
  2974  0096  0863               	movf	_USBTxHandle^(0+128),w
  2975  0097  1903               	btfsc	3,2
  2976  0098  28A7               	goto	l3110
  2977  0099  0863               	movf	_USBTxHandle^(0+128),w
  2978  009A  0086               	movwf	6
  2979  009B  0187               	clrf	7
  2980  009C  0D01               	rlf	1,w
  2981  009D  0D01               	rlf	1,w
  2982  009E  3901               	andlw	1
  2983  009F  0020               	movlb	0	; select bank0
  2984  00A0  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  2985  00A1  01E2               	clrf	??_APP_DeviceAudioMIDITasks+1
  2986  00A2  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  2987  00A3  00E5               	movwf	_APP_DeviceAudioMIDITasks$462
  2988  00A4  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  2989  00A5  00E6               	movwf	_APP_DeviceAudioMIDITasks$462+1
  2990  00A6  28AA               	goto	l3112
  2991  00A7                     l3110:	
  2992  00A7  0020               	movlb	0	; select bank0
  2993  00A8  01E5               	clrf	_APP_DeviceAudioMIDITasks$462
  2994  00A9  01E6               	clrf	_APP_DeviceAudioMIDITasks$462+1
  2995  00AA                     l3112:	
  2996  00AA  0866               	movf	_APP_DeviceAudioMIDITasks$462+1,w
  2997  00AB  0465               	iorwf	_APP_DeviceAudioMIDITasks$462,w
  2998  00AC  1D03               	skipz
  2999  00AD  0008               	return
  3000                           
  3001                           ;app_device_audio_midi.c: 94: msCounter = 100;
  3002  00AE  3064               	movlw	100
  3003  00AF  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  3004  00B0  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  3005  00B1  0021               	movlb	1	; select bank1
  3006  00B2  00E5               	movwf	_msCounter^(0+128)
  3007                           
  3008                           ;app_device_audio_midi.c: 95: midiData.Val = 0;
  3009  00B3  3000               	movlw	0
  3010  00B4  0023               	movlb	3	; select bank3
  3011  00B5  00A3               	movwf	35
  3012  00B6  3000               	movlw	0
  3013  00B7  00A2               	movwf	34
  3014  00B8  3000               	movlw	0
  3015  00B9  00A1               	movwf	33
  3016  00BA  3000               	movlw	0
  3017  00BB  00A0               	movwf	32
  3018                           
  3019                           ;app_device_audio_midi.c: 97: midiData.CableNumber = 0;
  3020  00BC  300F               	movlw	-241
  3021  00BD  05A0               	andwf	32,f
  3022                           
  3023                           ;app_device_audio_midi.c: 98: midiData.CodeIndexNumber = 0x9;
  3024  00BE  0820               	movf	32,w
  3025  00BF  39F0               	andlw	-16
  3026  00C0  3809               	iorlw	9
  3027  00C1  00A0               	movwf	32
  3028                           
  3029                           ;app_device_audio_midi.c: 99: midiData.DATA_0 = 0x90;
  3030  00C2  3090               	movlw	144
  3031  00C3  0020               	movlb	0	; select bank0
  3032  00C4  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  3033  00C5  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  3034  00C6  0023               	movlb	3	; select bank3
  3035  00C7  00A1               	movwf	33
  3036                           
  3037                           ;app_device_audio_midi.c: 100: midiData.DATA_1 = pitch;
  3038  00C8  0021               	movlb	1	; select bank1
  3039  00C9  0866               	movf	_pitch^(0+128),w
  3040  00CA  0020               	movlb	0	; select bank0
  3041  00CB  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  3042  00CC  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  3043  00CD  0023               	movlb	3	; select bank3
  3044  00CE  00A2               	movwf	34
  3045                           
  3046                           ;app_device_audio_midi.c: 101: midiData.DATA_2 = 0x7F;
  3047  00CF  307F               	movlw	127
  3048  00D0  0020               	movlb	0	; select bank0
  3049  00D1  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  3050  00D2  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  3051  00D3  0023               	movlb	3	; select bank3
  3052  00D4  00A3               	movwf	35
  3053                           
  3054                           ;app_device_audio_midi.c: 102: USBTxHandle = USBTransferOnePacket(1,1,(uint8_t*)&midiDat
      +                          a,4);
  3055  00D5  01F1               	clrf	?_USBTransferOnePacket
  3056  00D6  0AF1               	incf	?_USBTransferOnePacket,f
  3057  00D7  30A0               	movlw	160
  3058  00D8  00F2               	movwf	?_USBTransferOnePacket+1
  3059  00D9  3001               	movlw	1
  3060  00DA  00F3               	movwf	?_USBTransferOnePacket+2
  3061  00DB  3004               	movlw	4
  3062  00DC  0020               	movlb	0	; select bank0
  3063  00DD  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  3064  00DE  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  3065  00DF  00F4               	movwf	?_USBTransferOnePacket+3
  3066  00E0  3001               	movlw	1
  3067  00E1  318C  244B         	fcall	_USBTransferOnePacket
  3068  00E3  0020               	movlb	0	; select bank0
  3069  00E4  00E2               	movwf	??_APP_DeviceAudioMIDITasks+1
  3070  00E5  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  3071  00E6  0021               	movlb	1	; select bank1
  3072  00E7  00E3               	movwf	_USBTxHandle^(0+128)
  3073                           
  3074                           ;app_device_audio_midi.c: 104: sentNoteOff = 0;
  3075  00E8  0022               	movlb	2	; select bank2
  3076  00E9  01E6               	clrf	_sentNoteOff^(0+256)
  3077                           
  3078                           ;app_device_audio_midi.c: 105: }
  3079                           ;app_device_audio_midi.c: 106: }
  3080  00EA  0008               	return
  3081  00EB                     l3124:	
  3082                           
  3083                           ;app_device_audio_midi.c: 107: else if (msCounter == 0 && !sentNoteOff && !(USBTxHandle=
      +                          =0?0:((volatile BDT_ENTRY*)USBTxHandle)->STAT.UOWN)) {
  3084  00EB  0021               	movlb	1	; select bank1
  3085  00EC  08E5               	movf	_msCounter^(0+128),f
  3086  00ED  1D03               	skipz
  3087  00EE  0008               	return
  3088  00EF  0022               	movlb	2	; select bank2
  3089  00F0  08E6               	movf	_sentNoteOff^(0+256),f
  3090  00F1  1D03               	skipz
  3091  00F2  0008               	return
  3092  00F3  0021               	movlb	1	; select bank1
  3093  00F4  0863               	movf	_USBTxHandle^(0+128),w
  3094  00F5  1903               	btfsc	3,2
  3095  00F6  2905               	goto	l3132
  3096  00F7  0863               	movf	_USBTxHandle^(0+128),w
  3097  00F8  0086               	movwf	6
  3098  00F9  0187               	clrf	7
  3099  00FA  0D01               	rlf	1,w
  3100  00FB  0D01               	rlf	1,w
  3101  00FC  3901               	andlw	1
  3102  00FD  0020               	movlb	0	; select bank0
  3103  00FE  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  3104  00FF  01E2               	clrf	??_APP_DeviceAudioMIDITasks+1
  3105  0100  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  3106  0101  00E7               	movwf	_APP_DeviceAudioMIDITasks$463
  3107  0102  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  3108  0103  00E8               	movwf	_APP_DeviceAudioMIDITasks$463+1
  3109  0104  2908               	goto	l3134
  3110  0105                     l3132:	
  3111  0105  0020               	movlb	0	; select bank0
  3112  0106  01E7               	clrf	_APP_DeviceAudioMIDITasks$463
  3113  0107  01E8               	clrf	_APP_DeviceAudioMIDITasks$463+1
  3114  0108                     l3134:	
  3115  0108  0868               	movf	_APP_DeviceAudioMIDITasks$463+1,w
  3116  0109  0467               	iorwf	_APP_DeviceAudioMIDITasks$463,w
  3117  010A  1D03               	skipz
  3118  010B  0008               	return
  3119                           
  3120                           ;app_device_audio_midi.c: 109: msCounter = 100;
  3121  010C  3064               	movlw	100
  3122  010D  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  3123  010E  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  3124  010F  0021               	movlb	1	; select bank1
  3125  0110  00E5               	movwf	_msCounter^(0+128)
  3126                           
  3127                           ;app_device_audio_midi.c: 110: midiData.Val = 0;
  3128  0111  3000               	movlw	0
  3129  0112  0023               	movlb	3	; select bank3
  3130  0113  00A3               	movwf	35
  3131  0114  3000               	movlw	0
  3132  0115  00A2               	movwf	34
  3133  0116  3000               	movlw	0
  3134  0117  00A1               	movwf	33
  3135  0118  3000               	movlw	0
  3136  0119  00A0               	movwf	32
  3137                           
  3138                           ;app_device_audio_midi.c: 112: midiData.CableNumber = 0;
  3139  011A  300F               	movlw	-241
  3140  011B  05A0               	andwf	32,f
  3141                           
  3142                           ;app_device_audio_midi.c: 113: midiData.CodeIndexNumber = 0x9;
  3143  011C  0820               	movf	32,w
  3144  011D  39F0               	andlw	-16
  3145  011E  3809               	iorlw	9
  3146  011F  00A0               	movwf	32
  3147                           
  3148                           ;app_device_audio_midi.c: 114: midiData.DATA_0 = 0x90;
  3149  0120  3090               	movlw	144
  3150  0121  0020               	movlb	0	; select bank0
  3151  0122  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  3152  0123  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  3153  0124  0023               	movlb	3	; select bank3
  3154  0125  00A1               	movwf	33
  3155                           
  3156                           ;app_device_audio_midi.c: 115: midiData.DATA_1 = pitch++;
  3157  0126  0021               	movlb	1	; select bank1
  3158  0127  0866               	movf	_pitch^(0+128),w
  3159  0128  0020               	movlb	0	; select bank0
  3160  0129  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  3161  012A  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  3162  012B  0023               	movlb	3	; select bank3
  3163  012C  00A2               	movwf	34
  3164  012D  3001               	movlw	1
  3165  012E  0020               	movlb	0	; select bank0
  3166  012F  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  3167  0130  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  3168  0131  0021               	movlb	1	; select bank1
  3169  0132  07E6               	addwf	_pitch^(0+128),f
  3170                           
  3171                           ;app_device_audio_midi.c: 116: midiData.DATA_2 = 0x00;
  3172  0133  0023               	movlb	3	; select bank3
  3173  0134  01A3               	clrf	35
  3174                           
  3175                           ;app_device_audio_midi.c: 118: if(pitch == 0x49)
  3176  0135  0021               	movlb	1	; select bank1
  3177  0136  0866               	movf	_pitch^(0+128),w
  3178  0137  3A49               	xorlw	73
  3179  0138  1D03               	skipz
  3180  0139  2940               	goto	l3150
  3181                           
  3182                           ;app_device_audio_midi.c: 119: pitch = 0x3C;
  3183  013A  303C               	movlw	60
  3184  013B  0020               	movlb	0	; select bank0
  3185  013C  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  3186  013D  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  3187  013E  0021               	movlb	1	; select bank1
  3188  013F  00E6               	movwf	_pitch^(0+128)
  3189  0140                     l3150:	
  3190                           
  3191                           ;app_device_audio_midi.c: 120: USBTxHandle = USBTransferOnePacket(1,1,(uint8_t*)&midiDat
      +                          a,4);
  3192  0140  01F1               	clrf	?_USBTransferOnePacket
  3193  0141  0AF1               	incf	?_USBTransferOnePacket,f
  3194  0142  30A0               	movlw	160
  3195  0143  00F2               	movwf	?_USBTransferOnePacket+1
  3196  0144  3001               	movlw	1
  3197  0145  00F3               	movwf	?_USBTransferOnePacket+2
  3198  0146  3004               	movlw	4
  3199  0147  0020               	movlb	0	; select bank0
  3200  0148  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  3201  0149  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  3202  014A  00F4               	movwf	?_USBTransferOnePacket+3
  3203  014B  3001               	movlw	1
  3204  014C  318C  244B         	fcall	_USBTransferOnePacket
  3205  014E  0020               	movlb	0	; select bank0
  3206  014F  00E2               	movwf	??_APP_DeviceAudioMIDITasks+1
  3207  0150  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  3208  0151  0021               	movlb	1	; select bank1
  3209  0152  00E3               	movwf	_USBTxHandle^(0+128)
  3210                           
  3211                           ;app_device_audio_midi.c: 121: sentNoteOff = 1;
  3212  0153  0022               	movlb	2	; select bank2
  3213  0154  01E6               	clrf	_sentNoteOff^(0+256)
  3214  0155  0AE6               	incf	_sentNoteOff^(0+256),f
  3215  0156  0008               	return
  3216  0157                     __end_of_APP_DeviceAudioMIDITasks:	
  3217                           
  3218                           	psect	text2
  3219  0927                     __ptext2:	
  3220 ;; *************** function _BUTTON_IsPressed *****************
  3221 ;; Defined at:
  3222 ;;		line 56 in file "../bsp/pic16f1459/buttons.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;  button          1    wreg     enum E2603
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;  button          1    1[COMMON] enum E2603
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  1    wreg      unsigned char 
  3229 ;; Registers used:
  3230 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3239 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3240 ;;Total ram usage:        1 bytes
  3241 ;; Hardware stack levels used:    1
  3242 ;; Hardware stack levels required when called:    1
  3243 ;; This function calls:
  3244 ;;		Nothing
  3245 ;; This function is called by:
  3246 ;;		_APP_DeviceAudioMIDITasks
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           
  3251                           ;psect for function _BUTTON_IsPressed
  3252  0927                     _BUTTON_IsPressed:	
  3253                           
  3254                           ;incstack = 0
  3255                           ; Regs used in _BUTTON_IsPressed: [wreg-fsr0h+status,2+status,0]
  3256                           ;BUTTON_IsPressed@button stored from wreg
  3257  0927  00F1               	movwf	BUTTON_IsPressed@button
  3258                           
  3259                           ;buttons.c: 57: switch(button)
  3260  0928  2930               	goto	l3306
  3261  0929                     l3296:	
  3262                           ;buttons.c: 58: {
  3263                           ;buttons.c: 59: case BUTTON_S1:
  3264                           
  3265                           
  3266                           ;buttons.c: 60: return ( (PORTAbits.RA3 == 0) ? 1 : 0);
  3267  0929  3000               	movlw	0
  3268  092A  0020               	movlb	0	; select bank0
  3269  092B  1D8C               	btfss	12,3	;volatile
  3270  092C  3001               	movlw	1
  3271  092D  0008               	return
  3272  092E                     l3300:	
  3273                           ;buttons.c: 62: case BUTTON_NONE:
  3274                           
  3275                           
  3276                           ;buttons.c: 63: return 0;
  3277  092E  3000               	movlw	0
  3278  092F  0008               	return
  3279  0930                     l3306:	
  3280                           ;buttons.c: 64: }
  3281                           
  3282  0930  0871               	movf	BUTTON_IsPressed@button,w
  3283                           
  3284                           ; Switch size 1, requested type "space"
  3285                           ; Number of cases is 2, Range of values is 0 to 1
  3286                           ; switch strategies available:
  3287                           ; Name         Instructions Cycles
  3288                           ; simple_byte            7     4 (average)
  3289                           ; direct_byte           10     6 (fixed)
  3290                           ; jumptable            260     6 (fixed)
  3291                           ; rangetable             6     4 (fixed)
  3292                           ; spacedrange            9     6 (fixed)
  3293                           ; locatedrange           2     3 (fixed)
  3294                           ;	Chosen strategy is simple_byte
  3295  0931  3A00               	xorlw	0	; case 0
  3296  0932  1903               	skipnz
  3297  0933  292E               	goto	l3300
  3298  0934  3A01               	xorlw	1	; case 1
  3299  0935  1903               	skipnz
  3300  0936  2929               	goto	l3296
  3301  0937  2938               	goto	l3308
  3302  0938                     l3308:	
  3303                           
  3304                           ;buttons.c: 66: return 0;
  3305  0938  3000               	movlw	0
  3306  0939  0008               	return
  3307  093A                     __end_of_BUTTON_IsPressed:	
  3308                           
  3309                           	psect	text3
  3310  0670                     __ptext3:	
  3311 ;; *************** function _scan_task *****************
  3312 ;; Defined at:
  3313 ;;		line 211 in file "../src/scan.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;  note            1    wreg     PTR unsigned char 
  3316 ;;		 -> APP_DeviceAudioMIDITasks@scan_pitch(1), 
  3317 ;;  velocity        1   11[BANK0 ] PTR unsigned char 
  3318 ;;		 -> APP_DeviceAudioMIDITasks@velocity(1), 
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;  note            1   16[BANK0 ] PTR unsigned char 
  3321 ;;		 -> APP_DeviceAudioMIDITasks@scan_pitch(1), 
  3322 ;; Return value:  Size  Location     Type
  3323 ;;                  1    wreg      unsigned char 
  3324 ;; Registers used:
  3325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/0
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3331 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3332 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3333 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3334 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3335 ;;Total ram usage:        7 bytes
  3336 ;; Hardware stack levels used:    1
  3337 ;; Hardware stack levels required when called:    4
  3338 ;; This function calls:
  3339 ;;		_scan_init
  3340 ;;		_set_timer
  3341 ;;		_waiting_for_timer
  3342 ;;		_set_clock_and_data
  3343 ;;		_get_data
  3344 ;;		_is_end_of_scan
  3345 ;;		_run_adc
  3346 ;;		_is_adc_ready
  3347 ;;		_get_adc
  3348 ;;		_store_key_level
  3349 ;; This function is called by:
  3350 ;;		_APP_DeviceAudioMIDITasks
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           
  3355                           ;psect for function _scan_task
  3356  0670                     _scan_task:	
  3357                           
  3358                           ;incstack = 0
  3359                           ; Regs used in _scan_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3360                           ;scan_task@note stored from wreg
  3361  0670  0020               	movlb	0	; select bank0
  3362  0671  00E0               	movwf	scan_task@note
  3363                           
  3364                           ;scan.c: 212: static uint8_t state = S_INIT;
  3365                           ;scan.c: 214: note_event.pitch = note_event.velocity = 0;
  3366  0672  0022               	movlb	2	; select bank2
  3367  0673  01D6               	clrf	(_note_event^(0+256)+1)
  3368  0674  01D5               	clrf	_note_event^(0+256)
  3369                           
  3370                           ;scan.c: 215: *note = *velocity = 0;
  3371  0675  0020               	movlb	0	; select bank0
  3372  0676  085B               	movf	scan_task@velocity,w
  3373  0677  0086               	movwf	6
  3374  0678  0187               	clrf	7
  3375  0679  0181               	clrf	1
  3376  067A  0860               	movf	scan_task@note,w
  3377  067B  0086               	movwf	6
  3378  067C  0187               	clrf	7
  3379  067D  0181               	clrf	1
  3380                           
  3381                           ;scan.c: 217: if (!is_initialized)
  3382  067E  0022               	movlb	2	; select bank2
  3383  067F  08E4               	movf	_is_initialized^(0+256),f
  3384  0680  1D03               	skipz
  3385  0681  2E85               	goto	l3244
  3386                           
  3387                           ;scan.c: 218: scan_init();
  3388  0682  318A  221E  3186   	fcall	_scan_init
  3389  0685                     l3244:	
  3390                           
  3391                           ;scan.c: 220: if (waiting_for_timer()) return 0;
  3392  0685  3189  2109  3186   	fcall	_waiting_for_timer
  3393  0688  3A00               	xorlw	0
  3394  0689  1903               	skipnz
  3395  068A  2EF8               	goto	l3282
  3396  068B  3000               	movlw	0
  3397  068C  0008               	return
  3398  068D                     l3250:	
  3399                           ;scan.c: 223: case(S_INIT):
  3400                           
  3401                           ;scan.c: 222: switch(state) {
  3402                           
  3403                           
  3404                           ;scan.c: 224: set_clock_and_data(0,1);
  3405  068D  01F1               	clrf	?_set_clock_and_data
  3406  068E  0AF1               	incf	?_set_clock_and_data,f
  3407  068F  3000               	movlw	0
  3408  0690  3189  21CB  3186   	fcall	_set_clock_and_data
  3409                           
  3410                           ;scan.c: 225: state = S_GO;
  3411  0693  0022               	movlb	2	; select bank2
  3412  0694  01E9               	clrf	scan_task@state^(0+256)
  3413  0695  0AE9               	incf	scan_task@state^(0+256),f
  3414                           
  3415                           ;scan.c: 226: set_timer();
  3416  0696  3188  20FE  3186   	fcall	_set_timer
  3417                           
  3418                           ;scan.c: 227: break;
  3419  0699  2F03               	goto	l3284
  3420  069A                     l3256:	
  3421                           ;scan.c: 229: case(S_GO):
  3422                           
  3423                           
  3424                           ;scan.c: 230: set_clock_and_data(0,1);
  3425  069A  01F1               	clrf	?_set_clock_and_data
  3426  069B  0AF1               	incf	?_set_clock_and_data,f
  3427  069C  3000               	movlw	0
  3428  069D  3189  21CB  3186   	fcall	_set_clock_and_data
  3429                           
  3430                           ;scan.c: 231: state = S_CLOCK_RAISE;
  3431  06A0  3002               	movlw	2
  3432  06A1  00FB               	movwf	??_scan_task
  3433  06A2  087B               	movf	??_scan_task,w
  3434  06A3  0022               	movlb	2	; select bank2
  3435  06A4  00E9               	movwf	scan_task@state^(0+256)
  3436                           
  3437                           ;scan.c: 232: set_timer();
  3438  06A5  3188  20FE  3186   	fcall	_set_timer
  3439                           
  3440                           ;scan.c: 233: break;
  3441  06A8  2F03               	goto	l3284
  3442  06A9                     l3260:	
  3443                           ;scan.c: 235: case(S_CLOCK_RAISE):
  3444                           
  3445                           
  3446                           ;scan.c: 236: set_clock_and_data(1, get_data());
  3447  06A9  3188  20DC  3186   	fcall	_get_data
  3448  06AC  00FB               	movwf	??_scan_task
  3449  06AD  087B               	movf	??_scan_task,w
  3450  06AE  00F1               	movwf	?_set_clock_and_data
  3451  06AF  3001               	movlw	1
  3452  06B0  3189  21CB  3186   	fcall	_set_clock_and_data
  3453                           
  3454                           ;scan.c: 237: state = S_CLOCK_FALL;
  3455  06B3  3003               	movlw	3
  3456  06B4  00FB               	movwf	??_scan_task
  3457  06B5  087B               	movf	??_scan_task,w
  3458  06B6  0022               	movlb	2	; select bank2
  3459  06B7  00E9               	movwf	scan_task@state^(0+256)
  3460                           
  3461                           ;scan.c: 238: set_timer();
  3462  06B8  3188  20FE  3186   	fcall	_set_timer
  3463                           
  3464                           ;scan.c: 239: break;
  3465  06BB  2F03               	goto	l3284
  3466  06BC                     l3264:	
  3467                           ;scan.c: 241: case(S_CLOCK_FALL):
  3468                           
  3469                           
  3470                           ;scan.c: 242: set_clock_and_data(0,0);
  3471  06BC  01F1               	clrf	?_set_clock_and_data
  3472  06BD  3000               	movlw	0
  3473  06BE  3189  21CB  3186   	fcall	_set_clock_and_data
  3474                           
  3475                           ;scan.c: 243: run_adc();
  3476  06C1  3188  20ED  3186   	fcall	_run_adc
  3477                           
  3478                           ;scan.c: 244: state = S_ADC_WAIT;
  3479  06C4  3004               	movlw	4
  3480  06C5  00FB               	movwf	??_scan_task
  3481  06C6  087B               	movf	??_scan_task,w
  3482  06C7  0022               	movlb	2	; select bank2
  3483  06C8  00E9               	movwf	scan_task@state^(0+256)
  3484                           
  3485                           ;scan.c: 245: set_timer();
  3486  06C9  3188  20FE  3186   	fcall	_set_timer
  3487                           
  3488                           ;scan.c: 246: break;
  3489  06CC  2F03               	goto	l3284
  3490  06CD                     l3268:	
  3491                           ;scan.c: 248: case(S_ADC_WAIT):
  3492                           
  3493                           
  3494                           ;scan.c: 249: state = (is_adc_ready()? S_ADC_READ : S_ADC_WAIT);
  3495  06CD  3188  20E1  3186   	fcall	_is_adc_ready
  3496  06D0  3800               	iorlw	0
  3497  06D1  1D03               	skipz
  3498  06D2  2ED5               	goto	l3272
  3499  06D3  3004               	movlw	4
  3500  06D4  2ED6               	goto	L1
  3501  06D5                     l3272:	
  3502  06D5  3005               	movlw	5
  3503  06D6                     L1:	
  3504  06D6  0020               	movlb	0	; select bank0
  3505  06D7  00DC               	movwf	_scan_task$869
  3506  06D8  3000               	movlw	0
  3507  06D9  00DD               	movwf	_scan_task$869+1
  3508  06DA  085C               	movf	_scan_task$869,w
  3509  06DB  2EF3               	goto	L2
  3510  06DC                     l3274:	
  3511                           ;scan.c: 252: case(S_ADC_READ):
  3512                           
  3513                           ;scan.c: 250: break;
  3514                           
  3515                           
  3516                           ;scan.c: 253: state = (store_key_level(get_adc(), is_end_of_scan())? S_GO : S_CLOCK_RAIS
      +                          E);
  3517  06DC  3189  2114  3186   	fcall	_is_end_of_scan
  3518  06DF  00FB               	movwf	??_scan_task
  3519  06E0  087B               	movf	??_scan_task,w
  3520  06E1  00F7               	movwf	?_store_key_level
  3521  06E2  3188  20D9  3186   	fcall	_get_adc
  3522  06E5  318B  2306  3186   	fcall	_store_key_level
  3523  06E8  3800               	iorlw	0
  3524  06E9  1D03               	skipz
  3525  06EA  2EED               	goto	l3278
  3526  06EB  3002               	movlw	2
  3527  06EC  2EEE               	goto	L3
  3528  06ED                     l3278:	
  3529  06ED  3001               	movlw	1
  3530  06EE                     L3:	
  3531  06EE  0020               	movlb	0	; select bank0
  3532  06EF  00DE               	movwf	_scan_task$870
  3533  06F0  3000               	movlw	0
  3534  06F1  00DF               	movwf	_scan_task$870+1
  3535  06F2  085E               	movf	_scan_task$870,w
  3536  06F3                     L2:	
  3537  06F3  00FB               	movwf	??_scan_task
  3538  06F4  087B               	movf	??_scan_task,w
  3539  06F5  0022               	movlb	2	; select bank2
  3540  06F6  00E9               	movwf	scan_task@state^(0+256)
  3541                           
  3542                           ;scan.c: 255: }
  3543                           
  3544                           ;scan.c: 254: break;
  3545  06F7  2F03               	goto	l3284
  3546  06F8                     l3282:	
  3547  06F8  0022               	movlb	2	; select bank2
  3548  06F9  0869               	movf	scan_task@state^(0+256),w
  3549                           
  3550                           ; Switch size 1, requested type "space"
  3551                           ; Number of cases is 6, Range of values is 0 to 5
  3552                           ; switch strategies available:
  3553                           ; Name         Instructions Cycles
  3554                           ; direct_byte           18     6 (fixed)
  3555                           ; simple_byte           19    10 (average)
  3556                           ; jumptable            260     6 (fixed)
  3557                           ; rangetable            10     4 (fixed)
  3558                           ; spacedrange           17     6 (fixed)
  3559                           ; locatedrange           6     3 (fixed)
  3560                           ;	Chosen strategy is direct_byte
  3561  06FA  0084               	movwf	4
  3562  06FB  3006               	movlw	6
  3563  06FC  0204               	subwf	4,w
  3564  06FD  1803               	skipnc
  3565  06FE  2F03               	goto	l3284
  3566  06FF  3188               	movlp	high S4766
  3567  0700  3504               	lslf	4,w
  3568  0701  3E1A               	addlw	low S4766
  3569  0702  0082               	movwf	2
  3570  0703                     l3284:	
  3571                           
  3572                           ;scan.c: 257: *note = note_event.pitch;
  3573  0703  0022               	movlb	2	; select bank2
  3574  0704  0855               	movf	_note_event^(0+256),w
  3575  0705  00FB               	movwf	??_scan_task
  3576  0706  0020               	movlb	0	; select bank0
  3577  0707  0860               	movf	scan_task@note,w
  3578  0708  0086               	movwf	6
  3579  0709  0187               	clrf	7
  3580  070A  087B               	movf	??_scan_task,w
  3581  070B  0081               	movwf	1
  3582                           
  3583                           ;scan.c: 258: *velocity = note_event.velocity;
  3584  070C  0022               	movlb	2	; select bank2
  3585  070D  0856               	movf	(_note_event^(0+256)+1),w
  3586  070E  00FB               	movwf	??_scan_task
  3587  070F  0020               	movlb	0	; select bank0
  3588  0710  085B               	movf	scan_task@velocity,w
  3589  0711  0086               	movwf	6
  3590  0712  0187               	clrf	7
  3591  0713  087B               	movf	??_scan_task,w
  3592  0714  0081               	movwf	1
  3593                           
  3594                           ;scan.c: 259: return !! note_event.pitch;
  3595  0715  3000               	movlw	0
  3596  0716  0022               	movlb	2	; select bank2
  3597  0717  08D5               	movf	_note_event^(0+256),f
  3598  0718  1D03               	skipz
  3599  0719  3001               	movlw	1
  3600  071A  0008               	return
  3601  071B                     __end_of_scan_task:	
  3602                           
  3603                           	psect	swtext1
  3604  081A                     __pswtext1:	
  3605  081A                     S4766:	
  3606  081A  3186  2E8D         	ljmp	l3250
  3607  081C  3186  2E9A         	ljmp	l3256
  3608  081E  3186  2EA9         	ljmp	l3260
  3609  0820  3186  2EBC         	ljmp	l3264
  3610  0822  3186  2ECD         	ljmp	l3268
  3611  0824  3186  2EDC         	ljmp	l3274
  3612                           
  3613                           	psect	text4
  3614  0B06                     __ptext4:	
  3615 ;; *************** function _store_key_level *****************
  3616 ;; Defined at:
  3617 ;;		line 193 in file "../src/scan.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;  level           1    wreg     unsigned char 
  3620 ;;  end_of_scan     1    7[COMMON] unsigned char 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  level           1   10[COMMON] unsigned char 
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  1    wreg      unsigned char 
  3625 ;; Registers used:
  3626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3632 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3633 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3634 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3635 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3636 ;;Total ram usage:        4 bytes
  3637 ;; Hardware stack levels used:    1
  3638 ;; Hardware stack levels required when called:    3
  3639 ;; This function calls:
  3640 ;;		_process_level
  3641 ;; This function is called by:
  3642 ;;		_scan_task
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           
  3647                           ;psect for function _store_key_level
  3648  0B06                     _store_key_level:	
  3649                           
  3650                           ;incstack = 0
  3651                           ; Regs used in _store_key_level: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3652                           ;store_key_level@level stored from wreg
  3653  0B06  00FA               	movwf	store_key_level@level
  3654                           
  3655                           ;scan.c: 194: static uint8_t idx_key = 0;
  3656                           ;scan.c: 195: process_level(idx_key, adc_levels[idx_key], level);
  3657  0B07  0021               	movlb	1	; select bank1
  3658  0B08  0868               	movf	store_key_level@idx_key^(0+128),w
  3659  0B09  3E20               	addlw	_adc_levels& (0+255)
  3660  0B0A  0086               	movwf	6
  3661  0B0B  3002               	movlw	2	; select bank4/5
  3662  0B0C  0087               	movwf	7
  3663  0B0D  0801               	movf	1,w
  3664  0B0E  00F8               	movwf	??_store_key_level
  3665  0B0F  0878               	movf	??_store_key_level,w
  3666  0B10  00F2               	movwf	?_process_level
  3667  0B11  087A               	movf	store_key_level@level,w
  3668  0B12  00F9               	movwf	??_store_key_level+1
  3669  0B13  0879               	movf	??_store_key_level+1,w
  3670  0B14  00F3               	movwf	?_process_level+1
  3671  0B15  0868               	movf	store_key_level@idx_key^(0+128),w
  3672  0B16  3184  24EB  318B   	fcall	_process_level
  3673                           
  3674                           ;scan.c: 196: adc_levels[idx_key] = level;
  3675  0B19  087A               	movf	store_key_level@level,w
  3676  0B1A  00F8               	movwf	??_store_key_level
  3677  0B1B  0021               	movlb	1	; select bank1
  3678  0B1C  0868               	movf	store_key_level@idx_key^(0+128),w
  3679  0B1D  3E20               	addlw	_adc_levels& (0+255)
  3680  0B1E  0086               	movwf	6
  3681  0B1F  3002               	movlw	2	; select bank4/5
  3682  0B20  0087               	movwf	7
  3683  0B21  0878               	movf	??_store_key_level,w
  3684  0B22  0081               	movwf	1
  3685                           
  3686                           ;scan.c: 197: idx_key ++;
  3687  0B23  3001               	movlw	1
  3688  0B24  00F8               	movwf	??_store_key_level
  3689  0B25  0878               	movf	??_store_key_level,w
  3690  0B26  07E8               	addwf	store_key_level@idx_key^(0+128),f
  3691                           
  3692                           ;scan.c: 198: if (idx_key >= N_KEYS || end_of_scan) idx_key = 0;
  3693  0B27  3027               	movlw	39
  3694  0B28  0268               	subwf	store_key_level@idx_key^(0+128),w
  3695  0B29  1803               	skipnc
  3696  0B2A  2B2E               	goto	l3442
  3697  0B2B  0877               	movf	store_key_level@end_of_scan,w
  3698  0B2C  1903               	btfsc	3,2
  3699  0B2D  2B2F               	goto	l3444
  3700  0B2E                     l3442:	
  3701  0B2E  01E8               	clrf	store_key_level@idx_key^(0+128)
  3702  0B2F                     l3444:	
  3703                           
  3704                           ;scan.c: 199: return idx_key == 0;
  3705  0B2F  0868               	movf	store_key_level@idx_key^(0+128),w
  3706  0B30  3A00               	xorlw	0
  3707  0B31  3000               	movlw	0
  3708  0B32  1903               	skipnz
  3709  0B33  3001               	movlw	1
  3710  0B34  0008               	return
  3711  0B35                     __end_of_store_key_level:	
  3712                           
  3713                           	psect	text5
  3714  04EB                     __ptext5:	
  3715 ;; *************** function _process_level *****************
  3716 ;; Defined at:
  3717 ;;		line 145 in file "../src/scan.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;  idx_key         1    wreg     unsigned char 
  3720 ;;  old_level       1    2[COMMON] const unsigned char 
  3721 ;;  new_level       1    3[COMMON] const unsigned char 
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;  idx_key         1   10[BANK0 ] unsigned char 
  3724 ;;  filtered_sta    1    9[BANK0 ] unsigned char 
  3725 ;;  on_flag         1    8[BANK0 ] unsigned char 
  3726 ;;  off_flag        1    6[BANK0 ] unsigned char 
  3727 ;;  current_stat    2    2[BANK0 ] int 
  3728 ;;  old_state       2    0[BANK0 ] int 
  3729 ;; Return value:  Size  Location     Type
  3730 ;;		None               void
  3731 ;; Registers used:
  3732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3739 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3740 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3741 ;;      Totals:         5      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3742 ;;Total ram usage:       16 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; Hardware stack levels required when called:    2
  3745 ;; This function calls:
  3746 ;;		_LED_Off
  3747 ;;		_LED_On
  3748 ;; This function is called by:
  3749 ;;		_store_key_level
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           
  3754                           ;psect for function _process_level
  3755  04EB                     _process_level:	
  3756                           
  3757                           ;incstack = 0
  3758                           ; Regs used in _process_level: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3759                           ;process_level@idx_key stored from wreg
  3760  04EB  0020               	movlb	0	; select bank0
  3761  04EC  00DA               	movwf	process_level@idx_key
  3762                           
  3763                           ;scan.c: 146: static const uint8_t L = 0x0A;
  3764                           ;scan.c: 147: static const uint8_t idx_midi_map[N_KEYS] = {
  3765                           ;scan.c: 148: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
  3766                           ;scan.c: 149: 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
  3767                           ;scan.c: 150: 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38
  3768                           ;scan.c: 151: };
  3769                           ;scan.c: 152: static bool key_states[N_KEYS] = {0, };
  3770                           ;scan.c: 153: static const uint8_t midi_shift = 48;
  3771                           ;scan.c: 154: static const uint8_t
  3772                           ;scan.c: 155: key_off_threshold = 5,
  3773                           ;scan.c: 156: key_on_threshold = 7;
  3774  04ED  3030               	movlw	low (process_level@L| (0+32768))
  3775  04EE  0084               	movwf	4
  3776  04EF  3083               	movlw	high (process_level@L| (0+32768))
  3777  04F0  0085               	movwf	5
  3778  04F1  0800               	movf	0,w	;code access
  3779  04F2  00F4               	movwf	??_process_level
  3780  04F3  0872               	movf	process_level@old_level,w
  3781  04F4  0274               	subwf	??_process_level,w
  3782  04F5  3000               	movlw	0
  3783  04F6  1C03               	skipc
  3784  04F7  3001               	movlw	1
  3785  04F8  00F5               	movwf	??_process_level+1
  3786  04F9  01F6               	clrf	??_process_level+2
  3787  04FA  0875               	movf	??_process_level+1,w
  3788  04FB  00D0               	movwf	process_level@old_state
  3789  04FC  0876               	movf	??_process_level+2,w
  3790  04FD  00D1               	movwf	process_level@old_state+1
  3791                           
  3792                           ;scan.c: 162: int current_state = (new_level > L);
  3793  04FE  3030               	movlw	low (process_level@L| (0+32768))
  3794  04FF  0084               	movwf	4
  3795  0500  3083               	movlw	high (process_level@L| (0+32768))
  3796  0501  0085               	movwf	5
  3797  0502  0800               	movf	0,w	;code access
  3798  0503  00F4               	movwf	??_process_level
  3799  0504  0873               	movf	process_level@new_level,w
  3800  0505  0274               	subwf	??_process_level,w
  3801  0506  3000               	movlw	0
  3802  0507  1C03               	skipc
  3803  0508  3001               	movlw	1
  3804  0509  00F5               	movwf	??_process_level+1
  3805  050A  01F6               	clrf	??_process_level+2
  3806  050B  0875               	movf	??_process_level+1,w
  3807  050C  00D2               	movwf	process_level@current_state
  3808  050D  0876               	movf	??_process_level+2,w
  3809  050E  00D3               	movwf	process_level@current_state+1
  3810                           
  3811                           ;scan.c: 164: note_event.pitch = 0;
  3812  050F  0022               	movlb	2	; select bank2
  3813  0510  01D5               	clrf	_note_event^(0+256)
  3814                           
  3815                           ;scan.c: 165: note_event.velocity = 0;
  3816  0511  01D6               	clrf	(_note_event^(0+256)+1)
  3817                           
  3818                           ;scan.c: 167: if (current_state) {
  3819  0512  0020               	movlb	0	; select bank0
  3820  0513  0853               	movf	process_level@current_state+1,w
  3821  0514  0452               	iorwf	process_level@current_state,w
  3822  0515  1903               	skipnz
  3823  0516  2D24               	goto	l3392
  3824                           
  3825                           ;scan.c: 168: key_off_counter[idx_key] = 0;
  3826  0517  085A               	movf	process_level@idx_key,w
  3827  0518  3EA4               	addlw	process_level@key_off_counter& (0+255)
  3828  0519  0086               	movwf	6
  3829  051A  3001               	movlw	1	; select bank3/4
  3830  051B  0087               	movwf	7
  3831  051C  0181               	clrf	1
  3832                           
  3833                           ;scan.c: 169: key_on_counter [idx_key] ++;
  3834  051D  3001               	movlw	1
  3835  051E  00F4               	movwf	??_process_level
  3836  051F  085A               	movf	process_level@idx_key,w
  3837  0520  3E47               	addlw	process_level@key_on_counter& (0+255)
  3838  0521  0086               	movwf	6
  3839  0522  3002               	movlw	2	; select bank4/5
  3840  0523  2D30               	goto	L4
  3841  0524                     l3392:	
  3842                           ;scan.c: 170: }
  3843                           
  3844                           
  3845                           ;scan.c: 171: else {
  3846                           ;scan.c: 172: key_on_counter[idx_key] = 0;
  3847  0524  085A               	movf	process_level@idx_key,w
  3848  0525  3E47               	addlw	process_level@key_on_counter& (0+255)
  3849  0526  0086               	movwf	6
  3850  0527  3002               	movlw	2	; select bank4/5
  3851  0528  0087               	movwf	7
  3852  0529  0181               	clrf	1
  3853                           
  3854                           ;scan.c: 173: key_off_counter [idx_key] ++;
  3855  052A  3001               	movlw	1
  3856  052B  00F4               	movwf	??_process_level
  3857  052C  085A               	movf	process_level@idx_key,w
  3858  052D  3EA4               	addlw	process_level@key_off_counter& (0+255)
  3859  052E  0086               	movwf	6
  3860  052F  3001               	movlw	1	; select bank3/4
  3861  0530                     L4:	
  3862  0530  0087               	movwf	7
  3863  0531  0874               	movf	??_process_level,w
  3864  0532  0781               	addwf	1,f
  3865                           
  3866                           ;scan.c: 174: }
  3867                           ;scan.c: 176: {
  3868                           ;scan.c: 177: bool
  3869                           ;scan.c: 178: on_flag = key_on_counter [idx_key] >= key_on_threshold,
  3870  0533  085A               	movf	process_level@idx_key,w
  3871  0534  3E47               	addlw	process_level@key_on_counter& (0+255)
  3872  0535  0086               	movwf	6
  3873  0536  3002               	movlw	2	; select bank4/5
  3874  0537  0087               	movwf	7
  3875  0538  3032               	movlw	low (process_level@key_on_threshold| (0+32768))
  3876  0539  0084               	movwf	4
  3877  053A  3083               	movlw	high (process_level@key_on_threshold| (0+32768))
  3878  053B  0085               	movwf	5
  3879  053C  0800               	movf	0,w	;code access
  3880  053D  0201               	subwf	1,w
  3881  053E  3000               	movlw	0
  3882  053F  1803               	skipnc
  3883  0540  3001               	movlw	1
  3884  0541  00F4               	movwf	??_process_level
  3885  0542  0874               	movf	??_process_level,w
  3886  0543  00D8               	movwf	process_level@on_flag
  3887                           
  3888                           ;scan.c: 179: off_flag = key_off_counter[idx_key] >= key_off_threshold,
  3889  0544  085A               	movf	process_level@idx_key,w
  3890  0545  3EA4               	addlw	process_level@key_off_counter& (0+255)
  3891  0546  0086               	movwf	6
  3892  0547  3001               	movlw	1	; select bank3/4
  3893  0548  0087               	movwf	7
  3894  0549  3031               	movlw	low (process_level@key_off_threshold| (0+32768))
  3895  054A  0084               	movwf	4
  3896  054B  3083               	movlw	high (process_level@key_off_threshold| (0+32768))
  3897  054C  0085               	movwf	5
  3898  054D  0800               	movf	0,w	;code access
  3899  054E  0201               	subwf	1,w
  3900  054F  3000               	movlw	0
  3901  0550  1803               	skipnc
  3902  0551  3001               	movlw	1
  3903  0552  00F4               	movwf	??_process_level
  3904  0553  0874               	movf	??_process_level,w
  3905  0554  00D6               	movwf	process_level@off_flag
  3906                           
  3907                           ;scan.c: 180: filtered_state = on_flag || !on_flag && !off_flag && key_states[idx_key];
  3908  0555  01D7               	clrf	_process_level$858
  3909  0556  0AD7               	incf	_process_level$858,f
  3910  0557  08D8               	movf	process_level@on_flag,f
  3911  0558  1D03               	skipz
  3912  0559  2D68               	goto	l3410
  3913  055A  08D8               	movf	process_level@on_flag,f
  3914  055B  1D03               	skipz
  3915  055C  2D67               	goto	l3408
  3916  055D  08D6               	movf	process_level@off_flag,f
  3917  055E  1D03               	skipz
  3918  055F  2D67               	goto	l3408
  3919  0560  085A               	movf	process_level@idx_key,w
  3920  0561  3E20               	addlw	process_level@key_states& (0+255)
  3921  0562  0086               	movwf	6
  3922  0563  3001               	movlw	1	; select bank2/3
  3923  0564  0087               	movwf	7
  3924  0565  0881               	movf	1,f
  3925  0566  1903               	btfsc	3,2
  3926  0567                     l3408:	
  3927  0567  01D7               	clrf	_process_level$858
  3928  0568                     l3410:	
  3929  0568  0857               	movf	_process_level$858,w
  3930  0569  00F4               	movwf	??_process_level
  3931  056A  0874               	movf	??_process_level,w
  3932  056B  00D9               	movwf	process_level@filtered_state
  3933                           
  3934                           ;scan.c: 182: if (!key_states[idx_key] != !filtered_state) {
  3935  056C  0859               	movf	process_level@filtered_state,w
  3936  056D  3A00               	xorlw	0
  3937  056E  1D03               	btfss	3,2
  3938  056F  2D72               	goto	u2560
  3939  0570  3001               	movlw	1
  3940  0571  2D73               	goto	u2562
  3941  0572                     u2560:	
  3942  0572  3000               	movlw	0
  3943  0573                     u2562:	
  3944  0573  00F4               	movwf	??_process_level
  3945  0574  085A               	movf	process_level@idx_key,w
  3946  0575  3E20               	addlw	process_level@key_states& (0+255)
  3947  0576  0086               	movwf	6
  3948  0577  3001               	movlw	1	; select bank2/3
  3949  0578  0087               	movwf	7
  3950  0579  0801               	movf	1,w
  3951  057A  3A00               	xorlw	0
  3952  057B  1D03               	btfss	3,2
  3953  057C  2D7F               	goto	u2570
  3954  057D  3001               	movlw	1
  3955  057E  2D80               	goto	u2572
  3956  057F                     u2570:	
  3957  057F  3000               	movlw	0
  3958  0580                     u2572:	
  3959  0580  0674               	xorwf	??_process_level,w
  3960  0581  1903               	skipnz
  3961  0582  2DB9               	goto	l3430
  3962                           
  3963                           ;scan.c: 183: note_event.pitch = midi_shift + idx_midi_map[idx_key];
  3964  0583  3033               	movlw	low (process_level@midi_shift| (0+32768))
  3965  0584  0084               	movwf	4
  3966  0585  3083               	movlw	high (process_level@midi_shift| (0+32768))
  3967  0586  0085               	movwf	5
  3968  0587  0800               	movf	0,w	;code access
  3969  0588  00F4               	movwf	??_process_level
  3970  0589  085A               	movf	process_level@idx_key,w
  3971  058A  3E01               	addlw	low (process_level@idx_midi_map| (0+32768))
  3972  058B  0084               	movwf	4
  3973  058C  3083               	movlw	high (process_level@idx_midi_map| (0+32768))
  3974  058D  1803               	skipnc
  3975  058E  3E01               	addlw	1
  3976  058F  0085               	movwf	5
  3977  0590  0800               	movf	0,w	;code access
  3978  0591  0774               	addwf	??_process_level,w
  3979  0592  00F5               	movwf	??_process_level+1
  3980  0593  0875               	movf	??_process_level+1,w
  3981  0594  0022               	movlb	2	; select bank2
  3982  0595  00D5               	movwf	_note_event^(0+256)
  3983                           
  3984                           ;scan.c: 184: note_event.velocity = (filtered_state? (new_level * 2 + 5): 0);
  3985  0596  0020               	movlb	0	; select bank0
  3986  0597  08D9               	movf	process_level@filtered_state,f
  3987  0598  1D03               	skipz
  3988  0599  2D9D               	goto	l3420
  3989  059A  01D4               	clrf	_process_level$859
  3990  059B  01D5               	clrf	_process_level$859+1
  3991  059C  2DA8               	goto	l3422
  3992  059D                     l3420:	
  3993  059D  0873               	movf	process_level@new_level,w
  3994  059E  00F4               	movwf	??_process_level
  3995  059F  01F5               	clrf	??_process_level+1
  3996  05A0  35F4               	lslf	??_process_level,f
  3997  05A1  0DF5               	rlf	??_process_level+1,f
  3998  05A2  0874               	movf	??_process_level,w
  3999  05A3  3E05               	addlw	5
  4000  05A4  00D4               	movwf	_process_level$859
  4001  05A5  3000               	movlw	0
  4002  05A6  3D75               	addwfc	??_process_level+1,w
  4003  05A7  00D5               	movwf	_process_level$859+1
  4004  05A8                     l3422:	
  4005  05A8  0854               	movf	_process_level$859,w
  4006  05A9  00F4               	movwf	??_process_level
  4007  05AA  0874               	movf	??_process_level,w
  4008  05AB  0022               	movlb	2	; select bank2
  4009  05AC  00D6               	movwf	(_note_event^(0+256)+1)
  4010                           
  4011                           ;scan.c: 185: if (filtered_state) LED_On(LED_D1);
  4012  05AD  0020               	movlb	0	; select bank0
  4013  05AE  0859               	movf	process_level@filtered_state,w
  4014  05AF  1903               	btfsc	3,2
  4015  05B0  2DB6               	goto	l3428
  4016  05B1  3001               	movlw	1
  4017  05B2  3189  21B2  3184   	fcall	_LED_On
  4018  05B5  2DB9               	goto	l3430
  4019  05B6                     l3428:	
  4020                           
  4021                           ;scan.c: 186: else LED_Off(LED_D1);
  4022  05B6  3001               	movlw	1
  4023  05B7  3189  2199         	fcall	_LED_Off
  4024  05B9                     l3430:	
  4025                           
  4026                           ;scan.c: 187: }
  4027                           ;scan.c: 188: key_states[idx_key] = filtered_state;
  4028  05B9  0020               	movlb	0	; select bank0
  4029  05BA  0859               	movf	process_level@filtered_state,w
  4030  05BB  00F4               	movwf	??_process_level
  4031  05BC  085A               	movf	process_level@idx_key,w
  4032  05BD  3E20               	addlw	process_level@key_states& (0+255)
  4033  05BE  0086               	movwf	6
  4034  05BF  3001               	movlw	1	; select bank2/3
  4035  05C0  0087               	movwf	7
  4036  05C1  0874               	movf	??_process_level,w
  4037  05C2  0081               	movwf	1
  4038  05C3  0008               	return
  4039  05C4                     __end_of_process_level:	
  4040                           
  4041                           	psect	text6
  4042  08D9                     __ptext6:	
  4043 ;; *************** function _get_adc *****************
  4044 ;; Defined at:
  4045 ;;		line 94 in file "../src/scan.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;		None
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;		None
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  1    wreg      unsigned char 
  4052 ;; Registers used:
  4053 ;;		wreg
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4063 ;;Total ram usage:        0 bytes
  4064 ;; Hardware stack levels used:    1
  4065 ;; Hardware stack levels required when called:    1
  4066 ;; This function calls:
  4067 ;;		Nothing
  4068 ;; This function is called by:
  4069 ;;		_scan_task
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073                           
  4074                           ;psect for function _get_adc
  4075  08D9                     _get_adc:	
  4076                           
  4077                           ;scan.c: 95: return ADRESH;
  4078                           
  4079                           ;incstack = 0
  4080                           ; Regs used in _get_adc: [wreg]
  4081  08D9  0021               	movlb	1	; select bank1
  4082  08DA  081C               	movf	28,w	;volatile
  4083  08DB  0008               	return
  4084  08DC                     __end_of_get_adc:	
  4085                           
  4086                           	psect	text7
  4087  08E1                     __ptext7:	
  4088 ;; *************** function _is_adc_ready *****************
  4089 ;; Defined at:
  4090 ;;		line 90 in file "../src/scan.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;		None
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;		None
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  1    wreg      unsigned char 
  4097 ;; Registers used:
  4098 ;;		wreg
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4108 ;;Total ram usage:        0 bytes
  4109 ;; Hardware stack levels used:    1
  4110 ;; Hardware stack levels required when called:    1
  4111 ;; This function calls:
  4112 ;;		Nothing
  4113 ;; This function is called by:
  4114 ;;		_scan_task
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118                           
  4119                           ;psect for function _is_adc_ready
  4120  08E1                     _is_adc_ready:	
  4121                           
  4122                           ;scan.c: 91: return !ADCON0bits.GO_nDONE;
  4123                           
  4124                           ;incstack = 0
  4125                           ; Regs used in _is_adc_ready: [wreg]
  4126  08E1  3000               	movlw	0
  4127  08E2  0021               	movlb	1	; select bank1
  4128  08E3  1C9D               	btfss	29,1	;volatile
  4129  08E4  3001               	movlw	1
  4130  08E5  0008               	return
  4131  08E6                     __end_of_is_adc_ready:	
  4132                           
  4133                           	psect	text8
  4134  08ED                     __ptext8:	
  4135 ;; *************** function _run_adc *****************
  4136 ;; Defined at:
  4137 ;;		line 85 in file "../src/scan.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;		None
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;		None
  4142 ;; Return value:  Size  Location     Type
  4143 ;;		None               void
  4144 ;; Registers used:
  4145 ;;		wreg, status,2, status,0
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4155 ;;Total ram usage:        0 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; Hardware stack levels required when called:    1
  4158 ;; This function calls:
  4159 ;;		Nothing
  4160 ;; This function is called by:
  4161 ;;		_scan_task
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           
  4166                           ;psect for function _run_adc
  4167  08ED                     _run_adc:	
  4168                           
  4169                           ;scan.c: 86: ADCON0bits.CHS = 7;
  4170                           
  4171                           ;incstack = 0
  4172                           ; Regs used in _run_adc: [wreg+status,2+status,0]
  4173  08ED  0021               	movlb	1	; select bank1
  4174  08EE  081D               	movf	29,w	;volatile
  4175  08EF  3983               	andlw	-125
  4176  08F0  381C               	iorlw	28
  4177  08F1  009D               	movwf	29	;volatile
  4178                           
  4179                           ;scan.c: 87: ADCON0bits.GO = 1;
  4180  08F2  149D               	bsf	29,1	;volatile
  4181  08F3  0008               	return
  4182  08F4                     __end_of_run_adc:	
  4183                           
  4184                           	psect	text9
  4185  0914                     __ptext9:	
  4186 ;; *************** function _is_end_of_scan *****************
  4187 ;; Defined at:
  4188 ;;		line 77 in file "../src/scan.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;		None
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;  res             1    3[COMMON] unsigned char 
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      unsigned char 
  4195 ;; Registers used:
  4196 ;;		wreg, status,2, status,0
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4203 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4204 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4205 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4206 ;;Total ram usage:        3 bytes
  4207 ;; Hardware stack levels used:    1
  4208 ;; Hardware stack levels required when called:    1
  4209 ;; This function calls:
  4210 ;;		Nothing
  4211 ;; This function is called by:
  4212 ;;		_scan_task
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216                           
  4217                           ;psect for function _is_end_of_scan
  4218  0914                     _is_end_of_scan:	
  4219                           
  4220                           ;scan.c: 79: static uint8_t scan_counter = 0;
  4221                           ;scan.c: 80: bool res = (++scan_counter) >= N_KEYS;
  4222                           
  4223                           ;incstack = 0
  4224                           ; Regs used in _is_end_of_scan: [wreg+status,2+status,0]
  4225  0914  3001               	movlw	1
  4226  0915  00F1               	movwf	??_is_end_of_scan
  4227  0916  0871               	movf	??_is_end_of_scan,w
  4228  0917  0022               	movlb	2	; select bank2
  4229  0918  07E8               	addwf	is_end_of_scan@scan_counter^(0+256),f
  4230  0919  3027               	movlw	39
  4231  091A  0268               	subwf	is_end_of_scan@scan_counter^(0+256),w
  4232  091B  3000               	movlw	0
  4233  091C  1803               	skipnc
  4234  091D  3001               	movlw	1
  4235  091E  00F2               	movwf	??_is_end_of_scan+1
  4236  091F  0872               	movf	??_is_end_of_scan+1,w
  4237  0920  00F3               	movwf	is_end_of_scan@res
  4238                           
  4239                           ;scan.c: 81: if (scan_counter >= N_KEYS) scan_counter = 0;
  4240  0921  3027               	movlw	39
  4241  0922  0268               	subwf	is_end_of_scan@scan_counter^(0+256),w
  4242  0923  1803               	btfsc	3,0
  4243  0924  01E8               	clrf	is_end_of_scan@scan_counter^(0+256)
  4244                           
  4245                           ;scan.c: 82: return res;
  4246  0925  0873               	movf	is_end_of_scan@res,w
  4247  0926  0008               	return
  4248  0927                     __end_of_is_end_of_scan:	
  4249                           
  4250                           	psect	text10
  4251  08DC                     __ptext10:	
  4252 ;; *************** function _get_data *****************
  4253 ;; Defined at:
  4254 ;;		line 73 in file "../src/scan.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;		None
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;		None
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  1    wreg      unsigned char 
  4261 ;; Registers used:
  4262 ;;		wreg, status,2, status,0
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4272 ;;Total ram usage:        0 bytes
  4273 ;; Hardware stack levels used:    1
  4274 ;; Hardware stack levels required when called:    1
  4275 ;; This function calls:
  4276 ;;		Nothing
  4277 ;; This function is called by:
  4278 ;;		_scan_task
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           
  4283                           ;psect for function _get_data
  4284  08DC                     _get_data:	
  4285                           
  4286                           ;scan.c: 74: return LATCbits.LATC5;
  4287                           
  4288                           ;incstack = 0
  4289                           ; Regs used in _get_data: [wreg+status,2+status,0]
  4290  08DC  0022               	movlb	2	; select bank2
  4291  08DD  0E0E               	swapf	14,w	;volatile
  4292  08DE  0C89               	rrf	9,f
  4293  08DF  3901               	andlw	1
  4294  08E0  0008               	return
  4295  08E1                     __end_of_get_data:	
  4296                           
  4297                           	psect	text11
  4298  09CB                     __ptext11:	
  4299 ;; *************** function _set_clock_and_data *****************
  4300 ;; Defined at:
  4301 ;;		line 68 in file "../src/scan.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;  c               1    wreg     const unsigned char 
  4304 ;;  d               1    1[COMMON] const unsigned char 
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;  c               1    3[COMMON] const unsigned char 
  4307 ;; Return value:  Size  Location     Type
  4308 ;;		None               void
  4309 ;; Registers used:
  4310 ;;		wreg, status,2, status,0
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4316 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4317 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4319 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4320 ;;Total ram usage:        3 bytes
  4321 ;; Hardware stack levels used:    1
  4322 ;; Hardware stack levels required when called:    1
  4323 ;; This function calls:
  4324 ;;		Nothing
  4325 ;; This function is called by:
  4326 ;;		_scan_task
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330                           
  4331                           ;psect for function _set_clock_and_data
  4332  09CB                     _set_clock_and_data:	
  4333                           
  4334                           ;incstack = 0
  4335                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  4336                           ;set_clock_and_data@c stored from wreg
  4337  09CB  00F3               	movwf	set_clock_and_data@c
  4338                           
  4339                           ;scan.c: 69: LATCbits.LATC4 = !!c;
  4340  09CC  3000               	movlw	0
  4341  09CD  08F3               	movf	set_clock_and_data@c,f
  4342  09CE  1D03               	skipz
  4343  09CF  3001               	movlw	1
  4344  09D0  00F2               	movwf	??_set_clock_and_data
  4345  09D1  0EF2               	swapf	??_set_clock_and_data,f
  4346  09D2  0022               	movlb	2	; select bank2
  4347  09D3  080E               	movf	14,w	;volatile
  4348  09D4  0672               	xorwf	??_set_clock_and_data,w
  4349  09D5  39EF               	andlw	-17
  4350  09D6  0672               	xorwf	??_set_clock_and_data,w
  4351  09D7  008E               	movwf	14	;volatile
  4352                           
  4353                           ;scan.c: 70: LATCbits.LATC5 = !!d;
  4354  09D8  3000               	movlw	0
  4355  09D9  08F1               	movf	set_clock_and_data@d,f
  4356  09DA  1D03               	skipz
  4357  09DB  3001               	movlw	1
  4358  09DC  00F2               	movwf	??_set_clock_and_data
  4359  09DD  0EF2               	swapf	??_set_clock_and_data,f
  4360  09DE  0DF2               	rlf	??_set_clock_and_data,f
  4361  09DF  080E               	movf	14,w	;volatile
  4362  09E0  0672               	xorwf	??_set_clock_and_data,w
  4363  09E1  39DF               	andlw	-33
  4364  09E2  0672               	xorwf	??_set_clock_and_data,w
  4365  09E3  008E               	movwf	14	;volatile
  4366  09E4  0008               	return
  4367  09E5                     __end_of_set_clock_and_data:	
  4368                           
  4369                           	psect	text12
  4370  0909                     __ptext12:	
  4371 ;; *************** function _waiting_for_timer *****************
  4372 ;; Defined at:
  4373 ;;		line 64 in file "../src/scan.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;		None
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;		None
  4378 ;; Return value:  Size  Location     Type
  4379 ;;                  1    wreg      unsigned char 
  4380 ;; Registers used:
  4381 ;;		wreg, status,2
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4388 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4390 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4391 ;;Total ram usage:        1 bytes
  4392 ;; Hardware stack levels used:    1
  4393 ;; Hardware stack levels required when called:    1
  4394 ;; This function calls:
  4395 ;;		Nothing
  4396 ;; This function is called by:
  4397 ;;		_scan_task
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           
  4402                           ;psect for function _waiting_for_timer
  4403  0909                     _waiting_for_timer:	
  4404                           
  4405                           ;scan.c: 65: return (wait_timer = wait_timer && !INTCONbits.TMR0IF);
  4406                           
  4407                           ;incstack = 0
  4408                           ; Regs used in _waiting_for_timer: [wreg+status,2]
  4409  0909  01F1               	clrf	_waiting_for_timer$821
  4410  090A  0022               	movlb	2	; select bank2
  4411  090B  0867               	movf	_wait_timer^(0+256),w
  4412  090C  1D03               	skipz
  4413  090D  190B               	btfsc	11,2	;volatile
  4414  090E  2911               	goto	l3350
  4415  090F  01F1               	clrf	_waiting_for_timer$821
  4416  0910  0AF1               	incf	_waiting_for_timer$821,f
  4417  0911                     l3350:	
  4418  0911  0871               	movf	_waiting_for_timer$821,w
  4419  0912  00E7               	movwf	_wait_timer^(0+256)
  4420  0913  0008               	return
  4421  0914                     __end_of_waiting_for_timer:	
  4422                           
  4423                           	psect	text13
  4424  08FE                     __ptext13:	
  4425 ;; *************** function _set_timer *****************
  4426 ;; Defined at:
  4427 ;;		line 55 in file "../src/scan.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;		None
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;		None
  4432 ;; Return value:  Size  Location     Type
  4433 ;;		None               void
  4434 ;; Registers used:
  4435 ;;		status,2
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4445 ;;Total ram usage:        0 bytes
  4446 ;; Hardware stack levels used:    1
  4447 ;; Hardware stack levels required when called:    1
  4448 ;; This function calls:
  4449 ;;		Nothing
  4450 ;; This function is called by:
  4451 ;;		_scan_task
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           
  4456                           ;psect for function _set_timer
  4457  08FE                     _set_timer:	
  4458                           
  4459                           ;scan.c: 56: wait_timer = 1;
  4460                           
  4461                           ;incstack = 0
  4462                           ; Regs used in _set_timer: [status,2]
  4463  08FE  0022               	movlb	2	; select bank2
  4464  08FF  01E7               	clrf	_wait_timer^(0+256)
  4465  0900  0AE7               	incf	_wait_timer^(0+256),f
  4466                           
  4467                           ;scan.c: 57: OPTION_REGbits.TMR0CS = 0;
  4468  0901  0021               	movlb	1	; select bank1
  4469  0902  1295               	bcf	21,5	;volatile
  4470                           
  4471                           ;scan.c: 58: OPTION_REGbits.PSA = 1;
  4472  0903  1595               	bsf	21,3	;volatile
  4473                           
  4474                           ;scan.c: 59: INTCONbits.TMR0IE = 0;
  4475  0904  128B               	bcf	11,5	;volatile
  4476                           
  4477                           ;scan.c: 60: INTCONbits.TMR0IF = 0;
  4478  0905  110B               	bcf	11,2	;volatile
  4479                           
  4480                           ;scan.c: 61: TMR0 = 0;
  4481  0906  0020               	movlb	0	; select bank0
  4482  0907  0195               	clrf	21	;volatile
  4483  0908  0008               	return
  4484  0909                     __end_of_set_timer:	
  4485                           
  4486                           	psect	text14
  4487  0A1E                     __ptext14:	
  4488 ;; *************** function _scan_init *****************
  4489 ;; Defined at:
  4490 ;;		line 32 in file "../src/scan.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;		None
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;		None
  4495 ;; Return value:  Size  Location     Type
  4496 ;;		None               void
  4497 ;; Registers used:
  4498 ;;		wreg, status,2, status,0
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4508 ;;Total ram usage:        0 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; Hardware stack levels required when called:    1
  4511 ;; This function calls:
  4512 ;;		Nothing
  4513 ;; This function is called by:
  4514 ;;		_scan_task
  4515 ;; This function uses a non-reentrant model
  4516 ;;
  4517                           
  4518                           
  4519                           ;psect for function _scan_init
  4520  0A1E                     _scan_init:	
  4521                           
  4522                           ;scan.c: 33: is_initialized = 1;
  4523                           
  4524                           ;incstack = 0
  4525                           ; Regs used in _scan_init: [wreg+status,2+status,0]
  4526  0A1E  0022               	movlb	2	; select bank2
  4527  0A1F  01E4               	clrf	_is_initialized^(0+256)
  4528  0A20  0AE4               	incf	_is_initialized^(0+256),f
  4529                           
  4530                           ;scan.c: 34: TRISCbits.TRISC3 = PIN_INPUT;
  4531  0A21  0021               	movlb	1	; select bank1
  4532  0A22  158E               	bsf	14,3	;volatile
  4533                           
  4534                           ;scan.c: 35: TRISCbits.TRISC4 = PIN_OUTPUT;
  4535  0A23  120E               	bcf	14,4	;volatile
  4536                           
  4537                           ;scan.c: 36: TRISCbits.TRISC5 = PIN_OUTPUT;
  4538  0A24  128E               	bcf	14,5	;volatile
  4539                           
  4540                           ;scan.c: 38: ANSELA = 0;
  4541  0A25  0023               	movlb	3	; select bank3
  4542  0A26  018C               	clrf	12	;volatile
  4543                           
  4544                           ;scan.c: 40: ANSELCbits.ANSC3 = PIN_ANALOG;
  4545  0A27  158E               	bsf	14,3	;volatile
  4546                           
  4547                           ;scan.c: 41: LATCbits.LATC4 = 0;
  4548  0A28  0022               	movlb	2	; select bank2
  4549  0A29  120E               	bcf	14,4	;volatile
  4550                           
  4551                           ;scan.c: 42: LATCbits.LATC5 = 0;
  4552  0A2A  128E               	bcf	14,5	;volatile
  4553                           
  4554                           ;scan.c: 44: ANSELAbits.ANSA4 = PIN_DIGITAL;
  4555  0A2B  0023               	movlb	3	; select bank3
  4556  0A2C  120C               	bcf	12,4	;volatile
  4557                           
  4558                           ;scan.c: 45: TRISAbits.TRISA4 = PIN_INPUT;
  4559  0A2D  0021               	movlb	1	; select bank1
  4560  0A2E  160C               	bsf	12,4	;volatile
  4561                           
  4562                           ;scan.c: 47: PIE1bits.ADIE = 0;
  4563  0A2F  1311               	bcf	17,6	;volatile
  4564                           
  4565                           ;scan.c: 48: ADCON0bits.ADON = 1;
  4566  0A30  141D               	bsf	29,0	;volatile
  4567                           
  4568                           ;scan.c: 49: ADCON1bits.ADFM = 0;
  4569  0A31  139E               	bcf	30,7	;volatile
  4570                           
  4571                           ;scan.c: 50: ADCON1bits.ADCS = 0b110;
  4572  0A32  081E               	movf	30,w	;volatile
  4573  0A33  398F               	andlw	-113
  4574  0A34  3860               	iorlw	96
  4575  0A35  009E               	movwf	30	;volatile
  4576                           
  4577                           ;scan.c: 51: ADCON1bits.ADPREF = 0;
  4578  0A36  30FC               	movlw	-4
  4579  0A37  059E               	andwf	30,f	;volatile
  4580                           
  4581                           ;scan.c: 52: ADCON2bits.TRIGSEL = 0;
  4582  0A38  308F               	movlw	-113
  4583  0A39  059F               	andwf	31,f	;volatile
  4584  0A3A  0008               	return
  4585  0A3B                     __end_of_scan_init:	
  4586                           
  4587                           	psect	text15
  4588  03FD                     __ptext15:	
  4589 ;; *************** function _USBDeviceTasks *****************
  4590 ;; Defined at:
  4591 ;;		line 497 in file "../framework/usb/usb_device.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;		None
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;  i               1   24[BANK0 ] unsigned char 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;		None               void
  4598 ;; Registers used:
  4599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4606 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4607 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4608 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4609 ;;Total ram usage:        3 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    9
  4612 ;; This function calls:
  4613 ;;		_USBDeviceInit
  4614 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4615 ;;		_USBWakeFromSuspend
  4616 ;;		_USBSuspend
  4617 ;;		_USBIncrement1msInternalTimers
  4618 ;;		_USBCtrlEPAllowStatusStage
  4619 ;;		_USBStallHandler
  4620 ;;		_USBCtrlEPService
  4621 ;; This function is called by:
  4622 ;;		_main
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           
  4627                           ;psect for function _USBDeviceTasks
  4628  03FD                     _USBDeviceTasks:	
  4629                           
  4630                           ;usb_device.c: 563: }
  4631                           ;usb_device.c: 585: if(USBDeviceState == DETACHED_STATE)
  4632                           
  4633                           ;usb_device.c: 562: return;
  4634                           
  4635                           ;usb_device.c: 561: PIR2bits.USBIF = 0;;
  4636                           
  4637                           ;usb_device.c: 533: USBDeviceState = DETACHED_STATE;
  4638                           
  4639                           ;usb_device.c: 530: UIE = 0;
  4640                           
  4641                           ;usb_device.c: 525: {
  4642                           ;usb_device.c: 527: UCON = 0;
  4643                           
  4644                           ;usb_device.c: 498: uint8_t i;
  4645                           ;usb_device.c: 524: if (1 != 1)
  4646                           
  4647                           ;incstack = 0
  4648                           ; Regs used in _USBDeviceTasks: [allreg]
  4649  03FD  0020               	movlb	0	; select bank0
  4650  03FE  08ED               	movf	_USBDeviceState,f
  4651  03FF  1D03               	skipz
  4652  0400  2C11               	goto	l4228
  4653                           
  4654                           ;usb_device.c: 586: {
  4655                           ;usb_device.c: 588: UCON = 0;
  4656  0401  003D               	movlb	29	; select bank29
  4657  0402  018E               	clrf	14	;volatile
  4658                           
  4659                           ;usb_device.c: 591: UIE = 0;
  4660  0403  0192               	clrf	18	;volatile
  4661                           
  4662                           ;usb_device.c: 595: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  4663  0404  3016               	movlw	22
  4664  0405  0091               	movwf	17	;volatile
  4665  0406  309F               	movlw	159
  4666  0407  0097               	movwf	23	;volatile
  4667  0408  307B               	movlw	123
  4668  0409  0092               	movwf	18	;volatile
  4669  040A                     l582:	
  4670                           ;usb_device.c: 598: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  4671                           
  4672  040A  198E               	btfsc	14,3	;volatile
  4673  040B  2C0E               	goto	l584
  4674  040C  158E               	bsf	14,3	;volatile
  4675  040D  2C0A               	goto	l582
  4676  040E                     l584:	
  4677                           
  4678                           ;usb_device.c: 601: USBDeviceState = ATTACHED_STATE;
  4679  040E  0020               	movlb	0	; select bank0
  4680  040F  01ED               	clrf	_USBDeviceState
  4681  0410  0AED               	incf	_USBDeviceState,f
  4682  0411                     l4228:	
  4683                           
  4684                           ;usb_device.c: 606: }
  4685                           ;usb_device.c: 609: if(USBDeviceState == ATTACHED_STATE)
  4686  0411  086D               	movf	_USBDeviceState,w
  4687  0412  3A01               	xorlw	1
  4688  0413  1D03               	skipz
  4689  0414  2C21               	goto	l4240
  4690                           
  4691                           ;usb_device.c: 610: {
  4692                           ;usb_device.c: 620: if(!UCONbits.SE0)
  4693  0415  003D               	movlb	29	; select bank29
  4694  0416  1A8E               	btfsc	14,5	;volatile
  4695  0417  2C21               	goto	l4240
  4696                           
  4697                           ;usb_device.c: 621: {
  4698                           ;usb_device.c: 627: {UIR = 0;};
  4699  0418  0190               	clrf	16	;volatile
  4700                           
  4701                           ;usb_device.c: 631: UIE=0;
  4702  0419  0192               	clrf	18	;volatile
  4703                           
  4704                           ;usb_device.c: 633: UIEbits.URSTIE = 1;
  4705  041A  1412               	bsf	18,0	;volatile
  4706                           
  4707                           ;usb_device.c: 634: UIEbits.IDLEIE = 1;
  4708  041B  1612               	bsf	18,4	;volatile
  4709                           
  4710                           ;usb_device.c: 635: USBDeviceState = POWERED_STATE;
  4711  041C  3002               	movlw	2
  4712  041D  0020               	movlb	0	; select bank0
  4713  041E  00E6               	movwf	??_USBDeviceTasks
  4714  041F  0866               	movf	??_USBDeviceTasks,w
  4715  0420  00ED               	movwf	_USBDeviceState
  4716  0421                     l4240:	
  4717                           
  4718                           ;usb_device.c: 636: }
  4719                           ;usb_device.c: 637: }
  4720                           ;usb_device.c: 653: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4721  0421  003D               	movlb	29	; select bank29
  4722  0422  1910               	btfsc	16,2	;volatile
  4723  0423  1D12               	btfss	18,2	;volatile
  4724  0424  2C2E               	goto	l4248
  4725                           
  4726                           ;usb_device.c: 654: {
  4727                           ;usb_device.c: 655: (UIR &= 0xFB);
  4728  0425  30FB               	movlw	251
  4729  0426  0020               	movlb	0	; select bank0
  4730  0427  00E6               	movwf	??_USBDeviceTasks
  4731  0428  0866               	movf	??_USBDeviceTasks,w
  4732  0429  003D               	movlb	29	; select bank29
  4733  042A  0590               	andwf	16,f	;volatile
  4734                           
  4735                           ;usb_device.c: 659: USBWakeFromSuspend();
  4736  042B  3182  22E4  3183   	fcall	_USBWakeFromSuspend
  4737  042E                     l4248:	
  4738                           
  4739                           ;usb_device.c: 661: }
  4740                           ;usb_device.c: 666: if(UCONbits.SUSPND==1)
  4741  042E  003D               	movlb	29	; select bank29
  4742  042F  1C8E               	btfss	14,1	;volatile
  4743  0430  2C34               	goto	l588
  4744                           
  4745                           ;usb_device.c: 667: {
  4746                           ;usb_device.c: 668: PIR2bits.USBIF = 0;;
  4747  0431  0020               	movlb	0	; select bank0
  4748  0432  1112               	bcf	18,2	;volatile
  4749                           
  4750                           ;usb_device.c: 669: return;
  4751  0433  0008               	return
  4752  0434                     l588:	
  4753                           
  4754                           ;usb_device.c: 670: }
  4755                           ;usb_device.c: 682: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4756  0434  1810               	btfsc	16,0	;volatile
  4757  0435  1C12               	btfss	18,0	;volatile
  4758  0436  2C44               	goto	l4260
  4759                           
  4760                           ;usb_device.c: 683: {
  4761                           ;usb_device.c: 684: USBDeviceInit();
  4762  0437  3185  25C4  3183   	fcall	_USBDeviceInit
  4763                           
  4764                           ;usb_device.c: 688: ;
  4765                           ;usb_device.c: 690: USBDeviceState = DEFAULT_STATE;
  4766  043A  3004               	movlw	4
  4767  043B  0020               	movlb	0	; select bank0
  4768  043C  00E6               	movwf	??_USBDeviceTasks
  4769  043D  0866               	movf	??_USBDeviceTasks,w
  4770  043E  00ED               	movwf	_USBDeviceState
  4771                           
  4772                           ;usb_device.c: 700: (UIR &= 0xFE);
  4773  043F  30FE               	movlw	254
  4774  0440  00E6               	movwf	??_USBDeviceTasks
  4775  0441  0866               	movf	??_USBDeviceTasks,w
  4776  0442  003D               	movlb	29	; select bank29
  4777  0443  0590               	andwf	16,f	;volatile
  4778  0444                     l4260:	
  4779                           
  4780                           ;usb_device.c: 701: }
  4781                           ;usb_device.c: 706: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4782  0444  1A10               	btfsc	16,4	;volatile
  4783  0445  1E12               	btfss	18,4	;volatile
  4784  0446  2C4A               	goto	l4266
  4785                           
  4786                           ;usb_device.c: 707: {
  4787                           ;usb_device.c: 713: USBSuspend();
  4788  0447  3189  2150  3183   	fcall	_USBSuspend
  4789  044A                     l4266:	
  4790                           
  4791                           ;usb_device.c: 715: }
  4792                           ;usb_device.c: 727: if(UIRbits.SOFIF)
  4793  044A  003D               	movlb	29	; select bank29
  4794  044B  1F10               	btfss	16,6	;volatile
  4795  044C  2C71               	goto	l4284
  4796                           
  4797                           ;usb_device.c: 728: {
  4798                           ;usb_device.c: 730: if(UIEbits.SOFIE)
  4799  044D  1F12               	btfss	18,6	;volatile
  4800  044E  2C5C               	goto	l4272
  4801                           
  4802                           ;usb_device.c: 731: {
  4803                           ;usb_device.c: 732: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4804  044F  3073               	movlw	115
  4805  0450  0020               	movlb	0	; select bank0
  4806  0451  00D5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  4807  0452  3000               	movlw	0
  4808  0453  00D6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  4809  0454  01D7               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  4810  0455  3001               	movlw	1
  4811  0456  00D8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  4812  0457  3000               	movlw	0
  4813  0458  00D9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  4814  0459  318B  2335  3183   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4815  045C                     l4272:	
  4816                           
  4817                           ;usb_device.c: 733: }
  4818                           ;usb_device.c: 734: (UIR &= 0xBF);
  4819  045C  30BF               	movlw	191
  4820  045D  0020               	movlb	0	; select bank0
  4821  045E  00E6               	movwf	??_USBDeviceTasks
  4822  045F  0866               	movf	??_USBDeviceTasks,w
  4823  0460  003D               	movlb	29	; select bank29
  4824  0461  0590               	andwf	16,f	;volatile
  4825                           
  4826                           ;usb_device.c: 737: USBIncrement1msInternalTimers();
  4827  0462  3189  2168  3183   	fcall	_USBIncrement1msInternalTimers
  4828                           
  4829                           ;usb_device.c: 754: if(USBStatusStageTimeoutCounter != 0u)
  4830  0465  0022               	movlb	2	; select bank2
  4831  0466  0861               	movf	_USBStatusStageTimeoutCounter^(0+256),w
  4832  0467  1903               	btfsc	3,2
  4833  0468  2C6B               	goto	l4280
  4834                           
  4835                           ;usb_device.c: 755: {
  4836                           ;usb_device.c: 756: USBStatusStageTimeoutCounter--;
  4837  0469  3001               	movlw	1
  4838  046A  02E1               	subwf	_USBStatusStageTimeoutCounter^(0+256),f
  4839  046B                     l4280:	
  4840                           
  4841                           ;usb_device.c: 757: }
  4842                           ;usb_device.c: 763: if(USBStatusStageTimeoutCounter == 0)
  4843  046B  08E1               	movf	_USBStatusStageTimeoutCounter^(0+256),f
  4844  046C  1D03               	skipz
  4845  046D  2C71               	goto	l4284
  4846                           
  4847                           ;usb_device.c: 764: {
  4848                           ;usb_device.c: 765: USBCtrlEPAllowStatusStage();
  4849  046E  318D  2548  3183   	fcall	_USBCtrlEPAllowStatusStage
  4850  0471                     l4284:	
  4851                           
  4852                           ;usb_device.c: 766: }
  4853                           ;usb_device.c: 768: }
  4854                           ;usb_device.c: 770: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4855  0471  003D               	movlb	29	; select bank29
  4856  0472  1A90               	btfsc	16,5	;volatile
  4857  0473  1E92               	btfss	18,5	;volatile
  4858  0474  2C78               	goto	l4290
  4859                           
  4860                           ;usb_device.c: 771: {
  4861                           ;usb_device.c: 772: USBStallHandler();
  4862  0475  318A  223B  3183   	fcall	_USBStallHandler
  4863  0478                     l4290:	
  4864                           
  4865                           ;usb_device.c: 773: }
  4866                           ;usb_device.c: 775: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4867  0478  003D               	movlb	29	; select bank29
  4868  0479  1890               	btfsc	16,1	;volatile
  4869  047A  1C92               	btfss	18,1	;volatile
  4870  047B  2C8B               	goto	l4298
  4871                           
  4872                           ;usb_device.c: 776: {
  4873                           ;usb_device.c: 777: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4874  047C  30FF               	movlw	255
  4875  047D  0020               	movlb	0	; select bank0
  4876  047E  00D5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  4877  047F  307F               	movlw	127
  4878  0480  00D6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  4879  0481  01D7               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  4880  0482  3001               	movlw	1
  4881  0483  00D8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  4882  0484  3000               	movlw	0
  4883  0485  00D9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  4884  0486  318B  2335  3183   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4885                           
  4886                           ;usb_device.c: 778: {UEIR = 0;};
  4887  0489  003D               	movlb	29	; select bank29
  4888  048A  0193               	clrf	19	;volatile
  4889  048B                     l4298:	
  4890                           
  4891                           ;usb_device.c: 786: }
  4892                           ;usb_device.c: 793: if(USBDeviceState < DEFAULT_STATE)
  4893  048B  3004               	movlw	4
  4894  048C  0020               	movlb	0	; select bank0
  4895  048D  026D               	subwf	_USBDeviceState,w
  4896  048E  1803               	skipnc
  4897  048F  2C92               	goto	l597
  4898                           
  4899                           ;usb_device.c: 794: {
  4900                           ;usb_device.c: 795: PIR2bits.USBIF = 0;;
  4901  0490  1112               	bcf	18,2	;volatile
  4902                           
  4903                           ;usb_device.c: 796: return;
  4904  0491  0008               	return
  4905  0492                     l597:	
  4906                           
  4907                           ;usb_device.c: 797: }
  4908                           ;usb_device.c: 802: if(UIEbits.TRNIE)
  4909  0492  003D               	movlb	29	; select bank29
  4910  0493  1D92               	btfss	18,3	;volatile
  4911  0494  2CE8               	goto	l598
  4912                           
  4913                           ;usb_device.c: 803: {
  4914                           ;usb_device.c: 804: for(i = 0; i < 4u; i++)
  4915  0495  0020               	movlb	0	; select bank0
  4916  0496  01E8               	clrf	USBDeviceTasks@i
  4917  0497  2CE1               	goto	L6
  4918  0498                     l4308:	
  4919                           
  4920                           ;usb_device.c: 807: {
  4921                           ;usb_device.c: 809: USTATcopy.Val = USTAT;
  4922  0498  080F               	movf	15,w	;volatile
  4923  0499  0020               	movlb	0	; select bank0
  4924  049A  00E6               	movwf	??_USBDeviceTasks
  4925  049B  0866               	movf	??_USBDeviceTasks,w
  4926  049C  00EF               	movwf	_USTATcopy
  4927                           
  4928                           ;usb_device.c: 810: endpoint_number = USTATcopy.endpoint_number;
  4929  049D  0C6F               	rrf	_USTATcopy,w
  4930  049E  00E6               	movwf	??_USBDeviceTasks
  4931  049F  0CE6               	rrf	??_USBDeviceTasks,f
  4932  04A0  0C66               	rrf	??_USBDeviceTasks,w
  4933  04A1  390F               	andlw	15
  4934  04A2  00E7               	movwf	??_USBDeviceTasks+1
  4935  04A3  0867               	movf	??_USBDeviceTasks+1,w
  4936  04A4  0022               	movlb	2	; select bank2
  4937  04A5  00E3               	movwf	_endpoint_number^(0+256)
  4938                           
  4939                           ;usb_device.c: 812: (UIR &= 0xF7);
  4940  04A6  30F7               	movlw	247
  4941  04A7  0020               	movlb	0	; select bank0
  4942  04A8  00E6               	movwf	??_USBDeviceTasks
  4943  04A9  0866               	movf	??_USBDeviceTasks,w
  4944  04AA  003D               	movlb	29	; select bank29
  4945  04AB  0590               	andwf	16,f	;volatile
  4946                           
  4947                           ;usb_device.c: 817: if(USTATcopy.direction == 0)
  4948  04AC  0020               	movlb	0	; select bank0
  4949  04AD  196F               	btfsc	_USTATcopy,2
  4950  04AE  2CB3               	goto	l4318
  4951                           
  4952                           ;usb_device.c: 818: {
  4953                           ;usb_device.c: 819: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4954  04AF  0022               	movlb	2	; select bank2
  4955  04B0  0863               	movf	_endpoint_number^(0+256),w
  4956  04B1  3E53               	addlw	_ep_data_out& (0+255)
  4957  04B2  2CB6               	goto	L5
  4958  04B3                     l4318:	
  4959                           ;usb_device.c: 820: }
  4960                           
  4961                           
  4962                           ;usb_device.c: 821: else
  4963                           ;usb_device.c: 822: {
  4964                           ;usb_device.c: 823: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4965  04B3  0022               	movlb	2	; select bank2
  4966  04B4  0863               	movf	_endpoint_number^(0+256),w
  4967  04B5  3E51               	addlw	_ep_data_in& (0+255)
  4968  04B6                     L5:	
  4969  04B6  0086               	movwf	6
  4970  04B7  3001               	movlw	1	; select bank2/3
  4971  04B8  0087               	movwf	7
  4972  04B9  0801               	movf	1,w
  4973  04BA  3901               	andlw	1
  4974  04BB  0020               	movlb	0	; select bank0
  4975  04BC  00E6               	movwf	??_USBDeviceTasks
  4976  04BD  3001               	movlw	1
  4977  04BE  06E6               	xorwf	??_USBDeviceTasks,f
  4978  04BF  0801               	movf	1,w
  4979  04C0  0666               	xorwf	??_USBDeviceTasks,w
  4980  04C1  39FE               	andlw	-2
  4981  04C2  0666               	xorwf	??_USBDeviceTasks,w
  4982  04C3  0081               	movwf	1
  4983                           
  4984                           ;usb_device.c: 824: }
  4985                           ;usb_device.c: 829: if(endpoint_number == 0)
  4986  04C4  0022               	movlb	2	; select bank2
  4987  04C5  08E3               	movf	_endpoint_number^(0+256),f
  4988  04C6  1D03               	skipz
  4989  04C7  2CCC               	goto	l4324
  4990                           
  4991                           ;usb_device.c: 830: {
  4992                           ;usb_device.c: 831: USBCtrlEPService();
  4993  04C8  318E  2690  3183   	fcall	_USBCtrlEPService
  4994                           
  4995                           ;usb_device.c: 832: }
  4996  04CB  2CDC               	goto	l4326
  4997  04CC                     l4324:	
  4998                           
  4999                           ;usb_device.c: 833: else
  5000                           ;usb_device.c: 834: {
  5001                           ;usb_device.c: 835: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  5002  04CC  3072               	movlw	114
  5003  04CD  0020               	movlb	0	; select bank0
  5004  04CE  00D5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  5005  04CF  3000               	movlw	0
  5006  04D0  00D6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  5007  04D1  306F               	movlw	_USTATcopy& (0+255)
  5008  04D2  00E6               	movwf	??_USBDeviceTasks
  5009  04D3  0866               	movf	??_USBDeviceTasks,w
  5010  04D4  00D7               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  5011  04D5  3000               	movlw	0
  5012  04D6  00D8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  5013  04D7  3000               	movlw	0
  5014  04D8  00D9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  5015  04D9  318B  2335  3183   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5016  04DC                     l4326:	
  5017                           ;usb_device.c: 838: else
  5018                           ;usb_device.c: 839: {
  5019                           ;usb_device.c: 840: break;
  5020                           
  5021                           ;usb_device.c: 836: }
  5022                           ;usb_device.c: 837: }
  5023                           
  5024  04DC  3001               	movlw	1
  5025  04DD  0020               	movlb	0	; select bank0
  5026  04DE  00E6               	movwf	??_USBDeviceTasks
  5027  04DF  0866               	movf	??_USBDeviceTasks,w
  5028  04E0  07E8               	addwf	USBDeviceTasks@i,f
  5029  04E1                     L6:	
  5030  04E1  3004               	movlw	4
  5031  04E2  0268               	subwf	USBDeviceTasks@i,w
  5032  04E3  1803               	btfsc	3,0
  5033  04E4  2CE8               	goto	l598
  5034                           
  5035                           ;usb_device.c: 805: {
  5036                           ;usb_device.c: 806: if(UIRbits.TRNIF)
  5037  04E5  003D               	movlb	29	; select bank29
  5038  04E6  1990               	btfsc	16,3	;volatile
  5039  04E7  2C98               	goto	l4308
  5040  04E8                     l598:	
  5041                           
  5042                           ;usb_device.c: 841: }
  5043                           ;usb_device.c: 842: }
  5044                           ;usb_device.c: 843: }
  5045                           ;usb_device.c: 845: PIR2bits.USBIF = 0;;
  5046  04E8  0020               	movlb	0	; select bank0
  5047  04E9  1112               	bcf	18,2	;volatile
  5048  04EA  0008               	return
  5049  04EB                     __end_of_USBDeviceTasks:	
  5050                           
  5051                           	psect	text16
  5052  0E90                     __ptext16:	
  5053 ;; *************** function _USBCtrlEPService *****************
  5054 ;; Defined at:
  5055 ;;		line 2392 in file "../framework/usb/usb_device.c"
  5056 ;; Parameters:    Size  Location     Type
  5057 ;;		None
  5058 ;; Auto vars:     Size  Location     Type
  5059 ;;  setup_cnt       1   21[BANK0 ] unsigned char 
  5060 ;; Return value:  Size  Location     Type
  5061 ;;		None               void
  5062 ;; Registers used:
  5063 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  5064 ;; Tracked objects:
  5065 ;;		On entry : 0/0
  5066 ;;		On exit  : 0/0
  5067 ;;		Unchanged: 0/0
  5068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5070 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5071 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5072 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5073 ;;Total ram usage:        4 bytes
  5074 ;; Hardware stack levels used:    1
  5075 ;; Hardware stack levels required when called:    8
  5076 ;; This function calls:
  5077 ;;		_USBCtrlTrfSetupHandler
  5078 ;;		_USBCtrlTrfOutHandler
  5079 ;;		_USBCtrlTrfInHandler
  5080 ;; This function is called by:
  5081 ;;		_USBDeviceTasks
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           
  5086                           ;psect for function _USBCtrlEPService
  5087  0E90                     _USBCtrlEPService:	
  5088                           
  5089                           ;usb_device.c: 2397: USBStatusStageTimeoutCounter = (uint8_t)45;
  5090                           
  5091                           ;incstack = 0
  5092                           ; Regs used in _USBCtrlEPService: [allreg]
  5093  0E90  302D               	movlw	45
  5094  0E91  0020               	movlb	0	; select bank0
  5095  0E92  00E2               	movwf	??_USBCtrlEPService
  5096  0E93  0862               	movf	??_USBCtrlEPService,w
  5097  0E94  0022               	movlb	2	; select bank2
  5098  0E95  00E1               	movwf	_USBStatusStageTimeoutCounter^(0+256)
  5099                           
  5100                           ;usb_device.c: 2401: if((USTATcopy.Val & ~0x02) == 0x00)
  5101  0E96  0020               	movlb	0	; select bank0
  5102  0E97  086F               	movf	_USTATcopy,w
  5103  0E98  39FD               	andlw	253
  5104  0E99  1D03               	btfss	3,2
  5105  0E9A  2EF5               	goto	l4422
  5106                           
  5107                           ;usb_device.c: 2402: {
  5108                           ;usb_device.c: 2405: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5109  0E9B  366F               	lsrf	_USTATcopy,w
  5110  0E9C  393F               	andlw	63
  5111  0E9D  00E2               	movwf	??_USBCtrlEPService
  5112  0E9E  3001               	movlw	1
  5113  0E9F                     u3845:	
  5114  0E9F  35E2               	lslf	??_USBCtrlEPService,f
  5115  0EA0  3EFF               	addlw	-1
  5116  0EA1  1D03               	skipz
  5117  0EA2  2E9F               	goto	u3845
  5118  0EA3  3562               	lslf	??_USBCtrlEPService,w
  5119  0EA4  3E20               	addlw	32
  5120  0EA5  00E3               	movwf	??_USBCtrlEPService+1
  5121  0EA6  0863               	movf	??_USBCtrlEPService+1,w
  5122  0EA7  00EE               	movwf	_pBDTEntryEP0OutCurrent
  5123                           
  5124                           ;usb_device.c: 2413: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5125  0EA8  086E               	movf	_pBDTEntryEP0OutCurrent,w
  5126  0EA9  00E2               	movwf	??_USBCtrlEPService
  5127  0EAA  0862               	movf	??_USBCtrlEPService,w
  5128  0EAB  00FC               	movwf	_pBDTEntryEP0OutNext
  5129                           
  5130                           ;usb_device.c: 2415: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  5131  0EAC  3004               	movlw	4
  5132  0EAD  00E2               	movwf	??_USBCtrlEPService
  5133  0EAE  0862               	movf	??_USBCtrlEPService,w
  5134  0EAF  06FC               	xorwf	_pBDTEntryEP0OutNext,f
  5135                           
  5136                           ;usb_device.c: 2418: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5137  0EB0  086E               	movf	_pBDTEntryEP0OutCurrent,w
  5138  0EB1  0086               	movwf	6
  5139  0EB2  0187               	clrf	7
  5140  0EB3  0C01               	rrf	1,w
  5141  0EB4  0C89               	rrf	9,f
  5142  0EB5  390F               	andlw	15
  5143  0EB6  3A0D               	xorlw	13
  5144  0EB7  1D03               	skipz
  5145  0EB8  2EF2               	goto	l4420
  5146                           
  5147                           ;usb_device.c: 2419: {
  5148                           ;usb_device.c: 2420: unsigned char setup_cnt;
  5149                           ;usb_device.c: 2426: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  5150  0EB9  01E5               	clrf	USBCtrlEPService@setup_cnt
  5151  0EBA  3008               	movlw	8
  5152  0EBB  0265               	subwf	USBCtrlEPService@setup_cnt,w
  5153  0EBC  1803               	btfsc	3,0
  5154  0EBD  2EE3               	goto	l4416
  5155  0EBE                     l4410:	
  5156                           
  5157                           ;usb_device.c: 2427: {
  5158                           ;usb_device.c: 2428: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
  5159  0EBE  086E               	movf	_pBDTEntryEP0OutCurrent,w
  5160  0EBF  3E02               	addlw	2
  5161  0EC0  0086               	movwf	6
  5162  0EC1  0187               	clrf	7
  5163  0EC2  3F40               	moviw [0]fsr1
  5164  0EC3  00E2               	movwf	??_USBCtrlEPService
  5165  0EC4  3F41               	moviw [1]fsr1
  5166  0EC5  00E3               	movwf	??_USBCtrlEPService+1
  5167  0EC6  0862               	movf	??_USBCtrlEPService,w
  5168  0EC7  0086               	movwf	6
  5169  0EC8  0863               	movf	??_USBCtrlEPService+1,w
  5170  0EC9  0087               	movwf	7
  5171  0ECA  0801               	movf	1,w
  5172  0ECB  00E4               	movwf	??_USBCtrlEPService+2
  5173  0ECC  0865               	movf	USBCtrlEPService@setup_cnt,w
  5174  0ECD  3E40               	addlw	64
  5175  0ECE  0086               	movwf	6
  5176  0ECF  0187               	clrf	7
  5177  0ED0  0864               	movf	??_USBCtrlEPService+2,w
  5178  0ED1  0081               	movwf	1
  5179                           
  5180                           ;usb_device.c: 2429: pBDTEntryEP0OutCurrent->ADR++;
  5181  0ED2  086E               	movf	_pBDTEntryEP0OutCurrent,w
  5182  0ED3  3E02               	addlw	2
  5183  0ED4  0086               	movwf	6
  5184  0ED5  0187               	clrf	7
  5185  0ED6  3001               	movlw	1
  5186  0ED7  0781               	addwf	1,f
  5187  0ED8  3141               	addfsr 1,1
  5188  0ED9  1803               	skipnc
  5189  0EDA  0A81               	incf	1,f
  5190  0EDB  3001               	movlw	1
  5191  0EDC  00E2               	movwf	??_USBCtrlEPService
  5192  0EDD  0862               	movf	??_USBCtrlEPService,w
  5193  0EDE  07E5               	addwf	USBCtrlEPService@setup_cnt,f
  5194  0EDF  3008               	movlw	8
  5195  0EE0  0265               	subwf	USBCtrlEPService@setup_cnt,w
  5196  0EE1  1C03               	skipc
  5197  0EE2  2EBE               	goto	l4410
  5198  0EE3                     l4416:	
  5199                           
  5200                           ;usb_device.c: 2430: }
  5201                           ;usb_device.c: 2431: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5202  0EE3  3040               	movlw	64
  5203  0EE4  00E2               	movwf	??_USBCtrlEPService
  5204  0EE5  3000               	movlw	0
  5205  0EE6  00E3               	movwf	??_USBCtrlEPService+1
  5206  0EE7  086E               	movf	_pBDTEntryEP0OutCurrent,w
  5207  0EE8  3E02               	addlw	2
  5208  0EE9  0086               	movwf	6
  5209  0EEA  0187               	clrf	7
  5210  0EEB  0862               	movf	??_USBCtrlEPService,w
  5211  0EEC  3FC0               	movwi [0]fsr1
  5212  0EED  0863               	movf	??_USBCtrlEPService+1,w
  5213  0EEE  3FC1               	movwi [1]fsr1
  5214                           
  5215                           ;usb_device.c: 2434: USBCtrlTrfSetupHandler();
  5216  0EEF  3187  27B8         	fcall	_USBCtrlTrfSetupHandler
  5217                           
  5218                           ;usb_device.c: 2435: }
  5219  0EF1  0008               	return
  5220  0EF2                     l4420:	
  5221                           
  5222                           ;usb_device.c: 2436: else
  5223                           ;usb_device.c: 2437: {
  5224                           ;usb_device.c: 2439: USBCtrlTrfOutHandler();
  5225  0EF2  318A  22D7         	fcall	_USBCtrlTrfOutHandler
  5226                           
  5227                           ;usb_device.c: 2440: }
  5228                           ;usb_device.c: 2441: }
  5229  0EF4  0008               	return
  5230  0EF5                     l4422:	
  5231                           
  5232                           ;usb_device.c: 2442: else if((USTATcopy.Val & ~0x02) == 0x04)
  5233  0EF5  30FD               	movlw	253
  5234  0EF6  0020               	movlb	0	; select bank0
  5235  0EF7  056F               	andwf	_USTATcopy,w
  5236  0EF8  00E2               	movwf	??_USBCtrlEPService
  5237  0EF9  0862               	movf	??_USBCtrlEPService,w
  5238  0EFA  3A04               	xorlw	4
  5239  0EFB  1D03               	skipz
  5240  0EFC  0008               	return
  5241                           
  5242                           ;usb_device.c: 2443: {
  5243                           ;usb_device.c: 2446: USBCtrlTrfInHandler();
  5244  0EFD  318D  25B1         	fcall	_USBCtrlTrfInHandler
  5245  0EFF  0008               	return
  5246  0F00                     __end_of_USBCtrlEPService:	
  5247                           
  5248                           	psect	text17
  5249  0DB1                     __ptext17:	
  5250 ;; *************** function _USBCtrlTrfInHandler *****************
  5251 ;; Defined at:
  5252 ;;		line 2618 in file "../framework/usb/usb_device.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;		None
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;  lastDTS         1    6[COMMON] unsigned char 
  5257 ;; Return value:  Size  Location     Type
  5258 ;;		None               void
  5259 ;; Registers used:
  5260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/0
  5263 ;;		On exit  : 0/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5267 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5268 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5269 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;Total ram usage:        3 bytes
  5271 ;; Hardware stack levels used:    1
  5272 ;; Hardware stack levels required when called:    2
  5273 ;; This function calls:
  5274 ;;		_USBCtrlTrfTxService
  5275 ;; This function is called by:
  5276 ;;		_USBCtrlEPService
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           
  5281                           ;psect for function _USBCtrlTrfInHandler
  5282  0DB1                     _USBCtrlTrfInHandler:	
  5283                           
  5284                           ;usb_device.c: 2619: uint8_t lastDTS;
  5285                           ;usb_device.c: 2621: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  5286                           
  5287                           ;incstack = 0
  5288                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5289  0DB1  0020               	movlb	0	; select bank0
  5290  0DB2  086B               	movf	_pBDTEntryIn,w
  5291  0DB3  0086               	movwf	6
  5292  0DB4  0187               	clrf	7
  5293  0DB5  3000               	movlw	0
  5294  0DB6  1B01               	btfsc	1,6
  5295  0DB7  3001               	movlw	1
  5296  0DB8  00F6               	movwf	USBCtrlTrfInHandler@lastDTS
  5297                           
  5298                           ;usb_device.c: 2624: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  5299  0DB9  3004               	movlw	4
  5300  0DBA  00F4               	movwf	??_USBCtrlTrfInHandler
  5301  0DBB  0874               	movf	??_USBCtrlTrfInHandler,w
  5302  0DBC  06EB               	xorwf	_pBDTEntryIn,f
  5303                           
  5304                           ;usb_device.c: 2629: if(USBDeviceState == ADR_PENDING_STATE)
  5305  0DBD  086D               	movf	_USBDeviceState,w
  5306  0DBE  3A08               	xorlw	8
  5307  0DBF  1D03               	skipz
  5308  0DC0  2DCF               	goto	l762
  5309                           
  5310                           ;usb_device.c: 2630: {
  5311                           ;usb_device.c: 2631: UADDR = (SetupPkt.bDevADR & 0x7F);
  5312  0DC1  0842               	movf	66,w	;volatile
  5313  0DC2  397F               	andlw	127
  5314  0DC3  003D               	movlb	29	; select bank29
  5315  0DC4  0096               	movwf	22	;volatile
  5316                           
  5317                           ;usb_device.c: 2632: if(UADDR != 0u)
  5318  0DC5  0816               	movf	22,w	;volatile
  5319  0DC6  1903               	btfsc	3,2
  5320  0DC7  2DCA               	goto	l3910
  5321                           
  5322                           ;usb_device.c: 2633: {
  5323                           ;usb_device.c: 2634: USBDeviceState=ADDRESS_STATE;
  5324  0DC8  3010               	movlw	16
  5325  0DC9  2DCB               	goto	L7
  5326  0DCA                     l3910:	
  5327                           ;usb_device.c: 2635: }
  5328                           
  5329                           
  5330                           ;usb_device.c: 2636: else
  5331                           ;usb_device.c: 2637: {
  5332                           ;usb_device.c: 2638: USBDeviceState=DEFAULT_STATE;
  5333  0DCA  3004               	movlw	4
  5334  0DCB                     L7:	
  5335  0DCB  00F4               	movwf	??_USBCtrlTrfInHandler
  5336  0DCC  0874               	movf	??_USBCtrlTrfInHandler,w
  5337  0DCD  0020               	movlb	0	; select bank0
  5338  0DCE  00ED               	movwf	_USBDeviceState
  5339  0DCF                     l762:	
  5340                           
  5341                           ;usb_device.c: 2639: }
  5342                           ;usb_device.c: 2640: }
  5343                           ;usb_device.c: 2643: if(controlTransferState == 1)
  5344  0DCF  0021               	movlb	1	; select bank1
  5345  0DD0  0864               	movf	_controlTransferState^(0+128),w
  5346  0DD1  3A01               	xorlw	1
  5347  0DD2  1D03               	skipz
  5348  0DD3  2E13               	goto	l765
  5349                           
  5350                           ;usb_device.c: 2644: {
  5351                           ;usb_device.c: 2645: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  5352  0DD4  3048               	movlw	72
  5353  0DD5  00F4               	movwf	??_USBCtrlTrfInHandler
  5354  0DD6  3000               	movlw	0
  5355  0DD7  00F5               	movwf	??_USBCtrlTrfInHandler+1
  5356  0DD8  0020               	movlb	0	; select bank0
  5357  0DD9  086B               	movf	_pBDTEntryIn,w
  5358  0DDA  3E02               	addlw	2
  5359  0DDB  0086               	movwf	6
  5360  0DDC  0187               	clrf	7
  5361  0DDD  0874               	movf	??_USBCtrlTrfInHandler,w
  5362  0DDE  3FC0               	movwi [0]fsr1
  5363  0DDF  0875               	movf	??_USBCtrlTrfInHandler+1,w
  5364  0DE0  3FC1               	movwi [1]fsr1
  5365                           
  5366                           ;usb_device.c: 2646: USBCtrlTrfTxService();
  5367  0DE1  318E  2620  318D   	fcall	_USBCtrlTrfTxService
  5368                           
  5369                           ;usb_device.c: 2652: if(shortPacketStatus == 2)
  5370  0DE4  0021               	movlb	1	; select bank1
  5371  0DE5  0867               	movf	_shortPacketStatus^(0+128),w
  5372  0DE6  3A02               	xorlw	2
  5373  0DE7  1D03               	skipz
  5374  0DE8  2DF6               	goto	l3920
  5375                           
  5376                           ;usb_device.c: 2653: {
  5377                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val = 0x04;
  5378  0DE9  3004               	movlw	4
  5379  0DEA  00F4               	movwf	??_USBCtrlTrfInHandler
  5380  0DEB  0020               	movlb	0	; select bank0
  5381  0DEC  086B               	movf	_pBDTEntryIn,w
  5382  0DED  0086               	movwf	6
  5383  0DEE  0187               	clrf	7
  5384  0DEF  0874               	movf	??_USBCtrlTrfInHandler,w
  5385  0DF0  0081               	movwf	1
  5386                           
  5387                           ;usb_device.c: 2657: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5388  0DF1  086B               	movf	_pBDTEntryIn,w
  5389  0DF2  0086               	movwf	6
  5390  0DF3  0187               	clrf	7
  5391  0DF4  1781               	bsf	1,7
  5392                           
  5393                           ;usb_device.c: 2658: }
  5394  0DF5  0008               	return
  5395  0DF6                     l3920:	
  5396                           
  5397                           ;usb_device.c: 2659: else
  5398                           ;usb_device.c: 2660: {
  5399                           ;usb_device.c: 2661: if(lastDTS == 0)
  5400  0DF6  08F6               	movf	USBCtrlTrfInHandler@lastDTS,f
  5401  0DF7  1D03               	skipz
  5402  0DF8  2E06               	goto	l3924
  5403                           
  5404                           ;usb_device.c: 2662: {
  5405                           ;usb_device.c: 2663: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  5406  0DF9  3048               	movlw	72
  5407  0DFA  00F4               	movwf	??_USBCtrlTrfInHandler
  5408  0DFB  0020               	movlb	0	; select bank0
  5409  0DFC  086B               	movf	_pBDTEntryIn,w
  5410  0DFD  0086               	movwf	6
  5411  0DFE  0187               	clrf	7
  5412  0DFF  0874               	movf	??_USBCtrlTrfInHandler,w
  5413  0E00  0081               	movwf	1
  5414                           
  5415                           ;usb_device.c: 2664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5416  0E01  086B               	movf	_pBDTEntryIn,w
  5417  0E02  0086               	movwf	6
  5418  0E03  0187               	clrf	7
  5419  0E04  1781               	bsf	1,7
  5420                           
  5421                           ;usb_device.c: 2665: }
  5422  0E05  0008               	return
  5423  0E06                     l3924:	
  5424                           
  5425                           ;usb_device.c: 2666: else
  5426                           ;usb_device.c: 2667: {
  5427                           ;usb_device.c: 2668: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  5428  0E06  3008               	movlw	8
  5429  0E07  00F4               	movwf	??_USBCtrlTrfInHandler
  5430  0E08  0020               	movlb	0	; select bank0
  5431  0E09  086B               	movf	_pBDTEntryIn,w
  5432  0E0A  0086               	movwf	6
  5433  0E0B  0187               	clrf	7
  5434  0E0C  0874               	movf	??_USBCtrlTrfInHandler,w
  5435  0E0D  0081               	movwf	1
  5436                           
  5437                           ;usb_device.c: 2669: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5438  0E0E  086B               	movf	_pBDTEntryIn,w
  5439  0E0F  0086               	movwf	6
  5440  0E10  0187               	clrf	7
  5441  0E11  1781               	bsf	1,7
  5442                           
  5443                           ;usb_device.c: 2670: }
  5444                           ;usb_device.c: 2671: }
  5445                           ;usb_device.c: 2672: }
  5446  0E12  0008               	return
  5447  0E13                     l765:	
  5448                           
  5449                           ;usb_device.c: 2673: else
  5450                           ;usb_device.c: 2674: {
  5451                           ;usb_device.c: 2678: if(outPipes[0].info.bits.busy == 1)
  5452  0E13  0022               	movlb	2	; select bank2
  5453  0E14  1FC9               	btfss	(_outPipes^(0+256)+2),7
  5454  0E15  2E1D               	goto	l3932
  5455                           
  5456                           ;usb_device.c: 2679: {
  5457                           ;usb_device.c: 2680: if(outPipes[0].pFunc != (0))
  5458  0E16  084C               	movf	(_outPipes+5)^(0+256),w
  5459  0E17  1903               	btfsc	3,2
  5460  0E18  2E1C               	goto	l3930
  5461                           
  5462                           ;usb_device.c: 2681: {
  5463                           ;usb_device.c: 2682: outPipes[0].pFunc();
  5464  0E19  084C               	movf	(_outPipes+5)^(0+256),w
  5465  0E1A  318D  2DB1         	ljmp	$	;if you get stuck here, you called an invalid pointer
  5466  0E1C                     l3930:	
  5467                           
  5468                           ;usb_device.c: 2683: }
  5469                           ;usb_device.c: 2684: outPipes[0].info.bits.busy = 0;
  5470  0E1C  13C9               	bcf	(_outPipes^(0+256)+2),7
  5471  0E1D                     l3932:	
  5472                           
  5473                           ;usb_device.c: 2685: }
  5474                           ;usb_device.c: 2687: controlTransferState = 0;
  5475  0E1D  0021               	movlb	1	; select bank1
  5476  0E1E  01E4               	clrf	_controlTransferState^(0+128)
  5477  0E1F  0008               	return
  5478  0E20                     __end_of_USBCtrlTrfInHandler:	
  5479                           
  5480                           	psect	text18
  5481  0AD7                     __ptext18:	
  5482 ;; *************** function _USBCtrlTrfOutHandler *****************
  5483 ;; Defined at:
  5484 ;;		line 2564 in file "../framework/usb/usb_device.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;		None
  5487 ;; Auto vars:     Size  Location     Type
  5488 ;;		None
  5489 ;; Return value:  Size  Location     Type
  5490 ;;		None               void
  5491 ;; Registers used:
  5492 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5493 ;; Tracked objects:
  5494 ;;		On entry : 0/0
  5495 ;;		On exit  : 0/0
  5496 ;;		Unchanged: 0/0
  5497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5500 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5501 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5502 ;;Total ram usage:        2 bytes
  5503 ;; Hardware stack levels used:    1
  5504 ;; Hardware stack levels required when called:    3
  5505 ;; This function calls:
  5506 ;;		_USBCtrlTrfRxService
  5507 ;; This function is called by:
  5508 ;;		_USBCtrlEPService
  5509 ;; This function uses a non-reentrant model
  5510 ;;
  5511                           
  5512                           
  5513                           ;psect for function _USBCtrlTrfOutHandler
  5514  0AD7                     _USBCtrlTrfOutHandler:	
  5515                           
  5516                           ;usb_device.c: 2565: if(controlTransferState == 2)
  5517                           
  5518                           ;incstack = 0
  5519                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5520  0AD7  0021               	movlb	1	; select bank1
  5521  0AD8  0864               	movf	_controlTransferState^(0+128),w
  5522  0AD9  3A02               	xorlw	2
  5523  0ADA  1D03               	skipz
  5524  0ADB  2ADF               	goto	l3890
  5525                           
  5526                           ;usb_device.c: 2566: {
  5527                           ;usb_device.c: 2567: USBCtrlTrfRxService();
  5528  0ADC  3187  271B         	fcall	_USBCtrlTrfRxService
  5529                           
  5530                           ;usb_device.c: 2568: }
  5531  0ADE  0008               	return
  5532  0ADF                     l3890:	
  5533                           
  5534                           ;usb_device.c: 2569: else
  5535                           ;usb_device.c: 2570: {
  5536                           ;usb_device.c: 2573: controlTransferState = 0;
  5537  0ADF  0021               	movlb	1	; select bank1
  5538  0AE0  01E4               	clrf	_controlTransferState^(0+128)
  5539                           
  5540                           ;usb_device.c: 2580: if(BothEP0OutUOWNsSet == 0)
  5541  0AE1  0022               	movlb	2	; select bank2
  5542  0AE2  08D9               	movf	_BothEP0OutUOWNsSet^(0+256),f
  5543  0AE3  1D03               	skipz
  5544  0AE4  2B04               	goto	l3896
  5545                           
  5546                           ;usb_device.c: 2581: {
  5547                           ;usb_device.c: 2582: pBDTEntryEP0OutNext->CNT = 8;
  5548  0AE5  3008               	movlw	8
  5549  0AE6  00F7               	movwf	??_USBCtrlTrfOutHandler
  5550  0AE7  0A7C               	incf	_pBDTEntryEP0OutNext,w
  5551  0AE8  0086               	movwf	6
  5552  0AE9  0187               	clrf	7
  5553  0AEA  0877               	movf	??_USBCtrlTrfOutHandler,w
  5554  0AEB  0081               	movwf	1
  5555                           
  5556                           ;usb_device.c: 2583: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5557  0AEC  3040               	movlw	64
  5558  0AED  00F7               	movwf	??_USBCtrlTrfOutHandler
  5559  0AEE  3000               	movlw	0
  5560  0AEF  00F8               	movwf	??_USBCtrlTrfOutHandler+1
  5561  0AF0  087C               	movf	_pBDTEntryEP0OutNext,w
  5562  0AF1  3E02               	addlw	2
  5563  0AF2  0086               	movwf	6
  5564  0AF3  0187               	clrf	7
  5565  0AF4  0877               	movf	??_USBCtrlTrfOutHandler,w
  5566  0AF5  3FC0               	movwi [0]fsr1
  5567  0AF6  0878               	movf	??_USBCtrlTrfOutHandler+1,w
  5568  0AF7  3FC1               	movwi [1]fsr1
  5569                           
  5570                           ;usb_device.c: 2584: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5571  0AF8  300C               	movlw	12
  5572  0AF9  00F7               	movwf	??_USBCtrlTrfOutHandler
  5573  0AFA  087C               	movf	_pBDTEntryEP0OutNext,w
  5574  0AFB  0086               	movwf	6
  5575  0AFC  0187               	clrf	7
  5576  0AFD  0877               	movf	??_USBCtrlTrfOutHandler,w
  5577  0AFE  0081               	movwf	1
  5578                           
  5579                           ;usb_device.c: 2585: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5580  0AFF  087C               	movf	_pBDTEntryEP0OutNext,w
  5581  0B00  0086               	movwf	6
  5582  0B01  0187               	clrf	7
  5583  0B02  1781               	bsf	1,7
  5584                           
  5585                           ;usb_device.c: 2586: }
  5586  0B03  0008               	return
  5587  0B04                     l3896:	
  5588                           
  5589                           ;usb_device.c: 2587: else
  5590                           ;usb_device.c: 2588: {
  5591                           ;usb_device.c: 2589: BothEP0OutUOWNsSet = 0;
  5592  0B04  01D9               	clrf	_BothEP0OutUOWNsSet^(0+256)
  5593  0B05  0008               	return
  5594  0B06                     __end_of_USBCtrlTrfOutHandler:	
  5595                           
  5596                           	psect	text19
  5597  071B                     __ptext19:	
  5598 ;; *************** function _USBCtrlTrfRxService *****************
  5599 ;; Defined at:
  5600 ;;		line 1872 in file "../framework/usb/usb_device.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;		None
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;  byteToRead      1    6[COMMON] unsigned char 
  5605 ;;  i               1    5[COMMON] unsigned char 
  5606 ;; Return value:  Size  Location     Type
  5607 ;;		None               void
  5608 ;; Registers used:
  5609 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5616 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5617 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5618 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5619 ;;Total ram usage:        4 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; Hardware stack levels required when called:    2
  5622 ;; This function calls:
  5623 ;;		_USBCtrlEPAllowStatusStage
  5624 ;; This function is called by:
  5625 ;;		_USBCtrlTrfOutHandler
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           
  5630                           ;psect for function _USBCtrlTrfRxService
  5631  071B                     _USBCtrlTrfRxService:	
  5632                           
  5633                           ;usb_device.c: 1873: uint8_t byteToRead;
  5634                           ;usb_device.c: 1874: uint8_t i;
  5635                           ;usb_device.c: 1878: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  5636                           
  5637                           ;incstack = 0
  5638                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5639  071B  0020               	movlb	0	; select bank0
  5640  071C  086E               	movf	_pBDTEntryEP0OutCurrent,w
  5641  071D  0086               	movwf	6
  5642  071E  0187               	clrf	7
  5643  071F  3F41               	moviw [1]fsr1
  5644  0720  00F6               	movwf	USBCtrlTrfRxService@byteToRead
  5645                           
  5646                           ;usb_device.c: 1884: if(byteToRead > outPipes[0].wCount.Val)
  5647  0721  0876               	movf	USBCtrlTrfRxService@byteToRead,w
  5648  0722  00F3               	movwf	??_USBCtrlTrfRxService
  5649  0723  01F4               	clrf	??_USBCtrlTrfRxService+1
  5650  0724  0874               	movf	??_USBCtrlTrfRxService+1,w
  5651  0725  0022               	movlb	2	; select bank2
  5652  0726  024B               	subwf	((_outPipes+1)^(0+256)+3),w
  5653  0727  1D03               	skipz
  5654  0728  2F2B               	goto	u3065
  5655  0729  0873               	movf	??_USBCtrlTrfRxService,w
  5656  072A  024A               	subwf	(_outPipes^(0+256)+3),w
  5657  072B                     u3065:	
  5658  072B  1803               	skipnc
  5659  072C  2F31               	goto	l678
  5660                           
  5661                           ;usb_device.c: 1885: {
  5662                           ;usb_device.c: 1886: byteToRead = outPipes[0].wCount.Val;
  5663  072D  084A               	movf	(_outPipes^(0+256)+3),w
  5664  072E  00F3               	movwf	??_USBCtrlTrfRxService
  5665  072F  0873               	movf	??_USBCtrlTrfRxService,w
  5666  0730  00F6               	movwf	USBCtrlTrfRxService@byteToRead
  5667  0731                     l678:	
  5668                           
  5669                           ;usb_device.c: 1887: }
  5670                           ;usb_device.c: 1889: outPipes[0].wCount.Val -= byteToRead;
  5671  0731  0876               	movf	USBCtrlTrfRxService@byteToRead,w
  5672  0732  00F3               	movwf	??_USBCtrlTrfRxService
  5673  0733  01F4               	clrf	??_USBCtrlTrfRxService+1
  5674  0734  0873               	movf	??_USBCtrlTrfRxService,w
  5675  0735  02CA               	subwf	(_outPipes^(0+256)+3),f
  5676  0736  0874               	movf	??_USBCtrlTrfRxService+1,w
  5677  0737  3BCB               	subwfb	((_outPipes+1)^(0+256)+3),f
  5678                           
  5679                           ;usb_device.c: 1893: for(i=0;i<byteToRead;i++)
  5680  0738  01F5               	clrf	USBCtrlTrfRxService@i
  5681  0739                     l3718:	
  5682  0739  0876               	movf	USBCtrlTrfRxService@byteToRead,w
  5683  073A  0275               	subwf	USBCtrlTrfRxService@i,w
  5684  073B  1803               	btfsc	3,0
  5685  073C  2F51               	goto	l3720
  5686                           
  5687                           ;usb_device.c: 1894: {
  5688                           ;usb_device.c: 1895: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  5689  073D  0875               	movf	USBCtrlTrfRxService@i,w
  5690  073E  3E48               	addlw	72
  5691  073F  0086               	movwf	6
  5692  0740  0187               	clrf	7
  5693  0741  0801               	movf	1,w
  5694  0742  00F3               	movwf	??_USBCtrlTrfRxService
  5695  0743  0847               	movf	_outPipes^(0+256),w
  5696  0744  0086               	movwf	6
  5697  0745  0187               	clrf	7
  5698  0746  0873               	movf	??_USBCtrlTrfRxService,w
  5699  0747  0081               	movwf	1
  5700  0748  3001               	movlw	1
  5701  0749  00F3               	movwf	??_USBCtrlTrfRxService
  5702  074A  0873               	movf	??_USBCtrlTrfRxService,w
  5703  074B  07C7               	addwf	_outPipes^(0+256),f
  5704  074C  3001               	movlw	1
  5705  074D  00F3               	movwf	??_USBCtrlTrfRxService
  5706  074E  0873               	movf	??_USBCtrlTrfRxService,w
  5707  074F  07F5               	addwf	USBCtrlTrfRxService@i,f
  5708  0750  2F39               	goto	l3718
  5709  0751                     l3720:	
  5710                           
  5711                           ;usb_device.c: 1896: }
  5712                           ;usb_device.c: 1900: if(outPipes[0].wCount.Val > 0)
  5713  0751  3003               	movlw	3
  5714  0752  3E47               	addlw	_outPipes& (0+255)
  5715  0753  0086               	movwf	6
  5716  0754  3001               	movlw	1	; select bank2/3
  5717  0755  0087               	movwf	7
  5718  0756  0016               	moviw fsr1++
  5719  0757  0401               	iorwf	1,w
  5720  0758  1903               	skipnz
  5721  0759  2F8B               	goto	l3728
  5722                           
  5723                           ;usb_device.c: 1901: {
  5724                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->CNT = 8;
  5725  075A  3008               	movlw	8
  5726  075B  00F3               	movwf	??_USBCtrlTrfRxService
  5727  075C  0A7C               	incf	_pBDTEntryEP0OutNext,w
  5728  075D  0086               	movwf	6
  5729  075E  0187               	clrf	7
  5730  075F  0873               	movf	??_USBCtrlTrfRxService,w
  5731  0760  0081               	movwf	1
  5732                           
  5733                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  5734  0761  3048               	movlw	72
  5735  0762  00F3               	movwf	??_USBCtrlTrfRxService
  5736  0763  3000               	movlw	0
  5737  0764  00F4               	movwf	??_USBCtrlTrfRxService+1
  5738  0765  087C               	movf	_pBDTEntryEP0OutNext,w
  5739  0766  3E02               	addlw	2
  5740  0767  0086               	movwf	6
  5741  0768  0187               	clrf	7
  5742  0769  0873               	movf	??_USBCtrlTrfRxService,w
  5743  076A  3FC0               	movwi [0]fsr1
  5744  076B  0874               	movf	??_USBCtrlTrfRxService+1,w
  5745  076C  3FC1               	movwi [1]fsr1
  5746                           
  5747                           ;usb_device.c: 1904: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  5748  076D  0020               	movlb	0	; select bank0
  5749  076E  086E               	movf	_pBDTEntryEP0OutCurrent,w
  5750  076F  0086               	movwf	6
  5751  0770  0187               	clrf	7
  5752  0771  1B01               	btfsc	1,6
  5753  0772  2F7F               	goto	l3726
  5754                           
  5755                           ;usb_device.c: 1905: {
  5756                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  5757  0773  3048               	movlw	72
  5758  0774  00F3               	movwf	??_USBCtrlTrfRxService
  5759  0775  087C               	movf	_pBDTEntryEP0OutNext,w
  5760  0776  0086               	movwf	6
  5761  0777  0187               	clrf	7
  5762  0778  0873               	movf	??_USBCtrlTrfRxService,w
  5763  0779  0081               	movwf	1
  5764                           
  5765                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5766  077A  087C               	movf	_pBDTEntryEP0OutNext,w
  5767  077B  0086               	movwf	6
  5768  077C  0187               	clrf	7
  5769  077D  1781               	bsf	1,7
  5770                           
  5771                           ;usb_device.c: 1908: }
  5772  077E  0008               	return
  5773  077F                     l3726:	
  5774                           
  5775                           ;usb_device.c: 1909: else
  5776                           ;usb_device.c: 1910: {
  5777                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  5778  077F  3008               	movlw	8
  5779  0780  00F3               	movwf	??_USBCtrlTrfRxService
  5780  0781  087C               	movf	_pBDTEntryEP0OutNext,w
  5781  0782  0086               	movwf	6
  5782  0783  0187               	clrf	7
  5783  0784  0873               	movf	??_USBCtrlTrfRxService,w
  5784  0785  0081               	movwf	1
  5785                           
  5786                           ;usb_device.c: 1912: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5787  0786  087C               	movf	_pBDTEntryEP0OutNext,w
  5788  0787  0086               	movwf	6
  5789  0788  0187               	clrf	7
  5790  0789  1781               	bsf	1,7
  5791                           
  5792                           ;usb_device.c: 1913: }
  5793                           ;usb_device.c: 1914: }
  5794  078A  0008               	return
  5795  078B                     l3728:	
  5796                           
  5797                           ;usb_device.c: 1915: else
  5798                           ;usb_device.c: 1916: {
  5799                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->CNT = 8;
  5800  078B  3008               	movlw	8
  5801  078C  00F3               	movwf	??_USBCtrlTrfRxService
  5802  078D  0A7C               	incf	_pBDTEntryEP0OutNext,w
  5803  078E  0086               	movwf	6
  5804  078F  0187               	clrf	7
  5805  0790  0873               	movf	??_USBCtrlTrfRxService,w
  5806  0791  0081               	movwf	1
  5807                           
  5808                           ;usb_device.c: 1921: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5809  0792  3040               	movlw	64
  5810  0793  00F3               	movwf	??_USBCtrlTrfRxService
  5811  0794  3000               	movlw	0
  5812  0795  00F4               	movwf	??_USBCtrlTrfRxService+1
  5813  0796  087C               	movf	_pBDTEntryEP0OutNext,w
  5814  0797  3E02               	addlw	2
  5815  0798  0086               	movwf	6
  5816  0799  0187               	clrf	7
  5817  079A  0873               	movf	??_USBCtrlTrfRxService,w
  5818  079B  3FC0               	movwi [0]fsr1
  5819  079C  0874               	movf	??_USBCtrlTrfRxService+1,w
  5820  079D  3FC1               	movwi [1]fsr1
  5821                           
  5822                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  5823  079E  3004               	movlw	4
  5824  079F  00F3               	movwf	??_USBCtrlTrfRxService
  5825  07A0  087C               	movf	_pBDTEntryEP0OutNext,w
  5826  07A1  0086               	movwf	6
  5827  07A2  0187               	clrf	7
  5828  07A3  0873               	movf	??_USBCtrlTrfRxService,w
  5829  07A4  0081               	movwf	1
  5830                           
  5831                           ;usb_device.c: 1926: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5832  07A5  087C               	movf	_pBDTEntryEP0OutNext,w
  5833  07A6  0086               	movwf	6
  5834  07A7  0187               	clrf	7
  5835  07A8  1781               	bsf	1,7
  5836                           
  5837                           ;usb_device.c: 1933: if(outPipes[0].pFunc != (0))
  5838  07A9  0022               	movlb	2	; select bank2
  5839  07AA  084C               	movf	(_outPipes+5)^(0+256),w
  5840  07AB  1903               	btfsc	3,2
  5841  07AC  2FB0               	goto	l3734
  5842                           
  5843                           ;usb_device.c: 1934: {
  5844                           ;usb_device.c: 1940: outPipes[0].pFunc();
  5845  07AD  084C               	movf	(_outPipes+5)^(0+256),w
  5846  07AE  3187  2F1B         	ljmp	$	;if you get stuck here, you called an invalid pointer
  5847  07B0                     l3734:	
  5848                           
  5849                           ;usb_device.c: 1945: }
  5850                           ;usb_device.c: 1946: outPipes[0].info.bits.busy = 0;
  5851  07B0  13C9               	bcf	(_outPipes^(0+256)+2),7
  5852                           
  5853                           ;usb_device.c: 1960: if(USBDeferStatusStagePacket == 0)
  5854  07B1  0021               	movlb	1	; select bank1
  5855  07B2  08E2               	movf	_USBDeferStatusStagePacket^(0+128),f
  5856  07B3  1D03               	skipz
  5857  07B4  0008               	return
  5858                           
  5859                           ;usb_device.c: 1961: {
  5860                           ;usb_device.c: 1962: USBCtrlEPAllowStatusStage();
  5861  07B5  318D  2548         	fcall	_USBCtrlEPAllowStatusStage
  5862  07B7  0008               	return
  5863  07B8                     __end_of_USBCtrlTrfRxService:	
  5864                           
  5865                           	psect	text20
  5866  07B8                     __ptext20:	
  5867 ;; *************** function _USBCtrlTrfSetupHandler *****************
  5868 ;; Defined at:
  5869 ;;		line 2492 in file "../framework/usb/usb_device.c"
  5870 ;; Parameters:    Size  Location     Type
  5871 ;;		None
  5872 ;; Auto vars:     Size  Location     Type
  5873 ;;		None
  5874 ;; Return value:  Size  Location     Type
  5875 ;;		None               void
  5876 ;; Registers used:
  5877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  5878 ;; Tracked objects:
  5879 ;;		On entry : 0/0
  5880 ;;		On exit  : 0/0
  5881 ;;		Unchanged: 0/0
  5882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5885 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5886 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5887 ;;Total ram usage:        1 bytes
  5888 ;; Hardware stack levels used:    1
  5889 ;; Hardware stack levels required when called:    7
  5890 ;; This function calls:
  5891 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5892 ;;		_USBCtrlEPServiceComplete
  5893 ;;		_USBCheckStdRequest
  5894 ;; This function is called by:
  5895 ;;		_USBCtrlEPService
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           
  5900                           ;psect for function _USBCtrlTrfSetupHandler
  5901  07B8                     _USBCtrlTrfSetupHandler:	
  5902                           
  5903                           ;usb_device.c: 2496: shortPacketStatus = 0;
  5904                           
  5905                           ;incstack = 0
  5906                           ; Regs used in _USBCtrlTrfSetupHandler: [allreg]
  5907  07B8  0021               	movlb	1	; select bank1
  5908  07B9  01E7               	clrf	_shortPacketStatus^(0+128)
  5909                           
  5910                           ;usb_device.c: 2497: USBDeferStatusStagePacket = 0;
  5911  07BA  01E2               	clrf	_USBDeferStatusStagePacket^(0+128)	;volatile
  5912                           
  5913                           ;usb_device.c: 2498: USBDeferINDataStagePackets = 0;
  5914  07BB  0022               	movlb	2	; select bank2
  5915  07BC  01DC               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  5916                           
  5917                           ;usb_device.c: 2499: USBDeferOUTDataStagePackets = 0;
  5918  07BD  01DD               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  5919                           
  5920                           ;usb_device.c: 2500: BothEP0OutUOWNsSet = 0;
  5921  07BE  01D9               	clrf	_BothEP0OutUOWNsSet^(0+256)
  5922                           
  5923                           ;usb_device.c: 2501: controlTransferState = 0;
  5924  07BF  0021               	movlb	1	; select bank1
  5925  07C0  01E4               	clrf	_controlTransferState^(0+128)
  5926                           
  5927                           ;usb_device.c: 2510: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5928  07C1  307F               	movlw	127
  5929  07C2  0020               	movlb	0	; select bank0
  5930  07C3  00E1               	movwf	??_USBCtrlTrfSetupHandler
  5931  07C4  086B               	movf	_pBDTEntryIn,w
  5932  07C5  0086               	movwf	6
  5933  07C6  0187               	clrf	7
  5934  07C7  0861               	movf	??_USBCtrlTrfSetupHandler,w
  5935  07C8  0581               	andwf	1,f
  5936                           
  5937                           ;usb_device.c: 2511: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  5938  07C9  3004               	movlw	4
  5939  07CA  00E1               	movwf	??_USBCtrlTrfSetupHandler
  5940  07CB  0861               	movf	??_USBCtrlTrfSetupHandler,w
  5941  07CC  06EB               	xorwf	_pBDTEntryIn,f
  5942                           
  5943                           ;usb_device.c: 2512: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5944  07CD  307F               	movlw	127
  5945  07CE  00E1               	movwf	??_USBCtrlTrfSetupHandler
  5946  07CF  086B               	movf	_pBDTEntryIn,w
  5947  07D0  0086               	movwf	6
  5948  07D1  0187               	clrf	7
  5949  07D2  0861               	movf	??_USBCtrlTrfSetupHandler,w
  5950  07D3  0581               	andwf	1,f
  5951                           
  5952                           ;usb_device.c: 2513: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  5953  07D4  3004               	movlw	4
  5954  07D5  00E1               	movwf	??_USBCtrlTrfSetupHandler
  5955  07D6  0861               	movf	??_USBCtrlTrfSetupHandler,w
  5956  07D7  06EB               	xorwf	_pBDTEntryIn,f
  5957                           
  5958                           ;usb_device.c: 2514: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  5959  07D8  307F               	movlw	127
  5960  07D9  00E1               	movwf	??_USBCtrlTrfSetupHandler
  5961  07DA  087C               	movf	_pBDTEntryEP0OutNext,w
  5962  07DB  0086               	movwf	6
  5963  07DC  0187               	clrf	7
  5964  07DD  0861               	movf	??_USBCtrlTrfSetupHandler,w
  5965  07DE  0581               	andwf	1,f
  5966                           
  5967                           ;usb_device.c: 2516: inPipes[0].info.Val = 0;
  5968  07DF  0021               	movlb	1	; select bank1
  5969  07E0  01EB               	clrf	(_inPipes^(0+128)+2)
  5970                           
  5971                           ;usb_device.c: 2517: inPipes[0].wCount.Val = 0;
  5972  07E1  01EC               	clrf	(_inPipes^(0+128)+3)
  5973  07E2  01ED               	clrf	((_inPipes+1)^(0+128)+3)
  5974                           
  5975                           ;usb_device.c: 2518: outPipes[0].info.Val = 0;
  5976  07E3  0022               	movlb	2	; select bank2
  5977  07E4  01C9               	clrf	(_outPipes^(0+256)+2)
  5978                           
  5979                           ;usb_device.c: 2519: outPipes[0].wCount.Val = 0;
  5980  07E5  01CA               	clrf	(_outPipes^(0+256)+3)
  5981  07E6  01CB               	clrf	((_outPipes+1)^(0+256)+3)
  5982                           
  5983                           ;usb_device.c: 2525: USBCheckStdRequest();
  5984  07E7  318C  249B  3187   	fcall	_USBCheckStdRequest
  5985                           
  5986                           ;usb_device.c: 2526: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  5987  07EA  3003               	movlw	3
  5988  07EB  0020               	movlb	0	; select bank0
  5989  07EC  00D5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  5990  07ED  3000               	movlw	0
  5991  07EE  00D6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  5992  07EF  01D7               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  5993  07F0  3000               	movlw	0
  5994  07F1  00D8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  5995  07F2  3000               	movlw	0
  5996  07F3  00D9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  5997  07F4  318B  2335  3187   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5998                           
  5999                           ;usb_device.c: 2539: USBCtrlEPServiceComplete();
  6000  07F7  3182  225E         	fcall	_USBCtrlEPServiceComplete
  6001  07F9  0008               	return
  6002  07FA                     __end_of_USBCtrlTrfSetupHandler:	
  6003                           
  6004                           	psect	text21
  6005  0C9B                     __ptext21:	
  6006 ;; *************** function _USBCheckStdRequest *****************
  6007 ;; Defined at:
  6008 ;;		line 2712 in file "../framework/usb/usb_device.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;		None
  6011 ;; Auto vars:     Size  Location     Type
  6012 ;;		None
  6013 ;; Return value:  Size  Location     Type
  6014 ;;		None               void
  6015 ;; Registers used:
  6016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6017 ;; Tracked objects:
  6018 ;;		On entry : 0/0
  6019 ;;		On exit  : 0/0
  6020 ;;		Unchanged: 0/0
  6021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6024 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6025 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6026 ;;Total ram usage:        1 bytes
  6027 ;; Hardware stack levels used:    1
  6028 ;; Hardware stack levels required when called:    6
  6029 ;; This function calls:
  6030 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6031 ;;		_USBStdSetCfgHandler
  6032 ;;		_USBStdGetDscHandler
  6033 ;;		_USBStdGetStatusHandler
  6034 ;;		_USBStdFeatureReqHandler
  6035 ;; This function is called by:
  6036 ;;		_USBCtrlTrfSetupHandler
  6037 ;; This function uses a non-reentrant model
  6038 ;;
  6039                           
  6040                           
  6041                           ;psect for function _USBCheckStdRequest
  6042  0C9B                     _USBCheckStdRequest:	
  6043                           
  6044                           ;usb_device.c: 2713: if(SetupPkt.RequestType != (0x00>>5)) return;
  6045                           
  6046                           ;incstack = 0
  6047                           ; Regs used in _USBCheckStdRequest: [allreg]
  6048  0C9B  0020               	movlb	0	; select bank0
  6049  0C9C  0E40               	swapf	64,w	;volatile
  6050  0C9D  0C89               	rrf	9,f
  6051  0C9E  3903               	andlw	3
  6052  0C9F  3A00               	xorlw	0
  6053  0CA0  1D03               	btfss	3,2
  6054  0CA1  0008               	return
  6055  0CA2  2CE5               	goto	l4540
  6056  0CA3                     l779:	
  6057                           ;usb_device.c: 2716: {
  6058                           ;usb_device.c: 2717: case 5:
  6059                           
  6060                           ;usb_device.c: 2715: switch(SetupPkt.bRequest)
  6061                           
  6062                           
  6063                           ;usb_device.c: 2718: inPipes[0].info.bits.busy = 1;
  6064  0CA3  0021               	movlb	1	; select bank1
  6065  0CA4  17EB               	bsf	(_inPipes^(0+128)+2),7
  6066                           
  6067                           ;usb_device.c: 2719: USBDeviceState = ADR_PENDING_STATE;
  6068  0CA5  3008               	movlw	8
  6069  0CA6  0020               	movlb	0	; select bank0
  6070  0CA7  00E0               	movwf	??_USBCheckStdRequest
  6071  0CA8  0860               	movf	??_USBCheckStdRequest,w
  6072  0CA9  00ED               	movwf	_USBDeviceState
  6073                           
  6074                           ;usb_device.c: 2721: break;
  6075  0CAA  0008               	return
  6076  0CAB                     l4510:	
  6077                           ;usb_device.c: 2722: case 6:
  6078                           
  6079                           
  6080                           ;usb_device.c: 2723: USBStdGetDscHandler();
  6081  0CAB  318F  2700         	fcall	_USBStdGetDscHandler
  6082                           
  6083                           ;usb_device.c: 2724: break;
  6084  0CAD  0008               	return
  6085  0CAE                     l4512:	
  6086                           ;usb_device.c: 2725: case 9:
  6087                           
  6088                           
  6089                           ;usb_device.c: 2726: USBStdSetCfgHandler();
  6090  0CAE  318F  277F         	fcall	_USBStdSetCfgHandler
  6091                           
  6092                           ;usb_device.c: 2727: break;
  6093  0CB0  0008               	return
  6094  0CB1                     l4514:	
  6095                           ;usb_device.c: 2728: case 8:
  6096                           
  6097                           
  6098                           ;usb_device.c: 2729: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  6099  0CB1  30EE               	movlw	low _USBActiveConfiguration
  6100  0CB2  0021               	movlb	1	; select bank1
  6101  0CB3  00E9               	movwf	_inPipes^(0+128)
  6102  0CB4  3000               	movlw	high _USBActiveConfiguration
  6103  0CB5  00EA               	movwf	(_inPipes+1)^(0+128)
  6104                           
  6105                           ;usb_device.c: 2730: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6106  0CB6  146B               	bsf	(_inPipes^(0+128)+2),0
  6107                           
  6108                           ;usb_device.c: 2731: inPipes[0].wCount.v[0] = 1;
  6109  0CB7  01EC               	clrf	(_inPipes^(0+128)+3)
  6110  0CB8  0AEC               	incf	(_inPipes^(0+128)+3),f
  6111                           
  6112                           ;usb_device.c: 2732: inPipes[0].info.bits.busy = 1;
  6113  0CB9  17EB               	bsf	(_inPipes^(0+128)+2),7
  6114                           
  6115                           ;usb_device.c: 2733: break;
  6116  0CBA  0008               	return
  6117  0CBB                     l4522:	
  6118                           ;usb_device.c: 2734: case 0:
  6119                           
  6120                           
  6121                           ;usb_device.c: 2735: USBStdGetStatusHandler();
  6122  0CBB  318B  23FC         	fcall	_USBStdGetStatusHandler
  6123                           
  6124                           ;usb_device.c: 2736: break;
  6125  0CBD  0008               	return
  6126  0CBE                     l4524:	
  6127                           ;usb_device.c: 2737: case 1:
  6128                           
  6129                           
  6130                           ;usb_device.c: 2738: case 3:
  6131                           ;usb_device.c: 2739: USBStdFeatureReqHandler();
  6132  0CBE  3181  2157         	fcall	_USBStdFeatureReqHandler
  6133                           
  6134                           ;usb_device.c: 2740: break;
  6135  0CC0  0008               	return
  6136  0CC1                     l4526:	
  6137                           ;usb_device.c: 2741: case 10:
  6138                           
  6139                           
  6140                           ;usb_device.c: 2742: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  6141  0CC1  0020               	movlb	0	; select bank0
  6142  0CC2  0844               	movf	68,w	;volatile
  6143  0CC3  3EEF               	addlw	_USBAlternateInterface& (0+255)
  6144  0CC4  0021               	movlb	1	; select bank1
  6145  0CC5  00E9               	movwf	_inPipes^(0+128)
  6146  0CC6  3000               	movlw	0
  6147  0CC7  00EA               	movwf	(_inPipes+1)^(0+128)
  6148                           
  6149                           ;usb_device.c: 2743: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6150  0CC8  146B               	bsf	(_inPipes^(0+128)+2),0
  6151                           
  6152                           ;usb_device.c: 2744: inPipes[0].wCount.v[0] = 1;
  6153  0CC9  01EC               	clrf	(_inPipes^(0+128)+3)
  6154  0CCA  0AEC               	incf	(_inPipes^(0+128)+3),f
  6155                           
  6156                           ;usb_device.c: 2745: inPipes[0].info.bits.busy = 1;
  6157  0CCB  17EB               	bsf	(_inPipes^(0+128)+2),7
  6158                           
  6159                           ;usb_device.c: 2746: break;
  6160  0CCC  0008               	return
  6161  0CCD                     l788:	
  6162                           ;usb_device.c: 2747: case 11:
  6163                           
  6164                           
  6165                           ;usb_device.c: 2748: inPipes[0].info.bits.busy = 1;
  6166  0CCD  0021               	movlb	1	; select bank1
  6167  0CCE  17EB               	bsf	(_inPipes^(0+128)+2),7
  6168                           
  6169                           ;usb_device.c: 2749: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  6170  0CCF  0020               	movlb	0	; select bank0
  6171  0CD0  0842               	movf	66,w	;volatile
  6172  0CD1  00E0               	movwf	??_USBCheckStdRequest
  6173  0CD2  0844               	movf	68,w	;volatile
  6174  0CD3  3EEF               	addlw	_USBAlternateInterface& (0+255)
  6175  0CD4  0086               	movwf	6
  6176  0CD5  0187               	clrf	7
  6177  0CD6  0860               	movf	??_USBCheckStdRequest,w
  6178  0CD7  0081               	movwf	1
  6179                           
  6180                           ;usb_device.c: 2750: break;
  6181  0CD8  0008               	return
  6182  0CD9                     l4536:	
  6183                           ;usb_device.c: 2751: case 7:
  6184                           
  6185                           
  6186                           ;usb_device.c: 2752: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  6187  0CD9  3002               	movlw	2
  6188  0CDA  00D5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  6189  0CDB  3000               	movlw	0
  6190  0CDC  00D6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  6191  0CDD  01D7               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  6192  0CDE  3000               	movlw	0
  6193  0CDF  00D8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  6194  0CE0  3000               	movlw	0
  6195  0CE1  00D9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  6196  0CE2  318B  2335         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6197                           
  6198                           ;usb_device.c: 2757: }
  6199                           
  6200                           ;usb_device.c: 2756: break;
  6201                           
  6202                           ;usb_device.c: 2755: default:
  6203                           
  6204                           ;usb_device.c: 2754: case 12:
  6205                           
  6206                           ;usb_device.c: 2753: break;
  6207  0CE4  0008               	return
  6208  0CE5                     l4540:	
  6209  0CE5  0020               	movlb	0	; select bank0
  6210  0CE6  0841               	movf	65,w	;volatile
  6211                           
  6212                           ; Switch size 1, requested type "space"
  6213                           ; Number of cases is 11, Range of values is 0 to 12
  6214                           ; switch strategies available:
  6215                           ; Name         Instructions Cycles
  6216                           ; direct_byte           32     6 (fixed)
  6217                           ; simple_byte           34    18 (average)
  6218                           ; jumptable            260     6 (fixed)
  6219                           ; rangetable            17     4 (fixed)
  6220                           ; spacedrange           31     6 (fixed)
  6221                           ; locatedrange          13     3 (fixed)
  6222                           ;	Chosen strategy is direct_byte
  6223  0CE7  0084               	movwf	4
  6224  0CE8  300D               	movlw	13
  6225  0CE9  0204               	subwf	4,w
  6226  0CEA  1803               	skipnc
  6227  0CEB  0008               	return
  6228  0CEC  3188               	movlp	high S4768
  6229  0CED  3504               	lslf	4,w
  6230  0CEE  3E00               	addlw	low S4768
  6231  0CEF  0082               	movwf	2
  6232  0CF0                     l777:	
  6233  0CF0  0008               	return
  6234  0CF1                     __end_of_USBCheckStdRequest:	
  6235                           
  6236                           	psect	swtext2
  6237  0800                     __pswtext2:	
  6238  0800                     S4768:	
  6239  0800  318C  2CBB         	ljmp	l4522
  6240  0802  318C  2CBE         	ljmp	l4524
  6241  0804  318C  2CF0         	ljmp	l777
  6242  0806  318C  2CBE         	ljmp	l4524
  6243  0808  318C  2CF0         	ljmp	l777
  6244  080A  318C  2CA3         	ljmp	l779
  6245  080C  318C  2CAB         	ljmp	l4510
  6246  080E  318C  2CD9         	ljmp	l4536
  6247  0810  318C  2CB1         	ljmp	l4514
  6248  0812  318C  2CAE         	ljmp	l4512
  6249  0814  318C  2CC1         	ljmp	l4526
  6250  0816  318C  2CCD         	ljmp	l788
  6251  0818  318C  2CF0         	ljmp	l777
  6252                           
  6253                           	psect	text22
  6254  0157                     __ptext22:	
  6255 ;; *************** function _USBStdFeatureReqHandler *****************
  6256 ;; Defined at:
  6257 ;;		line 2780 in file "../framework/usb/usb_device.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;		None
  6260 ;; Auto vars:     Size  Location     Type
  6261 ;;  pUEP            2   12[BANK0 ] PTR unsigned char 
  6262 ;;		 -> UEP0(1), 
  6263 ;;  p               1   15[BANK0 ] PTR struct __BDT
  6264 ;;		 -> BDT(32), NULL(0), 
  6265 ;;  current_ep_d    1   14[BANK0 ] struct .
  6266 ;; Return value:  Size  Location     Type
  6267 ;;		None               void
  6268 ;; Registers used:
  6269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6270 ;; Tracked objects:
  6271 ;;		On entry : 0/0
  6272 ;;		On exit  : 0/0
  6273 ;;		Unchanged: 0/0
  6274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6276 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6277 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6278 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6279 ;;Total ram usage:        6 bytes
  6280 ;; Hardware stack levels used:    1
  6281 ;; Hardware stack levels required when called:    5
  6282 ;; This function calls:
  6283 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6284 ;; This function is called by:
  6285 ;;		_USBCheckStdRequest
  6286 ;; This function uses a non-reentrant model
  6287 ;;
  6288                           
  6289                           
  6290                           ;psect for function _USBStdFeatureReqHandler
  6291  0157                     _USBStdFeatureReqHandler:	
  6292                           
  6293                           ;usb_device.c: 2781: BDT_ENTRY *p;
  6294                           ;usb_device.c: 2782: EP_STATUS current_ep_data;
  6295                           ;usb_device.c: 2786: unsigned char* pUEP;
  6296                           ;usb_device.c: 2824: if((SetupPkt.bFeature == 1)&&
  6297                           ;usb_device.c: 2825: (SetupPkt.Recipient == (0x00)))
  6298                           
  6299                           ;incstack = 0
  6300                           ; Regs used in _USBStdFeatureReqHandler: [allreg]
  6301  0157  0020               	movlb	0	; select bank0
  6302  0158  0842               	movf	66,w	;volatile
  6303  0159  3A01               	xorlw	1
  6304  015A  1D03               	skipz
  6305  015B  296E               	goto	l4558
  6306  015C  0840               	movf	64,w	;volatile
  6307  015D  391F               	andlw	31
  6308  015E  3800               	iorlw	0
  6309  015F  1D03               	skipz
  6310  0160  296E               	goto	l4558
  6311                           
  6312                           ;usb_device.c: 2826: {
  6313                           ;usb_device.c: 2827: inPipes[0].info.bits.busy = 1;
  6314  0161  0021               	movlb	1	; select bank1
  6315  0162  17EB               	bsf	(_inPipes^(0+128)+2),7
  6316                           
  6317                           ;usb_device.c: 2828: if(SetupPkt.bRequest == 3)
  6318  0163  0020               	movlb	0	; select bank0
  6319  0164  0841               	movf	65,w	;volatile
  6320  0165  3A03               	xorlw	3
  6321  0166  1D03               	skipz
  6322  0167  296C               	goto	l4556
  6323                           
  6324                           ;usb_device.c: 2829: RemoteWakeup = 1;
  6325  0168  0022               	movlb	2	; select bank2
  6326  0169  01DA               	clrf	_RemoteWakeup^(0+256)
  6327  016A  0ADA               	incf	_RemoteWakeup^(0+256),f
  6328  016B  296E               	goto	l4558
  6329  016C                     l4556:	
  6330                           
  6331                           ;usb_device.c: 2830: else
  6332                           ;usb_device.c: 2831: RemoteWakeup = 0;
  6333  016C  0022               	movlb	2	; select bank2
  6334  016D  01DA               	clrf	_RemoteWakeup^(0+256)
  6335  016E                     l4558:	
  6336                           
  6337                           ;usb_device.c: 2832: }
  6338                           ;usb_device.c: 2835: if((SetupPkt.bFeature == 0)&&
  6339                           ;usb_device.c: 2836: (SetupPkt.Recipient == (0x02))&&
  6340                           ;usb_device.c: 2837: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
  6341                           ;usb_device.c: 2838: (USBDeviceState == CONFIGURED_STATE))
  6342  016E  0020               	movlb	0	; select bank0
  6343  016F  0842               	movf	66,w
  6344  0170  1D03               	skipz
  6345  0171  0008               	return
  6346  0172  0840               	movf	64,w	;volatile
  6347  0173  391F               	andlw	31
  6348  0174  3A02               	xorlw	2
  6349  0175  1D03               	skipz
  6350  0176  0008               	return
  6351  0177  0844               	movf	68,w	;volatile
  6352  0178  390F               	andlw	15
  6353  0179  3A00               	xorlw	0
  6354  017A  1903               	skipnz
  6355  017B  0008               	return
  6356  017C  0844               	movf	68,w	;volatile
  6357  017D  390F               	andlw	15
  6358  017E  00DA               	movwf	??_USBStdFeatureReqHandler
  6359  017F  3002               	movlw	2
  6360  0180  025A               	subwf	??_USBStdFeatureReqHandler,w
  6361  0181  1803               	skipnc
  6362  0182  0008               	return
  6363  0183  086D               	movf	_USBDeviceState,w
  6364  0184  3A20               	xorlw	32
  6365  0185  1D03               	skipz
  6366  0186  0008               	return
  6367                           
  6368                           ;usb_device.c: 2839: {
  6369                           ;usb_device.c: 2842: inPipes[0].info.bits.busy = 1;
  6370  0187  0021               	movlb	1	; select bank1
  6371  0188  17EB               	bsf	(_inPipes^(0+128)+2),7
  6372                           
  6373                           ;usb_device.c: 2845: if(SetupPkt.EPDir == 0)
  6374  0189  0020               	movlb	0	; select bank0
  6375  018A  1BC4               	btfsc	68,7	;volatile
  6376  018B  299A               	goto	l4572
  6377                           
  6378                           ;usb_device.c: 2846: {
  6379                           ;usb_device.c: 2847: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6380  018C  0844               	movf	68,w	;volatile
  6381  018D  390F               	andlw	15
  6382  018E  3E57               	addlw	_pBDTEntryOut& (0+255)
  6383  018F  0086               	movwf	6
  6384  0190  3001               	movlw	1	; select bank2/3
  6385  0191  0087               	movwf	7
  6386  0192  0801               	movf	1,w
  6387  0193  00DA               	movwf	??_USBStdFeatureReqHandler
  6388  0194  085A               	movf	??_USBStdFeatureReqHandler,w
  6389  0195  00DF               	movwf	USBStdFeatureReqHandler@p
  6390                           
  6391                           ;usb_device.c: 2848: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  6392  0196  0844               	movf	68,w	;volatile
  6393  0197  390F               	andlw	15
  6394  0198  3E53               	addlw	_ep_data_out& (0+255)
  6395  0199  29A6               	goto	L8
  6396  019A                     l4572:	
  6397                           ;usb_device.c: 2849: }
  6398                           
  6399                           
  6400                           ;usb_device.c: 2850: else
  6401                           ;usb_device.c: 2851: {
  6402                           ;usb_device.c: 2852: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6403  019A  0844               	movf	68,w	;volatile
  6404  019B  390F               	andlw	15
  6405  019C  3E6B               	addlw	_pBDTEntryIn& (0+255)
  6406  019D  0086               	movwf	6
  6407  019E  0187               	clrf	7
  6408  019F  0801               	movf	1,w
  6409  01A0  00DA               	movwf	??_USBStdFeatureReqHandler
  6410  01A1  085A               	movf	??_USBStdFeatureReqHandler,w
  6411  01A2  00DF               	movwf	USBStdFeatureReqHandler@p
  6412                           
  6413                           ;usb_device.c: 2853: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  6414  01A3  0844               	movf	68,w	;volatile
  6415  01A4  390F               	andlw	15
  6416  01A5  3E51               	addlw	_ep_data_in& (0+255)
  6417  01A6                     L8:	
  6418  01A6  0086               	movwf	6
  6419  01A7  3001               	movlw	1	; select bank2/3
  6420  01A8  0087               	movwf	7
  6421  01A9  0801               	movf	1,w
  6422  01AA  00DA               	movwf	??_USBStdFeatureReqHandler
  6423  01AB  085A               	movf	??_USBStdFeatureReqHandler,w
  6424  01AC  00DE               	movwf	USBStdFeatureReqHandler@current_ep_data
  6425                           
  6426                           ;usb_device.c: 2854: }
  6427                           ;usb_device.c: 2860: if(current_ep_data.bits.ping_pong_state == 0)
  6428  01AD  185E               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  6429  01AE  29B4               	goto	l800
  6430                           
  6431                           ;usb_device.c: 2861: {
  6432                           ;usb_device.c: 2862: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  6433  01AF  30FB               	movlw	251
  6434  01B0  00DA               	movwf	??_USBStdFeatureReqHandler
  6435  01B1  085A               	movf	??_USBStdFeatureReqHandler,w
  6436  01B2  05DF               	andwf	USBStdFeatureReqHandler@p,f
  6437                           
  6438                           ;usb_device.c: 2863: }
  6439  01B3  29B5               	goto	l801
  6440  01B4                     l800:	
  6441                           
  6442                           ;usb_device.c: 2864: else
  6443                           ;usb_device.c: 2865: {
  6444                           ;usb_device.c: 2866: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  6445  01B4  155F               	bsf	USBStdFeatureReqHandler@p,2
  6446  01B5                     l801:	
  6447                           
  6448                           ;usb_device.c: 2867: }
  6449                           ;usb_device.c: 2872: if(SetupPkt.EPDir == 0)
  6450  01B5  1BC4               	btfsc	68,7	;volatile
  6451  01B6  29C0               	goto	l4580
  6452                           
  6453                           ;usb_device.c: 2873: {
  6454                           ;usb_device.c: 2874: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6455  01B7  085F               	movf	USBStdFeatureReqHandler@p,w
  6456  01B8  00DA               	movwf	??_USBStdFeatureReqHandler
  6457  01B9  0844               	movf	68,w	;volatile
  6458  01BA  390F               	andlw	15
  6459  01BB  3E57               	addlw	_pBDTEntryOut& (0+255)
  6460  01BC  0086               	movwf	6
  6461  01BD  3001               	movlw	1	; select bank2/3
  6462  01BE  0087               	movwf	7
  6463  01BF  29C7               	goto	L9
  6464  01C0                     l4580:	
  6465                           ;usb_device.c: 2875: }
  6466                           
  6467                           
  6468                           ;usb_device.c: 2876: else
  6469                           ;usb_device.c: 2877: {
  6470                           ;usb_device.c: 2878: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6471  01C0  085F               	movf	USBStdFeatureReqHandler@p,w
  6472  01C1  00DA               	movwf	??_USBStdFeatureReqHandler
  6473  01C2  0844               	movf	68,w	;volatile
  6474  01C3  390F               	andlw	15
  6475  01C4  3E6B               	addlw	_pBDTEntryIn& (0+255)
  6476  01C5  0086               	movwf	6
  6477  01C6  0187               	clrf	7
  6478  01C7                     L9:	
  6479  01C7  085A               	movf	??_USBStdFeatureReqHandler,w
  6480  01C8  0081               	movwf	1
  6481                           
  6482                           ;usb_device.c: 2879: }
  6483                           ;usb_device.c: 2882: if(SetupPkt.bRequest == 3)
  6484  01C9  0841               	movf	65,w	;volatile
  6485  01CA  3A03               	xorlw	3
  6486  01CB  1D03               	skipz
  6487  01CC  29E8               	goto	l4596
  6488                           
  6489                           ;usb_device.c: 2883: {
  6490                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  6491  01CD  085F               	movf	USBStdFeatureReqHandler@p,w
  6492  01CE  0086               	movwf	6
  6493  01CF  0187               	clrf	7
  6494  01D0  1F81               	btfss	1,7
  6495  01D1  29DF               	goto	l4592
  6496                           
  6497                           ;usb_device.c: 2885: {
  6498                           ;usb_device.c: 2888: if(SetupPkt.EPDir == 0)
  6499  01D2  1BC4               	btfsc	68,7	;volatile
  6500  01D3  29D8               	goto	l4590
  6501                           
  6502                           ;usb_device.c: 2889: {
  6503                           ;usb_device.c: 2890: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6504  01D4  0844               	movf	68,w	;volatile
  6505  01D5  390F               	andlw	15
  6506  01D6  3E53               	addlw	_ep_data_out& (0+255)
  6507  01D7  29DB               	goto	L10
  6508  01D8                     l4590:	
  6509                           ;usb_device.c: 2891: }
  6510                           
  6511                           
  6512                           ;usb_device.c: 2892: else
  6513                           ;usb_device.c: 2893: {
  6514                           ;usb_device.c: 2894: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6515  01D8  0844               	movf	68,w	;volatile
  6516  01D9  390F               	andlw	15
  6517  01DA  3E51               	addlw	_ep_data_in& (0+255)
  6518  01DB                     L10:	
  6519  01DB  0086               	movwf	6
  6520  01DC  3001               	movlw	1	; select bank2/3
  6521  01DD  0087               	movwf	7
  6522  01DE  1481               	bsf	1,1
  6523  01DF                     l4592:	
  6524                           
  6525                           ;usb_device.c: 2895: }
  6526                           ;usb_device.c: 2896: }
  6527                           ;usb_device.c: 2899: p->STAT.Val |= 0x04;
  6528  01DF  085F               	movf	USBStdFeatureReqHandler@p,w
  6529  01E0  0086               	movwf	6
  6530  01E1  0187               	clrf	7
  6531  01E2  1501               	bsf	1,2
  6532                           
  6533                           ;usb_device.c: 2900: p->STAT.Val |= 0x80;
  6534  01E3  085F               	movf	USBStdFeatureReqHandler@p,w
  6535  01E4  0086               	movwf	6
  6536  01E5  0187               	clrf	7
  6537  01E6  1781               	bsf	1,7
  6538                           
  6539                           ;usb_device.c: 2901: }
  6540  01E7  0008               	return
  6541  01E8                     l4596:	
  6542                           
  6543                           ;usb_device.c: 2902: else
  6544                           ;usb_device.c: 2903: {
  6545                           ;usb_device.c: 2907: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  6546  01E8  3004               	movlw	4
  6547  01E9  00DA               	movwf	??_USBStdFeatureReqHandler
  6548  01EA  085A               	movf	??_USBStdFeatureReqHandler,w
  6549  01EB  06DF               	xorwf	USBStdFeatureReqHandler@p,f
  6550                           
  6551                           ;usb_device.c: 2909: if(p->STAT.UOWN == 1)
  6552  01EC  085F               	movf	USBStdFeatureReqHandler@p,w
  6553  01ED  0086               	movwf	6
  6554  01EE  0187               	clrf	7
  6555  01EF  1F81               	btfss	1,7
  6556  01F0  2A0C               	goto	l4606
  6557                           
  6558                           ;usb_device.c: 2910: {
  6559                           ;usb_device.c: 2913: p->STAT.Val &= (~0x80);
  6560  01F1  307F               	movlw	127
  6561  01F2  00DA               	movwf	??_USBStdFeatureReqHandler
  6562  01F3  085F               	movf	USBStdFeatureReqHandler@p,w
  6563  01F4  0086               	movwf	6
  6564  01F5  0187               	clrf	7
  6565  01F6  085A               	movf	??_USBStdFeatureReqHandler,w
  6566  01F7  0581               	andwf	1,f
  6567                           
  6568                           ;usb_device.c: 2914: p->STAT.Val |= 0x40;
  6569  01F8  085F               	movf	USBStdFeatureReqHandler@p,w
  6570  01F9  0086               	movwf	6
  6571  01FA  0187               	clrf	7
  6572  01FB  1701               	bsf	1,6
  6573                           
  6574                           ;usb_device.c: 2915: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  6575  01FC  3005               	movlw	5
  6576  01FD  00D5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  6577  01FE  3000               	movlw	0
  6578  01FF  00D6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  6579  0200  085F               	movf	USBStdFeatureReqHandler@p,w
  6580  0201  00DA               	movwf	??_USBStdFeatureReqHandler
  6581  0202  085A               	movf	??_USBStdFeatureReqHandler,w
  6582  0203  00D7               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  6583  0204  3001               	movlw	1
  6584  0205  00D8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  6585  0206  3000               	movlw	0
  6586  0207  00D9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  6587  0208  318B  2335  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6588                           
  6589                           ;usb_device.c: 2916: }
  6590  020B  2A11               	goto	l4608
  6591  020C                     l4606:	
  6592                           
  6593                           ;usb_device.c: 2917: else
  6594                           ;usb_device.c: 2918: {
  6595                           ;usb_device.c: 2920: p->STAT.Val |= 0x40;
  6596  020C  0020               	movlb	0	; select bank0
  6597  020D  085F               	movf	USBStdFeatureReqHandler@p,w
  6598  020E  0086               	movwf	6
  6599  020F  0187               	clrf	7
  6600  0210  1701               	bsf	1,6
  6601  0211                     l4608:	
  6602                           
  6603                           ;usb_device.c: 2921: }
  6604                           ;usb_device.c: 2925: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  6605  0211  3004               	movlw	4
  6606  0212  0020               	movlb	0	; select bank0
  6607  0213  00DA               	movwf	??_USBStdFeatureReqHandler
  6608  0214  085A               	movf	??_USBStdFeatureReqHandler,w
  6609  0215  06DF               	xorwf	USBStdFeatureReqHandler@p,f
  6610                           
  6611                           ;usb_device.c: 2931: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  6612  0216  18DE               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  6613  0217  2A1D               	goto	l813
  6614  0218  085F               	movf	USBStdFeatureReqHandler@p,w
  6615  0219  0086               	movwf	6
  6616  021A  0187               	clrf	7
  6617  021B  1F81               	btfss	1,7
  6618  021C  2A41               	goto	l4620
  6619  021D                     l813:	
  6620                           
  6621                           ;usb_device.c: 2932: {
  6622                           ;usb_device.c: 2933: if(SetupPkt.EPDir == 0)
  6623  021D  1BC4               	btfsc	68,7	;volatile
  6624  021E  2A23               	goto	l4616
  6625                           
  6626                           ;usb_device.c: 2934: {
  6627                           ;usb_device.c: 2935: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  6628  021F  0844               	movf	68,w	;volatile
  6629  0220  390F               	andlw	15
  6630  0221  3E53               	addlw	_ep_data_out& (0+255)
  6631  0222  2A26               	goto	L11
  6632  0223                     l4616:	
  6633                           ;usb_device.c: 2936: }
  6634                           
  6635                           
  6636                           ;usb_device.c: 2937: else
  6637                           ;usb_device.c: 2938: {
  6638                           ;usb_device.c: 2939: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  6639  0223  0844               	movf	68,w	;volatile
  6640  0224  390F               	andlw	15
  6641  0225  3E51               	addlw	_ep_data_in& (0+255)
  6642  0226                     L11:	
  6643  0226  0086               	movwf	6
  6644  0227  3001               	movlw	1	; select bank2/3
  6645  0228  0087               	movwf	7
  6646  0229  1081               	bcf	1,1
  6647                           
  6648                           ;usb_device.c: 2940: }
  6649                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  6650  022A  303B               	movlw	59
  6651  022B  00DA               	movwf	??_USBStdFeatureReqHandler
  6652  022C  085F               	movf	USBStdFeatureReqHandler@p,w
  6653  022D  0086               	movwf	6
  6654  022E  0187               	clrf	7
  6655  022F  085A               	movf	??_USBStdFeatureReqHandler,w
  6656  0230  0581               	andwf	1,f
  6657                           
  6658                           ;usb_device.c: 2945: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  6659  0231  3005               	movlw	5
  6660  0232  00D5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  6661  0233  3000               	movlw	0
  6662  0234  00D6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  6663  0235  085F               	movf	USBStdFeatureReqHandler@p,w
  6664  0236  00DA               	movwf	??_USBStdFeatureReqHandler
  6665  0237  085A               	movf	??_USBStdFeatureReqHandler,w
  6666  0238  00D7               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  6667  0239  3001               	movlw	1
  6668  023A  00D8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  6669  023B  3000               	movlw	0
  6670  023C  00D9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  6671  023D  318B  2335  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6672                           
  6673                           ;usb_device.c: 2946: }
  6674  0240  2A49               	goto	l4622
  6675  0241                     l4620:	
  6676                           
  6677                           ;usb_device.c: 2947: else
  6678                           ;usb_device.c: 2948: {
  6679                           ;usb_device.c: 2950: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  6680  0241  303B               	movlw	59
  6681  0242  0020               	movlb	0	; select bank0
  6682  0243  00DA               	movwf	??_USBStdFeatureReqHandler
  6683  0244  085F               	movf	USBStdFeatureReqHandler@p,w
  6684  0245  0086               	movwf	6
  6685  0246  0187               	clrf	7
  6686  0247  085A               	movf	??_USBStdFeatureReqHandler,w
  6687  0248  0581               	andwf	1,f
  6688  0249                     l4622:	
  6689                           
  6690                           ;usb_device.c: 2951: }
  6691                           ;usb_device.c: 2998: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  6692  0249  0020               	movlb	0	; select bank0
  6693  024A  0844               	movf	68,w	;volatile
  6694  024B  390F               	andlw	15
  6695  024C  3E98               	addlw	152
  6696  024D  00DA               	movwf	??_USBStdFeatureReqHandler
  6697  024E  01DB               	clrf	??_USBStdFeatureReqHandler+1
  6698  024F  300E               	movlw	14
  6699  0250  3DDB               	addwfc	??_USBStdFeatureReqHandler+1,f
  6700  0251  085A               	movf	??_USBStdFeatureReqHandler,w
  6701  0252  00DC               	movwf	USBStdFeatureReqHandler@pUEP
  6702  0253  085B               	movf	??_USBStdFeatureReqHandler+1,w
  6703  0254  00DD               	movwf	USBStdFeatureReqHandler@pUEP+1
  6704                           
  6705                           ;usb_device.c: 3002: *pUEP &= ~0x0001;
  6706  0255  30FE               	movlw	254
  6707  0256  00DA               	movwf	??_USBStdFeatureReqHandler
  6708  0257  085C               	movf	USBStdFeatureReqHandler@pUEP,w
  6709  0258  0086               	movwf	6
  6710  0259  085D               	movf	USBStdFeatureReqHandler@pUEP+1,w
  6711  025A  0087               	movwf	7
  6712  025B  085A               	movf	??_USBStdFeatureReqHandler,w
  6713  025C  0581               	andwf	1,f
  6714  025D  0008               	return
  6715  025E                     __end_of_USBStdFeatureReqHandler:	
  6716                           
  6717                           	psect	text23
  6718  0BFC                     __ptext23:	
  6719 ;; *************** function _USBStdGetStatusHandler *****************
  6720 ;; Defined at:
  6721 ;;		line 2149 in file "../framework/usb/usb_device.c"
  6722 ;; Parameters:    Size  Location     Type
  6723 ;;		None
  6724 ;; Auto vars:     Size  Location     Type
  6725 ;;  p               1    2[COMMON] PTR struct __BDT
  6726 ;;		 -> BDT(32), NULL(0), 
  6727 ;; Return value:  Size  Location     Type
  6728 ;;		None               void
  6729 ;; Registers used:
  6730 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6731 ;; Tracked objects:
  6732 ;;		On entry : 0/0
  6733 ;;		On exit  : 0/0
  6734 ;;		Unchanged: 0/0
  6735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6738 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6739 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6740 ;;Total ram usage:        2 bytes
  6741 ;; Hardware stack levels used:    1
  6742 ;; Hardware stack levels required when called:    1
  6743 ;; This function calls:
  6744 ;;		Nothing
  6745 ;; This function is called by:
  6746 ;;		_USBCheckStdRequest
  6747 ;; This function uses a non-reentrant model
  6748 ;;
  6749                           
  6750                           
  6751                           ;psect for function _USBStdGetStatusHandler
  6752  0BFC                     _USBStdGetStatusHandler:	
  6753                           
  6754                           ;usb_device.c: 2150: CtrlTrfData[0] = 0;
  6755                           
  6756                           ;incstack = 0
  6757                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  6758  0BFC  0020               	movlb	0	; select bank0
  6759  0BFD  01C8               	clrf	72	;volatile
  6760                           
  6761                           ;usb_device.c: 2151: CtrlTrfData[1] = 0;
  6762  0BFE  3000               	movlw	0
  6763  0BFF  00C9               	movwf	73	;volatile
  6764                           
  6765                           ;usb_device.c: 2153: switch(SetupPkt.Recipient)
  6766  0C00  2C32               	goto	l3852
  6767  0C01                     l715:	
  6768                           ;usb_device.c: 2154: {
  6769                           ;usb_device.c: 2155: case (0x00):
  6770                           
  6771                           
  6772                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  6773  0C01  0021               	movlb	1	; select bank1
  6774  0C02  17EB               	bsf	(_inPipes^(0+128)+2),7
  6775                           
  6776                           ;usb_device.c: 2164: }
  6777                           ;usb_device.c: 2166: if(RemoteWakeup == 1)
  6778                           
  6779                           ;usb_device.c: 2162: {
  6780                           ;usb_device.c: 2163: CtrlTrfData[0]|=0x01;
  6781                           
  6782                           ;usb_device.c: 2161: if(0 == 1)
  6783  0C03  0022               	movlb	2	; select bank2
  6784  0C04  085A               	movf	_RemoteWakeup^(0+256),w
  6785  0C05  3A01               	xorlw	1
  6786  0C06  1D03               	skipz
  6787  0C07  2C3E               	goto	l718
  6788                           
  6789                           ;usb_device.c: 2167: {
  6790                           ;usb_device.c: 2168: CtrlTrfData[0]|=0x02;
  6791  0C08  0020               	movlb	0	; select bank0
  6792  0C09  14C8               	bsf	72,1	;volatile
  6793                           
  6794                           ;usb_device.c: 2169: }
  6795                           ;usb_device.c: 2170: break;
  6796  0C0A  2C3E               	goto	l718
  6797  0C0B                     l719:	
  6798                           ;usb_device.c: 2171: case (0x01):
  6799                           
  6800                           
  6801                           ;usb_device.c: 2172: inPipes[0].info.bits.busy = 1;
  6802  0C0B  0021               	movlb	1	; select bank1
  6803  0C0C  17EB               	bsf	(_inPipes^(0+128)+2),7
  6804                           
  6805                           ;usb_device.c: 2173: break;
  6806  0C0D  2C3E               	goto	l718
  6807  0C0E                     l720:	
  6808                           ;usb_device.c: 2174: case (0x02):
  6809                           
  6810                           
  6811                           ;usb_device.c: 2175: inPipes[0].info.bits.busy = 1;
  6812  0C0E  0021               	movlb	1	; select bank1
  6813  0C0F  17EB               	bsf	(_inPipes^(0+128)+2),7
  6814                           
  6815                           ;usb_device.c: 2179: {
  6816                           ;usb_device.c: 2180: BDT_ENTRY *p;
  6817                           ;usb_device.c: 2182: if(SetupPkt.EPDir == 0)
  6818  0C10  0020               	movlb	0	; select bank0
  6819  0C11  1BC4               	btfsc	68,7	;volatile
  6820  0C12  2C1A               	goto	l3842
  6821                           
  6822                           ;usb_device.c: 2183: {
  6823                           ;usb_device.c: 2184: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6824  0C13  0844               	movf	68,w	;volatile
  6825  0C14  390F               	andlw	15
  6826  0C15  3E57               	addlw	_pBDTEntryOut& (0+255)
  6827  0C16  0086               	movwf	6
  6828  0C17  3001               	movlw	1	; select bank2/3
  6829  0C18  0087               	movwf	7
  6830  0C19  2C1F               	goto	L12
  6831  0C1A                     l3842:	
  6832                           ;usb_device.c: 2185: }
  6833                           
  6834                           
  6835                           ;usb_device.c: 2186: else
  6836                           ;usb_device.c: 2187: {
  6837                           ;usb_device.c: 2188: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6838  0C1A  0844               	movf	68,w	;volatile
  6839  0C1B  390F               	andlw	15
  6840  0C1C  3E6B               	addlw	_pBDTEntryIn& (0+255)
  6841  0C1D  0086               	movwf	6
  6842  0C1E  0187               	clrf	7
  6843  0C1F                     L12:	
  6844  0C1F  0801               	movf	1,w
  6845  0C20  00F1               	movwf	??_USBStdGetStatusHandler
  6846  0C21  0871               	movf	??_USBStdGetStatusHandler,w
  6847  0C22  00F2               	movwf	USBStdGetStatusHandler@p
  6848                           
  6849                           ;usb_device.c: 2189: }
  6850                           ;usb_device.c: 2191: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  6851  0C23  0872               	movf	USBStdGetStatusHandler@p,w
  6852  0C24  0086               	movwf	6
  6853  0C25  0187               	clrf	7
  6854  0C26  1F81               	btfss	1,7
  6855  0C27  2C3E               	goto	l718
  6856  0C28  0872               	movf	USBStdGetStatusHandler@p,w
  6857  0C29  0086               	movwf	6
  6858  0C2A  0187               	clrf	7
  6859  0C2B  1D01               	btfss	1,2
  6860  0C2C  2C3E               	goto	l718
  6861                           
  6862                           ;usb_device.c: 2192: CtrlTrfData[0]=0x01;
  6863  0C2D  3001               	movlw	1
  6864  0C2E  00F1               	movwf	??_USBStdGetStatusHandler
  6865  0C2F  0871               	movf	??_USBStdGetStatusHandler,w
  6866  0C30  00C8               	movwf	72	;volatile
  6867                           
  6868                           ;usb_device.c: 2194: }
  6869                           ;usb_device.c: 2195: }
  6870                           
  6871                           ;usb_device.c: 2193: break;
  6872  0C31  2C3E               	goto	l718
  6873  0C32                     l3852:	
  6874  0C32  0840               	movf	64,w	;volatile
  6875  0C33  391F               	andlw	31
  6876                           
  6877                           ; Switch size 1, requested type "space"
  6878                           ; Number of cases is 3, Range of values is 0 to 2
  6879                           ; switch strategies available:
  6880                           ; Name         Instructions Cycles
  6881                           ; simple_byte           10     6 (average)
  6882                           ; direct_byte           12     6 (fixed)
  6883                           ; jumptable            260     6 (fixed)
  6884                           ; rangetable             7     4 (fixed)
  6885                           ; spacedrange           11     6 (fixed)
  6886                           ; locatedrange           3     3 (fixed)
  6887                           ;	Chosen strategy is simple_byte
  6888  0C34  3A00               	xorlw	0	; case 0
  6889  0C35  1903               	skipnz
  6890  0C36  2C01               	goto	l715
  6891  0C37  3A01               	xorlw	1	; case 1
  6892  0C38  1903               	skipnz
  6893  0C39  2C0B               	goto	l719
  6894  0C3A  3A03               	xorlw	3	; case 2
  6895  0C3B  1903               	skipnz
  6896  0C3C  2C0E               	goto	l720
  6897  0C3D  2C3E               	goto	l718
  6898  0C3E                     l718:	
  6899                           
  6900                           ;usb_device.c: 2197: if(inPipes[0].info.bits.busy == 1)
  6901  0C3E  0021               	movlb	1	; select bank1
  6902  0C3F  1FEB               	btfss	(_inPipes^(0+128)+2),7
  6903  0C40  0008               	return
  6904                           
  6905                           ;usb_device.c: 2198: {
  6906                           ;usb_device.c: 2199: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  6907  0C41  3048               	movlw	72
  6908  0C42  00E9               	movwf	_inPipes^(0+128)
  6909  0C43  3000               	movlw	0
  6910  0C44  00EA               	movwf	(_inPipes+1)^(0+128)
  6911                           
  6912                           ;usb_device.c: 2200: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6913  0C45  146B               	bsf	(_inPipes^(0+128)+2),0
  6914                           
  6915                           ;usb_device.c: 2201: inPipes[0].wCount.v[0] = 2;
  6916  0C46  3002               	movlw	2
  6917  0C47  00F1               	movwf	??_USBStdGetStatusHandler
  6918  0C48  0871               	movf	??_USBStdGetStatusHandler,w
  6919  0C49  00EC               	movwf	(_inPipes^(0+128)+3)
  6920  0C4A  0008               	return
  6921  0C4B                     __end_of_USBStdGetStatusHandler:	
  6922                           
  6923                           	psect	text24
  6924  0F00                     __ptext24:	
  6925 ;; *************** function _USBStdGetDscHandler *****************
  6926 ;; Defined at:
  6927 ;;		line 2063 in file "../framework/usb/usb_device.c"
  6928 ;; Parameters:    Size  Location     Type
  6929 ;;		None
  6930 ;; Auto vars:     Size  Location     Type
  6931 ;;		None
  6932 ;; Return value:  Size  Location     Type
  6933 ;;		None               void
  6934 ;; Registers used:
  6935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6936 ;; Tracked objects:
  6937 ;;		On entry : 0/0
  6938 ;;		On exit  : 0/0
  6939 ;;		Unchanged: 0/0
  6940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6943 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6944 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6945 ;;Total ram usage:        3 bytes
  6946 ;; Hardware stack levels used:    1
  6947 ;; Hardware stack levels required when called:    1
  6948 ;; This function calls:
  6949 ;;		Nothing
  6950 ;; This function is called by:
  6951 ;;		_USBCheckStdRequest
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954                           
  6955                           
  6956                           ;psect for function _USBStdGetDscHandler
  6957  0F00                     _USBStdGetDscHandler:	
  6958                           
  6959                           ;usb_device.c: 2064: if(SetupPkt.bmRequestType == 0x80)
  6960                           
  6961                           ;incstack = 0
  6962                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  6963  0F00  0020               	movlb	0	; select bank0
  6964  0F01  0840               	movf	64,w	;volatile
  6965  0F02  3A80               	xorlw	128
  6966  0F03  1D03               	skipz
  6967  0F04  0008               	return
  6968                           
  6969                           ;usb_device.c: 2065: {
  6970                           ;usb_device.c: 2066: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  6971  0F05  30C0               	movlw	192
  6972  0F06  00F1               	movwf	??_USBStdGetDscHandler
  6973  0F07  0871               	movf	??_USBStdGetDscHandler,w
  6974  0F08  0021               	movlb	1	; select bank1
  6975  0F09  00EB               	movwf	(_inPipes^(0+128)+2)
  6976                           
  6977                           ;usb_device.c: 2068: switch(SetupPkt.bDescriptorType)
  6978  0F0A  2F72               	goto	l3828
  6979  0F0B                     l3804:	
  6980                           ;usb_device.c: 2069: {
  6981                           ;usb_device.c: 2070: case 0x01:
  6982                           
  6983                           
  6984                           ;usb_device.c: 2074: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  6985  0F0B  30E7               	movlw	low (_device_dsc| (0+32768))
  6986  0F0C  0021               	movlb	1	; select bank1
  6987  0F0D  00E9               	movwf	_inPipes^(0+128)
  6988  0F0E  3083               	movlw	high (_device_dsc| (0+32768))
  6989  0F0F  00EA               	movwf	(_inPipes^(0+128)+1)
  6990                           
  6991                           ;usb_device.c: 2076: inPipes[0].wCount.Val = sizeof(device_dsc);
  6992  0F10  3012               	movlw	18
  6993  0F11  00EC               	movwf	(_inPipes^(0+128)+3)
  6994  0F12  3000               	movlw	0
  6995  0F13  00ED               	movwf	(_inPipes^(0+128)+4)
  6996                           
  6997                           ;usb_device.c: 2077: break;
  6998  0F14  0008               	return
  6999  0F15                     l3806:	
  7000                           ;usb_device.c: 2078: case 0x02:
  7001                           
  7002                           
  7003                           ;usb_device.c: 2082: if(SetupPkt.bDscIndex < 1)
  7004  0F15  0020               	movlb	0	; select bank0
  7005  0F16  0842               	movf	66,w
  7006  0F17  1D03               	skipz
  7007  0F18  2F48               	goto	l3814
  7008                           
  7009                           ;usb_device.c: 2083: {
  7010                           ;usb_device.c: 2085: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  7011  0F19  0842               	movf	66,w	;volatile
  7012  0F1A  00F1               	movwf	??_USBStdGetDscHandler
  7013  0F1B  01F2               	clrf	??_USBStdGetDscHandler+1
  7014  0F1C  35F1               	lslf	??_USBStdGetDscHandler,f
  7015  0F1D  0DF2               	rlf	??_USBStdGetDscHandler+1,f
  7016  0F1E  302E               	movlw	low (_USB_CD_Ptr| (0+32768))
  7017  0F1F  0771               	addwf	??_USBStdGetDscHandler,w
  7018  0F20  0084               	movwf	4
  7019  0F21  3083               	movlw	high (_USB_CD_Ptr| (0+32768))
  7020  0F22  3D72               	addwfc	??_USBStdGetDscHandler+1,w
  7021  0F23  0085               	movwf	5
  7022  0F24  3F00               	moviw [0]fsr0
  7023  0F25  0021               	movlb	1	; select bank1
  7024  0F26  00E9               	movwf	_inPipes^(0+128)
  7025  0F27  3F01               	moviw [1]fsr0
  7026  0F28  00EA               	movwf	(_inPipes+1)^(0+128)
  7027                           
  7028                           ;usb_device.c: 2093: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  7029  0F29  086A               	movf	(_inPipes+1)^(0+128),w
  7030  0F2A  00F2               	movwf	??_USBStdGetDscHandler+1
  7031  0F2B  0869               	movf	_inPipes^(0+128),w
  7032  0F2C  00F1               	movwf	??_USBStdGetDscHandler
  7033  0F2D  3002               	movlw	2
  7034  0F2E  0771               	addwf	??_USBStdGetDscHandler,w
  7035  0F2F  0084               	movwf	4
  7036  0F30  0872               	movf	??_USBStdGetDscHandler+1,w
  7037  0F31  1803               	skipnc
  7038  0F32  0A72               	incf	??_USBStdGetDscHandler+1,w
  7039  0F33  0085               	movwf	5
  7040  0F34  0800               	movf	0,w	;code access
  7041  0F35  00F3               	movwf	??_USBStdGetDscHandler+2
  7042  0F36  0873               	movf	??_USBStdGetDscHandler+2,w
  7043  0F37  00EC               	movwf	(_inPipes^(0+128)+3)
  7044                           
  7045                           ;usb_device.c: 2094: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  7046  0F38  086A               	movf	(_inPipes+1)^(0+128),w
  7047  0F39  00F2               	movwf	??_USBStdGetDscHandler+1
  7048  0F3A  0869               	movf	_inPipes^(0+128),w
  7049  0F3B  00F1               	movwf	??_USBStdGetDscHandler
  7050  0F3C  3003               	movlw	3
  7051  0F3D  0771               	addwf	??_USBStdGetDscHandler,w
  7052  0F3E  0084               	movwf	4
  7053  0F3F  0872               	movf	??_USBStdGetDscHandler+1,w
  7054  0F40  1803               	skipnc
  7055  0F41  0A72               	incf	??_USBStdGetDscHandler+1,w
  7056  0F42  0085               	movwf	5
  7057  0F43  0800               	movf	0,w	;code access
  7058  0F44  00F3               	movwf	??_USBStdGetDscHandler+2
  7059  0F45  0873               	movf	??_USBStdGetDscHandler+2,w
  7060  0F46  00ED               	movwf	(_inPipes^(0+128)+4)
  7061                           
  7062                           ;usb_device.c: 2095: }
  7063  0F47  0008               	return
  7064  0F48                     l3814:	
  7065                           
  7066                           ;usb_device.c: 2096: else
  7067                           ;usb_device.c: 2097: {
  7068                           ;usb_device.c: 2098: inPipes[0].info.Val = 0;
  7069  0F48  0021               	movlb	1	; select bank1
  7070  0F49  01EB               	clrf	(_inPipes^(0+128)+2)
  7071                           
  7072                           ;usb_device.c: 2099: }
  7073                           ;usb_device.c: 2100: break;
  7074  0F4A  0008               	return
  7075  0F4B                     l3816:	
  7076                           ;usb_device.c: 2101: case 0x03:
  7077                           
  7078                           
  7079                           ;usb_device.c: 2105: if(SetupPkt.bDscIndex<3)
  7080  0F4B  3003               	movlw	3
  7081  0F4C  0020               	movlb	0	; select bank0
  7082  0F4D  0242               	subwf	66,w	;volatile
  7083  0F4E  1803               	skipnc
  7084  0F4F  2F6C               	goto	l3822
  7085                           
  7086                           ;usb_device.c: 2106: {
  7087                           ;usb_device.c: 2108: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  7088  0F50  0842               	movf	66,w	;volatile
  7089  0F51  00F1               	movwf	??_USBStdGetDscHandler
  7090  0F52  01F2               	clrf	??_USBStdGetDscHandler+1
  7091  0F53  35F1               	lslf	??_USBStdGetDscHandler,f
  7092  0F54  0DF2               	rlf	??_USBStdGetDscHandler+1,f
  7093  0F55  3028               	movlw	low (_USB_SD_Ptr| (0+32768))
  7094  0F56  0771               	addwf	??_USBStdGetDscHandler,w
  7095  0F57  0084               	movwf	4
  7096  0F58  3083               	movlw	high (_USB_SD_Ptr| (0+32768))
  7097  0F59  3D72               	addwfc	??_USBStdGetDscHandler+1,w
  7098  0F5A  0085               	movwf	5
  7099  0F5B  3F00               	moviw [0]fsr0
  7100  0F5C  0021               	movlb	1	; select bank1
  7101  0F5D  00E9               	movwf	_inPipes^(0+128)
  7102  0F5E  3F01               	moviw [1]fsr0
  7103  0F5F  00EA               	movwf	(_inPipes+1)^(0+128)
  7104                           
  7105                           ;usb_device.c: 2110: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  7106  0F60  0869               	movf	_inPipes^(0+128),w
  7107  0F61  0084               	movwf	4
  7108  0F62  086A               	movf	(_inPipes+1)^(0+128),w
  7109  0F63  0085               	movwf	5
  7110  0F64  0800               	movf	0,w	;code access
  7111  0F65  00F1               	movwf	??_USBStdGetDscHandler
  7112  0F66  01F2               	clrf	??_USBStdGetDscHandler+1
  7113  0F67  0871               	movf	??_USBStdGetDscHandler,w
  7114  0F68  00EC               	movwf	(_inPipes^(0+128)+3)
  7115  0F69  0872               	movf	??_USBStdGetDscHandler+1,w
  7116  0F6A  00ED               	movwf	((_inPipes+1)^(0+128)+3)
  7117                           
  7118                           ;usb_device.c: 2111: }
  7119  0F6B  0008               	return
  7120  0F6C                     l3822:	
  7121                           
  7122                           ;usb_device.c: 2121: else
  7123                           ;usb_device.c: 2122: {
  7124                           ;usb_device.c: 2123: inPipes[0].info.Val = 0;
  7125  0F6C  0021               	movlb	1	; select bank1
  7126  0F6D  01EB               	clrf	(_inPipes^(0+128)+2)
  7127                           
  7128                           ;usb_device.c: 2124: }
  7129                           ;usb_device.c: 2125: break;
  7130  0F6E  0008               	return
  7131  0F6F                     l3824:	
  7132                           ;usb_device.c: 2126: default:
  7133                           
  7134                           
  7135                           ;usb_device.c: 2127: inPipes[0].info.Val = 0;
  7136  0F6F  0021               	movlb	1	; select bank1
  7137  0F70  01EB               	clrf	(_inPipes^(0+128)+2)
  7138                           
  7139                           ;usb_device.c: 2129: }
  7140                           
  7141                           ;usb_device.c: 2128: break;
  7142  0F71  0008               	return
  7143  0F72                     l3828:	
  7144  0F72  0020               	movlb	0	; select bank0
  7145  0F73  0843               	movf	67,w	;volatile
  7146                           
  7147                           ; Switch size 1, requested type "space"
  7148                           ; Number of cases is 3, Range of values is 1 to 3
  7149                           ; switch strategies available:
  7150                           ; Name         Instructions Cycles
  7151                           ; simple_byte           10     6 (average)
  7152                           ; direct_byte           15     9 (fixed)
  7153                           ; jumptable            263     9 (fixed)
  7154                           ;	Chosen strategy is simple_byte
  7155  0F74  3A01               	xorlw	1	; case 1
  7156  0F75  1903               	skipnz
  7157  0F76  2F0B               	goto	l3804
  7158  0F77  3A03               	xorlw	3	; case 2
  7159  0F78  1903               	skipnz
  7160  0F79  2F15               	goto	l3806
  7161  0F7A  3A01               	xorlw	1	; case 3
  7162  0F7B  1903               	skipnz
  7163  0F7C  2F4B               	goto	l3816
  7164  0F7D  2F6F               	goto	l3824
  7165  0F7E  0008               	return
  7166  0F7F                     __end_of_USBStdGetDscHandler:	
  7167                           
  7168                           	psect	text25
  7169  0F7F                     __ptext25:	
  7170 ;; *************** function _USBStdSetCfgHandler *****************
  7171 ;; Defined at:
  7172 ;;		line 1988 in file "../framework/usb/usb_device.c"
  7173 ;; Parameters:    Size  Location     Type
  7174 ;;		None
  7175 ;; Auto vars:     Size  Location     Type
  7176 ;;  p               2   10[BANK0 ] PTR unsigned char 
  7177 ;;		 -> UEP1(1), 
  7178 ;;  i               1   12[BANK0 ] unsigned char 
  7179 ;;  i               1   13[BANK0 ] unsigned char 
  7180 ;; Return value:  Size  Location     Type
  7181 ;;		None               void
  7182 ;; Registers used:
  7183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7184 ;; Tracked objects:
  7185 ;;		On entry : 0/0
  7186 ;;		On exit  : 0/0
  7187 ;;		Unchanged: 0/0
  7188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7190 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7191 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7192 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7193 ;;Total ram usage:        5 bytes
  7194 ;; Hardware stack levels used:    1
  7195 ;; Hardware stack levels required when called:    5
  7196 ;; This function calls:
  7197 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7198 ;;		_memset
  7199 ;; This function is called by:
  7200 ;;		_USBCheckStdRequest
  7201 ;; This function uses a non-reentrant model
  7202 ;;
  7203                           
  7204                           
  7205                           ;psect for function _USBStdSetCfgHandler
  7206  0F7F                     _USBStdSetCfgHandler:	
  7207                           
  7208                           ;usb_device.c: 1989: uint8_t i;
  7209                           ;usb_device.c: 1992: inPipes[0].info.bits.busy = 1;
  7210                           
  7211                           ;incstack = 0
  7212                           ; Regs used in _USBStdSetCfgHandler: [allreg]
  7213  0F7F  0021               	movlb	1	; select bank1
  7214  0F80  17EB               	bsf	(_inPipes^(0+128)+2),7
  7215                           
  7216                           ;usb_device.c: 1995: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 
      +                          0; };
  7217  0F81  300E               	movlw	14
  7218  0F82  0020               	movlb	0	; select bank0
  7219  0F83  00DB               	movwf	USBStdSetCfgHandler@p+1
  7220  0F84  3099               	movlw	153
  7221  0F85  00DA               	movwf	USBStdSetCfgHandler@p
  7222  0F86  01DC               	clrf	USBStdSetCfgHandler@i_2030
  7223  0F87  085C               	movf	USBStdSetCfgHandler@i_2030,w
  7224  0F88  1D03               	skipz
  7225  0F89  2F9A               	goto	l4442
  7226  0F8A                     l4434:	
  7227  0F8A  085A               	movf	USBStdSetCfgHandler@p,w
  7228  0F8B  0086               	movwf	6
  7229  0F8C  085B               	movf	USBStdSetCfgHandler@p+1,w
  7230  0F8D  0087               	movwf	7
  7231  0F8E  0181               	clrf	1
  7232  0F8F  3001               	movlw	1
  7233  0F90  07DA               	addwf	USBStdSetCfgHandler@p,f
  7234  0F91  3000               	movlw	0
  7235  0F92  3DDB               	addwfc	USBStdSetCfgHandler@p+1,f
  7236  0F93  3001               	movlw	1
  7237  0F94  00FB               	movwf	??_USBStdSetCfgHandler
  7238  0F95  087B               	movf	??_USBStdSetCfgHandler,w
  7239  0F96  07DC               	addwf	USBStdSetCfgHandler@i_2030,f
  7240  0F97  085C               	movf	USBStdSetCfgHandler@i_2030,w
  7241  0F98  1903               	btfsc	3,2
  7242  0F99  2F8A               	goto	l4434
  7243  0F9A                     l4442:	
  7244                           
  7245                           ;usb_device.c: 1998: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  7246  0F9A  3000               	movlw	0
  7247  0F9B  00F1               	movwf	?_memset
  7248  0F9C  3000               	movlw	0
  7249  0F9D  00F2               	movwf	?_memset+1
  7250  0F9E  3020               	movlw	32
  7251  0F9F  00F3               	movwf	?_memset+2
  7252  0FA0  3000               	movlw	0
  7253  0FA1  00F4               	movwf	?_memset+3
  7254  0FA2  3020               	movlw	32
  7255  0FA3  318A  2201  318F   	fcall	_memset
  7256                           
  7257                           ;usb_device.c: 2001: UCONbits.PPBRST = 1;
  7258  0FA6  003D               	movlb	29	; select bank29
  7259  0FA7  170E               	bsf	14,6	;volatile
  7260                           
  7261                           ;usb_device.c: 2006: for(i = 0; i < (uint8_t)(1+1u); i++)
  7262  0FA8  0020               	movlb	0	; select bank0
  7263  0FA9  01DD               	clrf	USBStdSetCfgHandler@i
  7264  0FAA  3002               	movlw	2
  7265  0FAB  025D               	subwf	USBStdSetCfgHandler@i,w
  7266  0FAC  1803               	btfsc	3,0
  7267  0FAD  2FC2               	goto	l4458
  7268  0FAE                     l4452:	
  7269                           
  7270                           ;usb_device.c: 2007: {
  7271                           ;usb_device.c: 2008: ep_data_in[i].Val = 0u;
  7272  0FAE  085D               	movf	USBStdSetCfgHandler@i,w
  7273  0FAF  3E51               	addlw	_ep_data_in& (0+255)
  7274  0FB0  0086               	movwf	6
  7275  0FB1  3001               	movlw	1	; select bank2/3
  7276  0FB2  0087               	movwf	7
  7277  0FB3  0181               	clrf	1
  7278                           
  7279                           ;usb_device.c: 2009: ep_data_out[i].Val = 0u;
  7280  0FB4  085D               	movf	USBStdSetCfgHandler@i,w
  7281  0FB5  3E53               	addlw	_ep_data_out& (0+255)
  7282  0FB6  0086               	movwf	6
  7283  0FB7  3001               	movlw	1	; select bank2/3
  7284  0FB8  0087               	movwf	7
  7285  0FB9  0181               	clrf	1
  7286  0FBA  3001               	movlw	1
  7287  0FBB  00FB               	movwf	??_USBStdSetCfgHandler
  7288  0FBC  087B               	movf	??_USBStdSetCfgHandler,w
  7289  0FBD  07DD               	addwf	USBStdSetCfgHandler@i,f
  7290  0FBE  3002               	movlw	2
  7291  0FBF  025D               	subwf	USBStdSetCfgHandler@i,w
  7292  0FC0  1C03               	skipc
  7293  0FC1  2FAE               	goto	l4452
  7294  0FC2                     l4458:	
  7295                           
  7296                           ;usb_device.c: 2010: }
  7297                           ;usb_device.c: 2013: memset((void*)&USBAlternateInterface,0x00,1);
  7298  0FC2  3000               	movlw	0
  7299  0FC3  00F1               	movwf	?_memset
  7300  0FC4  3000               	movlw	0
  7301  0FC5  00F2               	movwf	?_memset+1
  7302  0FC6  3001               	movlw	1
  7303  0FC7  00F3               	movwf	?_memset+2
  7304  0FC8  3000               	movlw	0
  7305  0FC9  00F4               	movwf	?_memset+3
  7306  0FCA  30EF               	movlw	_USBAlternateInterface& (0+255)
  7307  0FCB  318A  2201  318F   	fcall	_memset
  7308                           
  7309                           ;usb_device.c: 2016: UCONbits.PPBRST = 0;
  7310  0FCE  003D               	movlb	29	; select bank29
  7311  0FCF  130E               	bcf	14,6	;volatile
  7312                           
  7313                           ;usb_device.c: 2018: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7314  0FD0  3028               	movlw	40
  7315  0FD1  00FB               	movwf	??_USBStdSetCfgHandler
  7316  0FD2  087B               	movf	??_USBStdSetCfgHandler,w
  7317  0FD3  0020               	movlb	0	; select bank0
  7318  0FD4  00EB               	movwf	_pBDTEntryIn
  7319                           
  7320                           ;usb_device.c: 2021: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  7321  0FD5  3020               	movlw	32
  7322  0FD6  00FB               	movwf	??_USBStdSetCfgHandler
  7323  0FD7  087B               	movf	??_USBStdSetCfgHandler,w
  7324  0FD8  00EE               	movwf	_pBDTEntryEP0OutCurrent
  7325                           
  7326                           ;usb_device.c: 2022: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  7327  0FD9  086E               	movf	_pBDTEntryEP0OutCurrent,w
  7328  0FDA  00FB               	movwf	??_USBStdSetCfgHandler
  7329  0FDB  087B               	movf	??_USBStdSetCfgHandler,w
  7330  0FDC  00FC               	movwf	_pBDTEntryEP0OutNext
  7331                           
  7332                           ;usb_device.c: 2025: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  7333  0FDD  0842               	movf	66,w	;volatile
  7334  0FDE  00FB               	movwf	??_USBStdSetCfgHandler
  7335  0FDF  087B               	movf	??_USBStdSetCfgHandler,w
  7336  0FE0  0021               	movlb	1	; select bank1
  7337  0FE1  00EE               	movwf	_USBActiveConfiguration^(0+128)
  7338                           
  7339                           ;usb_device.c: 2028: if(USBActiveConfiguration == 0)
  7340  0FE2  08EE               	movf	_USBActiveConfiguration^(0+128),f
  7341  0FE3  1D03               	skipz
  7342  0FE4  2FEB               	goto	l4474
  7343                           
  7344                           ;usb_device.c: 2029: {
  7345                           ;usb_device.c: 2031: USBDeviceState = ADDRESS_STATE;
  7346  0FE5  3010               	movlw	16
  7347  0FE6  00FB               	movwf	??_USBStdSetCfgHandler
  7348  0FE7  087B               	movf	??_USBStdSetCfgHandler,w
  7349  0FE8  0020               	movlb	0	; select bank0
  7350  0FE9  00ED               	movwf	_USBDeviceState
  7351                           
  7352                           ;usb_device.c: 2032: }
  7353  0FEA  0008               	return
  7354  0FEB                     l4474:	
  7355                           
  7356                           ;usb_device.c: 2033: else
  7357                           ;usb_device.c: 2034: {
  7358                           ;usb_device.c: 2036: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  7359  0FEB  3001               	movlw	1
  7360  0FEC  0020               	movlb	0	; select bank0
  7361  0FED  00D5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  7362  0FEE  3000               	movlw	0
  7363  0FEF  00D6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  7364  0FF0  30EE               	movlw	_USBActiveConfiguration& (0+255)
  7365  0FF1  00FB               	movwf	??_USBStdSetCfgHandler
  7366  0FF2  087B               	movf	??_USBStdSetCfgHandler,w
  7367  0FF3  00D7               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  7368  0FF4  3001               	movlw	1
  7369  0FF5  00D8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  7370  0FF6  3000               	movlw	0
  7371  0FF7  00D9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  7372  0FF8  318B  2335         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7373                           
  7374                           ;usb_device.c: 2041: USBDeviceState = CONFIGURED_STATE;
  7375  0FFA  3020               	movlw	32
  7376  0FFB  00FB               	movwf	??_USBStdSetCfgHandler
  7377  0FFC  087B               	movf	??_USBStdSetCfgHandler,w
  7378  0FFD  0020               	movlb	0	; select bank0
  7379  0FFE  00ED               	movwf	_USBDeviceState
  7380  0FFF  0008               	return
  7381  1000                     __end_of_USBStdSetCfgHandler:	
  7382                           
  7383                           	psect	text26
  7384  0A01                     __ptext26:	
  7385 ;; *************** function _memset *****************
  7386 ;; Defined at:
  7387 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v1.20\sources\common\memset.c"
  7388 ;; Parameters:    Size  Location     Type
  7389 ;;  p1              1    wreg     PTR void 
  7390 ;;		 -> USBAlternateInterface(1), BDT(32), 
  7391 ;;  c               2    1[COMMON] int 
  7392 ;;  n               2    3[COMMON] unsigned int 
  7393 ;; Auto vars:     Size  Location     Type
  7394 ;;  p1              1    6[COMMON] PTR void 
  7395 ;;		 -> USBAlternateInterface(1), BDT(32), 
  7396 ;;  p               1    7[COMMON] PTR unsigned char 
  7397 ;;		 -> USBAlternateInterface(1), BDT(32), 
  7398 ;; Return value:  Size  Location     Type
  7399 ;;                  1    wreg      PTR void 
  7400 ;; Registers used:
  7401 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7402 ;; Tracked objects:
  7403 ;;		On entry : 0/0
  7404 ;;		On exit  : 0/0
  7405 ;;		Unchanged: 0/0
  7406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7407 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7408 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7409 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7410 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7411 ;;Total ram usage:        7 bytes
  7412 ;; Hardware stack levels used:    1
  7413 ;; Hardware stack levels required when called:    1
  7414 ;; This function calls:
  7415 ;;		Nothing
  7416 ;; This function is called by:
  7417 ;;		_USBStdSetCfgHandler
  7418 ;; This function uses a non-reentrant model
  7419 ;;
  7420                           
  7421                           
  7422                           ;psect for function _memset
  7423  0A01                     _memset:	
  7424                           
  7425                           ;incstack = 0
  7426                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7427                           ;memset@p1 stored from wreg
  7428  0A01  00F6               	movwf	memset@p1
  7429  0A02  0876               	movf	memset@p1,w
  7430  0A03  00F5               	movwf	??_memset
  7431  0A04  0875               	movf	??_memset,w
  7432  0A05  00F7               	movwf	memset@p
  7433  0A06                     l3798:	
  7434  0A06  3001               	movlw	1
  7435  0A07  02F3               	subwf	memset@n,f
  7436  0A08  3000               	movlw	0
  7437  0A09  3BF4               	subwfb	memset@n+1,f
  7438  0A0A  30FF               	movlw	255
  7439  0A0B  0674               	xorwf	memset@n+1,w
  7440  0A0C  1D03               	skipz
  7441  0A0D  2A10               	goto	u3175
  7442  0A0E  30FF               	movlw	255
  7443  0A0F  0673               	xorwf	memset@n,w
  7444  0A10                     u3175:	
  7445  0A10  1903               	btfsc	3,2
  7446  0A11  0008               	return
  7447  0A12  0871               	movf	memset@c,w
  7448  0A13  00F5               	movwf	??_memset
  7449  0A14  0877               	movf	memset@p,w
  7450  0A15  0086               	movwf	6
  7451  0A16  0187               	clrf	7
  7452  0A17  0875               	movf	??_memset,w
  7453  0A18  0081               	movwf	1
  7454  0A19  3001               	movlw	1
  7455  0A1A  00F5               	movwf	??_memset
  7456  0A1B  0875               	movf	??_memset,w
  7457  0A1C  07F7               	addwf	memset@p,f
  7458  0A1D  2A06               	goto	l3798
  7459  0A1E                     __end_of_memset:	
  7460                           ;	Return value of _memset is never used
  7461                           
  7462                           
  7463                           	psect	text27
  7464  025E                     __ptext27:	
  7465 ;; *************** function _USBCtrlEPServiceComplete *****************
  7466 ;; Defined at:
  7467 ;;		line 1636 in file "../framework/usb/usb_device.c"
  7468 ;; Parameters:    Size  Location     Type
  7469 ;;		None
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;		None
  7472 ;; Return value:  Size  Location     Type
  7473 ;;		None               void
  7474 ;; Registers used:
  7475 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7476 ;; Tracked objects:
  7477 ;;		On entry : 0/0
  7478 ;;		On exit  : 0/0
  7479 ;;		Unchanged: 0/0
  7480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7483 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7484 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7485 ;;Total ram usage:        2 bytes
  7486 ;; Hardware stack levels used:    1
  7487 ;; Hardware stack levels required when called:    3
  7488 ;; This function calls:
  7489 ;;		_USBCtrlEPAllowStatusStage
  7490 ;;		_USBCtrlEPAllowDataStage
  7491 ;; This function is called by:
  7492 ;;		_USBCtrlTrfSetupHandler
  7493 ;; This function uses a non-reentrant model
  7494 ;;
  7495                           
  7496                           
  7497                           ;psect for function _USBCtrlEPServiceComplete
  7498  025E                     _USBCtrlEPServiceComplete:	
  7499                           
  7500                           ;usb_device.c: 1641: UCONbits.PKTDIS = 0;
  7501                           
  7502                           ;incstack = 0
  7503                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7504  025E  003D               	movlb	29	; select bank29
  7505  025F  120E               	bcf	14,4	;volatile
  7506                           
  7507                           ;usb_device.c: 1647: if(inPipes[0].info.bits.busy == 0)
  7508  0260  0021               	movlb	1	; select bank1
  7509  0261  1BEB               	btfsc	(_inPipes^(0+128)+2),7
  7510  0262  2AA0               	goto	l650
  7511                           
  7512                           ;usb_device.c: 1648: {
  7513                           ;usb_device.c: 1649: if(outPipes[0].info.bits.busy == 1)
  7514  0263  0022               	movlb	2	; select bank2
  7515  0264  1FC9               	btfss	(_outPipes^(0+256)+2),7
  7516  0265  2A75               	goto	l3670
  7517                           
  7518                           ;usb_device.c: 1650: {
  7519                           ;usb_device.c: 1651: controlTransferState = 2;
  7520  0266  3002               	movlw	2
  7521  0267  00F6               	movwf	??_USBCtrlEPServiceComplete
  7522  0268  0876               	movf	??_USBCtrlEPServiceComplete,w
  7523  0269  0021               	movlb	1	; select bank1
  7524  026A  00E4               	movwf	_controlTransferState^(0+128)
  7525                           
  7526                           ;usb_device.c: 1662: if(USBDeferOUTDataStagePackets == 0)
  7527  026B  0022               	movlb	2	; select bank2
  7528  026C  08DD               	movf	_USBDeferOUTDataStagePackets^(0+256),f
  7529  026D  1D03               	skipz
  7530  026E  2A71               	goto	l3666
  7531                           
  7532                           ;usb_device.c: 1663: {
  7533                           ;usb_device.c: 1664: USBCtrlEPAllowDataStage();
  7534  026F  318C  24F1         	fcall	_USBCtrlEPAllowDataStage
  7535  0271                     l3666:	
  7536                           
  7537                           ;usb_device.c: 1665: }
  7538                           ;usb_device.c: 1669: USBStatusStageEnabledFlag2 = 0;
  7539  0271  0022               	movlb	2	; select bank2
  7540  0272  01E0               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  7541                           
  7542                           ;usb_device.c: 1670: USBStatusStageEnabledFlag1 = 0;
  7543  0273  01DF               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  7544                           
  7545                           ;usb_device.c: 1671: }
  7546  0274  0008               	return
  7547  0275                     l3670:	
  7548                           
  7549                           ;usb_device.c: 1672: else
  7550                           ;usb_device.c: 1673: {
  7551                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->CNT = 8;
  7552  0275  3008               	movlw	8
  7553  0276  00F6               	movwf	??_USBCtrlEPServiceComplete
  7554  0277  0A7C               	incf	_pBDTEntryEP0OutNext,w
  7555  0278  0086               	movwf	6
  7556  0279  0187               	clrf	7
  7557  027A  0876               	movf	??_USBCtrlEPServiceComplete,w
  7558  027B  0081               	movwf	1
  7559                           
  7560                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7561  027C  3040               	movlw	64
  7562  027D  00F6               	movwf	??_USBCtrlEPServiceComplete
  7563  027E  3000               	movlw	0
  7564  027F  00F7               	movwf	??_USBCtrlEPServiceComplete+1
  7565  0280  087C               	movf	_pBDTEntryEP0OutNext,w
  7566  0281  3E02               	addlw	2
  7567  0282  0086               	movwf	6
  7568  0283  0187               	clrf	7
  7569  0284  0876               	movf	??_USBCtrlEPServiceComplete,w
  7570  0285  3FC0               	movwi [0]fsr1
  7571  0286  0877               	movf	??_USBCtrlEPServiceComplete+1,w
  7572  0287  3FC1               	movwi [1]fsr1
  7573                           
  7574                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7575  0288  300C               	movlw	12
  7576  0289  00F6               	movwf	??_USBCtrlEPServiceComplete
  7577  028A  087C               	movf	_pBDTEntryEP0OutNext,w
  7578  028B  0086               	movwf	6
  7579  028C  0187               	clrf	7
  7580  028D  0876               	movf	??_USBCtrlEPServiceComplete,w
  7581  028E  0081               	movwf	1
  7582                           
  7583                           ;usb_device.c: 1681: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7584  028F  087C               	movf	_pBDTEntryEP0OutNext,w
  7585  0290  0086               	movwf	6
  7586  0291  0187               	clrf	7
  7587  0292  1781               	bsf	1,7
  7588                           
  7589                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val = 0x04;
  7590  0293  3004               	movlw	4
  7591  0294  00F6               	movwf	??_USBCtrlEPServiceComplete
  7592  0295  0020               	movlb	0	; select bank0
  7593  0296  086B               	movf	_pBDTEntryIn,w
  7594  0297  0086               	movwf	6
  7595  0298  0187               	clrf	7
  7596  0299  0876               	movf	??_USBCtrlEPServiceComplete,w
  7597  029A  0081               	movwf	1
  7598                           
  7599                           ;usb_device.c: 1683: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7600  029B  086B               	movf	_pBDTEntryIn,w
  7601  029C  0086               	movwf	6
  7602  029D  0187               	clrf	7
  7603  029E  1781               	bsf	1,7
  7604                           
  7605                           ;usb_device.c: 1684: }
  7606                           ;usb_device.c: 1685: }
  7607  029F  0008               	return
  7608  02A0                     l650:	
  7609                           
  7610                           ;usb_device.c: 1686: else
  7611                           ;usb_device.c: 1687: {
  7612                           ;usb_device.c: 1688: if(SetupPkt.DataDir == (0x80>>7))
  7613  02A0  0020               	movlb	0	; select bank0
  7614  02A1  1FC0               	btfss	64,7	;volatile
  7615  02A2  2AB7               	goto	l3686
  7616                           
  7617                           ;usb_device.c: 1689: {
  7618                           ;usb_device.c: 1690: controlTransferState = 1;
  7619  02A3  0021               	movlb	1	; select bank1
  7620  02A4  01E4               	clrf	_controlTransferState^(0+128)
  7621  02A5  0AE4               	incf	_controlTransferState^(0+128),f
  7622                           
  7623                           ;usb_device.c: 1704: if(USBDeferINDataStagePackets == 0)
  7624  02A6  0022               	movlb	2	; select bank2
  7625  02A7  08DC               	movf	_USBDeferINDataStagePackets^(0+256),f
  7626  02A8  1D03               	skipz
  7627  02A9  2AAD               	goto	l3678
  7628                           
  7629                           ;usb_device.c: 1705: {
  7630                           ;usb_device.c: 1706: USBCtrlEPAllowDataStage();
  7631  02AA  318C  24F1  3182   	fcall	_USBCtrlEPAllowDataStage
  7632  02AD                     l3678:	
  7633                           
  7634                           ;usb_device.c: 1707: }
  7635                           ;usb_device.c: 1729: USBStatusStageEnabledFlag2 = 0;
  7636  02AD  0022               	movlb	2	; select bank2
  7637  02AE  01E0               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  7638                           
  7639                           ;usb_device.c: 1730: USBStatusStageEnabledFlag1 = 0;
  7640  02AF  01DF               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  7641                           
  7642                           ;usb_device.c: 1731: if(USBDeferStatusStagePacket == 0)
  7643  02B0  0021               	movlb	1	; select bank1
  7644  02B1  08E2               	movf	_USBDeferStatusStagePacket^(0+128),f
  7645  02B2  1D03               	skipz
  7646  02B3  0008               	return
  7647                           
  7648                           ;usb_device.c: 1732: {
  7649                           ;usb_device.c: 1733: USBCtrlEPAllowStatusStage();
  7650  02B4  318D  2548         	fcall	_USBCtrlEPAllowStatusStage
  7651                           
  7652                           ;usb_device.c: 1734: }
  7653                           ;usb_device.c: 1735: }
  7654  02B6  0008               	return
  7655  02B7                     l3686:	
  7656                           
  7657                           ;usb_device.c: 1736: else
  7658                           ;usb_device.c: 1737: {
  7659                           ;usb_device.c: 1748: controlTransferState = 2;
  7660  02B7  3002               	movlw	2
  7661  02B8  00F6               	movwf	??_USBCtrlEPServiceComplete
  7662  02B9  0876               	movf	??_USBCtrlEPServiceComplete,w
  7663  02BA  0021               	movlb	1	; select bank1
  7664  02BB  00E4               	movwf	_controlTransferState^(0+128)
  7665                           
  7666                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->CNT = 8;
  7667  02BC  3008               	movlw	8
  7668  02BD  00F6               	movwf	??_USBCtrlEPServiceComplete
  7669  02BE  0A7C               	incf	_pBDTEntryEP0OutNext,w
  7670  02BF  0086               	movwf	6
  7671  02C0  0187               	clrf	7
  7672  02C1  0876               	movf	??_USBCtrlEPServiceComplete,w
  7673  02C2  0081               	movwf	1
  7674                           
  7675                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7676  02C3  3040               	movlw	64
  7677  02C4  00F6               	movwf	??_USBCtrlEPServiceComplete
  7678  02C5  3000               	movlw	0
  7679  02C6  00F7               	movwf	??_USBCtrlEPServiceComplete+1
  7680  02C7  087C               	movf	_pBDTEntryEP0OutNext,w
  7681  02C8  3E02               	addlw	2
  7682  02C9  0086               	movwf	6
  7683  02CA  0187               	clrf	7
  7684  02CB  0876               	movf	??_USBCtrlEPServiceComplete,w
  7685  02CC  3FC0               	movwi [0]fsr1
  7686  02CD  0877               	movf	??_USBCtrlEPServiceComplete+1,w
  7687  02CE  3FC1               	movwi [1]fsr1
  7688                           
  7689                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  7690  02CF  3004               	movlw	4
  7691  02D0  00F6               	movwf	??_USBCtrlEPServiceComplete
  7692  02D1  087C               	movf	_pBDTEntryEP0OutNext,w
  7693  02D2  0086               	movwf	6
  7694  02D3  0187               	clrf	7
  7695  02D4  0876               	movf	??_USBCtrlEPServiceComplete,w
  7696  02D5  0081               	movwf	1
  7697                           
  7698                           ;usb_device.c: 1754: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7699  02D6  087C               	movf	_pBDTEntryEP0OutNext,w
  7700  02D7  0086               	movwf	6
  7701  02D8  0187               	clrf	7
  7702  02D9  1781               	bsf	1,7
  7703                           
  7704                           ;usb_device.c: 1757: USBStatusStageEnabledFlag2 = 0;
  7705  02DA  0022               	movlb	2	; select bank2
  7706  02DB  01E0               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  7707                           
  7708                           ;usb_device.c: 1758: USBStatusStageEnabledFlag1 = 0;
  7709  02DC  01DF               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  7710                           
  7711                           ;usb_device.c: 1759: if(USBDeferStatusStagePacket == 0)
  7712  02DD  0021               	movlb	1	; select bank1
  7713  02DE  08E2               	movf	_USBDeferStatusStagePacket^(0+128),f
  7714  02DF  1D03               	skipz
  7715  02E0  0008               	return
  7716                           
  7717                           ;usb_device.c: 1760: {
  7718                           ;usb_device.c: 1761: USBCtrlEPAllowStatusStage();
  7719  02E1  318D  2548         	fcall	_USBCtrlEPAllowStatusStage
  7720  02E3  0008               	return
  7721  02E4                     __end_of_USBCtrlEPServiceComplete:	
  7722                           
  7723                           	psect	text28
  7724  0CF1                     __ptext28:	
  7725 ;; *************** function _USBCtrlEPAllowDataStage *****************
  7726 ;; Defined at:
  7727 ;;		line 1508 in file "../framework/usb/usb_device.c"
  7728 ;; Parameters:    Size  Location     Type
  7729 ;;		None
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;		None
  7732 ;; Return value:  Size  Location     Type
  7733 ;;		None               void
  7734 ;; Registers used:
  7735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7736 ;; Tracked objects:
  7737 ;;		On entry : 0/0
  7738 ;;		On exit  : 0/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7743 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7744 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7745 ;;Total ram usage:        2 bytes
  7746 ;; Hardware stack levels used:    1
  7747 ;; Hardware stack levels required when called:    2
  7748 ;; This function calls:
  7749 ;;		_USBCtrlTrfTxService
  7750 ;; This function is called by:
  7751 ;;		_USBCtrlEPServiceComplete
  7752 ;; This function uses a non-reentrant model
  7753 ;;
  7754                           
  7755                           
  7756                           ;psect for function _USBCtrlEPAllowDataStage
  7757  0CF1                     _USBCtrlEPAllowDataStage:	
  7758                           
  7759                           ;usb_device.c: 1509: USBDeferINDataStagePackets = 0;
  7760                           
  7761                           ;incstack = 0
  7762                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7763  0CF1  0022               	movlb	2	; select bank2
  7764  0CF2  01DC               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  7765                           
  7766                           ;usb_device.c: 1510: USBDeferOUTDataStagePackets = 0;
  7767  0CF3  01DD               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  7768                           
  7769                           ;usb_device.c: 1512: if(controlTransferState == 2)
  7770  0CF4  0021               	movlb	1	; select bank1
  7771  0CF5  0864               	movf	_controlTransferState^(0+128),w
  7772  0CF6  3A02               	xorlw	2
  7773  0CF7  1D03               	skipz
  7774  0CF8  2D18               	goto	l3604
  7775                           
  7776                           ;usb_device.c: 1513: {
  7777                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->CNT = 8;
  7778  0CF9  3008               	movlw	8
  7779  0CFA  00F4               	movwf	??_USBCtrlEPAllowDataStage
  7780  0CFB  0A7C               	incf	_pBDTEntryEP0OutNext,w
  7781  0CFC  0086               	movwf	6
  7782  0CFD  0187               	clrf	7
  7783  0CFE  0874               	movf	??_USBCtrlEPAllowDataStage,w
  7784  0CFF  0081               	movwf	1
  7785                           
  7786                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  7787  0D00  3048               	movlw	72
  7788  0D01  00F4               	movwf	??_USBCtrlEPAllowDataStage
  7789  0D02  3000               	movlw	0
  7790  0D03  00F5               	movwf	??_USBCtrlEPAllowDataStage+1
  7791  0D04  087C               	movf	_pBDTEntryEP0OutNext,w
  7792  0D05  3E02               	addlw	2
  7793  0D06  0086               	movwf	6
  7794  0D07  0187               	clrf	7
  7795  0D08  0874               	movf	??_USBCtrlEPAllowDataStage,w
  7796  0D09  3FC0               	movwi [0]fsr1
  7797  0D0A  0875               	movf	??_USBCtrlEPAllowDataStage+1,w
  7798  0D0B  3FC1               	movwi [1]fsr1
  7799                           
  7800                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  7801  0D0C  3048               	movlw	72
  7802  0D0D  00F4               	movwf	??_USBCtrlEPAllowDataStage
  7803  0D0E  087C               	movf	_pBDTEntryEP0OutNext,w
  7804  0D0F  0086               	movwf	6
  7805  0D10  0187               	clrf	7
  7806  0D11  0874               	movf	??_USBCtrlEPAllowDataStage,w
  7807  0D12  0081               	movwf	1
  7808                           
  7809                           ;usb_device.c: 1518: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7810  0D13  087C               	movf	_pBDTEntryEP0OutNext,w
  7811  0D14  0086               	movwf	6
  7812  0D15  0187               	clrf	7
  7813  0D16  1781               	bsf	1,7
  7814                           
  7815                           ;usb_device.c: 1519: }
  7816  0D17  0008               	return
  7817  0D18                     l3604:	
  7818                           
  7819                           ;usb_device.c: 1520: else
  7820                           ;usb_device.c: 1521: {
  7821                           ;usb_device.c: 1524: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  7822  0D18  086D               	movf	((_inPipes+1)^(0+128)+3),w
  7823  0D19  0020               	movlb	0	; select bank0
  7824  0D1A  0247               	subwf	71,w	;volatile
  7825  0D1B  1D03               	skipz
  7826  0D1C  2D21               	goto	u2925
  7827  0D1D  0021               	movlb	1	; select bank1
  7828  0D1E  086C               	movf	(_inPipes^(0+128)+3),w
  7829  0D1F  0020               	movlb	0	; select bank0
  7830  0D20  0246               	subwf	70,w	;volatile
  7831  0D21                     u2925:	
  7832  0D21  1803               	skipnc
  7833  0D22  2D2C               	goto	l3608
  7834                           
  7835                           ;usb_device.c: 1525: {
  7836                           ;usb_device.c: 1526: inPipes[0].wCount.Val = SetupPkt.wLength;
  7837  0D23  0847               	movf	71,w	;volatile
  7838  0D24  0021               	movlb	1	; select bank1
  7839  0D25  01ED               	clrf	((_inPipes+1)^(0+128)+3)
  7840  0D26  07ED               	addwf	((_inPipes+1)^(0+128)+3),f
  7841  0D27  0020               	movlb	0	; select bank0
  7842  0D28  0846               	movf	70,w	;volatile
  7843  0D29  0021               	movlb	1	; select bank1
  7844  0D2A  01EC               	clrf	(_inPipes^(0+128)+3)
  7845  0D2B  07EC               	addwf	(_inPipes^(0+128)+3),f
  7846  0D2C                     l3608:	
  7847                           
  7848                           ;usb_device.c: 1527: }
  7849                           ;usb_device.c: 1528: USBCtrlTrfTxService();
  7850  0D2C  318E  2620  318C   	fcall	_USBCtrlTrfTxService
  7851                           
  7852                           ;usb_device.c: 1533: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  7853  0D2F  3048               	movlw	72
  7854  0D30  00F4               	movwf	??_USBCtrlEPAllowDataStage
  7855  0D31  3000               	movlw	0
  7856  0D32  00F5               	movwf	??_USBCtrlEPAllowDataStage+1
  7857  0D33  0020               	movlb	0	; select bank0
  7858  0D34  086B               	movf	_pBDTEntryIn,w
  7859  0D35  3E02               	addlw	2
  7860  0D36  0086               	movwf	6
  7861  0D37  0187               	clrf	7
  7862  0D38  0874               	movf	??_USBCtrlEPAllowDataStage,w
  7863  0D39  3FC0               	movwi [0]fsr1
  7864  0D3A  0875               	movf	??_USBCtrlEPAllowDataStage+1,w
  7865  0D3B  3FC1               	movwi [1]fsr1
  7866                           
  7867                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  7868  0D3C  3048               	movlw	72
  7869  0D3D  00F4               	movwf	??_USBCtrlEPAllowDataStage
  7870  0D3E  086B               	movf	_pBDTEntryIn,w
  7871  0D3F  0086               	movwf	6
  7872  0D40  0187               	clrf	7
  7873  0D41  0874               	movf	??_USBCtrlEPAllowDataStage,w
  7874  0D42  0081               	movwf	1
  7875                           
  7876                           ;usb_device.c: 1535: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7877  0D43  086B               	movf	_pBDTEntryIn,w
  7878  0D44  0086               	movwf	6
  7879  0D45  0187               	clrf	7
  7880  0D46  1781               	bsf	1,7
  7881  0D47  0008               	return
  7882  0D48                     __end_of_USBCtrlEPAllowDataStage:	
  7883                           
  7884                           	psect	text29
  7885  0E20                     __ptext29:	
  7886 ;; *************** function _USBCtrlTrfTxService *****************
  7887 ;; Defined at:
  7888 ;;		line 1791 in file "../framework/usb/usb_device.c"
  7889 ;; Parameters:    Size  Location     Type
  7890 ;;		None
  7891 ;; Auto vars:     Size  Location     Type
  7892 ;;  byteToSend      1    3[COMMON] unsigned char 
  7893 ;; Return value:  Size  Location     Type
  7894 ;;		None               void
  7895 ;; Registers used:
  7896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7897 ;; Tracked objects:
  7898 ;;		On entry : 0/0
  7899 ;;		On exit  : 0/0
  7900 ;;		Unchanged: 0/0
  7901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7903 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7904 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7905 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7906 ;;Total ram usage:        3 bytes
  7907 ;; Hardware stack levels used:    1
  7908 ;; Hardware stack levels required when called:    1
  7909 ;; This function calls:
  7910 ;;		Nothing
  7911 ;; This function is called by:
  7912 ;;		_USBCtrlEPAllowDataStage
  7913 ;;		_USBCtrlTrfInHandler
  7914 ;; This function uses a non-reentrant model
  7915 ;;
  7916                           
  7917                           
  7918                           ;psect for function _USBCtrlTrfTxService
  7919  0E20                     _USBCtrlTrfTxService:	
  7920                           
  7921                           ;usb_device.c: 1792: uint8_t byteToSend;
  7922                           ;usb_device.c: 1796: byteToSend = 8;
  7923                           
  7924                           ;incstack = 0
  7925                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  7926  0E20  3008               	movlw	8
  7927  0E21  00F1               	movwf	??_USBCtrlTrfTxService
  7928  0E22  0871               	movf	??_USBCtrlTrfTxService,w
  7929  0E23  00F3               	movwf	USBCtrlTrfTxService@byteToSend
  7930                           
  7931                           ;usb_device.c: 1797: if(inPipes[0].wCount.Val < (uint8_t)8)
  7932  0E24  3000               	movlw	0
  7933  0E25  0021               	movlb	1	; select bank1
  7934  0E26  026D               	subwf	((_inPipes+1)^(0+128)+3),w
  7935  0E27  3008               	movlw	8
  7936  0E28  1903               	skipnz
  7937  0E29  026C               	subwf	(_inPipes^(0+128)+3),w
  7938  0E2A  1803               	skipnc
  7939  0E2B  2E3E               	goto	l663
  7940                           
  7941                           ;usb_device.c: 1798: {
  7942                           ;usb_device.c: 1799: byteToSend = inPipes[0].wCount.Val;
  7943  0E2C  086C               	movf	(_inPipes^(0+128)+3),w
  7944  0E2D  00F1               	movwf	??_USBCtrlTrfTxService
  7945  0E2E  0871               	movf	??_USBCtrlTrfTxService,w
  7946  0E2F  00F3               	movwf	USBCtrlTrfTxService@byteToSend
  7947                           
  7948                           ;usb_device.c: 1806: if(shortPacketStatus == 0)
  7949  0E30  08E7               	movf	_shortPacketStatus^(0+128),f
  7950  0E31  1D03               	skipz
  7951  0E32  2E36               	goto	l3624
  7952                           
  7953                           ;usb_device.c: 1807: {
  7954                           ;usb_device.c: 1808: shortPacketStatus = 1;
  7955  0E33  01E7               	clrf	_shortPacketStatus^(0+128)
  7956  0E34  0AE7               	incf	_shortPacketStatus^(0+128),f
  7957                           
  7958                           ;usb_device.c: 1809: }
  7959  0E35  2E3E               	goto	l663
  7960  0E36                     l3624:	
  7961                           
  7962                           ;usb_device.c: 1810: else if(shortPacketStatus == 1)
  7963  0E36  0867               	movf	_shortPacketStatus^(0+128),w
  7964  0E37  3A01               	xorlw	1
  7965  0E38  1D03               	skipz
  7966  0E39  2E3E               	goto	l663
  7967                           
  7968                           ;usb_device.c: 1811: {
  7969                           ;usb_device.c: 1812: shortPacketStatus = 2;
  7970  0E3A  3002               	movlw	2
  7971  0E3B  00F1               	movwf	??_USBCtrlTrfTxService
  7972  0E3C  0871               	movf	??_USBCtrlTrfTxService,w
  7973  0E3D  00E7               	movwf	_shortPacketStatus^(0+128)
  7974  0E3E                     l663:	
  7975                           
  7976                           ;usb_device.c: 1813: }
  7977                           ;usb_device.c: 1814: }
  7978                           ;usb_device.c: 1818: inPipes[0].wCount.Val -= byteToSend;
  7979  0E3E  0873               	movf	USBCtrlTrfTxService@byteToSend,w
  7980  0E3F  00F1               	movwf	??_USBCtrlTrfTxService
  7981  0E40  01F2               	clrf	??_USBCtrlTrfTxService+1
  7982  0E41  0871               	movf	??_USBCtrlTrfTxService,w
  7983  0E42  02EC               	subwf	(_inPipes^(0+128)+3),f
  7984  0E43  0872               	movf	??_USBCtrlTrfTxService+1,w
  7985  0E44  3BED               	subwfb	((_inPipes+1)^(0+128)+3),f
  7986                           
  7987                           ;usb_device.c: 1823: pBDTEntryIn[0]->CNT = byteToSend;
  7988  0E45  0873               	movf	USBCtrlTrfTxService@byteToSend,w
  7989  0E46  00F1               	movwf	??_USBCtrlTrfTxService
  7990  0E47  0020               	movlb	0	; select bank0
  7991  0E48  0A6B               	incf	_pBDTEntryIn,w
  7992  0E49  0086               	movwf	6
  7993  0E4A  0187               	clrf	7
  7994  0E4B  0871               	movf	??_USBCtrlTrfTxService,w
  7995  0E4C  0081               	movwf	1
  7996                           
  7997                           ;usb_device.c: 1827: pDst = ( uint8_t*)CtrlTrfData;
  7998  0E4D  3048               	movlw	72
  7999  0E4E  00F1               	movwf	??_USBCtrlTrfTxService
  8000  0E4F  0871               	movf	??_USBCtrlTrfTxService,w
  8001  0E50  0022               	movlb	2	; select bank2
  8002  0E51  00E5               	movwf	_pDst^(0+256)
  8003                           
  8004                           ;usb_device.c: 1828: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  8005  0E52  0021               	movlb	1	; select bank1
  8006  0E53  1C6B               	btfss	(_inPipes^(0+128)+2),0
  8007  0E54  2E6F               	goto	l3644
  8008  0E55  2E8C               	goto	l3654
  8009  0E56                     l3636:	
  8010                           ;usb_device.c: 1829: {
  8011                           ;usb_device.c: 1830: while(byteToSend)
  8012                           
  8013                           
  8014                           ;usb_device.c: 1831: {
  8015                           ;usb_device.c: 1832: *pDst++ = *inPipes[0].pSrc.bRom++;
  8016  0E56  0021               	movlb	1	; select bank1
  8017  0E57  0869               	movf	_inPipes^(0+128),w
  8018  0E58  0084               	movwf	4
  8019  0E59  086A               	movf	(_inPipes+1)^(0+128),w
  8020  0E5A  0085               	movwf	5
  8021  0E5B  0800               	movf	0,w	;code access
  8022  0E5C  00F1               	movwf	??_USBCtrlTrfTxService
  8023  0E5D  0022               	movlb	2	; select bank2
  8024  0E5E  0865               	movf	_pDst^(0+256),w
  8025  0E5F  0086               	movwf	6
  8026  0E60  0187               	clrf	7
  8027  0E61  0871               	movf	??_USBCtrlTrfTxService,w
  8028  0E62  0081               	movwf	1
  8029  0E63  3001               	movlw	1
  8030  0E64  0021               	movlb	1	; select bank1
  8031  0E65  07E9               	addwf	_inPipes^(0+128),f
  8032  0E66  3000               	movlw	0
  8033  0E67  3DEA               	addwfc	(_inPipes+1)^(0+128),f
  8034  0E68  3001               	movlw	1
  8035  0E69  00F1               	movwf	??_USBCtrlTrfTxService
  8036  0E6A  0871               	movf	??_USBCtrlTrfTxService,w
  8037  0E6B  0022               	movlb	2	; select bank2
  8038  0E6C  07E5               	addwf	_pDst^(0+256),f
  8039                           
  8040                           ;usb_device.c: 1833: byteToSend--;
  8041  0E6D  3001               	movlw	1
  8042  0E6E  02F3               	subwf	USBCtrlTrfTxService@byteToSend,f
  8043  0E6F                     l3644:	
  8044  0E6F  08F3               	movf	USBCtrlTrfTxService@byteToSend,f
  8045  0E70  1903               	btfsc	3,2
  8046  0E71  0008               	return
  8047  0E72  2E56               	goto	l3636
  8048  0E73                     l3646:	
  8049                           ;usb_device.c: 1836: else
  8050                           ;usb_device.c: 1837: {
  8051                           ;usb_device.c: 1838: while(byteToSend)
  8052                           
  8053                           ;usb_device.c: 1834: }
  8054                           ;usb_device.c: 1835: }
  8055                           
  8056                           
  8057                           ;usb_device.c: 1839: {
  8058                           ;usb_device.c: 1840: *pDst++ = *inPipes[0].pSrc.bRam++;
  8059  0E73  0021               	movlb	1	; select bank1
  8060  0E74  0869               	movf	_inPipes^(0+128),w
  8061  0E75  0084               	movwf	4
  8062  0E76  086A               	movf	(_inPipes+1)^(0+128),w
  8063  0E77  0085               	movwf	5
  8064  0E78  0800               	movf	0,w	;code access
  8065  0E79  00F1               	movwf	??_USBCtrlTrfTxService
  8066  0E7A  0022               	movlb	2	; select bank2
  8067  0E7B  0865               	movf	_pDst^(0+256),w
  8068  0E7C  0086               	movwf	6
  8069  0E7D  0187               	clrf	7
  8070  0E7E  0871               	movf	??_USBCtrlTrfTxService,w
  8071  0E7F  0081               	movwf	1
  8072  0E80  3001               	movlw	1
  8073  0E81  0021               	movlb	1	; select bank1
  8074  0E82  07E9               	addwf	_inPipes^(0+128),f
  8075  0E83  3000               	movlw	0
  8076  0E84  3DEA               	addwfc	(_inPipes+1)^(0+128),f
  8077  0E85  3001               	movlw	1
  8078  0E86  00F1               	movwf	??_USBCtrlTrfTxService
  8079  0E87  0871               	movf	??_USBCtrlTrfTxService,w
  8080  0E88  0022               	movlb	2	; select bank2
  8081  0E89  07E5               	addwf	_pDst^(0+256),f
  8082                           
  8083                           ;usb_device.c: 1841: byteToSend--;
  8084  0E8A  3001               	movlw	1
  8085  0E8B  02F3               	subwf	USBCtrlTrfTxService@byteToSend,f
  8086  0E8C                     l3654:	
  8087  0E8C  08F3               	movf	USBCtrlTrfTxService@byteToSend,f
  8088  0E8D  1903               	btfsc	3,2
  8089  0E8E  0008               	return
  8090  0E8F  2E73               	goto	l3646
  8091  0E90                     __end_of_USBCtrlTrfTxService:	
  8092                           
  8093                           	psect	text30
  8094  0D48                     __ptext30:	
  8095 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  8096 ;; Defined at:
  8097 ;;		line 1436 in file "../framework/usb/usb_device.c"
  8098 ;; Parameters:    Size  Location     Type
  8099 ;;		None
  8100 ;; Auto vars:     Size  Location     Type
  8101 ;;		None
  8102 ;; Return value:  Size  Location     Type
  8103 ;;		None               void
  8104 ;; Registers used:
  8105 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8106 ;; Tracked objects:
  8107 ;;		On entry : 0/0
  8108 ;;		On exit  : 0/0
  8109 ;;		Unchanged: 0/0
  8110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8113 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8114 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8115 ;;Total ram usage:        2 bytes
  8116 ;; Hardware stack levels used:    1
  8117 ;; Hardware stack levels required when called:    1
  8118 ;; This function calls:
  8119 ;;		Nothing
  8120 ;; This function is called by:
  8121 ;;		_USBDeviceTasks
  8122 ;;		_USBCtrlEPServiceComplete
  8123 ;;		_USBCtrlTrfRxService
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           
  8128                           ;psect for function _USBCtrlEPAllowStatusStage
  8129  0D48                     _USBCtrlEPAllowStatusStage:	
  8130                           
  8131                           ;usb_device.c: 1442: if(USBStatusStageEnabledFlag1 == 0)
  8132                           
  8133                           ;incstack = 0
  8134                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  8135  0D48  0022               	movlb	2	; select bank2
  8136  0D49  08DF               	movf	_USBStatusStageEnabledFlag1^(0+256),f
  8137  0D4A  1D03               	skipz
  8138  0D4B  0008               	return
  8139                           
  8140                           ;usb_device.c: 1443: {
  8141                           ;usb_device.c: 1444: USBStatusStageEnabledFlag1 = 1;
  8142  0D4C  3001               	movlw	1
  8143  0D4D  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  8144  0D4E  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  8145  0D4F  00DF               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  8146                           
  8147                           ;usb_device.c: 1445: if(USBStatusStageEnabledFlag2 == 0)
  8148  0D50  08E0               	movf	_USBStatusStageEnabledFlag2^(0+256),f
  8149  0D51  1D03               	skipz
  8150  0D52  0008               	return
  8151                           
  8152                           ;usb_device.c: 1446: {
  8153                           ;usb_device.c: 1447: USBStatusStageEnabledFlag2 = 1;
  8154  0D53  3001               	movlw	1
  8155  0D54  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  8156  0D55  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  8157  0D56  00E0               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  8158                           
  8159                           ;usb_device.c: 1451: if(controlTransferState == 2)
  8160  0D57  0021               	movlb	1	; select bank1
  8161  0D58  0864               	movf	_controlTransferState^(0+128),w
  8162  0D59  3A02               	xorlw	2
  8163  0D5A  1D03               	skipz
  8164  0D5B  2D6D               	goto	l3498
  8165                           
  8166                           ;usb_device.c: 1452: {
  8167                           ;usb_device.c: 1453: pBDTEntryIn[0]->CNT = 0;
  8168  0D5C  0020               	movlb	0	; select bank0
  8169  0D5D  0A6B               	incf	_pBDTEntryIn,w
  8170  0D5E  0086               	movwf	6
  8171  0D5F  0187               	clrf	7
  8172  0D60  0181               	clrf	1
  8173                           
  8174                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8175  0D61  3048               	movlw	72
  8176  0D62  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  8177  0D63  086B               	movf	_pBDTEntryIn,w
  8178  0D64  0086               	movwf	6
  8179  0D65  0187               	clrf	7
  8180  0D66  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  8181  0D67  0081               	movwf	1
  8182                           
  8183                           ;usb_device.c: 1455: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8184  0D68  086B               	movf	_pBDTEntryIn,w
  8185  0D69  0086               	movwf	6
  8186  0D6A  0187               	clrf	7
  8187  0D6B  1781               	bsf	1,7
  8188                           
  8189                           ;usb_device.c: 1456: }
  8190  0D6C  0008               	return
  8191  0D6D                     l3498:	
  8192                           
  8193                           ;usb_device.c: 1457: else if(controlTransferState == 1)
  8194  0D6D  0021               	movlb	1	; select bank1
  8195  0D6E  0864               	movf	_controlTransferState^(0+128),w
  8196  0D6F  3A01               	xorlw	1
  8197  0D70  1D03               	skipz
  8198  0D71  0008               	return
  8199                           
  8200                           ;usb_device.c: 1458: {
  8201                           ;usb_device.c: 1459: BothEP0OutUOWNsSet = 0;
  8202  0D72  0022               	movlb	2	; select bank2
  8203  0D73  01D9               	clrf	_BothEP0OutUOWNsSet^(0+256)
  8204                           
  8205                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->CNT = 8;
  8206  0D74  3008               	movlw	8
  8207  0D75  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  8208  0D76  0020               	movlb	0	; select bank0
  8209  0D77  0A6E               	incf	_pBDTEntryEP0OutCurrent,w
  8210  0D78  0086               	movwf	6
  8211  0D79  0187               	clrf	7
  8212  0D7A  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  8213  0D7B  0081               	movwf	1
  8214                           
  8215                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8216  0D7C  3040               	movlw	64
  8217  0D7D  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  8218  0D7E  3000               	movlw	0
  8219  0D7F  00F2               	movwf	??_USBCtrlEPAllowStatusStage+1
  8220  0D80  086E               	movf	_pBDTEntryEP0OutCurrent,w
  8221  0D81  3E02               	addlw	2
  8222  0D82  0086               	movwf	6
  8223  0D83  0187               	clrf	7
  8224  0D84  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  8225  0D85  3FC0               	movwi [0]fsr1
  8226  0D86  0872               	movf	??_USBCtrlEPAllowStatusStage+1,w
  8227  0D87  3FC1               	movwi [1]fsr1
  8228                           
  8229                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  8230  0D88  3004               	movlw	4
  8231  0D89  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  8232  0D8A  086E               	movf	_pBDTEntryEP0OutCurrent,w
  8233  0D8B  0086               	movwf	6
  8234  0D8C  0187               	clrf	7
  8235  0D8D  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  8236  0D8E  0081               	movwf	1
  8237                           
  8238                           ;usb_device.c: 1467: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8239  0D8F  086E               	movf	_pBDTEntryEP0OutCurrent,w
  8240  0D90  0086               	movwf	6
  8241  0D91  0187               	clrf	7
  8242  0D92  1781               	bsf	1,7
  8243                           
  8244                           ;usb_device.c: 1468: BothEP0OutUOWNsSet = 1;
  8245  0D93  0022               	movlb	2	; select bank2
  8246  0D94  01D9               	clrf	_BothEP0OutUOWNsSet^(0+256)
  8247  0D95  0AD9               	incf	_BothEP0OutUOWNsSet^(0+256),f
  8248                           
  8249                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->CNT = 8;
  8250  0D96  3008               	movlw	8
  8251  0D97  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  8252  0D98  0A7C               	incf	_pBDTEntryEP0OutNext,w
  8253  0D99  0086               	movwf	6
  8254  0D9A  0187               	clrf	7
  8255  0D9B  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  8256  0D9C  0081               	movwf	1
  8257                           
  8258                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8259  0D9D  3040               	movlw	64
  8260  0D9E  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  8261  0D9F  3000               	movlw	0
  8262  0DA0  00F2               	movwf	??_USBCtrlEPAllowStatusStage+1
  8263  0DA1  087C               	movf	_pBDTEntryEP0OutNext,w
  8264  0DA2  3E02               	addlw	2
  8265  0DA3  0086               	movwf	6
  8266  0DA4  0187               	clrf	7
  8267  0DA5  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  8268  0DA6  3FC0               	movwi [0]fsr1
  8269  0DA7  0872               	movf	??_USBCtrlEPAllowStatusStage+1,w
  8270  0DA8  3FC1               	movwi [1]fsr1
  8271                           
  8272                           ;usb_device.c: 1474: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  8273  0DA9  3080               	movlw	128
  8274  0DAA  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  8275  0DAB  087C               	movf	_pBDTEntryEP0OutNext,w
  8276  0DAC  0086               	movwf	6
  8277  0DAD  0187               	clrf	7
  8278  0DAE  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  8279  0DAF  0081               	movwf	1
  8280  0DB0  0008               	return
  8281  0DB1                     __end_of_USBCtrlEPAllowStatusStage:	
  8282                           
  8283                           	psect	text31
  8284  0A3B                     __ptext31:	
  8285 ;; *************** function _USBStallHandler *****************
  8286 ;; Defined at:
  8287 ;;		line 2222 in file "../framework/usb/usb_device.c"
  8288 ;; Parameters:    Size  Location     Type
  8289 ;;		None
  8290 ;; Auto vars:     Size  Location     Type
  8291 ;;		None
  8292 ;; Return value:  Size  Location     Type
  8293 ;;		None               void
  8294 ;; Registers used:
  8295 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8296 ;; Tracked objects:
  8297 ;;		On entry : 0/0
  8298 ;;		On exit  : 0/0
  8299 ;;		Unchanged: 0/0
  8300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8303 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8304 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8305 ;;Total ram usage:        1 bytes
  8306 ;; Hardware stack levels used:    1
  8307 ;; Hardware stack levels required when called:    1
  8308 ;; This function calls:
  8309 ;;		Nothing
  8310 ;; This function is called by:
  8311 ;;		_USBDeviceTasks
  8312 ;; This function uses a non-reentrant model
  8313 ;;
  8314                           
  8315                           
  8316                           ;psect for function _USBStallHandler
  8317  0A3B                     _USBStallHandler:	
  8318                           
  8319                           ;usb_device.c: 2233: if(UEP0bits.EPSTALL == 1)
  8320                           
  8321                           ;incstack = 0
  8322                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  8323  0A3B  003D               	movlb	29	; select bank29
  8324  0A3C  1C18               	btfss	24,0	;volatile
  8325  0A3D  2A5A               	goto	l3528
  8326                           
  8327                           ;usb_device.c: 2234: {
  8328                           ;usb_device.c: 2236: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8329  0A3E  0020               	movlb	0	; select bank0
  8330  0A3F  086E               	movf	_pBDTEntryEP0OutCurrent,w
  8331  0A40  0086               	movwf	6
  8332  0A41  0187               	clrf	7
  8333  0A42  0801               	movf	1,w
  8334  0A43  3A80               	xorlw	128
  8335  0A44  1D03               	skipz
  8336  0A45  2A58               	goto	l3526
  8337  0A46  086B               	movf	_pBDTEntryIn,w
  8338  0A47  0086               	movwf	6
  8339  0A48  0187               	clrf	7
  8340  0A49  0801               	movf	1,w
  8341  0A4A  3A84               	xorlw	132
  8342  0A4B  1D03               	skipz
  8343  0A4C  2A58               	goto	l3526
  8344                           
  8345                           ;usb_device.c: 2237: {
  8346                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8347  0A4D  300C               	movlw	12
  8348  0A4E  00F1               	movwf	??_USBStallHandler
  8349  0A4F  086E               	movf	_pBDTEntryEP0OutCurrent,w
  8350  0A50  0086               	movwf	6
  8351  0A51  0187               	clrf	7
  8352  0A52  0871               	movf	??_USBStallHandler,w
  8353  0A53  0081               	movwf	1
  8354                           
  8355                           ;usb_device.c: 2240: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8356  0A54  086E               	movf	_pBDTEntryEP0OutCurrent,w
  8357  0A55  0086               	movwf	6
  8358  0A56  0187               	clrf	7
  8359  0A57  1781               	bsf	1,7
  8360  0A58                     l3526:	
  8361                           
  8362                           ;usb_device.c: 2241: }
  8363                           ;usb_device.c: 2242: UEP0bits.EPSTALL = 0;
  8364  0A58  003D               	movlb	29	; select bank29
  8365  0A59  1018               	bcf	24,0	;volatile
  8366  0A5A                     l3528:	
  8367                           
  8368                           ;usb_device.c: 2243: }
  8369                           ;usb_device.c: 2245: (UIR &= 0xDF);
  8370  0A5A  30DF               	movlw	223
  8371  0A5B  00F1               	movwf	??_USBStallHandler
  8372  0A5C  0871               	movf	??_USBStallHandler,w
  8373  0A5D  0590               	andwf	16,f	;volatile
  8374  0A5E  0008               	return
  8375  0A5F                     __end_of_USBStallHandler:	
  8376                           
  8377                           	psect	text32
  8378  0968                     __ptext32:	
  8379 ;; *************** function _USBIncrement1msInternalTimers *****************
  8380 ;; Defined at:
  8381 ;;		line 3051 in file "../framework/usb/usb_device.c"
  8382 ;; Parameters:    Size  Location     Type
  8383 ;;		None
  8384 ;; Auto vars:     Size  Location     Type
  8385 ;;		None
  8386 ;; Return value:  Size  Location     Type
  8387 ;;		None               void
  8388 ;; Registers used:
  8389 ;;		wreg, status,2, status,0
  8390 ;; Tracked objects:
  8391 ;;		On entry : 0/0
  8392 ;;		On exit  : 0/0
  8393 ;;		Unchanged: 0/0
  8394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8397 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8398 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8399 ;;Total ram usage:        1 bytes
  8400 ;; Hardware stack levels used:    1
  8401 ;; Hardware stack levels required when called:    1
  8402 ;; This function calls:
  8403 ;;		Nothing
  8404 ;; This function is called by:
  8405 ;;		_USBDeviceTasks
  8406 ;; This function uses a non-reentrant model
  8407 ;;
  8408                           
  8409                           
  8410                           ;psect for function _USBIncrement1msInternalTimers
  8411  0968                     _USBIncrement1msInternalTimers:	
  8412                           
  8413                           ;usb_device.c: 3058: USB1msTickCount++;
  8414                           
  8415                           ;incstack = 0
  8416                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  8417  0968  3001               	movlw	1
  8418  0969  0022               	movlb	2	; select bank2
  8419  096A  07CD               	addwf	_USB1msTickCount^(0+256),f
  8420  096B  3000               	movlw	0
  8421  096C  3DCE               	addwfc	(_USB1msTickCount+1)^(0+256),f
  8422  096D  3000               	movlw	0
  8423  096E  3DCF               	addwfc	(_USB1msTickCount+2)^(0+256),f
  8424  096F  3000               	movlw	0
  8425  0970  3DD0               	addwfc	(_USB1msTickCount+3)^(0+256),f
  8426                           
  8427                           ;usb_device.c: 3059: if(USBBusIsSuspended == 0)
  8428  0971  08DB               	movf	_USBBusIsSuspended^(0+256),f
  8429  0972  1D03               	skipz
  8430  0973  0008               	return
  8431                           
  8432                           ;usb_device.c: 3060: {
  8433                           ;usb_device.c: 3061: USBTicksSinceSuspendEnd++;
  8434  0974  3001               	movlw	1
  8435  0975  00F1               	movwf	??_USBIncrement1msInternalTimers
  8436  0976  0871               	movf	??_USBIncrement1msInternalTimers,w
  8437  0977  07E2               	addwf	_USBTicksSinceSuspendEnd^(0+256),f
  8438                           
  8439                           ;usb_device.c: 3063: if(USBTicksSinceSuspendEnd == 0)
  8440  0978  08E2               	movf	_USBTicksSinceSuspendEnd^(0+256),f
  8441  0979  1D03               	skipz
  8442  097A  0008               	return
  8443                           
  8444                           ;usb_device.c: 3064: {
  8445                           ;usb_device.c: 3065: USBTicksSinceSuspendEnd = 255;
  8446  097B  30FF               	movlw	255
  8447  097C  00F1               	movwf	??_USBIncrement1msInternalTimers
  8448  097D  0871               	movf	??_USBIncrement1msInternalTimers,w
  8449  097E  00E2               	movwf	_USBTicksSinceSuspendEnd^(0+256)
  8450  097F  0008               	return
  8451  0980                     __end_of_USBIncrement1msInternalTimers:	
  8452                           
  8453                           	psect	text33
  8454  0950                     __ptext33:	
  8455 ;; *************** function _USBSuspend *****************
  8456 ;; Defined at:
  8457 ;;		line 2265 in file "../framework/usb/usb_device.c"
  8458 ;; Parameters:    Size  Location     Type
  8459 ;;		None
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;		None
  8462 ;; Return value:  Size  Location     Type
  8463 ;;		None               void
  8464 ;; Registers used:
  8465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8466 ;; Tracked objects:
  8467 ;;		On entry : 0/0
  8468 ;;		On exit  : 0/0
  8469 ;;		Unchanged: 0/0
  8470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8473 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8474 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8475 ;;Total ram usage:        1 bytes
  8476 ;; Hardware stack levels used:    1
  8477 ;; Hardware stack levels required when called:    5
  8478 ;; This function calls:
  8479 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8480 ;; This function is called by:
  8481 ;;		_USBDeviceTasks
  8482 ;; This function uses a non-reentrant model
  8483 ;;
  8484                           
  8485                           
  8486                           ;psect for function _USBSuspend
  8487  0950                     _USBSuspend:	
  8488                           
  8489                           ;usb_device.c: 2289: UIEbits.ACTVIE = 1;
  8490                           
  8491                           ;incstack = 0
  8492                           ; Regs used in _USBSuspend: [allreg]
  8493  0950  003D               	movlb	29	; select bank29
  8494  0951  1512               	bsf	18,2	;volatile
  8495                           
  8496                           ;usb_device.c: 2290: (UIR &= 0xEF);
  8497  0952  30EF               	movlw	239
  8498  0953  00FB               	movwf	??_USBSuspend
  8499  0954  087B               	movf	??_USBSuspend,w
  8500  0955  0590               	andwf	16,f	;volatile
  8501                           
  8502                           ;usb_device.c: 2293: UCONbits.SUSPND = 1;
  8503  0956  148E               	bsf	14,1	;volatile
  8504                           
  8505                           ;usb_device.c: 2296: USBBusIsSuspended = 1;
  8506  0957  0022               	movlb	2	; select bank2
  8507  0958  01DB               	clrf	_USBBusIsSuspended^(0+256)
  8508  0959  0ADB               	incf	_USBBusIsSuspended^(0+256),f
  8509                           
  8510                           ;usb_device.c: 2297: USBTicksSinceSuspendEnd = 0;
  8511  095A  01E2               	clrf	_USBTicksSinceSuspendEnd^(0+256)
  8512                           
  8513                           ;usb_device.c: 2304: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  8514  095B  3075               	movlw	117
  8515  095C  0020               	movlb	0	; select bank0
  8516  095D  00D5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  8517  095E  3000               	movlw	0
  8518  095F  00D6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  8519  0960  01D7               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  8520  0961  3000               	movlw	0
  8521  0962  00D8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  8522  0963  3000               	movlw	0
  8523  0964  00D9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  8524  0965  318B  2335         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  8525  0967  0008               	return
  8526  0968                     __end_of_USBSuspend:	
  8527                           
  8528                           	psect	text34
  8529  02E4                     __ptext34:	
  8530 ;; *************** function _USBWakeFromSuspend *****************
  8531 ;; Defined at:
  8532 ;;		line 2323 in file "../framework/usb/usb_device.c"
  8533 ;; Parameters:    Size  Location     Type
  8534 ;;		None
  8535 ;; Auto vars:     Size  Location     Type
  8536 ;;		None
  8537 ;; Return value:  Size  Location     Type
  8538 ;;		None               void
  8539 ;; Registers used:
  8540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8548 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8549 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8550 ;;Total ram usage:        1 bytes
  8551 ;; Hardware stack levels used:    1
  8552 ;; Hardware stack levels required when called:    5
  8553 ;; This function calls:
  8554 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8555 ;; This function is called by:
  8556 ;;		_USBDeviceTasks
  8557 ;; This function uses a non-reentrant model
  8558 ;;
  8559                           
  8560                           
  8561                           ;psect for function _USBWakeFromSuspend
  8562  02E4                     _USBWakeFromSuspend:	
  8563                           
  8564                           ;usb_device.c: 2324: USBBusIsSuspended = 0;
  8565                           
  8566                           ;incstack = 0
  8567                           ; Regs used in _USBWakeFromSuspend: [allreg]
  8568  02E4  0022               	movlb	2	; select bank2
  8569  02E5  01DB               	clrf	_USBBusIsSuspended^(0+256)
  8570                           
  8571                           ;usb_device.c: 2330: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  8572  02E6  3074               	movlw	116
  8573  02E7  0020               	movlb	0	; select bank0
  8574  02E8  00D5               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  8575  02E9  3000               	movlw	0
  8576  02EA  00D6               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  8577  02EB  01D7               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  8578  02EC  3000               	movlw	0
  8579  02ED  00D8               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  8580  02EE  3000               	movlw	0
  8581  02EF  00D9               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  8582  02F0  318B  2335  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  8583                           
  8584                           ;usb_device.c: 2337: UCONbits.SUSPND = 0;
  8585  02F3  003D               	movlb	29	; select bank29
  8586  02F4  108E               	bcf	14,1	;volatile
  8587                           
  8588                           ;usb_device.c: 2342: UIEbits.ACTVIE = 0;
  8589  02F5  1112               	bcf	18,2	;volatile
  8590  02F6                     l4376:	
  8591                           ;usb_device.c: 2360: while(UIRbits.ACTVIF)
  8592                           
  8593  02F6  1D10               	btfss	16,2	;volatile
  8594  02F7  2AFD               	goto	l4378
  8595                           
  8596                           ;usb_device.c: 2362: {
  8597                           ;usb_device.c: 2363: (UIR &= 0xFB);
  8598  02F8  30FB               	movlw	251
  8599  02F9  00FB               	movwf	??_USBWakeFromSuspend
  8600  02FA  087B               	movf	??_USBWakeFromSuspend,w
  8601  02FB  0590               	andwf	16,f	;volatile
  8602  02FC  2AF6               	goto	l4376
  8603  02FD                     l4378:	
  8604                           
  8605                           ;usb_device.c: 2364: }
  8606                           ;usb_device.c: 2366: USBTicksSinceSuspendEnd = 0;
  8607  02FD  0022               	movlb	2	; select bank2
  8608  02FE  01E2               	clrf	_USBTicksSinceSuspendEnd^(0+256)
  8609  02FF  0008               	return
  8610  0300                     __end_of_USBWakeFromSuspend:	
  8611                           
  8612                           	psect	text35
  8613  0B35                     __ptext35:	
  8614 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  8615 ;; Defined at:
  8616 ;;		line 88 in file "../src/main.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;  event           2    5[BANK0 ] enum E2684
  8619 ;;  pdata           1    7[BANK0 ] PTR void 
  8620 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(32), NULL(0), 
  8621 ;;  size            2    8[BANK0 ] unsigned int 
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;		None
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  1    wreg      unsigned char 
  8626 ;; Registers used:
  8627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8628 ;; Tracked objects:
  8629 ;;		On entry : 0/0
  8630 ;;		On exit  : 0/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8633 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8636 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8637 ;;Total ram usage:        5 bytes
  8638 ;; Hardware stack levels used:    1
  8639 ;; Hardware stack levels required when called:    4
  8640 ;; This function calls:
  8641 ;;		_APP_LEDUpdateUSBStatus
  8642 ;;		_APP_DeviceAudioMIDISOFHandler
  8643 ;;		_APP_DeviceAudioMIDIInitialize
  8644 ;; This function is called by:
  8645 ;;		_USBDeviceTasks
  8646 ;;		_USBStdSetCfgHandler
  8647 ;;		_USBSuspend
  8648 ;;		_USBWakeFromSuspend
  8649 ;;		_USBCtrlTrfSetupHandler
  8650 ;;		_USBCheckStdRequest
  8651 ;;		_USBStdFeatureReqHandler
  8652 ;; This function uses a non-reentrant model
  8653 ;;
  8654                           
  8655                           
  8656                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  8657  0B35                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  8658                           
  8659                           ;main.c: 89: switch( (int) event )
  8660                           
  8661                           ;incstack = 0
  8662                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [allreg]
  8663  0B35  2B45               	goto	l4344
  8664  0B36                     l4332:	
  8665                           ;main.c: 94: case EVENT_SOF:
  8666                           
  8667                           ;main.c: 92: break;
  8668                           
  8669                           ;main.c: 90: {
  8670                           ;main.c: 91: case EVENT_TRANSFER:
  8671                           
  8672                           
  8673                           ;main.c: 97: APP_LEDUpdateUSBStatus();
  8674  0B36  318B  23AD  318B   	fcall	_APP_LEDUpdateUSBStatus
  8675                           
  8676                           ;main.c: 98: APP_DeviceAudioMIDISOFHandler();
  8677  0B39  3188  20E6         	fcall	_APP_DeviceAudioMIDISOFHandler
  8678                           
  8679                           ;main.c: 99: break;
  8680  0B3B  0008               	return
  8681  0B3C                     l4336:	
  8682                           ;main.c: 101: case EVENT_SUSPEND:
  8683                           
  8684                           
  8685                           ;main.c: 103: APP_LEDUpdateUSBStatus();
  8686  0B3C  318B  23AD         	fcall	_APP_LEDUpdateUSBStatus
  8687                           
  8688                           ;main.c: 104: break;
  8689  0B3E  0008               	return
  8690  0B3F                     l4338:	
  8691                           ;main.c: 106: case EVENT_RESUME:
  8692                           
  8693                           
  8694                           ;main.c: 108: APP_LEDUpdateUSBStatus();
  8695  0B3F  318B  23AD         	fcall	_APP_LEDUpdateUSBStatus
  8696                           
  8697                           ;main.c: 109: break;
  8698  0B41  0008               	return
  8699  0B42                     l4340:	
  8700                           ;main.c: 111: case EVENT_CONFIGURED:
  8701                           
  8702                           
  8703                           ;main.c: 114: APP_DeviceAudioMIDIInitialize();
  8704  0B42  318A  22AC         	fcall	_APP_DeviceAudioMIDIInitialize
  8705                           
  8706                           ;main.c: 131: }
  8707                           
  8708                           ;main.c: 130: break;
  8709                           
  8710                           ;main.c: 129: default:
  8711                           
  8712                           ;main.c: 127: break;
  8713                           
  8714                           ;main.c: 126: case EVENT_TRANSFER_TERMINATED:
  8715                           
  8716                           ;main.c: 124: break;
  8717                           
  8718                           ;main.c: 123: case EVENT_BUS_ERROR:
  8719                           
  8720                           ;main.c: 121: break;
  8721                           
  8722                           ;main.c: 120: case EVENT_EP0_REQUEST:
  8723                           
  8724                           ;main.c: 118: break;
  8725                           
  8726                           ;main.c: 117: case EVENT_SET_DESCRIPTOR:
  8727                           
  8728                           ;main.c: 115: break;
  8729  0B44  0008               	return
  8730  0B45                     l4344:	
  8731                           
  8732                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  8733                           ; Switch size 1, requested type "space"
  8734                           ; Number of cases is 2, Range of values is 0 to 127
  8735                           ; switch strategies available:
  8736                           ; Name         Instructions Cycles
  8737                           ; simple_byte            7     4 (average)
  8738                           ; direct_byte          262     6 (fixed)
  8739                           ; jumptable            260     6 (fixed)
  8740                           ; rangetable           132     6 (fixed)
  8741                           ; spacedrange          261     8 (fixed)
  8742                           ; locatedrange         128     3 (fixed)
  8743                           ;	Chosen strategy is simple_byte
  8744  0B45  0020               	movlb	0	; select bank0
  8745  0B46  0856               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  8746  0B47  3A00               	xorlw	0	; case 0
  8747  0B48  1903               	skipnz
  8748  0B49  2B4E               	goto	l4770
  8749  0B4A  3A7F               	xorlw	127	; case 127
  8750  0B4B  1903               	skipnz
  8751  0B4C  2B68               	goto	l4772
  8752  0B4D  2B6D               	goto	l88
  8753  0B4E                     l4770:	
  8754                           
  8755                           ; Switch size 1, requested type "space"
  8756                           ; Number of cases is 8, Range of values is 1 to 117
  8757                           ; switch strategies available:
  8758                           ; Name         Instructions Cycles
  8759                           ; simple_byte           25    13 (average)
  8760                           ; direct_byte          243     9 (fixed)
  8761                           ; jumptable            263     9 (fixed)
  8762                           ;	Chosen strategy is simple_byte
  8763  0B4E  0855               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  8764  0B4F  3A01               	xorlw	1	; case 1
  8765  0B50  1903               	skipnz
  8766  0B51  2B42               	goto	l4340
  8767  0B52  3A03               	xorlw	3	; case 2
  8768  0B53  1903               	skipnz
  8769  0B54  2B6D               	goto	l88
  8770  0B55  3A01               	xorlw	1	; case 3
  8771  0B56  1903               	skipnz
  8772  0B57  2B6D               	goto	l88
  8773  0B58  3A06               	xorlw	6	; case 5
  8774  0B59  1903               	skipnz
  8775  0B5A  2B6D               	goto	l88
  8776  0B5B  3A77               	xorlw	119	; case 114
  8777  0B5C  1903               	skipnz
  8778  0B5D  2B6D               	goto	l88
  8779  0B5E  3A01               	xorlw	1	; case 115
  8780  0B5F  1903               	skipnz
  8781  0B60  2B36               	goto	l4332
  8782  0B61  3A07               	xorlw	7	; case 116
  8783  0B62  1903               	skipnz
  8784  0B63  2B3F               	goto	l4338
  8785  0B64  3A01               	xorlw	1	; case 117
  8786  0B65  1903               	skipnz
  8787  0B66  2B3C               	goto	l4336
  8788  0B67  2B6D               	goto	l88
  8789  0B68                     l4772:	
  8790                           
  8791                           ; Switch size 1, requested type "space"
  8792                           ; Number of cases is 1, Range of values is 255 to 255
  8793                           ; switch strategies available:
  8794                           ; Name         Instructions Cycles
  8795                           ; simple_byte            4     3 (average)
  8796                           ; direct_byte            7     5 (fixed)
  8797                           ; jumptable            263     9 (fixed)
  8798                           ;	Chosen strategy is simple_byte
  8799  0B68  0855               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  8800  0B69  3AFF               	xorlw	255	; case 255
  8801  0B6A  1903               	skipnz
  8802  0B6B  2B6D               	goto	l88
  8803  0B6C  2B6D               	goto	l88
  8804  0B6D                     l88:	
  8805                           ;main.c: 132: return 1;
  8806                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  8807                           
  8808  0B6D  0008               	return
  8809  0B6E                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  8810                           
  8811                           	psect	text36
  8812  0AAC                     __ptext36:	
  8813 ;; *************** function _APP_DeviceAudioMIDIInitialize *****************
  8814 ;; Defined at:
  8815 ;;		line 41 in file "../src/app_device_audio_midi.c"
  8816 ;; Parameters:    Size  Location     Type
  8817 ;;		None
  8818 ;; Auto vars:     Size  Location     Type
  8819 ;;		None
  8820 ;; Return value:  Size  Location     Type
  8821 ;;		None               void
  8822 ;; Registers used:
  8823 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8824 ;; Tracked objects:
  8825 ;;		On entry : 0/0
  8826 ;;		On exit  : 0/0
  8827 ;;		Unchanged: 0/0
  8828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8831 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8832 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8833 ;;Total ram usage:        2 bytes
  8834 ;; Hardware stack levels used:    1
  8835 ;; Hardware stack levels required when called:    3
  8836 ;; This function calls:
  8837 ;;		_USBEnableEndpoint
  8838 ;;		_USBTransferOnePacket
  8839 ;; This function is called by:
  8840 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8841 ;; This function uses a non-reentrant model
  8842 ;;
  8843                           
  8844                           
  8845                           ;psect for function _APP_DeviceAudioMIDIInitialize
  8846  0AAC                     _APP_DeviceAudioMIDIInitialize:	
  8847                           
  8848                           ;app_device_audio_midi.c: 42: USBTxHandle = (0);
  8849                           
  8850                           ;incstack = 0
  8851                           ; Regs used in _APP_DeviceAudioMIDIInitialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
  8852  0AAC  0021               	movlb	1	; select bank1
  8853  0AAD  01E3               	clrf	_USBTxHandle^(0+128)
  8854                           
  8855                           ;app_device_audio_midi.c: 43: USBRxHandle = (0);
  8856  0AAE  0022               	movlb	2	; select bank2
  8857  0AAF  01DE               	clrf	_USBRxHandle^(0+256)
  8858                           
  8859                           ;app_device_audio_midi.c: 44: pitch = 0x3C;
  8860  0AB0  303C               	movlw	60
  8861  0AB1  0020               	movlb	0	; select bank0
  8862  0AB2  00D3               	movwf	??_APP_DeviceAudioMIDIInitialize
  8863  0AB3  0853               	movf	??_APP_DeviceAudioMIDIInitialize,w
  8864  0AB4  0021               	movlb	1	; select bank1
  8865  0AB5  00E6               	movwf	_pitch^(0+128)
  8866                           
  8867                           ;app_device_audio_midi.c: 45: sentNoteOff = 1;
  8868  0AB6  0022               	movlb	2	; select bank2
  8869  0AB7  01E6               	clrf	_sentNoteOff^(0+256)
  8870  0AB8  0AE6               	incf	_sentNoteOff^(0+256),f
  8871                           
  8872                           ;app_device_audio_midi.c: 46: msCounter = 0;
  8873  0AB9  0021               	movlb	1	; select bank1
  8874  0ABA  01E5               	clrf	_msCounter^(0+128)
  8875                           
  8876                           ;app_device_audio_midi.c: 48: USBEnableEndpoint(1,0x04|0x02|0x10|0x08);
  8877  0ABB  301E               	movlw	30
  8878  0ABC  0020               	movlb	0	; select bank0
  8879  0ABD  00D3               	movwf	??_APP_DeviceAudioMIDIInitialize
  8880  0ABE  0853               	movf	??_APP_DeviceAudioMIDIInitialize,w
  8881  0ABF  00F8               	movwf	?_USBEnableEndpoint
  8882  0AC0  3001               	movlw	1
  8883  0AC1  318A  225F  318A   	fcall	_USBEnableEndpoint
  8884                           
  8885                           ;app_device_audio_midi.c: 50: USBRxHandle = USBTransferOnePacket(1,0,(uint8_t*)&Received
      +                          DataBuffer,64);
  8886  0AC4  01F1               	clrf	?_USBTransferOnePacket
  8887  0AC5  30A0               	movlw	160
  8888  0AC6  00F2               	movwf	?_USBTransferOnePacket+1
  8889  0AC7  3000               	movlw	0
  8890  0AC8  00F3               	movwf	?_USBTransferOnePacket+2
  8891  0AC9  3040               	movlw	64
  8892  0ACA  0020               	movlb	0	; select bank0
  8893  0ACB  00D3               	movwf	??_APP_DeviceAudioMIDIInitialize
  8894  0ACC  0853               	movf	??_APP_DeviceAudioMIDIInitialize,w
  8895  0ACD  00F4               	movwf	?_USBTransferOnePacket+3
  8896  0ACE  3001               	movlw	1
  8897  0ACF  318C  244B         	fcall	_USBTransferOnePacket
  8898  0AD1  0020               	movlb	0	; select bank0
  8899  0AD2  00D4               	movwf	??_APP_DeviceAudioMIDIInitialize+1
  8900  0AD3  0854               	movf	??_APP_DeviceAudioMIDIInitialize+1,w
  8901  0AD4  0022               	movlb	2	; select bank2
  8902  0AD5  00DE               	movwf	_USBRxHandle^(0+256)
  8903  0AD6  0008               	return
  8904  0AD7                     __end_of_APP_DeviceAudioMIDIInitialize:	
  8905                           
  8906                           	psect	text37
  8907  0C4B                     __ptext37:	
  8908 ;; *************** function _USBTransferOnePacket *****************
  8909 ;; Defined at:
  8910 ;;		line 1015 in file "../framework/usb/usb_device.c"
  8911 ;; Parameters:    Size  Location     Type
  8912 ;;  ep              1    wreg     unsigned char 
  8913 ;;  dir             1    1[COMMON] unsigned char 
  8914 ;;  data            2    2[COMMON] PTR unsigned char 
  8915 ;;		 -> midiData(4), ReceivedDataBuffer(64), 
  8916 ;;  len             1    4[COMMON] unsigned char 
  8917 ;; Auto vars:     Size  Location     Type
  8918 ;;  ep              1    7[COMMON] unsigned char 
  8919 ;;  handle          1    8[COMMON] PTR volatile struct __BD
  8920 ;;		 -> BDT(32), NULL(0), 
  8921 ;; Return value:  Size  Location     Type
  8922 ;;                  1    wreg      PTR void 
  8923 ;; Registers used:
  8924 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8925 ;; Tracked objects:
  8926 ;;		On entry : 0/0
  8927 ;;		On exit  : 0/0
  8928 ;;		Unchanged: 0/0
  8929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8930 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8931 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8932 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8933 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8934 ;;Total ram usage:        8 bytes
  8935 ;; Hardware stack levels used:    1
  8936 ;; Hardware stack levels required when called:    1
  8937 ;; This function calls:
  8938 ;;		Nothing
  8939 ;; This function is called by:
  8940 ;;		_APP_DeviceAudioMIDIInitialize
  8941 ;;		_APP_DeviceAudioMIDITasks
  8942 ;; This function uses a non-reentrant model
  8943 ;;
  8944                           
  8945                           
  8946                           ;psect for function _USBTransferOnePacket
  8947  0C4B                     _USBTransferOnePacket:	
  8948                           
  8949                           ;incstack = 0
  8950                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  8951                           ;USBTransferOnePacket@ep stored from wreg
  8952  0C4B  00F7               	movwf	USBTransferOnePacket@ep
  8953                           
  8954                           ;usb_device.c: 1016: volatile BDT_ENTRY* handle;
  8955                           ;usb_device.c: 1019: if(dir != 0)
  8956  0C4C  0871               	movf	USBTransferOnePacket@dir,w
  8957  0C4D  1903               	btfsc	3,2
  8958  0C4E  2C54               	goto	l3210
  8959                           
  8960                           ;usb_device.c: 1020: {
  8961                           ;usb_device.c: 1022: handle = pBDTEntryIn[ep];
  8962  0C4F  0877               	movf	USBTransferOnePacket@ep,w
  8963  0C50  3E6B               	addlw	_pBDTEntryIn& (0+255)
  8964  0C51  0086               	movwf	6
  8965  0C52  0187               	clrf	7
  8966  0C53  2C59               	goto	L13
  8967  0C54                     l3210:	
  8968                           ;usb_device.c: 1023: }
  8969                           
  8970                           
  8971                           ;usb_device.c: 1024: else
  8972                           ;usb_device.c: 1025: {
  8973                           ;usb_device.c: 1027: handle = pBDTEntryOut[ep];
  8974  0C54  0877               	movf	USBTransferOnePacket@ep,w
  8975  0C55  3E57               	addlw	_pBDTEntryOut& (0+255)
  8976  0C56  0086               	movwf	6
  8977  0C57  3001               	movlw	1	; select bank2/3
  8978  0C58  0087               	movwf	7
  8979  0C59                     L13:	
  8980  0C59  0801               	movf	1,w
  8981  0C5A  00F5               	movwf	??_USBTransferOnePacket
  8982  0C5B  0875               	movf	??_USBTransferOnePacket,w
  8983  0C5C  00F8               	movwf	USBTransferOnePacket@handle
  8984                           
  8985                           ;usb_device.c: 1028: }
  8986                           ;usb_device.c: 1032: if(handle == 0)
  8987  0C5D  08F8               	movf	USBTransferOnePacket@handle,f
  8988  0C5E  1D03               	skipz
  8989  0C5F  2C62               	goto	l3218
  8990                           
  8991                           ;usb_device.c: 1033: {
  8992                           ;usb_device.c: 1034: return 0;
  8993  0C60  3000               	movlw	0
  8994  0C61  0008               	return
  8995  0C62                     l3218:	
  8996                           
  8997                           ;usb_device.c: 1035: }
  8998                           ;usb_device.c: 1048: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  8999  0C62  30FF               	movlw	255
  9000  0C63  0572               	andwf	USBTransferOnePacket@data,w
  9001  0C64  00F5               	movwf	??_USBTransferOnePacket
  9002  0C65  307F               	movlw	127
  9003  0C66  0573               	andwf	USBTransferOnePacket@data+1,w
  9004  0C67  00F6               	movwf	??_USBTransferOnePacket+1
  9005  0C68  0878               	movf	USBTransferOnePacket@handle,w
  9006  0C69  3E02               	addlw	2
  9007  0C6A  0086               	movwf	6
  9008  0C6B  0187               	clrf	7
  9009  0C6C  0875               	movf	??_USBTransferOnePacket,w
  9010  0C6D  3FC0               	movwi [0]fsr1
  9011  0C6E  0876               	movf	??_USBTransferOnePacket+1,w
  9012  0C6F  3FC1               	movwi [1]fsr1
  9013                           
  9014                           ;usb_device.c: 1049: handle->CNT = len;
  9015  0C70  0874               	movf	USBTransferOnePacket@len,w
  9016  0C71  00F5               	movwf	??_USBTransferOnePacket
  9017  0C72  0A78               	incf	USBTransferOnePacket@handle,w
  9018  0C73  0086               	movwf	6
  9019  0C74  0187               	clrf	7
  9020  0C75  0875               	movf	??_USBTransferOnePacket,w
  9021  0C76  0081               	movwf	1
  9022                           
  9023                           ;usb_device.c: 1050: handle->STAT.Val &= 0x40;
  9024  0C77  3040               	movlw	64
  9025  0C78  00F5               	movwf	??_USBTransferOnePacket
  9026  0C79  0878               	movf	USBTransferOnePacket@handle,w
  9027  0C7A  0086               	movwf	6
  9028  0C7B  0187               	clrf	7
  9029  0C7C  0875               	movf	??_USBTransferOnePacket,w
  9030  0C7D  0581               	andwf	1,f
  9031                           
  9032                           ;usb_device.c: 1051: handle->STAT.Val |= (0x08 & 0x08);
  9033  0C7E  0878               	movf	USBTransferOnePacket@handle,w
  9034  0C7F  0086               	movwf	6
  9035  0C80  0187               	clrf	7
  9036  0C81  1581               	bsf	1,3
  9037                           
  9038                           ;usb_device.c: 1052: handle->STAT.Val |= 0x80;
  9039  0C82  0878               	movf	USBTransferOnePacket@handle,w
  9040  0C83  0086               	movwf	6
  9041  0C84  0187               	clrf	7
  9042  0C85  1781               	bsf	1,7
  9043                           
  9044                           ;usb_device.c: 1055: if(dir != 0)
  9045  0C86  0871               	movf	USBTransferOnePacket@dir,w
  9046  0C87  1903               	btfsc	3,2
  9047  0C88  2C90               	goto	l3230
  9048                           
  9049                           ;usb_device.c: 1056: {
  9050                           ;usb_device.c: 1058: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  9051  0C89  3004               	movlw	4
  9052  0C8A  00F5               	movwf	??_USBTransferOnePacket
  9053  0C8B  0877               	movf	USBTransferOnePacket@ep,w
  9054  0C8C  3E6B               	addlw	_pBDTEntryIn& (0+255)
  9055  0C8D  0086               	movwf	6
  9056  0C8E  0187               	clrf	7
  9057  0C8F  2C97               	goto	L14
  9058  0C90                     l3230:	
  9059                           ;usb_device.c: 1059: }
  9060                           
  9061                           
  9062                           ;usb_device.c: 1060: else
  9063                           ;usb_device.c: 1061: {
  9064                           ;usb_device.c: 1063: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  9065  0C90  3004               	movlw	4
  9066  0C91  00F5               	movwf	??_USBTransferOnePacket
  9067  0C92  0877               	movf	USBTransferOnePacket@ep,w
  9068  0C93  3E57               	addlw	_pBDTEntryOut& (0+255)
  9069  0C94  0086               	movwf	6
  9070  0C95  3001               	movlw	1	; select bank2/3
  9071  0C96  0087               	movwf	7
  9072  0C97                     L14:	
  9073  0C97  0875               	movf	??_USBTransferOnePacket,w
  9074  0C98  0681               	xorwf	1,f
  9075                           
  9076                           ;usb_device.c: 1064: }
  9077                           ;usb_device.c: 1065: return (void*)handle;
  9078  0C99  0878               	movf	USBTransferOnePacket@handle,w
  9079  0C9A  0008               	return
  9080  0C9B                     __end_of_USBTransferOnePacket:	
  9081                           
  9082                           	psect	text38
  9083  0A5F                     __ptext38:	
  9084 ;; *************** function _USBEnableEndpoint *****************
  9085 ;; Defined at:
  9086 ;;		line 898 in file "../framework/usb/usb_device.c"
  9087 ;; Parameters:    Size  Location     Type
  9088 ;;  ep              1    wreg     unsigned char 
  9089 ;;  options         1    8[COMMON] unsigned char 
  9090 ;; Auto vars:     Size  Location     Type
  9091 ;;  ep              1    2[BANK0 ] unsigned char 
  9092 ;;  p               2    0[BANK0 ] PTR unsigned char 
  9093 ;;		 -> UEP0(1), 
  9094 ;; Return value:  Size  Location     Type
  9095 ;;		None               void
  9096 ;; Registers used:
  9097 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9098 ;; Tracked objects:
  9099 ;;		On entry : 0/0
  9100 ;;		On exit  : 0/0
  9101 ;;		Unchanged: 0/0
  9102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9103 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9104 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9105 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9106 ;;      Totals:         3       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9107 ;;Total ram usage:        6 bytes
  9108 ;; Hardware stack levels used:    1
  9109 ;; Hardware stack levels required when called:    2
  9110 ;; This function calls:
  9111 ;;		_USBConfigureEndpoint
  9112 ;; This function is called by:
  9113 ;;		_APP_DeviceAudioMIDIInitialize
  9114 ;; This function uses a non-reentrant model
  9115 ;;
  9116                           
  9117                           
  9118                           ;psect for function _USBEnableEndpoint
  9119  0A5F                     _USBEnableEndpoint:	
  9120                           
  9121                           ;incstack = 0
  9122                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9123                           ;USBEnableEndpoint@ep stored from wreg
  9124  0A5F  0020               	movlb	0	; select bank0
  9125  0A60  00D2               	movwf	USBEnableEndpoint@ep
  9126                           
  9127                           ;usb_device.c: 899: unsigned char* p;
  9128                           ;usb_device.c: 903: if(options & 0x04)
  9129  0A61  1D78               	btfss	USBEnableEndpoint@options,2
  9130  0A62  2A68               	goto	l3198
  9131                           
  9132                           ;usb_device.c: 904: {
  9133                           ;usb_device.c: 905: USBConfigureEndpoint(ep, 0);
  9134  0A63  01F1               	clrf	?_USBConfigureEndpoint
  9135  0A64  0852               	movf	USBEnableEndpoint@ep,w
  9136  0A65  318B  236E  318A   	fcall	_USBConfigureEndpoint
  9137  0A68                     l3198:	
  9138                           
  9139                           ;usb_device.c: 906: }
  9140                           ;usb_device.c: 907: if(options & 0x02)
  9141  0A68  1CF8               	btfss	USBEnableEndpoint@options,1
  9142  0A69  2A70               	goto	l3202
  9143                           
  9144                           ;usb_device.c: 908: {
  9145                           ;usb_device.c: 909: USBConfigureEndpoint(ep, 1);
  9146  0A6A  01F1               	clrf	?_USBConfigureEndpoint
  9147  0A6B  0AF1               	incf	?_USBConfigureEndpoint,f
  9148  0A6C  0020               	movlb	0	; select bank0
  9149  0A6D  0852               	movf	USBEnableEndpoint@ep,w
  9150  0A6E  318B  236E         	fcall	_USBConfigureEndpoint
  9151  0A70                     l3202:	
  9152                           
  9153                           ;usb_device.c: 910: }
  9154                           ;usb_device.c: 918: p = (unsigned char*)(&UEP0+ep);
  9155  0A70  0020               	movlb	0	; select bank0
  9156  0A71  0852               	movf	USBEnableEndpoint@ep,w
  9157  0A72  3E98               	addlw	152
  9158  0A73  00F9               	movwf	??_USBEnableEndpoint
  9159  0A74  01FA               	clrf	??_USBEnableEndpoint+1
  9160  0A75  300E               	movlw	14
  9161  0A76  3DFA               	addwfc	??_USBEnableEndpoint+1,f
  9162  0A77  0879               	movf	??_USBEnableEndpoint,w
  9163  0A78  00D0               	movwf	USBEnableEndpoint@p
  9164  0A79  087A               	movf	??_USBEnableEndpoint+1,w
  9165  0A7A  00D1               	movwf	USBEnableEndpoint@p+1
  9166                           
  9167                           ;usb_device.c: 920: *p = options;
  9168  0A7B  0878               	movf	USBEnableEndpoint@options,w
  9169  0A7C  00F9               	movwf	??_USBEnableEndpoint
  9170  0A7D  0850               	movf	USBEnableEndpoint@p,w
  9171  0A7E  0086               	movwf	6
  9172  0A7F  0851               	movf	USBEnableEndpoint@p+1,w
  9173  0A80  0087               	movwf	7
  9174  0A81  0879               	movf	??_USBEnableEndpoint,w
  9175  0A82  0081               	movwf	1
  9176  0A83  0008               	return
  9177  0A84                     __end_of_USBEnableEndpoint:	
  9178                           
  9179                           	psect	text39
  9180  0B6E                     __ptext39:	
  9181 ;; *************** function _USBConfigureEndpoint *****************
  9182 ;; Defined at:
  9183 ;;		line 1563 in file "../framework/usb/usb_device.c"
  9184 ;; Parameters:    Size  Location     Type
  9185 ;;  EPNum           1    wreg     unsigned char 
  9186 ;;  direction       1    1[COMMON] unsigned char 
  9187 ;; Auto vars:     Size  Location     Type
  9188 ;;  EPNum           1    6[COMMON] unsigned char 
  9189 ;;  handle          1    7[COMMON] PTR volatile struct __BD
  9190 ;;		 -> BDT(32), 
  9191 ;; Return value:  Size  Location     Type
  9192 ;;		None               void
  9193 ;; Registers used:
  9194 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9195 ;; Tracked objects:
  9196 ;;		On entry : 0/0
  9197 ;;		On exit  : 0/0
  9198 ;;		Unchanged: 0/0
  9199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9200 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9201 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9202 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9203 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9204 ;;Total ram usage:        7 bytes
  9205 ;; Hardware stack levels used:    1
  9206 ;; Hardware stack levels required when called:    1
  9207 ;; This function calls:
  9208 ;;		Nothing
  9209 ;; This function is called by:
  9210 ;;		_USBEnableEndpoint
  9211 ;; This function uses a non-reentrant model
  9212 ;;
  9213                           
  9214                           
  9215                           ;psect for function _USBConfigureEndpoint
  9216  0B6E                     _USBConfigureEndpoint:	
  9217                           
  9218                           ;incstack = 0
  9219                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  9220                           ;USBConfigureEndpoint@EPNum stored from wreg
  9221  0B6E  00F6               	movwf	USBConfigureEndpoint@EPNum
  9222                           
  9223                           ;usb_device.c: 1564: volatile BDT_ENTRY* handle;
  9224                           ;usb_device.c: 1568: handle = (volatile BDT_ENTRY*)&BDT[0];
  9225  0B6F  3020               	movlw	32
  9226  0B70  00F2               	movwf	??_USBConfigureEndpoint
  9227  0B71  0872               	movf	??_USBConfigureEndpoint,w
  9228  0B72  00F7               	movwf	USBConfigureEndpoint@handle
  9229                           
  9230                           ;usb_device.c: 1569: handle += (4*EPNum+2*direction+0u);
  9231  0B73  0871               	movf	USBConfigureEndpoint@direction,w
  9232  0B74  00F2               	movwf	??_USBConfigureEndpoint
  9233  0B75  3001               	movlw	1
  9234  0B76                     u2795:	
  9235  0B76  35F2               	lslf	??_USBConfigureEndpoint,f
  9236  0B77  0B89               	decfsz	9,f
  9237  0B78  2B76               	goto	u2795
  9238  0B79  0876               	movf	USBConfigureEndpoint@EPNum,w
  9239  0B7A  00F3               	movwf	??_USBConfigureEndpoint+1
  9240  0B7B  3001               	movlw	1
  9241  0B7C                     u2805:	
  9242  0B7C  35F3               	lslf	??_USBConfigureEndpoint+1,f
  9243  0B7D  3EFF               	addlw	-1
  9244  0B7E  1D03               	skipz
  9245  0B7F  2B7C               	goto	u2805
  9246  0B80  3573               	lslf	??_USBConfigureEndpoint+1,w
  9247  0B81  0772               	addwf	??_USBConfigureEndpoint,w
  9248  0B82  00F4               	movwf	??_USBConfigureEndpoint+2
  9249  0B83  3001               	movlw	1
  9250  0B84                     u2815:	
  9251  0B84  35F4               	lslf	??_USBConfigureEndpoint+2,f
  9252  0B85  3EFF               	addlw	-1
  9253  0B86  1D03               	skipz
  9254  0B87  2B84               	goto	u2815
  9255  0B88  3574               	lslf	??_USBConfigureEndpoint+2,w
  9256  0B89  00F5               	movwf	??_USBConfigureEndpoint+3
  9257  0B8A  0875               	movf	??_USBConfigureEndpoint+3,w
  9258  0B8B  07F7               	addwf	USBConfigureEndpoint@handle,f
  9259                           
  9260                           ;usb_device.c: 1571: handle->STAT.UOWN = 0;
  9261  0B8C  0877               	movf	USBConfigureEndpoint@handle,w
  9262  0B8D  0086               	movwf	6
  9263  0B8E  0187               	clrf	7
  9264  0B8F  1381               	bcf	1,7
  9265                           
  9266                           ;usb_device.c: 1576: if(direction == 0)
  9267  0B90  08F1               	movf	USBConfigureEndpoint@direction,f
  9268  0B91  1D03               	skipz
  9269  0B92  2B9B               	goto	l3574
  9270                           
  9271                           ;usb_device.c: 1577: {
  9272                           ;usb_device.c: 1578: pBDTEntryOut[EPNum] = handle;
  9273  0B93  0877               	movf	USBConfigureEndpoint@handle,w
  9274  0B94  00F2               	movwf	??_USBConfigureEndpoint
  9275  0B95  0876               	movf	USBConfigureEndpoint@EPNum,w
  9276  0B96  3E57               	addlw	_pBDTEntryOut& (0+255)
  9277  0B97  0086               	movwf	6
  9278  0B98  3001               	movlw	1	; select bank2/3
  9279  0B99  0087               	movwf	7
  9280  0B9A  2BA1               	goto	L15
  9281  0B9B                     l3574:	
  9282                           ;usb_device.c: 1579: }
  9283                           
  9284                           
  9285                           ;usb_device.c: 1580: else
  9286                           ;usb_device.c: 1581: {
  9287                           ;usb_device.c: 1582: pBDTEntryIn[EPNum] = handle;
  9288  0B9B  0877               	movf	USBConfigureEndpoint@handle,w
  9289  0B9C  00F2               	movwf	??_USBConfigureEndpoint
  9290  0B9D  0876               	movf	USBConfigureEndpoint@EPNum,w
  9291  0B9E  3E6B               	addlw	_pBDTEntryIn& (0+255)
  9292  0B9F  0086               	movwf	6
  9293  0BA0  0187               	clrf	7
  9294  0BA1                     L15:	
  9295  0BA1  0872               	movf	??_USBConfigureEndpoint,w
  9296  0BA2  0081               	movwf	1
  9297                           
  9298                           ;usb_device.c: 1583: }
  9299                           ;usb_device.c: 1586: handle->STAT.DTS = 0;
  9300  0BA3  0877               	movf	USBConfigureEndpoint@handle,w
  9301  0BA4  0086               	movwf	6
  9302  0BA5  0187               	clrf	7
  9303  0BA6  1301               	bcf	1,6
  9304                           
  9305                           ;usb_device.c: 1587: (handle+1)->STAT.DTS = 1;
  9306  0BA7  0877               	movf	USBConfigureEndpoint@handle,w
  9307  0BA8  3E04               	addlw	4
  9308  0BA9  0086               	movwf	6
  9309  0BAA  0187               	clrf	7
  9310  0BAB  1701               	bsf	1,6
  9311  0BAC  0008               	return
  9312  0BAD                     __end_of_USBConfigureEndpoint:	
  9313                           
  9314                           	psect	text40
  9315  08E6                     __ptext40:	
  9316 ;; *************** function _APP_DeviceAudioMIDISOFHandler *****************
  9317 ;; Defined at:
  9318 ;;		line 53 in file "../src/app_device_audio_midi.c"
  9319 ;; Parameters:    Size  Location     Type
  9320 ;;		None
  9321 ;; Auto vars:     Size  Location     Type
  9322 ;;		None
  9323 ;; Return value:  Size  Location     Type
  9324 ;;		None               void
  9325 ;; Registers used:
  9326 ;;		wreg, status,2, status,0
  9327 ;; Tracked objects:
  9328 ;;		On entry : 0/0
  9329 ;;		On exit  : 0/0
  9330 ;;		Unchanged: 0/0
  9331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9336 ;;Total ram usage:        0 bytes
  9337 ;; Hardware stack levels used:    1
  9338 ;; Hardware stack levels required when called:    1
  9339 ;; This function calls:
  9340 ;;		Nothing
  9341 ;; This function is called by:
  9342 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9343 ;; This function uses a non-reentrant model
  9344 ;;
  9345                           
  9346                           
  9347                           ;psect for function _APP_DeviceAudioMIDISOFHandler
  9348  08E6                     _APP_DeviceAudioMIDISOFHandler:	
  9349                           
  9350                           ;app_device_audio_midi.c: 54: if(msCounter != 0) msCounter--;
  9351                           
  9352                           ;incstack = 0
  9353                           ; Regs used in _APP_DeviceAudioMIDISOFHandler: [wreg+status,2+status,0]
  9354  08E6  0021               	movlb	1	; select bank1
  9355  08E7  0865               	movf	_msCounter^(0+128),w
  9356  08E8  1903               	btfsc	3,2
  9357  08E9  0008               	return
  9358  08EA  3001               	movlw	1
  9359  08EB  02E5               	subwf	_msCounter^(0+128),f
  9360  08EC  0008               	return
  9361  08ED                     __end_of_APP_DeviceAudioMIDISOFHandler:	
  9362                           
  9363                           	psect	text41
  9364  0BAD                     __ptext41:	
  9365 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  9366 ;; Defined at:
  9367 ;;		line 24 in file "../src/app_led_usb_status.c"
  9368 ;; Parameters:    Size  Location     Type
  9369 ;;		None
  9370 ;; Auto vars:     Size  Location     Type
  9371 ;;		None
  9372 ;; Return value:  Size  Location     Type
  9373 ;;		None               void
  9374 ;; Registers used:
  9375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9376 ;; Tracked objects:
  9377 ;;		On entry : 0/0
  9378 ;;		On exit  : 0/0
  9379 ;;		Unchanged: 0/0
  9380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9385 ;;Total ram usage:        0 bytes
  9386 ;; Hardware stack levels used:    1
  9387 ;; Hardware stack levels required when called:    2
  9388 ;; This function calls:
  9389 ;;		_LED_Off
  9390 ;;		_LED_On
  9391 ;; This function is called by:
  9392 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9393 ;; This function uses a non-reentrant model
  9394 ;;
  9395                           
  9396                           
  9397                           ;psect for function _APP_LEDUpdateUSBStatus
  9398  0BAD                     _APP_LEDUpdateUSBStatus:	
  9399                           
  9400                           ;app_led_usb_status.c: 25: static uint16_t ledCount = 0;
  9401                           ;app_led_usb_status.c: 27: if(UCONbits.SUSPND == 1)
  9402                           
  9403                           ;incstack = 0
  9404                           ; Regs used in _APP_LEDUpdateUSBStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9405  0BAD  003D               	movlb	29	; select bank29
  9406  0BAE  1C8E               	btfss	14,1	;volatile
  9407  0BAF  2BF0               	goto	l2838
  9408                           
  9409                           ;app_led_usb_status.c: 28: {
  9410                           ;app_led_usb_status.c: 29: LED_Off(LED_D1);
  9411  0BB0  3001               	movlw	1
  9412  0BB1  3189  2199         	fcall	_LED_Off
  9413                           
  9414                           ;app_led_usb_status.c: 30: return;
  9415  0BB3  0008               	return
  9416  0BB4                     l2812:	
  9417                           ;app_led_usb_status.c: 34: {
  9418                           ;app_led_usb_status.c: 35: case CONFIGURED_STATE:
  9419                           
  9420                           ;app_led_usb_status.c: 31: }
  9421                           ;app_led_usb_status.c: 33: switch(USBDeviceState)
  9422                           
  9423                           
  9424                           ;app_led_usb_status.c: 38: if(ledCount == 1)
  9425  0BB4  3001               	movlw	1
  9426  0BB5  0021               	movlb	1	; select bank1
  9427  0BB6  0660               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  9428  0BB7  0461               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  9429  0BB8  1D03               	skipz
  9430  0BB9  2BBF               	goto	l2816
  9431                           
  9432                           ;app_led_usb_status.c: 39: {
  9433                           ;app_led_usb_status.c: 40: LED_On(LED_D1);
  9434  0BBA  3001               	movlw	1
  9435  0BBB  3189  21B2  318B   	fcall	_LED_On
  9436                           
  9437                           ;app_led_usb_status.c: 41: }
  9438  0BBE  2BF6               	goto	l2840
  9439  0BBF                     l2816:	
  9440                           
  9441                           ;app_led_usb_status.c: 42: else if(ledCount == 75)
  9442  0BBF  304B               	movlw	75
  9443  0BC0  0021               	movlb	1	; select bank1
  9444  0BC1  0660               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  9445  0BC2  0461               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  9446  0BC3  1D03               	skipz
  9447  0BC4  2BCA               	goto	l2820
  9448                           
  9449                           ;app_led_usb_status.c: 43: {
  9450                           ;app_led_usb_status.c: 44: LED_Off(LED_D1);
  9451  0BC5  3001               	movlw	1
  9452  0BC6  3189  2199  318B   	fcall	_LED_Off
  9453                           
  9454                           ;app_led_usb_status.c: 45: }
  9455  0BC9  2BF6               	goto	l2840
  9456  0BCA                     l2820:	
  9457                           
  9458                           ;app_led_usb_status.c: 46: else if(ledCount > 150)
  9459  0BCA  3000               	movlw	0
  9460  0BCB  0021               	movlb	1	; select bank1
  9461  0BCC  0261               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  9462  0BCD  3097               	movlw	151
  9463  0BCE  2BE9               	goto	L16
  9464  0BCF                     l2824:	
  9465                           ;app_led_usb_status.c: 52: default:
  9466                           
  9467                           ;app_led_usb_status.c: 49: }
  9468                           ;app_led_usb_status.c: 50: break;
  9469                           
  9470                           ;app_led_usb_status.c: 47: {
  9471                           ;app_led_usb_status.c: 48: ledCount = 0;
  9472                           
  9473                           
  9474                           ;app_led_usb_status.c: 55: if(ledCount == 1)
  9475  0BCF  3001               	movlw	1
  9476  0BD0  0021               	movlb	1	; select bank1
  9477  0BD1  0660               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  9478  0BD2  0461               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  9479  0BD3  1D03               	skipz
  9480  0BD4  2BDA               	goto	l2828
  9481                           
  9482                           ;app_led_usb_status.c: 56: {
  9483                           ;app_led_usb_status.c: 57: LED_On(LED_D1);
  9484  0BD5  3001               	movlw	1
  9485  0BD6  3189  21B2  318B   	fcall	_LED_On
  9486                           
  9487                           ;app_led_usb_status.c: 58: }
  9488  0BD9  2BF6               	goto	l2840
  9489  0BDA                     l2828:	
  9490                           
  9491                           ;app_led_usb_status.c: 59: else if(ledCount == 50)
  9492  0BDA  3032               	movlw	50
  9493  0BDB  0021               	movlb	1	; select bank1
  9494  0BDC  0660               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  9495  0BDD  0461               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  9496  0BDE  1D03               	skipz
  9497  0BDF  2BE5               	goto	l2832
  9498                           
  9499                           ;app_led_usb_status.c: 60: {
  9500                           ;app_led_usb_status.c: 61: LED_Off(LED_D1);
  9501  0BE0  3001               	movlw	1
  9502  0BE1  3189  2199  318B   	fcall	_LED_Off
  9503                           
  9504                           ;app_led_usb_status.c: 62: }
  9505  0BE4  2BF6               	goto	l2840
  9506  0BE5                     l2832:	
  9507                           
  9508                           ;app_led_usb_status.c: 63: else if(ledCount > 950)
  9509  0BE5  3003               	movlw	3
  9510  0BE6  0021               	movlb	1	; select bank1
  9511  0BE7  0261               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  9512  0BE8  30B7               	movlw	183
  9513  0BE9                     L16:	
  9514  0BE9  1903               	skipnz
  9515  0BEA  0260               	subwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  9516  0BEB  1C03               	skipc
  9517  0BEC  2BF6               	goto	l2840
  9518                           
  9519                           ;app_led_usb_status.c: 64: {
  9520                           ;app_led_usb_status.c: 65: ledCount = 0;
  9521  0BED  01E0               	clrf	APP_LEDUpdateUSBStatus@ledCount^(0+128)
  9522  0BEE  01E1               	clrf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128)
  9523                           
  9524                           ;app_led_usb_status.c: 68: }
  9525                           
  9526                           ;app_led_usb_status.c: 66: }
  9527                           ;app_led_usb_status.c: 67: break;
  9528  0BEF  2BF6               	goto	l2840
  9529  0BF0                     l2838:	
  9530  0BF0  0020               	movlb	0	; select bank0
  9531  0BF1  086D               	movf	_USBDeviceState,w
  9532                           
  9533                           ; Switch size 1, requested type "space"
  9534                           ; Number of cases is 1, Range of values is 32 to 32
  9535                           ; switch strategies available:
  9536                           ; Name         Instructions Cycles
  9537                           ; simple_byte            4     3 (average)
  9538                           ; direct_byte           11     9 (fixed)
  9539                           ; jumptable            263     9 (fixed)
  9540                           ;	Chosen strategy is simple_byte
  9541  0BF2  3A20               	xorlw	32	; case 32
  9542  0BF3  1903               	skipnz
  9543  0BF4  2BB4               	goto	l2812
  9544  0BF5  2BCF               	goto	l2824
  9545  0BF6                     l2840:	
  9546                           
  9547                           ;app_led_usb_status.c: 71: ledCount++;
  9548  0BF6  3001               	movlw	1
  9549  0BF7  0021               	movlb	1	; select bank1
  9550  0BF8  07E0               	addwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),f
  9551  0BF9  3000               	movlw	0
  9552  0BFA  3DE1               	addwfc	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),f
  9553  0BFB  0008               	return
  9554  0BFC                     __end_of_APP_LEDUpdateUSBStatus:	
  9555                           
  9556                           	psect	text42
  9557  09B2                     __ptext42:	
  9558 ;; *************** function _LED_On *****************
  9559 ;; Defined at:
  9560 ;;		line 60 in file "../bsp/pic16f1459/leds.c"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;  led             1    wreg     enum E2
  9563 ;; Auto vars:     Size  Location     Type
  9564 ;;  led             1    1[COMMON] enum E2
  9565 ;; Return value:  Size  Location     Type
  9566 ;;		None               void
  9567 ;; Registers used:
  9568 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9569 ;; Tracked objects:
  9570 ;;		On entry : 0/0
  9571 ;;		On exit  : 0/0
  9572 ;;		Unchanged: 0/0
  9573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9575 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9577 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9578 ;;Total ram usage:        1 bytes
  9579 ;; Hardware stack levels used:    1
  9580 ;; Hardware stack levels required when called:    1
  9581 ;; This function calls:
  9582 ;;		Nothing
  9583 ;; This function is called by:
  9584 ;;		_APP_LEDUpdateUSBStatus
  9585 ;;		_process_level
  9586 ;; This function uses a non-reentrant model
  9587 ;;
  9588                           
  9589                           
  9590                           ;psect for function _LED_On
  9591  09B2                     _LED_On:	
  9592                           
  9593                           ;incstack = 0
  9594                           ; Regs used in _LED_On: [wreg-fsr0h+status,2+status,0]
  9595                           ;LED_On@led stored from wreg
  9596  09B2  00F1               	movwf	LED_On@led
  9597                           
  9598                           ;leds.c: 61: switch(led)
  9599  09B3  29C0               	goto	l2856
  9600  09B4                     l364:	
  9601                           ;leds.c: 62: {
  9602                           ;leds.c: 63: case LED_D1:
  9603                           
  9604                           
  9605                           ;leds.c: 64: LATCbits.LATC2 = 1;
  9606  09B4  0022               	movlb	2	; select bank2
  9607  09B5  150E               	bsf	14,2	;volatile
  9608                           
  9609                           ;leds.c: 65: break;
  9610  09B6  0008               	return
  9611  09B7                     l366:	
  9612                           ;leds.c: 67: case LED_D2:
  9613                           
  9614                           
  9615                           ;leds.c: 68: LATCbits.LATC1 = 1;
  9616  09B7  0022               	movlb	2	; select bank2
  9617  09B8  148E               	bsf	14,1	;volatile
  9618                           
  9619                           ;leds.c: 69: break;
  9620  09B9  0008               	return
  9621  09BA                     l367:	
  9622                           ;leds.c: 71: case LED_D3:
  9623                           
  9624                           
  9625                           ;leds.c: 72: LATCbits.LATC2 = 1;
  9626  09BA  0022               	movlb	2	; select bank2
  9627  09BB  150E               	bsf	14,2	;volatile
  9628                           
  9629                           ;leds.c: 73: break;
  9630  09BC  0008               	return
  9631  09BD                     l368:	
  9632                           ;leds.c: 75: case LED_D4:
  9633                           
  9634                           
  9635                           ;leds.c: 76: LATCbits.LATC3 = 1;
  9636  09BD  0022               	movlb	2	; select bank2
  9637  09BE  158E               	bsf	14,3	;volatile
  9638                           
  9639                           ;leds.c: 81: }
  9640                           
  9641                           ;leds.c: 80: break;
  9642                           
  9643                           ;leds.c: 79: case LED_NONE:
  9644                           
  9645                           ;leds.c: 77: break;
  9646  09BF  0008               	return
  9647  09C0                     l2856:	
  9648  09C0  0871               	movf	LED_On@led,w
  9649                           
  9650                           ; Switch size 1, requested type "space"
  9651                           ; Number of cases is 5, Range of values is 0 to 4
  9652                           ; switch strategies available:
  9653                           ; Name         Instructions Cycles
  9654                           ; direct_byte           16     6 (fixed)
  9655                           ; simple_byte           16     9 (average)
  9656                           ; jumptable            260     6 (fixed)
  9657                           ; rangetable             9     4 (fixed)
  9658                           ; spacedrange           15     6 (fixed)
  9659                           ; locatedrange           5     3 (fixed)
  9660                           ;	Chosen strategy is direct_byte
  9661  09C1  0084               	movwf	4
  9662  09C2  3005               	movlw	5
  9663  09C3  0204               	subwf	4,w
  9664  09C4  1803               	skipnc
  9665  09C5  0008               	return
  9666  09C6  3188               	movlp	high S4774
  9667  09C7  3504               	lslf	4,w
  9668  09C8  3E26               	addlw	low S4774
  9669  09C9  0082               	movwf	2
  9670  09CA                     l370:	
  9671  09CA  0008               	return
  9672  09CB                     __end_of_LED_On:	
  9673                           
  9674                           	psect	swtext3
  9675  0826                     __pswtext3:	
  9676  0826                     S4774:	
  9677  0826  3189  29CA         	ljmp	l370
  9678  0828  3189  29B4         	ljmp	l364
  9679  082A  3189  29B7         	ljmp	l366
  9680  082C  3189  29BA         	ljmp	l367
  9681  082E  3189  29BD         	ljmp	l368
  9682                           
  9683                           	psect	text43
  9684  0999                     __ptext43:	
  9685 ;; *************** function _LED_Off *****************
  9686 ;; Defined at:
  9687 ;;		line 101 in file "../bsp/pic16f1459/leds.c"
  9688 ;; Parameters:    Size  Location     Type
  9689 ;;  led             1    wreg     enum E2
  9690 ;; Auto vars:     Size  Location     Type
  9691 ;;  led             1    1[COMMON] enum E2
  9692 ;; Return value:  Size  Location     Type
  9693 ;;		None               void
  9694 ;; Registers used:
  9695 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9696 ;; Tracked objects:
  9697 ;;		On entry : 0/0
  9698 ;;		On exit  : 0/0
  9699 ;;		Unchanged: 0/0
  9700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9702 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9704 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9705 ;;Total ram usage:        1 bytes
  9706 ;; Hardware stack levels used:    1
  9707 ;; Hardware stack levels required when called:    1
  9708 ;; This function calls:
  9709 ;;		Nothing
  9710 ;; This function is called by:
  9711 ;;		_APP_LEDUpdateUSBStatus
  9712 ;;		_process_level
  9713 ;; This function uses a non-reentrant model
  9714 ;;
  9715                           
  9716                           
  9717                           ;psect for function _LED_Off
  9718  0999                     _LED_Off:	
  9719                           
  9720                           ;incstack = 0
  9721                           ; Regs used in _LED_Off: [wreg-fsr0h+status,2+status,0]
  9722                           ;LED_Off@led stored from wreg
  9723  0999  00F1               	movwf	LED_Off@led
  9724                           
  9725                           ;leds.c: 102: switch(led)
  9726  099A  29A7               	goto	l2846
  9727  099B                     l374:	
  9728                           ;leds.c: 103: {
  9729                           ;leds.c: 104: case LED_D1:
  9730                           
  9731                           
  9732                           ;leds.c: 105: LATCbits.LATC2 = 0;
  9733  099B  0022               	movlb	2	; select bank2
  9734  099C  110E               	bcf	14,2	;volatile
  9735                           
  9736                           ;leds.c: 106: break;
  9737  099D  0008               	return
  9738  099E                     l376:	
  9739                           ;leds.c: 108: case LED_D2:
  9740                           
  9741                           
  9742                           ;leds.c: 109: LATCbits.LATC1 = 0;
  9743  099E  0022               	movlb	2	; select bank2
  9744  099F  108E               	bcf	14,1	;volatile
  9745                           
  9746                           ;leds.c: 110: break;
  9747  09A0  0008               	return
  9748  09A1                     l377:	
  9749                           ;leds.c: 112: case LED_D3:
  9750                           
  9751                           
  9752                           ;leds.c: 113: LATCbits.LATC2 = 0;
  9753  09A1  0022               	movlb	2	; select bank2
  9754  09A2  110E               	bcf	14,2	;volatile
  9755                           
  9756                           ;leds.c: 114: break;
  9757  09A3  0008               	return
  9758  09A4                     l378:	
  9759                           ;leds.c: 116: case LED_D4:
  9760                           
  9761                           
  9762                           ;leds.c: 117: LATCbits.LATC3 = 0;
  9763  09A4  0022               	movlb	2	; select bank2
  9764  09A5  118E               	bcf	14,3	;volatile
  9765                           
  9766                           ;leds.c: 122: }
  9767                           
  9768                           ;leds.c: 121: break;
  9769                           
  9770                           ;leds.c: 120: case LED_NONE:
  9771                           
  9772                           ;leds.c: 118: break;
  9773  09A6  0008               	return
  9774  09A7                     l2846:	
  9775  09A7  0871               	movf	LED_Off@led,w
  9776                           
  9777                           ; Switch size 1, requested type "space"
  9778                           ; Number of cases is 5, Range of values is 0 to 4
  9779                           ; switch strategies available:
  9780                           ; Name         Instructions Cycles
  9781                           ; direct_byte           16     6 (fixed)
  9782                           ; simple_byte           16     9 (average)
  9783                           ; jumptable            260     6 (fixed)
  9784                           ; rangetable             9     4 (fixed)
  9785                           ; spacedrange           15     6 (fixed)
  9786                           ; locatedrange           5     3 (fixed)
  9787                           ;	Chosen strategy is direct_byte
  9788  09A8  0084               	movwf	4
  9789  09A9  3005               	movlw	5
  9790  09AA  0204               	subwf	4,w
  9791  09AB  1803               	skipnc
  9792  09AC  0008               	return
  9793  09AD  3188               	movlp	high S4776
  9794  09AE  3504               	lslf	4,w
  9795  09AF  3E30               	addlw	low S4776
  9796  09B0  0082               	movwf	2
  9797  09B1                     l380:	
  9798  09B1  0008               	return
  9799  09B2                     __end_of_LED_Off:	
  9800                           
  9801                           	psect	swtext4
  9802  0830                     __pswtext4:	
  9803  0830                     S4776:	
  9804  0830  3189  29B1         	ljmp	l380
  9805  0832  3189  299B         	ljmp	l374
  9806  0834  3189  299E         	ljmp	l376
  9807  0836  3189  29A1         	ljmp	l377
  9808  0838  3189  29A4         	ljmp	l378
  9809                           
  9810                           	psect	text44
  9811  05C4                     __ptext44:	
  9812 ;; *************** function _USBDeviceInit *****************
  9813 ;; Defined at:
  9814 ;;		line 301 in file "../framework/usb/usb_device.c"
  9815 ;; Parameters:    Size  Location     Type
  9816 ;;		None
  9817 ;; Auto vars:     Size  Location     Type
  9818 ;;  p               2    3[COMMON] PTR unsigned char 
  9819 ;;		 -> UEP1(1), 
  9820 ;;  i               1    5[COMMON] unsigned char 
  9821 ;;  i               1    6[COMMON] unsigned char 
  9822 ;; Return value:  Size  Location     Type
  9823 ;;		None               void
  9824 ;; Registers used:
  9825 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9826 ;; Tracked objects:
  9827 ;;		On entry : 0/0
  9828 ;;		On exit  : 0/0
  9829 ;;		Unchanged: 0/0
  9830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9832 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9834 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9835 ;;Total ram usage:        6 bytes
  9836 ;; Hardware stack levels used:    1
  9837 ;; Hardware stack levels required when called:    1
  9838 ;; This function calls:
  9839 ;;		Nothing
  9840 ;; This function is called by:
  9841 ;;		_main
  9842 ;;		_USBDeviceTasks
  9843 ;; This function uses a non-reentrant model
  9844 ;;
  9845                           
  9846                           
  9847                           ;psect for function _USBDeviceInit
  9848  05C4                     _USBDeviceInit:	
  9849                           
  9850                           ;usb_device.c: 302: uint8_t i;
  9851                           ;usb_device.c: 304: {PIE2bits.USBIE = 0;};
  9852                           
  9853                           ;incstack = 0
  9854                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  9855  05C4  0021               	movlb	1	; select bank1
  9856  05C5  1112               	bcf	18,2	;volatile
  9857                           
  9858                           ;usb_device.c: 307: {UEIR = 0;};
  9859  05C6  003D               	movlb	29	; select bank29
  9860  05C7  0193               	clrf	19	;volatile
  9861                           
  9862                           ;usb_device.c: 310: {UIR = 0;};
  9863  05C8  0190               	clrf	16	;volatile
  9864                           
  9865                           ;usb_device.c: 313: UEP0 = 0;
  9866  05C9  0198               	clrf	24	;volatile
  9867                           
  9868                           ;usb_device.c: 315: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 0
      +                          ; };
  9869  05CA  300E               	movlw	14
  9870  05CB  00F4               	movwf	USBDeviceInit@p+1
  9871  05CC  3099               	movlw	153
  9872  05CD  00F3               	movwf	USBDeviceInit@p
  9873  05CE  01F5               	clrf	USBDeviceInit@i_1702
  9874  05CF  0875               	movf	USBDeviceInit@i_1702,w
  9875  05D0  1D03               	skipz
  9876  05D1  2DE2               	goto	l2894
  9877  05D2                     l2886:	
  9878  05D2  0873               	movf	USBDeviceInit@p,w
  9879  05D3  0086               	movwf	6
  9880  05D4  0874               	movf	USBDeviceInit@p+1,w
  9881  05D5  0087               	movwf	7
  9882  05D6  0181               	clrf	1
  9883  05D7  3001               	movlw	1
  9884  05D8  07F3               	addwf	USBDeviceInit@p,f
  9885  05D9  3000               	movlw	0
  9886  05DA  3DF4               	addwfc	USBDeviceInit@p+1,f
  9887  05DB  3001               	movlw	1
  9888  05DC  00F1               	movwf	??_USBDeviceInit
  9889  05DD  0871               	movf	??_USBDeviceInit,w
  9890  05DE  07F5               	addwf	USBDeviceInit@i_1702,f
  9891  05DF  0875               	movf	USBDeviceInit@i_1702,w
  9892  05E0  1903               	btfsc	3,2
  9893  05E1  2DD2               	goto	l2886
  9894  05E2                     l2894:	
  9895                           
  9896                           ;usb_device.c: 317: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  9897  05E2  3016               	movlw	22
  9898  05E3  003D               	movlb	29	; select bank29
  9899  05E4  0091               	movwf	17	;volatile
  9900  05E5  309F               	movlw	159
  9901  05E6  0097               	movwf	23	;volatile
  9902  05E7  307B               	movlw	123
  9903  05E8  0092               	movwf	18	;volatile
  9904                           
  9905                           ;usb_device.c: 320: ;
  9906                           ;usb_device.c: 323: ;
  9907                           ;usb_device.c: 326: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  9908  05E9  01F6               	clrf	USBDeviceInit@i
  9909  05EA  3008               	movlw	8
  9910  05EB  0276               	subwf	USBDeviceInit@i,w
  9911  05EC  1803               	btfsc	3,0
  9912  05ED  2E07               	goto	l571
  9913  05EE                     l2902:	
  9914                           
  9915                           ;usb_device.c: 327: {
  9916                           ;usb_device.c: 328: BDT[i].Val = 0x00;
  9917  05EE  0876               	movf	USBDeviceInit@i,w
  9918  05EF  00F1               	movwf	??_USBDeviceInit
  9919  05F0  3001               	movlw	1
  9920  05F1                     u1925:	
  9921  05F1  35F1               	lslf	??_USBDeviceInit,f
  9922  05F2  3EFF               	addlw	-1
  9923  05F3  1D03               	skipz
  9924  05F4  2DF1               	goto	u1925
  9925  05F5  3571               	lslf	??_USBDeviceInit,w
  9926  05F6  3E20               	addlw	32
  9927  05F7  0086               	movwf	6
  9928  05F8  0187               	clrf	7
  9929  05F9  3000               	movlw	0
  9930  05FA  3FC0               	movwi [0]fsr1
  9931  05FB  3000               	movlw	0
  9932  05FC  3FC1               	movwi [1]fsr1
  9933  05FD  3FC2               	movwi [2]fsr1
  9934  05FE  3FC3               	movwi [3]fsr1
  9935  05FF  3001               	movlw	1
  9936  0600  00F1               	movwf	??_USBDeviceInit
  9937  0601  0871               	movf	??_USBDeviceInit,w
  9938  0602  07F6               	addwf	USBDeviceInit@i,f
  9939  0603  3008               	movlw	8
  9940  0604  0276               	subwf	USBDeviceInit@i,w
  9941  0605  1C03               	skipc
  9942  0606  2DEE               	goto	l2902
  9943  0607                     l571:	
  9944                           
  9945                           ;usb_device.c: 329: }
  9946                           ;usb_device.c: 332: UCONbits.PPBRST = 1;
  9947  0607  003D               	movlb	29	; select bank29
  9948  0608  170E               	bsf	14,6	;volatile
  9949                           
  9950                           ;usb_device.c: 335: UADDR = 0x00;
  9951  0609  0196               	clrf	22	;volatile
  9952                           
  9953                           ;usb_device.c: 338: UCONbits.PKTDIS = 0;
  9954  060A  120E               	bcf	14,4	;volatile
  9955                           
  9956                           ;usb_device.c: 341: UCONbits.PPBRST = 0;
  9957  060B  130E               	bcf	14,6	;volatile
  9958  060C                     l2914:	
  9959                           ;usb_device.c: 344: do
  9960                           
  9961                           
  9962                           ;usb_device.c: 345: {
  9963                           ;usb_device.c: 346: (UIR &= 0xF7);
  9964  060C  30F7               	movlw	247
  9965  060D  00F1               	movwf	??_USBDeviceInit
  9966  060E  0871               	movf	??_USBDeviceInit,w
  9967  060F  0590               	andwf	16,f	;volatile
  9968                           
  9969                           ;usb_device.c: 348: inPipes[0].info.Val = 0;
  9970  0610  0021               	movlb	1	; select bank1
  9971  0611  01EB               	clrf	(_inPipes^(0+128)+2)
  9972                           
  9973                           ;usb_device.c: 349: outPipes[0].info.Val = 0;
  9974  0612  0022               	movlb	2	; select bank2
  9975  0613  01C9               	clrf	(_outPipes^(0+256)+2)
  9976                           
  9977                           ;usb_device.c: 350: outPipes[0].wCount.Val = 0;
  9978  0614  01CA               	clrf	(_outPipes^(0+256)+3)
  9979  0615  01CB               	clrf	((_outPipes+1)^(0+256)+3)
  9980                           
  9981                           ;usb_device.c: 351: }while(UIRbits.TRNIF == 1);
  9982  0616  003D               	movlb	29	; select bank29
  9983  0617  1990               	btfsc	16,3	;volatile
  9984  0618  2E0C               	goto	l2914
  9985                           
  9986                           ;usb_device.c: 355: USBStatusStageEnabledFlag1 = 1;
  9987  0619  3001               	movlw	1
  9988  061A  00F1               	movwf	??_USBDeviceInit
  9989  061B  0871               	movf	??_USBDeviceInit,w
  9990  061C  0022               	movlb	2	; select bank2
  9991  061D  00DF               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  9992                           
  9993                           ;usb_device.c: 356: USBStatusStageEnabledFlag2 = 1;
  9994  061E  3001               	movlw	1
  9995  061F  00F1               	movwf	??_USBDeviceInit
  9996  0620  0871               	movf	??_USBDeviceInit,w
  9997  0621  00E0               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  9998                           
  9999                           ;usb_device.c: 358: USBDeferINDataStagePackets = 0;
 10000  0622  01DC               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 10001                           
 10002                           ;usb_device.c: 359: USBDeferOUTDataStagePackets = 0;
 10003  0623  01DD               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 10004                           
 10005                           ;usb_device.c: 360: USBBusIsSuspended = 0;
 10006  0624  01DB               	clrf	_USBBusIsSuspended^(0+256)
 10007                           
 10008                           ;usb_device.c: 364: for(i = 0; i < (uint8_t)(1+1u); i++)
 10009  0625  01F6               	clrf	USBDeviceInit@i
 10010  0626  3002               	movlw	2
 10011  0627  0276               	subwf	USBDeviceInit@i,w
 10012  0628  1803               	btfsc	3,0
 10013  0629  2E49               	goto	l2942
 10014  062A                     l2936:	
 10015                           
 10016                           ;usb_device.c: 365: {
 10017                           ;usb_device.c: 366: pBDTEntryIn[i] = 0u;
 10018  062A  0876               	movf	USBDeviceInit@i,w
 10019  062B  3E6B               	addlw	_pBDTEntryIn& (0+255)
 10020  062C  0086               	movwf	6
 10021  062D  0187               	clrf	7
 10022  062E  0181               	clrf	1
 10023                           
 10024                           ;usb_device.c: 367: pBDTEntryOut[i] = 0u;
 10025  062F  0876               	movf	USBDeviceInit@i,w
 10026  0630  3E57               	addlw	_pBDTEntryOut& (0+255)
 10027  0631  0086               	movwf	6
 10028  0632  3001               	movlw	1	; select bank2/3
 10029  0633  0087               	movwf	7
 10030  0634  0181               	clrf	1
 10031                           
 10032                           ;usb_device.c: 368: ep_data_in[i].Val = 0u;
 10033  0635  0876               	movf	USBDeviceInit@i,w
 10034  0636  3E51               	addlw	_ep_data_in& (0+255)
 10035  0637  0086               	movwf	6
 10036  0638  3001               	movlw	1	; select bank2/3
 10037  0639  0087               	movwf	7
 10038  063A  0181               	clrf	1
 10039                           
 10040                           ;usb_device.c: 369: ep_data_out[i].Val = 0u;
 10041  063B  0876               	movf	USBDeviceInit@i,w
 10042  063C  3E53               	addlw	_ep_data_out& (0+255)
 10043  063D  0086               	movwf	6
 10044  063E  3001               	movlw	1	; select bank2/3
 10045  063F  0087               	movwf	7
 10046  0640  0181               	clrf	1
 10047  0641  3001               	movlw	1
 10048  0642  00F1               	movwf	??_USBDeviceInit
 10049  0643  0871               	movf	??_USBDeviceInit,w
 10050  0644  07F6               	addwf	USBDeviceInit@i,f
 10051  0645  3002               	movlw	2
 10052  0646  0276               	subwf	USBDeviceInit@i,w
 10053  0647  1C03               	skipc
 10054  0648  2E2A               	goto	l2936
 10055  0649                     l2942:	
 10056                           
 10057                           ;usb_device.c: 370: }
 10058                           ;usb_device.c: 373: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10059  0649  3028               	movlw	40
 10060  064A  00F1               	movwf	??_USBDeviceInit
 10061  064B  0871               	movf	??_USBDeviceInit,w
 10062  064C  0020               	movlb	0	; select bank0
 10063  064D  00EB               	movwf	_pBDTEntryIn
 10064                           
 10065                           ;usb_device.c: 375: UEP0 = 0x06|0x10;
 10066  064E  3016               	movlw	22
 10067  064F  003D               	movlb	29	; select bank29
 10068  0650  0098               	movwf	24	;volatile
 10069                           
 10070                           ;usb_device.c: 377: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10071  0651  3040               	movlw	64
 10072  0652  00F1               	movwf	??_USBDeviceInit
 10073  0653  3000               	movlw	0
 10074  0654  00F2               	movwf	??_USBDeviceInit+1
 10075  0655  0871               	movf	??_USBDeviceInit,w
 10076  0656  0020               	movlb	0	; select bank0
 10077  0657  00A2               	movwf	34	;volatile
 10078  0658  0872               	movf	??_USBDeviceInit+1,w
 10079  0659  00A3               	movwf	35	;volatile
 10080                           
 10081                           ;usb_device.c: 378: BDT[0].CNT = 8;
 10082  065A  3008               	movlw	8
 10083  065B  00A1               	movwf	33	;volatile
 10084                           
 10085                           ;usb_device.c: 379: BDT[0].STAT.Val = 0x00|0x04;
 10086  065C  3004               	movlw	4
 10087  065D  00F1               	movwf	??_USBDeviceInit
 10088  065E  0871               	movf	??_USBDeviceInit,w
 10089  065F  00A0               	movwf	32	;volatile
 10090                           
 10091                           ;usb_device.c: 380: BDT[0].STAT.Val |= 0x80;
 10092  0660  17A0               	bsf	32,7	;volatile
 10093                           
 10094                           ;usb_device.c: 383: USBActiveConfiguration = 0;
 10095  0661  0021               	movlb	1	; select bank1
 10096  0662  01EE               	clrf	_USBActiveConfiguration^(0+128)
 10097                           
 10098                           ;usb_device.c: 385: USB1msTickCount = 0;
 10099  0663  3000               	movlw	0
 10100  0664  0022               	movlb	2	; select bank2
 10101  0665  00D0               	movwf	(_USB1msTickCount+3)^(0+256)
 10102  0666  3000               	movlw	0
 10103  0667  00CF               	movwf	(_USB1msTickCount+2)^(0+256)
 10104  0668  3000               	movlw	0
 10105  0669  00CE               	movwf	(_USB1msTickCount+1)^(0+256)
 10106  066A  3000               	movlw	0
 10107  066B  00CD               	movwf	_USB1msTickCount^(0+256)
 10108                           
 10109                           ;usb_device.c: 386: USBTicksSinceSuspendEnd = 0;
 10110  066C  01E2               	clrf	_USBTicksSinceSuspendEnd^(0+256)
 10111                           
 10112                           ;usb_device.c: 389: USBDeviceState = DETACHED_STATE;
 10113  066D  0020               	movlb	0	; select bank0
 10114  066E  01ED               	clrf	_USBDeviceState
 10115  066F  0008               	return
 10116  0670                     __end_of_USBDeviceInit:	
 10117                           
 10118                           	psect	text45
 10119  09E5                     __ptext45:	
 10120 ;; *************** function _SYSTEM_Initialize *****************
 10121 ;; Defined at:
 10122 ;;		line 87 in file "../src/pic16f1459/system.c"
 10123 ;; Parameters:    Size  Location     Type
 10124 ;;  state           1    wreg     enum E2634
 10125 ;; Auto vars:     Size  Location     Type
 10126 ;;  state           1    2[COMMON] enum E2634
 10127 ;; Return value:  Size  Location     Type
 10128 ;;		None               void
 10129 ;; Registers used:
 10130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10131 ;; Tracked objects:
 10132 ;;		On entry : 0/0
 10133 ;;		On exit  : 0/0
 10134 ;;		Unchanged: 0/0
 10135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10137 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10139 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10140 ;;Total ram usage:        1 bytes
 10141 ;; Hardware stack levels used:    1
 10142 ;; Hardware stack levels required when called:    2
 10143 ;; This function calls:
 10144 ;;		_LED_Enable
 10145 ;;		_BUTTON_Enable
 10146 ;; This function is called by:
 10147 ;;		_main
 10148 ;; This function uses a non-reentrant model
 10149 ;;
 10150                           
 10151                           
 10152                           ;psect for function _SYSTEM_Initialize
 10153  09E5                     _SYSTEM_Initialize:	
 10154                           
 10155                           ;incstack = 0
 10156                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10157                           ;SYSTEM_Initialize@state stored from wreg
 10158  09E5  00F2               	movwf	SYSTEM_Initialize@state
 10159                           
 10160                           ;system.c: 88: switch(state)
 10161  09E6  29F5               	goto	l2788
 10162  09E7                     l2780:	
 10163                           ;system.c: 89: {
 10164                           ;system.c: 90: case SYSTEM_STATE_USB_START:
 10165                           
 10166                           
 10167                           ;system.c: 94: OSCCON = 0xFC;
 10168  09E7  30FC               	movlw	252
 10169  09E8  0021               	movlb	1	; select bank1
 10170  09E9  0099               	movwf	25	;volatile
 10171                           
 10172                           ;system.c: 95: ACTCON = 0x90;
 10173  09EA  3090               	movlw	144
 10174  09EB  0027               	movlb	7	; select bank7
 10175  09EC  009B               	movwf	27	;volatile
 10176                           
 10177                           ;system.c: 97: LED_Enable(LED_D1);
 10178  09ED  3001               	movlw	1
 10179  09EE  3189  2180  3189   	fcall	_LED_Enable
 10180                           
 10181                           ;system.c: 99: BUTTON_Enable(BUTTON_S1);
 10182  09F1  3001               	movlw	1
 10183  09F2  3188  20F4         	fcall	_BUTTON_Enable
 10184                           
 10185                           ;system.c: 107: }
 10186                           
 10187                           ;system.c: 106: break;
 10188                           
 10189                           ;system.c: 105: case SYSTEM_STATE_USB_RESUME:
 10190                           
 10191                           ;system.c: 103: break;
 10192                           
 10193                           ;system.c: 102: case SYSTEM_STATE_USB_SUSPEND:
 10194                           
 10195                           ;system.c: 100: break;
 10196  09F4  0008               	return
 10197  09F5                     l2788:	
 10198  09F5  0872               	movf	SYSTEM_Initialize@state,w
 10199                           
 10200                           ; Switch size 1, requested type "space"
 10201                           ; Number of cases is 3, Range of values is 0 to 2
 10202                           ; switch strategies available:
 10203                           ; Name         Instructions Cycles
 10204                           ; simple_byte           10     6 (average)
 10205                           ; direct_byte           12     6 (fixed)
 10206                           ; jumptable            260     6 (fixed)
 10207                           ; rangetable             7     4 (fixed)
 10208                           ; spacedrange           11     6 (fixed)
 10209                           ; locatedrange           3     3 (fixed)
 10210                           ;	Chosen strategy is simple_byte
 10211  09F6  3A00               	xorlw	0	; case 0
 10212  09F7  1903               	skipnz
 10213  09F8  29E7               	goto	l2780
 10214  09F9  3A01               	xorlw	1	; case 1
 10215  09FA  1903               	skipnz
 10216  09FB  2A00               	goto	l16
 10217  09FC  3A03               	xorlw	3	; case 2
 10218  09FD  1903               	skipnz
 10219  09FE  2A00               	goto	l16
 10220  09FF  2A00               	goto	l16
 10221  0A00                     l16:	
 10222  0A00  0008               	return
 10223  0A01                     __end_of_SYSTEM_Initialize:	
 10224                           
 10225                           	psect	text46
 10226  08F4                     __ptext46:	
 10227 ;; *************** function _BUTTON_Enable *****************
 10228 ;; Defined at:
 10229 ;;		line 86 in file "../bsp/pic16f1459/buttons.c"
 10230 ;; Parameters:    Size  Location     Type
 10231 ;;  button          1    wreg     enum E2603
 10232 ;; Auto vars:     Size  Location     Type
 10233 ;;  button          1    1[COMMON] enum E2603
 10234 ;; Return value:  Size  Location     Type
 10235 ;;		None               void
 10236 ;; Registers used:
 10237 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10238 ;; Tracked objects:
 10239 ;;		On entry : 0/0
 10240 ;;		On exit  : 0/0
 10241 ;;		Unchanged: 0/0
 10242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10244 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10246 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10247 ;;Total ram usage:        1 bytes
 10248 ;; Hardware stack levels used:    1
 10249 ;; Hardware stack levels required when called:    1
 10250 ;; This function calls:
 10251 ;;		Nothing
 10252 ;; This function is called by:
 10253 ;;		_SYSTEM_Initialize
 10254 ;; This function uses a non-reentrant model
 10255 ;;
 10256                           
 10257                           
 10258                           ;psect for function _BUTTON_Enable
 10259  08F4                     _BUTTON_Enable:	
 10260                           
 10261                           ;incstack = 0
 10262                           ; Regs used in _BUTTON_Enable: [wreg-fsr0h+status,2+status,0]
 10263                           ;BUTTON_Enable@button stored from wreg
 10264  08F4  00F1               	movwf	BUTTON_Enable@button
 10265                           
 10266                           ;buttons.c: 94: }
 10267                           
 10268                           ;buttons.c: 93: break;
 10269                           
 10270                           ;buttons.c: 92: case BUTTON_NONE:
 10271                           
 10272                           ;buttons.c: 90: break;
 10273                           
 10274                           ;buttons.c: 88: {
 10275                           ;buttons.c: 89: case BUTTON_S1:
 10276                           
 10277                           ;buttons.c: 87: switch(button)
 10278  08F5  0871               	movf	BUTTON_Enable@button,w
 10279                           
 10280                           ; Switch size 1, requested type "space"
 10281                           ; Number of cases is 2, Range of values is 0 to 1
 10282                           ; switch strategies available:
 10283                           ; Name         Instructions Cycles
 10284                           ; simple_byte            7     4 (average)
 10285                           ; direct_byte           10     6 (fixed)
 10286                           ; jumptable            260     6 (fixed)
 10287                           ; rangetable             6     4 (fixed)
 10288                           ; spacedrange            9     6 (fixed)
 10289                           ; locatedrange           2     3 (fixed)
 10290                           ;	Chosen strategy is simple_byte
 10291  08F6  3A00               	xorlw	0	; case 0
 10292  08F7  1903               	skipnz
 10293  08F8  28FD               	goto	l309
 10294  08F9  3A01               	xorlw	1	; case 1
 10295  08FA  1903               	skipnz
 10296  08FB  28FD               	goto	l309
 10297  08FC  28FD               	goto	l309
 10298  08FD                     l309:	
 10299  08FD  0008               	return
 10300  08FE                     __end_of_BUTTON_Enable:	
 10301                           
 10302                           	psect	text47
 10303  0980                     __ptext47:	
 10304 ;; *************** function _LED_Enable *****************
 10305 ;; Defined at:
 10306 ;;		line 221 in file "../bsp/pic16f1459/leds.c"
 10307 ;; Parameters:    Size  Location     Type
 10308 ;;  led             1    wreg     enum E2
 10309 ;; Auto vars:     Size  Location     Type
 10310 ;;  led             1    1[COMMON] enum E2
 10311 ;; Return value:  Size  Location     Type
 10312 ;;		None               void
 10313 ;; Registers used:
 10314 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10315 ;; Tracked objects:
 10316 ;;		On entry : 0/0
 10317 ;;		On exit  : 0/0
 10318 ;;		Unchanged: 0/0
 10319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10323 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10324 ;;Total ram usage:        1 bytes
 10325 ;; Hardware stack levels used:    1
 10326 ;; Hardware stack levels required when called:    1
 10327 ;; This function calls:
 10328 ;;		Nothing
 10329 ;; This function is called by:
 10330 ;;		_SYSTEM_Initialize
 10331 ;; This function uses a non-reentrant model
 10332 ;;
 10333                           
 10334                           
 10335                           ;psect for function _LED_Enable
 10336  0980                     _LED_Enable:	
 10337                           
 10338                           ;incstack = 0
 10339                           ; Regs used in _LED_Enable: [wreg-fsr0h+status,2+status,0]
 10340                           ;LED_Enable@led stored from wreg
 10341  0980  00F1               	movwf	LED_Enable@led
 10342                           
 10343                           ;leds.c: 222: switch(led)
 10344  0981  298E               	goto	l2794
 10345  0982                     l404:	
 10346                           ;leds.c: 223: {
 10347                           ;leds.c: 224: case LED_D1:
 10348                           
 10349                           
 10350                           ;leds.c: 225: TRISCbits.TRISC2 = 0;
 10351  0982  0021               	movlb	1	; select bank1
 10352  0983  110E               	bcf	14,2	;volatile
 10353                           
 10354                           ;leds.c: 226: break;
 10355  0984  0008               	return
 10356  0985                     l406:	
 10357                           ;leds.c: 228: case LED_D2:
 10358                           
 10359                           
 10360                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
 10361  0985  0021               	movlb	1	; select bank1
 10362  0986  108E               	bcf	14,1	;volatile
 10363                           
 10364                           ;leds.c: 230: break;
 10365  0987  0008               	return
 10366  0988                     l407:	
 10367                           ;leds.c: 232: case LED_D3:
 10368                           
 10369                           
 10370                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
 10371  0988  0021               	movlb	1	; select bank1
 10372  0989  110E               	bcf	14,2	;volatile
 10373                           
 10374                           ;leds.c: 234: break;
 10375  098A  0008               	return
 10376  098B                     l408:	
 10377                           ;leds.c: 236: case LED_D4:
 10378                           
 10379                           
 10380                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
 10381  098B  0021               	movlb	1	; select bank1
 10382  098C  118E               	bcf	14,3	;volatile
 10383                           
 10384                           ;leds.c: 242: }
 10385                           
 10386                           ;leds.c: 241: break;
 10387                           
 10388                           ;leds.c: 240: case LED_NONE:
 10389                           
 10390                           ;leds.c: 238: break;
 10391  098D  0008               	return
 10392  098E                     l2794:	
 10393  098E  0871               	movf	LED_Enable@led,w
 10394                           
 10395                           ; Switch size 1, requested type "space"
 10396                           ; Number of cases is 5, Range of values is 0 to 4
 10397                           ; switch strategies available:
 10398                           ; Name         Instructions Cycles
 10399                           ; direct_byte           16     6 (fixed)
 10400                           ; simple_byte           16     9 (average)
 10401                           ; jumptable            260     6 (fixed)
 10402                           ; rangetable             9     4 (fixed)
 10403                           ; spacedrange           15     6 (fixed)
 10404                           ; locatedrange           5     3 (fixed)
 10405                           ;	Chosen strategy is direct_byte
 10406  098F  0084               	movwf	4
 10407  0990  3005               	movlw	5
 10408  0991  0204               	subwf	4,w
 10409  0992  1803               	skipnc
 10410  0993  0008               	return
 10411  0994  3188               	movlp	high S4778
 10412  0995  3504               	lslf	4,w
 10413  0996  3E3A               	addlw	low S4778
 10414  0997  0082               	movwf	2
 10415  0998                     l410:	
 10416  0998  0008               	return
 10417  0999                     __end_of_LED_Enable:	
 10418                           
 10419                           	psect	swtext5
 10420  083A                     __pswtext5:	
 10421  083A                     S4778:	
 10422  083A  3189  2998         	ljmp	l410
 10423  083C  3189  2982         	ljmp	l404
 10424  083E  3189  2985         	ljmp	l406
 10425  0840  3189  2988         	ljmp	l407
 10426  0842  3189  298B         	ljmp	l408
 10427                           
 10428                           	psect	intentry
 10429  0004                     __pintentry:	
 10430 ;; *************** function _SYS_InterruptHigh *****************
 10431 ;; Defined at:
 10432 ;;		line 113 in file "../src/pic16f1459/system.c"
 10433 ;; Parameters:    Size  Location     Type
 10434 ;;		None
 10435 ;; Auto vars:     Size  Location     Type
 10436 ;;		None
 10437 ;; Return value:  Size  Location     Type
 10438 ;;		None               void
 10439 ;; Registers used:
 10440 ;;		None
 10441 ;; Tracked objects:
 10442 ;;		On entry : 0/0
 10443 ;;		On exit  : 0/0
 10444 ;;		Unchanged: 0/0
 10445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10448 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10449 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10450 ;;Total ram usage:        1 bytes
 10451 ;; Hardware stack levels used:    1
 10452 ;; This function calls:
 10453 ;;		Nothing
 10454 ;; This function is called by:
 10455 ;;		Interrupt level 1
 10456 ;; This function uses a non-reentrant model
 10457 ;;
 10458                           
 10459  0004                     _SYS_InterruptHigh:	
 10460                           
 10461                           ;incstack = 0
 10462                           ; Regs used in _SYS_InterruptHigh: []
 10463  0004  3180               	pagesel	$
 10464  0005  0020               	movlb	0	; select bank0
 10465  0006  087F               	movf	127,w
 10466  0007  00F0               	movwf	??_SYS_InterruptHigh
 10467  0008  0870               	movf	??_SYS_InterruptHigh,w
 10468  0009  00FF               	movwf	127
 10469  000A  0009               	retfie
 10470  000B                     __end_of_SYS_InterruptHigh:	
 10471  007E                     btemp	set	126	;btemp
 10472  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    252
    Data        0
    BSS         213
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            32     27      32
    BANK1            16      0      16
    BANK2            80      0      74
    BANK3            76      0      39
    BANK4            80      0      78
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ?_memset	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(1) Largest target is 32
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK1[1]), BDT(BANK0[32]), NULL(NULL[0]), 

    ?_USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    memset@p1	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    memset@p	PTR unsigned char  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITSFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    sp__memset	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(BITSFR29[1]), 

    pDst	PTR unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> midiData(BANK3[4]), ReceivedDataBuffer(BANK1[64]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITSFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    S1167$pFunc	PTR FTN()void  size(1) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(1) Largest target is 0

    S1157$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S1157$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S1133$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S1133$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S1133$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S1133$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(BITSFR29[1]), 

    scan_task@velocity	PTR unsigned char  size(1) Largest target is 1
		 -> APP_DeviceAudioMIDITasks@velocity(BANK0[1]), 

    scan_task@note	PTR unsigned char  size(1) Largest target is 1
		 -> APP_DeviceAudioMIDITasks@scan_pitch(BANK0[1]), 

    sp__USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBRxHandle	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBTxHandle	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[26]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 101
		 -> configDescriptor1(CODE[101]), 


Critical Paths under _main in COMMON

    _APP_DeviceAudioMIDITasks->_scan_task
    _scan_task->_store_key_level
    _store_key_level->_process_level
    _process_level->_LED_Off
    _process_level->_LED_On
    _USBDeviceTasks->_USBWakeFromSuspend
    _USBDeviceTasks->_USBSuspend
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCheckStdRequest->_USBStdSetCfgHandler
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _APP_DeviceAudioMIDIInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _SYSTEM_Initialize->_LED_Enable
    _SYSTEM_Initialize->_BUTTON_Enable

Critical Paths under _SYS_InterruptHigh in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_APP_DeviceAudioMIDITasks
    _APP_DeviceAudioMIDITasks->_scan_task
    _store_key_level->_process_level
    _USBDeviceTasks->_USBCtrlEPService
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_APP_DeviceAudioMIDIInitialize
    _APP_DeviceAudioMIDIInitialize->_USBEnableEndpoint

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8893
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
           _APP_DeviceAudioMIDITasks
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceAudioMIDITasks                            10    10      0    1376
                                             17 BANK0     10    10      0
               _USBTransferOnePacket
                          _scan_task
                   _BUTTON_IsPressed
 ---------------------------------------------------------------------------------
 (2) _BUTTON_IsPressed                                     1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _scan_task                                            7     6      1     852
                                             11 COMMON     1     1      0
                                             11 BANK0      6     5      1
                          _scan_init
                          _set_timer
                  _waiting_for_timer
                 _set_clock_and_data
                           _get_data
                     _is_end_of_scan
                            _run_adc
                       _is_adc_ready
                            _get_adc
                    _store_key_level
 ---------------------------------------------------------------------------------
 (3) _store_key_level                                      4     3      1     625
                                              7 COMMON     4     3      1
                     _is_end_of_scan (ARG)
                            _get_adc (ARG)
                      _process_level
 ---------------------------------------------------------------------------------
 (4) _process_level                                       16    14      2     559
                                              2 COMMON     5     3      2
                                              0 BANK0     11    11      0
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (3) _get_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _is_adc_ready                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _run_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _is_end_of_scan                                       3     3      0      23
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _get_data                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _set_clock_and_data                                   3     2      1      44
                                              1 COMMON     3     2      1
                           _get_data (ARG)
 ---------------------------------------------------------------------------------
 (3) _waiting_for_timer                                    1     1      0      24
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _set_timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _scan_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       3     3      0    7179
                                             22 BANK0      3     3      0
                      _USBDeviceInit
    _USER_USB_CALLBACK_EVENT_HANDLER
                 _USBWakeFromSuspend
                         _USBSuspend
      _USBIncrement1msInternalTimers
          _USBCtrlEPAllowStatusStage
                    _USBStallHandler
                   _USBCtrlEPService
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     4     4      0    4487
                                             18 BANK0      4     4      0
             _USBCtrlTrfSetupHandler
               _USBCtrlTrfOutHandler
                _USBCtrlTrfInHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  3     3      0     115
                                              4 COMMON     3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 2     2      0     114
                                              7 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  4     4      0     114
                                              3 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               1     1      0    4159
                                             17 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCtrlEPServiceComplete
                 _USBCheckStdRequest
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   1     1      0    3283
                                             16 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                _USBStdSetCfgHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
            _USBStdFeatureReqHandler
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0    1338
                                             10 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               2     2      0      46
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  3     3      0       0
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  5     5      0    1115
                                             11 COMMON     1     1      0
                                             10 BANK0      4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               7     3      4      96
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             2     2      0      92
                                              6 COMMON     2     2      0
          _USBCtrlEPAllowStatusStage
            _USBCtrlEPAllowDataStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              4 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfTxService                                  3     3      0      92
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           1     1      0     784
                                             11 COMMON     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   1     1      0     784
                                             11 COMMON     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      5     0      5     784
                                              5 BANK0      5     0      5
             _APP_LEDUpdateUSBStatus
      _APP_DeviceAudioMIDISOFHandler
      _APP_DeviceAudioMIDIInitialize
 ---------------------------------------------------------------------------------
 (7) _APP_DeviceAudioMIDIInitialize                        2     2      0     709
                                              3 BANK0      2     2      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _USBTransferOnePacket                                 8     4      4     332
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) _USBEnableEndpoint                                    6     5      1     377
                                              8 COMMON     3     2      1
                                              0 BANK0      3     3      0
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (9) _USBConfigureEndpoint                                 7     6      1     222
                                              1 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (7) _APP_DeviceAudioMIDISOFHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _APP_LEDUpdateUSBStatus                               0     0      0      44
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (5) _LED_On                                               1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _LED_Off                                              1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        6     6      0     272
                                              1 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      66
                                              2 COMMON     1     1      0
                         _LED_Enable
                      _BUTTON_Enable
 ---------------------------------------------------------------------------------
 (2) _BUTTON_Enable                                        1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SYS_InterruptHigh                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _LED_Enable
     _BUTTON_Enable
   _USBDeviceInit
   _USBDeviceTasks
     _USBDeviceInit
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On
       _APP_DeviceAudioMIDISOFHandler
       _APP_DeviceAudioMIDIInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _APP_DeviceAudioMIDISOFHandler
         _APP_DeviceAudioMIDIInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _APP_DeviceAudioMIDISOFHandler
         _APP_DeviceAudioMIDIInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
     _USBIncrement1msInternalTimers
     _USBCtrlEPAllowStatusStage
     _USBStallHandler
     _USBCtrlEPService
       _USBCtrlTrfSetupHandler
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
           _APP_DeviceAudioMIDISOFHandler
           _APP_DeviceAudioMIDIInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
         _USBCheckStdRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
             _APP_DeviceAudioMIDISOFHandler
             _APP_DeviceAudioMIDIInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _APP_DeviceAudioMIDISOFHandler
               _APP_DeviceAudioMIDIInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
             _memset
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _APP_DeviceAudioMIDISOFHandler
               _APP_DeviceAudioMIDIInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
   _APP_DeviceAudioMIDITasks
     _USBTransferOnePacket
     _scan_task
       _scan_init
       _set_timer
       _waiting_for_timer
       _set_clock_and_data
         _get_data (ARG)
       _get_data
       _is_end_of_scan
       _run_adc
       _is_adc_ready
       _get_adc
       _store_key_level
         _is_end_of_scan (ARG)
         _get_adc (ARG)
         _process_level (ARG)
           _LED_Off
           _LED_On
     _BUTTON_IsPressed

 _SYS_InterruptHigh (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       9       3        0.0%
BITBANK0            20      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               20     1B      20       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10      0      10       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4A       9       92.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            4C      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               4C      0      27      11       51.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4E      13       97.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      FC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     105      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Fri May 20 15:12:49 2016

                              _USB_SD_Ptr 0328                                         pc 0002  
                             __CFG_CP$OFF 0000                                        l16 0A00  
                                      l88 0B6D                               ?_LED_Enable 0070  
                           _USBDeviceInit 05C4      USER_USB_CALLBACK_EVENT_HANDLER@event 0055  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 0057                                       l410 0998  
                                     l404 0982                                       l309 08FD  
                                     l406 0985               __end_of_USBStdGetDscHandler 0F7F  
                                     l407 0988                                       l408 098B  
                                     l370 09CA                                       l380 09B1  
                                     l364 09B4                                       l374 099B  
                                     l366 09B7                                       l367 09BA  
                                     l376 099E                                       l368 09BD  
                                     l720 0C0E                                       l800 01B4  
                                     l377 09A1                                       l801 01B5  
                                     l378 09A4                                       l650 02A0  
                                     l571 0607                                       l715 0C01  
                                     l813 021D                                       l718 0C3E  
                                     l582 040A                                       l663 0E3E  
                                     l719 0C0B                                       l584 040E  
                                     l762 0DCF                                       l588 0434  
                                     _BDT 0020                                       l765 0E13  
                                     l597 0492                                       l678 0731  
                                     l598 04E8                                       l777 0CF0  
                                     l779 0CA3                                       l788 0CCD  
                                     _UIE 0E92                                       _UIR 0E90  
                  _APP_LEDUpdateUSBStatus 0BAD                                _USBSuspend 0950  
                    USBStdSetCfgHandler@i 005D                      USBStdSetCfgHandler@p 005A  
                             _USBRxHandle 015E                              __CFG_BORV$LO 0000  
                                     wreg 0009                            _USBDeviceTasks 03FD  
                          _USBDeviceState 006D                               _USBTxHandle 00E3  
                           _BUTTON_Enable 08F4                                      S4774 0826  
                                    S4766 081A                                      S4776 0830  
                                    S4768 0800                                      S4778 083A  
                   ??_USBCtrlTrfRxService 0073                  USBEnableEndpoint@options 0078  
                            __CFG_LVP$OFF 0000                           __end_of_LED_Off 09B2  
                                    l3100 0086                                      l3110 00A7  
                                    l3112 00AA                                      l3202 0A70  
                                    l3210 0C54                                      l3300 092E  
                                    l3132 0105                                      l3124 00EB  
                                    l3230 0C90                                      l3150 0140  
                                    l3134 0108                                      l3080 0027  
                                    l4200 0941                                      l3218 0C62  
                                    l3410 0568                                      l3250 068D  
                                    l3306 0930                                      l3082 002A  
                                    l3420 059D                                      l3260 06A9  
                                    l3244 0685                                      l3308 0938  
              USBConfigureEndpoint@handle 0077                                      l3350 0911  
                                    l3422 05A8                                      l3430 05B9  
                                    l3086 0040                                      l4240 0421  
                                    l3408 0567                                      l3272 06D5  
                                    l3264 06BC                                      l3256 069A  
                                    l4410 0EBE                                      l3442 0B2E  
                                    l3274 06DC                                      l3282 06F8  
                                    l2820 0BCA                                      l2812 0BB4  
                                    l4340 0B42                                      l4332 0B36  
                                    l3604 0D18                                      l4420 0EF2  
                                    l4324 04CC                                      l4308 0498  
                                    l4260 0444                                      l4228 0411  
                                    l3428 05B6                                      l3444 0B2F  
                                    l3268 06CD                                      l3284 0703  
                                    l2902 05EE                                      l3198 0A68  
                                    l3526 0A58                                      l4510 0CAB  
                                    l4422 0EF5                                      l4326 04DC  
                                    l4318 04B3                                      l3278 06ED  
                                    l2832 0BE5                                      l2824 0BCF  
                                    l2840 0BF6                                      l2816 0BBF  
                                    l4336 0B3C                                      l4344 0B45  
                                    l3528 0A5A                                      l3624 0E36  
                                    l3608 0D2C                                      l4512 0CAE  
                                    l3720 0751                                      l4416 0EE3  
                                    l4280 046B                                      l4272 045C  
                                    l4248 042E                                      l3392 0524  
                                    l3296 0929                                      l2914 060C  
                                    l4338 0B3F                                      l4442 0F9A  
                                    l4434 0F8A                                      l4522 0CBB  
                                    l4514 0CB1                                      l4290 0478  
                                    l4266 044A                                      l2780 09E7  
                                    l2828 0BDA                                      l3636 0E56  
                                    l3644 0E6F                                      l4452 0FAE  
                                    l3804 0F0B                                      l4620 0241  
                                    l4524 0CBE                                      l4540 0CE5  
                                    l4284 0471                                      l2942 0649  
                                    l2846 09A7                                      l2838 0BF0  
                                    l3574 0B9B                                      l3646 0E73  
                                    l3654 0E8C                                      l3670 0275  
                                    l3822 0F6C                                      l3814 0F48  
                                    l3806 0F15                                      l4622 0249  
                                    l4606 020C                                      l4526 0CC1  
                                    l3734 07B0                                      l3726 077F  
                                    l3718 0739                                      l3910 0DCA  
                                    l2936 062A                                      l2856 09C0  
                                    l4376 02F6                                      l3824 0F6F  
                                    l3816 0F4B                                      l4616 0223  
                                    l4608 0211                                      l4536 0CD9  
                                    l3728 078B                                      l3920 0DF6  
                                    l2794 098E                                      l4378 02FD  
                                    l3498 0D6D                                      l3666 0271  
                                    l4474 0FEB                                      l4458 0FC2  
                                    l3842 0C1A                                      l3930 0E1C  
                                    l4298 048B                                      l2788 09F5  
                                    l3828 0F72                                      l3852 0C32  
                                    l4580 01C0                                      l4572 019A  
                                    l4556 016C                                      l3932 0E1D  
                                    l3924 0E06                                      l2894 05E2  
                                    l2886 05D2                                      l3678 02AD  
                                    l3686 02B7                                      l4590 01D8  
                                    l4558 016E                                      l4592 01DF  
                                    l4770 0B4E                                      l3890 0ADF  
                                    l4772 0B68                                      l4596 01E8  
                                    l3798 0A06                                      l3896 0B04  
                                    u3065 072B                                      u3175 0A10  
                                    u2560 0572                                      u2570 057F  
                                    u2562 0573                                      u2572 0580  
                                    u1925 05F1                                      u2805 0B7C  
                                    u2815 0B84                                      u2925 0D21  
                                    u2795 0B76                                      u3845 0E9F  
                   ??_USBCtrlTrfTxService 0071                                      _UCFG 0E91  
                                    _UEP0 0E98                                      _UEP1 0E99  
                                    _UEIE 0E97                                      _UEIR 0E93  
                                    _UCON 0E8E                                      _TMR0 0015  
                            __CFG_WRT$OFF 0000    USBStdFeatureReqHandler@current_ep_data 005E  
                                    _pDst 0165                                      _main 093A  
                                    fsr0h 0005                                      fsr1h 0007  
                                    fsr0l 0004                                      indf0 0000  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                                    start 000B                             __CFG_IESO$OFF 0000  
              process_level@current_state 0052                      process_level@idx_key 005A  
              __end_of_USBCheckStdRequest 0CF1                    ??_USBCtrlTrfOutHandler 0077  
                           __CFG_MCLRE$ON 0000                       USBDeviceInit@i_1702 0075  
               ??_USBStdFeatureReqHandler 005A                      process_level@on_flag 0058  
                ??_USBStdGetStatusHandler 0071                            ?_USBDeviceInit 0070  
             process_level@key_on_counter 0247                                     ?_main 0070  
                           __CFG_WDTE$OFF 0000         __size_of_USBCtrlEPServiceComplete 0086  
                  __end_of_USBDeviceTasks 04EB                 ?_USBCtrlEPServiceComplete 0070  
                                   _UADDR 0E96                                     _RCREG 0199  
                                   _RCSTA 019D                                     _USTAT 0E8F  
                                   _TXREG 019A                                     _TXSTA 019E  
      __size_of_USBCtrlEPAllowStatusStage 0069                            __CFG_FCMEN$OFF 0000  
                          ?_BUTTON_Enable 0070                           __end_of_get_adc 08DC  
         __end_of_USBCtrlEPAllowDataStage 0D48                                     _sd000 03F9  
                                   _sd001 0399                                     _sd002 03CD  
          ?_USBIncrement1msInternalTimers 0070                             ?_is_adc_ready 0070  
   __end_of_APP_DeviceAudioMIDIInitialize 0AD7    __size_of_APP_DeviceAudioMIDIInitialize 002B  
           _APP_DeviceAudioMIDIInitialize 0AAC                           _store_key_level 0B06  
             __size_of_set_clock_and_data 001A                                     _pitch 00E6  
               __size_of_BUTTON_IsPressed 0013                           ??_process_level 0074  
                     __size_of_LED_Enable 0019                           __end_of_run_adc 08F4  
      APP_DeviceAudioMIDITasks@scan_pitch 0069                                     status 0003  
                                   wtemp0 007E              __size_of_USBStdSetCfgHandler 0081  
                   process_level@off_flag 0056                           __initialization 0A84  
              is_end_of_scan@scan_counter 0168                              __end_of_main 0950  
              ??_APP_DeviceAudioMIDITasks 0061                            __CFG_LPBOR$OFF 0000  
                           scan_task@note 0060                 __size_of_USBCtrlEPService 0070  
                                  ??_main 007C                           ?_USBDeviceTasks 0070  
   __end_ofprocess_level@key_on_threshold 0333             process_level@key_on_threshold 0332  
                             ?_USBSuspend 0070                                 ??_LED_Off 0071  
                     __CFG_USBLSCLK$48MHz 0000                            ??_is_adc_ready 0071  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _ADCON2 009F                                    _ACTCON 039B  
                                  _ADRESH 009C                                    _ADRESL 009B  
                                  _ANSELA 018C                    SYSTEM_Initialize@state 0072  
                                  _LED_On 09B2                       set_clock_and_data@c 0073  
                     set_clock_and_data@d 0071                                    _OSCCON 0099  
                          __CFG_PWRTE$OFF 0000                         _shortPacketStatus 00E7  
                        __end_of_get_data 08E1                           USBDeviceTasks@i 0068  
             USBStdFeatureReqHandler@pUEP 005C                  USBTransferOnePacket@data 0072  
              USBCtrlTrfInHandler@lastDTS 0076                           ??_USBDeviceInit 0071  
                          __CFG_STVREN$ON 0000                         _USBEnableEndpoint 0A5F  
         __size_of_USBStdGetStatusHandler 004F                                    _memset 0A01  
                      ?_USBEnableEndpoint 0078                                 ??_get_adc 0071  
                 __end_of_store_key_level 0B35             __size_of_USBTransferOnePacket 0050  
                         ??_BUTTON_Enable 0071                       ??_USBEnableEndpoint 0079  
                          process_level@L 0330                                 ??_run_adc 0071  
                             _CtrlTrfData 0048                   __size_of_is_end_of_scan 0013  
                    _controlTransferState 00E4                         _SYSTEM_Initialize 09E5  
                 __end_of__initialization 0AA9                        ?_SYSTEM_Initialize 0070  
                __size_of_USBStallHandler 0024                       __size_of_USBSuspend 0018  
                          __pcstackCOMMON 0070                 __end_of_USBEnableEndpoint 0A84  
            _APP_DeviceAudioMIDITasks$421 0063              _APP_DeviceAudioMIDITasks$462 0065  
            _APP_DeviceAudioMIDITasks$463 0067                             __end_of_sd000 03FD  
                           __end_of_sd001 03CD                             __end_of_sd002 03E7  
                     ??_SYSTEM_Initialize 0072                                 LED_On@led 0071  
        __size_of_USBCtrlEPAllowDataStage 0057                                _adc_levels 0220  
                  process_level@old_level 0072                    process_level@new_level 0073  
                            ??_LED_Enable 0071             __size_of_USBConfigureEndpoint 003F  
                  process_level@old_state 0050               __end_of_USBCtrlTrfInHandler 0E20  
                 ?_APP_LEDUpdateUSBStatus 0070                    store_key_level@idx_key 00E8  
                  __end_ofprocess_level@L 0331                            _OPTION_REGbits 0095  
                          scan_task@state 0169                store_key_level@end_of_scan 0077  
                ??_USBCtrlTrfSetupHandler 0061                   _USBTicksSinceSuspendEnd 0162  
               __end_of_SYSTEM_Initialize 0A01                          _BUTTON_IsPressed 0927  
                  _USBStdGetStatusHandler 0BFC                                __pbssBANK0 006B  
                              __pbssBANK1 00E0                                __pbssBANK2 0120  
                              __pbssBANK3 01A4                                __pbssBANK4 0220  
                                 ?_LED_On 0070                        __end_of_LED_Enable 0999  
                    store_key_level@level 007A               __size_of_USBWakeFromSuspend 001C  
                             _pBDTEntryIn 006B          __end_of_USBCtrlEPServiceComplete 02E4  
                      __size_of_scan_init 001D                                __pmaintext 093A  
                      __size_of_scan_task 00AB                      USBCtrlTrfRxService@i 0075  
                    __end_of_is_adc_ready 08E6                             LED_Enable@led 0071  
                         __CFG_PLLMULT$3x 0000            __end_of_APP_LEDUpdateUSBStatus 0BFC  
                              __pintentry 0004                                   _BAUDCON 019F  
                                 ?_memset 0071                                _device_dsc 03E7  
                        _USBCtrlEPService 0E90                                _ep_data_in 0151  
                      __size_of_set_timer 000B               __end_of_USBCtrlTrfRxService 07B8  
                      _USBCheckStdRequest 0C9B                          ?_store_key_level 0077  
                       _configDescriptor1 0334                         scan_task@velocity 005B  
                                 _LED_Off 0999               __end_of_USBCtrlTrfTxService 0E90  
                     _USBStdSetCfgHandler 0F7F                                 ?_get_data 0070  
                     ?_USBCheckStdRequest 0070              __size_of_USBStdGetDscHandler 007F  
                                 _UIEbits 0E92                                __stringtab 0300  
                                 _UIRbits 0E90                           __size_of_LED_On 0019  
                       is_end_of_scan@res 0073            APP_LEDUpdateUSBStatus@ledCount 00E0  
         ??_USBIncrement1msInternalTimers 0071                      ?_USBStdSetCfgHandler 0070  
              __size_of_USBEnableEndpoint 0025                      ??_USBCheckStdRequest 0060  
           __size_of_USBCtrlTrfOutHandler 002F                          ??_USBDeviceTasks 0066  
                       ??_USBStallHandler 0071                           __size_of_memset 001D  
               __end_of_configDescriptor1 0399                                   __ptext1 000D  
                                 __ptext2 0927                                   __ptext3 0670  
                                 __ptext4 0B06                                   __ptext5 04EB  
                                 __ptext6 08D9                                   __ptext7 08E1  
                                 __ptext8 08ED                                   __ptext9 0914  
                                 _inPipes 00E9                                   _get_adc 08D9  
             _USBDeferOUTDataStagePackets 015D                              ??_USBSuspend 007B  
                           _scan_task$870 005E                             _scan_task$869 005C  
              __end_of_set_clock_and_data 09E5                         __end_of_scan_init 0A3B  
                       __end_of_scan_task 071B                                   _run_adc 08ED  
                      __end_of_USB_CD_Ptr 0330                                ??_get_data 0071  
              __size_of_SYSTEM_Initialize 001C           __size_of_USBCtrlTrfSetupHandler 0042  
                                 clrloop0 07FB                            _is_end_of_scan 0914  
                    end_of_initialization 0AA9                        __end_of_USB_SD_Ptr 032E  
                     _pBDTEntryEP0OutNext 007C                                   memset@c 0071  
                                 memset@n 0073                                   memset@p 0077  
                   __end_of_process_level 05C4                           _USB1msTickCount 014D  
                ?_USBStdFeatureReqHandler 0070                         __end_of_set_timer 0909  
                   ??_USBStdSetCfgHandler 007B                                _note_event 0155  
                      __end_of_USBSuspend 0968                   _USBCtrlEPAllowDataStage 0CF1  
                               _RCSTAbits 019D                              __pstringtext 0300  
                _USBCtrlEPServiceComplete 025E                                _wait_timer 0167  
              _USBStatusStageEnabledFlag1 015F                _USBStatusStageEnabledFlag2 0160  
                      USBEnableEndpoint@p 0050                                 _PORTAbits 000C  
          ?_APP_DeviceAudioMIDISOFHandler 0070                          __CFG_FOSC$INTOSC 0000  
                               _TRISAbits 008C                                 _TRISBbits 008D  
                               _TRISCbits 008E                        _ReceivedDataBuffer 00A0  
                  __end_of_is_end_of_scan 0927                        _BothEP0OutUOWNsSet 0159  
               USBStdSetCfgHandler@i_2030 005C                 USBConfigureEndpoint@EPNum 0076  
       __size_of_APP_DeviceAudioMIDITasks 014A                ?_USBCtrlEPAllowStatusStage 0070  
               ?_APP_DeviceAudioMIDITasks 0070       USER_USB_CALLBACK_EVENT_HANDLER@size 0058  
                               _USTATcopy 006F              __end_of_USBTransferOnePacket 0C9B  
                          __end_of_LED_On 09CB                     __size_of_is_adc_ready 0005  
                 process_level@midi_shift 0333               process_level@filtered_state 0059  
                      __CFG_PLLEN$ENABLED 0000                    _USBCtrlTrfSetupHandler 07B8  
                 process_level@key_states 0120                  __end_of_BUTTON_IsPressed 093A  
                   __end_of_USBDeviceInit 0670     __end_of_USBIncrement1msInternalTimers 0980  
  __size_of_USBIncrement1msInternalTimers 0018             _USBIncrement1msInternalTimers 0968  
                              LED_Off@led 0071                            __end_of_memset 0A1E  
                       _USBBusIsSuspended 015B                       start_initialization 0A84  
                 ?_USBStdGetStatusHandler 0070                     __end_of_BUTTON_Enable 08FE  
           USBCtrlTrfRxService@byteToRead 0076                           ?_is_end_of_scan 0070  
                          _is_initialized 0164                              _is_adc_ready 08E1  
            __end_of_USBConfigureEndpoint 0BAD           __end_of_USBStdFeatureReqHandler 025E  
                                ??_LED_On 0071         __end_of_USBCtrlEPAllowStatusStage 0DB1  
                __end_of_USBCtrlEPService 0F00                 ??_USBCtrlEPAllowDataStage 0074  
                          USBDeviceInit@i 0076                            USBDeviceInit@p 0073  
                  _pBDTEntryEP0OutCurrent 006E                   USBTransferOnePacket@dir 0071  
                 USBTransferOnePacket@len 0074                       _USBStdGetDscHandler 0F00  
                                ??_memset 0075    __end_ofprocess_level@key_off_threshold 0332  
          process_level@key_off_threshold 0331                    BUTTON_IsPressed@button 0071  
                  _USBActiveConfiguration 00EE            __end_of_USBStdGetStatusHandler 0C4B  
               process_level@idx_midi_map 0301                     _waiting_for_timer$821 0071  
                                ?_LED_Off 0070                               __pbssCOMMON 007C  
                           __pcstackBANK0 0050              __size_of_USBCtrlTrfInHandler 006F  
                    ?_USBStdGetDscHandler 0070                         __size_of_get_data 0005  
              __end_of_USBWakeFromSuspend 0300                           _USBStallHandler 0A3B  
                            _pBDTEntryOut 0157            ?_APP_DeviceAudioMIDIInitialize 0070  
                               __pswtext1 081A                                 __pswtext2 0800  
                               __pswtext3 0826                                 __pswtext4 0830  
                               __pswtext5 083A                                  ?_get_adc 0070  
                    _USBTransferOnePacket 0C4B                                 _msCounter 00E5  
            process_level@key_off_counter 01A4              __end_of_USBCtrlTrfOutHandler 0B06  
                   ??_USBStdGetDscHandler 0071                               _ep_data_out 0153  
                                ?_run_adc 0070              __size_of_USBCtrlTrfRxService 009D  
           USBConfigureEndpoint@direction 0071                  __size_of_store_key_level 002F  
                               _scan_init 0A1E                                 _scan_task 0670  
            __size_of_USBCtrlTrfTxService 0070                                  _LATCbits 010E  
              ??_USBCtrlEPServiceComplete 0076                                 clear_ram0 07FA  
                      _set_clock_and_data 09CB                                  _PIE1bits 0091  
                                _PIE2bits 0092                         _waiting_for_timer 0909  
                                _PIR2bits 0012                 USBCtrlEPService@setup_cnt 0065  
                      ?_waiting_for_timer 0070                                 _set_timer 08FE  
                                _UEP0bits 0E98                _USBDeferINDataStagePackets 015C  
             __size_of_USBCheckStdRequest 0056                       ?_set_clock_and_data 0071  
                                _UCONbits 0E8E                      _USBConfigureEndpoint 0B6E  
         __end_ofprocess_level@midi_shift 0334          __size_of_USBStdFeatureReqHandler 0107  
        __end_of_APP_DeviceAudioMIDITasks 0157                       ??_waiting_for_timer 0071  
                              _ADCON0bits 009D                                _ADCON1bits 009E  
                              _ADCON2bits 009F                     ?_USBTransferOnePacket 0071  
                       _SYS_InterruptHigh 0004                              _RemoteWakeup 015A  
                        __size_of_LED_Off 0019                        ?_SYS_InterruptHigh 0070  
                 __end_of_USBStallHandler 0A5F                         _process_level$858 0057  
                       _process_level$859 0054                      ??_set_clock_and_data 0072  
             ??_USBCtrlEPAllowStatusStage 0071               __end_of_USBStdSetCfgHandler 1000  
                              ?_scan_init 0070                                ?_scan_task 005B  
                     ??_SYS_InterruptHigh 0070                 __end_of_waiting_for_timer 0914  
         ??_APP_DeviceAudioMIDISOFHandler 0071                        __end_of_device_dsc 03F9  
                ??_APP_LEDUpdateUSBStatus 0072                   ?_USBCtrlTrfSetupHandler 0070  
                 USBStdGetStatusHandler@p 0072                    USBTransferOnePacket@ep 0077  
                              ?_set_timer 0070                                  _SetupPkt 0040  
                   ?_USBConfigureEndpoint 0071                         ?_BUTTON_IsPressed 0070  
               __end_of_SYS_InterruptHigh 000B                        __end_of__stringtab 0301  
                      ??_BUTTON_IsPressed 0071                          ??_is_end_of_scan 0071  
                              _ANSELAbits 018C                                _ANSELBbits 018D  
                              _ANSELCbits 018E                          __size_of_get_adc 0003  
                  __size_of_process_level 00D9                   __size_of_USBDeviceTasks 00EE  
                                __ptext10 08DC                                  __ptext11 09CB  
                                __ptext20 07B8                                  __ptext12 0909  
                                __ptext21 0C9B                                  __ptext13 08FE  
                                __ptext30 0D48                                  __ptext22 0157  
                                __ptext14 0A1E                                  __ptext31 0A3B  
                                __ptext23 0BFC                                  __ptext15 03FD  
                                __ptext40 08E6                                  __ptext32 0968  
                                __ptext24 0F00                                  __ptext16 0E90  
                                __ptext41 0BAD                                  __ptext33 0950  
                                __ptext25 0F7F                                  __ptext17 0DB1  
                                __ptext42 09B2                                  __ptext34 02E4  
                                __ptext26 0A01                                  __ptext18 0AD7  
                                __ptext43 0999                                  __ptext35 0B35  
                                __ptext27 025E                                  __ptext19 071B  
                                __ptext44 05C4                                  __ptext36 0AAC  
                                __ptext28 0CF1                                  __ptext45 09E5  
                                __ptext37 0C4B                                  __ptext29 0E20  
                                __ptext46 08F4                                  __ptext38 0A5F  
                                __ptext47 0980                                  __ptext39 0B6E  
                                _get_data 08DC                          __size_of_run_adc 0007  
                                _midiData 01A0            __end_of_USBCtrlTrfSetupHandler 07FA  
                           __size_of_main 0016                         ?_USBCtrlEPService 0070  
                      ??_USBCtrlEPService 0062                         ??_store_key_level 0078  
                     _USBCtrlTrfInHandler 0DB1                       BUTTON_Enable@button 0071  
                                _outPipes 0147                      _USBCtrlTrfOutHandler 0AD7  
               _USBCtrlEPAllowStatusStage 0D48                                _LED_Enable 0980  
                  ??_USBTransferOnePacket 0075                 _USBDeferStatusStagePacket 00E2  
                              _INTCONbits 000B                      ?_USBCtrlTrfInHandler 0070  
                _APP_DeviceAudioMIDITasks 000D             USBCtrlTrfTxService@byteToSend 0073  
                                memset@p1 0076                          ?_USBStallHandler 0070  
                USBStdFeatureReqHandler@p 005F                                  intlevel1 0000  
                             ??_scan_init 0071                               ??_scan_task 007B  
                  __size_of_USBDeviceInit 00AC   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0B6E  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 0039          ?_USER_USB_CALLBACK_EVENT_HANDLER 0055  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 007B           _USER_USB_CALLBACK_EVENT_HANDLER 0B35  
              __size_of_waiting_for_timer 000B         __end_ofprocess_level@idx_midi_map 0328  
                       __CFG_CLKOUTEN$OFF 0000                             _process_level 04EB  
                             _sentNoteOff 0166           __size_of_APP_LEDUpdateUSBStatus 004F  
   __end_of_APP_DeviceAudioMIDISOFHandler 08ED    __size_of_APP_DeviceAudioMIDISOFHandler 0007  
           _APP_DeviceAudioMIDISOFHandler 08E6                               ??_set_timer 0071  
                  ??_USBConfigureEndpoint 0072                     ?_USBCtrlTrfOutHandler 0070  
                  __size_of_BUTTON_Enable 000A                      __CFG_CPUDIV$NOCLKDIV 0000  
                     _USBCtrlTrfRxService 071B                        _USBWakeFromSuspend 02E4  
                 _USBStdFeatureReqHandler 0157                       _USBCtrlTrfTxService 0E20  
              __size_of_SYS_InterruptHigh 0007           ??_APP_DeviceAudioMIDIInitialize 0053  
                     ?_USBWakeFromSuspend 0070                     ??_USBCtrlTrfInHandler 0074  
                   _USBAlternateInterface 00EF                       USBEnableEndpoint@ep 0052  
                         _endpoint_number 0163                      ?_USBCtrlTrfRxService 0070  
                ?_USBCtrlEPAllowDataStage 0070                      ?_USBCtrlTrfTxService 0070  
                          ?_process_level 0072              _USBStatusStageTimeoutCounter 0161  
                    ??_USBWakeFromSuspend 007B                USBTransferOnePacket@handle 0078  
                              _USB_CD_Ptr 032E          APP_DeviceAudioMIDITasks@velocity 006A  
