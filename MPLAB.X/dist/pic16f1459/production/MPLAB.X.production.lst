

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat May 21 00:13:42 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	swtext1,local,class=CONST,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	swtext2,local,class=CONST,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	swtext3,local,class=CONST,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	swtext4,local,class=CONST,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	swtext5,local,class=CONST,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,delta=2
    67                           	psect	intentry,global,class=CODE,delta=2
    68                           	dabs	1,0x20,32,_BDT
    69                           	dabs	1,0x48,8,_CtrlTrfData
    70                           	dabs	1,0x40,8,_SetupPkt
    71                           	dabs	1,0xA0,64,_ReceivedDataBuffer
    72                           	dabs	1,0x1A0,4,_midiData
    73                           	dabs	1,0x7E,2
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  0111                     	;# 
   121  0112                     	;# 
   122  0113                     	;# 
   123  0114                     	;# 
   124  0115                     	;# 
   125  0116                     	;# 
   126  0117                     	;# 
   127  0118                     	;# 
   128  0119                     	;# 
   129  011D                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  018E                     	;# 
   133  0191                     	;# 
   134  0191                     	;# 
   135  0192                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0194                     	;# 
   139  0195                     	;# 
   140  0196                     	;# 
   141  0197                     	;# 
   142  0199                     	;# 
   143  019A                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019C                     	;# 
   147  019D                     	;# 
   148  019E                     	;# 
   149  019F                     	;# 
   150  020C                     	;# 
   151  020D                     	;# 
   152  0211                     	;# 
   153  0211                     	;# 
   154  0212                     	;# 
   155  0212                     	;# 
   156  0213                     	;# 
   157  0213                     	;# 
   158  0214                     	;# 
   159  0214                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0215                     	;# 
   163  0216                     	;# 
   164  0216                     	;# 
   165  0217                     	;# 
   166  0217                     	;# 
   167  0391                     	;# 
   168  0392                     	;# 
   169  0393                     	;# 
   170  0394                     	;# 
   171  0395                     	;# 
   172  0396                     	;# 
   173  039A                     	;# 
   174  039B                     	;# 
   175  0611                     	;# 
   176  0612                     	;# 
   177  0613                     	;# 
   178  0613                     	;# 
   179  0614                     	;# 
   180  0615                     	;# 
   181  0616                     	;# 
   182  0616                     	;# 
   183  0691                     	;# 
   184  0692                     	;# 
   185  0693                     	;# 
   186  0694                     	;# 
   187  0695                     	;# 
   188  0E8E                     	;# 
   189  0E8F                     	;# 
   190  0E90                     	;# 
   191  0E91                     	;# 
   192  0E92                     	;# 
   193  0E93                     	;# 
   194  0E94                     	;# 
   195  0E94                     	;# 
   196  0E95                     	;# 
   197  0E96                     	;# 
   198  0E97                     	;# 
   199  0E98                     	;# 
   200  0E99                     	;# 
   201  0E9A                     	;# 
   202  0E9B                     	;# 
   203  0E9C                     	;# 
   204  0E9D                     	;# 
   205  0E9E                     	;# 
   206  0E9F                     	;# 
   207  0FE4                     	;# 
   208  0FE5                     	;# 
   209  0FE6                     	;# 
   210  0FE7                     	;# 
   211  0FE8                     	;# 
   212  0FE9                     	;# 
   213  0FEA                     	;# 
   214  0FEB                     	;# 
   215  0FED                     	;# 
   216  0FEE                     	;# 
   217  0FEF                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0095                     	;# 
   250  0096                     	;# 
   251  0097                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009A                     	;# 
   255  009B                     	;# 
   256  009B                     	;# 
   257  009C                     	;# 
   258  009D                     	;# 
   259  009E                     	;# 
   260  009F                     	;# 
   261  010C                     	;# 
   262  010D                     	;# 
   263  010E                     	;# 
   264  0111                     	;# 
   265  0112                     	;# 
   266  0113                     	;# 
   267  0114                     	;# 
   268  0115                     	;# 
   269  0116                     	;# 
   270  0117                     	;# 
   271  0118                     	;# 
   272  0119                     	;# 
   273  011D                     	;# 
   274  018C                     	;# 
   275  018D                     	;# 
   276  018E                     	;# 
   277  0191                     	;# 
   278  0191                     	;# 
   279  0192                     	;# 
   280  0193                     	;# 
   281  0193                     	;# 
   282  0194                     	;# 
   283  0195                     	;# 
   284  0196                     	;# 
   285  0197                     	;# 
   286  0199                     	;# 
   287  019A                     	;# 
   288  019B                     	;# 
   289  019B                     	;# 
   290  019C                     	;# 
   291  019D                     	;# 
   292  019E                     	;# 
   293  019F                     	;# 
   294  020C                     	;# 
   295  020D                     	;# 
   296  0211                     	;# 
   297  0211                     	;# 
   298  0212                     	;# 
   299  0212                     	;# 
   300  0213                     	;# 
   301  0213                     	;# 
   302  0214                     	;# 
   303  0214                     	;# 
   304  0215                     	;# 
   305  0215                     	;# 
   306  0215                     	;# 
   307  0216                     	;# 
   308  0216                     	;# 
   309  0217                     	;# 
   310  0217                     	;# 
   311  0391                     	;# 
   312  0392                     	;# 
   313  0393                     	;# 
   314  0394                     	;# 
   315  0395                     	;# 
   316  0396                     	;# 
   317  039A                     	;# 
   318  039B                     	;# 
   319  0611                     	;# 
   320  0612                     	;# 
   321  0613                     	;# 
   322  0613                     	;# 
   323  0614                     	;# 
   324  0615                     	;# 
   325  0616                     	;# 
   326  0616                     	;# 
   327  0691                     	;# 
   328  0692                     	;# 
   329  0693                     	;# 
   330  0694                     	;# 
   331  0695                     	;# 
   332  0E8E                     	;# 
   333  0E8F                     	;# 
   334  0E90                     	;# 
   335  0E91                     	;# 
   336  0E92                     	;# 
   337  0E93                     	;# 
   338  0E94                     	;# 
   339  0E94                     	;# 
   340  0E95                     	;# 
   341  0E96                     	;# 
   342  0E97                     	;# 
   343  0E98                     	;# 
   344  0E99                     	;# 
   345  0E9A                     	;# 
   346  0E9B                     	;# 
   347  0E9C                     	;# 
   348  0E9D                     	;# 
   349  0E9E                     	;# 
   350  0E9F                     	;# 
   351  0FE4                     	;# 
   352  0FE5                     	;# 
   353  0FE6                     	;# 
   354  0FE7                     	;# 
   355  0FE8                     	;# 
   356  0FE9                     	;# 
   357  0FEA                     	;# 
   358  0FEB                     	;# 
   359  0FED                     	;# 
   360  0FEE                     	;# 
   361  0FEF                     	;# 
   362  0000                     	;# 
   363  0001                     	;# 
   364  0002                     	;# 
   365  0003                     	;# 
   366  0004                     	;# 
   367  0005                     	;# 
   368  0006                     	;# 
   369  0007                     	;# 
   370  0008                     	;# 
   371  0009                     	;# 
   372  000A                     	;# 
   373  000B                     	;# 
   374  000C                     	;# 
   375  000D                     	;# 
   376  000E                     	;# 
   377  0011                     	;# 
   378  0012                     	;# 
   379  0015                     	;# 
   380  0016                     	;# 
   381  0016                     	;# 
   382  0017                     	;# 
   383  0018                     	;# 
   384  0019                     	;# 
   385  001A                     	;# 
   386  001B                     	;# 
   387  001C                     	;# 
   388  008C                     	;# 
   389  008D                     	;# 
   390  008E                     	;# 
   391  0091                     	;# 
   392  0092                     	;# 
   393  0095                     	;# 
   394  0096                     	;# 
   395  0097                     	;# 
   396  0098                     	;# 
   397  0099                     	;# 
   398  009A                     	;# 
   399  009B                     	;# 
   400  009B                     	;# 
   401  009C                     	;# 
   402  009D                     	;# 
   403  009E                     	;# 
   404  009F                     	;# 
   405  010C                     	;# 
   406  010D                     	;# 
   407  010E                     	;# 
   408  0111                     	;# 
   409  0112                     	;# 
   410  0113                     	;# 
   411  0114                     	;# 
   412  0115                     	;# 
   413  0116                     	;# 
   414  0117                     	;# 
   415  0118                     	;# 
   416  0119                     	;# 
   417  011D                     	;# 
   418  018C                     	;# 
   419  018D                     	;# 
   420  018E                     	;# 
   421  0191                     	;# 
   422  0191                     	;# 
   423  0192                     	;# 
   424  0193                     	;# 
   425  0193                     	;# 
   426  0194                     	;# 
   427  0195                     	;# 
   428  0196                     	;# 
   429  0197                     	;# 
   430  0199                     	;# 
   431  019A                     	;# 
   432  019B                     	;# 
   433  019B                     	;# 
   434  019C                     	;# 
   435  019D                     	;# 
   436  019E                     	;# 
   437  019F                     	;# 
   438  020C                     	;# 
   439  020D                     	;# 
   440  0211                     	;# 
   441  0211                     	;# 
   442  0212                     	;# 
   443  0212                     	;# 
   444  0213                     	;# 
   445  0213                     	;# 
   446  0214                     	;# 
   447  0214                     	;# 
   448  0215                     	;# 
   449  0215                     	;# 
   450  0215                     	;# 
   451  0216                     	;# 
   452  0216                     	;# 
   453  0217                     	;# 
   454  0217                     	;# 
   455  0391                     	;# 
   456  0392                     	;# 
   457  0393                     	;# 
   458  0394                     	;# 
   459  0395                     	;# 
   460  0396                     	;# 
   461  039A                     	;# 
   462  039B                     	;# 
   463  0611                     	;# 
   464  0612                     	;# 
   465  0613                     	;# 
   466  0613                     	;# 
   467  0614                     	;# 
   468  0615                     	;# 
   469  0616                     	;# 
   470  0616                     	;# 
   471  0691                     	;# 
   472  0692                     	;# 
   473  0693                     	;# 
   474  0694                     	;# 
   475  0695                     	;# 
   476  0E8E                     	;# 
   477  0E8F                     	;# 
   478  0E90                     	;# 
   479  0E91                     	;# 
   480  0E92                     	;# 
   481  0E93                     	;# 
   482  0E94                     	;# 
   483  0E94                     	;# 
   484  0E95                     	;# 
   485  0E96                     	;# 
   486  0E97                     	;# 
   487  0E98                     	;# 
   488  0E99                     	;# 
   489  0E9A                     	;# 
   490  0E9B                     	;# 
   491  0E9C                     	;# 
   492  0E9D                     	;# 
   493  0E9E                     	;# 
   494  0E9F                     	;# 
   495  0FE4                     	;# 
   496  0FE5                     	;# 
   497  0FE6                     	;# 
   498  0FE7                     	;# 
   499  0FE8                     	;# 
   500  0FE9                     	;# 
   501  0FEA                     	;# 
   502  0FEB                     	;# 
   503  0FED                     	;# 
   504  0FEE                     	;# 
   505  0FEF                     	;# 
   506  0000                     	;# 
   507  0001                     	;# 
   508  0002                     	;# 
   509  0003                     	;# 
   510  0004                     	;# 
   511  0005                     	;# 
   512  0006                     	;# 
   513  0007                     	;# 
   514  0008                     	;# 
   515  0009                     	;# 
   516  000A                     	;# 
   517  000B                     	;# 
   518  000C                     	;# 
   519  000D                     	;# 
   520  000E                     	;# 
   521  0011                     	;# 
   522  0012                     	;# 
   523  0015                     	;# 
   524  0016                     	;# 
   525  0016                     	;# 
   526  0017                     	;# 
   527  0018                     	;# 
   528  0019                     	;# 
   529  001A                     	;# 
   530  001B                     	;# 
   531  001C                     	;# 
   532  008C                     	;# 
   533  008D                     	;# 
   534  008E                     	;# 
   535  0091                     	;# 
   536  0092                     	;# 
   537  0095                     	;# 
   538  0096                     	;# 
   539  0097                     	;# 
   540  0098                     	;# 
   541  0099                     	;# 
   542  009A                     	;# 
   543  009B                     	;# 
   544  009B                     	;# 
   545  009C                     	;# 
   546  009D                     	;# 
   547  009E                     	;# 
   548  009F                     	;# 
   549  010C                     	;# 
   550  010D                     	;# 
   551  010E                     	;# 
   552  0111                     	;# 
   553  0112                     	;# 
   554  0113                     	;# 
   555  0114                     	;# 
   556  0115                     	;# 
   557  0116                     	;# 
   558  0117                     	;# 
   559  0118                     	;# 
   560  0119                     	;# 
   561  011D                     	;# 
   562  018C                     	;# 
   563  018D                     	;# 
   564  018E                     	;# 
   565  0191                     	;# 
   566  0191                     	;# 
   567  0192                     	;# 
   568  0193                     	;# 
   569  0193                     	;# 
   570  0194                     	;# 
   571  0195                     	;# 
   572  0196                     	;# 
   573  0197                     	;# 
   574  0199                     	;# 
   575  019A                     	;# 
   576  019B                     	;# 
   577  019B                     	;# 
   578  019C                     	;# 
   579  019D                     	;# 
   580  019E                     	;# 
   581  019F                     	;# 
   582  020C                     	;# 
   583  020D                     	;# 
   584  0211                     	;# 
   585  0211                     	;# 
   586  0212                     	;# 
   587  0212                     	;# 
   588  0213                     	;# 
   589  0213                     	;# 
   590  0214                     	;# 
   591  0214                     	;# 
   592  0215                     	;# 
   593  0215                     	;# 
   594  0215                     	;# 
   595  0216                     	;# 
   596  0216                     	;# 
   597  0217                     	;# 
   598  0217                     	;# 
   599  0391                     	;# 
   600  0392                     	;# 
   601  0393                     	;# 
   602  0394                     	;# 
   603  0395                     	;# 
   604  0396                     	;# 
   605  039A                     	;# 
   606  039B                     	;# 
   607  0611                     	;# 
   608  0612                     	;# 
   609  0613                     	;# 
   610  0613                     	;# 
   611  0614                     	;# 
   612  0615                     	;# 
   613  0616                     	;# 
   614  0616                     	;# 
   615  0691                     	;# 
   616  0692                     	;# 
   617  0693                     	;# 
   618  0694                     	;# 
   619  0695                     	;# 
   620  0E8E                     	;# 
   621  0E8F                     	;# 
   622  0E90                     	;# 
   623  0E91                     	;# 
   624  0E92                     	;# 
   625  0E93                     	;# 
   626  0E94                     	;# 
   627  0E94                     	;# 
   628  0E95                     	;# 
   629  0E96                     	;# 
   630  0E97                     	;# 
   631  0E98                     	;# 
   632  0E99                     	;# 
   633  0E9A                     	;# 
   634  0E9B                     	;# 
   635  0E9C                     	;# 
   636  0E9D                     	;# 
   637  0E9E                     	;# 
   638  0E9F                     	;# 
   639  0FE4                     	;# 
   640  0FE5                     	;# 
   641  0FE6                     	;# 
   642  0FE7                     	;# 
   643  0FE8                     	;# 
   644  0FE9                     	;# 
   645  0FEA                     	;# 
   646  0FEB                     	;# 
   647  0FED                     	;# 
   648  0FEE                     	;# 
   649  0FEF                     	;# 
   650  0000                     	;# 
   651  0001                     	;# 
   652  0002                     	;# 
   653  0003                     	;# 
   654  0004                     	;# 
   655  0005                     	;# 
   656  0006                     	;# 
   657  0007                     	;# 
   658  0008                     	;# 
   659  0009                     	;# 
   660  000A                     	;# 
   661  000B                     	;# 
   662  000C                     	;# 
   663  000D                     	;# 
   664  000E                     	;# 
   665  0011                     	;# 
   666  0012                     	;# 
   667  0015                     	;# 
   668  0016                     	;# 
   669  0016                     	;# 
   670  0017                     	;# 
   671  0018                     	;# 
   672  0019                     	;# 
   673  001A                     	;# 
   674  001B                     	;# 
   675  001C                     	;# 
   676  008C                     	;# 
   677  008D                     	;# 
   678  008E                     	;# 
   679  0091                     	;# 
   680  0092                     	;# 
   681  0095                     	;# 
   682  0096                     	;# 
   683  0097                     	;# 
   684  0098                     	;# 
   685  0099                     	;# 
   686  009A                     	;# 
   687  009B                     	;# 
   688  009B                     	;# 
   689  009C                     	;# 
   690  009D                     	;# 
   691  009E                     	;# 
   692  009F                     	;# 
   693  010C                     	;# 
   694  010D                     	;# 
   695  010E                     	;# 
   696  0111                     	;# 
   697  0112                     	;# 
   698  0113                     	;# 
   699  0114                     	;# 
   700  0115                     	;# 
   701  0116                     	;# 
   702  0117                     	;# 
   703  0118                     	;# 
   704  0119                     	;# 
   705  011D                     	;# 
   706  018C                     	;# 
   707  018D                     	;# 
   708  018E                     	;# 
   709  0191                     	;# 
   710  0191                     	;# 
   711  0192                     	;# 
   712  0193                     	;# 
   713  0193                     	;# 
   714  0194                     	;# 
   715  0195                     	;# 
   716  0196                     	;# 
   717  0197                     	;# 
   718  0199                     	;# 
   719  019A                     	;# 
   720  019B                     	;# 
   721  019B                     	;# 
   722  019C                     	;# 
   723  019D                     	;# 
   724  019E                     	;# 
   725  019F                     	;# 
   726  020C                     	;# 
   727  020D                     	;# 
   728  0211                     	;# 
   729  0211                     	;# 
   730  0212                     	;# 
   731  0212                     	;# 
   732  0213                     	;# 
   733  0213                     	;# 
   734  0214                     	;# 
   735  0214                     	;# 
   736  0215                     	;# 
   737  0215                     	;# 
   738  0215                     	;# 
   739  0216                     	;# 
   740  0216                     	;# 
   741  0217                     	;# 
   742  0217                     	;# 
   743  0391                     	;# 
   744  0392                     	;# 
   745  0393                     	;# 
   746  0394                     	;# 
   747  0395                     	;# 
   748  0396                     	;# 
   749  039A                     	;# 
   750  039B                     	;# 
   751  0611                     	;# 
   752  0612                     	;# 
   753  0613                     	;# 
   754  0613                     	;# 
   755  0614                     	;# 
   756  0615                     	;# 
   757  0616                     	;# 
   758  0616                     	;# 
   759  0691                     	;# 
   760  0692                     	;# 
   761  0693                     	;# 
   762  0694                     	;# 
   763  0695                     	;# 
   764  0E8E                     	;# 
   765  0E8F                     	;# 
   766  0E90                     	;# 
   767  0E91                     	;# 
   768  0E92                     	;# 
   769  0E93                     	;# 
   770  0E94                     	;# 
   771  0E94                     	;# 
   772  0E95                     	;# 
   773  0E96                     	;# 
   774  0E97                     	;# 
   775  0E98                     	;# 
   776  0E99                     	;# 
   777  0E9A                     	;# 
   778  0E9B                     	;# 
   779  0E9C                     	;# 
   780  0E9D                     	;# 
   781  0E9E                     	;# 
   782  0E9F                     	;# 
   783  0FE4                     	;# 
   784  0FE5                     	;# 
   785  0FE6                     	;# 
   786  0FE7                     	;# 
   787  0FE8                     	;# 
   788  0FE9                     	;# 
   789  0FEA                     	;# 
   790  0FEB                     	;# 
   791  0FED                     	;# 
   792  0FEE                     	;# 
   793  0FEF                     	;# 
   794  0000                     	;# 
   795  0001                     	;# 
   796  0002                     	;# 
   797  0003                     	;# 
   798  0004                     	;# 
   799  0005                     	;# 
   800  0006                     	;# 
   801  0007                     	;# 
   802  0008                     	;# 
   803  0009                     	;# 
   804  000A                     	;# 
   805  000B                     	;# 
   806  000C                     	;# 
   807  000D                     	;# 
   808  000E                     	;# 
   809  0011                     	;# 
   810  0012                     	;# 
   811  0015                     	;# 
   812  0016                     	;# 
   813  0016                     	;# 
   814  0017                     	;# 
   815  0018                     	;# 
   816  0019                     	;# 
   817  001A                     	;# 
   818  001B                     	;# 
   819  001C                     	;# 
   820  008C                     	;# 
   821  008D                     	;# 
   822  008E                     	;# 
   823  0091                     	;# 
   824  0092                     	;# 
   825  0095                     	;# 
   826  0096                     	;# 
   827  0097                     	;# 
   828  0098                     	;# 
   829  0099                     	;# 
   830  009A                     	;# 
   831  009B                     	;# 
   832  009B                     	;# 
   833  009C                     	;# 
   834  009D                     	;# 
   835  009E                     	;# 
   836  009F                     	;# 
   837  010C                     	;# 
   838  010D                     	;# 
   839  010E                     	;# 
   840  0111                     	;# 
   841  0112                     	;# 
   842  0113                     	;# 
   843  0114                     	;# 
   844  0115                     	;# 
   845  0116                     	;# 
   846  0117                     	;# 
   847  0118                     	;# 
   848  0119                     	;# 
   849  011D                     	;# 
   850  018C                     	;# 
   851  018D                     	;# 
   852  018E                     	;# 
   853  0191                     	;# 
   854  0191                     	;# 
   855  0192                     	;# 
   856  0193                     	;# 
   857  0193                     	;# 
   858  0194                     	;# 
   859  0195                     	;# 
   860  0196                     	;# 
   861  0197                     	;# 
   862  0199                     	;# 
   863  019A                     	;# 
   864  019B                     	;# 
   865  019B                     	;# 
   866  019C                     	;# 
   867  019D                     	;# 
   868  019E                     	;# 
   869  019F                     	;# 
   870  020C                     	;# 
   871  020D                     	;# 
   872  0211                     	;# 
   873  0211                     	;# 
   874  0212                     	;# 
   875  0212                     	;# 
   876  0213                     	;# 
   877  0213                     	;# 
   878  0214                     	;# 
   879  0214                     	;# 
   880  0215                     	;# 
   881  0215                     	;# 
   882  0215                     	;# 
   883  0216                     	;# 
   884  0216                     	;# 
   885  0217                     	;# 
   886  0217                     	;# 
   887  0391                     	;# 
   888  0392                     	;# 
   889  0393                     	;# 
   890  0394                     	;# 
   891  0395                     	;# 
   892  0396                     	;# 
   893  039A                     	;# 
   894  039B                     	;# 
   895  0611                     	;# 
   896  0612                     	;# 
   897  0613                     	;# 
   898  0613                     	;# 
   899  0614                     	;# 
   900  0615                     	;# 
   901  0616                     	;# 
   902  0616                     	;# 
   903  0691                     	;# 
   904  0692                     	;# 
   905  0693                     	;# 
   906  0694                     	;# 
   907  0695                     	;# 
   908  0E8E                     	;# 
   909  0E8F                     	;# 
   910  0E90                     	;# 
   911  0E91                     	;# 
   912  0E92                     	;# 
   913  0E93                     	;# 
   914  0E94                     	;# 
   915  0E94                     	;# 
   916  0E95                     	;# 
   917  0E96                     	;# 
   918  0E97                     	;# 
   919  0E98                     	;# 
   920  0E99                     	;# 
   921  0E9A                     	;# 
   922  0E9B                     	;# 
   923  0E9C                     	;# 
   924  0E9D                     	;# 
   925  0E9E                     	;# 
   926  0E9F                     	;# 
   927  0FE4                     	;# 
   928  0FE5                     	;# 
   929  0FE6                     	;# 
   930  0FE7                     	;# 
   931  0FE8                     	;# 
   932  0FE9                     	;# 
   933  0FEA                     	;# 
   934  0FEB                     	;# 
   935  0FED                     	;# 
   936  0FEE                     	;# 
   937  0FEF                     	;# 
   938  0000                     	;# 
   939  0001                     	;# 
   940  0002                     	;# 
   941  0003                     	;# 
   942  0004                     	;# 
   943  0005                     	;# 
   944  0006                     	;# 
   945  0007                     	;# 
   946  0008                     	;# 
   947  0009                     	;# 
   948  000A                     	;# 
   949  000B                     	;# 
   950  000C                     	;# 
   951  000D                     	;# 
   952  000E                     	;# 
   953  0011                     	;# 
   954  0012                     	;# 
   955  0015                     	;# 
   956  0016                     	;# 
   957  0016                     	;# 
   958  0017                     	;# 
   959  0018                     	;# 
   960  0019                     	;# 
   961  001A                     	;# 
   962  001B                     	;# 
   963  001C                     	;# 
   964  008C                     	;# 
   965  008D                     	;# 
   966  008E                     	;# 
   967  0091                     	;# 
   968  0092                     	;# 
   969  0095                     	;# 
   970  0096                     	;# 
   971  0097                     	;# 
   972  0098                     	;# 
   973  0099                     	;# 
   974  009A                     	;# 
   975  009B                     	;# 
   976  009B                     	;# 
   977  009C                     	;# 
   978  009D                     	;# 
   979  009E                     	;# 
   980  009F                     	;# 
   981  010C                     	;# 
   982  010D                     	;# 
   983  010E                     	;# 
   984  0111                     	;# 
   985  0112                     	;# 
   986  0113                     	;# 
   987  0114                     	;# 
   988  0115                     	;# 
   989  0116                     	;# 
   990  0117                     	;# 
   991  0118                     	;# 
   992  0119                     	;# 
   993  011D                     	;# 
   994  018C                     	;# 
   995  018D                     	;# 
   996  018E                     	;# 
   997  0191                     	;# 
   998  0191                     	;# 
   999  0192                     	;# 
  1000  0193                     	;# 
  1001  0193                     	;# 
  1002  0194                     	;# 
  1003  0195                     	;# 
  1004  0196                     	;# 
  1005  0197                     	;# 
  1006  0199                     	;# 
  1007  019A                     	;# 
  1008  019B                     	;# 
  1009  019B                     	;# 
  1010  019C                     	;# 
  1011  019D                     	;# 
  1012  019E                     	;# 
  1013  019F                     	;# 
  1014  020C                     	;# 
  1015  020D                     	;# 
  1016  0211                     	;# 
  1017  0211                     	;# 
  1018  0212                     	;# 
  1019  0212                     	;# 
  1020  0213                     	;# 
  1021  0213                     	;# 
  1022  0214                     	;# 
  1023  0214                     	;# 
  1024  0215                     	;# 
  1025  0215                     	;# 
  1026  0215                     	;# 
  1027  0216                     	;# 
  1028  0216                     	;# 
  1029  0217                     	;# 
  1030  0217                     	;# 
  1031  0391                     	;# 
  1032  0392                     	;# 
  1033  0393                     	;# 
  1034  0394                     	;# 
  1035  0395                     	;# 
  1036  0396                     	;# 
  1037  039A                     	;# 
  1038  039B                     	;# 
  1039  0611                     	;# 
  1040  0612                     	;# 
  1041  0613                     	;# 
  1042  0613                     	;# 
  1043  0614                     	;# 
  1044  0615                     	;# 
  1045  0616                     	;# 
  1046  0616                     	;# 
  1047  0691                     	;# 
  1048  0692                     	;# 
  1049  0693                     	;# 
  1050  0694                     	;# 
  1051  0695                     	;# 
  1052  0E8E                     	;# 
  1053  0E8F                     	;# 
  1054  0E90                     	;# 
  1055  0E91                     	;# 
  1056  0E92                     	;# 
  1057  0E93                     	;# 
  1058  0E94                     	;# 
  1059  0E94                     	;# 
  1060  0E95                     	;# 
  1061  0E96                     	;# 
  1062  0E97                     	;# 
  1063  0E98                     	;# 
  1064  0E99                     	;# 
  1065  0E9A                     	;# 
  1066  0E9B                     	;# 
  1067  0E9C                     	;# 
  1068  0E9D                     	;# 
  1069  0E9E                     	;# 
  1070  0E9F                     	;# 
  1071  0FE4                     	;# 
  1072  0FE5                     	;# 
  1073  0FE6                     	;# 
  1074  0FE7                     	;# 
  1075  0FE8                     	;# 
  1076  0FE9                     	;# 
  1077  0FEA                     	;# 
  1078  0FEB                     	;# 
  1079  0FED                     	;# 
  1080  0FEE                     	;# 
  1081  0FEF                     	;# 
  1082  0000                     	;# 
  1083  0001                     	;# 
  1084  0002                     	;# 
  1085  0003                     	;# 
  1086  0004                     	;# 
  1087  0005                     	;# 
  1088  0006                     	;# 
  1089  0007                     	;# 
  1090  0008                     	;# 
  1091  0009                     	;# 
  1092  000A                     	;# 
  1093  000B                     	;# 
  1094  000C                     	;# 
  1095  000D                     	;# 
  1096  000E                     	;# 
  1097  0011                     	;# 
  1098  0012                     	;# 
  1099  0015                     	;# 
  1100  0016                     	;# 
  1101  0016                     	;# 
  1102  0017                     	;# 
  1103  0018                     	;# 
  1104  0019                     	;# 
  1105  001A                     	;# 
  1106  001B                     	;# 
  1107  001C                     	;# 
  1108  008C                     	;# 
  1109  008D                     	;# 
  1110  008E                     	;# 
  1111  0091                     	;# 
  1112  0092                     	;# 
  1113  0095                     	;# 
  1114  0096                     	;# 
  1115  0097                     	;# 
  1116  0098                     	;# 
  1117  0099                     	;# 
  1118  009A                     	;# 
  1119  009B                     	;# 
  1120  009B                     	;# 
  1121  009C                     	;# 
  1122  009D                     	;# 
  1123  009E                     	;# 
  1124  009F                     	;# 
  1125  010C                     	;# 
  1126  010D                     	;# 
  1127  010E                     	;# 
  1128  0111                     	;# 
  1129  0112                     	;# 
  1130  0113                     	;# 
  1131  0114                     	;# 
  1132  0115                     	;# 
  1133  0116                     	;# 
  1134  0117                     	;# 
  1135  0118                     	;# 
  1136  0119                     	;# 
  1137  011D                     	;# 
  1138  018C                     	;# 
  1139  018D                     	;# 
  1140  018E                     	;# 
  1141  0191                     	;# 
  1142  0191                     	;# 
  1143  0192                     	;# 
  1144  0193                     	;# 
  1145  0193                     	;# 
  1146  0194                     	;# 
  1147  0195                     	;# 
  1148  0196                     	;# 
  1149  0197                     	;# 
  1150  0199                     	;# 
  1151  019A                     	;# 
  1152  019B                     	;# 
  1153  019B                     	;# 
  1154  019C                     	;# 
  1155  019D                     	;# 
  1156  019E                     	;# 
  1157  019F                     	;# 
  1158  020C                     	;# 
  1159  020D                     	;# 
  1160  0211                     	;# 
  1161  0211                     	;# 
  1162  0212                     	;# 
  1163  0212                     	;# 
  1164  0213                     	;# 
  1165  0213                     	;# 
  1166  0214                     	;# 
  1167  0214                     	;# 
  1168  0215                     	;# 
  1169  0215                     	;# 
  1170  0215                     	;# 
  1171  0216                     	;# 
  1172  0216                     	;# 
  1173  0217                     	;# 
  1174  0217                     	;# 
  1175  0391                     	;# 
  1176  0392                     	;# 
  1177  0393                     	;# 
  1178  0394                     	;# 
  1179  0395                     	;# 
  1180  0396                     	;# 
  1181  039A                     	;# 
  1182  039B                     	;# 
  1183  0611                     	;# 
  1184  0612                     	;# 
  1185  0613                     	;# 
  1186  0613                     	;# 
  1187  0614                     	;# 
  1188  0615                     	;# 
  1189  0616                     	;# 
  1190  0616                     	;# 
  1191  0691                     	;# 
  1192  0692                     	;# 
  1193  0693                     	;# 
  1194  0694                     	;# 
  1195  0695                     	;# 
  1196  0E8E                     	;# 
  1197  0E8F                     	;# 
  1198  0E90                     	;# 
  1199  0E91                     	;# 
  1200  0E92                     	;# 
  1201  0E93                     	;# 
  1202  0E94                     	;# 
  1203  0E94                     	;# 
  1204  0E95                     	;# 
  1205  0E96                     	;# 
  1206  0E97                     	;# 
  1207  0E98                     	;# 
  1208  0E99                     	;# 
  1209  0E9A                     	;# 
  1210  0E9B                     	;# 
  1211  0E9C                     	;# 
  1212  0E9D                     	;# 
  1213  0E9E                     	;# 
  1214  0E9F                     	;# 
  1215  0FE4                     	;# 
  1216  0FE5                     	;# 
  1217  0FE6                     	;# 
  1218  0FE7                     	;# 
  1219  0FE8                     	;# 
  1220  0FE9                     	;# 
  1221  0FEA                     	;# 
  1222  0FEB                     	;# 
  1223  0FED                     	;# 
  1224  0FEE                     	;# 
  1225  0FEF                     	;# 
  1226  0000                     	;# 
  1227  0001                     	;# 
  1228  0002                     	;# 
  1229  0003                     	;# 
  1230  0004                     	;# 
  1231  0005                     	;# 
  1232  0006                     	;# 
  1233  0007                     	;# 
  1234  0008                     	;# 
  1235  0009                     	;# 
  1236  000A                     	;# 
  1237  000B                     	;# 
  1238  000C                     	;# 
  1239  000D                     	;# 
  1240  000E                     	;# 
  1241  0011                     	;# 
  1242  0012                     	;# 
  1243  0015                     	;# 
  1244  0016                     	;# 
  1245  0016                     	;# 
  1246  0017                     	;# 
  1247  0018                     	;# 
  1248  0019                     	;# 
  1249  001A                     	;# 
  1250  001B                     	;# 
  1251  001C                     	;# 
  1252  008C                     	;# 
  1253  008D                     	;# 
  1254  008E                     	;# 
  1255  0091                     	;# 
  1256  0092                     	;# 
  1257  0095                     	;# 
  1258  0096                     	;# 
  1259  0097                     	;# 
  1260  0098                     	;# 
  1261  0099                     	;# 
  1262  009A                     	;# 
  1263  009B                     	;# 
  1264  009B                     	;# 
  1265  009C                     	;# 
  1266  009D                     	;# 
  1267  009E                     	;# 
  1268  009F                     	;# 
  1269  010C                     	;# 
  1270  010D                     	;# 
  1271  010E                     	;# 
  1272  0111                     	;# 
  1273  0112                     	;# 
  1274  0113                     	;# 
  1275  0114                     	;# 
  1276  0115                     	;# 
  1277  0116                     	;# 
  1278  0117                     	;# 
  1279  0118                     	;# 
  1280  0119                     	;# 
  1281  011D                     	;# 
  1282  018C                     	;# 
  1283  018D                     	;# 
  1284  018E                     	;# 
  1285  0191                     	;# 
  1286  0191                     	;# 
  1287  0192                     	;# 
  1288  0193                     	;# 
  1289  0193                     	;# 
  1290  0194                     	;# 
  1291  0195                     	;# 
  1292  0196                     	;# 
  1293  0197                     	;# 
  1294  0199                     	;# 
  1295  019A                     	;# 
  1296  019B                     	;# 
  1297  019B                     	;# 
  1298  019C                     	;# 
  1299  019D                     	;# 
  1300  019E                     	;# 
  1301  019F                     	;# 
  1302  020C                     	;# 
  1303  020D                     	;# 
  1304  0211                     	;# 
  1305  0211                     	;# 
  1306  0212                     	;# 
  1307  0212                     	;# 
  1308  0213                     	;# 
  1309  0213                     	;# 
  1310  0214                     	;# 
  1311  0214                     	;# 
  1312  0215                     	;# 
  1313  0215                     	;# 
  1314  0215                     	;# 
  1315  0216                     	;# 
  1316  0216                     	;# 
  1317  0217                     	;# 
  1318  0217                     	;# 
  1319  0391                     	;# 
  1320  0392                     	;# 
  1321  0393                     	;# 
  1322  0394                     	;# 
  1323  0395                     	;# 
  1324  0396                     	;# 
  1325  039A                     	;# 
  1326  039B                     	;# 
  1327  0611                     	;# 
  1328  0612                     	;# 
  1329  0613                     	;# 
  1330  0613                     	;# 
  1331  0614                     	;# 
  1332  0615                     	;# 
  1333  0616                     	;# 
  1334  0616                     	;# 
  1335  0691                     	;# 
  1336  0692                     	;# 
  1337  0693                     	;# 
  1338  0694                     	;# 
  1339  0695                     	;# 
  1340  0E8E                     	;# 
  1341  0E8F                     	;# 
  1342  0E90                     	;# 
  1343  0E91                     	;# 
  1344  0E92                     	;# 
  1345  0E93                     	;# 
  1346  0E94                     	;# 
  1347  0E94                     	;# 
  1348  0E95                     	;# 
  1349  0E96                     	;# 
  1350  0E97                     	;# 
  1351  0E98                     	;# 
  1352  0E99                     	;# 
  1353  0E9A                     	;# 
  1354  0E9B                     	;# 
  1355  0E9C                     	;# 
  1356  0E9D                     	;# 
  1357  0E9E                     	;# 
  1358  0E9F                     	;# 
  1359  0FE4                     	;# 
  1360  0FE5                     	;# 
  1361  0FE6                     	;# 
  1362  0FE7                     	;# 
  1363  0FE8                     	;# 
  1364  0FE9                     	;# 
  1365  0FEA                     	;# 
  1366  0FEB                     	;# 
  1367  0FED                     	;# 
  1368  0FEE                     	;# 
  1369  0FEF                     	;# 
  1370  0000                     	;# 
  1371  0001                     	;# 
  1372  0002                     	;# 
  1373  0003                     	;# 
  1374  0004                     	;# 
  1375  0005                     	;# 
  1376  0006                     	;# 
  1377  0007                     	;# 
  1378  0008                     	;# 
  1379  0009                     	;# 
  1380  000A                     	;# 
  1381  000B                     	;# 
  1382  000C                     	;# 
  1383  000D                     	;# 
  1384  000E                     	;# 
  1385  0011                     	;# 
  1386  0012                     	;# 
  1387  0015                     	;# 
  1388  0016                     	;# 
  1389  0016                     	;# 
  1390  0017                     	;# 
  1391  0018                     	;# 
  1392  0019                     	;# 
  1393  001A                     	;# 
  1394  001B                     	;# 
  1395  001C                     	;# 
  1396  008C                     	;# 
  1397  008D                     	;# 
  1398  008E                     	;# 
  1399  0091                     	;# 
  1400  0092                     	;# 
  1401  0095                     	;# 
  1402  0096                     	;# 
  1403  0097                     	;# 
  1404  0098                     	;# 
  1405  0099                     	;# 
  1406  009A                     	;# 
  1407  009B                     	;# 
  1408  009B                     	;# 
  1409  009C                     	;# 
  1410  009D                     	;# 
  1411  009E                     	;# 
  1412  009F                     	;# 
  1413  010C                     	;# 
  1414  010D                     	;# 
  1415  010E                     	;# 
  1416  0111                     	;# 
  1417  0112                     	;# 
  1418  0113                     	;# 
  1419  0114                     	;# 
  1420  0115                     	;# 
  1421  0116                     	;# 
  1422  0117                     	;# 
  1423  0118                     	;# 
  1424  0119                     	;# 
  1425  011D                     	;# 
  1426  018C                     	;# 
  1427  018D                     	;# 
  1428  018E                     	;# 
  1429  0191                     	;# 
  1430  0191                     	;# 
  1431  0192                     	;# 
  1432  0193                     	;# 
  1433  0193                     	;# 
  1434  0194                     	;# 
  1435  0195                     	;# 
  1436  0196                     	;# 
  1437  0197                     	;# 
  1438  0199                     	;# 
  1439  019A                     	;# 
  1440  019B                     	;# 
  1441  019B                     	;# 
  1442  019C                     	;# 
  1443  019D                     	;# 
  1444  019E                     	;# 
  1445  019F                     	;# 
  1446  020C                     	;# 
  1447  020D                     	;# 
  1448  0211                     	;# 
  1449  0211                     	;# 
  1450  0212                     	;# 
  1451  0212                     	;# 
  1452  0213                     	;# 
  1453  0213                     	;# 
  1454  0214                     	;# 
  1455  0214                     	;# 
  1456  0215                     	;# 
  1457  0215                     	;# 
  1458  0215                     	;# 
  1459  0216                     	;# 
  1460  0216                     	;# 
  1461  0217                     	;# 
  1462  0217                     	;# 
  1463  0391                     	;# 
  1464  0392                     	;# 
  1465  0393                     	;# 
  1466  0394                     	;# 
  1467  0395                     	;# 
  1468  0396                     	;# 
  1469  039A                     	;# 
  1470  039B                     	;# 
  1471  0611                     	;# 
  1472  0612                     	;# 
  1473  0613                     	;# 
  1474  0613                     	;# 
  1475  0614                     	;# 
  1476  0615                     	;# 
  1477  0616                     	;# 
  1478  0616                     	;# 
  1479  0691                     	;# 
  1480  0692                     	;# 
  1481  0693                     	;# 
  1482  0694                     	;# 
  1483  0695                     	;# 
  1484  0E8E                     	;# 
  1485  0E8F                     	;# 
  1486  0E90                     	;# 
  1487  0E91                     	;# 
  1488  0E92                     	;# 
  1489  0E93                     	;# 
  1490  0E94                     	;# 
  1491  0E94                     	;# 
  1492  0E95                     	;# 
  1493  0E96                     	;# 
  1494  0E97                     	;# 
  1495  0E98                     	;# 
  1496  0E99                     	;# 
  1497  0E9A                     	;# 
  1498  0E9B                     	;# 
  1499  0E9C                     	;# 
  1500  0E9D                     	;# 
  1501  0E9E                     	;# 
  1502  0E9F                     	;# 
  1503  0FE4                     	;# 
  1504  0FE5                     	;# 
  1505  0FE6                     	;# 
  1506  0FE7                     	;# 
  1507  0FE8                     	;# 
  1508  0FE9                     	;# 
  1509  0FEA                     	;# 
  1510  0FEB                     	;# 
  1511  0FED                     	;# 
  1512  0FEE                     	;# 
  1513  0FEF                     	;# 
  1514  0000                     	;# 
  1515  0001                     	;# 
  1516  0002                     	;# 
  1517  0003                     	;# 
  1518  0004                     	;# 
  1519  0005                     	;# 
  1520  0006                     	;# 
  1521  0007                     	;# 
  1522  0008                     	;# 
  1523  0009                     	;# 
  1524  000A                     	;# 
  1525  000B                     	;# 
  1526  000C                     	;# 
  1527  000D                     	;# 
  1528  000E                     	;# 
  1529  0011                     	;# 
  1530  0012                     	;# 
  1531  0015                     	;# 
  1532  0016                     	;# 
  1533  0016                     	;# 
  1534  0017                     	;# 
  1535  0018                     	;# 
  1536  0019                     	;# 
  1537  001A                     	;# 
  1538  001B                     	;# 
  1539  001C                     	;# 
  1540  008C                     	;# 
  1541  008D                     	;# 
  1542  008E                     	;# 
  1543  0091                     	;# 
  1544  0092                     	;# 
  1545  0095                     	;# 
  1546  0096                     	;# 
  1547  0097                     	;# 
  1548  0098                     	;# 
  1549  0099                     	;# 
  1550  009A                     	;# 
  1551  009B                     	;# 
  1552  009B                     	;# 
  1553  009C                     	;# 
  1554  009D                     	;# 
  1555  009E                     	;# 
  1556  009F                     	;# 
  1557  010C                     	;# 
  1558  010D                     	;# 
  1559  010E                     	;# 
  1560  0111                     	;# 
  1561  0112                     	;# 
  1562  0113                     	;# 
  1563  0114                     	;# 
  1564  0115                     	;# 
  1565  0116                     	;# 
  1566  0117                     	;# 
  1567  0118                     	;# 
  1568  0119                     	;# 
  1569  011D                     	;# 
  1570  018C                     	;# 
  1571  018D                     	;# 
  1572  018E                     	;# 
  1573  0191                     	;# 
  1574  0191                     	;# 
  1575  0192                     	;# 
  1576  0193                     	;# 
  1577  0193                     	;# 
  1578  0194                     	;# 
  1579  0195                     	;# 
  1580  0196                     	;# 
  1581  0197                     	;# 
  1582  0199                     	;# 
  1583  019A                     	;# 
  1584  019B                     	;# 
  1585  019B                     	;# 
  1586  019C                     	;# 
  1587  019D                     	;# 
  1588  019E                     	;# 
  1589  019F                     	;# 
  1590  020C                     	;# 
  1591  020D                     	;# 
  1592  0211                     	;# 
  1593  0211                     	;# 
  1594  0212                     	;# 
  1595  0212                     	;# 
  1596  0213                     	;# 
  1597  0213                     	;# 
  1598  0214                     	;# 
  1599  0214                     	;# 
  1600  0215                     	;# 
  1601  0215                     	;# 
  1602  0215                     	;# 
  1603  0216                     	;# 
  1604  0216                     	;# 
  1605  0217                     	;# 
  1606  0217                     	;# 
  1607  0391                     	;# 
  1608  0392                     	;# 
  1609  0393                     	;# 
  1610  0394                     	;# 
  1611  0395                     	;# 
  1612  0396                     	;# 
  1613  039A                     	;# 
  1614  039B                     	;# 
  1615  0611                     	;# 
  1616  0612                     	;# 
  1617  0613                     	;# 
  1618  0613                     	;# 
  1619  0614                     	;# 
  1620  0615                     	;# 
  1621  0616                     	;# 
  1622  0616                     	;# 
  1623  0691                     	;# 
  1624  0692                     	;# 
  1625  0693                     	;# 
  1626  0694                     	;# 
  1627  0695                     	;# 
  1628  0E8E                     	;# 
  1629  0E8F                     	;# 
  1630  0E90                     	;# 
  1631  0E91                     	;# 
  1632  0E92                     	;# 
  1633  0E93                     	;# 
  1634  0E94                     	;# 
  1635  0E94                     	;# 
  1636  0E95                     	;# 
  1637  0E96                     	;# 
  1638  0E97                     	;# 
  1639  0E98                     	;# 
  1640  0E99                     	;# 
  1641  0E9A                     	;# 
  1642  0E9B                     	;# 
  1643  0E9C                     	;# 
  1644  0E9D                     	;# 
  1645  0E9E                     	;# 
  1646  0E9F                     	;# 
  1647  0FE4                     	;# 
  1648  0FE5                     	;# 
  1649  0FE6                     	;# 
  1650  0FE7                     	;# 
  1651  0FE8                     	;# 
  1652  0FE9                     	;# 
  1653  0FEA                     	;# 
  1654  0FEB                     	;# 
  1655  0FED                     	;# 
  1656  0FEE                     	;# 
  1657  0FEF                     	;# 
  1658                           
  1659                           	psect	stringtext
  1660  0141                     __pstringtext:	
  1661  0141                     process_level@idx_midi_map:	
  1662  0141  343F               	retlw	63
  1663  0142  3418               	retlw	24
  1664  0143  3418               	retlw	24
  1665  0144  3418               	retlw	24
  1666  0145  3418               	retlw	24
  1667  0146  3447               	retlw	71
  1668  0147  3418               	retlw	24
  1669  0148  3418               	retlw	24
  1670  0149  3418               	retlw	24
  1671  014A  3418               	retlw	24
  1672  014B  3418               	retlw	24
  1673  014C  3418               	retlw	24
  1674  014D  3418               	retlw	24
  1675  014E  3444               	retlw	68
  1676  014F  3445               	retlw	69
  1677  0150  3446               	retlw	70
  1678  0151  3431               	retlw	49
  1679  0152  3432               	retlw	50
  1680  0153  3418               	retlw	24
  1681  0154  3418               	retlw	24
  1682  0155  3430               	retlw	48
  1683  0156  3441               	retlw	65
  1684  0157  3442               	retlw	66
  1685  0158  3443               	retlw	67
  1686  0159  3418               	retlw	24
  1687  015A  3418               	retlw	24
  1688  015B  3436               	retlw	54
  1689  015C  3438               	retlw	56
  1690  015D  3434               	retlw	52
  1691  015E  343B               	retlw	59
  1692  015F  343D               	retlw	61
  1693  0160  3440               	retlw	64
  1694  0161  3433               	retlw	51
  1695  0162  3435               	retlw	53
  1696  0163  3437               	retlw	55
  1697  0164  3439               	retlw	57
  1698  0165  343A               	retlw	58
  1699  0166  343C               	retlw	60
  1700  0167  343E               	retlw	62
  1701  0168                     __end_ofprocess_level@idx_midi_map:	
  1702  0168                     _USB_SD_Ptr:	
  1703  0168  3439               	retlw	low (_sd000| (0+32768))
  1704  0169  3482               	retlw	high (_sd000| (0+32768))
  1705  016A  34D9               	retlw	low (_sd001| (0+32768))
  1706  016B  3481               	retlw	high (_sd001| (0+32768))
  1707  016C  340D               	retlw	low (_sd002| (0+32768))
  1708  016D  3482               	retlw	high (_sd002| (0+32768))
  1709  016E                     __end_of_USB_SD_Ptr:	
  1710  016E                     _USB_CD_Ptr:	
  1711  016E  3474               	retlw	low (_configDescriptor1| (0+32768))
  1712  016F  3481               	retlw	high (_configDescriptor1| (0+32768))
  1713  0170                     __end_of_USB_CD_Ptr:	
  1714  0170                     process_level@L:	
  1715  0170  340A               	retlw	10
  1716  0171                     __end_ofprocess_level@L:	
  1717  0171                     process_level@key_off_threshold:	
  1718  0171  3405               	retlw	5
  1719  0172                     __end_ofprocess_level@key_off_threshold:	
  1720  0172                     process_level@key_on_threshold:	
  1721  0172  3407               	retlw	7
  1722  0173                     __end_ofprocess_level@key_on_threshold:	
  1723  0173                     process_level@midi_shift:	
  1724  0173  3400               	retlw	0
  1725  0174                     __end_ofprocess_level@midi_shift:	
  1726  0174                     _configDescriptor1:	
  1727  0174  3409               	retlw	9
  1728  0175  3402               	retlw	2
  1729  0176  3465               	retlw	101
  1730  0177  3400               	retlw	0
  1731  0178  3402               	retlw	2
  1732  0179  3401               	retlw	1
  1733  017A  3400               	retlw	0
  1734  017B  34C0               	retlw	192
  1735  017C  3432               	retlw	50
  1736  017D  3409               	retlw	9
  1737  017E  3404               	retlw	4
  1738  017F  3400               	retlw	0
  1739  0180  3400               	retlw	0
  1740  0181  3400               	retlw	0
  1741  0182  3401               	retlw	1
  1742  0183  3401               	retlw	1
  1743  0184  3400               	retlw	0
  1744  0185  3400               	retlw	0
  1745  0186  3409               	retlw	9
  1746  0187  3424               	retlw	36
  1747  0188  3401               	retlw	1
  1748  0189  3400               	retlw	0
  1749  018A  3401               	retlw	1
  1750  018B  3409               	retlw	9
  1751  018C  3400               	retlw	0
  1752  018D  3401               	retlw	1
  1753  018E  3401               	retlw	1
  1754  018F  3409               	retlw	9
  1755  0190  3404               	retlw	4
  1756  0191  3401               	retlw	1
  1757  0192  3400               	retlw	0
  1758  0193  3402               	retlw	2
  1759  0194  3401               	retlw	1
  1760  0195  3403               	retlw	3
  1761  0196  3400               	retlw	0
  1762  0197  3400               	retlw	0
  1763  0198  3407               	retlw	7
  1764  0199  3424               	retlw	36
  1765  019A  3401               	retlw	1
  1766  019B  3400               	retlw	0
  1767  019C  3401               	retlw	1
  1768  019D  3441               	retlw	65
  1769  019E  3400               	retlw	0
  1770  019F  3406               	retlw	6
  1771  01A0  3424               	retlw	36
  1772  01A1  3402               	retlw	2
  1773  01A2  3401               	retlw	1
  1774  01A3  3401               	retlw	1
  1775  01A4  3400               	retlw	0
  1776  01A5  3406               	retlw	6
  1777  01A6  3424               	retlw	36
  1778  01A7  3402               	retlw	2
  1779  01A8  3402               	retlw	2
  1780  01A9  3402               	retlw	2
  1781  01AA  3400               	retlw	0
  1782  01AB  3409               	retlw	9
  1783  01AC  3424               	retlw	36
  1784  01AD  3403               	retlw	3
  1785  01AE  3401               	retlw	1
  1786  01AF  3403               	retlw	3
  1787  01B0  3401               	retlw	1
  1788  01B1  3402               	retlw	2
  1789  01B2  3401               	retlw	1
  1790  01B3  3400               	retlw	0
  1791  01B4  3409               	retlw	9
  1792  01B5  3424               	retlw	36
  1793  01B6  3403               	retlw	3
  1794  01B7  3402               	retlw	2
  1795  01B8  3404               	retlw	4
  1796  01B9  3401               	retlw	1
  1797  01BA  3401               	retlw	1
  1798  01BB  3401               	retlw	1
  1799  01BC  3400               	retlw	0
  1800  01BD  3409               	retlw	9
  1801  01BE  3405               	retlw	5
  1802  01BF  3401               	retlw	1
  1803  01C0  3402               	retlw	2
  1804  01C1  3440               	retlw	64
  1805  01C2  3400               	retlw	0
  1806  01C3  3400               	retlw	0
  1807  01C4  3400               	retlw	0
  1808  01C5  3400               	retlw	0
  1809  01C6  3405               	retlw	5
  1810  01C7  3425               	retlw	37
  1811  01C8  3401               	retlw	1
  1812  01C9  3401               	retlw	1
  1813  01CA  3401               	retlw	1
  1814  01CB  3409               	retlw	9
  1815  01CC  3405               	retlw	5
  1816  01CD  3481               	retlw	129
  1817  01CE  3402               	retlw	2
  1818  01CF  3440               	retlw	64
  1819  01D0  3400               	retlw	0
  1820  01D1  3400               	retlw	0
  1821  01D2  3400               	retlw	0
  1822  01D3  3400               	retlw	0
  1823  01D4  3405               	retlw	5
  1824  01D5  3425               	retlw	37
  1825  01D6  3401               	retlw	1
  1826  01D7  3401               	retlw	1
  1827  01D8  3403               	retlw	3
  1828  01D9                     __end_of_configDescriptor1:	
  1829  01D9                     _sd001:	
  1830  01D9  3434               	retlw	52
  1831  01DA  3403               	retlw	3
  1832  01DB  344D               	retlw	77
  1833  01DC  3400               	retlw	0
  1834  01DD  3469               	retlw	105
  1835  01DE  3400               	retlw	0
  1836  01DF  3463               	retlw	99
  1837  01E0  3400               	retlw	0
  1838  01E1  3472               	retlw	114
  1839  01E2  3400               	retlw	0
  1840  01E3  346F               	retlw	111
  1841  01E4  3400               	retlw	0
  1842  01E5  3463               	retlw	99
  1843  01E6  3400               	retlw	0
  1844  01E7  3468               	retlw	104
  1845  01E8  3400               	retlw	0
  1846  01E9  3469               	retlw	105
  1847  01EA  3400               	retlw	0
  1848  01EB  3470               	retlw	112
  1849  01EC  3400               	retlw	0
  1850  01ED  3420               	retlw	32
  1851  01EE  3400               	retlw	0
  1852  01EF  3454               	retlw	84
  1853  01F0  3400               	retlw	0
  1854  01F1  3465               	retlw	101
  1855  01F2  3400               	retlw	0
  1856  01F3  3463               	retlw	99
  1857  01F4  3400               	retlw	0
  1858  01F5  3468               	retlw	104
  1859  01F6  3400               	retlw	0
  1860  01F7  346E               	retlw	110
  1861  01F8  3400               	retlw	0
  1862  01F9  346F               	retlw	111
  1863  01FA  3400               	retlw	0
  1864  01FB  346C               	retlw	108
  1865  01FC  3400               	retlw	0
  1866  01FD  346F               	retlw	111
  1867  01FE  3400               	retlw	0
  1868  01FF  3467               	retlw	103
  1869  0200  3400               	retlw	0
  1870  0201  3479               	retlw	121
  1871  0202  3400               	retlw	0
  1872  0203  3420               	retlw	32
  1873  0204  3400               	retlw	0
  1874  0205  3449               	retlw	73
  1875  0206  3400               	retlw	0
  1876  0207  346E               	retlw	110
  1877  0208  3400               	retlw	0
  1878  0209  3463               	retlw	99
  1879  020A  3400               	retlw	0
  1880  020B  342E               	retlw	46
  1881  020C  3400               	retlw	0
  1882  020D                     __end_of_sd001:	
  1883  020D                     _sd002:	
  1884  020D  341A               	retlw	26
  1885  020E  3403               	retlw	3
  1886  020F  344D               	retlw	77
  1887  0210  3400               	retlw	0
  1888  0211  3449               	retlw	73
  1889  0212  3400               	retlw	0
  1890  0213  3444               	retlw	68
  1891  0214  3400               	retlw	0
  1892  0215  3449               	retlw	73
  1893  0216  3400               	retlw	0
  1894  0217  3420               	retlw	32
  1895  0218  3400               	retlw	0
  1896  0219  3445               	retlw	69
  1897  021A  3400               	retlw	0
  1898  021B  3478               	retlw	120
  1899  021C  3400               	retlw	0
  1900  021D  3461               	retlw	97
  1901  021E  3400               	retlw	0
  1902  021F  346D               	retlw	109
  1903  0220  3400               	retlw	0
  1904  0221  3470               	retlw	112
  1905  0222  3400               	retlw	0
  1906  0223  346C               	retlw	108
  1907  0224  3400               	retlw	0
  1908  0225  3465               	retlw	101
  1909  0226  3400               	retlw	0
  1910  0227                     __end_of_sd002:	
  1911  0227                     _device_dsc:	
  1912  0227  3412               	retlw	18
  1913  0228  3401               	retlw	1
  1914  0229  3400               	retlw	0
  1915  022A  3402               	retlw	2
  1916  022B  3400               	retlw	0
  1917  022C  3400               	retlw	0
  1918  022D  3400               	retlw	0
  1919  022E  3408               	retlw	8
  1920  022F  34D8               	retlw	216
  1921  0230  3404               	retlw	4
  1922  0231  3459               	retlw	89
  1923  0232  3400               	retlw	0
  1924  0233  3402               	retlw	2
  1925  0234  3400               	retlw	0
  1926  0235  3401               	retlw	1
  1927  0236  3402               	retlw	2
  1928  0237  3400               	retlw	0
  1929  0238  3401               	retlw	1
  1930  0239                     __end_of_device_dsc:	
  1931  0239                     _sd000:	
  1932  0239  3404               	retlw	4
  1933  023A  3403               	retlw	3
  1934  023B  3409               	retlw	9
  1935  023C  3404               	retlw	4
  1936  023D                     __end_of_sd000:	
  1937  000B                     _INTCONbits	set	11
  1938  0012                     _PIR2bits	set	18
  1939  000C                     _PORTAbits	set	12
  1940  0015                     _TMR0	set	21
  1941  009D                     _ADCON0	set	157
  1942  009D                     _ADCON0bits	set	157
  1943  009E                     _ADCON1	set	158
  1944  009E                     _ADCON1bits	set	158
  1945  009F                     _ADCON2	set	159
  1946  009F                     _ADCON2bits	set	159
  1947  009C                     _ADRESH	set	156
  1948  009B                     _ADRESL	set	155
  1949  0095                     _OPTION_REGbits	set	149
  1950  0099                     _OSCCON	set	153
  1951  0091                     _PIE1bits	set	145
  1952  0092                     _PIE2bits	set	146
  1953  008C                     _TRISAbits	set	140
  1954  008D                     _TRISBbits	set	141
  1955  008E                     _TRISCbits	set	142
  1956  010E                     _LATCbits	set	270
  1957  018C                     _ANSELA	set	396
  1958  018C                     _ANSELAbits	set	396
  1959  018D                     _ANSELBbits	set	397
  1960  018E                     _ANSELCbits	set	398
  1961  019F                     _BAUDCON	set	415
  1962  0199                     _RCREG	set	409
  1963  019D                     _RCSTA	set	413
  1964  019D                     _RCSTAbits	set	413
  1965  019A                     _TXREG	set	410
  1966  019E                     _TXSTA	set	414
  1967  039B                     _ACTCON	set	923
  1968  0E96                     _UADDR	set	3734
  1969  0E91                     _UCFG	set	3729
  1970  0E8E                     _UCON	set	3726
  1971  0E8E                     _UCONbits	set	3726
  1972  0E97                     _UEIE	set	3735
  1973  0E93                     _UEIR	set	3731
  1974  0E98                     _UEP0bits	set	3736
  1975  0E92                     _UIE	set	3730
  1976  0E92                     _UIEbits	set	3730
  1977  0E90                     _UIR	set	3728
  1978  0E90                     _UIRbits	set	3728
  1979  0E8F                     _USTAT	set	3727
  1980  0E98                     _UEP0	set	3736
  1981  0E99                     _UEP1	set	3737
  1982                           
  1983                           ; #config settings
  1984  0000                     
  1985                           	psect	cinit
  1986  000F                     start_initialization:	
  1987  000F                     __initialization:	
  1988                           
  1989                           ; Clear objects allocated to COMMON
  1990  000F  01FC               	clrf	__pbssCOMMON& (0+127)
  1991                           
  1992                           ; Clear objects allocated to BANK0
  1993  0010  3069               	movlw	low __pbssBANK0
  1994  0011  0084               	movwf	4
  1995  0012  3000               	movlw	high __pbssBANK0
  1996  0013  0085               	movwf	5
  1997  0014  3007               	movlw	7
  1998  0015  3189  217A  3180   	fcall	clear_ram0
  1999                           
  2000                           ; Clear objects allocated to BANK1
  2001  0018  30E0               	movlw	low __pbssBANK1
  2002  0019  0084               	movwf	4
  2003  001A  3000               	movlw	high __pbssBANK1
  2004  001B  0085               	movwf	5
  2005  001C  3010               	movlw	16
  2006  001D  3189  217A  3180   	fcall	clear_ram0
  2007                           
  2008                           ; Clear objects allocated to BANK2
  2009  0020  3020               	movlw	low __pbssBANK2
  2010  0021  0084               	movwf	4
  2011  0022  3001               	movlw	high __pbssBANK2
  2012  0023  0085               	movwf	5
  2013  0024  3049               	movlw	73
  2014  0025  3189  217A  3180   	fcall	clear_ram0
  2015                           
  2016                           ; Clear objects allocated to BANK3
  2017  0028  30A4               	movlw	low __pbssBANK3
  2018  0029  0084               	movwf	4
  2019  002A  3001               	movlw	high __pbssBANK3
  2020  002B  0085               	movwf	5
  2021  002C  3027               	movlw	39
  2022  002D  3189  217A  3180   	fcall	clear_ram0
  2023                           
  2024                           ; Clear objects allocated to BANK4
  2025  0030  3020               	movlw	low __pbssBANK4
  2026  0031  0084               	movwf	4
  2027  0032  3002               	movlw	high __pbssBANK4
  2028  0033  0085               	movwf	5
  2029  0034  304E               	movlw	78
  2030  0035  3189  217A         	fcall	clear_ram0
  2031  0037                     end_of_initialization:	
  2032                           ;End of C runtime variable initialization code
  2033                           
  2034  0037                     __end_of__initialization:	
  2035  0037  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2036  0038  0020               	movlb	0
  2037  0039  3189  29DC         	ljmp	_main	;jump to C main() function
  2038                           
  2039                           	psect	bssCOMMON
  2040  007C                     __pbssCOMMON:	
  2041  007C                     _pBDTEntryEP0OutNext:	
  2042  007C                     	ds	1
  2043                           
  2044                           	psect	bssBANK0
  2045  0069                     __pbssBANK0:	
  2046  0069                     _pBDTEntryIn:	
  2047  0069                     	ds	2
  2048  006B                     _USBDeferStatusStagePacket:	
  2049  006B                     	ds	1
  2050  006C                     _USBDeviceState:	
  2051  006C                     	ds	1
  2052  006D                     _pBDTEntryEP0OutCurrent:	
  2053  006D                     	ds	1
  2054  006E                     store_key_level@idx_key:	
  2055  006E                     	ds	1
  2056  006F                     _USTATcopy:	
  2057  006F                     	ds	1
  2058                           
  2059                           	psect	bssBANK1
  2060  00E0                     __pbssBANK1:	
  2061  00E0                     _inPipes:	
  2062  00E0                     	ds	5
  2063  00E5                     APP_LEDUpdateUSBStatus@ledCount:	
  2064  00E5                     	ds	2
  2065  00E7                     _USBRxHandle:	
  2066  00E7                     	ds	1
  2067  00E8                     _USBTxHandle:	
  2068  00E8                     	ds	1
  2069  00E9                     _controlTransferState:	
  2070  00E9                     	ds	1
  2071  00EA                     _endpoint_number:	
  2072  00EA                     	ds	1
  2073  00EB                     _msCounter:	
  2074  00EB                     	ds	1
  2075  00EC                     _pitch:	
  2076  00EC                     	ds	1
  2077  00ED                     _shortPacketStatus:	
  2078  00ED                     	ds	1
  2079  00EE                     _USBActiveConfiguration:	
  2080  00EE                     	ds	1
  2081  00EF                     _USBAlternateInterface:	
  2082  00EF                     	ds	1
  2083                           
  2084                           	psect	bssBANK2
  2085  0120                     __pbssBANK2:	
  2086  0120                     process_level@key_states:	
  2087  0120                     	ds	39
  2088  0147                     _outPipes:	
  2089  0147                     	ds	7
  2090  014E                     _USB1msTickCount:	
  2091  014E                     	ds	4
  2092  0152                     _ep_data_in:	
  2093  0152                     	ds	2
  2094  0154                     _ep_data_out:	
  2095  0154                     	ds	2
  2096  0156                     _note_event:	
  2097  0156                     	ds	2
  2098  0158                     _pBDTEntryOut:	
  2099  0158                     	ds	2
  2100  015A                     _BothEP0OutUOWNsSet:	
  2101  015A                     	ds	1
  2102  015B                     _RemoteWakeup:	
  2103  015B                     	ds	1
  2104  015C                     _USBBusIsSuspended:	
  2105  015C                     	ds	1
  2106  015D                     _USBDeferINDataStagePackets:	
  2107  015D                     	ds	1
  2108  015E                     _USBDeferOUTDataStagePackets:	
  2109  015E                     	ds	1
  2110  015F                     _USBStatusStageEnabledFlag1:	
  2111  015F                     	ds	1
  2112  0160                     _USBStatusStageEnabledFlag2:	
  2113  0160                     	ds	1
  2114  0161                     _USBStatusStageTimeoutCounter:	
  2115  0161                     	ds	1
  2116  0162                     _USBTicksSinceSuspendEnd:	
  2117  0162                     	ds	1
  2118  0163                     _is_initialized:	
  2119  0163                     	ds	1
  2120  0164                     _pDst:	
  2121  0164                     	ds	1
  2122  0165                     _sentNoteOff:	
  2123  0165                     	ds	1
  2124  0166                     _wait_timer:	
  2125  0166                     	ds	1
  2126  0167                     is_end_of_scan@scan_counter:	
  2127  0167                     	ds	1
  2128  0168                     scan_task@state:	
  2129  0168                     	ds	1
  2130                           
  2131                           	psect	bssBANK3
  2132  01A4                     __pbssBANK3:	
  2133  01A4                     process_level@key_off_counter:	
  2134  01A4                     	ds	39
  2135                           
  2136                           	psect	bssBANK4
  2137  0220                     __pbssBANK4:	
  2138  0220                     _adc_levels:	
  2139  0220                     	ds	39
  2140  0247                     process_level@key_on_counter:	
  2141  0247                     	ds	39
  2142                           
  2143                           	psect	clrtext
  2144  097A                     clear_ram0:	
  2145                           ;	Called with FSR0 containing the base address, and
  2146                           ;	WREG with the size to clear
  2147                           
  2148  097A  0064               	clrwdt	;clear the watchdog before getting into this loop
  2149  097B                     clrloop0:	
  2150  097B  0180               	clrf	0	;clear RAM location pointed to by FSR
  2151  097C  3101               	addfsr 0,1
  2152  097D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2153  097E  297B               	goto	clrloop0	;have we reached the end yet?
  2154  097F  3400               	retlw	0	;all done for this memory range, return
  2155                           
  2156                           	psect	cstackCOMMON
  2157  0070                     __pcstackCOMMON:	
  2158  0070                     ?_LED_Enable:	
  2159  0070                     ?_BUTTON_Enable:	
  2160                           ; 0 bytes @ 0x0
  2161                           
  2162  0070                     ?_LED_Off:	
  2163                           ; 0 bytes @ 0x0
  2164                           
  2165  0070                     ?_LED_On:	
  2166                           ; 0 bytes @ 0x0
  2167                           
  2168  0070                     ?_USBDeviceInit:	
  2169                           ; 0 bytes @ 0x0
  2170                           
  2171  0070                     ?_USBDeviceTasks:	
  2172                           ; 0 bytes @ 0x0
  2173                           
  2174  0070                     ?_APP_DeviceAudioMIDITasks:	
  2175                           ; 0 bytes @ 0x0
  2176                           
  2177  0070                     ?_APP_DeviceAudioMIDISOFHandler:	
  2178                           ; 0 bytes @ 0x0
  2179                           
  2180  0070                     ?_APP_DeviceAudioMIDIInitialize:	
  2181                           ; 0 bytes @ 0x0
  2182                           
  2183  0070                     ?_USBWakeFromSuspend:	
  2184                           ; 0 bytes @ 0x0
  2185                           
  2186  0070                     ?_USBSuspend:	
  2187                           ; 0 bytes @ 0x0
  2188                           
  2189  0070                     ?_USBIncrement1msInternalTimers:	
  2190                           ; 0 bytes @ 0x0
  2191                           
  2192  0070                     ?_USBCtrlEPAllowStatusStage:	
  2193                           ; 0 bytes @ 0x0
  2194                           
  2195  0070                     ?_USBStallHandler:	
  2196                           ; 0 bytes @ 0x0
  2197                           
  2198  0070                     ?_USBCtrlEPService:	
  2199                           ; 0 bytes @ 0x0
  2200                           
  2201  0070                     ?_USBCtrlTrfTxService:	
  2202                           ; 0 bytes @ 0x0
  2203                           
  2204  0070                     ?_USBCtrlTrfSetupHandler:	
  2205                           ; 0 bytes @ 0x0
  2206                           
  2207  0070                     ?_USBCtrlTrfOutHandler:	
  2208                           ; 0 bytes @ 0x0
  2209                           
  2210  0070                     ?_USBCtrlTrfInHandler:	
  2211                           ; 0 bytes @ 0x0
  2212                           
  2213  0070                     ?_USBCheckStdRequest:	
  2214                           ; 0 bytes @ 0x0
  2215                           
  2216  0070                     ?_USBStdFeatureReqHandler:	
  2217                           ; 0 bytes @ 0x0
  2218                           
  2219  0070                     ?_SYSTEM_Initialize:	
  2220                           ; 0 bytes @ 0x0
  2221                           
  2222  0070                     ?_SYS_InterruptHigh:	
  2223                           ; 0 bytes @ 0x0
  2224                           
  2225  0070                     ??_SYS_InterruptHigh:	
  2226                           ; 0 bytes @ 0x0
  2227                           
  2228  0070                     ?_APP_LEDUpdateUSBStatus:	
  2229                           ; 0 bytes @ 0x0
  2230                           
  2231  0070                     ?_main:	
  2232                           ; 0 bytes @ 0x0
  2233                           
  2234  0070                     ?_scan_init:	
  2235                           ; 0 bytes @ 0x0
  2236                           
  2237  0070                     ?_set_timer:	
  2238                           ; 0 bytes @ 0x0
  2239                           
  2240  0070                     ?_run_adc:	
  2241                           ; 0 bytes @ 0x0
  2242                           
  2243  0070                     ?_USBCtrlEPAllowDataStage:	
  2244                           ; 0 bytes @ 0x0
  2245                           
  2246  0070                     ?_USBCtrlEPServiceComplete:	
  2247                           ; 0 bytes @ 0x0
  2248                           
  2249  0070                     ?_USBCtrlTrfRxService:	
  2250                           ; 0 bytes @ 0x0
  2251                           
  2252  0070                     ?_USBStdSetCfgHandler:	
  2253                           ; 0 bytes @ 0x0
  2254                           
  2255  0070                     ?_USBStdGetDscHandler:	
  2256                           ; 0 bytes @ 0x0
  2257                           
  2258  0070                     ?_USBStdGetStatusHandler:	
  2259                           ; 0 bytes @ 0x0
  2260                           
  2261  0070                     ?_waiting_for_timer:	
  2262                           ; 0 bytes @ 0x0
  2263                           
  2264  0070                     ?_get_data:	
  2265                           ; 1 bytes @ 0x0
  2266                           
  2267  0070                     ?_is_end_of_scan:	
  2268                           ; 1 bytes @ 0x0
  2269                           
  2270  0070                     ?_is_adc_ready:	
  2271                           ; 1 bytes @ 0x0
  2272                           
  2273  0070                     ?_get_adc:	
  2274                           ; 1 bytes @ 0x0
  2275                           
  2276                           
  2277                           ; 1 bytes @ 0x0
  2278  0070                     	ds	1
  2279  0071                     ??_LED_Enable:	
  2280  0071                     ??_BUTTON_Enable:	
  2281                           ; 0 bytes @ 0x1
  2282                           
  2283  0071                     ??_LED_Off:	
  2284                           ; 0 bytes @ 0x1
  2285                           
  2286  0071                     ??_LED_On:	
  2287                           ; 0 bytes @ 0x1
  2288                           
  2289  0071                     ??_USBDeviceInit:	
  2290                           ; 0 bytes @ 0x1
  2291                           
  2292  0071                     ??_APP_DeviceAudioMIDISOFHandler:	
  2293                           ; 0 bytes @ 0x1
  2294                           
  2295  0071                     ??_USBIncrement1msInternalTimers:	
  2296                           ; 0 bytes @ 0x1
  2297                           
  2298  0071                     ??_USBCtrlEPAllowStatusStage:	
  2299                           ; 0 bytes @ 0x1
  2300                           
  2301  0071                     ??_USBStallHandler:	
  2302                           ; 0 bytes @ 0x1
  2303                           
  2304  0071                     ?_USBConfigureEndpoint:	
  2305                           ; 0 bytes @ 0x1
  2306                           
  2307  0071                     ??_USBCtrlTrfTxService:	
  2308                           ; 0 bytes @ 0x1
  2309                           
  2310  0071                     ??_scan_init:	
  2311                           ; 0 bytes @ 0x1
  2312                           
  2313  0071                     ??_set_timer:	
  2314                           ; 0 bytes @ 0x1
  2315                           
  2316  0071                     ??_waiting_for_timer:	
  2317                           ; 0 bytes @ 0x1
  2318                           
  2319  0071                     ?_set_clock_and_data:	
  2320                           ; 0 bytes @ 0x1
  2321                           
  2322  0071                     ??_get_data:	
  2323                           ; 0 bytes @ 0x1
  2324                           
  2325  0071                     ??_is_end_of_scan:	
  2326                           ; 0 bytes @ 0x1
  2327                           
  2328  0071                     ??_run_adc:	
  2329                           ; 0 bytes @ 0x1
  2330                           
  2331  0071                     ??_is_adc_ready:	
  2332                           ; 0 bytes @ 0x1
  2333                           
  2334  0071                     ??_get_adc:	
  2335                           ; 0 bytes @ 0x1
  2336                           
  2337  0071                     ??_USBStdGetDscHandler:	
  2338                           ; 0 bytes @ 0x1
  2339                           
  2340  0071                     ??_USBStdGetStatusHandler:	
  2341                           ; 0 bytes @ 0x1
  2342                           
  2343  0071                     ?_USBTransferOnePacket:	
  2344                           ; 0 bytes @ 0x1
  2345                           
  2346  0071                     ?_memset:	
  2347                           ; 1 bytes @ 0x1
  2348                           
  2349  0071                     _waiting_for_timer$814:	
  2350                           ; 1 bytes @ 0x1
  2351                           
  2352  0071                     set_clock_and_data@d:	
  2353                           ; 1 bytes @ 0x1
  2354                           
  2355  0071                     BUTTON_Enable@button:	
  2356                           ; 1 bytes @ 0x1
  2357                           
  2358  0071                     LED_On@led:	
  2359                           ; 1 bytes @ 0x1
  2360                           
  2361  0071                     LED_Off@led:	
  2362                           ; 1 bytes @ 0x1
  2363                           
  2364  0071                     LED_Enable@led:	
  2365                           ; 1 bytes @ 0x1
  2366                           
  2367  0071                     USBTransferOnePacket@dir:	
  2368                           ; 1 bytes @ 0x1
  2369                           
  2370  0071                     USBConfigureEndpoint@direction:	
  2371                           ; 1 bytes @ 0x1
  2372                           
  2373  0071                     memset@c:	
  2374                           ; 1 bytes @ 0x1
  2375                           
  2376                           
  2377                           ; 2 bytes @ 0x1
  2378  0071                     	ds	1
  2379  0072                     ??_USBConfigureEndpoint:	
  2380  0072                     ??_SYSTEM_Initialize:	
  2381                           ; 0 bytes @ 0x2
  2382                           
  2383  0072                     ??_APP_LEDUpdateUSBStatus:	
  2384                           ; 0 bytes @ 0x2
  2385                           
  2386  0072                     ??_set_clock_and_data:	
  2387                           ; 0 bytes @ 0x2
  2388                           
  2389  0072                     ?_process_level:	
  2390                           ; 0 bytes @ 0x2
  2391                           
  2392  0072                     SYSTEM_Initialize@state:	
  2393                           ; 0 bytes @ 0x2
  2394                           
  2395  0072                     set_clock_and_data@c:	
  2396                           ; 1 bytes @ 0x2
  2397                           
  2398  0072                     process_level@old_level:	
  2399                           ; 1 bytes @ 0x2
  2400                           
  2401  0072                     USBStdGetStatusHandler@p:	
  2402                           ; 1 bytes @ 0x2
  2403                           
  2404  0072                     USBDeviceInit@p:	
  2405                           ; 1 bytes @ 0x2
  2406                           
  2407  0072                     USBTransferOnePacket@data:	
  2408                           ; 2 bytes @ 0x2
  2409                           
  2410                           
  2411                           ; 2 bytes @ 0x2
  2412  0072                     	ds	1
  2413  0073                     ??_USBCtrlTrfRxService:	
  2414  0073                     is_end_of_scan@res:	
  2415                           ; 0 bytes @ 0x3
  2416                           
  2417  0073                     process_level@new_level:	
  2418                           ; 1 bytes @ 0x3
  2419                           
  2420  0073                     USBCtrlTrfTxService@byteToSend:	
  2421                           ; 1 bytes @ 0x3
  2422                           
  2423  0073                     memset@n:	
  2424                           ; 1 bytes @ 0x3
  2425                           
  2426                           
  2427                           ; 2 bytes @ 0x3
  2428  0073                     	ds	1
  2429  0074                     ??_USBCtrlTrfInHandler:	
  2430  0074                     ??_process_level:	
  2431                           ; 0 bytes @ 0x4
  2432                           
  2433  0074                     ??_USBCtrlEPAllowDataStage:	
  2434                           ; 0 bytes @ 0x4
  2435                           
  2436  0074                     USBDeviceInit@i_1706:	
  2437                           ; 0 bytes @ 0x4
  2438                           
  2439  0074                     USBTransferOnePacket@len:	
  2440                           ; 1 bytes @ 0x4
  2441                           
  2442                           
  2443                           ; 1 bytes @ 0x4
  2444  0074                     	ds	1
  2445  0075                     ??_USBTransferOnePacket:	
  2446  0075                     ??_memset:	
  2447                           ; 0 bytes @ 0x5
  2448                           
  2449  0075                     USBDeviceInit@i:	
  2450                           ; 0 bytes @ 0x5
  2451                           
  2452  0075                     USBCtrlTrfRxService@i:	
  2453                           ; 1 bytes @ 0x5
  2454                           
  2455                           
  2456                           ; 1 bytes @ 0x5
  2457  0075                     	ds	1
  2458  0076                     ??_USBCtrlEPServiceComplete:	
  2459  0076                     USBConfigureEndpoint@EPNum:	
  2460                           ; 0 bytes @ 0x6
  2461                           
  2462  0076                     USBCtrlTrfRxService@byteToRead:	
  2463                           ; 1 bytes @ 0x6
  2464                           
  2465  0076                     USBCtrlTrfInHandler@lastDTS:	
  2466                           ; 1 bytes @ 0x6
  2467                           
  2468  0076                     memset@p:	
  2469                           ; 1 bytes @ 0x6
  2470                           
  2471                           
  2472                           ; 1 bytes @ 0x6
  2473  0076                     	ds	1
  2474  0077                     ??_USBCtrlTrfOutHandler:	
  2475  0077                     ?_store_key_level:	
  2476                           ; 0 bytes @ 0x7
  2477                           
  2478  0077                     store_key_level@end_of_scan:	
  2479                           ; 1 bytes @ 0x7
  2480                           
  2481  0077                     USBTransferOnePacket@ep:	
  2482                           ; 1 bytes @ 0x7
  2483                           
  2484  0077                     USBConfigureEndpoint@handle:	
  2485                           ; 1 bytes @ 0x7
  2486                           
  2487  0077                     memset@p1:	
  2488                           ; 1 bytes @ 0x7
  2489                           
  2490                           
  2491                           ; 1 bytes @ 0x7
  2492  0077                     	ds	1
  2493  0078                     ?_USBEnableEndpoint:	
  2494  0078                     ??_store_key_level:	
  2495                           ; 0 bytes @ 0x8
  2496                           
  2497  0078                     USBEnableEndpoint@options:	
  2498                           ; 0 bytes @ 0x8
  2499                           
  2500  0078                     USBTransferOnePacket@handle:	
  2501                           ; 1 bytes @ 0x8
  2502                           
  2503                           
  2504                           ; 1 bytes @ 0x8
  2505  0078                     	ds	1
  2506  0079                     ??_USBEnableEndpoint:	
  2507                           
  2508                           ; 0 bytes @ 0x9
  2509  0079                     	ds	1
  2510  007A                     store_key_level@level:	
  2511                           
  2512                           ; 1 bytes @ 0xA
  2513  007A                     	ds	1
  2514  007B                     ??_scan_task:	
  2515  007B                     ??_USBWakeFromSuspend:	
  2516                           ; 0 bytes @ 0xB
  2517                           
  2518  007B                     ??_USBSuspend:	
  2519                           ; 0 bytes @ 0xB
  2520                           
  2521  007B                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2522                           ; 0 bytes @ 0xB
  2523                           
  2524  007B                     ??_USBStdSetCfgHandler:	
  2525                           ; 0 bytes @ 0xB
  2526                           
  2527                           
  2528                           ; 0 bytes @ 0xB
  2529  007B                     	ds	1
  2530  007C                     ??_main:	
  2531                           
  2532                           	psect	cstackBANK0
  2533  0050                     __pcstackBANK0:	
  2534                           ; 0 bytes @ 0xC
  2535                           
  2536  0050                     process_level@old_state:	
  2537  0050                     USBEnableEndpoint@p:	
  2538                           ; 2 bytes @ 0x0
  2539                           
  2540                           
  2541                           ; 2 bytes @ 0x0
  2542  0050                     	ds	2
  2543  0052                     USBEnableEndpoint@ep:	
  2544  0052                     process_level@current_state:	
  2545                           ; 1 bytes @ 0x2
  2546                           
  2547                           
  2548                           ; 2 bytes @ 0x2
  2549  0052                     	ds	1
  2550  0053                     ??_APP_DeviceAudioMIDIInitialize:	
  2551                           
  2552                           ; 0 bytes @ 0x3
  2553  0053                     	ds	1
  2554  0054                     _process_level$852:	
  2555                           
  2556                           ; 2 bytes @ 0x4
  2557  0054                     	ds	1
  2558  0055                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  2559  0055                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2560                           ; 1 bytes @ 0x5
  2561                           
  2562                           
  2563                           ; 2 bytes @ 0x5
  2564  0055                     	ds	1
  2565  0056                     process_level@off_flag:	
  2566                           
  2567                           ; 1 bytes @ 0x6
  2568  0056                     	ds	1
  2569  0057                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2570  0057                     _process_level$851:	
  2571                           ; 1 bytes @ 0x7
  2572                           
  2573                           
  2574                           ; 1 bytes @ 0x7
  2575  0057                     	ds	1
  2576  0058                     process_level@on_flag:	
  2577  0058                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2578                           ; 1 bytes @ 0x8
  2579                           
  2580                           
  2581                           ; 2 bytes @ 0x8
  2582  0058                     	ds	1
  2583  0059                     process_level@filtered_state:	
  2584                           
  2585                           ; 1 bytes @ 0x9
  2586  0059                     	ds	1
  2587  005A                     ??_USBStdFeatureReqHandler:	
  2588  005A                     process_level@idx_key:	
  2589                           ; 0 bytes @ 0xA
  2590                           
  2591  005A                     USBStdSetCfgHandler@p:	
  2592                           ; 1 bytes @ 0xA
  2593                           
  2594                           
  2595                           ; 2 bytes @ 0xA
  2596  005A                     	ds	1
  2597  005B                     ?_scan_task:	
  2598  005B                     scan_task@velocity:	
  2599                           ; 1 bytes @ 0xB
  2600                           
  2601                           
  2602                           ; 1 bytes @ 0xB
  2603  005B                     	ds	1
  2604  005C                     USBStdSetCfgHandler@i_2037:	
  2605  005C                     _scan_task$870:	
  2606                           ; 1 bytes @ 0xC
  2607                           
  2608  005C                     USBStdFeatureReqHandler@pUEP:	
  2609                           ; 2 bytes @ 0xC
  2610                           
  2611                           
  2612                           ; 2 bytes @ 0xC
  2613  005C                     	ds	1
  2614  005D                     USBStdSetCfgHandler@i:	
  2615                           
  2616                           ; 1 bytes @ 0xD
  2617  005D                     	ds	1
  2618  005E                     USBStdFeatureReqHandler@current_ep_data:	
  2619  005E                     _scan_task$874:	
  2620                           ; 1 bytes @ 0xE
  2621                           
  2622                           
  2623                           ; 2 bytes @ 0xE
  2624  005E                     	ds	1
  2625  005F                     USBStdFeatureReqHandler@p:	
  2626                           
  2627                           ; 1 bytes @ 0xF
  2628  005F                     	ds	1
  2629  0060                     ??_USBCheckStdRequest:	
  2630  0060                     scan_task@note:	
  2631                           ; 0 bytes @ 0x10
  2632                           
  2633                           
  2634                           ; 1 bytes @ 0x10
  2635  0060                     	ds	1
  2636  0061                     ??_APP_DeviceAudioMIDITasks:	
  2637  0061                     ??_USBCtrlTrfSetupHandler:	
  2638                           ; 0 bytes @ 0x11
  2639                           
  2640                           
  2641                           ; 0 bytes @ 0x11
  2642  0061                     	ds	1
  2643  0062                     ??_USBCtrlEPService:	
  2644                           
  2645                           ; 0 bytes @ 0x12
  2646  0062                     	ds	1
  2647  0063                     _APP_DeviceAudioMIDITasks$415:	
  2648                           
  2649                           ; 2 bytes @ 0x13
  2650  0063                     	ds	2
  2651  0065                     USBCtrlEPService@setup_cnt:	
  2652  0065                     _APP_DeviceAudioMIDITasks$456:	
  2653                           ; 1 bytes @ 0x15
  2654                           
  2655                           
  2656                           ; 2 bytes @ 0x15
  2657  0065                     	ds	1
  2658  0066                     ??_USBDeviceTasks:	
  2659                           
  2660                           ; 0 bytes @ 0x16
  2661  0066                     	ds	1
  2662  0067                     APP_DeviceAudioMIDITasks@scan_pitch:	
  2663                           
  2664                           ; 1 bytes @ 0x17
  2665  0067                     	ds	1
  2666  0068                     APP_DeviceAudioMIDITasks@velocity:	
  2667  0068                     USBDeviceTasks@i:	
  2668                           ; 1 bytes @ 0x18
  2669                           
  2670                           
  2671                           ; 1 bytes @ 0x18
  2672  0068                     	ds	1
  2673                           
  2674                           	psect	maintext
  2675  09DC                     __pmaintext:	
  2676 ;;
  2677 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2678 ;;
  2679 ;; *************** function _main *****************
  2680 ;; Defined at:
  2681 ;;		line 34 in file "../src/main.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;		None
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;		None
  2686 ;; Return value:  Size  Location     Type
  2687 ;;		None               void
  2688 ;; Registers used:
  2689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2690 ;; Tracked objects:
  2691 ;;		On entry : B1F/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2699 ;;Total ram usage:        0 bytes
  2700 ;; Hardware stack levels required when called:   10
  2701 ;; This function calls:
  2702 ;;		_APP_DeviceAudioMIDITasks
  2703 ;;		_SYSTEM_Initialize
  2704 ;;		_USBDeviceInit
  2705 ;;		_USBDeviceTasks
  2706 ;; This function is called by:
  2707 ;;		Startup code after reset
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           
  2712                           ;psect for function _main
  2713  09DC                     _main:	
  2714                           
  2715                           ;main.c: 36: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  2716                           
  2717                           ;incstack = 0
  2718                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2719  09DC  3000               	movlw	0
  2720  09DD  318A  22A1  3189   	fcall	_SYSTEM_Initialize
  2721                           
  2722                           ;main.c: 38: USBDeviceInit();
  2723  09E0  3185  259D  3189   	fcall	_USBDeviceInit
  2724  09E3                     l4602:	
  2725                           ;main.c: 39: ;
  2726                           ;main.c: 41: while(1)
  2727                           
  2728                           ;main.c: 75: {
  2729                           ;main.c: 77: continue;
  2730                           
  2731                           ;main.c: 65: {
  2732                           ;main.c: 67: continue;
  2733                           
  2734                           
  2735                           ;main.c: 42: {
  2736                           ;main.c: 43: ;
  2737                           ;main.c: 58: USBDeviceTasks();
  2738  09E3  3182  223D  3189   	fcall	_USBDeviceTasks
  2739                           
  2740                           ;main.c: 64: if( USBDeviceState < CONFIGURED_STATE )
  2741  09E6  3020               	movlw	32
  2742  09E7  0020               	movlb	0	; select bank0
  2743  09E8  026C               	subwf	_USBDeviceState,w
  2744  09E9  1C03               	btfss	3,0
  2745  09EA  29E3               	goto	l4602
  2746                           
  2747                           ;main.c: 68: }
  2748                           ;main.c: 74: if( UCONbits.SUSPND == 1 )
  2749  09EB  003D               	movlb	29	; select bank29
  2750  09EC  188E               	btfsc	14,1	;volatile
  2751  09ED  29E3               	goto	l4602
  2752                           
  2753                           ;main.c: 78: }
  2754                           ;main.c: 81: APP_DeviceAudioMIDITasks();
  2755  09EE  3183  232C  3189   	fcall	_APP_DeviceAudioMIDITasks
  2756  09F1  29E3               	goto	l4602
  2757  09F2                     __end_of_main:	
  2758                           
  2759                           	psect	text1
  2760  023D                     __ptext1:	
  2761 ;; *************** function _USBDeviceTasks *****************
  2762 ;; Defined at:
  2763 ;;		line 496 in file "../framework/usb/usb_device.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;		None
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  i               1   24[BANK0 ] unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;		None               void
  2770 ;; Registers used:
  2771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2778 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2779 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2780 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2781 ;;Total ram usage:        3 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; Hardware stack levels required when called:    9
  2784 ;; This function calls:
  2785 ;;		_USBCtrlEPAllowStatusStage
  2786 ;;		_USBCtrlEPService
  2787 ;;		_USBDeviceInit
  2788 ;;		_USBIncrement1msInternalTimers
  2789 ;;		_USBStallHandler
  2790 ;;		_USBSuspend
  2791 ;;		_USBWakeFromSuspend
  2792 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  2793 ;; This function is called by:
  2794 ;;		_main
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           
  2799                           ;psect for function _USBDeviceTasks
  2800  023D                     _USBDeviceTasks:	
  2801                           
  2802                           ;usb_device.c: 563: }
  2803                           ;usb_device.c: 585: if(USBDeviceState == DETACHED_STATE)
  2804                           
  2805                           ;usb_device.c: 562: return;
  2806                           
  2807                           ;usb_device.c: 561: PIR2bits.USBIF = 0;;
  2808                           
  2809                           ;usb_device.c: 533: USBDeviceState = DETACHED_STATE;
  2810                           
  2811                           ;usb_device.c: 530: UIE = 0;
  2812                           
  2813                           ;usb_device.c: 525: {
  2814                           ;usb_device.c: 527: UCON = 0;
  2815                           
  2816                           ;usb_device.c: 498: uint8_t i;
  2817                           ;usb_device.c: 524: if (1 != 1)
  2818                           
  2819                           ;incstack = 0
  2820                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2821  023D  0020               	movlb	0	; select bank0
  2822  023E  086C               	movf	_USBDeviceState,w
  2823  023F  1D03               	btfss	3,2
  2824  0240  2A51               	goto	l4498
  2825                           
  2826                           ;usb_device.c: 586: {
  2827                           ;usb_device.c: 588: UCON = 0;
  2828  0241  003D               	movlb	29	; select bank29
  2829  0242  018E               	clrf	14	;volatile
  2830                           
  2831                           ;usb_device.c: 591: UIE = 0;
  2832  0243  0192               	clrf	18	;volatile
  2833                           
  2834                           ;usb_device.c: 595: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  2835  0244  3016               	movlw	22
  2836  0245  0091               	movwf	17	;volatile
  2837  0246  309F               	movlw	159
  2838  0247  0097               	movwf	23	;volatile
  2839  0248  307B               	movlw	123
  2840  0249  0092               	movwf	18	;volatile
  2841  024A                     l573:	
  2842                           ;usb_device.c: 598: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  2843                           
  2844  024A  198E               	btfsc	14,3	;volatile
  2845  024B  2A4E               	goto	l575
  2846  024C  158E               	bsf	14,3	;volatile
  2847  024D  2A4A               	goto	l573
  2848  024E                     l575:	
  2849                           
  2850                           ;usb_device.c: 601: USBDeviceState = ATTACHED_STATE;
  2851  024E  0020               	movlb	0	; select bank0
  2852  024F  01EC               	clrf	_USBDeviceState
  2853  0250  0AEC               	incf	_USBDeviceState,f
  2854  0251                     l4498:	
  2855                           
  2856                           ;usb_device.c: 606: }
  2857                           ;usb_device.c: 609: if(USBDeviceState == ATTACHED_STATE)
  2858  0251  036C               	decf	_USBDeviceState,w
  2859  0252  1D03               	btfss	3,2
  2860  0253  2A60               	goto	l4510
  2861                           
  2862                           ;usb_device.c: 610: {
  2863                           ;usb_device.c: 620: if(!UCONbits.SE0)
  2864  0254  003D               	movlb	29	; select bank29
  2865  0255  1A8E               	btfsc	14,5	;volatile
  2866  0256  2A60               	goto	l4510
  2867                           
  2868                           ;usb_device.c: 621: {
  2869                           ;usb_device.c: 627: {UIR = 0;};
  2870  0257  0190               	clrf	16	;volatile
  2871                           
  2872                           ;usb_device.c: 631: UIE=0;
  2873  0258  0192               	clrf	18	;volatile
  2874                           
  2875                           ;usb_device.c: 633: UIEbits.URSTIE = 1;
  2876  0259  1412               	bsf	18,0	;volatile
  2877                           
  2878                           ;usb_device.c: 634: UIEbits.IDLEIE = 1;
  2879  025A  1612               	bsf	18,4	;volatile
  2880                           
  2881                           ;usb_device.c: 635: USBDeviceState = POWERED_STATE;
  2882  025B  3002               	movlw	2
  2883  025C  0020               	movlb	0	; select bank0
  2884  025D  00E6               	movwf	??_USBDeviceTasks
  2885  025E  0866               	movf	??_USBDeviceTasks,w
  2886  025F  00EC               	movwf	_USBDeviceState
  2887  0260                     l4510:	
  2888                           
  2889                           ;usb_device.c: 636: }
  2890                           ;usb_device.c: 637: }
  2891                           ;usb_device.c: 653: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  2892  0260  003D               	movlb	29	; select bank29
  2893  0261  1910               	btfsc	16,2	;volatile
  2894  0262  1D12               	btfss	18,2	;volatile
  2895  0263  2A6D               	goto	l4518
  2896                           
  2897                           ;usb_device.c: 654: {
  2898                           ;usb_device.c: 655: (UIR &= 0xFB);
  2899  0264  30FB               	movlw	251
  2900  0265  0020               	movlb	0	; select bank0
  2901  0266  00E6               	movwf	??_USBDeviceTasks
  2902  0267  0866               	movf	??_USBDeviceTasks,w
  2903  0268  003D               	movlb	29	; select bank29
  2904  0269  0590               	andwf	16,f	;volatile
  2905                           
  2906                           ;usb_device.c: 659: USBWakeFromSuspend();
  2907  026A  318A  2286  3182   	fcall	_USBWakeFromSuspend
  2908  026D                     l4518:	
  2909                           
  2910                           ;usb_device.c: 661: }
  2911                           ;usb_device.c: 666: if(UCONbits.SUSPND==1)
  2912  026D  003D               	movlb	29	; select bank29
  2913  026E  1C8E               	btfss	14,1	;volatile
  2914  026F  2A73               	goto	l579
  2915                           
  2916                           ;usb_device.c: 667: {
  2917                           ;usb_device.c: 668: PIR2bits.USBIF = 0;;
  2918  0270  0020               	movlb	0	; select bank0
  2919  0271  1112               	bcf	18,2	;volatile
  2920                           
  2921                           ;usb_device.c: 669: return;
  2922  0272  0008               	return
  2923  0273                     l579:	
  2924                           
  2925                           ;usb_device.c: 670: }
  2926                           ;usb_device.c: 682: if(UIRbits.URSTIF && UIEbits.URSTIE)
  2927  0273  1810               	btfsc	16,0	;volatile
  2928  0274  1C12               	btfss	18,0	;volatile
  2929  0275  2A83               	goto	l4530
  2930                           
  2931                           ;usb_device.c: 683: {
  2932                           ;usb_device.c: 684: USBDeviceInit();
  2933  0276  3185  259D  3182   	fcall	_USBDeviceInit
  2934                           
  2935                           ;usb_device.c: 688: ;
  2936                           ;usb_device.c: 690: USBDeviceState = DEFAULT_STATE;
  2937  0279  3004               	movlw	4
  2938  027A  0020               	movlb	0	; select bank0
  2939  027B  00E6               	movwf	??_USBDeviceTasks
  2940  027C  0866               	movf	??_USBDeviceTasks,w
  2941  027D  00EC               	movwf	_USBDeviceState
  2942                           
  2943                           ;usb_device.c: 700: (UIR &= 0xFE);
  2944  027E  30FE               	movlw	254
  2945  027F  00E6               	movwf	??_USBDeviceTasks
  2946  0280  0866               	movf	??_USBDeviceTasks,w
  2947  0281  003D               	movlb	29	; select bank29
  2948  0282  0590               	andwf	16,f	;volatile
  2949  0283                     l4530:	
  2950                           
  2951                           ;usb_device.c: 701: }
  2952                           ;usb_device.c: 706: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  2953  0283  1A10               	btfsc	16,4	;volatile
  2954  0284  1E12               	btfss	18,4	;volatile
  2955  0285  2A89               	goto	l4536
  2956                           
  2957                           ;usb_device.c: 707: {
  2958                           ;usb_device.c: 713: USBSuspend();
  2959  0286  3189  21F2  3182   	fcall	_USBSuspend
  2960  0289                     l4536:	
  2961                           
  2962                           ;usb_device.c: 715: }
  2963                           ;usb_device.c: 727: if(UIRbits.SOFIF)
  2964  0289  003D               	movlb	29	; select bank29
  2965  028A  1F10               	btfss	16,6	;volatile
  2966  028B  2AB0               	goto	l4552
  2967                           
  2968                           ;usb_device.c: 728: {
  2969                           ;usb_device.c: 730: if(UIEbits.SOFIE)
  2970  028C  1F12               	btfss	18,6	;volatile
  2971  028D  2A9B               	goto	l4542
  2972                           
  2973                           ;usb_device.c: 731: {
  2974                           ;usb_device.c: 732: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  2975  028E  3073               	movlw	115
  2976  028F  0020               	movlb	0	; select bank0
  2977  0290  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  2978  0291  3000               	movlw	0
  2979  0292  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  2980  0293  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  2981  0294  3001               	movlw	1
  2982  0295  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  2983  0296  3000               	movlw	0
  2984  0297  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  2985  0298  318B  2386  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  2986  029B                     l4542:	
  2987                           
  2988                           ;usb_device.c: 733: }
  2989                           ;usb_device.c: 734: (UIR &= 0xBF);
  2990  029B  30BF               	movlw	191
  2991  029C  0020               	movlb	0	; select bank0
  2992  029D  00E6               	movwf	??_USBDeviceTasks
  2993  029E  0866               	movf	??_USBDeviceTasks,w
  2994  029F  003D               	movlb	29	; select bank29
  2995  02A0  0590               	andwf	16,f	;volatile
  2996                           
  2997                           ;usb_device.c: 737: USBIncrement1msInternalTimers();
  2998  02A1  318A  2209  3182   	fcall	_USBIncrement1msInternalTimers
  2999                           
  3000                           ;usb_device.c: 754: if(USBStatusStageTimeoutCounter != 0u)
  3001  02A4  0022               	movlb	2	; select bank2
  3002  02A5  0861               	movf	_USBStatusStageTimeoutCounter^(0+256),w
  3003  02A6  1903               	btfsc	3,2
  3004  02A7  2AAA               	goto	l584
  3005                           
  3006                           ;usb_device.c: 755: {
  3007                           ;usb_device.c: 756: USBStatusStageTimeoutCounter--;
  3008  02A8  3001               	movlw	1
  3009  02A9  02E1               	subwf	_USBStatusStageTimeoutCounter^(0+256),f
  3010  02AA                     l584:	
  3011                           
  3012                           ;usb_device.c: 757: }
  3013                           ;usb_device.c: 763: if(USBStatusStageTimeoutCounter == 0)
  3014  02AA  0861               	movf	_USBStatusStageTimeoutCounter^(0+256),w
  3015  02AB  1D03               	btfss	3,2
  3016  02AC  2AB0               	goto	l4552
  3017                           
  3018                           ;usb_device.c: 764: {
  3019                           ;usb_device.c: 765: USBCtrlEPAllowStatusStage();
  3020  02AD  318E  263A  3182   	fcall	_USBCtrlEPAllowStatusStage
  3021  02B0                     l4552:	
  3022                           
  3023                           ;usb_device.c: 766: }
  3024                           ;usb_device.c: 768: }
  3025                           ;usb_device.c: 770: if(UIRbits.STALLIF && UIEbits.STALLIE)
  3026  02B0  003D               	movlb	29	; select bank29
  3027  02B1  1A90               	btfsc	16,5	;volatile
  3028  02B2  1E92               	btfss	18,5	;volatile
  3029  02B3  2AB7               	goto	l4558
  3030                           
  3031                           ;usb_device.c: 771: {
  3032                           ;usb_device.c: 772: USBStallHandler();
  3033  02B4  3187  27DC  3182   	fcall	_USBStallHandler
  3034  02B7                     l4558:	
  3035                           
  3036                           ;usb_device.c: 773: }
  3037                           ;usb_device.c: 775: if(UIRbits.UERRIF && UIEbits.UERRIE)
  3038  02B7  003D               	movlb	29	; select bank29
  3039  02B8  1890               	btfsc	16,1	;volatile
  3040  02B9  1C92               	btfss	18,1	;volatile
  3041  02BA  2ACA               	goto	l4566
  3042                           
  3043                           ;usb_device.c: 776: {
  3044                           ;usb_device.c: 777: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  3045  02BB  30FF               	movlw	255
  3046  02BC  0020               	movlb	0	; select bank0
  3047  02BD  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3048  02BE  307F               	movlw	127
  3049  02BF  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3050  02C0  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3051  02C1  3001               	movlw	1
  3052  02C2  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3053  02C3  3000               	movlw	0
  3054  02C4  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3055  02C5  318B  2386  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3056                           
  3057                           ;usb_device.c: 778: {UEIR = 0;};
  3058  02C8  003D               	movlb	29	; select bank29
  3059  02C9  0193               	clrf	19	;volatile
  3060  02CA                     l4566:	
  3061                           
  3062                           ;usb_device.c: 786: }
  3063                           ;usb_device.c: 793: if(USBDeviceState < DEFAULT_STATE)
  3064  02CA  3004               	movlw	4
  3065  02CB  0020               	movlb	0	; select bank0
  3066  02CC  026C               	subwf	_USBDeviceState,w
  3067  02CD  1803               	skipnc
  3068  02CE  2AD1               	goto	l588
  3069                           
  3070                           ;usb_device.c: 794: {
  3071                           ;usb_device.c: 795: PIR2bits.USBIF = 0;;
  3072  02CF  1112               	bcf	18,2	;volatile
  3073                           
  3074                           ;usb_device.c: 796: return;
  3075  02D0  0008               	return
  3076  02D1                     l588:	
  3077                           
  3078                           ;usb_device.c: 797: }
  3079                           ;usb_device.c: 802: if(UIEbits.TRNIE)
  3080  02D1  003D               	movlb	29	; select bank29
  3081  02D2  1D92               	btfss	18,3	;volatile
  3082  02D3  2B29               	goto	l589
  3083                           
  3084                           ;usb_device.c: 803: {
  3085                           ;usb_device.c: 804: for(i = 0; i < 4u; i++)
  3086  02D4  0020               	movlb	0	; select bank0
  3087  02D5  01E8               	clrf	USBDeviceTasks@i
  3088  02D6  3004               	movlw	4
  3089  02D7  0268               	subwf	USBDeviceTasks@i,w
  3090  02D8  1803               	btfsc	3,0
  3091  02D9  2B29               	goto	l589
  3092  02DA                     l590:	
  3093                           
  3094                           ;usb_device.c: 805: {
  3095                           ;usb_device.c: 806: if(UIRbits.TRNIF)
  3096  02DA  003D               	movlb	29	; select bank29
  3097  02DB  1D90               	btfss	16,3	;volatile
  3098  02DC  2B29               	goto	l589
  3099                           
  3100                           ;usb_device.c: 807: {
  3101                           ;usb_device.c: 809: USTATcopy.Val = USTAT;
  3102  02DD  080F               	movf	15,w	;volatile
  3103  02DE  0020               	movlb	0	; select bank0
  3104  02DF  00E6               	movwf	??_USBDeviceTasks
  3105  02E0  0866               	movf	??_USBDeviceTasks,w
  3106  02E1  00EF               	movwf	_USTATcopy
  3107                           
  3108                           ;usb_device.c: 810: endpoint_number = USTATcopy.endpoint_number;
  3109  02E2  0C6F               	rrf	_USTATcopy,w
  3110  02E3  00E6               	movwf	??_USBDeviceTasks
  3111  02E4  0CE6               	rrf	??_USBDeviceTasks,f
  3112  02E5  0C66               	rrf	??_USBDeviceTasks,w
  3113  02E6  390F               	andlw	15
  3114  02E7  00E7               	movwf	??_USBDeviceTasks+1
  3115  02E8  0867               	movf	??_USBDeviceTasks+1,w
  3116  02E9  0021               	movlb	1	; select bank1
  3117  02EA  00EA               	movwf	_endpoint_number^(0+128)
  3118                           
  3119                           ;usb_device.c: 812: (UIR &= 0xF7);
  3120  02EB  30F7               	movlw	247
  3121  02EC  0020               	movlb	0	; select bank0
  3122  02ED  00E6               	movwf	??_USBDeviceTasks
  3123  02EE  0866               	movf	??_USBDeviceTasks,w
  3124  02EF  003D               	movlb	29	; select bank29
  3125  02F0  0590               	andwf	16,f	;volatile
  3126                           
  3127                           ;usb_device.c: 817: if(USTATcopy.direction == 0)
  3128  02F1  0020               	movlb	0	; select bank0
  3129  02F2  196F               	btfsc	_USTATcopy,2
  3130  02F3  2AF8               	goto	l4586
  3131                           
  3132                           ;usb_device.c: 818: {
  3133                           ;usb_device.c: 819: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  3134  02F4  0021               	movlb	1	; select bank1
  3135  02F5  086A               	movf	_endpoint_number^(0+128),w
  3136  02F6  3E54               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  3137  02F7  2AFB               	goto	L1
  3138  02F8                     l4586:	
  3139                           ;usb_device.c: 820: }
  3140                           
  3141                           
  3142                           ;usb_device.c: 821: else
  3143                           ;usb_device.c: 822: {
  3144                           ;usb_device.c: 823: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  3145  02F8  0021               	movlb	1	; select bank1
  3146  02F9  086A               	movf	_endpoint_number^(0+128),w
  3147  02FA  3E52               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  3148  02FB                     L1:	
  3149  02FB  0086               	movwf	6
  3150  02FC  3001               	movlw	1	; select bank2/3
  3151  02FD  0087               	movwf	7
  3152  02FE  0801               	movf	1,w
  3153  02FF  3901               	andlw	1
  3154  0300  0020               	movlb	0	; select bank0
  3155  0301  00E6               	movwf	??_USBDeviceTasks
  3156  0302  3001               	movlw	1
  3157  0303  06E6               	xorwf	??_USBDeviceTasks,f
  3158  0304  0801               	movf	1,w
  3159  0305  0666               	xorwf	??_USBDeviceTasks,w
  3160  0306  39FE               	andlw	-2
  3161  0307  0666               	xorwf	??_USBDeviceTasks,w
  3162  0308  0081               	movwf	1
  3163                           
  3164                           ;usb_device.c: 824: }
  3165                           ;usb_device.c: 829: if(endpoint_number == 0)
  3166  0309  0021               	movlb	1	; select bank1
  3167  030A  086A               	movf	_endpoint_number^(0+128),w
  3168  030B  1D03               	btfss	3,2
  3169  030C  2B11               	goto	l4592
  3170                           
  3171                           ;usb_device.c: 830: {
  3172                           ;usb_device.c: 831: USBCtrlEPService();
  3173  030D  318F  2711  3182   	fcall	_USBCtrlEPService
  3174                           
  3175                           ;usb_device.c: 832: }
  3176  0310  2B20               	goto	l4594
  3177  0311                     l4592:	
  3178                           
  3179                           ;usb_device.c: 833: else
  3180                           ;usb_device.c: 834: {
  3181                           ;usb_device.c: 835: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  3182  0311  3072               	movlw	114
  3183  0312  0020               	movlb	0	; select bank0
  3184  0313  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3185  0314  3000               	movlw	0
  3186  0315  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3187  0316  306F               	movlw	(low (_USTATcopy| 0))& (0+255)
  3188  0317  00E6               	movwf	??_USBDeviceTasks
  3189  0318  0866               	movf	??_USBDeviceTasks,w
  3190  0319  00D7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3191  031A  3000               	movlw	0
  3192  031B  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3193  031C  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3194  031D  318B  2386  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3195  0320                     l4594:	
  3196                           ;usb_device.c: 838: else
  3197                           ;usb_device.c: 839: {
  3198                           ;usb_device.c: 840: break;
  3199                           
  3200                           ;usb_device.c: 836: }
  3201                           ;usb_device.c: 837: }
  3202                           
  3203  0320  3001               	movlw	1
  3204  0321  0020               	movlb	0	; select bank0
  3205  0322  00E6               	movwf	??_USBDeviceTasks
  3206  0323  0866               	movf	??_USBDeviceTasks,w
  3207  0324  07E8               	addwf	USBDeviceTasks@i,f
  3208  0325  3004               	movlw	4
  3209  0326  0268               	subwf	USBDeviceTasks@i,w
  3210  0327  1C03               	skipc
  3211  0328  2ADA               	goto	l590
  3212  0329                     l589:	
  3213                           
  3214                           ;usb_device.c: 841: }
  3215                           ;usb_device.c: 842: }
  3216                           ;usb_device.c: 843: }
  3217                           ;usb_device.c: 845: PIR2bits.USBIF = 0;;
  3218  0329  0020               	movlb	0	; select bank0
  3219  032A  1112               	bcf	18,2	;volatile
  3220  032B  0008               	return
  3221  032C                     __end_of_USBDeviceTasks:	
  3222                           
  3223                           	psect	text2
  3224  0A86                     __ptext2:	
  3225 ;; *************** function _USBWakeFromSuspend *****************
  3226 ;; Defined at:
  3227 ;;		line 2322 in file "../framework/usb/usb_device.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;		None
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;		None
  3232 ;; Return value:  Size  Location     Type
  3233 ;;		None               void
  3234 ;; Registers used:
  3235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3243 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3244 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3245 ;;Total ram usage:        1 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; Hardware stack levels required when called:    5
  3248 ;; This function calls:
  3249 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3250 ;; This function is called by:
  3251 ;;		_USBDeviceTasks
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           
  3256                           ;psect for function _USBWakeFromSuspend
  3257  0A86                     _USBWakeFromSuspend:	
  3258                           
  3259                           ;usb_device.c: 2324: USBBusIsSuspended = 0;
  3260                           
  3261                           ;incstack = 0
  3262                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3263  0A86  0022               	movlb	2	; select bank2
  3264  0A87  01DC               	clrf	_USBBusIsSuspended^(0+256)
  3265                           
  3266                           ;usb_device.c: 2330: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  3267  0A88  3074               	movlw	116
  3268  0A89  0020               	movlb	0	; select bank0
  3269  0A8A  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3270  0A8B  3000               	movlw	0
  3271  0A8C  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3272  0A8D  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3273  0A8E  3000               	movlw	0
  3274  0A8F  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3275  0A90  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3276  0A91  318B  2386  318A   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3277                           
  3278                           ;usb_device.c: 2337: UCONbits.SUSPND = 0;
  3279  0A94  003D               	movlb	29	; select bank29
  3280  0A95  108E               	bcf	14,1	;volatile
  3281                           
  3282                           ;usb_device.c: 2342: UIEbits.ACTVIE = 0;
  3283  0A96  1112               	bcf	18,2	;volatile
  3284  0A97                     l4430:	
  3285                           ;usb_device.c: 2360: while(UIRbits.ACTVIF)
  3286                           
  3287  0A97  1D10               	btfss	16,2	;volatile
  3288  0A98  2A9E               	goto	l4432
  3289                           
  3290                           ;usb_device.c: 2362: {
  3291                           ;usb_device.c: 2363: (UIR &= 0xFB);
  3292  0A99  30FB               	movlw	251
  3293  0A9A  00FB               	movwf	??_USBWakeFromSuspend
  3294  0A9B  087B               	movf	??_USBWakeFromSuspend,w
  3295  0A9C  0590               	andwf	16,f	;volatile
  3296  0A9D  2A97               	goto	l4430
  3297  0A9E                     l4432:	
  3298                           
  3299                           ;usb_device.c: 2364: }
  3300                           ;usb_device.c: 2366: USBTicksSinceSuspendEnd = 0;
  3301  0A9E  0022               	movlb	2	; select bank2
  3302  0A9F  01E2               	clrf	_USBTicksSinceSuspendEnd^(0+256)
  3303  0AA0  0008               	return
  3304  0AA1                     __end_of_USBWakeFromSuspend:	
  3305                           
  3306                           	psect	text3
  3307  09F2                     __ptext3:	
  3308 ;; *************** function _USBSuspend *****************
  3309 ;; Defined at:
  3310 ;;		line 2264 in file "../framework/usb/usb_device.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;		None
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;		None               void
  3317 ;; Registers used:
  3318 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3326 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3327 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3328 ;;Total ram usage:        1 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:    5
  3331 ;; This function calls:
  3332 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3333 ;; This function is called by:
  3334 ;;		_USBDeviceTasks
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           
  3339                           ;psect for function _USBSuspend
  3340  09F2                     _USBSuspend:	
  3341                           
  3342                           ;usb_device.c: 2289: UIEbits.ACTVIE = 1;
  3343                           
  3344                           ;incstack = 0
  3345                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3346  09F2  003D               	movlb	29	; select bank29
  3347  09F3  1512               	bsf	18,2	;volatile
  3348                           
  3349                           ;usb_device.c: 2290: (UIR &= 0xEF);
  3350  09F4  30EF               	movlw	239
  3351  09F5  00FB               	movwf	??_USBSuspend
  3352  09F6  087B               	movf	??_USBSuspend,w
  3353  09F7  0590               	andwf	16,f	;volatile
  3354                           
  3355                           ;usb_device.c: 2293: UCONbits.SUSPND = 1;
  3356  09F8  148E               	bsf	14,1	;volatile
  3357                           
  3358                           ;usb_device.c: 2296: USBBusIsSuspended = 1;
  3359  09F9  0022               	movlb	2	; select bank2
  3360  09FA  01DC               	clrf	_USBBusIsSuspended^(0+256)
  3361  09FB  0ADC               	incf	_USBBusIsSuspended^(0+256),f
  3362                           
  3363                           ;usb_device.c: 2297: USBTicksSinceSuspendEnd = 0;
  3364  09FC  01E2               	clrf	_USBTicksSinceSuspendEnd^(0+256)
  3365                           
  3366                           ;usb_device.c: 2304: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  3367  09FD  3075               	movlw	117
  3368  09FE  0020               	movlb	0	; select bank0
  3369  09FF  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  3370  0A00  3000               	movlw	0
  3371  0A01  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  3372  0A02  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  3373  0A03  3000               	movlw	0
  3374  0A04  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  3375  0A05  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  3376  0A06  318B  2386         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3377  0A08  0008               	return
  3378  0A09                     __end_of_USBSuspend:	
  3379                           
  3380                           	psect	text4
  3381  07DC                     __ptext4:	
  3382 ;; *************** function _USBStallHandler *****************
  3383 ;; Defined at:
  3384 ;;		line 2221 in file "../framework/usb/usb_device.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;		None
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;		None
  3389 ;; Return value:  Size  Location     Type
  3390 ;;		None               void
  3391 ;; Registers used:
  3392 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3400 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3401 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3402 ;;Total ram usage:        1 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; Hardware stack levels required when called:    1
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_USBDeviceTasks
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           
  3413                           ;psect for function _USBStallHandler
  3414  07DC                     _USBStallHandler:	
  3415                           
  3416                           ;usb_device.c: 2233: if(UEP0bits.EPSTALL == 1)
  3417                           
  3418                           ;incstack = 0
  3419                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  3420  07DC  003D               	movlb	29	; select bank29
  3421  07DD  1C18               	btfss	24,0	;volatile
  3422  07DE  2FFB               	goto	l3778
  3423                           
  3424                           ;usb_device.c: 2234: {
  3425                           ;usb_device.c: 2236: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  3426  07DF  0020               	movlb	0	; select bank0
  3427  07E0  086D               	movf	_pBDTEntryEP0OutCurrent,w
  3428  07E1  0086               	movwf	6
  3429  07E2  0187               	clrf	7
  3430  07E3  3080               	movlw	128
  3431  07E4  0601               	xorwf	1,w
  3432  07E5  1D03               	btfss	3,2
  3433  07E6  2FF9               	goto	l3776
  3434  07E7  0869               	movf	_pBDTEntryIn,w
  3435  07E8  0086               	movwf	6
  3436  07E9  0187               	clrf	7
  3437  07EA  3084               	movlw	132
  3438  07EB  0601               	xorwf	1,w
  3439  07EC  1D03               	btfss	3,2
  3440  07ED  2FF9               	goto	l3776
  3441                           
  3442                           ;usb_device.c: 2237: {
  3443                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  3444  07EE  300C               	movlw	12
  3445  07EF  00F1               	movwf	??_USBStallHandler
  3446  07F0  086D               	movf	_pBDTEntryEP0OutCurrent,w
  3447  07F1  0086               	movwf	6
  3448  07F2  0187               	clrf	7
  3449  07F3  0871               	movf	??_USBStallHandler,w
  3450  07F4  0081               	movwf	1
  3451                           
  3452                           ;usb_device.c: 2240: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  3453  07F5  086D               	movf	_pBDTEntryEP0OutCurrent,w
  3454  07F6  0086               	movwf	6
  3455  07F7  0187               	clrf	7
  3456  07F8  1781               	bsf	1,7
  3457  07F9                     l3776:	
  3458                           
  3459                           ;usb_device.c: 2241: }
  3460                           ;usb_device.c: 2242: UEP0bits.EPSTALL = 0;
  3461  07F9  003D               	movlb	29	; select bank29
  3462  07FA  1018               	bcf	24,0	;volatile
  3463  07FB                     l3778:	
  3464                           
  3465                           ;usb_device.c: 2243: }
  3466                           ;usb_device.c: 2245: (UIR &= 0xDF);
  3467  07FB  30DF               	movlw	223
  3468  07FC  00F1               	movwf	??_USBStallHandler
  3469  07FD  0871               	movf	??_USBStallHandler,w
  3470  07FE  0590               	andwf	16,f	;volatile
  3471  07FF  0008               	return
  3472  0800                     __end_of_USBStallHandler:	
  3473                           
  3474                           	psect	text5
  3475  0A09                     __ptext5:	
  3476 ;; *************** function _USBIncrement1msInternalTimers *****************
  3477 ;; Defined at:
  3478 ;;		line 3050 in file "../framework/usb/usb_device.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;		None
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;		None
  3483 ;; Return value:  Size  Location     Type
  3484 ;;		None               void
  3485 ;; Registers used:
  3486 ;;		wreg, status,2, status,0
  3487 ;; Tracked objects:
  3488 ;;		On entry : 0/0
  3489 ;;		On exit  : 0/0
  3490 ;;		Unchanged: 0/0
  3491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3494 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3495 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3496 ;;Total ram usage:        1 bytes
  3497 ;; Hardware stack levels used:    1
  3498 ;; Hardware stack levels required when called:    1
  3499 ;; This function calls:
  3500 ;;		Nothing
  3501 ;; This function is called by:
  3502 ;;		_USBDeviceTasks
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506                           
  3507                           ;psect for function _USBIncrement1msInternalTimers
  3508  0A09                     _USBIncrement1msInternalTimers:	
  3509                           
  3510                           ;usb_device.c: 3058: USB1msTickCount++;
  3511                           
  3512                           ;incstack = 0
  3513                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  3514  0A09  3001               	movlw	1
  3515  0A0A  0022               	movlb	2	; select bank2
  3516  0A0B  07CE               	addwf	_USB1msTickCount^(0+256),f
  3517  0A0C  3000               	movlw	0
  3518  0A0D  3DCF               	addwfc	(_USB1msTickCount+1)^(0+256),f
  3519  0A0E  3000               	movlw	0
  3520  0A0F  3DD0               	addwfc	(_USB1msTickCount+2)^(0+256),f
  3521  0A10  3000               	movlw	0
  3522  0A11  3DD1               	addwfc	(_USB1msTickCount+3)^(0+256),f
  3523                           
  3524                           ;usb_device.c: 3059: if(USBBusIsSuspended == 0)
  3525  0A12  085C               	movf	_USBBusIsSuspended^(0+256),w
  3526  0A13  1D03               	btfss	3,2
  3527  0A14  0008               	return
  3528                           
  3529                           ;usb_device.c: 3060: {
  3530                           ;usb_device.c: 3061: USBTicksSinceSuspendEnd++;
  3531  0A15  3001               	movlw	1
  3532  0A16  00F1               	movwf	??_USBIncrement1msInternalTimers
  3533  0A17  0871               	movf	??_USBIncrement1msInternalTimers,w
  3534  0A18  07E2               	addwf	_USBTicksSinceSuspendEnd^(0+256),f
  3535                           
  3536                           ;usb_device.c: 3063: if(USBTicksSinceSuspendEnd == 0)
  3537  0A19  0862               	movf	_USBTicksSinceSuspendEnd^(0+256),w
  3538  0A1A  1D03               	btfss	3,2
  3539  0A1B  0008               	return
  3540                           
  3541                           ;usb_device.c: 3064: {
  3542                           ;usb_device.c: 3065: USBTicksSinceSuspendEnd = 255;
  3543  0A1C  30FF               	movlw	255
  3544  0A1D  00F1               	movwf	??_USBIncrement1msInternalTimers
  3545  0A1E  0871               	movf	??_USBIncrement1msInternalTimers,w
  3546  0A1F  00E2               	movwf	_USBTicksSinceSuspendEnd^(0+256)
  3547  0A20  0008               	return
  3548  0A21                     __end_of_USBIncrement1msInternalTimers:	
  3549                           
  3550                           	psect	text6
  3551  059D                     __ptext6:	
  3552 ;; *************** function _USBDeviceInit *****************
  3553 ;; Defined at:
  3554 ;;		line 300 in file "../framework/usb/usb_device.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;		None
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;  p               2    2[COMMON] PTR unsigned char 
  3559 ;;		 -> UEP1(1), 
  3560 ;;  i               1    4[COMMON] unsigned char 
  3561 ;;  i               1    5[COMMON] unsigned char 
  3562 ;; Return value:  Size  Location     Type
  3563 ;;		None               void
  3564 ;; Registers used:
  3565 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3566 ;; Tracked objects:
  3567 ;;		On entry : 0/0
  3568 ;;		On exit  : 0/0
  3569 ;;		Unchanged: 0/0
  3570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3572 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3573 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3574 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3575 ;;Total ram usage:        5 bytes
  3576 ;; Hardware stack levels used:    1
  3577 ;; Hardware stack levels required when called:    1
  3578 ;; This function calls:
  3579 ;;		Nothing
  3580 ;; This function is called by:
  3581 ;;		_main
  3582 ;;		_USBDeviceTasks
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           
  3587                           ;psect for function _USBDeviceInit
  3588  059D                     _USBDeviceInit:	
  3589                           
  3590                           ;usb_device.c: 302: uint8_t i;
  3591                           ;usb_device.c: 304: {PIE2bits.USBIE = 0;};
  3592                           
  3593                           ;incstack = 0
  3594                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  3595  059D  0021               	movlb	1	; select bank1
  3596  059E  1112               	bcf	18,2	;volatile
  3597                           
  3598                           ;usb_device.c: 307: {UEIR = 0;};
  3599  059F  003D               	movlb	29	; select bank29
  3600  05A0  0193               	clrf	19	;volatile
  3601                           
  3602                           ;usb_device.c: 310: {UIR = 0;};
  3603  05A1  0190               	clrf	16	;volatile
  3604                           
  3605                           ;usb_device.c: 313: UEP0 = 0;
  3606  05A2  0198               	clrf	24	;volatile
  3607                           
  3608                           ;usb_device.c: 315: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 0
      +                          ; };
  3609  05A3  300E               	movlw	14
  3610  05A4  00F3               	movwf	USBDeviceInit@p+1
  3611  05A5  3099               	movlw	153
  3612  05A6  00F2               	movwf	USBDeviceInit@p
  3613  05A7  01F4               	clrf	USBDeviceInit@i_1706
  3614  05A8  0874               	movf	USBDeviceInit@i_1706,w
  3615  05A9  1D03               	btfss	3,2
  3616  05AA  2DBB               	goto	l3618
  3617  05AB                     l3610:	
  3618  05AB  0872               	movf	USBDeviceInit@p,w
  3619  05AC  0086               	movwf	6
  3620  05AD  0873               	movf	USBDeviceInit@p+1,w
  3621  05AE  0087               	movwf	7
  3622  05AF  0181               	clrf	1
  3623  05B0  3001               	movlw	1
  3624  05B1  07F2               	addwf	USBDeviceInit@p,f
  3625  05B2  3000               	movlw	0
  3626  05B3  3DF3               	addwfc	USBDeviceInit@p+1,f
  3627  05B4  3001               	movlw	1
  3628  05B5  00F1               	movwf	??_USBDeviceInit
  3629  05B6  0871               	movf	??_USBDeviceInit,w
  3630  05B7  07F4               	addwf	USBDeviceInit@i_1706,f
  3631  05B8  0874               	movf	USBDeviceInit@i_1706,w
  3632  05B9  1903               	btfsc	3,2
  3633  05BA  2DAB               	goto	l3610
  3634  05BB                     l3618:	
  3635                           
  3636                           ;usb_device.c: 317: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  3637  05BB  3016               	movlw	22
  3638  05BC  003D               	movlb	29	; select bank29
  3639  05BD  0091               	movwf	17	;volatile
  3640  05BE  309F               	movlw	159
  3641  05BF  0097               	movwf	23	;volatile
  3642  05C0  307B               	movlw	123
  3643  05C1  0092               	movwf	18	;volatile
  3644                           
  3645                           ;usb_device.c: 320: ;
  3646                           ;usb_device.c: 323: ;
  3647                           ;usb_device.c: 326: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  3648  05C2  01F5               	clrf	USBDeviceInit@i
  3649  05C3  3008               	movlw	8
  3650  05C4  0275               	subwf	USBDeviceInit@i,w
  3651  05C5  1803               	btfsc	3,0
  3652  05C6  2DE0               	goto	l562
  3653  05C7                     l3626:	
  3654                           
  3655                           ;usb_device.c: 327: {
  3656                           ;usb_device.c: 328: BDT[i].Val = 0x00;
  3657  05C7  0875               	movf	USBDeviceInit@i,w
  3658  05C8  00F1               	movwf	??_USBDeviceInit
  3659  05C9  3001               	movlw	1
  3660  05CA                     u3075:	
  3661  05CA  35F1               	lslf	??_USBDeviceInit,f
  3662  05CB  3EFF               	addlw	-1
  3663  05CC  1D03               	skipz
  3664  05CD  2DCA               	goto	u3075
  3665  05CE  3571               	lslf	??_USBDeviceInit,w
  3666  05CF  3E20               	addlw	32
  3667  05D0  0086               	movwf	6
  3668  05D1  0187               	clrf	7
  3669  05D2  3000               	movlw	0
  3670  05D3  3FC0               	movwi [0]fsr1
  3671  05D4  3000               	movlw	0
  3672  05D5  3FC1               	movwi [1]fsr1
  3673  05D6  3FC2               	movwi [2]fsr1
  3674  05D7  3FC3               	movwi [3]fsr1
  3675  05D8  3001               	movlw	1
  3676  05D9  00F1               	movwf	??_USBDeviceInit
  3677  05DA  0871               	movf	??_USBDeviceInit,w
  3678  05DB  07F5               	addwf	USBDeviceInit@i,f
  3679  05DC  3008               	movlw	8
  3680  05DD  0275               	subwf	USBDeviceInit@i,w
  3681  05DE  1C03               	skipc
  3682  05DF  2DC7               	goto	l3626
  3683  05E0                     l562:	
  3684                           
  3685                           ;usb_device.c: 329: }
  3686                           ;usb_device.c: 332: UCONbits.PPBRST = 1;
  3687  05E0  003D               	movlb	29	; select bank29
  3688  05E1  170E               	bsf	14,6	;volatile
  3689                           
  3690                           ;usb_device.c: 335: UADDR = 0x00;
  3691  05E2  0196               	clrf	22	;volatile
  3692                           
  3693                           ;usb_device.c: 338: UCONbits.PKTDIS = 0;
  3694  05E3  120E               	bcf	14,4	;volatile
  3695                           
  3696                           ;usb_device.c: 341: UCONbits.PPBRST = 0;
  3697  05E4  130E               	bcf	14,6	;volatile
  3698  05E5                     l3638:	
  3699                           ;usb_device.c: 344: do
  3700                           
  3701                           
  3702                           ;usb_device.c: 345: {
  3703                           ;usb_device.c: 346: (UIR &= 0xF7);
  3704  05E5  30F7               	movlw	247
  3705  05E6  00F1               	movwf	??_USBDeviceInit
  3706  05E7  0871               	movf	??_USBDeviceInit,w
  3707  05E8  0590               	andwf	16,f	;volatile
  3708                           
  3709                           ;usb_device.c: 348: inPipes[0].info.Val = 0;
  3710  05E9  0021               	movlb	1	; select bank1
  3711  05EA  01E2               	clrf	(_inPipes^(0+128)+2)
  3712                           
  3713                           ;usb_device.c: 349: outPipes[0].info.Val = 0;
  3714  05EB  0022               	movlb	2	; select bank2
  3715  05EC  01C9               	clrf	(_outPipes^(0+256)+2)
  3716                           
  3717                           ;usb_device.c: 350: outPipes[0].wCount.Val = 0;
  3718  05ED  01CA               	clrf	(_outPipes^(0+256)+3)
  3719  05EE  01CB               	clrf	((_outPipes+1)^(0+256)+3)
  3720                           
  3721                           ;usb_device.c: 351: }while(UIRbits.TRNIF == 1);
  3722  05EF  003D               	movlb	29	; select bank29
  3723  05F0  1990               	btfsc	16,3	;volatile
  3724  05F1  2DE5               	goto	l3638
  3725                           
  3726                           ;usb_device.c: 355: USBStatusStageEnabledFlag1 = 1;
  3727  05F2  3001               	movlw	1
  3728  05F3  00F1               	movwf	??_USBDeviceInit
  3729  05F4  0871               	movf	??_USBDeviceInit,w
  3730  05F5  0022               	movlb	2	; select bank2
  3731  05F6  00DF               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  3732                           
  3733                           ;usb_device.c: 356: USBStatusStageEnabledFlag2 = 1;
  3734  05F7  3001               	movlw	1
  3735  05F8  00F1               	movwf	??_USBDeviceInit
  3736  05F9  0871               	movf	??_USBDeviceInit,w
  3737  05FA  00E0               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  3738                           
  3739                           ;usb_device.c: 358: USBDeferINDataStagePackets = 0;
  3740  05FB  01DD               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  3741                           
  3742                           ;usb_device.c: 359: USBDeferOUTDataStagePackets = 0;
  3743  05FC  01DE               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  3744                           
  3745                           ;usb_device.c: 360: USBBusIsSuspended = 0;
  3746  05FD  01DC               	clrf	_USBBusIsSuspended^(0+256)
  3747                           
  3748                           ;usb_device.c: 364: for(i = 0; i < (uint8_t)(1+1u); i++)
  3749  05FE  01F5               	clrf	USBDeviceInit@i
  3750  05FF  3002               	movlw	2
  3751  0600  0275               	subwf	USBDeviceInit@i,w
  3752  0601  1803               	btfsc	3,0
  3753  0602  2E22               	goto	l3666
  3754  0603                     l3660:	
  3755                           
  3756                           ;usb_device.c: 365: {
  3757                           ;usb_device.c: 366: pBDTEntryIn[i] = 0u;
  3758  0603  0875               	movf	USBDeviceInit@i,w
  3759  0604  3E69               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  3760  0605  0086               	movwf	6
  3761  0606  0187               	clrf	7
  3762  0607  0181               	clrf	1
  3763                           
  3764                           ;usb_device.c: 367: pBDTEntryOut[i] = 0u;
  3765  0608  0875               	movf	USBDeviceInit@i,w
  3766  0609  3E58               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3767  060A  0086               	movwf	6
  3768  060B  3001               	movlw	1	; select bank2/3
  3769  060C  0087               	movwf	7
  3770  060D  0181               	clrf	1
  3771                           
  3772                           ;usb_device.c: 368: ep_data_in[i].Val = 0u;
  3773  060E  0875               	movf	USBDeviceInit@i,w
  3774  060F  3E52               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  3775  0610  0086               	movwf	6
  3776  0611  3001               	movlw	1	; select bank2/3
  3777  0612  0087               	movwf	7
  3778  0613  0181               	clrf	1
  3779                           
  3780                           ;usb_device.c: 369: ep_data_out[i].Val = 0u;
  3781  0614  0875               	movf	USBDeviceInit@i,w
  3782  0615  3E54               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  3783  0616  0086               	movwf	6
  3784  0617  3001               	movlw	1	; select bank2/3
  3785  0618  0087               	movwf	7
  3786  0619  0181               	clrf	1
  3787  061A  3001               	movlw	1
  3788  061B  00F1               	movwf	??_USBDeviceInit
  3789  061C  0871               	movf	??_USBDeviceInit,w
  3790  061D  07F5               	addwf	USBDeviceInit@i,f
  3791  061E  3002               	movlw	2
  3792  061F  0275               	subwf	USBDeviceInit@i,w
  3793  0620  1C03               	skipc
  3794  0621  2E03               	goto	l3660
  3795  0622                     l3666:	
  3796                           
  3797                           ;usb_device.c: 370: }
  3798                           ;usb_device.c: 373: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  3799  0622  3028               	movlw	40
  3800  0623  00F1               	movwf	??_USBDeviceInit
  3801  0624  0871               	movf	??_USBDeviceInit,w
  3802  0625  0020               	movlb	0	; select bank0
  3803  0626  00E9               	movwf	_pBDTEntryIn
  3804                           
  3805                           ;usb_device.c: 375: UEP0 = 0x06|0x10;
  3806  0627  3016               	movlw	22
  3807  0628  003D               	movlb	29	; select bank29
  3808  0629  0098               	movwf	24	;volatile
  3809                           
  3810                           ;usb_device.c: 377: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3811  062A  3000               	movlw	0
  3812  062B  0020               	movlb	0	; select bank0
  3813  062C  00A3               	movwf	35	;volatile
  3814  062D  3040               	movlw	64
  3815  062E  00A2               	movwf	34	;volatile
  3816                           
  3817                           ;usb_device.c: 378: BDT[0].CNT = 8;
  3818  062F  3008               	movlw	8
  3819  0630  00A1               	movwf	33	;volatile
  3820                           
  3821                           ;usb_device.c: 379: BDT[0].STAT.Val = 0x00|0x04;
  3822  0631  3004               	movlw	4
  3823  0632  00F1               	movwf	??_USBDeviceInit
  3824  0633  0871               	movf	??_USBDeviceInit,w
  3825  0634  00A0               	movwf	32	;volatile
  3826                           
  3827                           ;usb_device.c: 380: BDT[0].STAT.Val |= 0x80;
  3828  0635  17A0               	bsf	32,7	;volatile
  3829                           
  3830                           ;usb_device.c: 383: USBActiveConfiguration = 0;
  3831  0636  0021               	movlb	1	; select bank1
  3832  0637  01EE               	clrf	_USBActiveConfiguration^(0+128)
  3833                           
  3834                           ;usb_device.c: 385: USB1msTickCount = 0;
  3835  0638  3000               	movlw	0
  3836  0639  0022               	movlb	2	; select bank2
  3837  063A  00D1               	movwf	(_USB1msTickCount+3)^(0+256)
  3838  063B  3000               	movlw	0
  3839  063C  00D0               	movwf	(_USB1msTickCount+2)^(0+256)
  3840  063D  3000               	movlw	0
  3841  063E  00CF               	movwf	(_USB1msTickCount+1)^(0+256)
  3842  063F  3000               	movlw	0
  3843  0640  00CE               	movwf	_USB1msTickCount^(0+256)
  3844                           
  3845                           ;usb_device.c: 386: USBTicksSinceSuspendEnd = 0;
  3846  0641  01E2               	clrf	_USBTicksSinceSuspendEnd^(0+256)
  3847                           
  3848                           ;usb_device.c: 389: USBDeviceState = DETACHED_STATE;
  3849  0642  0020               	movlb	0	; select bank0
  3850  0643  01EC               	clrf	_USBDeviceState
  3851  0644  0008               	return
  3852  0645                     __end_of_USBDeviceInit:	
  3853                           
  3854                           	psect	text7
  3855  0F11                     __ptext7:	
  3856 ;; *************** function _USBCtrlEPService *****************
  3857 ;; Defined at:
  3858 ;;		line 2391 in file "../framework/usb/usb_device.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;		None
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;  setup_cnt       1   21[BANK0 ] unsigned char 
  3863 ;; Return value:  Size  Location     Type
  3864 ;;		None               void
  3865 ;; Registers used:
  3866 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3873 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3874 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3875 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3876 ;;Total ram usage:        4 bytes
  3877 ;; Hardware stack levels used:    1
  3878 ;; Hardware stack levels required when called:    8
  3879 ;; This function calls:
  3880 ;;		_USBCtrlTrfInHandler
  3881 ;;		_USBCtrlTrfOutHandler
  3882 ;;		_USBCtrlTrfSetupHandler
  3883 ;; This function is called by:
  3884 ;;		_USBDeviceTasks
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           
  3889                           ;psect for function _USBCtrlEPService
  3890  0F11                     _USBCtrlEPService:	
  3891                           
  3892                           ;usb_device.c: 2397: USBStatusStageTimeoutCounter = (uint8_t)45;
  3893                           
  3894                           ;incstack = 0
  3895                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3896  0F11  302D               	movlw	45
  3897  0F12  0020               	movlb	0	; select bank0
  3898  0F13  00E2               	movwf	??_USBCtrlEPService
  3899  0F14  0862               	movf	??_USBCtrlEPService,w
  3900  0F15  0022               	movlb	2	; select bank2
  3901  0F16  00E1               	movwf	_USBStatusStageTimeoutCounter^(0+256)
  3902                           
  3903                           ;usb_device.c: 2401: if((USTATcopy.Val & ~0x02) == 0x00)
  3904  0F17  0020               	movlb	0	; select bank0
  3905  0F18  086F               	movf	_USTATcopy,w
  3906  0F19  39FD               	andlw	253
  3907  0F1A  1D03               	btfss	3,2
  3908  0F1B  2F76               	goto	l4476
  3909                           
  3910                           ;usb_device.c: 2402: {
  3911                           ;usb_device.c: 2405: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  3912  0F1C  366F               	lsrf	_USTATcopy,w
  3913  0F1D  393F               	andlw	63
  3914  0F1E  00E2               	movwf	??_USBCtrlEPService
  3915  0F1F  3001               	movlw	1
  3916  0F20                     u4025:	
  3917  0F20  35E2               	lslf	??_USBCtrlEPService,f
  3918  0F21  3EFF               	addlw	-1
  3919  0F22  1D03               	skipz
  3920  0F23  2F20               	goto	u4025
  3921  0F24  3562               	lslf	??_USBCtrlEPService,w
  3922  0F25  3E20               	addlw	32
  3923  0F26  00E3               	movwf	??_USBCtrlEPService+1
  3924  0F27  0863               	movf	??_USBCtrlEPService+1,w
  3925  0F28  00ED               	movwf	_pBDTEntryEP0OutCurrent
  3926                           
  3927                           ;usb_device.c: 2413: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  3928  0F29  086D               	movf	_pBDTEntryEP0OutCurrent,w
  3929  0F2A  00E2               	movwf	??_USBCtrlEPService
  3930  0F2B  0862               	movf	??_USBCtrlEPService,w
  3931  0F2C  00FC               	movwf	_pBDTEntryEP0OutNext
  3932                           
  3933                           ;usb_device.c: 2415: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  3934  0F2D  3004               	movlw	4
  3935  0F2E  00E2               	movwf	??_USBCtrlEPService
  3936  0F2F  0862               	movf	??_USBCtrlEPService,w
  3937  0F30  06FC               	xorwf	_pBDTEntryEP0OutNext,f
  3938                           
  3939                           ;usb_device.c: 2418: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  3940  0F31  086D               	movf	_pBDTEntryEP0OutCurrent,w
  3941  0F32  0086               	movwf	6
  3942  0F33  0187               	clrf	7
  3943  0F34  0C01               	rrf	1,w
  3944  0F35  0C89               	rrf	9,f
  3945  0F36  390F               	andlw	15
  3946  0F37  3A0D               	xorlw	13
  3947  0F38  1D03               	skipz
  3948  0F39  2F73               	goto	l4474
  3949                           
  3950                           ;usb_device.c: 2419: {
  3951                           ;usb_device.c: 2420: unsigned char setup_cnt;
  3952                           ;usb_device.c: 2426: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  3953  0F3A  01E5               	clrf	USBCtrlEPService@setup_cnt
  3954  0F3B  3008               	movlw	8
  3955  0F3C  0265               	subwf	USBCtrlEPService@setup_cnt,w
  3956  0F3D  1803               	btfsc	3,0
  3957  0F3E  2F64               	goto	l4470
  3958  0F3F                     l4464:	
  3959                           
  3960                           ;usb_device.c: 2427: {
  3961                           ;usb_device.c: 2428: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
  3962  0F3F  086D               	movf	_pBDTEntryEP0OutCurrent,w
  3963  0F40  3E02               	addlw	2
  3964  0F41  0086               	movwf	6
  3965  0F42  0187               	clrf	7
  3966  0F43  3F40               	moviw [0]fsr1
  3967  0F44  00E2               	movwf	??_USBCtrlEPService
  3968  0F45  3F41               	moviw [1]fsr1
  3969  0F46  00E3               	movwf	??_USBCtrlEPService+1
  3970  0F47  0862               	movf	??_USBCtrlEPService,w
  3971  0F48  0086               	movwf	6
  3972  0F49  0863               	movf	??_USBCtrlEPService+1,w
  3973  0F4A  0087               	movwf	7
  3974  0F4B  0801               	movf	1,w
  3975  0F4C  00E4               	movwf	??_USBCtrlEPService+2
  3976  0F4D  0865               	movf	USBCtrlEPService@setup_cnt,w
  3977  0F4E  3E40               	addlw	64
  3978  0F4F  0086               	movwf	6
  3979  0F50  0187               	clrf	7
  3980  0F51  0864               	movf	??_USBCtrlEPService+2,w
  3981  0F52  0081               	movwf	1
  3982                           
  3983                           ;usb_device.c: 2429: pBDTEntryEP0OutCurrent->ADR++;
  3984  0F53  086D               	movf	_pBDTEntryEP0OutCurrent,w
  3985  0F54  3E02               	addlw	2
  3986  0F55  0086               	movwf	6
  3987  0F56  0187               	clrf	7
  3988  0F57  3001               	movlw	1
  3989  0F58  0781               	addwf	1,f
  3990  0F59  3141               	addfsr 1,1
  3991  0F5A  1803               	skipnc
  3992  0F5B  0A81               	incf	1,f
  3993  0F5C  3001               	movlw	1
  3994  0F5D  00E2               	movwf	??_USBCtrlEPService
  3995  0F5E  0862               	movf	??_USBCtrlEPService,w
  3996  0F5F  07E5               	addwf	USBCtrlEPService@setup_cnt,f
  3997  0F60  3008               	movlw	8
  3998  0F61  0265               	subwf	USBCtrlEPService@setup_cnt,w
  3999  0F62  1C03               	skipc
  4000  0F63  2F3F               	goto	l4464
  4001  0F64                     l4470:	
  4002                           
  4003                           ;usb_device.c: 2430: }
  4004                           ;usb_device.c: 2431: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4005  0F64  3040               	movlw	64
  4006  0F65  00E2               	movwf	??_USBCtrlEPService
  4007  0F66  3000               	movlw	0
  4008  0F67  00E3               	movwf	??_USBCtrlEPService+1
  4009  0F68  086D               	movf	_pBDTEntryEP0OutCurrent,w
  4010  0F69  3E02               	addlw	2
  4011  0F6A  0086               	movwf	6
  4012  0F6B  0187               	clrf	7
  4013  0F6C  0862               	movf	??_USBCtrlEPService,w
  4014  0F6D  3FC0               	movwi [0]fsr1
  4015  0F6E  0863               	movf	??_USBCtrlEPService+1,w
  4016  0F6F  3FC1               	movwi [1]fsr1
  4017                           
  4018                           ;usb_device.c: 2434: USBCtrlTrfSetupHandler();
  4019  0F70  318B  23FE         	fcall	_USBCtrlTrfSetupHandler
  4020                           
  4021                           ;usb_device.c: 2435: }
  4022  0F72  0008               	return
  4023  0F73                     l4474:	
  4024                           
  4025                           ;usb_device.c: 2436: else
  4026                           ;usb_device.c: 2437: {
  4027                           ;usb_device.c: 2439: USBCtrlTrfOutHandler();
  4028  0F73  318B  2327         	fcall	_USBCtrlTrfOutHandler
  4029                           
  4030                           ;usb_device.c: 2440: }
  4031                           ;usb_device.c: 2441: }
  4032  0F75  0008               	return
  4033  0F76                     l4476:	
  4034                           
  4035                           ;usb_device.c: 2442: else if((USTATcopy.Val & ~0x02) == 0x04)
  4036  0F76  30FD               	movlw	253
  4037  0F77  0020               	movlb	0	; select bank0
  4038  0F78  056F               	andwf	_USTATcopy,w
  4039  0F79  00E2               	movwf	??_USBCtrlEPService
  4040  0F7A  3004               	movlw	4
  4041  0F7B  0662               	xorwf	??_USBCtrlEPService,w
  4042  0F7C  1D03               	btfss	3,2
  4043  0F7D  0008               	return
  4044                           
  4045                           ;usb_device.c: 2443: {
  4046                           ;usb_device.c: 2446: USBCtrlTrfInHandler();
  4047  0F7E  318D  25D3         	fcall	_USBCtrlTrfInHandler
  4048  0F80  0008               	return
  4049  0F81                     __end_of_USBCtrlEPService:	
  4050                           
  4051                           	psect	text8
  4052  0BFE                     __ptext8:	
  4053 ;; *************** function _USBCtrlTrfSetupHandler *****************
  4054 ;; Defined at:
  4055 ;;		line 2491 in file "../framework/usb/usb_device.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;		None
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;		None
  4060 ;; Return value:  Size  Location     Type
  4061 ;;		None               void
  4062 ;; Registers used:
  4063 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4071 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4072 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4073 ;;Total ram usage:        1 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; Hardware stack levels required when called:    7
  4076 ;; This function calls:
  4077 ;;		_USBCheckStdRequest
  4078 ;;		_USBCtrlEPServiceComplete
  4079 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4080 ;; This function is called by:
  4081 ;;		_USBCtrlEPService
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           
  4086                           ;psect for function _USBCtrlTrfSetupHandler
  4087  0BFE                     _USBCtrlTrfSetupHandler:	
  4088                           
  4089                           ;usb_device.c: 2496: shortPacketStatus = 0;
  4090                           
  4091                           ;incstack = 0
  4092                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4093  0BFE  0021               	movlb	1	; select bank1
  4094  0BFF  01ED               	clrf	_shortPacketStatus^(0+128)
  4095                           
  4096                           ;usb_device.c: 2497: USBDeferStatusStagePacket = 0;
  4097  0C00  0020               	movlb	0	; select bank0
  4098  0C01  01EB               	clrf	_USBDeferStatusStagePacket	;volatile
  4099                           
  4100                           ;usb_device.c: 2498: USBDeferINDataStagePackets = 0;
  4101  0C02  0022               	movlb	2	; select bank2
  4102  0C03  01DD               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  4103                           
  4104                           ;usb_device.c: 2499: USBDeferOUTDataStagePackets = 0;
  4105  0C04  01DE               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  4106                           
  4107                           ;usb_device.c: 2500: BothEP0OutUOWNsSet = 0;
  4108  0C05  01DA               	clrf	_BothEP0OutUOWNsSet^(0+256)
  4109                           
  4110                           ;usb_device.c: 2501: controlTransferState = 0;
  4111  0C06  0021               	movlb	1	; select bank1
  4112  0C07  01E9               	clrf	_controlTransferState^(0+128)
  4113                           
  4114                           ;usb_device.c: 2510: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4115  0C08  307F               	movlw	127
  4116  0C09  0020               	movlb	0	; select bank0
  4117  0C0A  00E1               	movwf	??_USBCtrlTrfSetupHandler
  4118  0C0B  0869               	movf	_pBDTEntryIn,w
  4119  0C0C  0086               	movwf	6
  4120  0C0D  0187               	clrf	7
  4121  0C0E  0861               	movf	??_USBCtrlTrfSetupHandler,w
  4122  0C0F  0581               	andwf	1,f
  4123                           
  4124                           ;usb_device.c: 2511: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  4125  0C10  3004               	movlw	4
  4126  0C11  00E1               	movwf	??_USBCtrlTrfSetupHandler
  4127  0C12  0861               	movf	??_USBCtrlTrfSetupHandler,w
  4128  0C13  06E9               	xorwf	_pBDTEntryIn,f
  4129                           
  4130                           ;usb_device.c: 2512: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4131  0C14  307F               	movlw	127
  4132  0C15  00E1               	movwf	??_USBCtrlTrfSetupHandler
  4133  0C16  0869               	movf	_pBDTEntryIn,w
  4134  0C17  0086               	movwf	6
  4135  0C18  0187               	clrf	7
  4136  0C19  0861               	movf	??_USBCtrlTrfSetupHandler,w
  4137  0C1A  0581               	andwf	1,f
  4138                           
  4139                           ;usb_device.c: 2513: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  4140  0C1B  3004               	movlw	4
  4141  0C1C  00E1               	movwf	??_USBCtrlTrfSetupHandler
  4142  0C1D  0861               	movf	??_USBCtrlTrfSetupHandler,w
  4143  0C1E  06E9               	xorwf	_pBDTEntryIn,f
  4144                           
  4145                           ;usb_device.c: 2514: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  4146  0C1F  307F               	movlw	127
  4147  0C20  00E1               	movwf	??_USBCtrlTrfSetupHandler
  4148  0C21  087C               	movf	_pBDTEntryEP0OutNext,w
  4149  0C22  0086               	movwf	6
  4150  0C23  0187               	clrf	7
  4151  0C24  0861               	movf	??_USBCtrlTrfSetupHandler,w
  4152  0C25  0581               	andwf	1,f
  4153                           
  4154                           ;usb_device.c: 2516: inPipes[0].info.Val = 0;
  4155  0C26  0021               	movlb	1	; select bank1
  4156  0C27  01E2               	clrf	(_inPipes^(0+128)+2)
  4157                           
  4158                           ;usb_device.c: 2517: inPipes[0].wCount.Val = 0;
  4159  0C28  01E3               	clrf	(_inPipes^(0+128)+3)
  4160  0C29  01E4               	clrf	((_inPipes+1)^(0+128)+3)
  4161                           
  4162                           ;usb_device.c: 2518: outPipes[0].info.Val = 0;
  4163  0C2A  0022               	movlb	2	; select bank2
  4164  0C2B  01C9               	clrf	(_outPipes^(0+256)+2)
  4165                           
  4166                           ;usb_device.c: 2519: outPipes[0].wCount.Val = 0;
  4167  0C2C  01CA               	clrf	(_outPipes^(0+256)+3)
  4168  0C2D  01CB               	clrf	((_outPipes+1)^(0+256)+3)
  4169                           
  4170                           ;usb_device.c: 2525: USBCheckStdRequest();
  4171  0C2E  318D  257E  318B   	fcall	_USBCheckStdRequest
  4172                           
  4173                           ;usb_device.c: 2526: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  4174  0C31  3000               	movlw	0
  4175  0C32  0020               	movlb	0	; select bank0
  4176  0C33  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4177  0C34  3003               	movlw	3
  4178  0C35  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4179  0C36  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4180  0C37  3000               	movlw	0
  4181  0C38  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4182  0C39  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4183  0C3A  318B  2386  318B   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4184                           
  4185                           ;usb_device.c: 2539: USBCtrlEPServiceComplete();
  4186  0C3D  3186  26D7         	fcall	_USBCtrlEPServiceComplete
  4187  0C3F  0008               	return
  4188  0C40                     __end_of_USBCtrlTrfSetupHandler:	
  4189                           
  4190                           	psect	text9
  4191  06D7                     __ptext9:	
  4192 ;; *************** function _USBCtrlEPServiceComplete *****************
  4193 ;; Defined at:
  4194 ;;		line 1635 in file "../framework/usb/usb_device.c"
  4195 ;; Parameters:    Size  Location     Type
  4196 ;;		None
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;		None
  4199 ;; Return value:  Size  Location     Type
  4200 ;;		None               void
  4201 ;; Registers used:
  4202 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4210 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4211 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4212 ;;Total ram usage:        2 bytes
  4213 ;; Hardware stack levels used:    1
  4214 ;; Hardware stack levels required when called:    3
  4215 ;; This function calls:
  4216 ;;		_USBCtrlEPAllowDataStage
  4217 ;;		_USBCtrlEPAllowStatusStage
  4218 ;; This function is called by:
  4219 ;;		_USBCtrlTrfSetupHandler
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           
  4224                           ;psect for function _USBCtrlEPServiceComplete
  4225  06D7                     _USBCtrlEPServiceComplete:	
  4226                           
  4227                           ;usb_device.c: 1641: UCONbits.PKTDIS = 0;
  4228                           
  4229                           ;incstack = 0
  4230                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4231  06D7  003D               	movlb	29	; select bank29
  4232  06D8  120E               	bcf	14,4	;volatile
  4233                           
  4234                           ;usb_device.c: 1647: if(inPipes[0].info.bits.busy == 0)
  4235  06D9  0021               	movlb	1	; select bank1
  4236  06DA  1BE2               	btfsc	(_inPipes^(0+128)+2),7
  4237  06DB  2F19               	goto	l641
  4238                           
  4239                           ;usb_device.c: 1648: {
  4240                           ;usb_device.c: 1649: if(outPipes[0].info.bits.busy == 1)
  4241  06DC  0022               	movlb	2	; select bank2
  4242  06DD  1FC9               	btfss	(_outPipes^(0+256)+2),7
  4243  06DE  2EEE               	goto	l3294
  4244                           
  4245                           ;usb_device.c: 1650: {
  4246                           ;usb_device.c: 1651: controlTransferState = 2;
  4247  06DF  3002               	movlw	2
  4248  06E0  00F6               	movwf	??_USBCtrlEPServiceComplete
  4249  06E1  0876               	movf	??_USBCtrlEPServiceComplete,w
  4250  06E2  0021               	movlb	1	; select bank1
  4251  06E3  00E9               	movwf	_controlTransferState^(0+128)
  4252                           
  4253                           ;usb_device.c: 1662: if(USBDeferOUTDataStagePackets == 0)
  4254  06E4  0022               	movlb	2	; select bank2
  4255  06E5  085E               	movf	_USBDeferOUTDataStagePackets^(0+256),w	;volatile
  4256  06E6  1D03               	btfss	3,2
  4257  06E7  2EEA               	goto	l3290
  4258                           
  4259                           ;usb_device.c: 1663: {
  4260                           ;usb_device.c: 1664: USBCtrlEPAllowDataStage();
  4261  06E8  318D  252A         	fcall	_USBCtrlEPAllowDataStage
  4262  06EA                     l3290:	
  4263                           
  4264                           ;usb_device.c: 1665: }
  4265                           ;usb_device.c: 1669: USBStatusStageEnabledFlag2 = 0;
  4266  06EA  0022               	movlb	2	; select bank2
  4267  06EB  01E0               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  4268                           
  4269                           ;usb_device.c: 1670: USBStatusStageEnabledFlag1 = 0;
  4270  06EC  01DF               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  4271                           
  4272                           ;usb_device.c: 1671: }
  4273  06ED  0008               	return
  4274  06EE                     l3294:	
  4275                           
  4276                           ;usb_device.c: 1672: else
  4277                           ;usb_device.c: 1673: {
  4278                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->CNT = 8;
  4279  06EE  3008               	movlw	8
  4280  06EF  00F6               	movwf	??_USBCtrlEPServiceComplete
  4281  06F0  0A7C               	incf	_pBDTEntryEP0OutNext,w
  4282  06F1  0086               	movwf	6
  4283  06F2  0187               	clrf	7
  4284  06F3  0876               	movf	??_USBCtrlEPServiceComplete,w
  4285  06F4  0081               	movwf	1
  4286                           
  4287                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4288  06F5  3040               	movlw	64
  4289  06F6  00F6               	movwf	??_USBCtrlEPServiceComplete
  4290  06F7  3000               	movlw	0
  4291  06F8  00F7               	movwf	??_USBCtrlEPServiceComplete+1
  4292  06F9  087C               	movf	_pBDTEntryEP0OutNext,w
  4293  06FA  3E02               	addlw	2
  4294  06FB  0086               	movwf	6
  4295  06FC  0187               	clrf	7
  4296  06FD  0876               	movf	??_USBCtrlEPServiceComplete,w
  4297  06FE  3FC0               	movwi [0]fsr1
  4298  06FF  0877               	movf	??_USBCtrlEPServiceComplete+1,w
  4299  0700  3FC1               	movwi [1]fsr1
  4300                           
  4301                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  4302  0701  300C               	movlw	12
  4303  0702  00F6               	movwf	??_USBCtrlEPServiceComplete
  4304  0703  087C               	movf	_pBDTEntryEP0OutNext,w
  4305  0704  0086               	movwf	6
  4306  0705  0187               	clrf	7
  4307  0706  0876               	movf	??_USBCtrlEPServiceComplete,w
  4308  0707  0081               	movwf	1
  4309                           
  4310                           ;usb_device.c: 1681: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  4311  0708  087C               	movf	_pBDTEntryEP0OutNext,w
  4312  0709  0086               	movwf	6
  4313  070A  0187               	clrf	7
  4314  070B  1781               	bsf	1,7
  4315                           
  4316                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val = 0x04;
  4317  070C  3004               	movlw	4
  4318  070D  00F6               	movwf	??_USBCtrlEPServiceComplete
  4319  070E  0020               	movlb	0	; select bank0
  4320  070F  0869               	movf	_pBDTEntryIn,w
  4321  0710  0086               	movwf	6
  4322  0711  0187               	clrf	7
  4323  0712  0876               	movf	??_USBCtrlEPServiceComplete,w
  4324  0713  0081               	movwf	1
  4325                           
  4326                           ;usb_device.c: 1683: pBDTEntryIn[0]->STAT.Val |= 0x80;
  4327  0714  0869               	movf	_pBDTEntryIn,w
  4328  0715  0086               	movwf	6
  4329  0716  0187               	clrf	7
  4330  0717  1781               	bsf	1,7
  4331                           
  4332                           ;usb_device.c: 1684: }
  4333                           ;usb_device.c: 1685: }
  4334  0718  0008               	return
  4335  0719                     l641:	
  4336                           
  4337                           ;usb_device.c: 1686: else
  4338                           ;usb_device.c: 1687: {
  4339                           ;usb_device.c: 1688: if(SetupPkt.DataDir == (0x80>>7))
  4340  0719  0020               	movlb	0	; select bank0
  4341  071A  1FC0               	btfss	64,7	;volatile
  4342  071B  2F30               	goto	l3320
  4343                           
  4344                           ;usb_device.c: 1689: {
  4345                           ;usb_device.c: 1690: controlTransferState = 1;
  4346  071C  0021               	movlb	1	; select bank1
  4347  071D  01E9               	clrf	_controlTransferState^(0+128)
  4348  071E  0AE9               	incf	_controlTransferState^(0+128),f
  4349                           
  4350                           ;usb_device.c: 1704: if(USBDeferINDataStagePackets == 0)
  4351  071F  0022               	movlb	2	; select bank2
  4352  0720  085D               	movf	_USBDeferINDataStagePackets^(0+256),w	;volatile
  4353  0721  1D03               	btfss	3,2
  4354  0722  2F26               	goto	l3312
  4355                           
  4356                           ;usb_device.c: 1705: {
  4357                           ;usb_device.c: 1706: USBCtrlEPAllowDataStage();
  4358  0723  318D  252A  3186   	fcall	_USBCtrlEPAllowDataStage
  4359  0726                     l3312:	
  4360                           
  4361                           ;usb_device.c: 1707: }
  4362                           ;usb_device.c: 1729: USBStatusStageEnabledFlag2 = 0;
  4363  0726  0022               	movlb	2	; select bank2
  4364  0727  01E0               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  4365                           
  4366                           ;usb_device.c: 1730: USBStatusStageEnabledFlag1 = 0;
  4367  0728  01DF               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  4368                           
  4369                           ;usb_device.c: 1731: if(USBDeferStatusStagePacket == 0)
  4370  0729  0020               	movlb	0	; select bank0
  4371  072A  086B               	movf	_USBDeferStatusStagePacket,w	;volatile
  4372  072B  1D03               	btfss	3,2
  4373  072C  0008               	return
  4374                           
  4375                           ;usb_device.c: 1732: {
  4376                           ;usb_device.c: 1733: USBCtrlEPAllowStatusStage();
  4377  072D  318E  263A         	fcall	_USBCtrlEPAllowStatusStage
  4378                           
  4379                           ;usb_device.c: 1734: }
  4380                           ;usb_device.c: 1735: }
  4381  072F  0008               	return
  4382  0730                     l3320:	
  4383                           
  4384                           ;usb_device.c: 1736: else
  4385                           ;usb_device.c: 1737: {
  4386                           ;usb_device.c: 1748: controlTransferState = 2;
  4387  0730  3002               	movlw	2
  4388  0731  00F6               	movwf	??_USBCtrlEPServiceComplete
  4389  0732  0876               	movf	??_USBCtrlEPServiceComplete,w
  4390  0733  0021               	movlb	1	; select bank1
  4391  0734  00E9               	movwf	_controlTransferState^(0+128)
  4392                           
  4393                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->CNT = 8;
  4394  0735  3008               	movlw	8
  4395  0736  00F6               	movwf	??_USBCtrlEPServiceComplete
  4396  0737  0A7C               	incf	_pBDTEntryEP0OutNext,w
  4397  0738  0086               	movwf	6
  4398  0739  0187               	clrf	7
  4399  073A  0876               	movf	??_USBCtrlEPServiceComplete,w
  4400  073B  0081               	movwf	1
  4401                           
  4402                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4403  073C  3040               	movlw	64
  4404  073D  00F6               	movwf	??_USBCtrlEPServiceComplete
  4405  073E  3000               	movlw	0
  4406  073F  00F7               	movwf	??_USBCtrlEPServiceComplete+1
  4407  0740  087C               	movf	_pBDTEntryEP0OutNext,w
  4408  0741  3E02               	addlw	2
  4409  0742  0086               	movwf	6
  4410  0743  0187               	clrf	7
  4411  0744  0876               	movf	??_USBCtrlEPServiceComplete,w
  4412  0745  3FC0               	movwi [0]fsr1
  4413  0746  0877               	movf	??_USBCtrlEPServiceComplete+1,w
  4414  0747  3FC1               	movwi [1]fsr1
  4415                           
  4416                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  4417  0748  3004               	movlw	4
  4418  0749  00F6               	movwf	??_USBCtrlEPServiceComplete
  4419  074A  087C               	movf	_pBDTEntryEP0OutNext,w
  4420  074B  0086               	movwf	6
  4421  074C  0187               	clrf	7
  4422  074D  0876               	movf	??_USBCtrlEPServiceComplete,w
  4423  074E  0081               	movwf	1
  4424                           
  4425                           ;usb_device.c: 1754: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  4426  074F  087C               	movf	_pBDTEntryEP0OutNext,w
  4427  0750  0086               	movwf	6
  4428  0751  0187               	clrf	7
  4429  0752  1781               	bsf	1,7
  4430                           
  4431                           ;usb_device.c: 1757: USBStatusStageEnabledFlag2 = 0;
  4432  0753  0022               	movlb	2	; select bank2
  4433  0754  01E0               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  4434                           
  4435                           ;usb_device.c: 1758: USBStatusStageEnabledFlag1 = 0;
  4436  0755  01DF               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  4437                           
  4438                           ;usb_device.c: 1759: if(USBDeferStatusStagePacket == 0)
  4439  0756  0020               	movlb	0	; select bank0
  4440  0757  086B               	movf	_USBDeferStatusStagePacket,w	;volatile
  4441  0758  1D03               	btfss	3,2
  4442  0759  0008               	return
  4443                           
  4444                           ;usb_device.c: 1760: {
  4445                           ;usb_device.c: 1761: USBCtrlEPAllowStatusStage();
  4446  075A  318E  263A         	fcall	_USBCtrlEPAllowStatusStage
  4447  075C  0008               	return
  4448  075D                     __end_of_USBCtrlEPServiceComplete:	
  4449                           
  4450                           	psect	text10
  4451  0D2A                     __ptext10:	
  4452 ;; *************** function _USBCtrlEPAllowDataStage *****************
  4453 ;; Defined at:
  4454 ;;		line 1507 in file "../framework/usb/usb_device.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;		None
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;		None
  4459 ;; Return value:  Size  Location     Type
  4460 ;;		None               void
  4461 ;; Registers used:
  4462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4470 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4471 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4472 ;;Total ram usage:        2 bytes
  4473 ;; Hardware stack levels used:    1
  4474 ;; Hardware stack levels required when called:    2
  4475 ;; This function calls:
  4476 ;;		_USBCtrlTrfTxService
  4477 ;; This function is called by:
  4478 ;;		_USBCtrlEPServiceComplete
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           
  4483                           ;psect for function _USBCtrlEPAllowDataStage
  4484  0D2A                     _USBCtrlEPAllowDataStage:	
  4485                           
  4486                           ;usb_device.c: 1509: USBDeferINDataStagePackets = 0;
  4487                           
  4488                           ;incstack = 0
  4489                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4490  0D2A  0022               	movlb	2	; select bank2
  4491  0D2B  01DD               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
  4492                           
  4493                           ;usb_device.c: 1510: USBDeferOUTDataStagePackets = 0;
  4494  0D2C  01DE               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
  4495                           
  4496                           ;usb_device.c: 1512: if(controlTransferState == 2)
  4497  0D2D  3002               	movlw	2
  4498  0D2E  0021               	movlb	1	; select bank1
  4499  0D2F  0669               	xorwf	_controlTransferState^(0+128),w
  4500  0D30  1D03               	btfss	3,2
  4501  0D31  2D51               	goto	l3028
  4502                           
  4503                           ;usb_device.c: 1513: {
  4504                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->CNT = 8;
  4505  0D32  3008               	movlw	8
  4506  0D33  00F4               	movwf	??_USBCtrlEPAllowDataStage
  4507  0D34  0A7C               	incf	_pBDTEntryEP0OutNext,w
  4508  0D35  0086               	movwf	6
  4509  0D36  0187               	clrf	7
  4510  0D37  0874               	movf	??_USBCtrlEPAllowDataStage,w
  4511  0D38  0081               	movwf	1
  4512                           
  4513                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  4514  0D39  3048               	movlw	72
  4515  0D3A  00F4               	movwf	??_USBCtrlEPAllowDataStage
  4516  0D3B  3000               	movlw	0
  4517  0D3C  00F5               	movwf	??_USBCtrlEPAllowDataStage+1
  4518  0D3D  087C               	movf	_pBDTEntryEP0OutNext,w
  4519  0D3E  3E02               	addlw	2
  4520  0D3F  0086               	movwf	6
  4521  0D40  0187               	clrf	7
  4522  0D41  0874               	movf	??_USBCtrlEPAllowDataStage,w
  4523  0D42  3FC0               	movwi [0]fsr1
  4524  0D43  0875               	movf	??_USBCtrlEPAllowDataStage+1,w
  4525  0D44  3FC1               	movwi [1]fsr1
  4526                           
  4527                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  4528  0D45  3048               	movlw	72
  4529  0D46  00F4               	movwf	??_USBCtrlEPAllowDataStage
  4530  0D47  087C               	movf	_pBDTEntryEP0OutNext,w
  4531  0D48  0086               	movwf	6
  4532  0D49  0187               	clrf	7
  4533  0D4A  0874               	movf	??_USBCtrlEPAllowDataStage,w
  4534  0D4B  0081               	movwf	1
  4535                           
  4536                           ;usb_device.c: 1518: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  4537  0D4C  087C               	movf	_pBDTEntryEP0OutNext,w
  4538  0D4D  0086               	movwf	6
  4539  0D4E  0187               	clrf	7
  4540  0D4F  1781               	bsf	1,7
  4541                           
  4542                           ;usb_device.c: 1519: }
  4543  0D50  0008               	return
  4544  0D51                     l3028:	
  4545                           
  4546                           ;usb_device.c: 1520: else
  4547                           ;usb_device.c: 1521: {
  4548                           ;usb_device.c: 1524: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  4549  0D51  0864               	movf	((_inPipes+1)^(0+128)+3),w
  4550  0D52  0020               	movlb	0	; select bank0
  4551  0D53  0247               	subwf	71,w	;volatile
  4552  0D54  1D03               	skipz
  4553  0D55  2D5A               	goto	u2205
  4554  0D56  0021               	movlb	1	; select bank1
  4555  0D57  0863               	movf	(_inPipes^(0+128)+3),w
  4556  0D58  0020               	movlb	0	; select bank0
  4557  0D59  0246               	subwf	70,w	;volatile
  4558  0D5A                     u2205:	
  4559  0D5A  1803               	skipnc
  4560  0D5B  2D63               	goto	l3032
  4561                           
  4562                           ;usb_device.c: 1525: {
  4563                           ;usb_device.c: 1526: inPipes[0].wCount.Val = SetupPkt.wLength;
  4564  0D5C  0847               	movf	71,w	;volatile
  4565  0D5D  0021               	movlb	1	; select bank1
  4566  0D5E  00E4               	movwf	((_inPipes+1)^(0+128)+3)
  4567  0D5F  0020               	movlb	0	; select bank0
  4568  0D60  0846               	movf	70,w	;volatile
  4569  0D61  0021               	movlb	1	; select bank1
  4570  0D62  00E3               	movwf	(_inPipes^(0+128)+3)
  4571  0D63                     l3032:	
  4572                           
  4573                           ;usb_device.c: 1527: }
  4574                           ;usb_device.c: 1528: USBCtrlTrfTxService();
  4575  0D63  318E  26A2         	fcall	_USBCtrlTrfTxService
  4576                           
  4577                           ;usb_device.c: 1533: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  4578  0D65  3048               	movlw	72
  4579  0D66  00F4               	movwf	??_USBCtrlEPAllowDataStage
  4580  0D67  3000               	movlw	0
  4581  0D68  00F5               	movwf	??_USBCtrlEPAllowDataStage+1
  4582  0D69  0020               	movlb	0	; select bank0
  4583  0D6A  0869               	movf	_pBDTEntryIn,w
  4584  0D6B  3E02               	addlw	2
  4585  0D6C  0086               	movwf	6
  4586  0D6D  0187               	clrf	7
  4587  0D6E  0874               	movf	??_USBCtrlEPAllowDataStage,w
  4588  0D6F  3FC0               	movwi [0]fsr1
  4589  0D70  0875               	movf	??_USBCtrlEPAllowDataStage+1,w
  4590  0D71  3FC1               	movwi [1]fsr1
  4591                           
  4592                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  4593  0D72  3048               	movlw	72
  4594  0D73  00F4               	movwf	??_USBCtrlEPAllowDataStage
  4595  0D74  0869               	movf	_pBDTEntryIn,w
  4596  0D75  0086               	movwf	6
  4597  0D76  0187               	clrf	7
  4598  0D77  0874               	movf	??_USBCtrlEPAllowDataStage,w
  4599  0D78  0081               	movwf	1
  4600                           
  4601                           ;usb_device.c: 1535: pBDTEntryIn[0]->STAT.Val |= 0x80;
  4602  0D79  0869               	movf	_pBDTEntryIn,w
  4603  0D7A  0086               	movwf	6
  4604  0D7B  0187               	clrf	7
  4605  0D7C  1781               	bsf	1,7
  4606  0D7D  0008               	return
  4607  0D7E                     __end_of_USBCtrlEPAllowDataStage:	
  4608                           
  4609                           	psect	text11
  4610  0D7E                     __ptext11:	
  4611 ;; *************** function _USBCheckStdRequest *****************
  4612 ;; Defined at:
  4613 ;;		line 2711 in file "../framework/usb/usb_device.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;		None
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;		None
  4618 ;; Return value:  Size  Location     Type
  4619 ;;		None               void
  4620 ;; Registers used:
  4621 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4629 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4630 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4631 ;;Total ram usage:        1 bytes
  4632 ;; Hardware stack levels used:    1
  4633 ;; Hardware stack levels required when called:    6
  4634 ;; This function calls:
  4635 ;;		_USBStdFeatureReqHandler
  4636 ;;		_USBStdGetDscHandler
  4637 ;;		_USBStdGetStatusHandler
  4638 ;;		_USBStdSetCfgHandler
  4639 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4640 ;; This function is called by:
  4641 ;;		_USBCtrlTrfSetupHandler
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           
  4646                           ;psect for function _USBCheckStdRequest
  4647  0D7E                     _USBCheckStdRequest:	
  4648                           
  4649                           ;usb_device.c: 2713: if(SetupPkt.RequestType != (0x00>>5)) return;
  4650                           
  4651                           ;incstack = 0
  4652                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4653  0D7E  0020               	movlb	0	; select bank0
  4654  0D7F  0E40               	swapf	64,w	;volatile
  4655  0D80  0C89               	rrf	9,f
  4656  0D81  3903               	andlw	3
  4657  0D82  3A00               	xorlw	0
  4658  0D83  1D03               	btfss	3,2
  4659  0D84  0008               	return
  4660  0D85  2DC7               	goto	l4388
  4661  0D86                     l770:	
  4662                           ;usb_device.c: 2716: {
  4663                           ;usb_device.c: 2717: case 5:
  4664                           
  4665                           ;usb_device.c: 2715: switch(SetupPkt.bRequest)
  4666                           
  4667                           
  4668                           ;usb_device.c: 2718: inPipes[0].info.bits.busy = 1;
  4669  0D86  0021               	movlb	1	; select bank1
  4670  0D87  17E2               	bsf	(_inPipes^(0+128)+2),7
  4671                           
  4672                           ;usb_device.c: 2719: USBDeviceState = ADR_PENDING_STATE;
  4673  0D88  3008               	movlw	8
  4674  0D89  0020               	movlb	0	; select bank0
  4675  0D8A  00E0               	movwf	??_USBCheckStdRequest
  4676  0D8B  0860               	movf	??_USBCheckStdRequest,w
  4677  0D8C  00EC               	movwf	_USBDeviceState
  4678                           
  4679                           ;usb_device.c: 2721: break;
  4680  0D8D  0008               	return
  4681  0D8E                     l4358:	
  4682                           ;usb_device.c: 2722: case 6:
  4683                           
  4684                           
  4685                           ;usb_device.c: 2723: USBStdGetDscHandler();
  4686  0D8E  318F  2781         	fcall	_USBStdGetDscHandler
  4687                           
  4688                           ;usb_device.c: 2724: break;
  4689  0D90  0008               	return
  4690  0D91                     l4360:	
  4691                           ;usb_device.c: 2725: case 9:
  4692                           
  4693                           
  4694                           ;usb_device.c: 2726: USBStdSetCfgHandler();
  4695  0D91  3187  275D         	fcall	_USBStdSetCfgHandler
  4696                           
  4697                           ;usb_device.c: 2727: break;
  4698  0D93  0008               	return
  4699  0D94                     l4362:	
  4700                           ;usb_device.c: 2728: case 8:
  4701                           
  4702                           
  4703                           ;usb_device.c: 2729: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  4704  0D94  30EE               	movlw	low _USBActiveConfiguration
  4705  0D95  0021               	movlb	1	; select bank1
  4706  0D96  00E0               	movwf	_inPipes^(0+128)
  4707  0D97  3000               	movlw	high _USBActiveConfiguration
  4708  0D98  00E1               	movwf	(_inPipes+1)^(0+128)
  4709                           
  4710                           ;usb_device.c: 2730: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  4711  0D99  1462               	bsf	(_inPipes^(0+128)+2),0
  4712                           
  4713                           ;usb_device.c: 2731: inPipes[0].wCount.v[0] = 1;
  4714  0D9A  01E3               	clrf	(_inPipes^(0+128)+3)
  4715  0D9B  0AE3               	incf	(_inPipes^(0+128)+3),f
  4716                           
  4717                           ;usb_device.c: 2732: inPipes[0].info.bits.busy = 1;
  4718  0D9C  17E2               	bsf	(_inPipes^(0+128)+2),7
  4719                           
  4720                           ;usb_device.c: 2733: break;
  4721  0D9D  0008               	return
  4722  0D9E                     l4370:	
  4723                           ;usb_device.c: 2734: case 0:
  4724                           
  4725                           
  4726                           ;usb_device.c: 2735: USBStdGetStatusHandler();
  4727  0D9E  318C  248D         	fcall	_USBStdGetStatusHandler
  4728                           
  4729                           ;usb_device.c: 2736: break;
  4730  0DA0  0008               	return
  4731  0DA1                     l4372:	
  4732                           ;usb_device.c: 2737: case 1:
  4733                           
  4734                           
  4735                           ;usb_device.c: 2738: case 3:
  4736                           ;usb_device.c: 2739: USBStdFeatureReqHandler();
  4737  0DA1  3180  203B         	fcall	_USBStdFeatureReqHandler
  4738                           
  4739                           ;usb_device.c: 2740: break;
  4740  0DA3  0008               	return
  4741  0DA4                     l4374:	
  4742                           ;usb_device.c: 2741: case 10:
  4743                           
  4744                           
  4745                           ;usb_device.c: 2742: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  4746  0DA4  0020               	movlb	0	; select bank0
  4747  0DA5  0844               	movf	68,w	;volatile
  4748  0DA6  3EEF               	addlw	(low (_USBAlternateInterface| 0))& (0+255)
  4749  0DA7  0021               	movlb	1	; select bank1
  4750  0DA8  00E0               	movwf	_inPipes^(0+128)
  4751  0DA9  3000               	movlw	0
  4752  0DAA  00E1               	movwf	(_inPipes+1)^(0+128)
  4753                           
  4754                           ;usb_device.c: 2743: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  4755  0DAB  1462               	bsf	(_inPipes^(0+128)+2),0
  4756                           
  4757                           ;usb_device.c: 2744: inPipes[0].wCount.v[0] = 1;
  4758  0DAC  01E3               	clrf	(_inPipes^(0+128)+3)
  4759  0DAD  0AE3               	incf	(_inPipes^(0+128)+3),f
  4760                           
  4761                           ;usb_device.c: 2745: inPipes[0].info.bits.busy = 1;
  4762  0DAE  17E2               	bsf	(_inPipes^(0+128)+2),7
  4763                           
  4764                           ;usb_device.c: 2746: break;
  4765  0DAF  0008               	return
  4766  0DB0                     l779:	
  4767                           ;usb_device.c: 2747: case 11:
  4768                           
  4769                           
  4770                           ;usb_device.c: 2748: inPipes[0].info.bits.busy = 1;
  4771  0DB0  0021               	movlb	1	; select bank1
  4772  0DB1  17E2               	bsf	(_inPipes^(0+128)+2),7
  4773                           
  4774                           ;usb_device.c: 2749: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  4775  0DB2  0020               	movlb	0	; select bank0
  4776  0DB3  0842               	movf	66,w	;volatile
  4777  0DB4  00E0               	movwf	??_USBCheckStdRequest
  4778  0DB5  0844               	movf	68,w	;volatile
  4779  0DB6  3EEF               	addlw	(low (_USBAlternateInterface| 0))& (0+255)
  4780  0DB7  0086               	movwf	6
  4781  0DB8  0187               	clrf	7
  4782  0DB9  0860               	movf	??_USBCheckStdRequest,w
  4783  0DBA  0081               	movwf	1
  4784                           
  4785                           ;usb_device.c: 2750: break;
  4786  0DBB  0008               	return
  4787  0DBC                     l4384:	
  4788                           ;usb_device.c: 2751: case 7:
  4789                           
  4790                           
  4791                           ;usb_device.c: 2752: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  4792  0DBC  3000               	movlw	0
  4793  0DBD  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4794  0DBE  3002               	movlw	2
  4795  0DBF  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4796  0DC0  01D7               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4797  0DC1  3000               	movlw	0
  4798  0DC2  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4799  0DC3  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4800  0DC4  318B  2386         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4801                           
  4802                           ;usb_device.c: 2757: }
  4803                           
  4804                           ;usb_device.c: 2756: break;
  4805                           
  4806                           ;usb_device.c: 2755: default:
  4807                           
  4808                           ;usb_device.c: 2754: case 12:
  4809                           
  4810                           ;usb_device.c: 2753: break;
  4811  0DC6  0008               	return
  4812  0DC7                     l4388:	
  4813  0DC7  0020               	movlb	0	; select bank0
  4814  0DC8  0841               	movf	65,w	;volatile
  4815                           
  4816                           ; Switch size 1, requested type "space"
  4817                           ; Number of cases is 11, Range of values is 0 to 12
  4818                           ; switch strategies available:
  4819                           ; Name         Instructions Cycles
  4820                           ; direct_byte           32     6 (fixed)
  4821                           ; simple_byte           34    18 (average)
  4822                           ; jumptable            260     6 (fixed)
  4823                           ;	Chosen strategy is direct_byte
  4824  0DC9  0084               	movwf	4
  4825  0DCA  300D               	movlw	13
  4826  0DCB  0204               	subwf	4,w
  4827  0DCC  1803               	skipnc
  4828  0DCD  0008               	return
  4829  0DCE  3188               	movlp	high S4752
  4830  0DCF  3504               	lslf	4,w
  4831  0DD0  3E00               	addlw	low S4752
  4832  0DD1  0082               	movwf	2
  4833  0DD2                     l768:	
  4834  0DD2  0008               	return
  4835  0DD3                     __end_of_USBCheckStdRequest:	
  4836                           
  4837                           	psect	swtext1
  4838  0800                     __pswtext1:	
  4839  0800                     S4752:	
  4840  0800  318D  2D9E         	ljmp	l4370
  4841  0802  318D  2DA1         	ljmp	l4372
  4842  0804  318D  2DD2         	ljmp	l768
  4843  0806  318D  2DA1         	ljmp	l4372
  4844  0808  318D  2DD2         	ljmp	l768
  4845  080A  318D  2D86         	ljmp	l770
  4846  080C  318D  2D8E         	ljmp	l4358
  4847  080E  318D  2DBC         	ljmp	l4384
  4848  0810  318D  2D94         	ljmp	l4362
  4849  0812  318D  2D91         	ljmp	l4360
  4850  0814  318D  2DA4         	ljmp	l4374
  4851  0816  318D  2DB0         	ljmp	l779
  4852  0818  318D  2DD2         	ljmp	l768
  4853                           
  4854                           	psect	text12
  4855  075D                     __ptext12:	
  4856 ;; *************** function _USBStdSetCfgHandler *****************
  4857 ;; Defined at:
  4858 ;;		line 1987 in file "../framework/usb/usb_device.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;		None
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;  p               2   10[BANK0 ] PTR unsigned char 
  4863 ;;		 -> UEP1(1), 
  4864 ;;  i               1   12[BANK0 ] unsigned char 
  4865 ;;  i               1   13[BANK0 ] unsigned char 
  4866 ;; Return value:  Size  Location     Type
  4867 ;;		None               void
  4868 ;; Registers used:
  4869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4876 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4877 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4878 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4879 ;;Total ram usage:        5 bytes
  4880 ;; Hardware stack levels used:    1
  4881 ;; Hardware stack levels required when called:    5
  4882 ;; This function calls:
  4883 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4884 ;;		_memset
  4885 ;; This function is called by:
  4886 ;;		_USBCheckStdRequest
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890                           
  4891                           ;psect for function _USBStdSetCfgHandler
  4892  075D                     _USBStdSetCfgHandler:	
  4893                           
  4894                           ;usb_device.c: 1989: uint8_t i;
  4895                           ;usb_device.c: 1992: inPipes[0].info.bits.busy = 1;
  4896                           
  4897                           ;incstack = 0
  4898                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4899  075D  0021               	movlb	1	; select bank1
  4900  075E  17E2               	bsf	(_inPipes^(0+128)+2),7
  4901                           
  4902                           ;usb_device.c: 1995: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 
      +                          0; };
  4903  075F  300E               	movlw	14
  4904  0760  0020               	movlb	0	; select bank0
  4905  0761  00DB               	movwf	USBStdSetCfgHandler@p+1
  4906  0762  3099               	movlw	153
  4907  0763  00DA               	movwf	USBStdSetCfgHandler@p
  4908  0764  01DC               	clrf	USBStdSetCfgHandler@i_2037
  4909  0765  085C               	movf	USBStdSetCfgHandler@i_2037,w
  4910  0766  1D03               	btfss	3,2
  4911  0767  2F78               	goto	l4236
  4912  0768                     l4228:	
  4913  0768  085A               	movf	USBStdSetCfgHandler@p,w
  4914  0769  0086               	movwf	6
  4915  076A  085B               	movf	USBStdSetCfgHandler@p+1,w
  4916  076B  0087               	movwf	7
  4917  076C  0181               	clrf	1
  4918  076D  3001               	movlw	1
  4919  076E  07DA               	addwf	USBStdSetCfgHandler@p,f
  4920  076F  3000               	movlw	0
  4921  0770  3DDB               	addwfc	USBStdSetCfgHandler@p+1,f
  4922  0771  3001               	movlw	1
  4923  0772  00FB               	movwf	??_USBStdSetCfgHandler
  4924  0773  087B               	movf	??_USBStdSetCfgHandler,w
  4925  0774  07DC               	addwf	USBStdSetCfgHandler@i_2037,f
  4926  0775  085C               	movf	USBStdSetCfgHandler@i_2037,w
  4927  0776  1903               	btfsc	3,2
  4928  0777  2F68               	goto	l4228
  4929  0778                     l4236:	
  4930                           
  4931                           ;usb_device.c: 1998: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  4932  0778  3000               	movlw	0
  4933  0779  00F1               	movwf	memset@c
  4934  077A  00F2               	movwf	memset@c+1
  4935  077B  3020               	movlw	32
  4936  077C  00F3               	movwf	memset@n
  4937  077D  3000               	movlw	0
  4938  077E  00F4               	movwf	memset@n+1
  4939  077F  3020               	movlw	32
  4940  0780  318A  226C  3187   	fcall	_memset
  4941                           
  4942                           ;usb_device.c: 2001: UCONbits.PPBRST = 1;
  4943  0783  003D               	movlb	29	; select bank29
  4944  0784  170E               	bsf	14,6	;volatile
  4945                           
  4946                           ;usb_device.c: 2006: for(i = 0; i < (uint8_t)(1+1u); i++)
  4947  0785  0020               	movlb	0	; select bank0
  4948  0786  01DD               	clrf	USBStdSetCfgHandler@i
  4949  0787  3002               	movlw	2
  4950  0788  025D               	subwf	USBStdSetCfgHandler@i,w
  4951  0789  1803               	btfsc	3,0
  4952  078A  2F9F               	goto	l4252
  4953  078B                     l4246:	
  4954                           
  4955                           ;usb_device.c: 2007: {
  4956                           ;usb_device.c: 2008: ep_data_in[i].Val = 0u;
  4957  078B  085D               	movf	USBStdSetCfgHandler@i,w
  4958  078C  3E52               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4959  078D  0086               	movwf	6
  4960  078E  3001               	movlw	1	; select bank2/3
  4961  078F  0087               	movwf	7
  4962  0790  0181               	clrf	1
  4963                           
  4964                           ;usb_device.c: 2009: ep_data_out[i].Val = 0u;
  4965  0791  085D               	movf	USBStdSetCfgHandler@i,w
  4966  0792  3E54               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4967  0793  0086               	movwf	6
  4968  0794  3001               	movlw	1	; select bank2/3
  4969  0795  0087               	movwf	7
  4970  0796  0181               	clrf	1
  4971  0797  3001               	movlw	1
  4972  0798  00FB               	movwf	??_USBStdSetCfgHandler
  4973  0799  087B               	movf	??_USBStdSetCfgHandler,w
  4974  079A  07DD               	addwf	USBStdSetCfgHandler@i,f
  4975  079B  3002               	movlw	2
  4976  079C  025D               	subwf	USBStdSetCfgHandler@i,w
  4977  079D  1C03               	skipc
  4978  079E  2F8B               	goto	l4246
  4979  079F                     l4252:	
  4980                           
  4981                           ;usb_device.c: 2010: }
  4982                           ;usb_device.c: 2013: memset((void*)&USBAlternateInterface,0x00,1);
  4983  079F  3000               	movlw	0
  4984  07A0  00F1               	movwf	memset@c
  4985  07A1  00F2               	movwf	memset@c+1
  4986  07A2  3001               	movlw	1
  4987  07A3  00F3               	movwf	memset@n
  4988  07A4  3000               	movlw	0
  4989  07A5  00F4               	movwf	memset@n+1
  4990  07A6  30EF               	movlw	(low (_USBAlternateInterface| 0))& (0+255)
  4991  07A7  318A  226C  3187   	fcall	_memset
  4992                           
  4993                           ;usb_device.c: 2016: UCONbits.PPBRST = 0;
  4994  07AA  003D               	movlb	29	; select bank29
  4995  07AB  130E               	bcf	14,6	;volatile
  4996                           
  4997                           ;usb_device.c: 2018: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  4998  07AC  3028               	movlw	40
  4999  07AD  00FB               	movwf	??_USBStdSetCfgHandler
  5000  07AE  087B               	movf	??_USBStdSetCfgHandler,w
  5001  07AF  0020               	movlb	0	; select bank0
  5002  07B0  00E9               	movwf	_pBDTEntryIn
  5003                           
  5004                           ;usb_device.c: 2021: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  5005  07B1  3020               	movlw	32
  5006  07B2  00FB               	movwf	??_USBStdSetCfgHandler
  5007  07B3  087B               	movf	??_USBStdSetCfgHandler,w
  5008  07B4  00ED               	movwf	_pBDTEntryEP0OutCurrent
  5009                           
  5010                           ;usb_device.c: 2022: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5011  07B5  086D               	movf	_pBDTEntryEP0OutCurrent,w
  5012  07B6  00FB               	movwf	??_USBStdSetCfgHandler
  5013  07B7  087B               	movf	??_USBStdSetCfgHandler,w
  5014  07B8  00FC               	movwf	_pBDTEntryEP0OutNext
  5015                           
  5016                           ;usb_device.c: 2025: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  5017  07B9  0842               	movf	66,w	;volatile
  5018  07BA  00FB               	movwf	??_USBStdSetCfgHandler
  5019  07BB  087B               	movf	??_USBStdSetCfgHandler,w
  5020  07BC  0021               	movlb	1	; select bank1
  5021  07BD  00EE               	movwf	_USBActiveConfiguration^(0+128)
  5022                           
  5023                           ;usb_device.c: 2028: if(USBActiveConfiguration == 0)
  5024  07BE  086E               	movf	_USBActiveConfiguration^(0+128),w
  5025  07BF  1D03               	btfss	3,2
  5026  07C0  2FC7               	goto	l4268
  5027                           
  5028                           ;usb_device.c: 2029: {
  5029                           ;usb_device.c: 2031: USBDeviceState = ADDRESS_STATE;
  5030  07C1  3010               	movlw	16
  5031  07C2  00FB               	movwf	??_USBStdSetCfgHandler
  5032  07C3  087B               	movf	??_USBStdSetCfgHandler,w
  5033  07C4  0020               	movlb	0	; select bank0
  5034  07C5  00EC               	movwf	_USBDeviceState
  5035                           
  5036                           ;usb_device.c: 2032: }
  5037  07C6  0008               	return
  5038  07C7                     l4268:	
  5039                           
  5040                           ;usb_device.c: 2033: else
  5041                           ;usb_device.c: 2034: {
  5042                           ;usb_device.c: 2036: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  5043  07C7  3000               	movlw	0
  5044  07C8  0020               	movlb	0	; select bank0
  5045  07C9  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5046  07CA  3001               	movlw	1
  5047  07CB  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5048  07CC  30EE               	movlw	(low (_USBActiveConfiguration| 0))& (0+255)
  5049  07CD  00FB               	movwf	??_USBStdSetCfgHandler
  5050  07CE  087B               	movf	??_USBStdSetCfgHandler,w
  5051  07CF  00D7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5052  07D0  3001               	movlw	1
  5053  07D1  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5054  07D2  3000               	movlw	0
  5055  07D3  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5056  07D4  318B  2386         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5057                           
  5058                           ;usb_device.c: 2041: USBDeviceState = CONFIGURED_STATE;
  5059  07D6  3020               	movlw	32
  5060  07D7  00FB               	movwf	??_USBStdSetCfgHandler
  5061  07D8  087B               	movf	??_USBStdSetCfgHandler,w
  5062  07D9  0020               	movlb	0	; select bank0
  5063  07DA  00EC               	movwf	_USBDeviceState
  5064  07DB  0008               	return
  5065  07DC                     __end_of_USBStdSetCfgHandler:	
  5066                           
  5067                           	psect	text13
  5068  0A6C                     __ptext13:	
  5069 ;; *************** function _memset *****************
  5070 ;; Defined at:
  5071 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  p1              1    wreg     PTR void 
  5074 ;;		 -> USBAlternateInterface(1), BDT(32), 
  5075 ;;  c               2    1[COMMON] int 
  5076 ;;  n               2    3[COMMON] unsigned int 
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;  p1              1    7[COMMON] PTR void 
  5079 ;;		 -> USBAlternateInterface(1), BDT(32), 
  5080 ;;  p               1    6[COMMON] PTR unsigned char 
  5081 ;;		 -> USBAlternateInterface(1), BDT(32), 
  5082 ;; Return value:  Size  Location     Type
  5083 ;;                  1    wreg      PTR void 
  5084 ;; Registers used:
  5085 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5091 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5092 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5093 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5094 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5095 ;;Total ram usage:        7 bytes
  5096 ;; Hardware stack levels used:    1
  5097 ;; Hardware stack levels required when called:    1
  5098 ;; This function calls:
  5099 ;;		Nothing
  5100 ;; This function is called by:
  5101 ;;		_USBStdSetCfgHandler
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           
  5106                           ;psect for function _memset
  5107  0A6C                     _memset:	
  5108                           
  5109                           ;incstack = 0
  5110                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  5111                           ;memset@p1 stored from wreg
  5112  0A6C  00F7               	movwf	memset@p1
  5113  0A6D  0877               	movf	memset@p1,w
  5114  0A6E  00F5               	movwf	??_memset
  5115  0A6F  0875               	movf	??_memset,w
  5116  0A70  00F6               	movwf	memset@p
  5117  0A71                     l2978:	
  5118  0A71  3001               	movlw	1
  5119  0A72  02F3               	subwf	memset@n,f
  5120  0A73  3000               	movlw	0
  5121  0A74  3BF4               	subwfb	memset@n+1,f
  5122  0A75  0A73               	incf	memset@n,w
  5123  0A76  1903               	btfsc	3,2
  5124  0A77  0A74               	incf	memset@n+1,w
  5125  0A78  1903               	btfsc	3,2
  5126  0A79  0008               	return
  5127  0A7A  0871               	movf	memset@c,w
  5128  0A7B  00F5               	movwf	??_memset
  5129  0A7C  0876               	movf	memset@p,w
  5130  0A7D  0086               	movwf	6
  5131  0A7E  0187               	clrf	7
  5132  0A7F  0875               	movf	??_memset,w
  5133  0A80  0081               	movwf	1
  5134  0A81  3001               	movlw	1
  5135  0A82  00F5               	movwf	??_memset
  5136  0A83  0875               	movf	??_memset,w
  5137  0A84  07F6               	addwf	memset@p,f
  5138  0A85  2A71               	goto	l2978
  5139  0A86                     __end_of_memset:	
  5140                           ;	Return value of _memset is never used
  5141                           
  5142                           
  5143                           	psect	text14
  5144  0C8D                     __ptext14:	
  5145 ;; *************** function _USBStdGetStatusHandler *****************
  5146 ;; Defined at:
  5147 ;;		line 2148 in file "../framework/usb/usb_device.c"
  5148 ;; Parameters:    Size  Location     Type
  5149 ;;		None
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;  p               1    2[COMMON] PTR struct __BDT
  5152 ;;		 -> BDT(32), NULL(0), 
  5153 ;; Return value:  Size  Location     Type
  5154 ;;		None               void
  5155 ;; Registers used:
  5156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5163 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5164 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5165 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5166 ;;Total ram usage:        2 bytes
  5167 ;; Hardware stack levels used:    1
  5168 ;; Hardware stack levels required when called:    1
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_USBCheckStdRequest
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           
  5177                           ;psect for function _USBStdGetStatusHandler
  5178  0C8D                     _USBStdGetStatusHandler:	
  5179                           
  5180                           ;usb_device.c: 2150: CtrlTrfData[0] = 0;
  5181                           
  5182                           ;incstack = 0
  5183                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  5184  0C8D  0020               	movlb	0	; select bank0
  5185  0C8E  01C8               	clrf	72	;volatile
  5186                           
  5187                           ;usb_device.c: 2151: CtrlTrfData[1] = 0;
  5188  0C8F  01C9               	clrf	73	;volatile
  5189                           
  5190                           ;usb_device.c: 2153: switch(SetupPkt.Recipient)
  5191  0C90  2CC1               	goto	l3142
  5192  0C91                     l706:	
  5193                           ;usb_device.c: 2154: {
  5194                           ;usb_device.c: 2155: case (0x00):
  5195                           
  5196                           
  5197                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  5198  0C91  0021               	movlb	1	; select bank1
  5199  0C92  17E2               	bsf	(_inPipes^(0+128)+2),7
  5200                           
  5201                           ;usb_device.c: 2164: }
  5202                           ;usb_device.c: 2166: if(RemoteWakeup == 1)
  5203                           
  5204                           ;usb_device.c: 2162: {
  5205                           ;usb_device.c: 2163: CtrlTrfData[0]|=0x01;
  5206                           
  5207                           ;usb_device.c: 2161: if(0 == 1)
  5208  0C93  0022               	movlb	2	; select bank2
  5209  0C94  035B               	decf	_RemoteWakeup^(0+256),w
  5210  0C95  1D03               	btfss	3,2
  5211  0C96  2CCD               	goto	l709
  5212                           
  5213                           ;usb_device.c: 2167: {
  5214                           ;usb_device.c: 2168: CtrlTrfData[0]|=0x02;
  5215  0C97  0020               	movlb	0	; select bank0
  5216  0C98  14C8               	bsf	72,1	;volatile
  5217                           
  5218                           ;usb_device.c: 2169: }
  5219                           ;usb_device.c: 2170: break;
  5220  0C99  2CCD               	goto	l709
  5221  0C9A                     l710:	
  5222                           ;usb_device.c: 2171: case (0x01):
  5223                           
  5224                           
  5225                           ;usb_device.c: 2172: inPipes[0].info.bits.busy = 1;
  5226  0C9A  0021               	movlb	1	; select bank1
  5227  0C9B  17E2               	bsf	(_inPipes^(0+128)+2),7
  5228                           
  5229                           ;usb_device.c: 2173: break;
  5230  0C9C  2CCD               	goto	l709
  5231  0C9D                     l711:	
  5232                           ;usb_device.c: 2174: case (0x02):
  5233                           
  5234                           
  5235                           ;usb_device.c: 2175: inPipes[0].info.bits.busy = 1;
  5236  0C9D  0021               	movlb	1	; select bank1
  5237  0C9E  17E2               	bsf	(_inPipes^(0+128)+2),7
  5238                           
  5239                           ;usb_device.c: 2179: {
  5240                           ;usb_device.c: 2180: BDT_ENTRY *p;
  5241                           ;usb_device.c: 2182: if(SetupPkt.EPDir == 0)
  5242  0C9F  0020               	movlb	0	; select bank0
  5243  0CA0  1BC4               	btfsc	68,7	;volatile
  5244  0CA1  2CA9               	goto	l3132
  5245                           
  5246                           ;usb_device.c: 2183: {
  5247                           ;usb_device.c: 2184: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  5248  0CA2  0844               	movf	68,w	;volatile
  5249  0CA3  390F               	andlw	15
  5250  0CA4  3E58               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5251  0CA5  0086               	movwf	6
  5252  0CA6  3001               	movlw	1	; select bank2/3
  5253  0CA7  0087               	movwf	7
  5254  0CA8  2CAE               	goto	L2
  5255  0CA9                     l3132:	
  5256                           ;usb_device.c: 2185: }
  5257                           
  5258                           
  5259                           ;usb_device.c: 2186: else
  5260                           ;usb_device.c: 2187: {
  5261                           ;usb_device.c: 2188: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  5262  0CA9  0844               	movf	68,w	;volatile
  5263  0CAA  390F               	andlw	15
  5264  0CAB  3E69               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  5265  0CAC  0086               	movwf	6
  5266  0CAD  0187               	clrf	7
  5267  0CAE                     L2:	
  5268  0CAE  0801               	movf	1,w
  5269  0CAF  00F1               	movwf	??_USBStdGetStatusHandler
  5270  0CB0  0871               	movf	??_USBStdGetStatusHandler,w
  5271  0CB1  00F2               	movwf	USBStdGetStatusHandler@p
  5272                           
  5273                           ;usb_device.c: 2189: }
  5274                           ;usb_device.c: 2191: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  5275  0CB2  0872               	movf	USBStdGetStatusHandler@p,w
  5276  0CB3  0086               	movwf	6
  5277  0CB4  0187               	clrf	7
  5278  0CB5  1F81               	btfss	1,7
  5279  0CB6  2CCD               	goto	l709
  5280  0CB7  0872               	movf	USBStdGetStatusHandler@p,w
  5281  0CB8  0086               	movwf	6
  5282  0CB9  0187               	clrf	7
  5283  0CBA  1D01               	btfss	1,2
  5284  0CBB  2CCD               	goto	l709
  5285                           
  5286                           ;usb_device.c: 2192: CtrlTrfData[0]=0x01;
  5287  0CBC  3001               	movlw	1
  5288  0CBD  00F1               	movwf	??_USBStdGetStatusHandler
  5289  0CBE  0871               	movf	??_USBStdGetStatusHandler,w
  5290  0CBF  00C8               	movwf	72	;volatile
  5291                           
  5292                           ;usb_device.c: 2194: }
  5293                           ;usb_device.c: 2195: }
  5294                           
  5295                           ;usb_device.c: 2193: break;
  5296  0CC0  2CCD               	goto	l709
  5297  0CC1                     l3142:	
  5298  0CC1  0840               	movf	64,w	;volatile
  5299  0CC2  391F               	andlw	31
  5300                           
  5301                           ; Switch size 1, requested type "space"
  5302                           ; Number of cases is 3, Range of values is 0 to 2
  5303                           ; switch strategies available:
  5304                           ; Name         Instructions Cycles
  5305                           ; simple_byte           10     6 (average)
  5306                           ; direct_byte           12     6 (fixed)
  5307                           ; jumptable            260     6 (fixed)
  5308                           ;	Chosen strategy is simple_byte
  5309  0CC3  3A00               	xorlw	0	; case 0
  5310  0CC4  1903               	skipnz
  5311  0CC5  2C91               	goto	l706
  5312  0CC6  3A01               	xorlw	1	; case 1
  5313  0CC7  1903               	skipnz
  5314  0CC8  2C9A               	goto	l710
  5315  0CC9  3A03               	xorlw	3	; case 2
  5316  0CCA  1903               	skipnz
  5317  0CCB  2C9D               	goto	l711
  5318  0CCC  2CCD               	goto	l709
  5319  0CCD                     l709:	
  5320                           
  5321                           ;usb_device.c: 2197: if(inPipes[0].info.bits.busy == 1)
  5322  0CCD  0021               	movlb	1	; select bank1
  5323  0CCE  1FE2               	btfss	(_inPipes^(0+128)+2),7
  5324  0CCF  0008               	return
  5325                           
  5326                           ;usb_device.c: 2198: {
  5327                           ;usb_device.c: 2199: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  5328  0CD0  3048               	movlw	72
  5329  0CD1  00E0               	movwf	_inPipes^(0+128)
  5330  0CD2  3000               	movlw	0
  5331  0CD3  00E1               	movwf	(_inPipes+1)^(0+128)
  5332                           
  5333                           ;usb_device.c: 2200: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5334  0CD4  1462               	bsf	(_inPipes^(0+128)+2),0
  5335                           
  5336                           ;usb_device.c: 2201: inPipes[0].wCount.v[0] = 2;
  5337  0CD5  3002               	movlw	2
  5338  0CD6  00F1               	movwf	??_USBStdGetStatusHandler
  5339  0CD7  0871               	movf	??_USBStdGetStatusHandler,w
  5340  0CD8  00E3               	movwf	(_inPipes^(0+128)+3)
  5341  0CD9  0008               	return
  5342  0CDA                     __end_of_USBStdGetStatusHandler:	
  5343                           
  5344                           	psect	text15
  5345  0F81                     __ptext15:	
  5346 ;; *************** function _USBStdGetDscHandler *****************
  5347 ;; Defined at:
  5348 ;;		line 2062 in file "../framework/usb/usb_device.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;		None
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;		None
  5353 ;; Return value:  Size  Location     Type
  5354 ;;		None               void
  5355 ;; Registers used:
  5356 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5364 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5365 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5366 ;;Total ram usage:        3 bytes
  5367 ;; Hardware stack levels used:    1
  5368 ;; Hardware stack levels required when called:    1
  5369 ;; This function calls:
  5370 ;;		Nothing
  5371 ;; This function is called by:
  5372 ;;		_USBCheckStdRequest
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376                           
  5377                           ;psect for function _USBStdGetDscHandler
  5378  0F81                     _USBStdGetDscHandler:	
  5379                           
  5380                           ;usb_device.c: 2064: if(SetupPkt.bmRequestType == 0x80)
  5381                           
  5382                           ;incstack = 0
  5383                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  5384  0F81  3080               	movlw	128
  5385  0F82  0020               	movlb	0	; select bank0
  5386  0F83  0640               	xorwf	64,w	;volatile
  5387  0F84  1D03               	btfss	3,2
  5388  0F85  0008               	return
  5389                           
  5390                           ;usb_device.c: 2065: {
  5391                           ;usb_device.c: 2066: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  5392  0F86  30C0               	movlw	192
  5393  0F87  00F1               	movwf	??_USBStdGetDscHandler
  5394  0F88  0871               	movf	??_USBStdGetDscHandler,w
  5395  0F89  0021               	movlb	1	; select bank1
  5396  0F8A  00E2               	movwf	(_inPipes^(0+128)+2)
  5397                           
  5398                           ;usb_device.c: 2068: switch(SetupPkt.bDescriptorType)
  5399  0F8B  2FF3               	goto	l3120
  5400  0F8C                     l3096:	
  5401                           ;usb_device.c: 2069: {
  5402                           ;usb_device.c: 2070: case 0x01:
  5403                           
  5404                           
  5405                           ;usb_device.c: 2074: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  5406  0F8C  3027               	movlw	low (_device_dsc| (0+32768))
  5407  0F8D  0021               	movlb	1	; select bank1
  5408  0F8E  00E0               	movwf	_inPipes^(0+128)
  5409  0F8F  3082               	movlw	high (_device_dsc| (0+32768))
  5410  0F90  00E1               	movwf	(_inPipes^(0+128)+1)
  5411                           
  5412                           ;usb_device.c: 2076: inPipes[0].wCount.Val = sizeof(device_dsc);
  5413  0F91  3012               	movlw	18
  5414  0F92  00E3               	movwf	(_inPipes^(0+128)+3)
  5415  0F93  3000               	movlw	0
  5416  0F94  00E4               	movwf	(_inPipes^(0+128)+4)
  5417                           
  5418                           ;usb_device.c: 2077: break;
  5419  0F95  0008               	return
  5420  0F96                     l3098:	
  5421                           ;usb_device.c: 2078: case 0x02:
  5422                           
  5423                           
  5424                           ;usb_device.c: 2082: if(SetupPkt.bDscIndex < 1)
  5425  0F96  0020               	movlb	0	; select bank0
  5426  0F97  0842               	movf	66,w	;volatile
  5427  0F98  1D03               	btfss	3,2
  5428  0F99  2FC9               	goto	l3106
  5429                           
  5430                           ;usb_device.c: 2083: {
  5431                           ;usb_device.c: 2085: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  5432  0F9A  0842               	movf	66,w	;volatile
  5433  0F9B  00F1               	movwf	??_USBStdGetDscHandler
  5434  0F9C  01F2               	clrf	??_USBStdGetDscHandler+1
  5435  0F9D  35F1               	lslf	??_USBStdGetDscHandler,f
  5436  0F9E  0DF2               	rlf	??_USBStdGetDscHandler+1,f
  5437  0F9F  306E               	movlw	low (_USB_CD_Ptr| (0+32768))
  5438  0FA0  0771               	addwf	??_USBStdGetDscHandler,w
  5439  0FA1  0084               	movwf	4
  5440  0FA2  3081               	movlw	high (_USB_CD_Ptr| (0+32768))
  5441  0FA3  3D72               	addwfc	??_USBStdGetDscHandler+1,w
  5442  0FA4  0085               	movwf	5
  5443  0FA5  3F00               	moviw [0]fsr0
  5444  0FA6  0021               	movlb	1	; select bank1
  5445  0FA7  00E0               	movwf	_inPipes^(0+128)
  5446  0FA8  3F01               	moviw [1]fsr0
  5447  0FA9  00E1               	movwf	(_inPipes+1)^(0+128)
  5448                           
  5449                           ;usb_device.c: 2093: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  5450  0FAA  0861               	movf	(_inPipes+1)^(0+128),w
  5451  0FAB  00F2               	movwf	??_USBStdGetDscHandler+1
  5452  0FAC  0860               	movf	_inPipes^(0+128),w
  5453  0FAD  00F1               	movwf	??_USBStdGetDscHandler
  5454  0FAE  3002               	movlw	2
  5455  0FAF  0771               	addwf	??_USBStdGetDscHandler,w
  5456  0FB0  0084               	movwf	4
  5457  0FB1  0872               	movf	??_USBStdGetDscHandler+1,w
  5458  0FB2  1803               	skipnc
  5459  0FB3  0A72               	incf	??_USBStdGetDscHandler+1,w
  5460  0FB4  0085               	movwf	5
  5461  0FB5  0800               	movf	0,w	;code access
  5462  0FB6  00F3               	movwf	??_USBStdGetDscHandler+2
  5463  0FB7  0873               	movf	??_USBStdGetDscHandler+2,w
  5464  0FB8  00E3               	movwf	(_inPipes^(0+128)+3)
  5465                           
  5466                           ;usb_device.c: 2094: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  5467  0FB9  0861               	movf	(_inPipes+1)^(0+128),w
  5468  0FBA  00F2               	movwf	??_USBStdGetDscHandler+1
  5469  0FBB  0860               	movf	_inPipes^(0+128),w
  5470  0FBC  00F1               	movwf	??_USBStdGetDscHandler
  5471  0FBD  3003               	movlw	3
  5472  0FBE  0771               	addwf	??_USBStdGetDscHandler,w
  5473  0FBF  0084               	movwf	4
  5474  0FC0  0872               	movf	??_USBStdGetDscHandler+1,w
  5475  0FC1  1803               	skipnc
  5476  0FC2  0A72               	incf	??_USBStdGetDscHandler+1,w
  5477  0FC3  0085               	movwf	5
  5478  0FC4  0800               	movf	0,w	;code access
  5479  0FC5  00F3               	movwf	??_USBStdGetDscHandler+2
  5480  0FC6  0873               	movf	??_USBStdGetDscHandler+2,w
  5481  0FC7  00E4               	movwf	(_inPipes^(0+128)+4)
  5482                           
  5483                           ;usb_device.c: 2095: }
  5484  0FC8  0008               	return
  5485  0FC9                     l3106:	
  5486                           
  5487                           ;usb_device.c: 2096: else
  5488                           ;usb_device.c: 2097: {
  5489                           ;usb_device.c: 2098: inPipes[0].info.Val = 0;
  5490  0FC9  0021               	movlb	1	; select bank1
  5491  0FCA  01E2               	clrf	(_inPipes^(0+128)+2)
  5492                           
  5493                           ;usb_device.c: 2099: }
  5494                           ;usb_device.c: 2100: break;
  5495  0FCB  0008               	return
  5496  0FCC                     l3108:	
  5497                           ;usb_device.c: 2101: case 0x03:
  5498                           
  5499                           
  5500                           ;usb_device.c: 2105: if(SetupPkt.bDscIndex<3)
  5501  0FCC  3003               	movlw	3
  5502  0FCD  0020               	movlb	0	; select bank0
  5503  0FCE  0242               	subwf	66,w	;volatile
  5504  0FCF  1803               	skipnc
  5505  0FD0  2FED               	goto	l3114
  5506                           
  5507                           ;usb_device.c: 2106: {
  5508                           ;usb_device.c: 2108: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  5509  0FD1  0842               	movf	66,w	;volatile
  5510  0FD2  00F1               	movwf	??_USBStdGetDscHandler
  5511  0FD3  01F2               	clrf	??_USBStdGetDscHandler+1
  5512  0FD4  35F1               	lslf	??_USBStdGetDscHandler,f
  5513  0FD5  0DF2               	rlf	??_USBStdGetDscHandler+1,f
  5514  0FD6  3068               	movlw	low (_USB_SD_Ptr| (0+32768))
  5515  0FD7  0771               	addwf	??_USBStdGetDscHandler,w
  5516  0FD8  0084               	movwf	4
  5517  0FD9  3081               	movlw	high (_USB_SD_Ptr| (0+32768))
  5518  0FDA  3D72               	addwfc	??_USBStdGetDscHandler+1,w
  5519  0FDB  0085               	movwf	5
  5520  0FDC  3F00               	moviw [0]fsr0
  5521  0FDD  0021               	movlb	1	; select bank1
  5522  0FDE  00E0               	movwf	_inPipes^(0+128)
  5523  0FDF  3F01               	moviw [1]fsr0
  5524  0FE0  00E1               	movwf	(_inPipes+1)^(0+128)
  5525                           
  5526                           ;usb_device.c: 2110: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  5527  0FE1  0860               	movf	_inPipes^(0+128),w
  5528  0FE2  0084               	movwf	4
  5529  0FE3  0861               	movf	(_inPipes+1)^(0+128),w
  5530  0FE4  0085               	movwf	5
  5531  0FE5  0800               	movf	0,w	;code access
  5532  0FE6  00F1               	movwf	??_USBStdGetDscHandler
  5533  0FE7  01F2               	clrf	??_USBStdGetDscHandler+1
  5534  0FE8  0871               	movf	??_USBStdGetDscHandler,w
  5535  0FE9  00E3               	movwf	(_inPipes^(0+128)+3)
  5536  0FEA  0872               	movf	??_USBStdGetDscHandler+1,w
  5537  0FEB  00E4               	movwf	((_inPipes+1)^(0+128)+3)
  5538                           
  5539                           ;usb_device.c: 2111: }
  5540  0FEC  0008               	return
  5541  0FED                     l3114:	
  5542                           
  5543                           ;usb_device.c: 2121: else
  5544                           ;usb_device.c: 2122: {
  5545                           ;usb_device.c: 2123: inPipes[0].info.Val = 0;
  5546  0FED  0021               	movlb	1	; select bank1
  5547  0FEE  01E2               	clrf	(_inPipes^(0+128)+2)
  5548                           
  5549                           ;usb_device.c: 2124: }
  5550                           ;usb_device.c: 2125: break;
  5551  0FEF  0008               	return
  5552  0FF0                     l3116:	
  5553                           ;usb_device.c: 2126: default:
  5554                           
  5555                           
  5556                           ;usb_device.c: 2127: inPipes[0].info.Val = 0;
  5557  0FF0  0021               	movlb	1	; select bank1
  5558  0FF1  01E2               	clrf	(_inPipes^(0+128)+2)
  5559                           
  5560                           ;usb_device.c: 2129: }
  5561                           
  5562                           ;usb_device.c: 2128: break;
  5563  0FF2  0008               	return
  5564  0FF3                     l3120:	
  5565  0FF3  0020               	movlb	0	; select bank0
  5566  0FF4  0843               	movf	67,w	;volatile
  5567                           
  5568                           ; Switch size 1, requested type "space"
  5569                           ; Number of cases is 3, Range of values is 1 to 3
  5570                           ; switch strategies available:
  5571                           ; Name         Instructions Cycles
  5572                           ; simple_byte           10     6 (average)
  5573                           ; direct_byte           15     9 (fixed)
  5574                           ; jumptable            263     9 (fixed)
  5575                           ;	Chosen strategy is simple_byte
  5576  0FF5  3A01               	xorlw	1	; case 1
  5577  0FF6  1903               	skipnz
  5578  0FF7  2F8C               	goto	l3096
  5579  0FF8  3A03               	xorlw	3	; case 2
  5580  0FF9  1903               	skipnz
  5581  0FFA  2F96               	goto	l3098
  5582  0FFB  3A01               	xorlw	1	; case 3
  5583  0FFC  1903               	skipnz
  5584  0FFD  2FCC               	goto	l3108
  5585  0FFE  2FF0               	goto	l3116
  5586  0FFF  0008               	return
  5587  1000                     __end_of_USBStdGetDscHandler:	
  5588                           
  5589                           	psect	text16
  5590  003B                     __ptext16:	
  5591 ;; *************** function _USBStdFeatureReqHandler *****************
  5592 ;; Defined at:
  5593 ;;		line 2779 in file "../framework/usb/usb_device.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;		None
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;  pUEP            2   12[BANK0 ] PTR unsigned char 
  5598 ;;		 -> UEP0(1), 
  5599 ;;  p               1   15[BANK0 ] PTR struct __BDT
  5600 ;;		 -> BDT(32), NULL(0), 
  5601 ;;  current_ep_d    1   14[BANK0 ] struct .
  5602 ;; Return value:  Size  Location     Type
  5603 ;;		None               void
  5604 ;; Registers used:
  5605 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5606 ;; Tracked objects:
  5607 ;;		On entry : 0/0
  5608 ;;		On exit  : 0/0
  5609 ;;		Unchanged: 0/0
  5610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5612 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5613 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5614 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5615 ;;Total ram usage:        6 bytes
  5616 ;; Hardware stack levels used:    1
  5617 ;; Hardware stack levels required when called:    5
  5618 ;; This function calls:
  5619 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5620 ;; This function is called by:
  5621 ;;		_USBCheckStdRequest
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625                           
  5626                           ;psect for function _USBStdFeatureReqHandler
  5627  003B                     _USBStdFeatureReqHandler:	
  5628                           
  5629                           ;usb_device.c: 2781: BDT_ENTRY *p;
  5630                           ;usb_device.c: 2782: EP_STATUS current_ep_data;
  5631                           ;usb_device.c: 2786: unsigned char* pUEP;
  5632                           ;usb_device.c: 2824: if((SetupPkt.bFeature == 1)&&
  5633                           ;usb_device.c: 2825: (SetupPkt.Recipient == (0x00)))
  5634                           
  5635                           ;incstack = 0
  5636                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5637  003B  0020               	movlb	0	; select bank0
  5638  003C  0342               	decf	66,w	;volatile
  5639  003D  1D03               	btfss	3,2
  5640  003E  2851               	goto	l4284
  5641  003F  0840               	movf	64,w	;volatile
  5642  0040  391F               	andlw	31
  5643  0041  3A00               	xorlw	0
  5644  0042  1D03               	skipz
  5645  0043  2851               	goto	l4284
  5646                           
  5647                           ;usb_device.c: 2826: {
  5648                           ;usb_device.c: 2827: inPipes[0].info.bits.busy = 1;
  5649  0044  0021               	movlb	1	; select bank1
  5650  0045  17E2               	bsf	(_inPipes^(0+128)+2),7
  5651                           
  5652                           ;usb_device.c: 2828: if(SetupPkt.bRequest == 3)
  5653  0046  3003               	movlw	3
  5654  0047  0020               	movlb	0	; select bank0
  5655  0048  0641               	xorwf	65,w	;volatile
  5656  0049  1D03               	btfss	3,2
  5657  004A  284F               	goto	l4282
  5658                           
  5659                           ;usb_device.c: 2829: RemoteWakeup = 1;
  5660  004B  0022               	movlb	2	; select bank2
  5661  004C  01DB               	clrf	_RemoteWakeup^(0+256)
  5662  004D  0ADB               	incf	_RemoteWakeup^(0+256),f
  5663  004E  2851               	goto	l4284
  5664  004F                     l4282:	
  5665                           
  5666                           ;usb_device.c: 2830: else
  5667                           ;usb_device.c: 2831: RemoteWakeup = 0;
  5668  004F  0022               	movlb	2	; select bank2
  5669  0050  01DB               	clrf	_RemoteWakeup^(0+256)
  5670  0051                     l4284:	
  5671                           
  5672                           ;usb_device.c: 2832: }
  5673                           ;usb_device.c: 2835: if((SetupPkt.bFeature == 0)&&
  5674                           ;usb_device.c: 2836: (SetupPkt.Recipient == (0x02))&&
  5675                           ;usb_device.c: 2837: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
  5676                           ;usb_device.c: 2838: (USBDeviceState == CONFIGURED_STATE))
  5677  0051  0020               	movlb	0	; select bank0
  5678  0052  0842               	movf	66,w	;volatile
  5679  0053  1D03               	btfss	3,2
  5680  0054  0008               	return
  5681  0055  0840               	movf	64,w	;volatile
  5682  0056  391F               	andlw	31
  5683  0057  3A02               	xorlw	2
  5684  0058  1D03               	skipz
  5685  0059  0008               	return
  5686  005A  0844               	movf	68,w	;volatile
  5687  005B  390F               	andlw	15
  5688  005C  3A00               	xorlw	0
  5689  005D  1903               	skipnz
  5690  005E  0008               	return
  5691  005F  0844               	movf	68,w	;volatile
  5692  0060  390F               	andlw	15
  5693  0061  00DA               	movwf	??_USBStdFeatureReqHandler
  5694  0062  3002               	movlw	2
  5695  0063  025A               	subwf	??_USBStdFeatureReqHandler,w
  5696  0064  1803               	skipnc
  5697  0065  0008               	return
  5698  0066  3020               	movlw	32
  5699  0067  066C               	xorwf	_USBDeviceState,w
  5700  0068  1D03               	btfss	3,2
  5701  0069  0008               	return
  5702                           
  5703                           ;usb_device.c: 2839: {
  5704                           ;usb_device.c: 2842: inPipes[0].info.bits.busy = 1;
  5705  006A  0021               	movlb	1	; select bank1
  5706  006B  17E2               	bsf	(_inPipes^(0+128)+2),7
  5707                           
  5708                           ;usb_device.c: 2845: if(SetupPkt.EPDir == 0)
  5709  006C  0020               	movlb	0	; select bank0
  5710  006D  1BC4               	btfsc	68,7	;volatile
  5711  006E  287D               	goto	l4298
  5712                           
  5713                           ;usb_device.c: 2846: {
  5714                           ;usb_device.c: 2847: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  5715  006F  0844               	movf	68,w	;volatile
  5716  0070  390F               	andlw	15
  5717  0071  3E58               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5718  0072  0086               	movwf	6
  5719  0073  3001               	movlw	1	; select bank2/3
  5720  0074  0087               	movwf	7
  5721  0075  0801               	movf	1,w
  5722  0076  00DA               	movwf	??_USBStdFeatureReqHandler
  5723  0077  085A               	movf	??_USBStdFeatureReqHandler,w
  5724  0078  00DF               	movwf	USBStdFeatureReqHandler@p
  5725                           
  5726                           ;usb_device.c: 2848: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  5727  0079  0844               	movf	68,w	;volatile
  5728  007A  390F               	andlw	15
  5729  007B  3E54               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5730  007C  2889               	goto	L3
  5731  007D                     l4298:	
  5732                           ;usb_device.c: 2849: }
  5733                           
  5734                           
  5735                           ;usb_device.c: 2850: else
  5736                           ;usb_device.c: 2851: {
  5737                           ;usb_device.c: 2852: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  5738  007D  0844               	movf	68,w	;volatile
  5739  007E  390F               	andlw	15
  5740  007F  3E69               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  5741  0080  0086               	movwf	6
  5742  0081  0187               	clrf	7
  5743  0082  0801               	movf	1,w
  5744  0083  00DA               	movwf	??_USBStdFeatureReqHandler
  5745  0084  085A               	movf	??_USBStdFeatureReqHandler,w
  5746  0085  00DF               	movwf	USBStdFeatureReqHandler@p
  5747                           
  5748                           ;usb_device.c: 2853: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  5749  0086  0844               	movf	68,w	;volatile
  5750  0087  390F               	andlw	15
  5751  0088  3E52               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5752  0089                     L3:	
  5753  0089  0086               	movwf	6
  5754  008A  3001               	movlw	1	; select bank2/3
  5755  008B  0087               	movwf	7
  5756  008C  0801               	movf	1,w
  5757  008D  00DA               	movwf	??_USBStdFeatureReqHandler
  5758  008E  085A               	movf	??_USBStdFeatureReqHandler,w
  5759  008F  00DE               	movwf	USBStdFeatureReqHandler@current_ep_data
  5760                           
  5761                           ;usb_device.c: 2854: }
  5762                           ;usb_device.c: 2860: if(current_ep_data.bits.ping_pong_state == 0)
  5763  0090  185E               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  5764  0091  2897               	goto	l791
  5765                           
  5766                           ;usb_device.c: 2861: {
  5767                           ;usb_device.c: 2862: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  5768  0092  30FB               	movlw	251
  5769  0093  00DA               	movwf	??_USBStdFeatureReqHandler
  5770  0094  085A               	movf	??_USBStdFeatureReqHandler,w
  5771  0095  05DF               	andwf	USBStdFeatureReqHandler@p,f
  5772                           
  5773                           ;usb_device.c: 2863: }
  5774  0096  2898               	goto	l792
  5775  0097                     l791:	
  5776                           
  5777                           ;usb_device.c: 2864: else
  5778                           ;usb_device.c: 2865: {
  5779                           ;usb_device.c: 2866: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  5780  0097  155F               	bsf	USBStdFeatureReqHandler@p,2
  5781  0098                     l792:	
  5782                           
  5783                           ;usb_device.c: 2867: }
  5784                           ;usb_device.c: 2872: if(SetupPkt.EPDir == 0)
  5785  0098  1BC4               	btfsc	68,7	;volatile
  5786  0099  28A3               	goto	l4306
  5787                           
  5788                           ;usb_device.c: 2873: {
  5789                           ;usb_device.c: 2874: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  5790  009A  085F               	movf	USBStdFeatureReqHandler@p,w
  5791  009B  00DA               	movwf	??_USBStdFeatureReqHandler
  5792  009C  0844               	movf	68,w	;volatile
  5793  009D  390F               	andlw	15
  5794  009E  3E58               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5795  009F  0086               	movwf	6
  5796  00A0  3001               	movlw	1	; select bank2/3
  5797  00A1  0087               	movwf	7
  5798  00A2  28AA               	goto	L4
  5799  00A3                     l4306:	
  5800                           ;usb_device.c: 2875: }
  5801                           
  5802                           
  5803                           ;usb_device.c: 2876: else
  5804                           ;usb_device.c: 2877: {
  5805                           ;usb_device.c: 2878: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  5806  00A3  085F               	movf	USBStdFeatureReqHandler@p,w
  5807  00A4  00DA               	movwf	??_USBStdFeatureReqHandler
  5808  00A5  0844               	movf	68,w	;volatile
  5809  00A6  390F               	andlw	15
  5810  00A7  3E69               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  5811  00A8  0086               	movwf	6
  5812  00A9  0187               	clrf	7
  5813  00AA                     L4:	
  5814  00AA  085A               	movf	??_USBStdFeatureReqHandler,w
  5815  00AB  0081               	movwf	1
  5816                           
  5817                           ;usb_device.c: 2879: }
  5818                           ;usb_device.c: 2882: if(SetupPkt.bRequest == 3)
  5819  00AC  3003               	movlw	3
  5820  00AD  0641               	xorwf	65,w	;volatile
  5821  00AE  1D03               	btfss	3,2
  5822  00AF  28CB               	goto	l4322
  5823                           
  5824                           ;usb_device.c: 2883: {
  5825                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  5826  00B0  085F               	movf	USBStdFeatureReqHandler@p,w
  5827  00B1  0086               	movwf	6
  5828  00B2  0187               	clrf	7
  5829  00B3  1F81               	btfss	1,7
  5830  00B4  28C2               	goto	l4318
  5831                           
  5832                           ;usb_device.c: 2885: {
  5833                           ;usb_device.c: 2888: if(SetupPkt.EPDir == 0)
  5834  00B5  1BC4               	btfsc	68,7	;volatile
  5835  00B6  28BB               	goto	l4316
  5836                           
  5837                           ;usb_device.c: 2889: {
  5838                           ;usb_device.c: 2890: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  5839  00B7  0844               	movf	68,w	;volatile
  5840  00B8  390F               	andlw	15
  5841  00B9  3E54               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5842  00BA  28BE               	goto	L5
  5843  00BB                     l4316:	
  5844                           ;usb_device.c: 2891: }
  5845                           
  5846                           
  5847                           ;usb_device.c: 2892: else
  5848                           ;usb_device.c: 2893: {
  5849                           ;usb_device.c: 2894: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  5850  00BB  0844               	movf	68,w	;volatile
  5851  00BC  390F               	andlw	15
  5852  00BD  3E52               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5853  00BE                     L5:	
  5854  00BE  0086               	movwf	6
  5855  00BF  3001               	movlw	1	; select bank2/3
  5856  00C0  0087               	movwf	7
  5857  00C1  1481               	bsf	1,1
  5858  00C2                     l4318:	
  5859                           
  5860                           ;usb_device.c: 2895: }
  5861                           ;usb_device.c: 2896: }
  5862                           ;usb_device.c: 2899: p->STAT.Val |= 0x04;
  5863  00C2  085F               	movf	USBStdFeatureReqHandler@p,w
  5864  00C3  0086               	movwf	6
  5865  00C4  0187               	clrf	7
  5866  00C5  1501               	bsf	1,2
  5867                           
  5868                           ;usb_device.c: 2900: p->STAT.Val |= 0x80;
  5869  00C6  085F               	movf	USBStdFeatureReqHandler@p,w
  5870  00C7  0086               	movwf	6
  5871  00C8  0187               	clrf	7
  5872  00C9  1781               	bsf	1,7
  5873                           
  5874                           ;usb_device.c: 2901: }
  5875  00CA  0008               	return
  5876  00CB                     l4322:	
  5877                           
  5878                           ;usb_device.c: 2902: else
  5879                           ;usb_device.c: 2903: {
  5880                           ;usb_device.c: 2907: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  5881  00CB  3004               	movlw	4
  5882  00CC  00DA               	movwf	??_USBStdFeatureReqHandler
  5883  00CD  085A               	movf	??_USBStdFeatureReqHandler,w
  5884  00CE  06DF               	xorwf	USBStdFeatureReqHandler@p,f
  5885                           
  5886                           ;usb_device.c: 2909: if(p->STAT.UOWN == 1)
  5887  00CF  085F               	movf	USBStdFeatureReqHandler@p,w
  5888  00D0  0086               	movwf	6
  5889  00D1  0187               	clrf	7
  5890  00D2  1F81               	btfss	1,7
  5891  00D3  28EF               	goto	l4332
  5892                           
  5893                           ;usb_device.c: 2910: {
  5894                           ;usb_device.c: 2913: p->STAT.Val &= (~0x80);
  5895  00D4  307F               	movlw	127
  5896  00D5  00DA               	movwf	??_USBStdFeatureReqHandler
  5897  00D6  085F               	movf	USBStdFeatureReqHandler@p,w
  5898  00D7  0086               	movwf	6
  5899  00D8  0187               	clrf	7
  5900  00D9  085A               	movf	??_USBStdFeatureReqHandler,w
  5901  00DA  0581               	andwf	1,f
  5902                           
  5903                           ;usb_device.c: 2914: p->STAT.Val |= 0x40;
  5904  00DB  085F               	movf	USBStdFeatureReqHandler@p,w
  5905  00DC  0086               	movwf	6
  5906  00DD  0187               	clrf	7
  5907  00DE  1701               	bsf	1,6
  5908                           
  5909                           ;usb_device.c: 2915: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  5910  00DF  3000               	movlw	0
  5911  00E0  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5912  00E1  3005               	movlw	5
  5913  00E2  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5914  00E3  085F               	movf	USBStdFeatureReqHandler@p,w
  5915  00E4  00DA               	movwf	??_USBStdFeatureReqHandler
  5916  00E5  085A               	movf	??_USBStdFeatureReqHandler,w
  5917  00E6  00D7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5918  00E7  3001               	movlw	1
  5919  00E8  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5920  00E9  3000               	movlw	0
  5921  00EA  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5922  00EB  318B  2386  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5923                           
  5924                           ;usb_device.c: 2916: }
  5925  00EE  28F4               	goto	l4334
  5926  00EF                     l4332:	
  5927                           
  5928                           ;usb_device.c: 2917: else
  5929                           ;usb_device.c: 2918: {
  5930                           ;usb_device.c: 2920: p->STAT.Val |= 0x40;
  5931  00EF  0020               	movlb	0	; select bank0
  5932  00F0  085F               	movf	USBStdFeatureReqHandler@p,w
  5933  00F1  0086               	movwf	6
  5934  00F2  0187               	clrf	7
  5935  00F3  1701               	bsf	1,6
  5936  00F4                     l4334:	
  5937                           
  5938                           ;usb_device.c: 2921: }
  5939                           ;usb_device.c: 2925: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  5940  00F4  3004               	movlw	4
  5941  00F5  0020               	movlb	0	; select bank0
  5942  00F6  00DA               	movwf	??_USBStdFeatureReqHandler
  5943  00F7  085A               	movf	??_USBStdFeatureReqHandler,w
  5944  00F8  06DF               	xorwf	USBStdFeatureReqHandler@p,f
  5945                           
  5946                           ;usb_device.c: 2931: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  5947  00F9  18DE               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  5948  00FA  2900               	goto	l804
  5949  00FB  085F               	movf	USBStdFeatureReqHandler@p,w
  5950  00FC  0086               	movwf	6
  5951  00FD  0187               	clrf	7
  5952  00FE  1F81               	btfss	1,7
  5953  00FF  2924               	goto	l4346
  5954  0100                     l804:	
  5955                           
  5956                           ;usb_device.c: 2932: {
  5957                           ;usb_device.c: 2933: if(SetupPkt.EPDir == 0)
  5958  0100  1BC4               	btfsc	68,7	;volatile
  5959  0101  2906               	goto	l4342
  5960                           
  5961                           ;usb_device.c: 2934: {
  5962                           ;usb_device.c: 2935: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  5963  0102  0844               	movf	68,w	;volatile
  5964  0103  390F               	andlw	15
  5965  0104  3E54               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5966  0105  2909               	goto	L6
  5967  0106                     l4342:	
  5968                           ;usb_device.c: 2936: }
  5969                           
  5970                           
  5971                           ;usb_device.c: 2937: else
  5972                           ;usb_device.c: 2938: {
  5973                           ;usb_device.c: 2939: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  5974  0106  0844               	movf	68,w	;volatile
  5975  0107  390F               	andlw	15
  5976  0108  3E52               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5977  0109                     L6:	
  5978  0109  0086               	movwf	6
  5979  010A  3001               	movlw	1	; select bank2/3
  5980  010B  0087               	movwf	7
  5981  010C  1081               	bcf	1,1
  5982                           
  5983                           ;usb_device.c: 2940: }
  5984                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  5985  010D  303B               	movlw	59
  5986  010E  00DA               	movwf	??_USBStdFeatureReqHandler
  5987  010F  085F               	movf	USBStdFeatureReqHandler@p,w
  5988  0110  0086               	movwf	6
  5989  0111  0187               	clrf	7
  5990  0112  085A               	movf	??_USBStdFeatureReqHandler,w
  5991  0113  0581               	andwf	1,f
  5992                           
  5993                           ;usb_device.c: 2945: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  5994  0114  3000               	movlw	0
  5995  0115  00D6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5996  0116  3005               	movlw	5
  5997  0117  00D5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5998  0118  085F               	movf	USBStdFeatureReqHandler@p,w
  5999  0119  00DA               	movwf	??_USBStdFeatureReqHandler
  6000  011A  085A               	movf	??_USBStdFeatureReqHandler,w
  6001  011B  00D7               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6002  011C  3001               	movlw	1
  6003  011D  00D8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6004  011E  3000               	movlw	0
  6005  011F  00D9               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6006  0120  318B  2386  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6007                           
  6008                           ;usb_device.c: 2946: }
  6009  0123  292C               	goto	l4348
  6010  0124                     l4346:	
  6011                           
  6012                           ;usb_device.c: 2947: else
  6013                           ;usb_device.c: 2948: {
  6014                           ;usb_device.c: 2950: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  6015  0124  303B               	movlw	59
  6016  0125  0020               	movlb	0	; select bank0
  6017  0126  00DA               	movwf	??_USBStdFeatureReqHandler
  6018  0127  085F               	movf	USBStdFeatureReqHandler@p,w
  6019  0128  0086               	movwf	6
  6020  0129  0187               	clrf	7
  6021  012A  085A               	movf	??_USBStdFeatureReqHandler,w
  6022  012B  0581               	andwf	1,f
  6023  012C                     l4348:	
  6024                           
  6025                           ;usb_device.c: 2951: }
  6026                           ;usb_device.c: 2998: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  6027  012C  0020               	movlb	0	; select bank0
  6028  012D  0844               	movf	68,w	;volatile
  6029  012E  390F               	andlw	15
  6030  012F  3E98               	addlw	152
  6031  0130  00DA               	movwf	??_USBStdFeatureReqHandler
  6032  0131  01DB               	clrf	??_USBStdFeatureReqHandler+1
  6033  0132  300E               	movlw	14
  6034  0133  3DDB               	addwfc	??_USBStdFeatureReqHandler+1,f
  6035  0134  085A               	movf	??_USBStdFeatureReqHandler,w
  6036  0135  00DC               	movwf	USBStdFeatureReqHandler@pUEP
  6037  0136  085B               	movf	??_USBStdFeatureReqHandler+1,w
  6038  0137  00DD               	movwf	USBStdFeatureReqHandler@pUEP+1
  6039                           
  6040                           ;usb_device.c: 3002: *pUEP &= ~0x0001;
  6041  0138  30FE               	movlw	254
  6042  0139  00DA               	movwf	??_USBStdFeatureReqHandler
  6043  013A  085C               	movf	USBStdFeatureReqHandler@pUEP,w
  6044  013B  0086               	movwf	6
  6045  013C  085D               	movf	USBStdFeatureReqHandler@pUEP+1,w
  6046  013D  0087               	movwf	7
  6047  013E  085A               	movf	??_USBStdFeatureReqHandler,w
  6048  013F  0581               	andwf	1,f
  6049  0140  0008               	return
  6050  0141                     __end_of_USBStdFeatureReqHandler:	
  6051                           
  6052                           	psect	text17
  6053  0B86                     __ptext17:	
  6054 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  6055 ;; Defined at:
  6056 ;;		line 87 in file "../src/main.c"
  6057 ;; Parameters:    Size  Location     Type
  6058 ;;  event           2    5[BANK0 ] enum E2694
  6059 ;;  pdata           1    7[BANK0 ] PTR void 
  6060 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(32), NULL(0), 
  6061 ;;  size            2    8[BANK0 ] unsigned int 
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;		None
  6064 ;; Return value:  Size  Location     Type
  6065 ;;                  1    wreg      unsigned char 
  6066 ;; Registers used:
  6067 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6073 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6076 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6077 ;;Total ram usage:        5 bytes
  6078 ;; Hardware stack levels used:    1
  6079 ;; Hardware stack levels required when called:    4
  6080 ;; This function calls:
  6081 ;;		_APP_DeviceAudioMIDIInitialize
  6082 ;;		_APP_DeviceAudioMIDISOFHandler
  6083 ;;		_APP_LEDUpdateUSBStatus
  6084 ;; This function is called by:
  6085 ;;		_USBDeviceTasks
  6086 ;;		_USBStdSetCfgHandler
  6087 ;;		_USBSuspend
  6088 ;;		_USBWakeFromSuspend
  6089 ;;		_USBCtrlTrfSetupHandler
  6090 ;;		_USBCheckStdRequest
  6091 ;;		_USBStdFeatureReqHandler
  6092 ;; This function uses a non-reentrant model
  6093 ;;
  6094                           
  6095                           
  6096                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  6097  0B86                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  6098                           
  6099                           ;main.c: 89: switch( (int) event )
  6100                           
  6101                           ;incstack = 0
  6102                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  6103  0B86  2B96               	goto	l4210
  6104  0B87                     l4198:	
  6105                           ;main.c: 94: case EVENT_SOF:
  6106                           
  6107                           ;main.c: 92: break;
  6108                           
  6109                           ;main.c: 90: {
  6110                           ;main.c: 91: case EVENT_TRANSFER:
  6111                           
  6112                           
  6113                           ;main.c: 97: APP_LEDUpdateUSBStatus();
  6114  0B87  318C  2440  318B   	fcall	_APP_LEDUpdateUSBStatus
  6115                           
  6116                           ;main.c: 98: APP_DeviceAudioMIDISOFHandler();
  6117  0B8A  3189  218E         	fcall	_APP_DeviceAudioMIDISOFHandler
  6118                           
  6119                           ;main.c: 99: break;
  6120  0B8C  0008               	return
  6121  0B8D                     l4202:	
  6122                           ;main.c: 101: case EVENT_SUSPEND:
  6123                           
  6124                           
  6125                           ;main.c: 103: APP_LEDUpdateUSBStatus();
  6126  0B8D  318C  2440         	fcall	_APP_LEDUpdateUSBStatus
  6127                           
  6128                           ;main.c: 104: break;
  6129  0B8F  0008               	return
  6130  0B90                     l4204:	
  6131                           ;main.c: 106: case EVENT_RESUME:
  6132                           
  6133                           
  6134                           ;main.c: 108: APP_LEDUpdateUSBStatus();
  6135  0B90  318C  2440         	fcall	_APP_LEDUpdateUSBStatus
  6136                           
  6137                           ;main.c: 109: break;
  6138  0B92  0008               	return
  6139  0B93                     l4206:	
  6140                           ;main.c: 111: case EVENT_CONFIGURED:
  6141                           
  6142                           
  6143                           ;main.c: 114: APP_DeviceAudioMIDIInitialize();
  6144  0B93  318A  22FD         	fcall	_APP_DeviceAudioMIDIInitialize
  6145                           
  6146                           ;main.c: 131: }
  6147                           
  6148                           ;main.c: 130: break;
  6149                           
  6150                           ;main.c: 129: default:
  6151                           
  6152                           ;main.c: 127: break;
  6153                           
  6154                           ;main.c: 126: case EVENT_TRANSFER_TERMINATED:
  6155                           
  6156                           ;main.c: 124: break;
  6157                           
  6158                           ;main.c: 123: case EVENT_BUS_ERROR:
  6159                           
  6160                           ;main.c: 121: break;
  6161                           
  6162                           ;main.c: 120: case EVENT_EP0_REQUEST:
  6163                           
  6164                           ;main.c: 118: break;
  6165                           
  6166                           ;main.c: 117: case EVENT_SET_DESCRIPTOR:
  6167                           
  6168                           ;main.c: 115: break;
  6169  0B95  0008               	return
  6170  0B96                     l4210:	
  6171                           
  6172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  6173                           ; Switch size 1, requested type "space"
  6174                           ; Number of cases is 2, Range of values is 0 to 127
  6175                           ; switch strategies available:
  6176                           ; Name         Instructions Cycles
  6177                           ; simple_byte            7     4 (average)
  6178                           ; direct_byte          262     6 (fixed)
  6179                           ; jumptable            260     6 (fixed)
  6180                           ;	Chosen strategy is simple_byte
  6181  0B96  0020               	movlb	0	; select bank0
  6182  0B97  0856               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  6183  0B98  3A00               	xorlw	0	; case 0
  6184  0B99  1903               	skipnz
  6185  0B9A  2B9F               	goto	l4754
  6186  0B9B  3A7F               	xorlw	127	; case 127
  6187  0B9C  1903               	skipnz
  6188  0B9D  2BB9               	goto	l4756
  6189  0B9E  2BBE               	goto	l88
  6190  0B9F                     l4754:	
  6191                           
  6192                           ; Switch size 1, requested type "space"
  6193                           ; Number of cases is 8, Range of values is 1 to 117
  6194                           ; switch strategies available:
  6195                           ; Name         Instructions Cycles
  6196                           ; simple_byte           25    13 (average)
  6197                           ; direct_byte          243     9 (fixed)
  6198                           ; jumptable            263     9 (fixed)
  6199                           ;	Chosen strategy is simple_byte
  6200  0B9F  0855               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  6201  0BA0  3A01               	xorlw	1	; case 1
  6202  0BA1  1903               	skipnz
  6203  0BA2  2B93               	goto	l4206
  6204  0BA3  3A03               	xorlw	3	; case 2
  6205  0BA4  1903               	skipnz
  6206  0BA5  2BBE               	goto	l88
  6207  0BA6  3A01               	xorlw	1	; case 3
  6208  0BA7  1903               	skipnz
  6209  0BA8  2BBE               	goto	l88
  6210  0BA9  3A06               	xorlw	6	; case 5
  6211  0BAA  1903               	skipnz
  6212  0BAB  2BBE               	goto	l88
  6213  0BAC  3A77               	xorlw	119	; case 114
  6214  0BAD  1903               	skipnz
  6215  0BAE  2BBE               	goto	l88
  6216  0BAF  3A01               	xorlw	1	; case 115
  6217  0BB0  1903               	skipnz
  6218  0BB1  2B87               	goto	l4198
  6219  0BB2  3A07               	xorlw	7	; case 116
  6220  0BB3  1903               	skipnz
  6221  0BB4  2B90               	goto	l4204
  6222  0BB5  3A01               	xorlw	1	; case 117
  6223  0BB6  1903               	skipnz
  6224  0BB7  2B8D               	goto	l4202
  6225  0BB8  2BBE               	goto	l88
  6226  0BB9                     l4756:	
  6227                           
  6228                           ; Switch size 1, requested type "space"
  6229                           ; Number of cases is 1, Range of values is 255 to 255
  6230                           ; switch strategies available:
  6231                           ; Name         Instructions Cycles
  6232                           ; simple_byte            4     3 (average)
  6233                           ; direct_byte            7     5 (fixed)
  6234                           ; jumptable            263     9 (fixed)
  6235                           ;	Chosen strategy is simple_byte
  6236  0BB9  0855               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  6237  0BBA  3AFF               	xorlw	255	; case 255
  6238  0BBB  1903               	skipnz
  6239  0BBC  2BBE               	goto	l88
  6240  0BBD  2BBE               	goto	l88
  6241  0BBE                     l88:	
  6242                           ;main.c: 132: return 1;
  6243                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  6244                           
  6245  0BBE  0008               	return
  6246  0BBF                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  6247                           
  6248                           	psect	text18
  6249  0C40                     __ptext18:	
  6250 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  6251 ;; Defined at:
  6252 ;;		line 23 in file "../src/app_led_usb_status.c"
  6253 ;; Parameters:    Size  Location     Type
  6254 ;;		None
  6255 ;; Auto vars:     Size  Location     Type
  6256 ;;		None
  6257 ;; Return value:  Size  Location     Type
  6258 ;;		None               void
  6259 ;; Registers used:
  6260 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6261 ;; Tracked objects:
  6262 ;;		On entry : 0/0
  6263 ;;		On exit  : 0/0
  6264 ;;		Unchanged: 0/0
  6265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6270 ;;Total ram usage:        0 bytes
  6271 ;; Hardware stack levels used:    1
  6272 ;; Hardware stack levels required when called:    2
  6273 ;; This function calls:
  6274 ;;		_LED_Off
  6275 ;;		_LED_On
  6276 ;; This function is called by:
  6277 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           
  6282                           ;psect for function _APP_LEDUpdateUSBStatus
  6283  0C40                     _APP_LEDUpdateUSBStatus:	
  6284                           
  6285                           ;app_led_usb_status.c: 25: static uint16_t ledCount = 0;
  6286                           ;app_led_usb_status.c: 27: if(UCONbits.SUSPND == 1)
  6287                           
  6288                           ;incstack = 0
  6289                           ; Regs used in _APP_LEDUpdateUSBStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6290  0C40  003D               	movlb	29	; select bank29
  6291  0C41  1C8E               	btfss	14,1	;volatile
  6292  0C42  2C81               	goto	l2888
  6293                           
  6294                           ;app_led_usb_status.c: 28: {
  6295                           ;app_led_usb_status.c: 29: LED_Off(LED_D1);
  6296  0C43  3001               	movlw	1
  6297  0C44  318A  2221         	fcall	_LED_Off
  6298                           
  6299                           ;app_led_usb_status.c: 30: return;
  6300  0C46  0008               	return
  6301  0C47                     l2862:	
  6302                           ;app_led_usb_status.c: 34: {
  6303                           ;app_led_usb_status.c: 35: case CONFIGURED_STATE:
  6304                           
  6305                           ;app_led_usb_status.c: 31: }
  6306                           ;app_led_usb_status.c: 33: switch(USBDeviceState)
  6307                           
  6308                           
  6309                           ;app_led_usb_status.c: 38: if(ledCount == 1)
  6310  0C47  0021               	movlb	1	; select bank1
  6311  0C48  0365               	decf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  6312  0C49  0466               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  6313  0C4A  1D03               	btfss	3,2
  6314  0C4B  2C51               	goto	l2866
  6315                           
  6316                           ;app_led_usb_status.c: 39: {
  6317                           ;app_led_usb_status.c: 40: LED_On(LED_D1);
  6318  0C4C  3001               	movlw	1
  6319  0C4D  318A  223A  318C   	fcall	_LED_On
  6320                           
  6321                           ;app_led_usb_status.c: 41: }
  6322  0C50  2C87               	goto	l2890
  6323  0C51                     l2866:	
  6324                           
  6325                           ;app_led_usb_status.c: 42: else if(ledCount == 75)
  6326  0C51  304B               	movlw	75
  6327  0C52  0021               	movlb	1	; select bank1
  6328  0C53  0665               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  6329  0C54  0466               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  6330  0C55  1D03               	btfss	3,2
  6331  0C56  2C5C               	goto	l2870
  6332                           
  6333                           ;app_led_usb_status.c: 43: {
  6334                           ;app_led_usb_status.c: 44: LED_Off(LED_D1);
  6335  0C57  3001               	movlw	1
  6336  0C58  318A  2221  318C   	fcall	_LED_Off
  6337                           
  6338                           ;app_led_usb_status.c: 45: }
  6339  0C5B  2C87               	goto	l2890
  6340  0C5C                     l2870:	
  6341                           
  6342                           ;app_led_usb_status.c: 46: else if(ledCount > 150)
  6343  0C5C  3000               	movlw	0
  6344  0C5D  0021               	movlb	1	; select bank1
  6345  0C5E  0266               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  6346  0C5F  3097               	movlw	151
  6347  0C60  2C7A               	goto	L7
  6348  0C61                     l2874:	
  6349                           ;app_led_usb_status.c: 52: default:
  6350                           
  6351                           ;app_led_usb_status.c: 49: }
  6352                           ;app_led_usb_status.c: 50: break;
  6353                           
  6354                           ;app_led_usb_status.c: 47: {
  6355                           ;app_led_usb_status.c: 48: ledCount = 0;
  6356                           
  6357                           
  6358                           ;app_led_usb_status.c: 55: if(ledCount == 1)
  6359  0C61  0021               	movlb	1	; select bank1
  6360  0C62  0365               	decf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  6361  0C63  0466               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  6362  0C64  1D03               	btfss	3,2
  6363  0C65  2C6B               	goto	l2878
  6364                           
  6365                           ;app_led_usb_status.c: 56: {
  6366                           ;app_led_usb_status.c: 57: LED_On(LED_D1);
  6367  0C66  3001               	movlw	1
  6368  0C67  318A  223A  318C   	fcall	_LED_On
  6369                           
  6370                           ;app_led_usb_status.c: 58: }
  6371  0C6A  2C87               	goto	l2890
  6372  0C6B                     l2878:	
  6373                           
  6374                           ;app_led_usb_status.c: 59: else if(ledCount == 50)
  6375  0C6B  3032               	movlw	50
  6376  0C6C  0021               	movlb	1	; select bank1
  6377  0C6D  0665               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  6378  0C6E  0466               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  6379  0C6F  1D03               	btfss	3,2
  6380  0C70  2C76               	goto	l2882
  6381                           
  6382                           ;app_led_usb_status.c: 60: {
  6383                           ;app_led_usb_status.c: 61: LED_Off(LED_D1);
  6384  0C71  3001               	movlw	1
  6385  0C72  318A  2221  318C   	fcall	_LED_Off
  6386                           
  6387                           ;app_led_usb_status.c: 62: }
  6388  0C75  2C87               	goto	l2890
  6389  0C76                     l2882:	
  6390                           
  6391                           ;app_led_usb_status.c: 63: else if(ledCount > 950)
  6392  0C76  3003               	movlw	3
  6393  0C77  0021               	movlb	1	; select bank1
  6394  0C78  0266               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  6395  0C79  30B7               	movlw	183
  6396  0C7A                     L7:	
  6397  0C7A  1903               	skipnz
  6398  0C7B  0265               	subwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  6399  0C7C  1C03               	skipc
  6400  0C7D  2C87               	goto	l2890
  6401                           
  6402                           ;app_led_usb_status.c: 64: {
  6403                           ;app_led_usb_status.c: 65: ledCount = 0;
  6404  0C7E  01E5               	clrf	APP_LEDUpdateUSBStatus@ledCount^(0+128)
  6405  0C7F  01E6               	clrf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128)
  6406                           
  6407                           ;app_led_usb_status.c: 68: }
  6408                           
  6409                           ;app_led_usb_status.c: 66: }
  6410                           ;app_led_usb_status.c: 67: break;
  6411  0C80  2C87               	goto	l2890
  6412  0C81                     l2888:	
  6413  0C81  0020               	movlb	0	; select bank0
  6414  0C82  086C               	movf	_USBDeviceState,w
  6415                           
  6416                           ; Switch size 1, requested type "space"
  6417                           ; Number of cases is 1, Range of values is 32 to 32
  6418                           ; switch strategies available:
  6419                           ; Name         Instructions Cycles
  6420                           ; simple_byte            4     3 (average)
  6421                           ; direct_byte           11     9 (fixed)
  6422                           ; jumptable            263     9 (fixed)
  6423                           ;	Chosen strategy is simple_byte
  6424  0C83  3A20               	xorlw	32	; case 32
  6425  0C84  1903               	skipnz
  6426  0C85  2C47               	goto	l2862
  6427  0C86  2C61               	goto	l2874
  6428  0C87                     l2890:	
  6429                           
  6430                           ;app_led_usb_status.c: 71: ledCount++;
  6431  0C87  3001               	movlw	1
  6432  0C88  0021               	movlb	1	; select bank1
  6433  0C89  07E5               	addwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),f
  6434  0C8A  3000               	movlw	0
  6435  0C8B  3DE6               	addwfc	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),f
  6436  0C8C  0008               	return
  6437  0C8D                     __end_of_APP_LEDUpdateUSBStatus:	
  6438                           
  6439                           	psect	text19
  6440  098E                     __ptext19:	
  6441 ;; *************** function _APP_DeviceAudioMIDISOFHandler *****************
  6442 ;; Defined at:
  6443 ;;		line 53 in file "../src/app_device_audio_midi.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;		None
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;		None
  6448 ;; Return value:  Size  Location     Type
  6449 ;;		None               void
  6450 ;; Registers used:
  6451 ;;		wreg, status,2, status,0
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6461 ;;Total ram usage:        0 bytes
  6462 ;; Hardware stack levels used:    1
  6463 ;; Hardware stack levels required when called:    1
  6464 ;; This function calls:
  6465 ;;		Nothing
  6466 ;; This function is called by:
  6467 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           
  6472                           ;psect for function _APP_DeviceAudioMIDISOFHandler
  6473  098E                     _APP_DeviceAudioMIDISOFHandler:	
  6474                           
  6475                           ;app_device_audio_midi.c: 54: if(msCounter != 0) msCounter--;
  6476                           
  6477                           ;incstack = 0
  6478                           ; Regs used in _APP_DeviceAudioMIDISOFHandler: [wreg+status,2+status,0]
  6479  098E  0021               	movlb	1	; select bank1
  6480  098F  086B               	movf	_msCounter^(0+128),w
  6481  0990  1903               	btfsc	3,2
  6482  0991  0008               	return
  6483  0992  3001               	movlw	1
  6484  0993  02EB               	subwf	_msCounter^(0+128),f
  6485  0994  0008               	return
  6486  0995                     __end_of_APP_DeviceAudioMIDISOFHandler:	
  6487                           
  6488                           	psect	text20
  6489  0AFD                     __ptext20:	
  6490 ;; *************** function _APP_DeviceAudioMIDIInitialize *****************
  6491 ;; Defined at:
  6492 ;;		line 40 in file "../src/app_device_audio_midi.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;		None
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;		None
  6497 ;; Return value:  Size  Location     Type
  6498 ;;		None               void
  6499 ;; Registers used:
  6500 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6508 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6509 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6510 ;;Total ram usage:        2 bytes
  6511 ;; Hardware stack levels used:    1
  6512 ;; Hardware stack levels required when called:    3
  6513 ;; This function calls:
  6514 ;;		_USBEnableEndpoint
  6515 ;;		_USBTransferOnePacket
  6516 ;; This function is called by:
  6517 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           
  6522                           ;psect for function _APP_DeviceAudioMIDIInitialize
  6523  0AFD                     _APP_DeviceAudioMIDIInitialize:	
  6524                           
  6525                           ;app_device_audio_midi.c: 42: USBTxHandle = (0);
  6526                           
  6527                           ;incstack = 0
  6528                           ; Regs used in _APP_DeviceAudioMIDIInitialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
  6529  0AFD  0021               	movlb	1	; select bank1
  6530  0AFE  01E8               	clrf	_USBTxHandle^(0+128)
  6531                           
  6532                           ;app_device_audio_midi.c: 43: USBRxHandle = (0);
  6533  0AFF  01E7               	clrf	_USBRxHandle^(0+128)
  6534                           
  6535                           ;app_device_audio_midi.c: 44: pitch = 0x3C;
  6536  0B00  303C               	movlw	60
  6537  0B01  0020               	movlb	0	; select bank0
  6538  0B02  00D3               	movwf	??_APP_DeviceAudioMIDIInitialize
  6539  0B03  0853               	movf	??_APP_DeviceAudioMIDIInitialize,w
  6540  0B04  0021               	movlb	1	; select bank1
  6541  0B05  00EC               	movwf	_pitch^(0+128)
  6542                           
  6543                           ;app_device_audio_midi.c: 45: sentNoteOff = 1;
  6544  0B06  0022               	movlb	2	; select bank2
  6545  0B07  01E5               	clrf	_sentNoteOff^(0+256)
  6546  0B08  0AE5               	incf	_sentNoteOff^(0+256),f
  6547                           
  6548                           ;app_device_audio_midi.c: 46: msCounter = 0;
  6549  0B09  0021               	movlb	1	; select bank1
  6550  0B0A  01EB               	clrf	_msCounter^(0+128)
  6551                           
  6552                           ;app_device_audio_midi.c: 48: USBEnableEndpoint(1,0x04|0x02|0x10|0x08);
  6553  0B0B  301E               	movlw	30
  6554  0B0C  0020               	movlb	0	; select bank0
  6555  0B0D  00D3               	movwf	??_APP_DeviceAudioMIDIInitialize
  6556  0B0E  0853               	movf	??_APP_DeviceAudioMIDIInitialize,w
  6557  0B0F  00F8               	movwf	USBEnableEndpoint@options
  6558  0B10  3001               	movlw	1
  6559  0B11  318A  22DA  318A   	fcall	_USBEnableEndpoint
  6560                           
  6561                           ;app_device_audio_midi.c: 50: USBRxHandle = USBTransferOnePacket(1,0,(uint8_t*)&Received
      +                          DataBuffer,64);
  6562  0B14  01F1               	clrf	USBTransferOnePacket@dir
  6563  0B15  30A0               	movlw	160
  6564  0B16  00F2               	movwf	USBTransferOnePacket@data
  6565  0B17  3000               	movlw	0
  6566  0B18  00F3               	movwf	USBTransferOnePacket@data+1
  6567  0B19  3040               	movlw	64
  6568  0B1A  0020               	movlb	0	; select bank0
  6569  0B1B  00D3               	movwf	??_APP_DeviceAudioMIDIInitialize
  6570  0B1C  0853               	movf	??_APP_DeviceAudioMIDIInitialize,w
  6571  0B1D  00F4               	movwf	USBTransferOnePacket@len
  6572  0B1E  3001               	movlw	1
  6573  0B1F  318C  24DA         	fcall	_USBTransferOnePacket
  6574  0B21  0020               	movlb	0	; select bank0
  6575  0B22  00D4               	movwf	??_APP_DeviceAudioMIDIInitialize+1
  6576  0B23  0854               	movf	??_APP_DeviceAudioMIDIInitialize+1,w
  6577  0B24  0021               	movlb	1	; select bank1
  6578  0B25  00E7               	movwf	_USBRxHandle^(0+128)
  6579  0B26  0008               	return
  6580  0B27                     __end_of_APP_DeviceAudioMIDIInitialize:	
  6581                           
  6582                           	psect	text21
  6583  0ADA                     __ptext21:	
  6584 ;; *************** function _USBEnableEndpoint *****************
  6585 ;; Defined at:
  6586 ;;		line 897 in file "../framework/usb/usb_device.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;  ep              1    wreg     unsigned char 
  6589 ;;  options         1    8[COMMON] unsigned char 
  6590 ;; Auto vars:     Size  Location     Type
  6591 ;;  ep              1    2[BANK0 ] unsigned char 
  6592 ;;  p               2    0[BANK0 ] PTR unsigned char 
  6593 ;;		 -> UEP0(1), 
  6594 ;; Return value:  Size  Location     Type
  6595 ;;		None               void
  6596 ;; Registers used:
  6597 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6598 ;; Tracked objects:
  6599 ;;		On entry : 0/0
  6600 ;;		On exit  : 0/0
  6601 ;;		Unchanged: 0/0
  6602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6603 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6604 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6605 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6606 ;;      Totals:         3       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6607 ;;Total ram usage:        6 bytes
  6608 ;; Hardware stack levels used:    1
  6609 ;; Hardware stack levels required when called:    2
  6610 ;; This function calls:
  6611 ;;		_USBConfigureEndpoint
  6612 ;; This function is called by:
  6613 ;;		_APP_DeviceAudioMIDIInitialize
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616                           
  6617                           
  6618                           ;psect for function _USBEnableEndpoint
  6619  0ADA                     _USBEnableEndpoint:	
  6620                           
  6621                           ;incstack = 0
  6622                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6623                           ;USBEnableEndpoint@ep stored from wreg
  6624  0ADA  0020               	movlb	0	; select bank0
  6625  0ADB  00D2               	movwf	USBEnableEndpoint@ep
  6626                           
  6627                           ;usb_device.c: 899: unsigned char* p;
  6628                           ;usb_device.c: 903: if(options & 0x04)
  6629  0ADC  1D78               	btfss	USBEnableEndpoint@options,2
  6630  0ADD  2AE3               	goto	l2820
  6631                           
  6632                           ;usb_device.c: 904: {
  6633                           ;usb_device.c: 905: USBConfigureEndpoint(ep, 0);
  6634  0ADE  01F1               	clrf	USBConfigureEndpoint@direction
  6635  0ADF  0852               	movf	USBEnableEndpoint@ep,w
  6636  0AE0  318B  23BF  318A   	fcall	_USBConfigureEndpoint
  6637  0AE3                     l2820:	
  6638                           
  6639                           ;usb_device.c: 906: }
  6640                           ;usb_device.c: 907: if(options & 0x02)
  6641  0AE3  1CF8               	btfss	USBEnableEndpoint@options,1
  6642  0AE4  2AEB               	goto	l2824
  6643                           
  6644                           ;usb_device.c: 908: {
  6645                           ;usb_device.c: 909: USBConfigureEndpoint(ep, 1);
  6646  0AE5  01F1               	clrf	USBConfigureEndpoint@direction
  6647  0AE6  0AF1               	incf	USBConfigureEndpoint@direction,f
  6648  0AE7  0020               	movlb	0	; select bank0
  6649  0AE8  0852               	movf	USBEnableEndpoint@ep,w
  6650  0AE9  318B  23BF         	fcall	_USBConfigureEndpoint
  6651  0AEB                     l2824:	
  6652                           
  6653                           ;usb_device.c: 910: }
  6654                           ;usb_device.c: 918: p = (unsigned char*)(&UEP0+ep);
  6655  0AEB  0020               	movlb	0	; select bank0
  6656  0AEC  0852               	movf	USBEnableEndpoint@ep,w
  6657  0AED  3E98               	addlw	152
  6658  0AEE  00F9               	movwf	??_USBEnableEndpoint
  6659  0AEF  01FA               	clrf	??_USBEnableEndpoint+1
  6660  0AF0  300E               	movlw	14
  6661  0AF1  3DFA               	addwfc	??_USBEnableEndpoint+1,f
  6662  0AF2  0879               	movf	??_USBEnableEndpoint,w
  6663  0AF3  00D0               	movwf	USBEnableEndpoint@p
  6664  0AF4  087A               	movf	??_USBEnableEndpoint+1,w
  6665  0AF5  00D1               	movwf	USBEnableEndpoint@p+1
  6666                           
  6667                           ;usb_device.c: 920: *p = options;
  6668  0AF6  0850               	movf	USBEnableEndpoint@p,w
  6669  0AF7  0086               	movwf	6
  6670  0AF8  0851               	movf	USBEnableEndpoint@p+1,w
  6671  0AF9  0087               	movwf	7
  6672  0AFA  0878               	movf	USBEnableEndpoint@options,w
  6673  0AFB  0081               	movwf	1
  6674  0AFC  0008               	return
  6675  0AFD                     __end_of_USBEnableEndpoint:	
  6676                           
  6677                           	psect	text22
  6678  0BBF                     __ptext22:	
  6679 ;; *************** function _USBConfigureEndpoint *****************
  6680 ;; Defined at:
  6681 ;;		line 1562 in file "../framework/usb/usb_device.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;  EPNum           1    wreg     unsigned char 
  6684 ;;  direction       1    1[COMMON] unsigned char 
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;  EPNum           1    6[COMMON] unsigned char 
  6687 ;;  handle          1    7[COMMON] PTR volatile struct __BD
  6688 ;;		 -> BDT(32), 
  6689 ;; Return value:  Size  Location     Type
  6690 ;;		None               void
  6691 ;; Registers used:
  6692 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6698 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6699 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6700 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6701 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6702 ;;Total ram usage:        7 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; Hardware stack levels required when called:    1
  6705 ;; This function calls:
  6706 ;;		Nothing
  6707 ;; This function is called by:
  6708 ;;		_USBEnableEndpoint
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           
  6713                           ;psect for function _USBConfigureEndpoint
  6714  0BBF                     _USBConfigureEndpoint:	
  6715                           
  6716                           ;incstack = 0
  6717                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  6718                           ;USBConfigureEndpoint@EPNum stored from wreg
  6719  0BBF  00F6               	movwf	USBConfigureEndpoint@EPNum
  6720                           
  6721                           ;usb_device.c: 1564: volatile BDT_ENTRY* handle;
  6722                           ;usb_device.c: 1568: handle = (volatile BDT_ENTRY*)&BDT[0];
  6723  0BC0  3020               	movlw	32
  6724  0BC1  00F2               	movwf	??_USBConfigureEndpoint
  6725  0BC2  0872               	movf	??_USBConfigureEndpoint,w
  6726  0BC3  00F7               	movwf	USBConfigureEndpoint@handle
  6727                           
  6728                           ;usb_device.c: 1569: handle += (4*EPNum+2*direction+0u);
  6729  0BC4  0871               	movf	USBConfigureEndpoint@direction,w
  6730  0BC5  00F2               	movwf	??_USBConfigureEndpoint
  6731  0BC6  3001               	movlw	1
  6732  0BC7                     u1915:	
  6733  0BC7  35F2               	lslf	??_USBConfigureEndpoint,f
  6734  0BC8  0B89               	decfsz	9,f
  6735  0BC9  2BC7               	goto	u1915
  6736  0BCA  0876               	movf	USBConfigureEndpoint@EPNum,w
  6737  0BCB  00F3               	movwf	??_USBConfigureEndpoint+1
  6738  0BCC  3001               	movlw	1
  6739  0BCD                     u1925:	
  6740  0BCD  35F3               	lslf	??_USBConfigureEndpoint+1,f
  6741  0BCE  3EFF               	addlw	-1
  6742  0BCF  1D03               	skipz
  6743  0BD0  2BCD               	goto	u1925
  6744  0BD1  3573               	lslf	??_USBConfigureEndpoint+1,w
  6745  0BD2  0772               	addwf	??_USBConfigureEndpoint,w
  6746  0BD3  00F4               	movwf	??_USBConfigureEndpoint+2
  6747  0BD4  3001               	movlw	1
  6748  0BD5                     u1935:	
  6749  0BD5  35F4               	lslf	??_USBConfigureEndpoint+2,f
  6750  0BD6  3EFF               	addlw	-1
  6751  0BD7  1D03               	skipz
  6752  0BD8  2BD5               	goto	u1935
  6753  0BD9  3574               	lslf	??_USBConfigureEndpoint+2,w
  6754  0BDA  00F5               	movwf	??_USBConfigureEndpoint+3
  6755  0BDB  0875               	movf	??_USBConfigureEndpoint+3,w
  6756  0BDC  07F7               	addwf	USBConfigureEndpoint@handle,f
  6757                           
  6758                           ;usb_device.c: 1571: handle->STAT.UOWN = 0;
  6759  0BDD  0877               	movf	USBConfigureEndpoint@handle,w
  6760  0BDE  0086               	movwf	6
  6761  0BDF  0187               	clrf	7
  6762  0BE0  1381               	bcf	1,7
  6763                           
  6764                           ;usb_device.c: 1576: if(direction == 0)
  6765  0BE1  0871               	movf	USBConfigureEndpoint@direction,w
  6766  0BE2  1D03               	btfss	3,2
  6767  0BE3  2BEC               	goto	l2790
  6768                           
  6769                           ;usb_device.c: 1577: {
  6770                           ;usb_device.c: 1578: pBDTEntryOut[EPNum] = handle;
  6771  0BE4  0877               	movf	USBConfigureEndpoint@handle,w
  6772  0BE5  00F2               	movwf	??_USBConfigureEndpoint
  6773  0BE6  0876               	movf	USBConfigureEndpoint@EPNum,w
  6774  0BE7  3E58               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6775  0BE8  0086               	movwf	6
  6776  0BE9  3001               	movlw	1	; select bank2/3
  6777  0BEA  0087               	movwf	7
  6778  0BEB  2BF2               	goto	L8
  6779  0BEC                     l2790:	
  6780                           ;usb_device.c: 1579: }
  6781                           
  6782                           
  6783                           ;usb_device.c: 1580: else
  6784                           ;usb_device.c: 1581: {
  6785                           ;usb_device.c: 1582: pBDTEntryIn[EPNum] = handle;
  6786  0BEC  0877               	movf	USBConfigureEndpoint@handle,w
  6787  0BED  00F2               	movwf	??_USBConfigureEndpoint
  6788  0BEE  0876               	movf	USBConfigureEndpoint@EPNum,w
  6789  0BEF  3E69               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  6790  0BF0  0086               	movwf	6
  6791  0BF1  0187               	clrf	7
  6792  0BF2                     L8:	
  6793  0BF2  0872               	movf	??_USBConfigureEndpoint,w
  6794  0BF3  0081               	movwf	1
  6795                           
  6796                           ;usb_device.c: 1583: }
  6797                           ;usb_device.c: 1586: handle->STAT.DTS = 0;
  6798  0BF4  0877               	movf	USBConfigureEndpoint@handle,w
  6799  0BF5  0086               	movwf	6
  6800  0BF6  0187               	clrf	7
  6801  0BF7  1301               	bcf	1,6
  6802                           
  6803                           ;usb_device.c: 1587: (handle+1)->STAT.DTS = 1;
  6804  0BF8  0877               	movf	USBConfigureEndpoint@handle,w
  6805  0BF9  3E04               	addlw	4
  6806  0BFA  0086               	movwf	6
  6807  0BFB  0187               	clrf	7
  6808  0BFC  1701               	bsf	1,6
  6809  0BFD  0008               	return
  6810  0BFE                     __end_of_USBConfigureEndpoint:	
  6811                           
  6812                           	psect	text23
  6813  0B27                     __ptext23:	
  6814 ;; *************** function _USBCtrlTrfOutHandler *****************
  6815 ;; Defined at:
  6816 ;;		line 2563 in file "../framework/usb/usb_device.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;		None
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;		None
  6821 ;; Return value:  Size  Location     Type
  6822 ;;		None               void
  6823 ;; Registers used:
  6824 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6832 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6833 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6834 ;;Total ram usage:        2 bytes
  6835 ;; Hardware stack levels used:    1
  6836 ;; Hardware stack levels required when called:    3
  6837 ;; This function calls:
  6838 ;;		_USBCtrlTrfRxService
  6839 ;; This function is called by:
  6840 ;;		_USBCtrlEPService
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           
  6844                           
  6845                           ;psect for function _USBCtrlTrfOutHandler
  6846  0B27                     _USBCtrlTrfOutHandler:	
  6847                           
  6848                           ;usb_device.c: 2565: if(controlTransferState == 2)
  6849                           
  6850                           ;incstack = 0
  6851                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6852  0B27  3002               	movlw	2
  6853  0B28  0021               	movlb	1	; select bank1
  6854  0B29  0669               	xorwf	_controlTransferState^(0+128),w
  6855  0B2A  1D03               	btfss	3,2
  6856  0B2B  2B2F               	goto	l3536
  6857                           
  6858                           ;usb_device.c: 2566: {
  6859                           ;usb_device.c: 2567: USBCtrlTrfRxService();
  6860  0B2C  3186  2645         	fcall	_USBCtrlTrfRxService
  6861                           
  6862                           ;usb_device.c: 2568: }
  6863  0B2E  0008               	return
  6864  0B2F                     l3536:	
  6865                           
  6866                           ;usb_device.c: 2569: else
  6867                           ;usb_device.c: 2570: {
  6868                           ;usb_device.c: 2573: controlTransferState = 0;
  6869  0B2F  0021               	movlb	1	; select bank1
  6870  0B30  01E9               	clrf	_controlTransferState^(0+128)
  6871                           
  6872                           ;usb_device.c: 2580: if(BothEP0OutUOWNsSet == 0)
  6873  0B31  0022               	movlb	2	; select bank2
  6874  0B32  085A               	movf	_BothEP0OutUOWNsSet^(0+256),w
  6875  0B33  1D03               	btfss	3,2
  6876  0B34  2B54               	goto	l3548
  6877                           
  6878                           ;usb_device.c: 2581: {
  6879                           ;usb_device.c: 2582: pBDTEntryEP0OutNext->CNT = 8;
  6880  0B35  3008               	movlw	8
  6881  0B36  00F7               	movwf	??_USBCtrlTrfOutHandler
  6882  0B37  0A7C               	incf	_pBDTEntryEP0OutNext,w
  6883  0B38  0086               	movwf	6
  6884  0B39  0187               	clrf	7
  6885  0B3A  0877               	movf	??_USBCtrlTrfOutHandler,w
  6886  0B3B  0081               	movwf	1
  6887                           
  6888                           ;usb_device.c: 2583: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6889  0B3C  3040               	movlw	64
  6890  0B3D  00F7               	movwf	??_USBCtrlTrfOutHandler
  6891  0B3E  3000               	movlw	0
  6892  0B3F  00F8               	movwf	??_USBCtrlTrfOutHandler+1
  6893  0B40  087C               	movf	_pBDTEntryEP0OutNext,w
  6894  0B41  3E02               	addlw	2
  6895  0B42  0086               	movwf	6
  6896  0B43  0187               	clrf	7
  6897  0B44  0877               	movf	??_USBCtrlTrfOutHandler,w
  6898  0B45  3FC0               	movwi [0]fsr1
  6899  0B46  0878               	movf	??_USBCtrlTrfOutHandler+1,w
  6900  0B47  3FC1               	movwi [1]fsr1
  6901                           
  6902                           ;usb_device.c: 2584: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6903  0B48  300C               	movlw	12
  6904  0B49  00F7               	movwf	??_USBCtrlTrfOutHandler
  6905  0B4A  087C               	movf	_pBDTEntryEP0OutNext,w
  6906  0B4B  0086               	movwf	6
  6907  0B4C  0187               	clrf	7
  6908  0B4D  0877               	movf	??_USBCtrlTrfOutHandler,w
  6909  0B4E  0081               	movwf	1
  6910                           
  6911                           ;usb_device.c: 2585: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6912  0B4F  087C               	movf	_pBDTEntryEP0OutNext,w
  6913  0B50  0086               	movwf	6
  6914  0B51  0187               	clrf	7
  6915  0B52  1781               	bsf	1,7
  6916                           
  6917                           ;usb_device.c: 2586: }
  6918  0B53  0008               	return
  6919  0B54                     l3548:	
  6920                           
  6921                           ;usb_device.c: 2587: else
  6922                           ;usb_device.c: 2588: {
  6923                           ;usb_device.c: 2589: BothEP0OutUOWNsSet = 0;
  6924  0B54  01DA               	clrf	_BothEP0OutUOWNsSet^(0+256)
  6925  0B55  0008               	return
  6926  0B56                     __end_of_USBCtrlTrfOutHandler:	
  6927                           
  6928                           	psect	text24
  6929  0645                     __ptext24:	
  6930 ;; *************** function _USBCtrlTrfRxService *****************
  6931 ;; Defined at:
  6932 ;;		line 1871 in file "../framework/usb/usb_device.c"
  6933 ;; Parameters:    Size  Location     Type
  6934 ;;		None
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;  byteToRead      1    6[COMMON] unsigned char 
  6937 ;;  i               1    5[COMMON] unsigned char 
  6938 ;; Return value:  Size  Location     Type
  6939 ;;		None               void
  6940 ;; Registers used:
  6941 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6942 ;; Tracked objects:
  6943 ;;		On entry : 0/0
  6944 ;;		On exit  : 0/0
  6945 ;;		Unchanged: 0/0
  6946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6948 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6949 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6950 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6951 ;;Total ram usage:        4 bytes
  6952 ;; Hardware stack levels used:    1
  6953 ;; Hardware stack levels required when called:    2
  6954 ;; This function calls:
  6955 ;;		_USBCtrlEPAllowStatusStage
  6956 ;; This function is called by:
  6957 ;;		_USBCtrlTrfOutHandler
  6958 ;; This function uses a non-reentrant model
  6959 ;;
  6960                           
  6961                           
  6962                           ;psect for function _USBCtrlTrfRxService
  6963  0645                     _USBCtrlTrfRxService:	
  6964                           
  6965                           ;usb_device.c: 1873: uint8_t byteToRead;
  6966                           ;usb_device.c: 1874: uint8_t i;
  6967                           ;usb_device.c: 1878: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  6968                           
  6969                           ;incstack = 0
  6970                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6971  0645  0020               	movlb	0	; select bank0
  6972  0646  086D               	movf	_pBDTEntryEP0OutCurrent,w
  6973  0647  0086               	movwf	6
  6974  0648  0187               	clrf	7
  6975  0649  3F41               	moviw [1]fsr1
  6976  064A  00F6               	movwf	USBCtrlTrfRxService@byteToRead
  6977                           
  6978                           ;usb_device.c: 1884: if(byteToRead > outPipes[0].wCount.Val)
  6979  064B  0876               	movf	USBCtrlTrfRxService@byteToRead,w
  6980  064C  00F3               	movwf	??_USBCtrlTrfRxService
  6981  064D  01F4               	clrf	??_USBCtrlTrfRxService+1
  6982  064E  0874               	movf	??_USBCtrlTrfRxService+1,w
  6983  064F  0022               	movlb	2	; select bank2
  6984  0650  024B               	subwf	((_outPipes+1)^(0+256)+3),w
  6985  0651  1D03               	skipz
  6986  0652  2E55               	goto	u2775
  6987  0653  0873               	movf	??_USBCtrlTrfRxService,w
  6988  0654  024A               	subwf	(_outPipes^(0+256)+3),w
  6989  0655                     u2775:	
  6990  0655  1803               	skipnc
  6991  0656  2E5B               	goto	l669
  6992                           
  6993                           ;usb_device.c: 1885: {
  6994                           ;usb_device.c: 1886: byteToRead = outPipes[0].wCount.Val;
  6995  0657  084A               	movf	(_outPipes^(0+256)+3),w
  6996  0658  00F3               	movwf	??_USBCtrlTrfRxService
  6997  0659  0873               	movf	??_USBCtrlTrfRxService,w
  6998  065A  00F6               	movwf	USBCtrlTrfRxService@byteToRead
  6999  065B                     l669:	
  7000                           
  7001                           ;usb_device.c: 1887: }
  7002                           ;usb_device.c: 1889: outPipes[0].wCount.Val -= byteToRead;
  7003  065B  0876               	movf	USBCtrlTrfRxService@byteToRead,w
  7004  065C  00F3               	movwf	??_USBCtrlTrfRxService
  7005  065D  01F4               	clrf	??_USBCtrlTrfRxService+1
  7006  065E  0873               	movf	??_USBCtrlTrfRxService,w
  7007  065F  02CA               	subwf	(_outPipes^(0+256)+3),f
  7008  0660  0874               	movf	??_USBCtrlTrfRxService+1,w
  7009  0661  3BCB               	subwfb	((_outPipes+1)^(0+256)+3),f
  7010                           
  7011                           ;usb_device.c: 1893: for(i=0;i<byteToRead;i++)
  7012  0662  01F5               	clrf	USBCtrlTrfRxService@i
  7013  0663                     l3350:	
  7014  0663  0876               	movf	USBCtrlTrfRxService@byteToRead,w
  7015  0664  0275               	subwf	USBCtrlTrfRxService@i,w
  7016  0665  1803               	btfsc	3,0
  7017  0666  2E7B               	goto	l3352
  7018                           
  7019                           ;usb_device.c: 1894: {
  7020                           ;usb_device.c: 1895: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  7021  0667  0875               	movf	USBCtrlTrfRxService@i,w
  7022  0668  3E48               	addlw	72
  7023  0669  0086               	movwf	6
  7024  066A  0187               	clrf	7
  7025  066B  0801               	movf	1,w
  7026  066C  00F3               	movwf	??_USBCtrlTrfRxService
  7027  066D  0847               	movf	_outPipes^(0+256),w
  7028  066E  0086               	movwf	6
  7029  066F  0187               	clrf	7
  7030  0670  0873               	movf	??_USBCtrlTrfRxService,w
  7031  0671  0081               	movwf	1
  7032  0672  3001               	movlw	1
  7033  0673  00F3               	movwf	??_USBCtrlTrfRxService
  7034  0674  0873               	movf	??_USBCtrlTrfRxService,w
  7035  0675  07C7               	addwf	_outPipes^(0+256),f
  7036  0676  3001               	movlw	1
  7037  0677  00F3               	movwf	??_USBCtrlTrfRxService
  7038  0678  0873               	movf	??_USBCtrlTrfRxService,w
  7039  0679  07F5               	addwf	USBCtrlTrfRxService@i,f
  7040  067A  2E63               	goto	l3350
  7041  067B                     l3352:	
  7042                           
  7043                           ;usb_device.c: 1896: }
  7044                           ;usb_device.c: 1900: if(outPipes[0].wCount.Val > 0)
  7045  067B  084A               	movf	(_outPipes^(0+256)+3),w
  7046  067C  044B               	iorwf	((_outPipes+1)^(0+256)+3),w
  7047  067D  1903               	btfsc	3,2
  7048  067E  2EB0               	goto	l3364
  7049                           
  7050                           ;usb_device.c: 1901: {
  7051                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->CNT = 8;
  7052  067F  3008               	movlw	8
  7053  0680  00F3               	movwf	??_USBCtrlTrfRxService
  7054  0681  0A7C               	incf	_pBDTEntryEP0OutNext,w
  7055  0682  0086               	movwf	6
  7056  0683  0187               	clrf	7
  7057  0684  0873               	movf	??_USBCtrlTrfRxService,w
  7058  0685  0081               	movwf	1
  7059                           
  7060                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  7061  0686  3048               	movlw	72
  7062  0687  00F3               	movwf	??_USBCtrlTrfRxService
  7063  0688  3000               	movlw	0
  7064  0689  00F4               	movwf	??_USBCtrlTrfRxService+1
  7065  068A  087C               	movf	_pBDTEntryEP0OutNext,w
  7066  068B  3E02               	addlw	2
  7067  068C  0086               	movwf	6
  7068  068D  0187               	clrf	7
  7069  068E  0873               	movf	??_USBCtrlTrfRxService,w
  7070  068F  3FC0               	movwi [0]fsr1
  7071  0690  0874               	movf	??_USBCtrlTrfRxService+1,w
  7072  0691  3FC1               	movwi [1]fsr1
  7073                           
  7074                           ;usb_device.c: 1904: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  7075  0692  0020               	movlb	0	; select bank0
  7076  0693  086D               	movf	_pBDTEntryEP0OutCurrent,w
  7077  0694  0086               	movwf	6
  7078  0695  0187               	clrf	7
  7079  0696  1B01               	btfsc	1,6
  7080  0697  2EA4               	goto	l3362
  7081                           
  7082                           ;usb_device.c: 1905: {
  7083                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  7084  0698  3048               	movlw	72
  7085  0699  00F3               	movwf	??_USBCtrlTrfRxService
  7086  069A  087C               	movf	_pBDTEntryEP0OutNext,w
  7087  069B  0086               	movwf	6
  7088  069C  0187               	clrf	7
  7089  069D  0873               	movf	??_USBCtrlTrfRxService,w
  7090  069E  0081               	movwf	1
  7091                           
  7092                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7093  069F  087C               	movf	_pBDTEntryEP0OutNext,w
  7094  06A0  0086               	movwf	6
  7095  06A1  0187               	clrf	7
  7096  06A2  1781               	bsf	1,7
  7097                           
  7098                           ;usb_device.c: 1908: }
  7099  06A3  0008               	return
  7100  06A4                     l3362:	
  7101                           
  7102                           ;usb_device.c: 1909: else
  7103                           ;usb_device.c: 1910: {
  7104                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  7105  06A4  3008               	movlw	8
  7106  06A5  00F3               	movwf	??_USBCtrlTrfRxService
  7107  06A6  087C               	movf	_pBDTEntryEP0OutNext,w
  7108  06A7  0086               	movwf	6
  7109  06A8  0187               	clrf	7
  7110  06A9  0873               	movf	??_USBCtrlTrfRxService,w
  7111  06AA  0081               	movwf	1
  7112                           
  7113                           ;usb_device.c: 1912: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7114  06AB  087C               	movf	_pBDTEntryEP0OutNext,w
  7115  06AC  0086               	movwf	6
  7116  06AD  0187               	clrf	7
  7117  06AE  1781               	bsf	1,7
  7118                           
  7119                           ;usb_device.c: 1913: }
  7120                           ;usb_device.c: 1914: }
  7121  06AF  0008               	return
  7122  06B0                     l3364:	
  7123                           
  7124                           ;usb_device.c: 1915: else
  7125                           ;usb_device.c: 1916: {
  7126                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->CNT = 8;
  7127  06B0  3008               	movlw	8
  7128  06B1  00F3               	movwf	??_USBCtrlTrfRxService
  7129  06B2  0A7C               	incf	_pBDTEntryEP0OutNext,w
  7130  06B3  0086               	movwf	6
  7131  06B4  0187               	clrf	7
  7132  06B5  0873               	movf	??_USBCtrlTrfRxService,w
  7133  06B6  0081               	movwf	1
  7134                           
  7135                           ;usb_device.c: 1921: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7136  06B7  3040               	movlw	64
  7137  06B8  00F3               	movwf	??_USBCtrlTrfRxService
  7138  06B9  3000               	movlw	0
  7139  06BA  00F4               	movwf	??_USBCtrlTrfRxService+1
  7140  06BB  087C               	movf	_pBDTEntryEP0OutNext,w
  7141  06BC  3E02               	addlw	2
  7142  06BD  0086               	movwf	6
  7143  06BE  0187               	clrf	7
  7144  06BF  0873               	movf	??_USBCtrlTrfRxService,w
  7145  06C0  3FC0               	movwi [0]fsr1
  7146  06C1  0874               	movf	??_USBCtrlTrfRxService+1,w
  7147  06C2  3FC1               	movwi [1]fsr1
  7148                           
  7149                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  7150  06C3  3004               	movlw	4
  7151  06C4  00F3               	movwf	??_USBCtrlTrfRxService
  7152  06C5  087C               	movf	_pBDTEntryEP0OutNext,w
  7153  06C6  0086               	movwf	6
  7154  06C7  0187               	clrf	7
  7155  06C8  0873               	movf	??_USBCtrlTrfRxService,w
  7156  06C9  0081               	movwf	1
  7157                           
  7158                           ;usb_device.c: 1926: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7159  06CA  087C               	movf	_pBDTEntryEP0OutNext,w
  7160  06CB  0086               	movwf	6
  7161  06CC  0187               	clrf	7
  7162  06CD  1781               	bsf	1,7
  7163                           
  7164                           ;usb_device.c: 1945: }
  7165                           ;usb_device.c: 1946: outPipes[0].info.bits.busy = 0;
  7166  06CE  0022               	movlb	2	; select bank2
  7167  06CF  13C9               	bcf	(_outPipes^(0+256)+2),7
  7168                           
  7169                           ;usb_device.c: 1960: if(USBDeferStatusStagePacket == 0)
  7170  06D0  0020               	movlb	0	; select bank0
  7171  06D1  086B               	movf	_USBDeferStatusStagePacket,w	;volatile
  7172  06D2  1D03               	btfss	3,2
  7173  06D3  0008               	return
  7174                           
  7175                           ;usb_device.c: 1961: {
  7176                           ;usb_device.c: 1962: USBCtrlEPAllowStatusStage();
  7177  06D4  318E  263A         	fcall	_USBCtrlEPAllowStatusStage
  7178  06D6  0008               	return
  7179  06D7                     __end_of_USBCtrlTrfRxService:	
  7180                           
  7181                           	psect	text25
  7182  0E3A                     __ptext25:	
  7183 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  7184 ;; Defined at:
  7185 ;;		line 1435 in file "../framework/usb/usb_device.c"
  7186 ;; Parameters:    Size  Location     Type
  7187 ;;		None
  7188 ;; Auto vars:     Size  Location     Type
  7189 ;;		None
  7190 ;; Return value:  Size  Location     Type
  7191 ;;		None               void
  7192 ;; Registers used:
  7193 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7194 ;; Tracked objects:
  7195 ;;		On entry : 0/0
  7196 ;;		On exit  : 0/0
  7197 ;;		Unchanged: 0/0
  7198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7201 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7202 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7203 ;;Total ram usage:        2 bytes
  7204 ;; Hardware stack levels used:    1
  7205 ;; Hardware stack levels required when called:    1
  7206 ;; This function calls:
  7207 ;;		Nothing
  7208 ;; This function is called by:
  7209 ;;		_USBDeviceTasks
  7210 ;;		_USBCtrlEPServiceComplete
  7211 ;;		_USBCtrlTrfRxService
  7212 ;; This function uses a non-reentrant model
  7213 ;;
  7214                           
  7215                           
  7216                           ;psect for function _USBCtrlEPAllowStatusStage
  7217  0E3A                     _USBCtrlEPAllowStatusStage:	
  7218                           
  7219                           ;usb_device.c: 1442: if(USBStatusStageEnabledFlag1 == 0)
  7220                           
  7221                           ;incstack = 0
  7222                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  7223  0E3A  0022               	movlb	2	; select bank2
  7224  0E3B  085F               	movf	_USBStatusStageEnabledFlag1^(0+256),w	;volatile
  7225  0E3C  1D03               	btfss	3,2
  7226  0E3D  0008               	return
  7227                           
  7228                           ;usb_device.c: 1443: {
  7229                           ;usb_device.c: 1444: USBStatusStageEnabledFlag1 = 1;
  7230  0E3E  3001               	movlw	1
  7231  0E3F  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7232  0E40  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7233  0E41  00DF               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
  7234                           
  7235                           ;usb_device.c: 1445: if(USBStatusStageEnabledFlag2 == 0)
  7236  0E42  0860               	movf	_USBStatusStageEnabledFlag2^(0+256),w	;volatile
  7237  0E43  1D03               	btfss	3,2
  7238  0E44  0008               	return
  7239                           
  7240                           ;usb_device.c: 1446: {
  7241                           ;usb_device.c: 1447: USBStatusStageEnabledFlag2 = 1;
  7242  0E45  3001               	movlw	1
  7243  0E46  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7244  0E47  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7245  0E48  00E0               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
  7246                           
  7247                           ;usb_device.c: 1451: if(controlTransferState == 2)
  7248  0E49  3002               	movlw	2
  7249  0E4A  0021               	movlb	1	; select bank1
  7250  0E4B  0669               	xorwf	_controlTransferState^(0+128),w
  7251  0E4C  1D03               	btfss	3,2
  7252  0E4D  2E5F               	goto	l2996
  7253                           
  7254                           ;usb_device.c: 1452: {
  7255                           ;usb_device.c: 1453: pBDTEntryIn[0]->CNT = 0;
  7256  0E4E  0020               	movlb	0	; select bank0
  7257  0E4F  0A69               	incf	_pBDTEntryIn,w
  7258  0E50  0086               	movwf	6
  7259  0E51  0187               	clrf	7
  7260  0E52  0181               	clrf	1
  7261                           
  7262                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  7263  0E53  3048               	movlw	72
  7264  0E54  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7265  0E55  0869               	movf	_pBDTEntryIn,w
  7266  0E56  0086               	movwf	6
  7267  0E57  0187               	clrf	7
  7268  0E58  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7269  0E59  0081               	movwf	1
  7270                           
  7271                           ;usb_device.c: 1455: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7272  0E5A  0869               	movf	_pBDTEntryIn,w
  7273  0E5B  0086               	movwf	6
  7274  0E5C  0187               	clrf	7
  7275  0E5D  1781               	bsf	1,7
  7276                           
  7277                           ;usb_device.c: 1456: }
  7278  0E5E  0008               	return
  7279  0E5F                     l2996:	
  7280                           
  7281                           ;usb_device.c: 1457: else if(controlTransferState == 1)
  7282  0E5F  0021               	movlb	1	; select bank1
  7283  0E60  0369               	decf	_controlTransferState^(0+128),w
  7284  0E61  1D03               	btfss	3,2
  7285  0E62  0008               	return
  7286                           
  7287                           ;usb_device.c: 1458: {
  7288                           ;usb_device.c: 1459: BothEP0OutUOWNsSet = 0;
  7289  0E63  0022               	movlb	2	; select bank2
  7290  0E64  01DA               	clrf	_BothEP0OutUOWNsSet^(0+256)
  7291                           
  7292                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->CNT = 8;
  7293  0E65  3008               	movlw	8
  7294  0E66  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7295  0E67  0020               	movlb	0	; select bank0
  7296  0E68  0A6D               	incf	_pBDTEntryEP0OutCurrent,w
  7297  0E69  0086               	movwf	6
  7298  0E6A  0187               	clrf	7
  7299  0E6B  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7300  0E6C  0081               	movwf	1
  7301                           
  7302                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7303  0E6D  3040               	movlw	64
  7304  0E6E  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7305  0E6F  3000               	movlw	0
  7306  0E70  00F2               	movwf	??_USBCtrlEPAllowStatusStage+1
  7307  0E71  086D               	movf	_pBDTEntryEP0OutCurrent,w
  7308  0E72  3E02               	addlw	2
  7309  0E73  0086               	movwf	6
  7310  0E74  0187               	clrf	7
  7311  0E75  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7312  0E76  3FC0               	movwi [0]fsr1
  7313  0E77  0872               	movf	??_USBCtrlEPAllowStatusStage+1,w
  7314  0E78  3FC1               	movwi [1]fsr1
  7315                           
  7316                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  7317  0E79  3004               	movlw	4
  7318  0E7A  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7319  0E7B  086D               	movf	_pBDTEntryEP0OutCurrent,w
  7320  0E7C  0086               	movwf	6
  7321  0E7D  0187               	clrf	7
  7322  0E7E  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7323  0E7F  0081               	movwf	1
  7324                           
  7325                           ;usb_device.c: 1467: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  7326  0E80  086D               	movf	_pBDTEntryEP0OutCurrent,w
  7327  0E81  0086               	movwf	6
  7328  0E82  0187               	clrf	7
  7329  0E83  1781               	bsf	1,7
  7330                           
  7331                           ;usb_device.c: 1468: BothEP0OutUOWNsSet = 1;
  7332  0E84  0022               	movlb	2	; select bank2
  7333  0E85  01DA               	clrf	_BothEP0OutUOWNsSet^(0+256)
  7334  0E86  0ADA               	incf	_BothEP0OutUOWNsSet^(0+256),f
  7335                           
  7336                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->CNT = 8;
  7337  0E87  3008               	movlw	8
  7338  0E88  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7339  0E89  0A7C               	incf	_pBDTEntryEP0OutNext,w
  7340  0E8A  0086               	movwf	6
  7341  0E8B  0187               	clrf	7
  7342  0E8C  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7343  0E8D  0081               	movwf	1
  7344                           
  7345                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7346  0E8E  3040               	movlw	64
  7347  0E8F  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7348  0E90  3000               	movlw	0
  7349  0E91  00F2               	movwf	??_USBCtrlEPAllowStatusStage+1
  7350  0E92  087C               	movf	_pBDTEntryEP0OutNext,w
  7351  0E93  3E02               	addlw	2
  7352  0E94  0086               	movwf	6
  7353  0E95  0187               	clrf	7
  7354  0E96  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7355  0E97  3FC0               	movwi [0]fsr1
  7356  0E98  0872               	movf	??_USBCtrlEPAllowStatusStage+1,w
  7357  0E99  3FC1               	movwi [1]fsr1
  7358                           
  7359                           ;usb_device.c: 1474: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  7360  0E9A  3080               	movlw	128
  7361  0E9B  00F1               	movwf	??_USBCtrlEPAllowStatusStage
  7362  0E9C  087C               	movf	_pBDTEntryEP0OutNext,w
  7363  0E9D  0086               	movwf	6
  7364  0E9E  0187               	clrf	7
  7365  0E9F  0871               	movf	??_USBCtrlEPAllowStatusStage,w
  7366  0EA0  0081               	movwf	1
  7367  0EA1  0008               	return
  7368  0EA2                     __end_of_USBCtrlEPAllowStatusStage:	
  7369                           
  7370                           	psect	text26
  7371  0DD3                     __ptext26:	
  7372 ;; *************** function _USBCtrlTrfInHandler *****************
  7373 ;; Defined at:
  7374 ;;		line 2617 in file "../framework/usb/usb_device.c"
  7375 ;; Parameters:    Size  Location     Type
  7376 ;;		None
  7377 ;; Auto vars:     Size  Location     Type
  7378 ;;  lastDTS         1    6[COMMON] unsigned char 
  7379 ;; Return value:  Size  Location     Type
  7380 ;;		None               void
  7381 ;; Registers used:
  7382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7389 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7390 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7391 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7392 ;;Total ram usage:        3 bytes
  7393 ;; Hardware stack levels used:    1
  7394 ;; Hardware stack levels required when called:    2
  7395 ;; This function calls:
  7396 ;;		_USBCtrlTrfTxService
  7397 ;; This function is called by:
  7398 ;;		_USBCtrlEPService
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           
  7403                           ;psect for function _USBCtrlTrfInHandler
  7404  0DD3                     _USBCtrlTrfInHandler:	
  7405                           
  7406                           ;usb_device.c: 2619: uint8_t lastDTS;
  7407                           ;usb_device.c: 2621: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  7408                           
  7409                           ;incstack = 0
  7410                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7411  0DD3  0020               	movlb	0	; select bank0
  7412  0DD4  0869               	movf	_pBDTEntryIn,w
  7413  0DD5  0086               	movwf	6
  7414  0DD6  0187               	clrf	7
  7415  0DD7  3000               	movlw	0
  7416  0DD8  1B01               	btfsc	1,6
  7417  0DD9  3001               	movlw	1
  7418  0DDA  00F6               	movwf	USBCtrlTrfInHandler@lastDTS
  7419                           
  7420                           ;usb_device.c: 2624: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  7421  0DDB  3004               	movlw	4
  7422  0DDC  00F4               	movwf	??_USBCtrlTrfInHandler
  7423  0DDD  0874               	movf	??_USBCtrlTrfInHandler,w
  7424  0DDE  06E9               	xorwf	_pBDTEntryIn,f
  7425                           
  7426                           ;usb_device.c: 2629: if(USBDeviceState == ADR_PENDING_STATE)
  7427  0DDF  3008               	movlw	8
  7428  0DE0  066C               	xorwf	_USBDeviceState,w
  7429  0DE1  1D03               	btfss	3,2
  7430  0DE2  2DF1               	goto	l3564
  7431                           
  7432                           ;usb_device.c: 2630: {
  7433                           ;usb_device.c: 2631: UADDR = (SetupPkt.bDevADR & 0x7F);
  7434  0DE3  0842               	movf	66,w	;volatile
  7435  0DE4  397F               	andlw	127
  7436  0DE5  003D               	movlb	29	; select bank29
  7437  0DE6  0096               	movwf	22	;volatile
  7438                           
  7439                           ;usb_device.c: 2632: if(UADDR != 0u)
  7440  0DE7  0816               	movf	22,w	;volatile
  7441  0DE8  1903               	btfsc	3,2
  7442  0DE9  2DEC               	goto	l3562
  7443                           
  7444                           ;usb_device.c: 2633: {
  7445                           ;usb_device.c: 2634: USBDeviceState=ADDRESS_STATE;
  7446  0DEA  3010               	movlw	16
  7447  0DEB  2DED               	goto	L9
  7448  0DEC                     l3562:	
  7449                           ;usb_device.c: 2635: }
  7450                           
  7451                           
  7452                           ;usb_device.c: 2636: else
  7453                           ;usb_device.c: 2637: {
  7454                           ;usb_device.c: 2638: USBDeviceState=DEFAULT_STATE;
  7455  0DEC  3004               	movlw	4
  7456  0DED                     L9:	
  7457  0DED  00F4               	movwf	??_USBCtrlTrfInHandler
  7458  0DEE  0874               	movf	??_USBCtrlTrfInHandler,w
  7459  0DEF  0020               	movlb	0	; select bank0
  7460  0DF0  00EC               	movwf	_USBDeviceState
  7461  0DF1                     l3564:	
  7462                           
  7463                           ;usb_device.c: 2639: }
  7464                           ;usb_device.c: 2640: }
  7465                           ;usb_device.c: 2643: if(controlTransferState == 1)
  7466  0DF1  0021               	movlb	1	; select bank1
  7467  0DF2  0369               	decf	_controlTransferState^(0+128),w
  7468  0DF3  1D03               	btfss	3,2
  7469  0DF4  2E34               	goto	l756
  7470                           
  7471                           ;usb_device.c: 2644: {
  7472                           ;usb_device.c: 2645: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  7473  0DF5  3048               	movlw	72
  7474  0DF6  00F4               	movwf	??_USBCtrlTrfInHandler
  7475  0DF7  3000               	movlw	0
  7476  0DF8  00F5               	movwf	??_USBCtrlTrfInHandler+1
  7477  0DF9  0020               	movlb	0	; select bank0
  7478  0DFA  0869               	movf	_pBDTEntryIn,w
  7479  0DFB  3E02               	addlw	2
  7480  0DFC  0086               	movwf	6
  7481  0DFD  0187               	clrf	7
  7482  0DFE  0874               	movf	??_USBCtrlTrfInHandler,w
  7483  0DFF  3FC0               	movwi [0]fsr1
  7484  0E00  0875               	movf	??_USBCtrlTrfInHandler+1,w
  7485  0E01  3FC1               	movwi [1]fsr1
  7486                           
  7487                           ;usb_device.c: 2646: USBCtrlTrfTxService();
  7488  0E02  318E  26A2  318D   	fcall	_USBCtrlTrfTxService
  7489                           
  7490                           ;usb_device.c: 2652: if(shortPacketStatus == 2)
  7491  0E05  3002               	movlw	2
  7492  0E06  0021               	movlb	1	; select bank1
  7493  0E07  066D               	xorwf	_shortPacketStatus^(0+128),w
  7494  0E08  1D03               	btfss	3,2
  7495  0E09  2E17               	goto	l3574
  7496                           
  7497                           ;usb_device.c: 2653: {
  7498                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val = 0x04;
  7499  0E0A  3004               	movlw	4
  7500  0E0B  00F4               	movwf	??_USBCtrlTrfInHandler
  7501  0E0C  0020               	movlb	0	; select bank0
  7502  0E0D  0869               	movf	_pBDTEntryIn,w
  7503  0E0E  0086               	movwf	6
  7504  0E0F  0187               	clrf	7
  7505  0E10  0874               	movf	??_USBCtrlTrfInHandler,w
  7506  0E11  0081               	movwf	1
  7507                           
  7508                           ;usb_device.c: 2657: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7509  0E12  0869               	movf	_pBDTEntryIn,w
  7510  0E13  0086               	movwf	6
  7511  0E14  0187               	clrf	7
  7512  0E15  1781               	bsf	1,7
  7513                           
  7514                           ;usb_device.c: 2658: }
  7515  0E16  0008               	return
  7516  0E17                     l3574:	
  7517                           
  7518                           ;usb_device.c: 2659: else
  7519                           ;usb_device.c: 2660: {
  7520                           ;usb_device.c: 2661: if(lastDTS == 0)
  7521  0E17  0876               	movf	USBCtrlTrfInHandler@lastDTS,w
  7522  0E18  1D03               	btfss	3,2
  7523  0E19  2E27               	goto	l3578
  7524                           
  7525                           ;usb_device.c: 2662: {
  7526                           ;usb_device.c: 2663: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  7527  0E1A  3048               	movlw	72
  7528  0E1B  00F4               	movwf	??_USBCtrlTrfInHandler
  7529  0E1C  0020               	movlb	0	; select bank0
  7530  0E1D  0869               	movf	_pBDTEntryIn,w
  7531  0E1E  0086               	movwf	6
  7532  0E1F  0187               	clrf	7
  7533  0E20  0874               	movf	??_USBCtrlTrfInHandler,w
  7534  0E21  0081               	movwf	1
  7535                           
  7536                           ;usb_device.c: 2664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7537  0E22  0869               	movf	_pBDTEntryIn,w
  7538  0E23  0086               	movwf	6
  7539  0E24  0187               	clrf	7
  7540  0E25  1781               	bsf	1,7
  7541                           
  7542                           ;usb_device.c: 2665: }
  7543  0E26  0008               	return
  7544  0E27                     l3578:	
  7545                           
  7546                           ;usb_device.c: 2666: else
  7547                           ;usb_device.c: 2667: {
  7548                           ;usb_device.c: 2668: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  7549  0E27  3008               	movlw	8
  7550  0E28  00F4               	movwf	??_USBCtrlTrfInHandler
  7551  0E29  0020               	movlb	0	; select bank0
  7552  0E2A  0869               	movf	_pBDTEntryIn,w
  7553  0E2B  0086               	movwf	6
  7554  0E2C  0187               	clrf	7
  7555  0E2D  0874               	movf	??_USBCtrlTrfInHandler,w
  7556  0E2E  0081               	movwf	1
  7557                           
  7558                           ;usb_device.c: 2669: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7559  0E2F  0869               	movf	_pBDTEntryIn,w
  7560  0E30  0086               	movwf	6
  7561  0E31  0187               	clrf	7
  7562  0E32  1781               	bsf	1,7
  7563                           
  7564                           ;usb_device.c: 2670: }
  7565                           ;usb_device.c: 2671: }
  7566                           ;usb_device.c: 2672: }
  7567  0E33  0008               	return
  7568  0E34                     l756:	
  7569                           
  7570                           ;usb_device.c: 2673: else
  7571                           ;usb_device.c: 2674: {
  7572                           ;usb_device.c: 2678: if(outPipes[0].info.bits.busy == 1)
  7573  0E34  0022               	movlb	2	; select bank2
  7574  0E35  1BC9               	btfsc	(_outPipes^(0+256)+2),7
  7575                           
  7576                           ;usb_device.c: 2683: }
  7577                           ;usb_device.c: 2684: outPipes[0].info.bits.busy = 0;
  7578  0E36  13C9               	bcf	(_outPipes^(0+256)+2),7
  7579                           
  7580                           ;usb_device.c: 2685: }
  7581                           ;usb_device.c: 2687: controlTransferState = 0;
  7582  0E37  0021               	movlb	1	; select bank1
  7583  0E38  01E9               	clrf	_controlTransferState^(0+128)
  7584  0E39  0008               	return
  7585  0E3A                     __end_of_USBCtrlTrfInHandler:	
  7586                           
  7587                           	psect	text27
  7588  0EA2                     __ptext27:	
  7589 ;; *************** function _USBCtrlTrfTxService *****************
  7590 ;; Defined at:
  7591 ;;		line 1790 in file "../framework/usb/usb_device.c"
  7592 ;; Parameters:    Size  Location     Type
  7593 ;;		None
  7594 ;; Auto vars:     Size  Location     Type
  7595 ;;  byteToSend      1    3[COMMON] unsigned char 
  7596 ;; Return value:  Size  Location     Type
  7597 ;;		None               void
  7598 ;; Registers used:
  7599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7600 ;; Tracked objects:
  7601 ;;		On entry : 0/0
  7602 ;;		On exit  : 0/0
  7603 ;;		Unchanged: 0/0
  7604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7606 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7607 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7608 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7609 ;;Total ram usage:        3 bytes
  7610 ;; Hardware stack levels used:    1
  7611 ;; Hardware stack levels required when called:    1
  7612 ;; This function calls:
  7613 ;;		Nothing
  7614 ;; This function is called by:
  7615 ;;		_USBCtrlEPAllowDataStage
  7616 ;;		_USBCtrlTrfInHandler
  7617 ;; This function uses a non-reentrant model
  7618 ;;
  7619                           
  7620                           
  7621                           ;psect for function _USBCtrlTrfTxService
  7622  0EA2                     _USBCtrlTrfTxService:	
  7623                           
  7624                           ;usb_device.c: 1792: uint8_t byteToSend;
  7625                           ;usb_device.c: 1796: byteToSend = 8;
  7626                           
  7627                           ;incstack = 0
  7628                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  7629  0EA2  3008               	movlw	8
  7630  0EA3  00F1               	movwf	??_USBCtrlTrfTxService
  7631  0EA4  0871               	movf	??_USBCtrlTrfTxService,w
  7632  0EA5  00F3               	movwf	USBCtrlTrfTxService@byteToSend
  7633                           
  7634                           ;usb_device.c: 1797: if(inPipes[0].wCount.Val < (uint8_t)8)
  7635  0EA6  3000               	movlw	0
  7636  0EA7  0021               	movlb	1	; select bank1
  7637  0EA8  0264               	subwf	((_inPipes+1)^(0+128)+3),w
  7638  0EA9  3008               	movlw	8
  7639  0EAA  1903               	skipnz
  7640  0EAB  0263               	subwf	(_inPipes^(0+128)+3),w
  7641  0EAC  1803               	skipnc
  7642  0EAD  2EBF               	goto	l654
  7643                           
  7644                           ;usb_device.c: 1798: {
  7645                           ;usb_device.c: 1799: byteToSend = inPipes[0].wCount.Val;
  7646  0EAE  0863               	movf	(_inPipes^(0+128)+3),w
  7647  0EAF  00F1               	movwf	??_USBCtrlTrfTxService
  7648  0EB0  0871               	movf	??_USBCtrlTrfTxService,w
  7649  0EB1  00F3               	movwf	USBCtrlTrfTxService@byteToSend
  7650                           
  7651                           ;usb_device.c: 1806: if(shortPacketStatus == 0)
  7652  0EB2  086D               	movf	_shortPacketStatus^(0+128),w
  7653  0EB3  1D03               	btfss	3,2
  7654  0EB4  2EB8               	goto	l2940
  7655                           
  7656                           ;usb_device.c: 1807: {
  7657                           ;usb_device.c: 1808: shortPacketStatus = 1;
  7658  0EB5  01ED               	clrf	_shortPacketStatus^(0+128)
  7659  0EB6  0AED               	incf	_shortPacketStatus^(0+128),f
  7660                           
  7661                           ;usb_device.c: 1809: }
  7662  0EB7  2EBF               	goto	l654
  7663  0EB8                     l2940:	
  7664                           
  7665                           ;usb_device.c: 1810: else if(shortPacketStatus == 1)
  7666  0EB8  036D               	decf	_shortPacketStatus^(0+128),w
  7667  0EB9  1D03               	btfss	3,2
  7668  0EBA  2EBF               	goto	l654
  7669                           
  7670                           ;usb_device.c: 1811: {
  7671                           ;usb_device.c: 1812: shortPacketStatus = 2;
  7672  0EBB  3002               	movlw	2
  7673  0EBC  00F1               	movwf	??_USBCtrlTrfTxService
  7674  0EBD  0871               	movf	??_USBCtrlTrfTxService,w
  7675  0EBE  00ED               	movwf	_shortPacketStatus^(0+128)
  7676  0EBF                     l654:	
  7677                           
  7678                           ;usb_device.c: 1813: }
  7679                           ;usb_device.c: 1814: }
  7680                           ;usb_device.c: 1818: inPipes[0].wCount.Val -= byteToSend;
  7681  0EBF  0873               	movf	USBCtrlTrfTxService@byteToSend,w
  7682  0EC0  00F1               	movwf	??_USBCtrlTrfTxService
  7683  0EC1  01F2               	clrf	??_USBCtrlTrfTxService+1
  7684  0EC2  0871               	movf	??_USBCtrlTrfTxService,w
  7685  0EC3  02E3               	subwf	(_inPipes^(0+128)+3),f
  7686  0EC4  0872               	movf	??_USBCtrlTrfTxService+1,w
  7687  0EC5  3BE4               	subwfb	((_inPipes+1)^(0+128)+3),f
  7688                           
  7689                           ;usb_device.c: 1823: pBDTEntryIn[0]->CNT = byteToSend;
  7690  0EC6  0873               	movf	USBCtrlTrfTxService@byteToSend,w
  7691  0EC7  00F1               	movwf	??_USBCtrlTrfTxService
  7692  0EC8  0020               	movlb	0	; select bank0
  7693  0EC9  0A69               	incf	_pBDTEntryIn,w
  7694  0ECA  0086               	movwf	6
  7695  0ECB  0187               	clrf	7
  7696  0ECC  0871               	movf	??_USBCtrlTrfTxService,w
  7697  0ECD  0081               	movwf	1
  7698                           
  7699                           ;usb_device.c: 1827: pDst = ( uint8_t*)CtrlTrfData;
  7700  0ECE  3048               	movlw	72
  7701  0ECF  00F1               	movwf	??_USBCtrlTrfTxService
  7702  0ED0  0871               	movf	??_USBCtrlTrfTxService,w
  7703  0ED1  0022               	movlb	2	; select bank2
  7704  0ED2  00E4               	movwf	_pDst^(0+256)
  7705                           
  7706                           ;usb_device.c: 1828: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  7707  0ED3  0021               	movlb	1	; select bank1
  7708  0ED4  1C62               	btfss	(_inPipes^(0+128)+2),0
  7709  0ED5  2EF0               	goto	l2960
  7710  0ED6  2F0D               	goto	l2970
  7711  0ED7                     l2952:	
  7712                           ;usb_device.c: 1829: {
  7713                           ;usb_device.c: 1830: while(byteToSend)
  7714                           
  7715                           
  7716                           ;usb_device.c: 1831: {
  7717                           ;usb_device.c: 1832: *pDst++ = *inPipes[0].pSrc.bRom++;
  7718  0ED7  0021               	movlb	1	; select bank1
  7719  0ED8  0860               	movf	_inPipes^(0+128),w
  7720  0ED9  0084               	movwf	4
  7721  0EDA  0861               	movf	(_inPipes+1)^(0+128),w
  7722  0EDB  0085               	movwf	5
  7723  0EDC  0800               	movf	0,w	;code access
  7724  0EDD  00F1               	movwf	??_USBCtrlTrfTxService
  7725  0EDE  0022               	movlb	2	; select bank2
  7726  0EDF  0864               	movf	_pDst^(0+256),w
  7727  0EE0  0086               	movwf	6
  7728  0EE1  0187               	clrf	7
  7729  0EE2  0871               	movf	??_USBCtrlTrfTxService,w
  7730  0EE3  0081               	movwf	1
  7731  0EE4  3001               	movlw	1
  7732  0EE5  0021               	movlb	1	; select bank1
  7733  0EE6  07E0               	addwf	_inPipes^(0+128),f
  7734  0EE7  3000               	movlw	0
  7735  0EE8  3DE1               	addwfc	(_inPipes+1)^(0+128),f
  7736  0EE9  3001               	movlw	1
  7737  0EEA  00F1               	movwf	??_USBCtrlTrfTxService
  7738  0EEB  0871               	movf	??_USBCtrlTrfTxService,w
  7739  0EEC  0022               	movlb	2	; select bank2
  7740  0EED  07E4               	addwf	_pDst^(0+256),f
  7741                           
  7742                           ;usb_device.c: 1833: byteToSend--;
  7743  0EEE  3001               	movlw	1
  7744  0EEF  02F3               	subwf	USBCtrlTrfTxService@byteToSend,f
  7745  0EF0                     l2960:	
  7746  0EF0  0873               	movf	USBCtrlTrfTxService@byteToSend,w
  7747  0EF1  1903               	btfsc	3,2
  7748  0EF2  0008               	return
  7749  0EF3  2ED7               	goto	l2952
  7750  0EF4                     l2962:	
  7751                           ;usb_device.c: 1836: else
  7752                           ;usb_device.c: 1837: {
  7753                           ;usb_device.c: 1838: while(byteToSend)
  7754                           
  7755                           ;usb_device.c: 1834: }
  7756                           ;usb_device.c: 1835: }
  7757                           
  7758                           
  7759                           ;usb_device.c: 1839: {
  7760                           ;usb_device.c: 1840: *pDst++ = *inPipes[0].pSrc.bRam++;
  7761  0EF4  0021               	movlb	1	; select bank1
  7762  0EF5  0860               	movf	_inPipes^(0+128),w
  7763  0EF6  0084               	movwf	4
  7764  0EF7  0861               	movf	(_inPipes+1)^(0+128),w
  7765  0EF8  0085               	movwf	5
  7766  0EF9  0800               	movf	0,w	;code access
  7767  0EFA  00F1               	movwf	??_USBCtrlTrfTxService
  7768  0EFB  0022               	movlb	2	; select bank2
  7769  0EFC  0864               	movf	_pDst^(0+256),w
  7770  0EFD  0086               	movwf	6
  7771  0EFE  0187               	clrf	7
  7772  0EFF  0871               	movf	??_USBCtrlTrfTxService,w
  7773  0F00  0081               	movwf	1
  7774  0F01  3001               	movlw	1
  7775  0F02  0021               	movlb	1	; select bank1
  7776  0F03  07E0               	addwf	_inPipes^(0+128),f
  7777  0F04  3000               	movlw	0
  7778  0F05  3DE1               	addwfc	(_inPipes+1)^(0+128),f
  7779  0F06  3001               	movlw	1
  7780  0F07  00F1               	movwf	??_USBCtrlTrfTxService
  7781  0F08  0871               	movf	??_USBCtrlTrfTxService,w
  7782  0F09  0022               	movlb	2	; select bank2
  7783  0F0A  07E4               	addwf	_pDst^(0+256),f
  7784                           
  7785                           ;usb_device.c: 1841: byteToSend--;
  7786  0F0B  3001               	movlw	1
  7787  0F0C  02F3               	subwf	USBCtrlTrfTxService@byteToSend,f
  7788  0F0D                     l2970:	
  7789  0F0D  0873               	movf	USBCtrlTrfTxService@byteToSend,w
  7790  0F0E  1903               	btfsc	3,2
  7791  0F0F  0008               	return
  7792  0F10  2EF4               	goto	l2962
  7793  0F11                     __end_of_USBCtrlTrfTxService:	
  7794                           
  7795                           	psect	text28
  7796  0AA1                     __ptext28:	
  7797 ;; *************** function _SYSTEM_Initialize *****************
  7798 ;; Defined at:
  7799 ;;		line 86 in file "../src/pic16f1459/system.c"
  7800 ;; Parameters:    Size  Location     Type
  7801 ;;  state           1    wreg     enum E2644
  7802 ;; Auto vars:     Size  Location     Type
  7803 ;;  state           1    2[COMMON] enum E2644
  7804 ;; Return value:  Size  Location     Type
  7805 ;;		None               void
  7806 ;; Registers used:
  7807 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7808 ;; Tracked objects:
  7809 ;;		On entry : 0/0
  7810 ;;		On exit  : 0/0
  7811 ;;		Unchanged: 0/0
  7812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7814 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7816 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7817 ;;Total ram usage:        1 bytes
  7818 ;; Hardware stack levels used:    1
  7819 ;; Hardware stack levels required when called:    2
  7820 ;; This function calls:
  7821 ;;		_BUTTON_Enable
  7822 ;;		_LED_Enable
  7823 ;; This function is called by:
  7824 ;;		_main
  7825 ;; This function uses a non-reentrant model
  7826 ;;
  7827                           
  7828                           
  7829                           ;psect for function _SYSTEM_Initialize
  7830  0AA1                     _SYSTEM_Initialize:	
  7831                           
  7832                           ;incstack = 0
  7833                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7834                           ;SYSTEM_Initialize@state stored from wreg
  7835  0AA1  00F2               	movwf	SYSTEM_Initialize@state
  7836                           
  7837                           ;system.c: 88: switch(state)
  7838  0AA2  2AB1               	goto	l3824
  7839  0AA3                     l3816:	
  7840                           ;system.c: 89: {
  7841                           ;system.c: 90: case SYSTEM_STATE_USB_START:
  7842                           
  7843                           
  7844                           ;system.c: 94: OSCCON = 0xFC;
  7845  0AA3  30FC               	movlw	252
  7846  0AA4  0021               	movlb	1	; select bank1
  7847  0AA5  0099               	movwf	25	;volatile
  7848                           
  7849                           ;system.c: 95: ACTCON = 0x90;
  7850  0AA6  3090               	movlw	144
  7851  0AA7  0027               	movlb	7	; select bank7
  7852  0AA8  009B               	movwf	27	;volatile
  7853                           
  7854                           ;system.c: 97: LED_Enable(LED_D1);
  7855  0AA9  3001               	movlw	1
  7856  0AAA  318A  2253  318A   	fcall	_LED_Enable
  7857                           
  7858                           ;system.c: 99: BUTTON_Enable(BUTTON_S1);
  7859  0AAD  3001               	movlw	1
  7860  0AAE  3189  2195         	fcall	_BUTTON_Enable
  7861                           
  7862                           ;system.c: 107: }
  7863                           
  7864                           ;system.c: 106: break;
  7865                           
  7866                           ;system.c: 105: case SYSTEM_STATE_USB_RESUME:
  7867                           
  7868                           ;system.c: 103: break;
  7869                           
  7870                           ;system.c: 102: case SYSTEM_STATE_USB_SUSPEND:
  7871                           
  7872                           ;system.c: 100: break;
  7873  0AB0  0008               	return
  7874  0AB1                     l3824:	
  7875  0AB1  0872               	movf	SYSTEM_Initialize@state,w
  7876                           
  7877                           ; Switch size 1, requested type "space"
  7878                           ; Number of cases is 3, Range of values is 0 to 2
  7879                           ; switch strategies available:
  7880                           ; Name         Instructions Cycles
  7881                           ; simple_byte           10     6 (average)
  7882                           ; direct_byte           12     6 (fixed)
  7883                           ; jumptable            260     6 (fixed)
  7884                           ;	Chosen strategy is simple_byte
  7885  0AB2  3A00               	xorlw	0	; case 0
  7886  0AB3  1903               	skipnz
  7887  0AB4  2AA3               	goto	l3816
  7888  0AB5  3A01               	xorlw	1	; case 1
  7889  0AB6  1903               	skipnz
  7890  0AB7  2ABC               	goto	l16
  7891  0AB8  3A03               	xorlw	3	; case 2
  7892  0AB9  1903               	skipnz
  7893  0ABA  2ABC               	goto	l16
  7894  0ABB  2ABC               	goto	l16
  7895  0ABC                     l16:	
  7896  0ABC  0008               	return
  7897  0ABD                     __end_of_SYSTEM_Initialize:	
  7898                           
  7899                           	psect	text29
  7900  0A53                     __ptext29:	
  7901 ;; *************** function _LED_Enable *****************
  7902 ;; Defined at:
  7903 ;;		line 220 in file "../bsp/pic16f1459/leds.c"
  7904 ;; Parameters:    Size  Location     Type
  7905 ;;  led             1    wreg     enum E2
  7906 ;; Auto vars:     Size  Location     Type
  7907 ;;  led             1    1[COMMON] enum E2
  7908 ;; Return value:  Size  Location     Type
  7909 ;;		None               void
  7910 ;; Registers used:
  7911 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7912 ;; Tracked objects:
  7913 ;;		On entry : 0/0
  7914 ;;		On exit  : 0/0
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7918 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7920 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7921 ;;Total ram usage:        1 bytes
  7922 ;; Hardware stack levels used:    1
  7923 ;; Hardware stack levels required when called:    1
  7924 ;; This function calls:
  7925 ;;		Nothing
  7926 ;; This function is called by:
  7927 ;;		_SYSTEM_Initialize
  7928 ;; This function uses a non-reentrant model
  7929 ;;
  7930                           
  7931                           
  7932                           ;psect for function _LED_Enable
  7933  0A53                     _LED_Enable:	
  7934                           
  7935                           ;incstack = 0
  7936                           ; Regs used in _LED_Enable: [wreg-fsr0h+status,2+status,0]
  7937                           ;LED_Enable@led stored from wreg
  7938  0A53  00F1               	movwf	LED_Enable@led
  7939                           
  7940                           ;leds.c: 222: switch(led)
  7941  0A54  2A61               	goto	l3588
  7942  0A55                     l395:	
  7943                           ;leds.c: 223: {
  7944                           ;leds.c: 224: case LED_D1:
  7945                           
  7946                           
  7947                           ;leds.c: 225: TRISCbits.TRISC2 = 0;
  7948  0A55  0021               	movlb	1	; select bank1
  7949  0A56  110E               	bcf	14,2	;volatile
  7950                           
  7951                           ;leds.c: 226: break;
  7952  0A57  0008               	return
  7953  0A58                     l397:	
  7954                           ;leds.c: 228: case LED_D2:
  7955                           
  7956                           
  7957                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  7958  0A58  0021               	movlb	1	; select bank1
  7959  0A59  108E               	bcf	14,1	;volatile
  7960                           
  7961                           ;leds.c: 230: break;
  7962  0A5A  0008               	return
  7963  0A5B                     l398:	
  7964                           ;leds.c: 232: case LED_D3:
  7965                           
  7966                           
  7967                           ;leds.c: 233: TRISCbits.TRISC2 = 0;
  7968  0A5B  0021               	movlb	1	; select bank1
  7969  0A5C  110E               	bcf	14,2	;volatile
  7970                           
  7971                           ;leds.c: 234: break;
  7972  0A5D  0008               	return
  7973  0A5E                     l399:	
  7974                           ;leds.c: 236: case LED_D4:
  7975                           
  7976                           
  7977                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  7978  0A5E  0021               	movlb	1	; select bank1
  7979  0A5F  118E               	bcf	14,3	;volatile
  7980                           
  7981                           ;leds.c: 242: }
  7982                           
  7983                           ;leds.c: 241: break;
  7984                           
  7985                           ;leds.c: 240: case LED_NONE:
  7986                           
  7987                           ;leds.c: 238: break;
  7988  0A60  0008               	return
  7989  0A61                     l3588:	
  7990  0A61  0871               	movf	LED_Enable@led,w
  7991                           
  7992                           ; Switch size 1, requested type "space"
  7993                           ; Number of cases is 5, Range of values is 0 to 4
  7994                           ; switch strategies available:
  7995                           ; Name         Instructions Cycles
  7996                           ; direct_byte           16     6 (fixed)
  7997                           ; simple_byte           16     9 (average)
  7998                           ; jumptable            260     6 (fixed)
  7999                           ;	Chosen strategy is direct_byte
  8000  0A62  0084               	movwf	4
  8001  0A63  3005               	movlw	5
  8002  0A64  0204               	subwf	4,w
  8003  0A65  1803               	skipnc
  8004  0A66  0008               	return
  8005  0A67  3188               	movlp	high S4758
  8006  0A68  3504               	lslf	4,w
  8007  0A69  3E26               	addlw	low S4758
  8008  0A6A  0082               	movwf	2
  8009  0A6B                     l401:	
  8010  0A6B  0008               	return
  8011  0A6C                     __end_of_LED_Enable:	
  8012                           
  8013                           	psect	swtext2
  8014  0826                     __pswtext2:	
  8015  0826                     S4758:	
  8016  0826  318A  2A6B         	ljmp	l401
  8017  0828  318A  2A55         	ljmp	l395
  8018  082A  318A  2A58         	ljmp	l397
  8019  082C  318A  2A5B         	ljmp	l398
  8020  082E  318A  2A5E         	ljmp	l399
  8021                           
  8022                           	psect	text30
  8023  0995                     __ptext30:	
  8024 ;; *************** function _BUTTON_Enable *****************
  8025 ;; Defined at:
  8026 ;;		line 85 in file "../bsp/pic16f1459/buttons.c"
  8027 ;; Parameters:    Size  Location     Type
  8028 ;;  button          1    wreg     enum E2613
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;  button          1    1[COMMON] enum E2613
  8031 ;; Return value:  Size  Location     Type
  8032 ;;		None               void
  8033 ;; Registers used:
  8034 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8035 ;; Tracked objects:
  8036 ;;		On entry : 0/0
  8037 ;;		On exit  : 0/0
  8038 ;;		Unchanged: 0/0
  8039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8041 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8043 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8044 ;;Total ram usage:        1 bytes
  8045 ;; Hardware stack levels used:    1
  8046 ;; Hardware stack levels required when called:    1
  8047 ;; This function calls:
  8048 ;;		Nothing
  8049 ;; This function is called by:
  8050 ;;		_SYSTEM_Initialize
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           
  8054                           
  8055                           ;psect for function _BUTTON_Enable
  8056  0995                     _BUTTON_Enable:	
  8057                           
  8058                           ;incstack = 0
  8059                           ; Regs used in _BUTTON_Enable: [wreg-fsr0h+status,2+status,0]
  8060                           ;BUTTON_Enable@button stored from wreg
  8061  0995  00F1               	movwf	BUTTON_Enable@button
  8062                           
  8063                           ;buttons.c: 94: }
  8064                           
  8065                           ;buttons.c: 93: break;
  8066                           
  8067                           ;buttons.c: 92: case BUTTON_NONE:
  8068                           
  8069                           ;buttons.c: 90: break;
  8070                           
  8071                           ;buttons.c: 88: {
  8072                           ;buttons.c: 89: case BUTTON_S1:
  8073                           
  8074                           ;buttons.c: 87: switch(button)
  8075  0996  0871               	movf	BUTTON_Enable@button,w
  8076                           
  8077                           ; Switch size 1, requested type "space"
  8078                           ; Number of cases is 2, Range of values is 0 to 1
  8079                           ; switch strategies available:
  8080                           ; Name         Instructions Cycles
  8081                           ; simple_byte            7     4 (average)
  8082                           ; direct_byte           10     6 (fixed)
  8083                           ; jumptable            260     6 (fixed)
  8084                           ;	Chosen strategy is simple_byte
  8085  0997  3A00               	xorlw	0	; case 0
  8086  0998  1903               	skipnz
  8087  0999  299E               	goto	l300
  8088  099A  3A01               	xorlw	1	; case 1
  8089  099B  1903               	skipnz
  8090  099C  299E               	goto	l300
  8091  099D  299E               	goto	l300
  8092  099E                     l300:	
  8093  099E  0008               	return
  8094  099F                     __end_of_BUTTON_Enable:	
  8095                           
  8096                           	psect	text31
  8097  032C                     __ptext31:	
  8098 ;; *************** function _APP_DeviceAudioMIDITasks *****************
  8099 ;; Defined at:
  8100 ;;		line 57 in file "../src/app_device_audio_midi.c"
  8101 ;; Parameters:    Size  Location     Type
  8102 ;;		None
  8103 ;; Auto vars:     Size  Location     Type
  8104 ;;  velocity        1   24[BANK0 ] unsigned char 
  8105 ;;  scan_pitch      1   23[BANK0 ] unsigned char 
  8106 ;; Return value:  Size  Location     Type
  8107 ;;		None               void
  8108 ;; Registers used:
  8109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8110 ;; Tracked objects:
  8111 ;;		On entry : 0/0
  8112 ;;		On exit  : 0/0
  8113 ;;		Unchanged: 0/0
  8114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8116 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8117 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8118 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8119 ;;Total ram usage:        8 bytes
  8120 ;; Hardware stack levels used:    1
  8121 ;; Hardware stack levels required when called:    5
  8122 ;; This function calls:
  8123 ;;		_USBTransferOnePacket
  8124 ;;		_scan_task
  8125 ;; This function is called by:
  8126 ;;		_main
  8127 ;; This function uses a non-reentrant model
  8128 ;;
  8129                           
  8130                           
  8131                           ;psect for function _APP_DeviceAudioMIDITasks
  8132  032C                     _APP_DeviceAudioMIDITasks:	
  8133                           
  8134                           ;app_device_audio_midi.c: 59: if( USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND)
  8135                           
  8136                           ;incstack = 0
  8137                           ; Regs used in _APP_DeviceAudioMIDITasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8138  032C  3020               	movlw	32
  8139  032D  0020               	movlb	0	; select bank0
  8140  032E  026C               	subwf	_USBDeviceState,w
  8141  032F  1C03               	skipc
  8142  0330  0008               	return
  8143  0331  003D               	movlb	29	; select bank29
  8144  0332  188E               	btfsc	14,1	;volatile
  8145  0333  0008               	return
  8146                           
  8147                           ;app_device_audio_midi.c: 62: if(!(USBRxHandle==0?0:((volatile BDT_ENTRY*)USBRxHandle)->
      +                          STAT.UOWN))
  8148                           
  8149                           ;app_device_audio_midi.c: 60: return;
  8150  0334  0021               	movlb	1	; select bank1
  8151  0335  0867               	movf	_USBRxHandle^(0+128),w
  8152  0336  1903               	btfsc	3,2
  8153  0337  2B46               	goto	l3952
  8154  0338  0867               	movf	_USBRxHandle^(0+128),w
  8155  0339  0086               	movwf	6
  8156  033A  0187               	clrf	7
  8157  033B  0D01               	rlf	1,w
  8158  033C  0D01               	rlf	1,w
  8159  033D  3901               	andlw	1
  8160  033E  0020               	movlb	0	; select bank0
  8161  033F  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8162  0340  01E2               	clrf	??_APP_DeviceAudioMIDITasks+1
  8163  0341  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8164  0342  00E3               	movwf	_APP_DeviceAudioMIDITasks$415
  8165  0343  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  8166  0344  00E4               	movwf	_APP_DeviceAudioMIDITasks$415+1
  8167  0345  2B49               	goto	l3954
  8168  0346                     l3952:	
  8169  0346  0020               	movlb	0	; select bank0
  8170  0347  01E3               	clrf	_APP_DeviceAudioMIDITasks$415
  8171  0348  01E4               	clrf	_APP_DeviceAudioMIDITasks$415+1
  8172  0349                     l3954:	
  8173  0349  0863               	movf	_APP_DeviceAudioMIDITasks$415,w
  8174  034A  0464               	iorwf	_APP_DeviceAudioMIDITasks$415+1,w
  8175  034B  1D03               	btfss	3,2
  8176  034C  2B5F               	goto	l3958
  8177                           
  8178                           ;app_device_audio_midi.c: 63: {
  8179                           ;app_device_audio_midi.c: 70: USBRxHandle = USBTransferOnePacket(1,0,(uint8_t*)&Received
      +                          DataBuffer,64);
  8180  034D  01F1               	clrf	USBTransferOnePacket@dir
  8181  034E  30A0               	movlw	160
  8182  034F  00F2               	movwf	USBTransferOnePacket@data
  8183  0350  3000               	movlw	0
  8184  0351  00F3               	movwf	USBTransferOnePacket@data+1
  8185  0352  3040               	movlw	64
  8186  0353  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8187  0354  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8188  0355  00F4               	movwf	USBTransferOnePacket@len
  8189  0356  3001               	movlw	1
  8190  0357  318C  24DA  3183   	fcall	_USBTransferOnePacket
  8191  035A  0020               	movlb	0	; select bank0
  8192  035B  00E2               	movwf	??_APP_DeviceAudioMIDITasks+1
  8193  035C  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  8194  035D  0021               	movlb	1	; select bank1
  8195  035E  00E7               	movwf	_USBRxHandle^(0+128)
  8196  035F                     l3958:	
  8197                           
  8198                           ;app_device_audio_midi.c: 71: }
  8199                           ;app_device_audio_midi.c: 73: {
  8200                           ;app_device_audio_midi.c: 74: uint8_t scan_pitch = 0x3C, velocity = 0;
  8201  035F  303C               	movlw	60
  8202  0360  0020               	movlb	0	; select bank0
  8203  0361  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8204  0362  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8205  0363  00E7               	movwf	APP_DeviceAudioMIDITasks@scan_pitch
  8206  0364  01E8               	clrf	APP_DeviceAudioMIDITasks@velocity
  8207                           
  8208                           ;app_device_audio_midi.c: 75: if (scan_task(&scan_pitch, &velocity)) {
  8209  0365  3068               	movlw	(low (APP_DeviceAudioMIDITasks@velocity| 0))& (0+255)
  8210  0366  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8211  0367  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8212  0368  00DB               	movwf	scan_task@velocity
  8213  0369  3067               	movlw	(low (APP_DeviceAudioMIDITasks@scan_pitch| 0))& (0+255)
  8214  036A  3184  24F0  3183   	fcall	_scan_task
  8215  036D  3A00               	xorlw	0
  8216  036E  1903               	skipnz
  8217  036F  2BA5               	goto	l3972
  8218                           
  8219                           ;app_device_audio_midi.c: 76: midiData.Val = 0;
  8220  0370  3000               	movlw	0
  8221  0371  0023               	movlb	3	; select bank3
  8222  0372  00A3               	movwf	35
  8223  0373  3000               	movlw	0
  8224  0374  00A2               	movwf	34
  8225  0375  3000               	movlw	0
  8226  0376  00A1               	movwf	33
  8227  0377  3000               	movlw	0
  8228  0378  00A0               	movwf	32
  8229                           
  8230                           ;app_device_audio_midi.c: 77: midiData.CableNumber = 0;
  8231  0379  300F               	movlw	-241
  8232  037A  05A0               	andwf	32,f
  8233                           
  8234                           ;app_device_audio_midi.c: 78: midiData.CodeIndexNumber = 0x9;
  8235  037B  0820               	movf	32,w
  8236  037C  39F0               	andlw	-16
  8237  037D  3809               	iorlw	9
  8238  037E  00A0               	movwf	32
  8239                           
  8240                           ;app_device_audio_midi.c: 79: midiData.DATA_0 = 0x90;
  8241  037F  3090               	movlw	144
  8242  0380  0020               	movlb	0	; select bank0
  8243  0381  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8244  0382  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8245  0383  0023               	movlb	3	; select bank3
  8246  0384  00A1               	movwf	33
  8247                           
  8248                           ;app_device_audio_midi.c: 80: midiData.DATA_1 = scan_pitch;
  8249  0385  0020               	movlb	0	; select bank0
  8250  0386  0867               	movf	APP_DeviceAudioMIDITasks@scan_pitch,w
  8251  0387  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8252  0388  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8253  0389  0023               	movlb	3	; select bank3
  8254  038A  00A2               	movwf	34
  8255                           
  8256                           ;app_device_audio_midi.c: 81: midiData.DATA_2 = velocity;
  8257  038B  0020               	movlb	0	; select bank0
  8258  038C  0868               	movf	APP_DeviceAudioMIDITasks@velocity,w
  8259  038D  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8260  038E  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8261  038F  0023               	movlb	3	; select bank3
  8262  0390  00A3               	movwf	35
  8263                           
  8264                           ;app_device_audio_midi.c: 82: USBTxHandle = USBTransferOnePacket(1,1,(uint8_t*)&midiData
      +                          ,4);
  8265  0391  01F1               	clrf	USBTransferOnePacket@dir
  8266  0392  0AF1               	incf	USBTransferOnePacket@dir,f
  8267  0393  30A0               	movlw	160
  8268  0394  00F2               	movwf	USBTransferOnePacket@data
  8269  0395  3001               	movlw	1
  8270  0396  00F3               	movwf	USBTransferOnePacket@data+1
  8271  0397  3004               	movlw	4
  8272  0398  0020               	movlb	0	; select bank0
  8273  0399  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8274  039A  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8275  039B  00F4               	movwf	USBTransferOnePacket@len
  8276  039C  3001               	movlw	1
  8277  039D  318C  24DA  3183   	fcall	_USBTransferOnePacket
  8278  03A0  0020               	movlb	0	; select bank0
  8279  03A1  00E2               	movwf	??_APP_DeviceAudioMIDITasks+1
  8280  03A2  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  8281  03A3  0021               	movlb	1	; select bank1
  8282  03A4  00E8               	movwf	_USBTxHandle^(0+128)
  8283  03A5                     l3972:	
  8284                           
  8285                           ;app_device_audio_midi.c: 83: }
  8286                           ;app_device_audio_midi.c: 84: }
  8287                           ;app_device_audio_midi.c: 108: if (msCounter == 0 && !sentNoteOff && !(USBTxHandle==0?0:
      +                          ((volatile BDT_ENTRY*)USBTxHandle)->STAT.UOWN)) {
  8288  03A5  0021               	movlb	1	; select bank1
  8289  03A6  086B               	movf	_msCounter^(0+128),w
  8290  03A7  1D03               	btfss	3,2
  8291  03A8  0008               	return
  8292  03A9  0022               	movlb	2	; select bank2
  8293  03AA  0865               	movf	_sentNoteOff^(0+256),w
  8294  03AB  1D03               	btfss	3,2
  8295  03AC  0008               	return
  8296  03AD  0021               	movlb	1	; select bank1
  8297  03AE  0868               	movf	_USBTxHandle^(0+128),w
  8298  03AF  1903               	btfsc	3,2
  8299  03B0  2BBF               	goto	l3980
  8300  03B1  0868               	movf	_USBTxHandle^(0+128),w
  8301  03B2  0086               	movwf	6
  8302  03B3  0187               	clrf	7
  8303  03B4  0D01               	rlf	1,w
  8304  03B5  0D01               	rlf	1,w
  8305  03B6  3901               	andlw	1
  8306  03B7  0020               	movlb	0	; select bank0
  8307  03B8  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8308  03B9  01E2               	clrf	??_APP_DeviceAudioMIDITasks+1
  8309  03BA  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8310  03BB  00E5               	movwf	_APP_DeviceAudioMIDITasks$456
  8311  03BC  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  8312  03BD  00E6               	movwf	_APP_DeviceAudioMIDITasks$456+1
  8313  03BE  2BC2               	goto	l3982
  8314  03BF                     l3980:	
  8315  03BF  0020               	movlb	0	; select bank0
  8316  03C0  01E5               	clrf	_APP_DeviceAudioMIDITasks$456
  8317  03C1  01E6               	clrf	_APP_DeviceAudioMIDITasks$456+1
  8318  03C2                     l3982:	
  8319  03C2  0865               	movf	_APP_DeviceAudioMIDITasks$456,w
  8320  03C3  0466               	iorwf	_APP_DeviceAudioMIDITasks$456+1,w
  8321  03C4  1D03               	btfss	3,2
  8322  03C5  0008               	return
  8323                           
  8324                           ;app_device_audio_midi.c: 110: msCounter = 100;
  8325  03C6  3064               	movlw	100
  8326  03C7  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8327  03C8  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8328  03C9  0021               	movlb	1	; select bank1
  8329  03CA  00EB               	movwf	_msCounter^(0+128)
  8330                           
  8331                           ;app_device_audio_midi.c: 111: midiData.Val = 0;
  8332  03CB  3000               	movlw	0
  8333  03CC  0023               	movlb	3	; select bank3
  8334  03CD  00A3               	movwf	35
  8335  03CE  3000               	movlw	0
  8336  03CF  00A2               	movwf	34
  8337  03D0  3000               	movlw	0
  8338  03D1  00A1               	movwf	33
  8339  03D2  3000               	movlw	0
  8340  03D3  00A0               	movwf	32
  8341                           
  8342                           ;app_device_audio_midi.c: 113: midiData.CableNumber = 0;
  8343  03D4  300F               	movlw	-241
  8344  03D5  05A0               	andwf	32,f
  8345                           
  8346                           ;app_device_audio_midi.c: 114: midiData.CodeIndexNumber = 0x9;
  8347  03D6  0820               	movf	32,w
  8348  03D7  39F0               	andlw	-16
  8349  03D8  3809               	iorlw	9
  8350  03D9  00A0               	movwf	32
  8351                           
  8352                           ;app_device_audio_midi.c: 115: midiData.DATA_0 = 0x90;
  8353  03DA  3090               	movlw	144
  8354  03DB  0020               	movlb	0	; select bank0
  8355  03DC  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8356  03DD  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8357  03DE  0023               	movlb	3	; select bank3
  8358  03DF  00A1               	movwf	33
  8359                           
  8360                           ;app_device_audio_midi.c: 116: midiData.DATA_1 = pitch++;
  8361  03E0  0021               	movlb	1	; select bank1
  8362  03E1  086C               	movf	_pitch^(0+128),w
  8363  03E2  0020               	movlb	0	; select bank0
  8364  03E3  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8365  03E4  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8366  03E5  0023               	movlb	3	; select bank3
  8367  03E6  00A2               	movwf	34
  8368  03E7  3001               	movlw	1
  8369  03E8  0020               	movlb	0	; select bank0
  8370  03E9  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8371  03EA  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8372  03EB  0021               	movlb	1	; select bank1
  8373  03EC  07EC               	addwf	_pitch^(0+128),f
  8374                           
  8375                           ;app_device_audio_midi.c: 117: midiData.DATA_2 = 0x00;
  8376  03ED  0023               	movlb	3	; select bank3
  8377  03EE  01A3               	clrf	35
  8378                           
  8379                           ;app_device_audio_midi.c: 119: if(pitch == 0x49)
  8380  03EF  3049               	movlw	73
  8381  03F0  0021               	movlb	1	; select bank1
  8382  03F1  066C               	xorwf	_pitch^(0+128),w
  8383  03F2  1D03               	btfss	3,2
  8384  03F3  2BFA               	goto	l3998
  8385                           
  8386                           ;app_device_audio_midi.c: 120: pitch = 0x3C;
  8387  03F4  303C               	movlw	60
  8388  03F5  0020               	movlb	0	; select bank0
  8389  03F6  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8390  03F7  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8391  03F8  0021               	movlb	1	; select bank1
  8392  03F9  00EC               	movwf	_pitch^(0+128)
  8393  03FA                     l3998:	
  8394                           
  8395                           ;app_device_audio_midi.c: 121: USBTxHandle = USBTransferOnePacket(1,1,(uint8_t*)&midiDat
      +                          a,4);
  8396  03FA  01F1               	clrf	USBTransferOnePacket@dir
  8397  03FB  0AF1               	incf	USBTransferOnePacket@dir,f
  8398  03FC  30A0               	movlw	160
  8399  03FD  00F2               	movwf	USBTransferOnePacket@data
  8400  03FE  3001               	movlw	1
  8401  03FF  00F3               	movwf	USBTransferOnePacket@data+1
  8402  0400  3004               	movlw	4
  8403  0401  0020               	movlb	0	; select bank0
  8404  0402  00E1               	movwf	??_APP_DeviceAudioMIDITasks
  8405  0403  0861               	movf	??_APP_DeviceAudioMIDITasks,w
  8406  0404  00F4               	movwf	USBTransferOnePacket@len
  8407  0405  3001               	movlw	1
  8408  0406  318C  24DA         	fcall	_USBTransferOnePacket
  8409  0408  0020               	movlb	0	; select bank0
  8410  0409  00E2               	movwf	??_APP_DeviceAudioMIDITasks+1
  8411  040A  0862               	movf	??_APP_DeviceAudioMIDITasks+1,w
  8412  040B  0021               	movlb	1	; select bank1
  8413  040C  00E8               	movwf	_USBTxHandle^(0+128)
  8414                           
  8415                           ;app_device_audio_midi.c: 122: sentNoteOff = 1;
  8416  040D  0022               	movlb	2	; select bank2
  8417  040E  01E5               	clrf	_sentNoteOff^(0+256)
  8418  040F  0AE5               	incf	_sentNoteOff^(0+256),f
  8419  0410  0008               	return
  8420  0411                     __end_of_APP_DeviceAudioMIDITasks:	
  8421                           
  8422                           	psect	text32
  8423  04F0                     __ptext32:	
  8424 ;; *************** function _scan_task *****************
  8425 ;; Defined at:
  8426 ;;		line 212 in file "../src/scan.c"
  8427 ;; Parameters:    Size  Location     Type
  8428 ;;  note            1    wreg     PTR unsigned char 
  8429 ;;		 -> APP_DeviceAudioMIDITasks@scan_pitch(1), 
  8430 ;;  velocity        1   11[BANK0 ] PTR unsigned char 
  8431 ;;		 -> APP_DeviceAudioMIDITasks@velocity(1), 
  8432 ;; Auto vars:     Size  Location     Type
  8433 ;;  note            1   16[BANK0 ] PTR unsigned char 
  8434 ;;		 -> APP_DeviceAudioMIDITasks@scan_pitch(1), 
  8435 ;; Return value:  Size  Location     Type
  8436 ;;                  1    wreg      unsigned char 
  8437 ;; Registers used:
  8438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8439 ;; Tracked objects:
  8440 ;;		On entry : 0/0
  8441 ;;		On exit  : 0/0
  8442 ;;		Unchanged: 0/0
  8443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8444 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8445 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8446 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8447 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8448 ;;Total ram usage:        7 bytes
  8449 ;; Hardware stack levels used:    1
  8450 ;; Hardware stack levels required when called:    4
  8451 ;; This function calls:
  8452 ;;		_get_adc
  8453 ;;		_get_data
  8454 ;;		_is_adc_ready
  8455 ;;		_is_end_of_scan
  8456 ;;		_run_adc
  8457 ;;		_scan_init
  8458 ;;		_set_clock_and_data
  8459 ;;		_set_timer
  8460 ;;		_store_key_level
  8461 ;;		_waiting_for_timer
  8462 ;; This function is called by:
  8463 ;;		_APP_DeviceAudioMIDITasks
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467                           
  8468                           ;psect for function _scan_task
  8469  04F0                     _scan_task:	
  8470                           
  8471                           ;incstack = 0
  8472                           ; Regs used in _scan_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8473                           ;scan_task@note stored from wreg
  8474  04F0  0020               	movlb	0	; select bank0
  8475  04F1  00E0               	movwf	scan_task@note
  8476                           
  8477                           ;scan.c: 213: static uint8_t state = S_INIT;
  8478                           ;scan.c: 215: note_event.pitch = note_event.velocity = 0;
  8479  04F2  0022               	movlb	2	; select bank2
  8480  04F3  01D7               	clrf	(_note_event^(0+256)+1)
  8481  04F4  01D6               	clrf	_note_event^(0+256)
  8482                           
  8483                           ;scan.c: 216: *note = *velocity = 0;
  8484  04F5  0020               	movlb	0	; select bank0
  8485  04F6  085B               	movf	scan_task@velocity,w
  8486  04F7  0086               	movwf	6
  8487  04F8  0187               	clrf	7
  8488  04F9  0181               	clrf	1
  8489  04FA  0860               	movf	scan_task@note,w
  8490  04FB  0086               	movwf	6
  8491  04FC  0187               	clrf	7
  8492  04FD  0181               	clrf	1
  8493                           
  8494                           ;scan.c: 218: if (!is_initialized)
  8495  04FE  0022               	movlb	2	; select bank2
  8496  04FF  0863               	movf	_is_initialized^(0+256),w
  8497  0500  1D03               	btfss	3,2
  8498  0501  2D05               	goto	l266
  8499                           
  8500                           ;scan.c: 219: scan_init();
  8501  0502  318A  22BD  3184   	fcall	_scan_init
  8502  0505                     l266:	
  8503                           
  8504                           ;scan.c: 221: if (waiting_for_timer()) return 0;
  8505  0505  3189  21AA  3184   	fcall	_waiting_for_timer
  8506  0508  3A00               	xorlw	0
  8507  0509  1903               	skipnz
  8508  050A  2D78               	goto	l3722
  8509  050B  3000               	movlw	0
  8510  050C  0008               	return
  8511  050D                     l3690:	
  8512                           ;scan.c: 224: case(S_INIT):
  8513                           
  8514                           ;scan.c: 223: switch(state) {
  8515                           
  8516                           
  8517                           ;scan.c: 225: set_clock_and_data(0,1);
  8518  050D  01F1               	clrf	set_clock_and_data@d
  8519  050E  0AF1               	incf	set_clock_and_data@d,f
  8520  050F  3000               	movlw	0
  8521  0510  3189  21B5  3184   	fcall	_set_clock_and_data
  8522                           
  8523                           ;scan.c: 226: state = S_GO;
  8524  0513  0022               	movlb	2	; select bank2
  8525  0514  01E8               	clrf	scan_task@state^(0+256)
  8526  0515  0AE8               	incf	scan_task@state^(0+256),f
  8527                           
  8528                           ;scan.c: 227: set_timer();
  8529  0516  3189  219F  3184   	fcall	_set_timer
  8530                           
  8531                           ;scan.c: 228: break;
  8532  0519  2D83               	goto	l3724
  8533  051A                     l3696:	
  8534                           ;scan.c: 230: case(S_GO):
  8535                           
  8536                           
  8537                           ;scan.c: 231: set_clock_and_data(0,1);
  8538  051A  01F1               	clrf	set_clock_and_data@d
  8539  051B  0AF1               	incf	set_clock_and_data@d,f
  8540  051C  3000               	movlw	0
  8541  051D  3189  21B5  3184   	fcall	_set_clock_and_data
  8542                           
  8543                           ;scan.c: 232: state = S_CLOCK_RAISE;
  8544  0520  3002               	movlw	2
  8545  0521  00FB               	movwf	??_scan_task
  8546  0522  087B               	movf	??_scan_task,w
  8547  0523  0022               	movlb	2	; select bank2
  8548  0524  00E8               	movwf	scan_task@state^(0+256)
  8549                           
  8550                           ;scan.c: 233: set_timer();
  8551  0525  3189  219F  3184   	fcall	_set_timer
  8552                           
  8553                           ;scan.c: 234: break;
  8554  0528  2D83               	goto	l3724
  8555  0529                     l3700:	
  8556                           ;scan.c: 236: case(S_CLOCK_RAISE):
  8557                           
  8558                           
  8559                           ;scan.c: 237: set_clock_and_data(1, get_data());
  8560  0529  3189  2175  3184   	fcall	_get_data
  8561  052C  00FB               	movwf	??_scan_task
  8562  052D  087B               	movf	??_scan_task,w
  8563  052E  00F1               	movwf	set_clock_and_data@d
  8564  052F  3001               	movlw	1
  8565  0530  3189  21B5  3184   	fcall	_set_clock_and_data
  8566                           
  8567                           ;scan.c: 238: state = S_CLOCK_FALL;
  8568  0533  3003               	movlw	3
  8569  0534  00FB               	movwf	??_scan_task
  8570  0535  087B               	movf	??_scan_task,w
  8571  0536  0022               	movlb	2	; select bank2
  8572  0537  00E8               	movwf	scan_task@state^(0+256)
  8573                           
  8574                           ;scan.c: 239: set_timer();
  8575  0538  3189  219F  3184   	fcall	_set_timer
  8576                           
  8577                           ;scan.c: 240: break;
  8578  053B  2D83               	goto	l3724
  8579  053C                     l3704:	
  8580                           ;scan.c: 242: case(S_CLOCK_FALL):
  8581                           
  8582                           
  8583                           ;scan.c: 243: set_clock_and_data(0,0);
  8584  053C  01F1               	clrf	set_clock_and_data@d
  8585  053D  3000               	movlw	0
  8586  053E  3189  21B5  3184   	fcall	_set_clock_and_data
  8587                           
  8588                           ;scan.c: 244: run_adc();
  8589  0541  3189  2187  3184   	fcall	_run_adc
  8590                           
  8591                           ;scan.c: 245: state = S_ADC_WAIT;
  8592  0544  3004               	movlw	4
  8593  0545  00FB               	movwf	??_scan_task
  8594  0546  087B               	movf	??_scan_task,w
  8595  0547  0022               	movlb	2	; select bank2
  8596  0548  00E8               	movwf	scan_task@state^(0+256)
  8597                           
  8598                           ;scan.c: 246: set_timer();
  8599  0549  3189  219F  3184   	fcall	_set_timer
  8600                           
  8601                           ;scan.c: 247: break;
  8602  054C  2D83               	goto	l3724
  8603  054D                     l3708:	
  8604                           ;scan.c: 249: case(S_ADC_WAIT):
  8605                           
  8606                           
  8607                           ;scan.c: 250: state = (is_adc_ready()? S_ADC_READ : S_ADC_WAIT);
  8608  054D  3189  2180  3184   	fcall	_is_adc_ready
  8609  0550  3A00               	xorlw	0
  8610  0551  1D03               	skipz
  8611  0552  2D55               	goto	l3712
  8612  0553  3004               	movlw	4
  8613  0554  2D56               	goto	L10
  8614  0555                     l3712:	
  8615  0555  3005               	movlw	5
  8616  0556                     L10:	
  8617  0556  0020               	movlb	0	; select bank0
  8618  0557  00DC               	movwf	_scan_task$870
  8619  0558  3000               	movlw	0
  8620  0559  00DD               	movwf	_scan_task$870+1
  8621  055A  085C               	movf	_scan_task$870,w
  8622  055B  2D73               	goto	L11
  8623  055C                     l3714:	
  8624                           ;scan.c: 253: case(S_ADC_READ):
  8625                           
  8626                           ;scan.c: 251: break;
  8627                           
  8628                           
  8629                           ;scan.c: 254: state = (store_key_level(get_adc(), is_end_of_scan())? S_GO : S_CLOCK_RAIS
      +                          E);
  8630  055C  3189  21C7  3184   	fcall	_is_end_of_scan
  8631  055F  00FB               	movwf	??_scan_task
  8632  0560  087B               	movf	??_scan_task,w
  8633  0561  00F7               	movwf	store_key_level@end_of_scan
  8634  0562  3189  2172  3184   	fcall	_get_adc
  8635  0565  318B  2356  3184   	fcall	_store_key_level
  8636  0568  3A00               	xorlw	0
  8637  0569  1D03               	skipz
  8638  056A  2D6D               	goto	l3718
  8639  056B  3002               	movlw	2
  8640  056C  2D6E               	goto	L12
  8641  056D                     l3718:	
  8642  056D  3001               	movlw	1
  8643  056E                     L12:	
  8644  056E  0020               	movlb	0	; select bank0
  8645  056F  00DE               	movwf	_scan_task$874
  8646  0570  3000               	movlw	0
  8647  0571  00DF               	movwf	_scan_task$874+1
  8648  0572  085E               	movf	_scan_task$874,w
  8649  0573                     L11:	
  8650  0573  00FB               	movwf	??_scan_task
  8651  0574  087B               	movf	??_scan_task,w
  8652  0575  0022               	movlb	2	; select bank2
  8653  0576  00E8               	movwf	scan_task@state^(0+256)
  8654                           
  8655                           ;scan.c: 256: }
  8656                           
  8657                           ;scan.c: 255: break;
  8658  0577  2D83               	goto	l3724
  8659  0578                     l3722:	
  8660  0578  0022               	movlb	2	; select bank2
  8661  0579  0868               	movf	scan_task@state^(0+256),w
  8662                           
  8663                           ; Switch size 1, requested type "space"
  8664                           ; Number of cases is 6, Range of values is 0 to 5
  8665                           ; switch strategies available:
  8666                           ; Name         Instructions Cycles
  8667                           ; direct_byte           18     6 (fixed)
  8668                           ; simple_byte           19    10 (average)
  8669                           ; jumptable            260     6 (fixed)
  8670                           ;	Chosen strategy is direct_byte
  8671  057A  0084               	movwf	4
  8672  057B  3006               	movlw	6
  8673  057C  0204               	subwf	4,w
  8674  057D  1803               	skipnc
  8675  057E  2D83               	goto	l3724
  8676  057F  3188               	movlp	high S4760
  8677  0580  3504               	lslf	4,w
  8678  0581  3E1A               	addlw	low S4760
  8679  0582  0082               	movwf	2
  8680  0583                     l3724:	
  8681                           
  8682                           ;scan.c: 258: *note = note_event.pitch;
  8683  0583  0022               	movlb	2	; select bank2
  8684  0584  0856               	movf	_note_event^(0+256),w
  8685  0585  00FB               	movwf	??_scan_task
  8686  0586  0020               	movlb	0	; select bank0
  8687  0587  0860               	movf	scan_task@note,w
  8688  0588  0086               	movwf	6
  8689  0589  0187               	clrf	7
  8690  058A  087B               	movf	??_scan_task,w
  8691  058B  0081               	movwf	1
  8692                           
  8693                           ;scan.c: 259: *velocity = note_event.velocity;
  8694  058C  0022               	movlb	2	; select bank2
  8695  058D  0857               	movf	(_note_event^(0+256)+1),w
  8696  058E  00FB               	movwf	??_scan_task
  8697  058F  0020               	movlb	0	; select bank0
  8698  0590  085B               	movf	scan_task@velocity,w
  8699  0591  0086               	movwf	6
  8700  0592  0187               	clrf	7
  8701  0593  087B               	movf	??_scan_task,w
  8702  0594  0081               	movwf	1
  8703                           
  8704                           ;scan.c: 260: return !! note_event.pitch;
  8705  0595  0022               	movlb	2	; select bank2
  8706  0596  0856               	movf	_note_event^(0+256),w
  8707  0597  1903               	btfsc	3,2
  8708  0598  2D9B               	goto	u3160
  8709  0599  3001               	movlw	1
  8710  059A  0008               	return
  8711  059B                     u3160:	
  8712  059B  3000               	movlw	0
  8713  059C  0008               	return
  8714  059D                     __end_of_scan_task:	
  8715                           
  8716                           	psect	swtext3
  8717  081A                     __pswtext3:	
  8718  081A                     S4760:	
  8719  081A  3185  2D0D         	ljmp	l3690
  8720  081C  3185  2D1A         	ljmp	l3696
  8721  081E  3185  2D29         	ljmp	l3700
  8722  0820  3185  2D3C         	ljmp	l3704
  8723  0822  3185  2D4D         	ljmp	l3708
  8724  0824  3185  2D5C         	ljmp	l3714
  8725                           
  8726                           	psect	text33
  8727  09AA                     __ptext33:	
  8728 ;; *************** function _waiting_for_timer *****************
  8729 ;; Defined at:
  8730 ;;		line 64 in file "../src/scan.c"
  8731 ;; Parameters:    Size  Location     Type
  8732 ;;		None
  8733 ;; Auto vars:     Size  Location     Type
  8734 ;;		None
  8735 ;; Return value:  Size  Location     Type
  8736 ;;                  1    wreg      unsigned char 
  8737 ;; Registers used:
  8738 ;;		wreg, status,2, status,0
  8739 ;; Tracked objects:
  8740 ;;		On entry : 0/0
  8741 ;;		On exit  : 0/0
  8742 ;;		Unchanged: 0/0
  8743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8745 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8747 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8748 ;;Total ram usage:        1 bytes
  8749 ;; Hardware stack levels used:    1
  8750 ;; Hardware stack levels required when called:    1
  8751 ;; This function calls:
  8752 ;;		Nothing
  8753 ;; This function is called by:
  8754 ;;		_scan_task
  8755 ;; This function uses a non-reentrant model
  8756 ;;
  8757                           
  8758                           
  8759                           ;psect for function _waiting_for_timer
  8760  09AA                     _waiting_for_timer:	
  8761                           
  8762                           ;scan.c: 65: return (wait_timer = wait_timer && !INTCONbits.TMR0IF);
  8763                           
  8764                           ;incstack = 0
  8765                           ; Regs used in _waiting_for_timer: [wreg+status,2+status,0]
  8766  09AA  01F1               	clrf	_waiting_for_timer$814
  8767  09AB  0022               	movlb	2	; select bank2
  8768  09AC  0866               	movf	_wait_timer^(0+256),w
  8769  09AD  1D03               	btfss	3,2
  8770  09AE  190B               	btfsc	11,2	;volatile
  8771  09AF  29B2               	goto	l3458
  8772  09B0  01F1               	clrf	_waiting_for_timer$814
  8773  09B1  0AF1               	incf	_waiting_for_timer$814,f
  8774  09B2                     l3458:	
  8775  09B2  0871               	movf	_waiting_for_timer$814,w
  8776  09B3  00E6               	movwf	_wait_timer^(0+256)
  8777  09B4  0008               	return
  8778  09B5                     __end_of_waiting_for_timer:	
  8779                           
  8780                           	psect	text34
  8781  0B56                     __ptext34:	
  8782 ;; *************** function _store_key_level *****************
  8783 ;; Defined at:
  8784 ;;		line 194 in file "../src/scan.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;  level           1    wreg     unsigned char 
  8787 ;;  end_of_scan     1    7[COMMON] unsigned char 
  8788 ;; Auto vars:     Size  Location     Type
  8789 ;;  level           1   10[COMMON] unsigned char 
  8790 ;; Return value:  Size  Location     Type
  8791 ;;                  1    wreg      unsigned char 
  8792 ;; Registers used:
  8793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8794 ;; Tracked objects:
  8795 ;;		On entry : 0/0
  8796 ;;		On exit  : 0/0
  8797 ;;		Unchanged: 0/0
  8798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8799 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8800 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8801 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8802 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8803 ;;Total ram usage:        4 bytes
  8804 ;; Hardware stack levels used:    1
  8805 ;; Hardware stack levels required when called:    3
  8806 ;; This function calls:
  8807 ;;		_process_level
  8808 ;; This function is called by:
  8809 ;;		_scan_task
  8810 ;; This function uses a non-reentrant model
  8811 ;;
  8812                           
  8813                           
  8814                           ;psect for function _store_key_level
  8815  0B56                     _store_key_level:	
  8816                           
  8817                           ;incstack = 0
  8818                           ; Regs used in _store_key_level: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8819                           ;store_key_level@level stored from wreg
  8820  0B56  00FA               	movwf	store_key_level@level
  8821                           
  8822                           ;scan.c: 195: static uint8_t idx_key = 0;
  8823                           ;scan.c: 196: process_level(idx_key, adc_levels[idx_key], level);
  8824  0B57  0020               	movlb	0	; select bank0
  8825  0B58  086E               	movf	store_key_level@idx_key,w
  8826  0B59  3E20               	addlw	(low (_adc_levels| (0+512)))& (0+255)
  8827  0B5A  0086               	movwf	6
  8828  0B5B  3002               	movlw	2	; select bank4/5
  8829  0B5C  0087               	movwf	7
  8830  0B5D  0801               	movf	1,w
  8831  0B5E  00F8               	movwf	??_store_key_level
  8832  0B5F  0878               	movf	??_store_key_level,w
  8833  0B60  00F2               	movwf	process_level@old_level
  8834  0B61  087A               	movf	store_key_level@level,w
  8835  0B62  00F9               	movwf	??_store_key_level+1
  8836  0B63  0879               	movf	??_store_key_level+1,w
  8837  0B64  00F3               	movwf	process_level@new_level
  8838  0B65  086E               	movf	store_key_level@idx_key,w
  8839  0B66  3184  2411  318B   	fcall	_process_level
  8840                           
  8841                           ;scan.c: 197: adc_levels[idx_key] = level;
  8842  0B69  087A               	movf	store_key_level@level,w
  8843  0B6A  00F8               	movwf	??_store_key_level
  8844  0B6B  0020               	movlb	0	; select bank0
  8845  0B6C  086E               	movf	store_key_level@idx_key,w
  8846  0B6D  3E20               	addlw	(low (_adc_levels| (0+512)))& (0+255)
  8847  0B6E  0086               	movwf	6
  8848  0B6F  3002               	movlw	2	; select bank4/5
  8849  0B70  0087               	movwf	7
  8850  0B71  0878               	movf	??_store_key_level,w
  8851  0B72  0081               	movwf	1
  8852                           
  8853                           ;scan.c: 198: idx_key ++;
  8854  0B73  3001               	movlw	1
  8855  0B74  00F8               	movwf	??_store_key_level
  8856  0B75  0878               	movf	??_store_key_level,w
  8857  0B76  07EE               	addwf	store_key_level@idx_key,f
  8858                           
  8859                           ;scan.c: 199: if (idx_key >= N_KEYS || end_of_scan) idx_key = 0;
  8860  0B77  3027               	movlw	39
  8861  0B78  026E               	subwf	store_key_level@idx_key,w
  8862  0B79  1803               	skipnc
  8863  0B7A  2B7E               	goto	l3500
  8864  0B7B  0877               	movf	store_key_level@end_of_scan,w
  8865  0B7C  1903               	btfsc	3,2
  8866  0B7D  2B7F               	goto	l3502
  8867  0B7E                     l3500:	
  8868  0B7E  01EE               	clrf	store_key_level@idx_key
  8869  0B7F                     l3502:	
  8870                           
  8871                           ;scan.c: 200: return idx_key == 0;
  8872  0B7F  086E               	movf	store_key_level@idx_key,w
  8873  0B80  1D03               	btfss	3,2
  8874  0B81  2B84               	goto	u2940
  8875  0B82  3001               	movlw	1
  8876  0B83  0008               	return
  8877  0B84                     u2940:	
  8878  0B84  3000               	movlw	0
  8879  0B85  0008               	return
  8880  0B86                     __end_of_store_key_level:	
  8881                           
  8882                           	psect	text35
  8883  0411                     __ptext35:	
  8884 ;; *************** function _process_level *****************
  8885 ;; Defined at:
  8886 ;;		line 145 in file "../src/scan.c"
  8887 ;; Parameters:    Size  Location     Type
  8888 ;;  idx_key         1    wreg     unsigned char 
  8889 ;;  old_level       1    2[COMMON] const unsigned char 
  8890 ;;  new_level       1    3[COMMON] const unsigned char 
  8891 ;; Auto vars:     Size  Location     Type
  8892 ;;  idx_key         1   10[BANK0 ] unsigned char 
  8893 ;;  filtered_sta    1    9[BANK0 ] unsigned char 
  8894 ;;  on_flag         1    8[BANK0 ] unsigned char 
  8895 ;;  off_flag        1    6[BANK0 ] unsigned char 
  8896 ;;  current_stat    2    2[BANK0 ] int 
  8897 ;;  old_state       2    0[BANK0 ] int 
  8898 ;; Return value:  Size  Location     Type
  8899 ;;		None               void
  8900 ;; Registers used:
  8901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8902 ;; Tracked objects:
  8903 ;;		On entry : 0/0
  8904 ;;		On exit  : 0/0
  8905 ;;		Unchanged: 0/0
  8906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8907 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8908 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8909 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8910 ;;      Totals:         5      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8911 ;;Total ram usage:       16 bytes
  8912 ;; Hardware stack levels used:    1
  8913 ;; Hardware stack levels required when called:    2
  8914 ;; This function calls:
  8915 ;;		_LED_Off
  8916 ;;		_LED_On
  8917 ;; This function is called by:
  8918 ;;		_store_key_level
  8919 ;; This function uses a non-reentrant model
  8920 ;;
  8921                           
  8922                           
  8923                           ;psect for function _process_level
  8924  0411                     _process_level:	
  8925                           
  8926                           ;incstack = 0
  8927                           ; Regs used in _process_level: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8928                           ;process_level@idx_key stored from wreg
  8929  0411  0020               	movlb	0	; select bank0
  8930  0412  00DA               	movwf	process_level@idx_key
  8931                           
  8932                           ;scan.c: 146: static const uint8_t L = 0x0A;
  8933                           ;scan.c: 147: static const uint8_t idx_midi_map[N_KEYS] = {
  8934                           ;scan.c: 148: 63, 24, 24, 24, 24, 71, 24, 24, 24, 24, 24,
  8935                           ;scan.c: 149: 24, 24, 68, 69, 70, 49, 50, 24, 24, 48, 65,
  8936                           ;scan.c: 150: 66, 67, 24, 24, 54, 56, 52, 59, 61, 64, 51,
  8937                           ;scan.c: 151: 53, 55, 57, 58, 60, 62
  8938                           ;scan.c: 152: };
  8939                           ;scan.c: 153: static bool key_states[N_KEYS] = {0, };
  8940                           ;scan.c: 154: static const uint8_t midi_shift = 0;
  8941                           ;scan.c: 155: static const uint8_t
  8942                           ;scan.c: 156: key_off_threshold = 5,
  8943                           ;scan.c: 157: key_on_threshold = 7;
  8944  0413  3070               	movlw	low (process_level@L| (0+32768))
  8945  0414  0084               	movwf	4
  8946  0415  3081               	movlw	high (process_level@L| (0+32768))
  8947  0416  0085               	movwf	5
  8948  0417  0800               	movf	0,w	;code access
  8949  0418  00F4               	movwf	??_process_level
  8950  0419  0872               	movf	process_level@old_level,w
  8951  041A  0274               	subwf	??_process_level,w
  8952  041B  1803               	btfsc	3,0
  8953  041C  2C1F               	goto	u2520
  8954  041D  3001               	movlw	1
  8955  041E  2C20               	goto	u2530
  8956  041F                     u2520:	
  8957  041F  3000               	movlw	0
  8958  0420                     u2530:	
  8959  0420  00F5               	movwf	??_process_level+1
  8960  0421  01F6               	clrf	??_process_level+2
  8961  0422  0875               	movf	??_process_level+1,w
  8962  0423  00D0               	movwf	process_level@old_state
  8963  0424  0876               	movf	??_process_level+2,w
  8964  0425  00D1               	movwf	process_level@old_state+1
  8965                           
  8966                           ;scan.c: 163: int current_state = (new_level > L);
  8967  0426  3070               	movlw	low (process_level@L| (0+32768))
  8968  0427  0084               	movwf	4
  8969  0428  3081               	movlw	high (process_level@L| (0+32768))
  8970  0429  0085               	movwf	5
  8971  042A  0800               	movf	0,w	;code access
  8972  042B  00F4               	movwf	??_process_level
  8973  042C  0873               	movf	process_level@new_level,w
  8974  042D  0274               	subwf	??_process_level,w
  8975  042E  1803               	btfsc	3,0
  8976  042F  2C32               	goto	u2540
  8977  0430  3001               	movlw	1
  8978  0431  2C33               	goto	u2550
  8979  0432                     u2540:	
  8980  0432  3000               	movlw	0
  8981  0433                     u2550:	
  8982  0433  00F5               	movwf	??_process_level+1
  8983  0434  01F6               	clrf	??_process_level+2
  8984  0435  0875               	movf	??_process_level+1,w
  8985  0436  00D2               	movwf	process_level@current_state
  8986  0437  0876               	movf	??_process_level+2,w
  8987  0438  00D3               	movwf	process_level@current_state+1
  8988                           
  8989                           ;scan.c: 165: note_event.pitch = 0;
  8990  0439  0022               	movlb	2	; select bank2
  8991  043A  01D6               	clrf	_note_event^(0+256)
  8992                           
  8993                           ;scan.c: 166: note_event.velocity = 0;
  8994  043B  01D7               	clrf	(_note_event^(0+256)+1)
  8995                           
  8996                           ;scan.c: 168: if (current_state) {
  8997  043C  0020               	movlb	0	; select bank0
  8998  043D  0852               	movf	process_level@current_state,w
  8999  043E  0453               	iorwf	process_level@current_state+1,w
  9000  043F  1903               	btfsc	3,2
  9001  0440  2C4E               	goto	l3240
  9002                           
  9003                           ;scan.c: 169: key_off_counter[idx_key] = 0;
  9004  0441  085A               	movf	process_level@idx_key,w
  9005  0442  3EA4               	addlw	(low (process_level@key_off_counter| (0+256)))& (0+255)
  9006  0443  0086               	movwf	6
  9007  0444  3001               	movlw	1	; select bank3/4
  9008  0445  0087               	movwf	7
  9009  0446  0181               	clrf	1
  9010                           
  9011                           ;scan.c: 170: key_on_counter [idx_key] ++;
  9012  0447  3001               	movlw	1
  9013  0448  00F4               	movwf	??_process_level
  9014  0449  085A               	movf	process_level@idx_key,w
  9015  044A  3E47               	addlw	(low (process_level@key_on_counter| (0+512)))& (0+255)
  9016  044B  0086               	movwf	6
  9017  044C  3002               	movlw	2	; select bank4/5
  9018  044D  2C5A               	goto	L13
  9019  044E                     l3240:	
  9020                           ;scan.c: 171: }
  9021                           
  9022                           
  9023                           ;scan.c: 172: else {
  9024                           ;scan.c: 173: key_on_counter[idx_key] = 0;
  9025  044E  085A               	movf	process_level@idx_key,w
  9026  044F  3E47               	addlw	(low (process_level@key_on_counter| (0+512)))& (0+255)
  9027  0450  0086               	movwf	6
  9028  0451  3002               	movlw	2	; select bank4/5
  9029  0452  0087               	movwf	7
  9030  0453  0181               	clrf	1
  9031                           
  9032                           ;scan.c: 174: key_off_counter [idx_key] ++;
  9033  0454  3001               	movlw	1
  9034  0455  00F4               	movwf	??_process_level
  9035  0456  085A               	movf	process_level@idx_key,w
  9036  0457  3EA4               	addlw	(low (process_level@key_off_counter| (0+256)))& (0+255)
  9037  0458  0086               	movwf	6
  9038  0459  3001               	movlw	1	; select bank3/4
  9039  045A                     L13:	
  9040  045A  0087               	movwf	7
  9041  045B  0874               	movf	??_process_level,w
  9042  045C  0781               	addwf	1,f
  9043                           
  9044                           ;scan.c: 175: }
  9045                           ;scan.c: 177: {
  9046                           ;scan.c: 178: bool
  9047                           ;scan.c: 179: on_flag = key_on_counter [idx_key] >= key_on_threshold,
  9048  045D  085A               	movf	process_level@idx_key,w
  9049  045E  3E47               	addlw	(low (process_level@key_on_counter| (0+512)))& (0+255)
  9050  045F  0086               	movwf	6
  9051  0460  3002               	movlw	2	; select bank4/5
  9052  0461  0087               	movwf	7
  9053  0462  3072               	movlw	low (process_level@key_on_threshold| (0+32768))
  9054  0463  0084               	movwf	4
  9055  0464  3081               	movlw	high (process_level@key_on_threshold| (0+32768))
  9056  0465  0085               	movwf	5
  9057  0466  0800               	movf	0,w	;code access
  9058  0467  0201               	subwf	1,w
  9059  0468  1C03               	btfss	3,0
  9060  0469  2C6C               	goto	u2570
  9061  046A  3001               	movlw	1
  9062  046B  2C6D               	goto	u2580
  9063  046C                     u2570:	
  9064  046C  3000               	movlw	0
  9065  046D                     u2580:	
  9066  046D  00F4               	movwf	??_process_level
  9067  046E  0874               	movf	??_process_level,w
  9068  046F  00D8               	movwf	process_level@on_flag
  9069                           
  9070                           ;scan.c: 180: off_flag = key_off_counter[idx_key] >= key_off_threshold,
  9071  0470  085A               	movf	process_level@idx_key,w
  9072  0471  3EA4               	addlw	(low (process_level@key_off_counter| (0+256)))& (0+255)
  9073  0472  0086               	movwf	6
  9074  0473  3001               	movlw	1	; select bank3/4
  9075  0474  0087               	movwf	7
  9076  0475  3071               	movlw	low (process_level@key_off_threshold| (0+32768))
  9077  0476  0084               	movwf	4
  9078  0477  3081               	movlw	high (process_level@key_off_threshold| (0+32768))
  9079  0478  0085               	movwf	5
  9080  0479  0800               	movf	0,w	;code access
  9081  047A  0201               	subwf	1,w
  9082  047B  1C03               	btfss	3,0
  9083  047C  2C7F               	goto	u2590
  9084  047D  3001               	movlw	1
  9085  047E  2C80               	goto	u2600
  9086  047F                     u2590:	
  9087  047F  3000               	movlw	0
  9088  0480                     u2600:	
  9089  0480  00F4               	movwf	??_process_level
  9090  0481  0874               	movf	??_process_level,w
  9091  0482  00D6               	movwf	process_level@off_flag
  9092                           
  9093                           ;scan.c: 181: filtered_state = on_flag || !on_flag && !off_flag && key_states[idx_key];
  9094  0483  01D7               	clrf	_process_level$851
  9095  0484  0AD7               	incf	_process_level$851,f
  9096  0485  0858               	movf	process_level@on_flag,w
  9097  0486  1D03               	btfss	3,2
  9098  0487  2C96               	goto	l3258
  9099  0488  0858               	movf	process_level@on_flag,w
  9100  0489  1D03               	btfss	3,2
  9101  048A  2C95               	goto	l3256
  9102  048B  0856               	movf	process_level@off_flag,w
  9103  048C  1D03               	btfss	3,2
  9104  048D  2C95               	goto	l3256
  9105  048E  085A               	movf	process_level@idx_key,w
  9106  048F  3E20               	addlw	(low (process_level@key_states| (0+256)))& (0+255)
  9107  0490  0086               	movwf	6
  9108  0491  3001               	movlw	1	; select bank2/3
  9109  0492  0087               	movwf	7
  9110  0493  0801               	movf	1,w
  9111  0494  1903               	btfsc	3,2
  9112  0495                     l3256:	
  9113  0495  01D7               	clrf	_process_level$851
  9114  0496                     l3258:	
  9115  0496  0857               	movf	_process_level$851,w
  9116  0497  00F4               	movwf	??_process_level
  9117  0498  0874               	movf	??_process_level,w
  9118  0499  00D9               	movwf	process_level@filtered_state
  9119                           
  9120                           ;scan.c: 183: if (!key_states[idx_key] != !filtered_state) {
  9121  049A  0859               	movf	process_level@filtered_state,w
  9122  049B  1D03               	btfss	3,2
  9123  049C  2C9F               	goto	u2650
  9124  049D  3001               	movlw	1
  9125  049E  2CA0               	goto	u2652
  9126  049F                     u2650:	
  9127  049F  3000               	movlw	0
  9128  04A0                     u2652:	
  9129  04A0  00F4               	movwf	??_process_level
  9130  04A1  085A               	movf	process_level@idx_key,w
  9131  04A2  3E20               	addlw	(low (process_level@key_states| (0+256)))& (0+255)
  9132  04A3  0086               	movwf	6
  9133  04A4  3001               	movlw	1	; select bank2/3
  9134  04A5  0087               	movwf	7
  9135  04A6  0801               	movf	1,w
  9136  04A7  1D03               	btfss	3,2
  9137  04A8  2CAB               	goto	u2660
  9138  04A9  3001               	movlw	1
  9139  04AA  2CAC               	goto	u2662
  9140  04AB                     u2660:	
  9141  04AB  3000               	movlw	0
  9142  04AC                     u2662:	
  9143  04AC  0674               	xorwf	??_process_level,w
  9144  04AD  1903               	skipnz
  9145  04AE  2CE5               	goto	l3278
  9146                           
  9147                           ;scan.c: 184: note_event.pitch = midi_shift + idx_midi_map[idx_key];
  9148  04AF  3073               	movlw	low (process_level@midi_shift| (0+32768))
  9149  04B0  0084               	movwf	4
  9150  04B1  3081               	movlw	high (process_level@midi_shift| (0+32768))
  9151  04B2  0085               	movwf	5
  9152  04B3  0800               	movf	0,w	;code access
  9153  04B4  00F4               	movwf	??_process_level
  9154  04B5  085A               	movf	process_level@idx_key,w
  9155  04B6  3E41               	addlw	low (process_level@idx_midi_map| (0+32768))
  9156  04B7  0084               	movwf	4
  9157  04B8  3081               	movlw	high (process_level@idx_midi_map| (0+32768))
  9158  04B9  1803               	skipnc
  9159  04BA  3E01               	addlw	1
  9160  04BB  0085               	movwf	5
  9161  04BC  0800               	movf	0,w	;code access
  9162  04BD  0774               	addwf	??_process_level,w
  9163  04BE  00F5               	movwf	??_process_level+1
  9164  04BF  0875               	movf	??_process_level+1,w
  9165  04C0  0022               	movlb	2	; select bank2
  9166  04C1  00D6               	movwf	_note_event^(0+256)
  9167                           
  9168                           ;scan.c: 185: note_event.velocity = (filtered_state? (new_level * 2 + 5): 0);
  9169  04C2  0020               	movlb	0	; select bank0
  9170  04C3  0859               	movf	process_level@filtered_state,w
  9171  04C4  1D03               	btfss	3,2
  9172  04C5  2CC9               	goto	l3268
  9173  04C6  01D4               	clrf	_process_level$852
  9174  04C7  01D5               	clrf	_process_level$852+1
  9175  04C8  2CD4               	goto	l3270
  9176  04C9                     l3268:	
  9177  04C9  0873               	movf	process_level@new_level,w
  9178  04CA  00F4               	movwf	??_process_level
  9179  04CB  01F5               	clrf	??_process_level+1
  9180  04CC  35F4               	lslf	??_process_level,f
  9181  04CD  0DF5               	rlf	??_process_level+1,f
  9182  04CE  0874               	movf	??_process_level,w
  9183  04CF  3E05               	addlw	5
  9184  04D0  00D4               	movwf	_process_level$852
  9185  04D1  3000               	movlw	0
  9186  04D2  3D75               	addwfc	??_process_level+1,w
  9187  04D3  00D5               	movwf	_process_level$852+1
  9188  04D4                     l3270:	
  9189  04D4  0854               	movf	_process_level$852,w
  9190  04D5  00F4               	movwf	??_process_level
  9191  04D6  0874               	movf	??_process_level,w
  9192  04D7  0022               	movlb	2	; select bank2
  9193  04D8  00D7               	movwf	(_note_event^(0+256)+1)
  9194                           
  9195                           ;scan.c: 186: if (filtered_state) LED_On(LED_D1);
  9196  04D9  0020               	movlb	0	; select bank0
  9197  04DA  0859               	movf	process_level@filtered_state,w
  9198  04DB  1903               	btfsc	3,2
  9199  04DC  2CE2               	goto	l3276
  9200  04DD  3001               	movlw	1
  9201  04DE  318A  223A  3184   	fcall	_LED_On
  9202  04E1  2CE5               	goto	l3278
  9203  04E2                     l3276:	
  9204                           
  9205                           ;scan.c: 187: else LED_Off(LED_D1);
  9206  04E2  3001               	movlw	1
  9207  04E3  318A  2221         	fcall	_LED_Off
  9208  04E5                     l3278:	
  9209                           
  9210                           ;scan.c: 188: }
  9211                           ;scan.c: 189: key_states[idx_key] = filtered_state;
  9212  04E5  0020               	movlb	0	; select bank0
  9213  04E6  0859               	movf	process_level@filtered_state,w
  9214  04E7  00F4               	movwf	??_process_level
  9215  04E8  085A               	movf	process_level@idx_key,w
  9216  04E9  3E20               	addlw	(low (process_level@key_states| (0+256)))& (0+255)
  9217  04EA  0086               	movwf	6
  9218  04EB  3001               	movlw	1	; select bank2/3
  9219  04EC  0087               	movwf	7
  9220  04ED  0874               	movf	??_process_level,w
  9221  04EE  0081               	movwf	1
  9222  04EF  0008               	return
  9223  04F0                     __end_of_process_level:	
  9224                           
  9225                           	psect	text36
  9226  0A3A                     __ptext36:	
  9227 ;; *************** function _LED_On *****************
  9228 ;; Defined at:
  9229 ;;		line 59 in file "../bsp/pic16f1459/leds.c"
  9230 ;; Parameters:    Size  Location     Type
  9231 ;;  led             1    wreg     enum E2
  9232 ;; Auto vars:     Size  Location     Type
  9233 ;;  led             1    1[COMMON] enum E2
  9234 ;; Return value:  Size  Location     Type
  9235 ;;		None               void
  9236 ;; Registers used:
  9237 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9238 ;; Tracked objects:
  9239 ;;		On entry : 0/0
  9240 ;;		On exit  : 0/0
  9241 ;;		Unchanged: 0/0
  9242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9244 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9246 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9247 ;;Total ram usage:        1 bytes
  9248 ;; Hardware stack levels used:    1
  9249 ;; Hardware stack levels required when called:    1
  9250 ;; This function calls:
  9251 ;;		Nothing
  9252 ;; This function is called by:
  9253 ;;		_APP_LEDUpdateUSBStatus
  9254 ;;		_process_level
  9255 ;; This function uses a non-reentrant model
  9256 ;;
  9257                           
  9258                           
  9259                           ;psect for function _LED_On
  9260  0A3A                     _LED_On:	
  9261                           
  9262                           ;incstack = 0
  9263                           ; Regs used in _LED_On: [wreg-fsr0h+status,2+status,0]
  9264                           ;LED_On@led stored from wreg
  9265  0A3A  00F1               	movwf	LED_On@led
  9266                           
  9267                           ;leds.c: 61: switch(led)
  9268  0A3B  2A48               	goto	l2810
  9269  0A3C                     l355:	
  9270                           ;leds.c: 62: {
  9271                           ;leds.c: 63: case LED_D1:
  9272                           
  9273                           
  9274                           ;leds.c: 64: LATCbits.LATC2 = 1;
  9275  0A3C  0022               	movlb	2	; select bank2
  9276  0A3D  150E               	bsf	14,2	;volatile
  9277                           
  9278                           ;leds.c: 65: break;
  9279  0A3E  0008               	return
  9280  0A3F                     l357:	
  9281                           ;leds.c: 67: case LED_D2:
  9282                           
  9283                           
  9284                           ;leds.c: 68: LATCbits.LATC1 = 1;
  9285  0A3F  0022               	movlb	2	; select bank2
  9286  0A40  148E               	bsf	14,1	;volatile
  9287                           
  9288                           ;leds.c: 69: break;
  9289  0A41  0008               	return
  9290  0A42                     l358:	
  9291                           ;leds.c: 71: case LED_D3:
  9292                           
  9293                           
  9294                           ;leds.c: 72: LATCbits.LATC2 = 1;
  9295  0A42  0022               	movlb	2	; select bank2
  9296  0A43  150E               	bsf	14,2	;volatile
  9297                           
  9298                           ;leds.c: 73: break;
  9299  0A44  0008               	return
  9300  0A45                     l359:	
  9301                           ;leds.c: 75: case LED_D4:
  9302                           
  9303                           
  9304                           ;leds.c: 76: LATCbits.LATC3 = 1;
  9305  0A45  0022               	movlb	2	; select bank2
  9306  0A46  158E               	bsf	14,3	;volatile
  9307                           
  9308                           ;leds.c: 81: }
  9309                           
  9310                           ;leds.c: 80: break;
  9311                           
  9312                           ;leds.c: 79: case LED_NONE:
  9313                           
  9314                           ;leds.c: 77: break;
  9315  0A47  0008               	return
  9316  0A48                     l2810:	
  9317  0A48  0871               	movf	LED_On@led,w
  9318                           
  9319                           ; Switch size 1, requested type "space"
  9320                           ; Number of cases is 5, Range of values is 0 to 4
  9321                           ; switch strategies available:
  9322                           ; Name         Instructions Cycles
  9323                           ; direct_byte           16     6 (fixed)
  9324                           ; simple_byte           16     9 (average)
  9325                           ; jumptable            260     6 (fixed)
  9326                           ;	Chosen strategy is direct_byte
  9327  0A49  0084               	movwf	4
  9328  0A4A  3005               	movlw	5
  9329  0A4B  0204               	subwf	4,w
  9330  0A4C  1803               	skipnc
  9331  0A4D  0008               	return
  9332  0A4E  3188               	movlp	high S4762
  9333  0A4F  3504               	lslf	4,w
  9334  0A50  3E30               	addlw	low S4762
  9335  0A51  0082               	movwf	2
  9336  0A52                     l361:	
  9337  0A52  0008               	return
  9338  0A53                     __end_of_LED_On:	
  9339                           
  9340                           	psect	swtext4
  9341  0830                     __pswtext4:	
  9342  0830                     S4762:	
  9343  0830  318A  2A52         	ljmp	l361
  9344  0832  318A  2A3C         	ljmp	l355
  9345  0834  318A  2A3F         	ljmp	l357
  9346  0836  318A  2A42         	ljmp	l358
  9347  0838  318A  2A45         	ljmp	l359
  9348                           
  9349                           	psect	text37
  9350  0A21                     __ptext37:	
  9351 ;; *************** function _LED_Off *****************
  9352 ;; Defined at:
  9353 ;;		line 100 in file "../bsp/pic16f1459/leds.c"
  9354 ;; Parameters:    Size  Location     Type
  9355 ;;  led             1    wreg     enum E2
  9356 ;; Auto vars:     Size  Location     Type
  9357 ;;  led             1    1[COMMON] enum E2
  9358 ;; Return value:  Size  Location     Type
  9359 ;;		None               void
  9360 ;; Registers used:
  9361 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9362 ;; Tracked objects:
  9363 ;;		On entry : 0/0
  9364 ;;		On exit  : 0/0
  9365 ;;		Unchanged: 0/0
  9366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9370 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9371 ;;Total ram usage:        1 bytes
  9372 ;; Hardware stack levels used:    1
  9373 ;; Hardware stack levels required when called:    1
  9374 ;; This function calls:
  9375 ;;		Nothing
  9376 ;; This function is called by:
  9377 ;;		_APP_LEDUpdateUSBStatus
  9378 ;;		_process_level
  9379 ;; This function uses a non-reentrant model
  9380 ;;
  9381                           
  9382                           
  9383                           ;psect for function _LED_Off
  9384  0A21                     _LED_Off:	
  9385                           
  9386                           ;incstack = 0
  9387                           ; Regs used in _LED_Off: [wreg-fsr0h+status,2+status,0]
  9388                           ;LED_Off@led stored from wreg
  9389  0A21  00F1               	movwf	LED_Off@led
  9390                           
  9391                           ;leds.c: 102: switch(led)
  9392  0A22  2A2F               	goto	l2800
  9393  0A23                     l365:	
  9394                           ;leds.c: 103: {
  9395                           ;leds.c: 104: case LED_D1:
  9396                           
  9397                           
  9398                           ;leds.c: 105: LATCbits.LATC2 = 0;
  9399  0A23  0022               	movlb	2	; select bank2
  9400  0A24  110E               	bcf	14,2	;volatile
  9401                           
  9402                           ;leds.c: 106: break;
  9403  0A25  0008               	return
  9404  0A26                     l367:	
  9405                           ;leds.c: 108: case LED_D2:
  9406                           
  9407                           
  9408                           ;leds.c: 109: LATCbits.LATC1 = 0;
  9409  0A26  0022               	movlb	2	; select bank2
  9410  0A27  108E               	bcf	14,1	;volatile
  9411                           
  9412                           ;leds.c: 110: break;
  9413  0A28  0008               	return
  9414  0A29                     l368:	
  9415                           ;leds.c: 112: case LED_D3:
  9416                           
  9417                           
  9418                           ;leds.c: 113: LATCbits.LATC2 = 0;
  9419  0A29  0022               	movlb	2	; select bank2
  9420  0A2A  110E               	bcf	14,2	;volatile
  9421                           
  9422                           ;leds.c: 114: break;
  9423  0A2B  0008               	return
  9424  0A2C                     l369:	
  9425                           ;leds.c: 116: case LED_D4:
  9426                           
  9427                           
  9428                           ;leds.c: 117: LATCbits.LATC3 = 0;
  9429  0A2C  0022               	movlb	2	; select bank2
  9430  0A2D  118E               	bcf	14,3	;volatile
  9431                           
  9432                           ;leds.c: 122: }
  9433                           
  9434                           ;leds.c: 121: break;
  9435                           
  9436                           ;leds.c: 120: case LED_NONE:
  9437                           
  9438                           ;leds.c: 118: break;
  9439  0A2E  0008               	return
  9440  0A2F                     l2800:	
  9441  0A2F  0871               	movf	LED_Off@led,w
  9442                           
  9443                           ; Switch size 1, requested type "space"
  9444                           ; Number of cases is 5, Range of values is 0 to 4
  9445                           ; switch strategies available:
  9446                           ; Name         Instructions Cycles
  9447                           ; direct_byte           16     6 (fixed)
  9448                           ; simple_byte           16     9 (average)
  9449                           ; jumptable            260     6 (fixed)
  9450                           ;	Chosen strategy is direct_byte
  9451  0A30  0084               	movwf	4
  9452  0A31  3005               	movlw	5
  9453  0A32  0204               	subwf	4,w
  9454  0A33  1803               	skipnc
  9455  0A34  0008               	return
  9456  0A35  3188               	movlp	high S4764
  9457  0A36  3504               	lslf	4,w
  9458  0A37  3E3A               	addlw	low S4764
  9459  0A38  0082               	movwf	2
  9460  0A39                     l371:	
  9461  0A39  0008               	return
  9462  0A3A                     __end_of_LED_Off:	
  9463                           
  9464                           	psect	swtext5
  9465  083A                     __pswtext5:	
  9466  083A                     S4764:	
  9467  083A  318A  2A39         	ljmp	l371
  9468  083C  318A  2A23         	ljmp	l365
  9469  083E  318A  2A26         	ljmp	l367
  9470  0840  318A  2A29         	ljmp	l368
  9471  0842  318A  2A2C         	ljmp	l369
  9472                           
  9473                           	psect	text38
  9474  099F                     __ptext38:	
  9475 ;; *************** function _set_timer *****************
  9476 ;; Defined at:
  9477 ;;		line 55 in file "../src/scan.c"
  9478 ;; Parameters:    Size  Location     Type
  9479 ;;		None
  9480 ;; Auto vars:     Size  Location     Type
  9481 ;;		None
  9482 ;; Return value:  Size  Location     Type
  9483 ;;		None               void
  9484 ;; Registers used:
  9485 ;;		status,2
  9486 ;; Tracked objects:
  9487 ;;		On entry : 0/0
  9488 ;;		On exit  : 0/0
  9489 ;;		Unchanged: 0/0
  9490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9495 ;;Total ram usage:        0 bytes
  9496 ;; Hardware stack levels used:    1
  9497 ;; Hardware stack levels required when called:    1
  9498 ;; This function calls:
  9499 ;;		Nothing
  9500 ;; This function is called by:
  9501 ;;		_scan_task
  9502 ;; This function uses a non-reentrant model
  9503 ;;
  9504                           
  9505                           
  9506                           ;psect for function _set_timer
  9507  099F                     _set_timer:	
  9508                           
  9509                           ;scan.c: 56: wait_timer = 1;
  9510                           
  9511                           ;incstack = 0
  9512                           ; Regs used in _set_timer: [status,2]
  9513  099F  0022               	movlb	2	; select bank2
  9514  09A0  01E6               	clrf	_wait_timer^(0+256)
  9515  09A1  0AE6               	incf	_wait_timer^(0+256),f
  9516                           
  9517                           ;scan.c: 57: OPTION_REGbits.TMR0CS = 0;
  9518  09A2  0021               	movlb	1	; select bank1
  9519  09A3  1295               	bcf	21,5	;volatile
  9520                           
  9521                           ;scan.c: 58: OPTION_REGbits.PSA = 1;
  9522  09A4  1595               	bsf	21,3	;volatile
  9523                           
  9524                           ;scan.c: 59: INTCONbits.TMR0IE = 0;
  9525  09A5  128B               	bcf	11,5	;volatile
  9526                           
  9527                           ;scan.c: 60: INTCONbits.TMR0IF = 0;
  9528  09A6  110B               	bcf	11,2	;volatile
  9529                           
  9530                           ;scan.c: 61: TMR0 = 0;
  9531  09A7  0020               	movlb	0	; select bank0
  9532  09A8  0195               	clrf	21	;volatile
  9533  09A9  0008               	return
  9534  09AA                     __end_of_set_timer:	
  9535                           
  9536                           	psect	text39
  9537  09B5                     __ptext39:	
  9538 ;; *************** function _set_clock_and_data *****************
  9539 ;; Defined at:
  9540 ;;		line 68 in file "../src/scan.c"
  9541 ;; Parameters:    Size  Location     Type
  9542 ;;  c               1    wreg     const unsigned char 
  9543 ;;  d               1    1[COMMON] const unsigned char 
  9544 ;; Auto vars:     Size  Location     Type
  9545 ;;  c               1    2[COMMON] const unsigned char 
  9546 ;; Return value:  Size  Location     Type
  9547 ;;		None               void
  9548 ;; Registers used:
  9549 ;;		wreg, status,2, status,0
  9550 ;; Tracked objects:
  9551 ;;		On entry : 0/0
  9552 ;;		On exit  : 0/0
  9553 ;;		Unchanged: 0/0
  9554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9555 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9556 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9558 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9559 ;;Total ram usage:        2 bytes
  9560 ;; Hardware stack levels used:    1
  9561 ;; Hardware stack levels required when called:    1
  9562 ;; This function calls:
  9563 ;;		Nothing
  9564 ;; This function is called by:
  9565 ;;		_scan_task
  9566 ;; This function uses a non-reentrant model
  9567 ;;
  9568                           
  9569                           
  9570                           ;psect for function _set_clock_and_data
  9571  09B5                     _set_clock_and_data:	
  9572                           
  9573                           ;incstack = 0
  9574                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  9575                           ;set_clock_and_data@c stored from wreg
  9576  09B5  00F2               	movwf	set_clock_and_data@c
  9577                           
  9578                           ;scan.c: 69: LATCbits.LATC4 = !!c;
  9579  09B6  0872               	movf	set_clock_and_data@c,w
  9580  09B7  1903               	btfsc	3,2
  9581  09B8  29BC               	goto	u2850
  9582  09B9  0022               	movlb	2	; select bank2
  9583  09BA  160E               	bsf	14,4	;volatile
  9584  09BB  29BE               	goto	u2864
  9585  09BC                     u2850:	
  9586  09BC  0022               	movlb	2	; select bank2
  9587  09BD  120E               	bcf	14,4	;volatile
  9588  09BE                     u2864:	
  9589                           
  9590                           ;scan.c: 70: LATCbits.LATC5 = !!d;
  9591  09BE  0871               	movf	set_clock_and_data@d,w
  9592  09BF  1903               	btfsc	3,2
  9593  09C0  29C4               	goto	u2870
  9594  09C1  0022               	movlb	2	; select bank2
  9595  09C2  168E               	bsf	14,5	;volatile
  9596  09C3  0008               	return
  9597  09C4                     u2870:	
  9598  09C4  0022               	movlb	2	; select bank2
  9599  09C5  128E               	bcf	14,5	;volatile
  9600  09C6  0008               	return
  9601  09C7                     __end_of_set_clock_and_data:	
  9602                           
  9603                           	psect	text40
  9604  0ABD                     __ptext40:	
  9605 ;; *************** function _scan_init *****************
  9606 ;; Defined at:
  9607 ;;		line 32 in file "../src/scan.c"
  9608 ;; Parameters:    Size  Location     Type
  9609 ;;		None
  9610 ;; Auto vars:     Size  Location     Type
  9611 ;;		None
  9612 ;; Return value:  Size  Location     Type
  9613 ;;		None               void
  9614 ;; Registers used:
  9615 ;;		wreg, status,2, status,0
  9616 ;; Tracked objects:
  9617 ;;		On entry : 0/0
  9618 ;;		On exit  : 0/0
  9619 ;;		Unchanged: 0/0
  9620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9625 ;;Total ram usage:        0 bytes
  9626 ;; Hardware stack levels used:    1
  9627 ;; Hardware stack levels required when called:    1
  9628 ;; This function calls:
  9629 ;;		Nothing
  9630 ;; This function is called by:
  9631 ;;		_scan_task
  9632 ;; This function uses a non-reentrant model
  9633 ;;
  9634                           
  9635                           
  9636                           ;psect for function _scan_init
  9637  0ABD                     _scan_init:	
  9638                           
  9639                           ;scan.c: 33: is_initialized = 1;
  9640                           
  9641                           ;incstack = 0
  9642                           ; Regs used in _scan_init: [wreg+status,2+status,0]
  9643  0ABD  0022               	movlb	2	; select bank2
  9644  0ABE  01E3               	clrf	_is_initialized^(0+256)
  9645  0ABF  0AE3               	incf	_is_initialized^(0+256),f
  9646                           
  9647                           ;scan.c: 34: TRISCbits.TRISC3 = PIN_INPUT;
  9648  0AC0  0021               	movlb	1	; select bank1
  9649  0AC1  158E               	bsf	14,3	;volatile
  9650                           
  9651                           ;scan.c: 35: TRISCbits.TRISC4 = PIN_OUTPUT;
  9652  0AC2  120E               	bcf	14,4	;volatile
  9653                           
  9654                           ;scan.c: 36: TRISCbits.TRISC5 = PIN_OUTPUT;
  9655  0AC3  128E               	bcf	14,5	;volatile
  9656                           
  9657                           ;scan.c: 38: ANSELA = 0;
  9658  0AC4  0023               	movlb	3	; select bank3
  9659  0AC5  018C               	clrf	12	;volatile
  9660                           
  9661                           ;scan.c: 40: ANSELCbits.ANSC3 = PIN_ANALOG;
  9662  0AC6  158E               	bsf	14,3	;volatile
  9663                           
  9664                           ;scan.c: 41: LATCbits.LATC4 = 0;
  9665  0AC7  0022               	movlb	2	; select bank2
  9666  0AC8  120E               	bcf	14,4	;volatile
  9667                           
  9668                           ;scan.c: 42: LATCbits.LATC5 = 0;
  9669  0AC9  128E               	bcf	14,5	;volatile
  9670                           
  9671                           ;scan.c: 44: ANSELAbits.ANSA4 = PIN_DIGITAL;
  9672  0ACA  0023               	movlb	3	; select bank3
  9673  0ACB  120C               	bcf	12,4	;volatile
  9674                           
  9675                           ;scan.c: 45: TRISAbits.TRISA4 = PIN_INPUT;
  9676  0ACC  0021               	movlb	1	; select bank1
  9677  0ACD  160C               	bsf	12,4	;volatile
  9678                           
  9679                           ;scan.c: 47: PIE1bits.ADIE = 0;
  9680  0ACE  1311               	bcf	17,6	;volatile
  9681                           
  9682                           ;scan.c: 48: ADCON0bits.ADON = 1;
  9683  0ACF  141D               	bsf	29,0	;volatile
  9684                           
  9685                           ;scan.c: 49: ADCON1bits.ADFM = 0;
  9686  0AD0  139E               	bcf	30,7	;volatile
  9687                           
  9688                           ;scan.c: 50: ADCON1bits.ADCS = 0b110;
  9689  0AD1  081E               	movf	30,w	;volatile
  9690  0AD2  398F               	andlw	-113
  9691  0AD3  3860               	iorlw	96
  9692  0AD4  009E               	movwf	30	;volatile
  9693                           
  9694                           ;scan.c: 51: ADCON1bits.ADPREF = 0;
  9695  0AD5  30FC               	movlw	-4
  9696  0AD6  059E               	andwf	30,f	;volatile
  9697                           
  9698                           ;scan.c: 52: ADCON2bits.TRIGSEL = 0;
  9699  0AD7  308F               	movlw	-113
  9700  0AD8  059F               	andwf	31,f	;volatile
  9701  0AD9  0008               	return
  9702  0ADA                     __end_of_scan_init:	
  9703                           
  9704                           	psect	text41
  9705  0987                     __ptext41:	
  9706 ;; *************** function _run_adc *****************
  9707 ;; Defined at:
  9708 ;;		line 85 in file "../src/scan.c"
  9709 ;; Parameters:    Size  Location     Type
  9710 ;;		None
  9711 ;; Auto vars:     Size  Location     Type
  9712 ;;		None
  9713 ;; Return value:  Size  Location     Type
  9714 ;;		None               void
  9715 ;; Registers used:
  9716 ;;		wreg, status,2, status,0
  9717 ;; Tracked objects:
  9718 ;;		On entry : 0/0
  9719 ;;		On exit  : 0/0
  9720 ;;		Unchanged: 0/0
  9721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9726 ;;Total ram usage:        0 bytes
  9727 ;; Hardware stack levels used:    1
  9728 ;; Hardware stack levels required when called:    1
  9729 ;; This function calls:
  9730 ;;		Nothing
  9731 ;; This function is called by:
  9732 ;;		_scan_task
  9733 ;; This function uses a non-reentrant model
  9734 ;;
  9735                           
  9736                           
  9737                           ;psect for function _run_adc
  9738  0987                     _run_adc:	
  9739                           
  9740                           ;scan.c: 86: ADCON0bits.CHS = 7;
  9741                           
  9742                           ;incstack = 0
  9743                           ; Regs used in _run_adc: [wreg+status,2+status,0]
  9744  0987  0021               	movlb	1	; select bank1
  9745  0988  081D               	movf	29,w	;volatile
  9746  0989  3983               	andlw	-125
  9747  098A  381C               	iorlw	28
  9748  098B  009D               	movwf	29	;volatile
  9749                           
  9750                           ;scan.c: 87: ADCON0bits.GO = 1;
  9751  098C  149D               	bsf	29,1	;volatile
  9752  098D  0008               	return
  9753  098E                     __end_of_run_adc:	
  9754                           
  9755                           	psect	text42
  9756  09C7                     __ptext42:	
  9757 ;; *************** function _is_end_of_scan *****************
  9758 ;; Defined at:
  9759 ;;		line 77 in file "../src/scan.c"
  9760 ;; Parameters:    Size  Location     Type
  9761 ;;		None
  9762 ;; Auto vars:     Size  Location     Type
  9763 ;;  res             1    3[COMMON] unsigned char 
  9764 ;; Return value:  Size  Location     Type
  9765 ;;                  1    wreg      unsigned char 
  9766 ;; Registers used:
  9767 ;;		wreg, status,2, status,0
  9768 ;; Tracked objects:
  9769 ;;		On entry : 0/0
  9770 ;;		On exit  : 0/0
  9771 ;;		Unchanged: 0/0
  9772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9775 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9776 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9777 ;;Total ram usage:        3 bytes
  9778 ;; Hardware stack levels used:    1
  9779 ;; Hardware stack levels required when called:    1
  9780 ;; This function calls:
  9781 ;;		Nothing
  9782 ;; This function is called by:
  9783 ;;		_scan_task
  9784 ;; This function uses a non-reentrant model
  9785 ;;
  9786                           
  9787                           
  9788                           ;psect for function _is_end_of_scan
  9789  09C7                     _is_end_of_scan:	
  9790                           
  9791                           ;scan.c: 79: static uint8_t scan_counter = 0;
  9792                           ;scan.c: 80: bool res = (++scan_counter) >= N_KEYS;
  9793                           
  9794                           ;incstack = 0
  9795                           ; Regs used in _is_end_of_scan: [wreg+status,2+status,0]
  9796  09C7  3001               	movlw	1
  9797  09C8  00F1               	movwf	??_is_end_of_scan
  9798  09C9  0871               	movf	??_is_end_of_scan,w
  9799  09CA  0022               	movlb	2	; select bank2
  9800  09CB  07E7               	addwf	is_end_of_scan@scan_counter^(0+256),f
  9801  09CC  3027               	movlw	39
  9802  09CD  0267               	subwf	is_end_of_scan@scan_counter^(0+256),w
  9803  09CE  1C03               	btfss	3,0
  9804  09CF  29D2               	goto	u2890
  9805  09D0  3001               	movlw	1
  9806  09D1  29D3               	goto	u2900
  9807  09D2                     u2890:	
  9808  09D2  3000               	movlw	0
  9809  09D3                     u2900:	
  9810  09D3  00F2               	movwf	??_is_end_of_scan+1
  9811  09D4  0872               	movf	??_is_end_of_scan+1,w
  9812  09D5  00F3               	movwf	is_end_of_scan@res
  9813                           
  9814                           ;scan.c: 81: if (scan_counter >= N_KEYS) scan_counter = 0;
  9815  09D6  3027               	movlw	39
  9816  09D7  0267               	subwf	is_end_of_scan@scan_counter^(0+256),w
  9817  09D8  1803               	btfsc	3,0
  9818  09D9  01E7               	clrf	is_end_of_scan@scan_counter^(0+256)
  9819                           
  9820                           ;scan.c: 82: return res;
  9821  09DA  0873               	movf	is_end_of_scan@res,w
  9822  09DB  0008               	return
  9823  09DC                     __end_of_is_end_of_scan:	
  9824                           
  9825                           	psect	text43
  9826  0980                     __ptext43:	
  9827 ;; *************** function _is_adc_ready *****************
  9828 ;; Defined at:
  9829 ;;		line 90 in file "../src/scan.c"
  9830 ;; Parameters:    Size  Location     Type
  9831 ;;		None
  9832 ;; Auto vars:     Size  Location     Type
  9833 ;;		None
  9834 ;; Return value:  Size  Location     Type
  9835 ;;                  1    wreg      unsigned char 
  9836 ;; Registers used:
  9837 ;;		wreg, status,0
  9838 ;; Tracked objects:
  9839 ;;		On entry : 0/0
  9840 ;;		On exit  : 0/0
  9841 ;;		Unchanged: 0/0
  9842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9847 ;;Total ram usage:        0 bytes
  9848 ;; Hardware stack levels used:    1
  9849 ;; Hardware stack levels required when called:    1
  9850 ;; This function calls:
  9851 ;;		Nothing
  9852 ;; This function is called by:
  9853 ;;		_scan_task
  9854 ;; This function uses a non-reentrant model
  9855 ;;
  9856                           
  9857                           
  9858                           ;psect for function _is_adc_ready
  9859  0980                     _is_adc_ready:	
  9860                           
  9861                           ;scan.c: 91: return !ADCON0bits.GO_nDONE;
  9862                           
  9863                           ;incstack = 0
  9864                           ; Regs used in _is_adc_ready: [wreg+status,0]
  9865  0980  1003               	clrc
  9866  0981  0021               	movlb	1	; select bank1
  9867  0982  1C9D               	btfss	29,1	;volatile
  9868  0983  1403               	setc
  9869  0984  3000               	movlw	0
  9870  0985  3D09               	addwfc	9,w
  9871  0986  0008               	return
  9872  0987                     __end_of_is_adc_ready:	
  9873                           
  9874                           	psect	text44
  9875  0975                     __ptext44:	
  9876 ;; *************** function _get_data *****************
  9877 ;; Defined at:
  9878 ;;		line 73 in file "../src/scan.c"
  9879 ;; Parameters:    Size  Location     Type
  9880 ;;		None
  9881 ;; Auto vars:     Size  Location     Type
  9882 ;;		None
  9883 ;; Return value:  Size  Location     Type
  9884 ;;                  1    wreg      unsigned char 
  9885 ;; Registers used:
  9886 ;;		wreg, status,2, status,0
  9887 ;; Tracked objects:
  9888 ;;		On entry : 0/0
  9889 ;;		On exit  : 0/0
  9890 ;;		Unchanged: 0/0
  9891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9896 ;;Total ram usage:        0 bytes
  9897 ;; Hardware stack levels used:    1
  9898 ;; Hardware stack levels required when called:    1
  9899 ;; This function calls:
  9900 ;;		Nothing
  9901 ;; This function is called by:
  9902 ;;		_scan_task
  9903 ;; This function uses a non-reentrant model
  9904 ;;
  9905                           
  9906                           
  9907                           ;psect for function _get_data
  9908  0975                     _get_data:	
  9909                           
  9910                           ;scan.c: 74: return LATCbits.LATC5;
  9911                           
  9912                           ;incstack = 0
  9913                           ; Regs used in _get_data: [wreg+status,2+status,0]
  9914  0975  0022               	movlb	2	; select bank2
  9915  0976  0E0E               	swapf	14,w	;volatile
  9916  0977  0C89               	rrf	9,f
  9917  0978  3901               	andlw	1
  9918  0979  0008               	return
  9919  097A                     __end_of_get_data:	
  9920                           
  9921                           	psect	text45
  9922  0972                     __ptext45:	
  9923 ;; *************** function _get_adc *****************
  9924 ;; Defined at:
  9925 ;;		line 94 in file "../src/scan.c"
  9926 ;; Parameters:    Size  Location     Type
  9927 ;;		None
  9928 ;; Auto vars:     Size  Location     Type
  9929 ;;		None
  9930 ;; Return value:  Size  Location     Type
  9931 ;;                  1    wreg      unsigned char 
  9932 ;; Registers used:
  9933 ;;		wreg
  9934 ;; Tracked objects:
  9935 ;;		On entry : 0/0
  9936 ;;		On exit  : 0/0
  9937 ;;		Unchanged: 0/0
  9938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9943 ;;Total ram usage:        0 bytes
  9944 ;; Hardware stack levels used:    1
  9945 ;; Hardware stack levels required when called:    1
  9946 ;; This function calls:
  9947 ;;		Nothing
  9948 ;; This function is called by:
  9949 ;;		_scan_task
  9950 ;; This function uses a non-reentrant model
  9951 ;;
  9952                           
  9953                           
  9954                           ;psect for function _get_adc
  9955  0972                     _get_adc:	
  9956                           
  9957                           ;scan.c: 95: return ADRESH;
  9958                           
  9959                           ;incstack = 0
  9960                           ; Regs used in _get_adc: [wreg]
  9961  0972  0021               	movlb	1	; select bank1
  9962  0973  081C               	movf	28,w	;volatile
  9963  0974  0008               	return
  9964  0975                     __end_of_get_adc:	
  9965                           
  9966                           	psect	text46
  9967  0CDA                     __ptext46:	
  9968 ;; *************** function _USBTransferOnePacket *****************
  9969 ;; Defined at:
  9970 ;;		line 1014 in file "../framework/usb/usb_device.c"
  9971 ;; Parameters:    Size  Location     Type
  9972 ;;  ep              1    wreg     unsigned char 
  9973 ;;  dir             1    1[COMMON] unsigned char 
  9974 ;;  data            2    2[COMMON] PTR unsigned char 
  9975 ;;		 -> midiData(4), ReceivedDataBuffer(64), 
  9976 ;;  len             1    4[COMMON] unsigned char 
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;  ep              1    7[COMMON] unsigned char 
  9979 ;;  handle          1    8[COMMON] PTR volatile struct __BD
  9980 ;;		 -> BDT(32), NULL(0), 
  9981 ;; Return value:  Size  Location     Type
  9982 ;;                  1    wreg      PTR void 
  9983 ;; Registers used:
  9984 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9985 ;; Tracked objects:
  9986 ;;		On entry : 0/0
  9987 ;;		On exit  : 0/0
  9988 ;;		Unchanged: 0/0
  9989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9990 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9991 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9992 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9993 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9994 ;;Total ram usage:        8 bytes
  9995 ;; Hardware stack levels used:    1
  9996 ;; Hardware stack levels required when called:    1
  9997 ;; This function calls:
  9998 ;;		Nothing
  9999 ;; This function is called by:
 10000 ;;		_APP_DeviceAudioMIDIInitialize
 10001 ;;		_APP_DeviceAudioMIDITasks
 10002 ;; This function uses a non-reentrant model
 10003 ;;
 10004                           
 10005                           
 10006                           ;psect for function _USBTransferOnePacket
 10007  0CDA                     _USBTransferOnePacket:	
 10008                           
 10009                           ;incstack = 0
 10010                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
 10011                           ;USBTransferOnePacket@ep stored from wreg
 10012  0CDA  00F7               	movwf	USBTransferOnePacket@ep
 10013                           
 10014                           ;usb_device.c: 1016: volatile BDT_ENTRY* handle;
 10015                           ;usb_device.c: 1019: if(dir != 0)
 10016  0CDB  0871               	movf	USBTransferOnePacket@dir,w
 10017  0CDC  1903               	btfsc	3,2
 10018  0CDD  2CE3               	goto	l2832
 10019                           
 10020                           ;usb_device.c: 1020: {
 10021                           ;usb_device.c: 1022: handle = pBDTEntryIn[ep];
 10022  0CDE  0877               	movf	USBTransferOnePacket@ep,w
 10023  0CDF  3E69               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 10024  0CE0  0086               	movwf	6
 10025  0CE1  0187               	clrf	7
 10026  0CE2  2CE8               	goto	L14
 10027  0CE3                     l2832:	
 10028                           ;usb_device.c: 1023: }
 10029                           
 10030                           
 10031                           ;usb_device.c: 1024: else
 10032                           ;usb_device.c: 1025: {
 10033                           ;usb_device.c: 1027: handle = pBDTEntryOut[ep];
 10034  0CE3  0877               	movf	USBTransferOnePacket@ep,w
 10035  0CE4  3E58               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 10036  0CE5  0086               	movwf	6
 10037  0CE6  3001               	movlw	1	; select bank2/3
 10038  0CE7  0087               	movwf	7
 10039  0CE8                     L14:	
 10040  0CE8  0801               	movf	1,w
 10041  0CE9  00F5               	movwf	??_USBTransferOnePacket
 10042  0CEA  0875               	movf	??_USBTransferOnePacket,w
 10043  0CEB  00F8               	movwf	USBTransferOnePacket@handle
 10044                           
 10045                           ;usb_device.c: 1028: }
 10046                           ;usb_device.c: 1032: if(handle == 0)
 10047  0CEC  0878               	movf	USBTransferOnePacket@handle,w
 10048  0CED  1D03               	btfss	3,2
 10049  0CEE  2CF1               	goto	l2840
 10050                           
 10051                           ;usb_device.c: 1033: {
 10052                           ;usb_device.c: 1034: return 0;
 10053  0CEF  3000               	movlw	0
 10054  0CF0  0008               	return
 10055  0CF1                     l2840:	
 10056                           
 10057                           ;usb_device.c: 1035: }
 10058                           ;usb_device.c: 1048: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
 10059  0CF1  30FF               	movlw	255
 10060  0CF2  0572               	andwf	USBTransferOnePacket@data,w
 10061  0CF3  00F5               	movwf	??_USBTransferOnePacket
 10062  0CF4  307F               	movlw	127
 10063  0CF5  0573               	andwf	USBTransferOnePacket@data+1,w
 10064  0CF6  00F6               	movwf	??_USBTransferOnePacket+1
 10065  0CF7  0878               	movf	USBTransferOnePacket@handle,w
 10066  0CF8  3E02               	addlw	2
 10067  0CF9  0086               	movwf	6
 10068  0CFA  0187               	clrf	7
 10069  0CFB  0875               	movf	??_USBTransferOnePacket,w
 10070  0CFC  3FC0               	movwi [0]fsr1
 10071  0CFD  0876               	movf	??_USBTransferOnePacket+1,w
 10072  0CFE  3FC1               	movwi [1]fsr1
 10073                           
 10074                           ;usb_device.c: 1049: handle->CNT = len;
 10075  0CFF  0874               	movf	USBTransferOnePacket@len,w
 10076  0D00  00F5               	movwf	??_USBTransferOnePacket
 10077  0D01  0A78               	incf	USBTransferOnePacket@handle,w
 10078  0D02  0086               	movwf	6
 10079  0D03  0187               	clrf	7
 10080  0D04  0875               	movf	??_USBTransferOnePacket,w
 10081  0D05  0081               	movwf	1
 10082                           
 10083                           ;usb_device.c: 1050: handle->STAT.Val &= 0x40;
 10084  0D06  3040               	movlw	64
 10085  0D07  00F5               	movwf	??_USBTransferOnePacket
 10086  0D08  0878               	movf	USBTransferOnePacket@handle,w
 10087  0D09  0086               	movwf	6
 10088  0D0A  0187               	clrf	7
 10089  0D0B  0875               	movf	??_USBTransferOnePacket,w
 10090  0D0C  0581               	andwf	1,f
 10091                           
 10092                           ;usb_device.c: 1051: handle->STAT.Val |= (0x08 & 0x08);
 10093  0D0D  0878               	movf	USBTransferOnePacket@handle,w
 10094  0D0E  0086               	movwf	6
 10095  0D0F  0187               	clrf	7
 10096  0D10  1581               	bsf	1,3
 10097                           
 10098                           ;usb_device.c: 1052: handle->STAT.Val |= 0x80;
 10099  0D11  0878               	movf	USBTransferOnePacket@handle,w
 10100  0D12  0086               	movwf	6
 10101  0D13  0187               	clrf	7
 10102  0D14  1781               	bsf	1,7
 10103                           
 10104                           ;usb_device.c: 1055: if(dir != 0)
 10105  0D15  0871               	movf	USBTransferOnePacket@dir,w
 10106  0D16  1903               	btfsc	3,2
 10107  0D17  2D1F               	goto	l2850
 10108                           
 10109                           ;usb_device.c: 1056: {
 10110                           ;usb_device.c: 1058: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 10111  0D18  3004               	movlw	4
 10112  0D19  00F5               	movwf	??_USBTransferOnePacket
 10113  0D1A  0877               	movf	USBTransferOnePacket@ep,w
 10114  0D1B  3E69               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 10115  0D1C  0086               	movwf	6
 10116  0D1D  0187               	clrf	7
 10117  0D1E  2D26               	goto	L15
 10118  0D1F                     l2850:	
 10119                           ;usb_device.c: 1059: }
 10120                           
 10121                           
 10122                           ;usb_device.c: 1060: else
 10123                           ;usb_device.c: 1061: {
 10124                           ;usb_device.c: 1063: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 10125  0D1F  3004               	movlw	4
 10126  0D20  00F5               	movwf	??_USBTransferOnePacket
 10127  0D21  0877               	movf	USBTransferOnePacket@ep,w
 10128  0D22  3E58               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 10129  0D23  0086               	movwf	6
 10130  0D24  3001               	movlw	1	; select bank2/3
 10131  0D25  0087               	movwf	7
 10132  0D26                     L15:	
 10133  0D26  0875               	movf	??_USBTransferOnePacket,w
 10134  0D27  0681               	xorwf	1,f
 10135                           
 10136                           ;usb_device.c: 1064: }
 10137                           ;usb_device.c: 1065: return (void*)handle;
 10138  0D28  0878               	movf	USBTransferOnePacket@handle,w
 10139  0D29  0008               	return
 10140  0D2A                     __end_of_USBTransferOnePacket:	
 10141                           
 10142                           	psect	intentry
 10143  0004                     __pintentry:	
 10144 ;; *************** function _SYS_InterruptHigh *****************
 10145 ;; Defined at:
 10146 ;;		line 112 in file "../src/pic16f1459/system.c"
 10147 ;; Parameters:    Size  Location     Type
 10148 ;;		None
 10149 ;; Auto vars:     Size  Location     Type
 10150 ;;		None
 10151 ;; Return value:  Size  Location     Type
 10152 ;;		None               void
 10153 ;; Registers used:
 10154 ;;		None
 10155 ;; Tracked objects:
 10156 ;;		On entry : 0/0
 10157 ;;		On exit  : 0/0
 10158 ;;		Unchanged: 0/0
 10159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10162 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10163 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10164 ;;Total ram usage:        1 bytes
 10165 ;; Hardware stack levels used:    1
 10166 ;; This function calls:
 10167 ;;		Nothing
 10168 ;; This function is called by:
 10169 ;;		Interrupt level 1
 10170 ;; This function uses a non-reentrant model
 10171 ;;
 10172                           
 10173  0004                     _SYS_InterruptHigh:	
 10174                           
 10175                           ;incstack = 0
 10176                           ; Regs used in _SYS_InterruptHigh: []
 10177  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10178  0005  3180               	pagesel	$
 10179  0006  0020               	movlb	0	; select bank0
 10180  0007  087F               	movf	127,w
 10181  0008  00F0               	movwf	??_SYS_InterruptHigh
 10182  0009  0870               	movf	??_SYS_InterruptHigh,w
 10183  000A  00FF               	movwf	127
 10184  000B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10185  000C  0009               	retfie
 10186  000D                     __end_of_SYS_InterruptHigh:	
 10187  007E                     btemp	set	126	;btemp
 10188  007E                     int$flags	set	126
 10189  007E                     wtemp	set	126
 10190  007E                     wtemp0	set	126
 10191  0080                     wtemp1	set	128
 10192  0082                     wtemp2	set	130
 10193  0084                     wtemp3	set	132
 10194  0086                     wtemp4	set	134
 10195  0088                     wtemp5	set	136
 10196  007F                     wtemp6	set	127
 10197  007E                     ttemp	set	126
 10198  007E                     ttemp0	set	126
 10199  0081                     ttemp1	set	129
 10200  0084                     ttemp2	set	132
 10201  0087                     ttemp3	set	135
 10202  007F                     ttemp4	set	127
 10203  007E                     ltemp	set	126
 10204  007E                     ltemp0	set	126
 10205  0082                     ltemp1	set	130
 10206  0086                     ltemp2	set	134
 10207  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    252
    Data        0
    BSS         214
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            32     25      32
    BANK1            16      0      16
    BANK2            80      0      73
    BANK3            76      0      39
    BANK4            80      0      78
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(1) Largest target is 32
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK1[1]), BDT(BANK0[32]), NULL(NULL[0]), 

    memset@p1	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    memset@p	PTR unsigned char  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    sp__memset	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> midiData(BANK3[4]), ReceivedDataBuffer(BANK1[64]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    S1171$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S1161$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S1161$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S1137$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S1137$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S1137$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S1137$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    scan_task@velocity	PTR unsigned char  size(1) Largest target is 1
		 -> APP_DeviceAudioMIDITasks@velocity(BANK0[1]), 

    scan_task@note	PTR unsigned char  size(1) Largest target is 1
		 -> APP_DeviceAudioMIDITasks@scan_pitch(BANK0[1]), 

    sp__USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBRxHandle	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBTxHandle	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[26]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 101
		 -> configDescriptor1(CODE[101]), 


Critical Paths under _main in COMMON

    _USBDeviceTasks->_USBSuspend
    _USBDeviceTasks->_USBWakeFromSuspend
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdSetCfgHandler
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _APP_DeviceAudioMIDIInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _SYSTEM_Initialize->_BUTTON_Enable
    _SYSTEM_Initialize->_LED_Enable
    _APP_DeviceAudioMIDITasks->_scan_task
    _scan_task->_store_key_level
    _store_key_level->_process_level
    _process_level->_LED_Off
    _process_level->_LED_On

Critical Paths under _SYS_InterruptHigh in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_APP_DeviceAudioMIDITasks
    _main->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_APP_DeviceAudioMIDIInitialize
    _APP_DeviceAudioMIDIInitialize->_USBEnableEndpoint
    _APP_DeviceAudioMIDITasks->_scan_task
    _store_key_level->_process_level

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   42276
           _APP_DeviceAudioMIDITasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       3     3      0   38792
                                             22 BANK0      3     3      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   1     1      0    5239
                                             11 COMMON     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           1     1      0    5239
                                             11 COMMON     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        5     5      0     272
                                              1 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     4     4      0   22735
                                             18 BANK0      4     4      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               1     1      0   22407
                                             17 BANK0      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             2     2      0      92
                                              6 COMMON     2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              4 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   1     1      0   17076
                                             16 BANK0      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  5     5      0    5998
                                             11 COMMON     1     1      0
                                             10 BANK0      4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               7     3      4     524
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               2     2      0      46
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  3     3      0       0
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0    5793
                                             10 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      5     0      5    5239
                                              5 BANK0      5     0      5
      _APP_DeviceAudioMIDIInitialize
      _APP_DeviceAudioMIDISOFHandler
             _APP_LEDUpdateUSBStatus
 ---------------------------------------------------------------------------------
 (3) _APP_LEDUpdateUSBStatus                               0     0      0      44
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceAudioMIDISOFHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceAudioMIDIInitialize                        2     2      0    2044
                                              3 BANK0      2     2      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    6     5      1     644
                                              8 COMMON     3     2      1
                                              0 BANK0      3     3      0
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 7     6      1     400
                                              1 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 2     2      0     114
                                              7 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  4     4      0     114
                                              3 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  3     3      0     115
                                              4 COMMON     3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  3     3      0      92
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      66
                                              2 COMMON     1     1      0
                      _BUTTON_Enable
                         _LED_Enable
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTON_Enable                                        1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceAudioMIDITasks                             8     8      0    3146
                                             17 BANK0      8     8      0
               _USBTransferOnePacket
                          _scan_task
 ---------------------------------------------------------------------------------
 (2) _scan_task                                            7     6      1    1600
                                             11 COMMON     1     1      0
                                             11 BANK0      6     5      1
                            _get_adc
                           _get_data
                       _is_adc_ready
                     _is_end_of_scan
                            _run_adc
                          _scan_init
                 _set_clock_and_data
                          _set_timer
                    _store_key_level
                  _waiting_for_timer
 ---------------------------------------------------------------------------------
 (3) _waiting_for_timer                                    1     1      0      24
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _store_key_level                                      4     3      1     892
                                              7 COMMON     4     3      1
                            _get_adc (ARG)
                     _is_end_of_scan (ARG)
                      _process_level
 ---------------------------------------------------------------------------------
 (4) _process_level                                       16    14      2     737
                                              2 COMMON     5     3      2
                                              0 BANK0     11    11      0
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (4) _LED_On                                               1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LED_Off                                              1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _set_timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _set_clock_and_data                                   2     1      1     400
                                              1 COMMON     2     1      1
                           _get_data (ARG)
 ---------------------------------------------------------------------------------
 (3) _scan_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _run_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _is_end_of_scan                                       3     3      0      23
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _is_adc_ready                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get_data                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 8     4      4    1400
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SYS_InterruptHigh                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceAudioMIDITasks
     _USBTransferOnePacket
     _scan_task
       _get_adc
       _get_data
       _is_adc_ready
       _is_end_of_scan
       _run_adc
       _scan_init
       _set_clock_and_data
         _get_data (ARG)
       _set_timer
       _store_key_level
         _get_adc (ARG)
         _is_end_of_scan (ARG)
         _process_level (ARG)
           _LED_Off
           _LED_On
       _waiting_for_timer
   _SYSTEM_Initialize
     _BUTTON_Enable
     _LED_Enable
   _USBDeviceInit
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceAudioMIDIInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceAudioMIDISOFHandler
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceAudioMIDIInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceAudioMIDISOFHandler
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceAudioMIDIInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceAudioMIDISOFHandler
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceAudioMIDIInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceAudioMIDISOFHandler
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
     _USBDeviceInit
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceAudioMIDIInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceAudioMIDISOFHandler
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceAudioMIDIInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceAudioMIDISOFHandler
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceAudioMIDIInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceAudioMIDISOFHandler
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On

 _SYS_InterruptHigh (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            20      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               20     19      20       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10      0      10       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      49       9       91.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            4C      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               4C      0      27      11       51.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4E      13       97.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      FB      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      FB      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat May 21 00:13:42 2016

                              _USB_SD_Ptr 0168                                         pc 0002  
                             __CFG_CP$OFF 0000                                        l16 0ABC  
                                      l88 0BBE                               ?_LED_Enable 0070  
                           _USBDeviceInit 059D      USER_USB_CALLBACK_EVENT_HANDLER@event 0055  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 0057                                       l300 099E  
                                     l401 0A6B               __end_of_USBStdGetDscHandler 1000  
                                     l361 0A52                                       l266 0505  
                                     l371 0A39                                       l355 0A3C  
                                     l365 0A23                                       l357 0A3F  
                                     l358 0A42                                       l710 0C9A  
                                     l367 0A26                                       l359 0A45  
                                     l711 0C9D                                       l368 0A29  
                                     l369 0A2C                                       l641 0719  
                                     l706 0C91                                       l562 05E0  
                                     l395 0A55                                       l804 0100  
                                     l397 0A58                                       l709 0CCD  
                                     l573 024A                                       l398 0A5B  
                                     l654 0EBF                                       l590 02DA  
                                     l399 0A5E                                       l575 024E  
                                     l584 02AA                                       l770 0D86  
                                     l579 0273                                       l756 0E34  
                                     l588 02D1                                       _BDT 0020  
                                     l669 065B                                       l589 0329  
                                     l791 0097                                       l792 0098  
                                     l768 0DD2                                       l779 0DB0  
                                     _UIE 0E92                                       _UIR 0E90  
                  _APP_LEDUpdateUSBStatus 0C40                                _USBSuspend 09F2  
                    USBStdSetCfgHandler@i 005D                      USBStdSetCfgHandler@p 005A  
                             _USBRxHandle 00E7                              __CFG_BORV$LO 0000  
                                     wreg 0009                            _USBDeviceTasks 023D  
                          _USBDeviceState 006C                               _USBTxHandle 00E8  
                           _BUTTON_Enable 0995                                      S4760 081A  
                                    S4752 0800                                      S4762 0830  
                                    S4764 083A                                      S4758 0826  
                   ??_USBCtrlTrfRxService 0073                  USBEnableEndpoint@options 0078  
                            __CFG_LVP$OFF 0000                           __end_of_LED_Off 0A3A  
                                    l3120 0FF3                                      l3032 0D63  
                                    l3114 0FED                                      l3106 0FC9  
                                    l3116 0FF0                                      l3108 0FCC  
                                    l3132 0CA9                                      l3028 0D51  
                                    l3142 0CC1                                      l3240 044E  
                                    l3312 0726                                      l3320 0730  
                                    l4202 0B8D                                      l4210 0B96  
                                    l3500 0B7E                                      l4204 0B90  
              USBConfigureEndpoint@handle 0077                                      l3270 04D4  
                                    l3502 0B7F                                      l3350 0663  
                                    l4206 0B93                                      l2800 0A2F  
                                    l3256 0495                                      l3352 067B  
                                    l3096 0F8C                                      l2810 0A48  
                                    l3258 0496                                      l3362 06A4  
                                    l4322 00CB                                      l4306 00A3  
                                    l3098 0F96                                      l3290 06EA  
                                    l3610 05AB                                      l3276 04E2  
                                    l3268 04C9                                      l3700 0529  
                                    l3364 06B0                                      l2820 0AE3  
                                    l4332 00EF                                      l4316 00BB  
                                    l4252 079F                                      l4236 0778  
                                    l4228 0768                                      l3278 04E5  
                                    l4342 0106                                      l4334 00F4  
                                    l4318 00C2                                      l4246 078B  
                                    l3294 06EE                                      l4430 0A97  
                                    l4510 0260                                      l2840 0CF1  
                                    l2832 0CE3                                      l3712 0555  
                                    l3704 053C                                      l3536 0B2F  
                                    l2824 0AEB                                      l4360 0D91  
                                    l4432 0A9E                                      l2850 0D1F  
                                    l3458 09B2                                      l3714 055C  
                                    l3722 0578                                      l3562 0DEC  
                                    l4346 0124                                      l4282 004F  
                                    l4370 0D9E                                      l4362 0D94  
                                    l3626 05C7                                      l3618 05BB  
                                    l4530 0283                                      l4602 09E3  
                                    l3708 054D                                      l3724 0583  
                                    l2940 0EB8                                      l3564 0DF1  
                                    l3548 0B54                                      l4348 012C  
                                    l4284 0051                                      l4268 07C7  
                                    l4372 0DA1                                      l3660 0603  
                                    l3718 056D                                      l3574 0E17  
                                    l2790 0BEC                                      l2870 0C5C  
                                    l2862 0C47                                      l4198 0B87  
                                    l4374 0DA4                                      l4358 0D8E  
                                    l4470 0F64                                      l3638 05E5  
                                    l4542 029B                                      l4518 026D  
                                    l3816 0AA3                                      l3824 0AB1  
                                    l2952 0ED7                                      l2960 0EF0  
                                    l4384 0DBC                                      l4464 0F3F  
                                    l4552 02B0                                      l4536 0289  
                                    l3690 050D                                      l2962 0EF4  
                                    l2970 0F0D                                      l3578 0E27  
                                    l2882 0C76                                      l2874 0C61  
                                    l2890 0C87                                      l2866 0C51  
                                    l4298 007D                                      l4474 0F73  
                                    l3666 0622                                      l3588 0A61  
                                    l4388 0DC7                                      l4476 0F76  
                                    l2878 0C6B                                      l4566 02CA  
                                    l4558 02B7                                      l3696 051A  
                                    l3952 0346                                      l2888 0C81  
                                    l3776 07F9                                      l4592 0311  
                                    l3954 0349                                      l4754 0B9F  
                                    l2978 0A71                                      l3778 07FB  
                                    l4594 0320                                      l4586 02F8  
                                    l4498 0251                                      l3980 03BF  
                                    l3972 03A5                                      l2996 0E5F  
                                    l4756 0BB9                                      l3982 03C2  
                                    l3958 035F                                      l3998 03FA  
                                    u2205 0D5A                                      u2600 0480  
                                    u2520 041F                                      u3160 059B  
                                    u4025 0F20                                      u2530 0420  
                                    u3075 05CA                                      u2540 0432  
                                    u2550 0433                                      u2650 049F  
                                    u2570 046C                                      u1915 0BC7  
                                    u2900 09D3                                      u2660 04AB  
                                    u2652 04A0                                      u2580 046D  
                                    u1925 0BCD                                      u2662 04AC  
                                    u2590 047F                                      u1935 0BD5  
                                    u2850 09BC                                      u2940 0B84  
                                    u2870 09C4                                      u2775 0655  
                                    u2864 09BE                                      u2890 09D2  
                   ??_USBCtrlTrfTxService 0071                                      _UCFG 0E91  
                                    _UEP0 0E98                                      _UEP1 0E99  
                                    _UEIE 0E97                                      _UEIR 0E93  
                                    _UCON 0E8E                                      _TMR0 0015  
                            __CFG_WRT$OFF 0000    USBStdFeatureReqHandler@current_ep_data 005E  
                                    _pDst 0164                                      _main 09DC  
                                    fsr0h 0005                                      fsr1h 0007  
                                    fsr0l 0004                                      indf0 0000  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                                    ltemp 007E                                      start 000D  
                                    ttemp 007E                                      wtemp 007E  
                           __CFG_IESO$OFF 0000                process_level@current_state 0052  
                    process_level@idx_key 005A                __end_of_USBCheckStdRequest 0DD3  
                  ??_USBCtrlTrfOutHandler 0077                             __CFG_MCLRE$ON 0000  
                     USBDeviceInit@i_1706 0074                 ??_USBStdFeatureReqHandler 005A  
                    process_level@on_flag 0058                  ??_USBStdGetStatusHandler 0071  
                          ?_USBDeviceInit 0070               process_level@key_on_counter 0247  
                                   ?_main 0070                             __CFG_WDTE$OFF 0000  
       __size_of_USBCtrlEPServiceComplete 0086                    __end_of_USBDeviceTasks 032C  
               ?_USBCtrlEPServiceComplete 0070                                     _UADDR 0E96  
                                   _RCREG 0199                                     _RCSTA 019D  
                                   _USTAT 0E8F                                     _TXREG 019A  
                                   _TXSTA 019E        __size_of_USBCtrlEPAllowStatusStage 0068  
                          __CFG_FCMEN$OFF 0000                            ?_BUTTON_Enable 0070  
                         __end_of_get_adc 0975           __end_of_USBCtrlEPAllowDataStage 0D7E  
                                   _sd000 0239                                     _sd001 01D9  
                                   _sd002 020D            ?_USBIncrement1msInternalTimers 0070  
                           ?_is_adc_ready 0070     __end_of_APP_DeviceAudioMIDIInitialize 0B27  
  __size_of_APP_DeviceAudioMIDIInitialize 002A             _APP_DeviceAudioMIDIInitialize 0AFD  
                         _store_key_level 0B56               __size_of_set_clock_and_data 0012  
                                   _pitch 00EC                           ??_process_level 0074  
                                   ltemp0 007E                                     ltemp1 0082  
                                   ltemp2 0086                                     ltemp3 0080  
                     __size_of_LED_Enable 0019                           __end_of_run_adc 098E  
                                   ttemp0 007E                                     ttemp1 0081  
                                   ttemp2 0084                                     ttemp3 0087  
                                   ttemp4 007F        APP_DeviceAudioMIDITasks@scan_pitch 0067  
                                   status 0003                                     wtemp0 007E  
                                   wtemp1 0080                                     wtemp2 0082  
                                   wtemp3 0084                                     wtemp4 0086  
                                   wtemp5 0088                                     wtemp6 007F  
            __size_of_USBStdSetCfgHandler 007F                     process_level@off_flag 0056  
                         __initialization 000F                is_end_of_scan@scan_counter 0167  
                            __end_of_main 09F2                ??_APP_DeviceAudioMIDITasks 0061  
                          __CFG_LPBOR$OFF 0000                             scan_task@note 0060  
               __size_of_USBCtrlEPService 0070                                    ??_main 007C  
                         ?_USBDeviceTasks 0070     __end_ofprocess_level@key_on_threshold 0173  
           process_level@key_on_threshold 0172                               ?_USBSuspend 0070  
                               ??_LED_Off 0071                       __CFG_USBLSCLK$48MHz 0000  
                          ??_is_adc_ready 0071                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _ADCON2 009F  
                                  _ACTCON 039B                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _ANSELA 018C  
                  SYSTEM_Initialize@state 0072                                    _LED_On 0A3A  
                     set_clock_and_data@c 0072                       set_clock_and_data@d 0071  
                                  _OSCCON 0099                            __CFG_PWRTE$OFF 0000  
                       _shortPacketStatus 00ED                          __end_of_get_data 097A  
                         USBDeviceTasks@i 0068               USBStdFeatureReqHandler@pUEP 005C  
                USBTransferOnePacket@data 0072                USBCtrlTrfInHandler@lastDTS 0076  
                         ??_USBDeviceInit 0071                            __CFG_STVREN$ON 0000  
                       _USBEnableEndpoint 0ADA           __size_of_USBStdGetStatusHandler 004D  
                                  _memset 0A6C                        ?_USBEnableEndpoint 0078  
                               ??_get_adc 0071                   __end_of_store_key_level 0B86  
           __size_of_USBTransferOnePacket 0050                           ??_BUTTON_Enable 0071  
                     ??_USBEnableEndpoint 0079                            process_level@L 0170  
                               ??_run_adc 0071                               _CtrlTrfData 0048  
                 __size_of_is_end_of_scan 0015                      _controlTransferState 00E9  
                       _SYSTEM_Initialize 0AA1                   __end_of__initialization 0037  
                      ?_SYSTEM_Initialize 0070                  __size_of_USBStallHandler 0024  
                     __size_of_USBSuspend 0017                            __pcstackCOMMON 0070  
               __end_of_USBEnableEndpoint 0AFD              _APP_DeviceAudioMIDITasks$415 0063  
            _APP_DeviceAudioMIDITasks$456 0065                             __end_of_sd000 023D  
                           __end_of_sd001 020D                             __end_of_sd002 0227  
                     ??_SYSTEM_Initialize 0072                                 LED_On@led 0071  
        __size_of_USBCtrlEPAllowDataStage 0054                                _adc_levels 0220  
                  process_level@old_level 0072                    process_level@new_level 0073  
                            ??_LED_Enable 0071             __size_of_USBConfigureEndpoint 003F  
                  process_level@old_state 0050               __end_of_USBCtrlTrfInHandler 0E3A  
                 ?_APP_LEDUpdateUSBStatus 0070                    store_key_level@idx_key 006E  
                  __end_ofprocess_level@L 0171                            _OPTION_REGbits 0095  
                          scan_task@state 0168                store_key_level@end_of_scan 0077  
                ??_USBCtrlTrfSetupHandler 0061                   _USBTicksSinceSuspendEnd 0162  
               __end_of_SYSTEM_Initialize 0ABD                    _USBStdGetStatusHandler 0C8D  
                              __pbssBANK0 0069                                __pbssBANK1 00E0  
                              __pbssBANK2 0120                                __pbssBANK3 01A4  
                              __pbssBANK4 0220                                   ?_LED_On 0070  
                      __end_of_LED_Enable 0A6C                      store_key_level@level 007A  
             __size_of_USBWakeFromSuspend 001B                               _pBDTEntryIn 0069  
        __end_of_USBCtrlEPServiceComplete 075D                        __size_of_scan_init 001D  
                              __pmaintext 09DC                        __size_of_scan_task 00AD  
                    USBCtrlTrfRxService@i 0075                      __end_of_is_adc_ready 0987  
                           LED_Enable@led 0071                           __CFG_PLLMULT$3x 0000  
          __end_of_APP_LEDUpdateUSBStatus 0C8D                                __pintentry 0004  
                                 _BAUDCON 019F                                   ?_memset 0071  
                              _device_dsc 0227                          _USBCtrlEPService 0F11  
                              _ep_data_in 0152                        __size_of_set_timer 000B  
             __end_of_USBCtrlTrfRxService 06D7                        _USBCheckStdRequest 0D7E  
                        ?_store_key_level 0077                         _configDescriptor1 0174  
                       scan_task@velocity 005B                                   _LED_Off 0A21  
             __end_of_USBCtrlTrfTxService 0F11                       _USBStdSetCfgHandler 075D  
                               ?_get_data 0070                       ?_USBCheckStdRequest 0070  
            __size_of_USBStdGetDscHandler 007F                                   _UIEbits 0E92  
                                 _UIRbits 0E90                           __size_of_LED_On 0019  
                       is_end_of_scan@res 0073            APP_LEDUpdateUSBStatus@ledCount 00E5  
         ??_USBIncrement1msInternalTimers 0071                      ?_USBStdSetCfgHandler 0070  
              __size_of_USBEnableEndpoint 0023                      ??_USBCheckStdRequest 0060  
           __size_of_USBCtrlTrfOutHandler 002F                          ??_USBDeviceTasks 0066  
                       ??_USBStallHandler 0071                           __size_of_memset 001A  
               __end_of_configDescriptor1 01D9                                   __ptext1 023D  
                                 __ptext2 0A86                                   __ptext3 09F2  
                                 __ptext4 07DC                                   __ptext5 0A09  
                                 __ptext6 059D                                   __ptext7 0F11  
                                 __ptext8 0BFE                                   __ptext9 06D7  
                                 _inPipes 00E0                                   _get_adc 0972  
             _USBDeferOUTDataStagePackets 015E                              ??_USBSuspend 007B  
                           _scan_task$870 005C                             _scan_task$874 005E  
              __end_of_set_clock_and_data 09C7                         __end_of_scan_init 0ADA  
                       __end_of_scan_task 059D                                   _run_adc 0987  
                      __end_of_USB_CD_Ptr 0170                                ??_get_data 0071  
              __size_of_SYSTEM_Initialize 001C           __size_of_USBCtrlTrfSetupHandler 0042  
                                 clrloop0 097B                            _is_end_of_scan 09C7  
                    end_of_initialization 0037                        __end_of_USB_SD_Ptr 016E  
                     _pBDTEntryEP0OutNext 007C                                   memset@c 0071  
                                 memset@n 0073                                   memset@p 0076  
                   __end_of_process_level 04F0                           _USB1msTickCount 014E  
                ?_USBStdFeatureReqHandler 0070                         __end_of_set_timer 09AA  
                   ??_USBStdSetCfgHandler 007B                                _note_event 0156  
                      __end_of_USBSuspend 0A09                   _USBCtrlEPAllowDataStage 0D2A  
                               _RCSTAbits 019D                              __pstringtext 0141  
                _USBCtrlEPServiceComplete 06D7                                _wait_timer 0166  
              _USBStatusStageEnabledFlag1 015F                _USBStatusStageEnabledFlag2 0160  
                      USBEnableEndpoint@p 0050                                 _PORTAbits 000C  
          ?_APP_DeviceAudioMIDISOFHandler 0070                          __CFG_FOSC$INTOSC 0000  
                               _TRISAbits 008C                                 _TRISBbits 008D  
                               _TRISCbits 008E                        _ReceivedDataBuffer 00A0  
                  __end_of_is_end_of_scan 09DC                        _BothEP0OutUOWNsSet 015A  
               USBStdSetCfgHandler@i_2037 005C                 USBConfigureEndpoint@EPNum 0076  
       __size_of_APP_DeviceAudioMIDITasks 00E5                ?_USBCtrlEPAllowStatusStage 0070  
               ?_APP_DeviceAudioMIDITasks 0070       USER_USB_CALLBACK_EVENT_HANDLER@size 0058  
                               _USTATcopy 006F              __end_of_USBTransferOnePacket 0D2A  
                          __end_of_LED_On 0A53                     __size_of_is_adc_ready 0007  
                 process_level@midi_shift 0173               process_level@filtered_state 0059  
                      __CFG_PLLEN$ENABLED 0000                    _USBCtrlTrfSetupHandler 0BFE  
                 process_level@key_states 0120                     __end_of_USBDeviceInit 0645  
   __end_of_USBIncrement1msInternalTimers 0A21    __size_of_USBIncrement1msInternalTimers 0018  
           _USBIncrement1msInternalTimers 0A09                                LED_Off@led 0071  
                          __end_of_memset 0A86                         _USBBusIsSuspended 015C  
                     start_initialization 000F                   ?_USBStdGetStatusHandler 0070  
                   __end_of_BUTTON_Enable 099F             USBCtrlTrfRxService@byteToRead 0076  
                         ?_is_end_of_scan 0070                            _is_initialized 0163  
                            _is_adc_ready 0980              __end_of_USBConfigureEndpoint 0BFE  
         __end_of_USBStdFeatureReqHandler 0141                                  ??_LED_On 0071  
       __end_of_USBCtrlEPAllowStatusStage 0EA2                  __end_of_USBCtrlEPService 0F81  
               ??_USBCtrlEPAllowDataStage 0074                            USBDeviceInit@i 0075  
                          USBDeviceInit@p 0072                    _pBDTEntryEP0OutCurrent 006D  
                 USBTransferOnePacket@dir 0071                   USBTransferOnePacket@len 0074  
                     _USBStdGetDscHandler 0F81                                  ??_memset 0075  
  __end_ofprocess_level@key_off_threshold 0172            process_level@key_off_threshold 0171  
                  _USBActiveConfiguration 00EE            __end_of_USBStdGetStatusHandler 0CDA  
               process_level@idx_midi_map 0141                     _waiting_for_timer$814 0071  
                                ?_LED_Off 0070                               __pbssCOMMON 007C  
                               ___latbits 0002                             __pcstackBANK0 0050  
            __size_of_USBCtrlTrfInHandler 0067                      ?_USBStdGetDscHandler 0070  
                       __size_of_get_data 0005                __end_of_USBWakeFromSuspend 0AA1  
                         _USBStallHandler 07DC                              _pBDTEntryOut 0158  
          ?_APP_DeviceAudioMIDIInitialize 0070                                 __pswtext1 0800  
                               __pswtext2 0826                                 __pswtext3 081A  
                               __pswtext4 0830                                 __pswtext5 083A  
                                ?_get_adc 0070                      _USBTransferOnePacket 0CDA  
                               _msCounter 00EB              process_level@key_off_counter 01A4  
            __end_of_USBCtrlTrfOutHandler 0B56                     ??_USBStdGetDscHandler 0071  
                             _ep_data_out 0154                                  ?_run_adc 0070  
            __size_of_USBCtrlTrfRxService 0092             USBConfigureEndpoint@direction 0071  
                __size_of_store_key_level 0030                                 _scan_init 0ABD  
                               _scan_task 04F0              __size_of_USBCtrlTrfTxService 006F  
                                _LATCbits 010E                ??_USBCtrlEPServiceComplete 0076  
                               clear_ram0 097A                        _set_clock_and_data 09B5  
                                _PIE1bits 0091                                  _PIE2bits 0092  
                       _waiting_for_timer 09AA                                  _PIR2bits 0012  
               USBCtrlEPService@setup_cnt 0065                        ?_waiting_for_timer 0070  
                               _set_timer 099F                                  _UEP0bits 0E98  
              _USBDeferINDataStagePackets 015D               __size_of_USBCheckStdRequest 0055  
                     ?_set_clock_and_data 0071                                  _UCONbits 0E8E  
                    _USBConfigureEndpoint 0BBF           __end_ofprocess_level@midi_shift 0174  
        __size_of_USBStdFeatureReqHandler 0106          __end_of_APP_DeviceAudioMIDITasks 0411  
                     ??_waiting_for_timer 0071                                _ADCON0bits 009D  
                              _ADCON1bits 009E                                _ADCON2bits 009F  
                   ?_USBTransferOnePacket 0071                         _SYS_InterruptHigh 0004  
                            _RemoteWakeup 015B                          __size_of_LED_Off 0019  
                      ?_SYS_InterruptHigh 0070                         _process_level$851 0057  
                 __end_of_USBStallHandler 0800                         _process_level$852 0054  
                    ??_set_clock_and_data 0072               ??_USBCtrlEPAllowStatusStage 0071  
             __end_of_USBStdSetCfgHandler 07DC                                ?_scan_init 0070  
                              ?_scan_task 005B                       ??_SYS_InterruptHigh 0070  
               __end_of_waiting_for_timer 09B5           ??_APP_DeviceAudioMIDISOFHandler 0071  
                      __end_of_device_dsc 0239                  ??_APP_LEDUpdateUSBStatus 0072  
                 ?_USBCtrlTrfSetupHandler 0070                   USBStdGetStatusHandler@p 0072  
                  USBTransferOnePacket@ep 0077                                ?_set_timer 0070  
                                _SetupPkt 0040                     ?_USBConfigureEndpoint 0071  
               __end_of_SYS_InterruptHigh 000D                          ??_is_end_of_scan 0071  
                              _ANSELAbits 018C                                _ANSELBbits 018D  
                              _ANSELCbits 018E                          __size_of_get_adc 0003  
                  __size_of_process_level 00DF                   __size_of_USBDeviceTasks 00EF  
                                __ptext10 0D2A                                  __ptext11 0D7E  
                                __ptext20 0AFD                                  __ptext12 075D  
                                __ptext21 0ADA                                  __ptext13 0A6C  
                                __ptext30 0995                                  __ptext22 0BBF  
                                __ptext14 0C8D                                  __ptext31 032C  
                                __ptext23 0B27                                  __ptext15 0F81  
                                __ptext40 0ABD                                  __ptext32 04F0  
                                __ptext24 0645                                  __ptext16 003B  
                                __ptext41 0987                                  __ptext33 09AA  
                                __ptext25 0E3A                                  __ptext17 0B86  
                                __ptext42 09C7                                  __ptext34 0B56  
                                __ptext26 0DD3                                  __ptext18 0C40  
                                __ptext43 0980                                  __ptext35 0411  
                                __ptext27 0EA2                                  __ptext19 098E  
                                __ptext44 0975                                  __ptext36 0A3A  
                                __ptext28 0AA1                                  __ptext45 0972  
                                __ptext37 0A21                                  __ptext29 0A53  
                                __ptext46 0CDA                                  __ptext38 099F  
                                __ptext39 09B5                                  _get_data 0975  
                        __size_of_run_adc 0007                                  _midiData 01A0  
          __end_of_USBCtrlTrfSetupHandler 0C40                             __size_of_main 0016  
                       ?_USBCtrlEPService 0070                        ??_USBCtrlEPService 0062  
                       ??_store_key_level 0078                       _USBCtrlTrfInHandler 0DD3  
                     BUTTON_Enable@button 0071                                  _outPipes 0147  
                    _USBCtrlTrfOutHandler 0B27                                  int$flags 007E  
               _USBCtrlEPAllowStatusStage 0E3A                                _LED_Enable 0A53  
                  ??_USBTransferOnePacket 0075                 _USBDeferStatusStagePacket 006B  
                              _INTCONbits 000B                      ?_USBCtrlTrfInHandler 0070  
                _APP_DeviceAudioMIDITasks 032C             USBCtrlTrfTxService@byteToSend 0073  
                                memset@p1 0077                          ?_USBStallHandler 0070  
                USBStdFeatureReqHandler@p 005F                                  intlevel1 0000  
                             ??_scan_init 0071                               ??_scan_task 007B  
                  __size_of_USBDeviceInit 00A8   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0BBF  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 0039          ?_USER_USB_CALLBACK_EVENT_HANDLER 0055  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 007B           _USER_USB_CALLBACK_EVENT_HANDLER 0B86  
              __size_of_waiting_for_timer 000B         __end_ofprocess_level@idx_midi_map 0168  
                       __CFG_CLKOUTEN$OFF 0000                             _process_level 0411  
                             _sentNoteOff 0165           __size_of_APP_LEDUpdateUSBStatus 004D  
   __end_of_APP_DeviceAudioMIDISOFHandler 0995    __size_of_APP_DeviceAudioMIDISOFHandler 0007  
           _APP_DeviceAudioMIDISOFHandler 098E                               ??_set_timer 0071  
                  ??_USBConfigureEndpoint 0072                     ?_USBCtrlTrfOutHandler 0070  
                  __size_of_BUTTON_Enable 000A                      __CFG_CPUDIV$NOCLKDIV 0000  
                     _USBCtrlTrfRxService 0645                        _USBWakeFromSuspend 0A86  
                 _USBStdFeatureReqHandler 003B                       _USBCtrlTrfTxService 0EA2  
              __size_of_SYS_InterruptHigh 0009           ??_APP_DeviceAudioMIDIInitialize 0053  
                     ?_USBWakeFromSuspend 0070                     ??_USBCtrlTrfInHandler 0074  
                   _USBAlternateInterface 00EF                       USBEnableEndpoint@ep 0052  
                         _endpoint_number 00EA                      ?_USBCtrlTrfRxService 0070  
                ?_USBCtrlEPAllowDataStage 0070                      ?_USBCtrlTrfTxService 0070  
                          ?_process_level 0072              _USBStatusStageTimeoutCounter 0161  
                    ??_USBWakeFromSuspend 007B                USBTransferOnePacket@handle 0078  
                              _USB_CD_Ptr 016E          APP_DeviceAudioMIDITasks@velocity 0068  
