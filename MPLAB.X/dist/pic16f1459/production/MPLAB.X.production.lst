

Microchip Technology PIC PRO Macro Assembler V1.20 build 52243 
                                                                                               Sun May 22 01:34:53 2016

Microchip Technology Omniscient Code Generator (PRO mode) build 52243
     1                           	processor	16F1459
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	text10,local,class=CODE,merge=1,delta=2
    16                           	psect	text11,local,class=CODE,merge=1,delta=2
    17                           	psect	text26,local,class=CODE,merge=1,delta=2
    18                           	psect	swtext2,local,class=CONST,delta=2
    19                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	swtext3,local,class=CONST,delta=2
    22                           	psect	swtext4,local,class=CONST,delta=2
    23                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    24                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	swtext5,local,class=CONST,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	pa_nodes,global,class=CODE,delta=2
    34                           	dabs	1,0x20,32,_BDT
    35                           	dabs	1,0x48,8,_CtrlTrfData
    36                           	dabs	1,0x40,8,_SetupPkt
    37                           	dabs	1,0xA0,64,_ReceivedDataBuffer
    38                           	dabs	1,0x1A0,4,_midiData
    39                           	dabs	1,0x7E,2
    40  0000                     	;# 
    41  0001                     	;# 
    42  0002                     	;# 
    43  0003                     	;# 
    44  0004                     	;# 
    45  0005                     	;# 
    46  0006                     	;# 
    47  0007                     	;# 
    48  0008                     	;# 
    49  0009                     	;# 
    50  000A                     	;# 
    51  000B                     	;# 
    52  000C                     	;# 
    53  000D                     	;# 
    54  000E                     	;# 
    55  0011                     	;# 
    56  0012                     	;# 
    57  0015                     	;# 
    58  0016                     	;# 
    59  0016                     	;# 
    60  0017                     	;# 
    61  0018                     	;# 
    62  0019                     	;# 
    63  001A                     	;# 
    64  001B                     	;# 
    65  001C                     	;# 
    66  008C                     	;# 
    67  008D                     	;# 
    68  008E                     	;# 
    69  0091                     	;# 
    70  0092                     	;# 
    71  0095                     	;# 
    72  0096                     	;# 
    73  0097                     	;# 
    74  0098                     	;# 
    75  0099                     	;# 
    76  009A                     	;# 
    77  009B                     	;# 
    78  009B                     	;# 
    79  009C                     	;# 
    80  009D                     	;# 
    81  009E                     	;# 
    82  009F                     	;# 
    83  010C                     	;# 
    84  010D                     	;# 
    85  010E                     	;# 
    86  0111                     	;# 
    87  0112                     	;# 
    88  0113                     	;# 
    89  0114                     	;# 
    90  0115                     	;# 
    91  0116                     	;# 
    92  0117                     	;# 
    93  0118                     	;# 
    94  0119                     	;# 
    95  011D                     	;# 
    96  018C                     	;# 
    97  018D                     	;# 
    98  018E                     	;# 
    99  0191                     	;# 
   100  0191                     	;# 
   101  0192                     	;# 
   102  0193                     	;# 
   103  0193                     	;# 
   104  0194                     	;# 
   105  0195                     	;# 
   106  0196                     	;# 
   107  0197                     	;# 
   108  0199                     	;# 
   109  019A                     	;# 
   110  019B                     	;# 
   111  019C                     	;# 
   112  019D                     	;# 
   113  019E                     	;# 
   114  019F                     	;# 
   115  020C                     	;# 
   116  020D                     	;# 
   117  0211                     	;# 
   118  0211                     	;# 
   119  0212                     	;# 
   120  0212                     	;# 
   121  0213                     	;# 
   122  0213                     	;# 
   123  0214                     	;# 
   124  0214                     	;# 
   125  0215                     	;# 
   126  0215                     	;# 
   127  0215                     	;# 
   128  0216                     	;# 
   129  0216                     	;# 
   130  0217                     	;# 
   131  0217                     	;# 
   132  0391                     	;# 
   133  0392                     	;# 
   134  0393                     	;# 
   135  0394                     	;# 
   136  0395                     	;# 
   137  0396                     	;# 
   138  039A                     	;# 
   139  039B                     	;# 
   140  0611                     	;# 
   141  0612                     	;# 
   142  0613                     	;# 
   143  0613                     	;# 
   144  0614                     	;# 
   145  0615                     	;# 
   146  0616                     	;# 
   147  0616                     	;# 
   148  0691                     	;# 
   149  0692                     	;# 
   150  0693                     	;# 
   151  0694                     	;# 
   152  0695                     	;# 
   153  0E8E                     	;# 
   154  0E8F                     	;# 
   155  0E90                     	;# 
   156  0E91                     	;# 
   157  0E92                     	;# 
   158  0E93                     	;# 
   159  0E94                     	;# 
   160  0E94                     	;# 
   161  0E95                     	;# 
   162  0E96                     	;# 
   163  0E97                     	;# 
   164  0E98                     	;# 
   165  0E99                     	;# 
   166  0E9A                     	;# 
   167  0E9B                     	;# 
   168  0E9C                     	;# 
   169  0E9D                     	;# 
   170  0E9E                     	;# 
   171  0E9F                     	;# 
   172  0FE4                     	;# 
   173  0FE5                     	;# 
   174  0FE6                     	;# 
   175  0FE7                     	;# 
   176  0FE8                     	;# 
   177  0FE9                     	;# 
   178  0FEA                     	;# 
   179  0FEB                     	;# 
   180  0FED                     	;# 
   181  0FEE                     	;# 
   182  0FEF                     	;# 
   183  0000                     	;# 
   184  0001                     	;# 
   185  0002                     	;# 
   186  0003                     	;# 
   187  0004                     	;# 
   188  0005                     	;# 
   189  0006                     	;# 
   190  0007                     	;# 
   191  0008                     	;# 
   192  0009                     	;# 
   193  000A                     	;# 
   194  000B                     	;# 
   195  000C                     	;# 
   196  000D                     	;# 
   197  000E                     	;# 
   198  0011                     	;# 
   199  0012                     	;# 
   200  0015                     	;# 
   201  0016                     	;# 
   202  0016                     	;# 
   203  0017                     	;# 
   204  0018                     	;# 
   205  0019                     	;# 
   206  001A                     	;# 
   207  001B                     	;# 
   208  001C                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  0091                     	;# 
   213  0092                     	;# 
   214  0095                     	;# 
   215  0096                     	;# 
   216  0097                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009A                     	;# 
   220  009B                     	;# 
   221  009B                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  009F                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  0111                     	;# 
   230  0112                     	;# 
   231  0113                     	;# 
   232  0114                     	;# 
   233  0115                     	;# 
   234  0116                     	;# 
   235  0117                     	;# 
   236  0118                     	;# 
   237  0119                     	;# 
   238  011D                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  018E                     	;# 
   242  0191                     	;# 
   243  0191                     	;# 
   244  0192                     	;# 
   245  0193                     	;# 
   246  0193                     	;# 
   247  0194                     	;# 
   248  0195                     	;# 
   249  0196                     	;# 
   250  0197                     	;# 
   251  0199                     	;# 
   252  019A                     	;# 
   253  019B                     	;# 
   254  019C                     	;# 
   255  019D                     	;# 
   256  019E                     	;# 
   257  019F                     	;# 
   258  020C                     	;# 
   259  020D                     	;# 
   260  0211                     	;# 
   261  0211                     	;# 
   262  0212                     	;# 
   263  0212                     	;# 
   264  0213                     	;# 
   265  0213                     	;# 
   266  0214                     	;# 
   267  0214                     	;# 
   268  0215                     	;# 
   269  0215                     	;# 
   270  0215                     	;# 
   271  0216                     	;# 
   272  0216                     	;# 
   273  0217                     	;# 
   274  0217                     	;# 
   275  0391                     	;# 
   276  0392                     	;# 
   277  0393                     	;# 
   278  0394                     	;# 
   279  0395                     	;# 
   280  0396                     	;# 
   281  039A                     	;# 
   282  039B                     	;# 
   283  0611                     	;# 
   284  0612                     	;# 
   285  0613                     	;# 
   286  0613                     	;# 
   287  0614                     	;# 
   288  0615                     	;# 
   289  0616                     	;# 
   290  0616                     	;# 
   291  0691                     	;# 
   292  0692                     	;# 
   293  0693                     	;# 
   294  0694                     	;# 
   295  0695                     	;# 
   296  0E8E                     	;# 
   297  0E8F                     	;# 
   298  0E90                     	;# 
   299  0E91                     	;# 
   300  0E92                     	;# 
   301  0E93                     	;# 
   302  0E94                     	;# 
   303  0E94                     	;# 
   304  0E95                     	;# 
   305  0E96                     	;# 
   306  0E97                     	;# 
   307  0E98                     	;# 
   308  0E99                     	;# 
   309  0E9A                     	;# 
   310  0E9B                     	;# 
   311  0E9C                     	;# 
   312  0E9D                     	;# 
   313  0E9E                     	;# 
   314  0E9F                     	;# 
   315  0FE4                     	;# 
   316  0FE5                     	;# 
   317  0FE6                     	;# 
   318  0FE7                     	;# 
   319  0FE8                     	;# 
   320  0FE9                     	;# 
   321  0FEA                     	;# 
   322  0FEB                     	;# 
   323  0FED                     	;# 
   324  0FEE                     	;# 
   325  0FEF                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0015                     	;# 
   344  0016                     	;# 
   345  0016                     	;# 
   346  0017                     	;# 
   347  0018                     	;# 
   348  0019                     	;# 
   349  001A                     	;# 
   350  001B                     	;# 
   351  001C                     	;# 
   352  008C                     	;# 
   353  008D                     	;# 
   354  008E                     	;# 
   355  0091                     	;# 
   356  0092                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  0111                     	;# 
   373  0112                     	;# 
   374  0113                     	;# 
   375  0114                     	;# 
   376  0115                     	;# 
   377  0116                     	;# 
   378  0117                     	;# 
   379  0118                     	;# 
   380  0119                     	;# 
   381  011D                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384  018E                     	;# 
   385  0191                     	;# 
   386  0191                     	;# 
   387  0192                     	;# 
   388  0193                     	;# 
   389  0193                     	;# 
   390  0194                     	;# 
   391  0195                     	;# 
   392  0196                     	;# 
   393  0197                     	;# 
   394  0199                     	;# 
   395  019A                     	;# 
   396  019B                     	;# 
   397  019C                     	;# 
   398  019D                     	;# 
   399  019E                     	;# 
   400  019F                     	;# 
   401  020C                     	;# 
   402  020D                     	;# 
   403  0211                     	;# 
   404  0211                     	;# 
   405  0212                     	;# 
   406  0212                     	;# 
   407  0213                     	;# 
   408  0213                     	;# 
   409  0214                     	;# 
   410  0214                     	;# 
   411  0215                     	;# 
   412  0215                     	;# 
   413  0215                     	;# 
   414  0216                     	;# 
   415  0216                     	;# 
   416  0217                     	;# 
   417  0217                     	;# 
   418  0391                     	;# 
   419  0392                     	;# 
   420  0393                     	;# 
   421  0394                     	;# 
   422  0395                     	;# 
   423  0396                     	;# 
   424  039A                     	;# 
   425  039B                     	;# 
   426  0611                     	;# 
   427  0612                     	;# 
   428  0613                     	;# 
   429  0613                     	;# 
   430  0614                     	;# 
   431  0615                     	;# 
   432  0616                     	;# 
   433  0616                     	;# 
   434  0691                     	;# 
   435  0692                     	;# 
   436  0693                     	;# 
   437  0694                     	;# 
   438  0695                     	;# 
   439  0E8E                     	;# 
   440  0E8F                     	;# 
   441  0E90                     	;# 
   442  0E91                     	;# 
   443  0E92                     	;# 
   444  0E93                     	;# 
   445  0E94                     	;# 
   446  0E94                     	;# 
   447  0E95                     	;# 
   448  0E96                     	;# 
   449  0E97                     	;# 
   450  0E98                     	;# 
   451  0E99                     	;# 
   452  0E9A                     	;# 
   453  0E9B                     	;# 
   454  0E9C                     	;# 
   455  0E9D                     	;# 
   456  0E9E                     	;# 
   457  0E9F                     	;# 
   458  0FE4                     	;# 
   459  0FE5                     	;# 
   460  0FE6                     	;# 
   461  0FE7                     	;# 
   462  0FE8                     	;# 
   463  0FE9                     	;# 
   464  0FEA                     	;# 
   465  0FEB                     	;# 
   466  0FED                     	;# 
   467  0FEE                     	;# 
   468  0FEF                     	;# 
   469  0000                     	;# 
   470  0001                     	;# 
   471  0002                     	;# 
   472  0003                     	;# 
   473  0004                     	;# 
   474  0005                     	;# 
   475  0006                     	;# 
   476  0007                     	;# 
   477  0008                     	;# 
   478  0009                     	;# 
   479  000A                     	;# 
   480  000B                     	;# 
   481  000C                     	;# 
   482  000D                     	;# 
   483  000E                     	;# 
   484  0011                     	;# 
   485  0012                     	;# 
   486  0015                     	;# 
   487  0016                     	;# 
   488  0016                     	;# 
   489  0017                     	;# 
   490  0018                     	;# 
   491  0019                     	;# 
   492  001A                     	;# 
   493  001B                     	;# 
   494  001C                     	;# 
   495  008C                     	;# 
   496  008D                     	;# 
   497  008E                     	;# 
   498  0091                     	;# 
   499  0092                     	;# 
   500  0095                     	;# 
   501  0096                     	;# 
   502  0097                     	;# 
   503  0098                     	;# 
   504  0099                     	;# 
   505  009A                     	;# 
   506  009B                     	;# 
   507  009B                     	;# 
   508  009C                     	;# 
   509  009D                     	;# 
   510  009E                     	;# 
   511  009F                     	;# 
   512  010C                     	;# 
   513  010D                     	;# 
   514  010E                     	;# 
   515  0111                     	;# 
   516  0112                     	;# 
   517  0113                     	;# 
   518  0114                     	;# 
   519  0115                     	;# 
   520  0116                     	;# 
   521  0117                     	;# 
   522  0118                     	;# 
   523  0119                     	;# 
   524  011D                     	;# 
   525  018C                     	;# 
   526  018D                     	;# 
   527  018E                     	;# 
   528  0191                     	;# 
   529  0191                     	;# 
   530  0192                     	;# 
   531  0193                     	;# 
   532  0193                     	;# 
   533  0194                     	;# 
   534  0195                     	;# 
   535  0196                     	;# 
   536  0197                     	;# 
   537  0199                     	;# 
   538  019A                     	;# 
   539  019B                     	;# 
   540  019C                     	;# 
   541  019D                     	;# 
   542  019E                     	;# 
   543  019F                     	;# 
   544  020C                     	;# 
   545  020D                     	;# 
   546  0211                     	;# 
   547  0211                     	;# 
   548  0212                     	;# 
   549  0212                     	;# 
   550  0213                     	;# 
   551  0213                     	;# 
   552  0214                     	;# 
   553  0214                     	;# 
   554  0215                     	;# 
   555  0215                     	;# 
   556  0215                     	;# 
   557  0216                     	;# 
   558  0216                     	;# 
   559  0217                     	;# 
   560  0217                     	;# 
   561  0391                     	;# 
   562  0392                     	;# 
   563  0393                     	;# 
   564  0394                     	;# 
   565  0395                     	;# 
   566  0396                     	;# 
   567  039A                     	;# 
   568  039B                     	;# 
   569  0611                     	;# 
   570  0612                     	;# 
   571  0613                     	;# 
   572  0613                     	;# 
   573  0614                     	;# 
   574  0615                     	;# 
   575  0616                     	;# 
   576  0616                     	;# 
   577  0691                     	;# 
   578  0692                     	;# 
   579  0693                     	;# 
   580  0694                     	;# 
   581  0695                     	;# 
   582  0E8E                     	;# 
   583  0E8F                     	;# 
   584  0E90                     	;# 
   585  0E91                     	;# 
   586  0E92                     	;# 
   587  0E93                     	;# 
   588  0E94                     	;# 
   589  0E94                     	;# 
   590  0E95                     	;# 
   591  0E96                     	;# 
   592  0E97                     	;# 
   593  0E98                     	;# 
   594  0E99                     	;# 
   595  0E9A                     	;# 
   596  0E9B                     	;# 
   597  0E9C                     	;# 
   598  0E9D                     	;# 
   599  0E9E                     	;# 
   600  0E9F                     	;# 
   601  0FE4                     	;# 
   602  0FE5                     	;# 
   603  0FE6                     	;# 
   604  0FE7                     	;# 
   605  0FE8                     	;# 
   606  0FE9                     	;# 
   607  0FEA                     	;# 
   608  0FEB                     	;# 
   609  0FED                     	;# 
   610  0FEE                     	;# 
   611  0FEF                     	;# 
   612  0000                     	;# 
   613  0001                     	;# 
   614  0002                     	;# 
   615  0003                     	;# 
   616  0004                     	;# 
   617  0005                     	;# 
   618  0006                     	;# 
   619  0007                     	;# 
   620  0008                     	;# 
   621  0009                     	;# 
   622  000A                     	;# 
   623  000B                     	;# 
   624  000C                     	;# 
   625  000D                     	;# 
   626  000E                     	;# 
   627  0011                     	;# 
   628  0012                     	;# 
   629  0015                     	;# 
   630  0016                     	;# 
   631  0016                     	;# 
   632  0017                     	;# 
   633  0018                     	;# 
   634  0019                     	;# 
   635  001A                     	;# 
   636  001B                     	;# 
   637  001C                     	;# 
   638  008C                     	;# 
   639  008D                     	;# 
   640  008E                     	;# 
   641  0091                     	;# 
   642  0092                     	;# 
   643  0095                     	;# 
   644  0096                     	;# 
   645  0097                     	;# 
   646  0098                     	;# 
   647  0099                     	;# 
   648  009A                     	;# 
   649  009B                     	;# 
   650  009B                     	;# 
   651  009C                     	;# 
   652  009D                     	;# 
   653  009E                     	;# 
   654  009F                     	;# 
   655  010C                     	;# 
   656  010D                     	;# 
   657  010E                     	;# 
   658  0111                     	;# 
   659  0112                     	;# 
   660  0113                     	;# 
   661  0114                     	;# 
   662  0115                     	;# 
   663  0116                     	;# 
   664  0117                     	;# 
   665  0118                     	;# 
   666  0119                     	;# 
   667  011D                     	;# 
   668  018C                     	;# 
   669  018D                     	;# 
   670  018E                     	;# 
   671  0191                     	;# 
   672  0191                     	;# 
   673  0192                     	;# 
   674  0193                     	;# 
   675  0193                     	;# 
   676  0194                     	;# 
   677  0195                     	;# 
   678  0196                     	;# 
   679  0197                     	;# 
   680  0199                     	;# 
   681  019A                     	;# 
   682  019B                     	;# 
   683  019C                     	;# 
   684  019D                     	;# 
   685  019E                     	;# 
   686  019F                     	;# 
   687  020C                     	;# 
   688  020D                     	;# 
   689  0211                     	;# 
   690  0211                     	;# 
   691  0212                     	;# 
   692  0212                     	;# 
   693  0213                     	;# 
   694  0213                     	;# 
   695  0214                     	;# 
   696  0214                     	;# 
   697  0215                     	;# 
   698  0215                     	;# 
   699  0215                     	;# 
   700  0216                     	;# 
   701  0216                     	;# 
   702  0217                     	;# 
   703  0217                     	;# 
   704  0391                     	;# 
   705  0392                     	;# 
   706  0393                     	;# 
   707  0394                     	;# 
   708  0395                     	;# 
   709  0396                     	;# 
   710  039A                     	;# 
   711  039B                     	;# 
   712  0611                     	;# 
   713  0612                     	;# 
   714  0613                     	;# 
   715  0613                     	;# 
   716  0614                     	;# 
   717  0615                     	;# 
   718  0616                     	;# 
   719  0616                     	;# 
   720  0691                     	;# 
   721  0692                     	;# 
   722  0693                     	;# 
   723  0694                     	;# 
   724  0695                     	;# 
   725  0E8E                     	;# 
   726  0E8F                     	;# 
   727  0E90                     	;# 
   728  0E91                     	;# 
   729  0E92                     	;# 
   730  0E93                     	;# 
   731  0E94                     	;# 
   732  0E94                     	;# 
   733  0E95                     	;# 
   734  0E96                     	;# 
   735  0E97                     	;# 
   736  0E98                     	;# 
   737  0E99                     	;# 
   738  0E9A                     	;# 
   739  0E9B                     	;# 
   740  0E9C                     	;# 
   741  0E9D                     	;# 
   742  0E9E                     	;# 
   743  0E9F                     	;# 
   744  0FE4                     	;# 
   745  0FE5                     	;# 
   746  0FE6                     	;# 
   747  0FE7                     	;# 
   748  0FE8                     	;# 
   749  0FE9                     	;# 
   750  0FEA                     	;# 
   751  0FEB                     	;# 
   752  0FED                     	;# 
   753  0FEE                     	;# 
   754  0FEF                     	;# 
   755  0000                     	;# 
   756  0001                     	;# 
   757  0002                     	;# 
   758  0003                     	;# 
   759  0004                     	;# 
   760  0005                     	;# 
   761  0006                     	;# 
   762  0007                     	;# 
   763  0008                     	;# 
   764  0009                     	;# 
   765  000A                     	;# 
   766  000B                     	;# 
   767  000C                     	;# 
   768  000D                     	;# 
   769  000E                     	;# 
   770  0011                     	;# 
   771  0012                     	;# 
   772  0015                     	;# 
   773  0016                     	;# 
   774  0016                     	;# 
   775  0017                     	;# 
   776  0018                     	;# 
   777  0019                     	;# 
   778  001A                     	;# 
   779  001B                     	;# 
   780  001C                     	;# 
   781  008C                     	;# 
   782  008D                     	;# 
   783  008E                     	;# 
   784  0091                     	;# 
   785  0092                     	;# 
   786  0095                     	;# 
   787  0096                     	;# 
   788  0097                     	;# 
   789  0098                     	;# 
   790  0099                     	;# 
   791  009A                     	;# 
   792  009B                     	;# 
   793  009B                     	;# 
   794  009C                     	;# 
   795  009D                     	;# 
   796  009E                     	;# 
   797  009F                     	;# 
   798  010C                     	;# 
   799  010D                     	;# 
   800  010E                     	;# 
   801  0111                     	;# 
   802  0112                     	;# 
   803  0113                     	;# 
   804  0114                     	;# 
   805  0115                     	;# 
   806  0116                     	;# 
   807  0117                     	;# 
   808  0118                     	;# 
   809  0119                     	;# 
   810  011D                     	;# 
   811  018C                     	;# 
   812  018D                     	;# 
   813  018E                     	;# 
   814  0191                     	;# 
   815  0191                     	;# 
   816  0192                     	;# 
   817  0193                     	;# 
   818  0193                     	;# 
   819  0194                     	;# 
   820  0195                     	;# 
   821  0196                     	;# 
   822  0197                     	;# 
   823  0199                     	;# 
   824  019A                     	;# 
   825  019B                     	;# 
   826  019C                     	;# 
   827  019D                     	;# 
   828  019E                     	;# 
   829  019F                     	;# 
   830  020C                     	;# 
   831  020D                     	;# 
   832  0211                     	;# 
   833  0211                     	;# 
   834  0212                     	;# 
   835  0212                     	;# 
   836  0213                     	;# 
   837  0213                     	;# 
   838  0214                     	;# 
   839  0214                     	;# 
   840  0215                     	;# 
   841  0215                     	;# 
   842  0215                     	;# 
   843  0216                     	;# 
   844  0216                     	;# 
   845  0217                     	;# 
   846  0217                     	;# 
   847  0391                     	;# 
   848  0392                     	;# 
   849  0393                     	;# 
   850  0394                     	;# 
   851  0395                     	;# 
   852  0396                     	;# 
   853  039A                     	;# 
   854  039B                     	;# 
   855  0611                     	;# 
   856  0612                     	;# 
   857  0613                     	;# 
   858  0613                     	;# 
   859  0614                     	;# 
   860  0615                     	;# 
   861  0616                     	;# 
   862  0616                     	;# 
   863  0691                     	;# 
   864  0692                     	;# 
   865  0693                     	;# 
   866  0694                     	;# 
   867  0695                     	;# 
   868  0E8E                     	;# 
   869  0E8F                     	;# 
   870  0E90                     	;# 
   871  0E91                     	;# 
   872  0E92                     	;# 
   873  0E93                     	;# 
   874  0E94                     	;# 
   875  0E94                     	;# 
   876  0E95                     	;# 
   877  0E96                     	;# 
   878  0E97                     	;# 
   879  0E98                     	;# 
   880  0E99                     	;# 
   881  0E9A                     	;# 
   882  0E9B                     	;# 
   883  0E9C                     	;# 
   884  0E9D                     	;# 
   885  0E9E                     	;# 
   886  0E9F                     	;# 
   887  0FE4                     	;# 
   888  0FE5                     	;# 
   889  0FE6                     	;# 
   890  0FE7                     	;# 
   891  0FE8                     	;# 
   892  0FE9                     	;# 
   893  0FEA                     	;# 
   894  0FEB                     	;# 
   895  0FED                     	;# 
   896  0FEE                     	;# 
   897  0FEF                     	;# 
   898  0000                     	;# 
   899  0001                     	;# 
   900  0002                     	;# 
   901  0003                     	;# 
   902  0004                     	;# 
   903  0005                     	;# 
   904  0006                     	;# 
   905  0007                     	;# 
   906  0008                     	;# 
   907  0009                     	;# 
   908  000A                     	;# 
   909  000B                     	;# 
   910  000C                     	;# 
   911  000D                     	;# 
   912  000E                     	;# 
   913  0011                     	;# 
   914  0012                     	;# 
   915  0015                     	;# 
   916  0016                     	;# 
   917  0016                     	;# 
   918  0017                     	;# 
   919  0018                     	;# 
   920  0019                     	;# 
   921  001A                     	;# 
   922  001B                     	;# 
   923  001C                     	;# 
   924  008C                     	;# 
   925  008D                     	;# 
   926  008E                     	;# 
   927  0091                     	;# 
   928  0092                     	;# 
   929  0095                     	;# 
   930  0096                     	;# 
   931  0097                     	;# 
   932  0098                     	;# 
   933  0099                     	;# 
   934  009A                     	;# 
   935  009B                     	;# 
   936  009B                     	;# 
   937  009C                     	;# 
   938  009D                     	;# 
   939  009E                     	;# 
   940  009F                     	;# 
   941  010C                     	;# 
   942  010D                     	;# 
   943  010E                     	;# 
   944  0111                     	;# 
   945  0112                     	;# 
   946  0113                     	;# 
   947  0114                     	;# 
   948  0115                     	;# 
   949  0116                     	;# 
   950  0117                     	;# 
   951  0118                     	;# 
   952  0119                     	;# 
   953  011D                     	;# 
   954  018C                     	;# 
   955  018D                     	;# 
   956  018E                     	;# 
   957  0191                     	;# 
   958  0191                     	;# 
   959  0192                     	;# 
   960  0193                     	;# 
   961  0193                     	;# 
   962  0194                     	;# 
   963  0195                     	;# 
   964  0196                     	;# 
   965  0197                     	;# 
   966  0199                     	;# 
   967  019A                     	;# 
   968  019B                     	;# 
   969  019C                     	;# 
   970  019D                     	;# 
   971  019E                     	;# 
   972  019F                     	;# 
   973  020C                     	;# 
   974  020D                     	;# 
   975  0211                     	;# 
   976  0211                     	;# 
   977  0212                     	;# 
   978  0212                     	;# 
   979  0213                     	;# 
   980  0213                     	;# 
   981  0214                     	;# 
   982  0214                     	;# 
   983  0215                     	;# 
   984  0215                     	;# 
   985  0215                     	;# 
   986  0216                     	;# 
   987  0216                     	;# 
   988  0217                     	;# 
   989  0217                     	;# 
   990  0391                     	;# 
   991  0392                     	;# 
   992  0393                     	;# 
   993  0394                     	;# 
   994  0395                     	;# 
   995  0396                     	;# 
   996  039A                     	;# 
   997  039B                     	;# 
   998  0611                     	;# 
   999  0612                     	;# 
  1000  0613                     	;# 
  1001  0613                     	;# 
  1002  0614                     	;# 
  1003  0615                     	;# 
  1004  0616                     	;# 
  1005  0616                     	;# 
  1006  0691                     	;# 
  1007  0692                     	;# 
  1008  0693                     	;# 
  1009  0694                     	;# 
  1010  0695                     	;# 
  1011  0E8E                     	;# 
  1012  0E8F                     	;# 
  1013  0E90                     	;# 
  1014  0E91                     	;# 
  1015  0E92                     	;# 
  1016  0E93                     	;# 
  1017  0E94                     	;# 
  1018  0E94                     	;# 
  1019  0E95                     	;# 
  1020  0E96                     	;# 
  1021  0E97                     	;# 
  1022  0E98                     	;# 
  1023  0E99                     	;# 
  1024  0E9A                     	;# 
  1025  0E9B                     	;# 
  1026  0E9C                     	;# 
  1027  0E9D                     	;# 
  1028  0E9E                     	;# 
  1029  0E9F                     	;# 
  1030  0FE4                     	;# 
  1031  0FE5                     	;# 
  1032  0FE6                     	;# 
  1033  0FE7                     	;# 
  1034  0FE8                     	;# 
  1035  0FE9                     	;# 
  1036  0FEA                     	;# 
  1037  0FEB                     	;# 
  1038  0FED                     	;# 
  1039  0FEE                     	;# 
  1040  0FEF                     	;# 
  1041  0000                     	;# 
  1042  0001                     	;# 
  1043  0002                     	;# 
  1044  0003                     	;# 
  1045  0004                     	;# 
  1046  0005                     	;# 
  1047  0006                     	;# 
  1048  0007                     	;# 
  1049  0008                     	;# 
  1050  0009                     	;# 
  1051  000A                     	;# 
  1052  000B                     	;# 
  1053  000C                     	;# 
  1054  000D                     	;# 
  1055  000E                     	;# 
  1056  0011                     	;# 
  1057  0012                     	;# 
  1058  0015                     	;# 
  1059  0016                     	;# 
  1060  0016                     	;# 
  1061  0017                     	;# 
  1062  0018                     	;# 
  1063  0019                     	;# 
  1064  001A                     	;# 
  1065  001B                     	;# 
  1066  001C                     	;# 
  1067  008C                     	;# 
  1068  008D                     	;# 
  1069  008E                     	;# 
  1070  0091                     	;# 
  1071  0092                     	;# 
  1072  0095                     	;# 
  1073  0096                     	;# 
  1074  0097                     	;# 
  1075  0098                     	;# 
  1076  0099                     	;# 
  1077  009A                     	;# 
  1078  009B                     	;# 
  1079  009B                     	;# 
  1080  009C                     	;# 
  1081  009D                     	;# 
  1082  009E                     	;# 
  1083  009F                     	;# 
  1084  010C                     	;# 
  1085  010D                     	;# 
  1086  010E                     	;# 
  1087  0111                     	;# 
  1088  0112                     	;# 
  1089  0113                     	;# 
  1090  0114                     	;# 
  1091  0115                     	;# 
  1092  0116                     	;# 
  1093  0117                     	;# 
  1094  0118                     	;# 
  1095  0119                     	;# 
  1096  011D                     	;# 
  1097  018C                     	;# 
  1098  018D                     	;# 
  1099  018E                     	;# 
  1100  0191                     	;# 
  1101  0191                     	;# 
  1102  0192                     	;# 
  1103  0193                     	;# 
  1104  0193                     	;# 
  1105  0194                     	;# 
  1106  0195                     	;# 
  1107  0196                     	;# 
  1108  0197                     	;# 
  1109  0199                     	;# 
  1110  019A                     	;# 
  1111  019B                     	;# 
  1112  019C                     	;# 
  1113  019D                     	;# 
  1114  019E                     	;# 
  1115  019F                     	;# 
  1116  020C                     	;# 
  1117  020D                     	;# 
  1118  0211                     	;# 
  1119  0211                     	;# 
  1120  0212                     	;# 
  1121  0212                     	;# 
  1122  0213                     	;# 
  1123  0213                     	;# 
  1124  0214                     	;# 
  1125  0214                     	;# 
  1126  0215                     	;# 
  1127  0215                     	;# 
  1128  0215                     	;# 
  1129  0216                     	;# 
  1130  0216                     	;# 
  1131  0217                     	;# 
  1132  0217                     	;# 
  1133  0391                     	;# 
  1134  0392                     	;# 
  1135  0393                     	;# 
  1136  0394                     	;# 
  1137  0395                     	;# 
  1138  0396                     	;# 
  1139  039A                     	;# 
  1140  039B                     	;# 
  1141  0611                     	;# 
  1142  0612                     	;# 
  1143  0613                     	;# 
  1144  0613                     	;# 
  1145  0614                     	;# 
  1146  0615                     	;# 
  1147  0616                     	;# 
  1148  0616                     	;# 
  1149  0691                     	;# 
  1150  0692                     	;# 
  1151  0693                     	;# 
  1152  0694                     	;# 
  1153  0695                     	;# 
  1154  0E8E                     	;# 
  1155  0E8F                     	;# 
  1156  0E90                     	;# 
  1157  0E91                     	;# 
  1158  0E92                     	;# 
  1159  0E93                     	;# 
  1160  0E94                     	;# 
  1161  0E94                     	;# 
  1162  0E95                     	;# 
  1163  0E96                     	;# 
  1164  0E97                     	;# 
  1165  0E98                     	;# 
  1166  0E99                     	;# 
  1167  0E9A                     	;# 
  1168  0E9B                     	;# 
  1169  0E9C                     	;# 
  1170  0E9D                     	;# 
  1171  0E9E                     	;# 
  1172  0E9F                     	;# 
  1173  0FE4                     	;# 
  1174  0FE5                     	;# 
  1175  0FE6                     	;# 
  1176  0FE7                     	;# 
  1177  0FE8                     	;# 
  1178  0FE9                     	;# 
  1179  0FEA                     	;# 
  1180  0FEB                     	;# 
  1181  0FED                     	;# 
  1182  0FEE                     	;# 
  1183  0FEF                     	;# 
  1184  0000                     	;# 
  1185  0001                     	;# 
  1186  0002                     	;# 
  1187  0003                     	;# 
  1188  0004                     	;# 
  1189  0005                     	;# 
  1190  0006                     	;# 
  1191  0007                     	;# 
  1192  0008                     	;# 
  1193  0009                     	;# 
  1194  000A                     	;# 
  1195  000B                     	;# 
  1196  000C                     	;# 
  1197  000D                     	;# 
  1198  000E                     	;# 
  1199  0011                     	;# 
  1200  0012                     	;# 
  1201  0015                     	;# 
  1202  0016                     	;# 
  1203  0016                     	;# 
  1204  0017                     	;# 
  1205  0018                     	;# 
  1206  0019                     	;# 
  1207  001A                     	;# 
  1208  001B                     	;# 
  1209  001C                     	;# 
  1210  008C                     	;# 
  1211  008D                     	;# 
  1212  008E                     	;# 
  1213  0091                     	;# 
  1214  0092                     	;# 
  1215  0095                     	;# 
  1216  0096                     	;# 
  1217  0097                     	;# 
  1218  0098                     	;# 
  1219  0099                     	;# 
  1220  009A                     	;# 
  1221  009B                     	;# 
  1222  009B                     	;# 
  1223  009C                     	;# 
  1224  009D                     	;# 
  1225  009E                     	;# 
  1226  009F                     	;# 
  1227  010C                     	;# 
  1228  010D                     	;# 
  1229  010E                     	;# 
  1230  0111                     	;# 
  1231  0112                     	;# 
  1232  0113                     	;# 
  1233  0114                     	;# 
  1234  0115                     	;# 
  1235  0116                     	;# 
  1236  0117                     	;# 
  1237  0118                     	;# 
  1238  0119                     	;# 
  1239  011D                     	;# 
  1240  018C                     	;# 
  1241  018D                     	;# 
  1242  018E                     	;# 
  1243  0191                     	;# 
  1244  0191                     	;# 
  1245  0192                     	;# 
  1246  0193                     	;# 
  1247  0193                     	;# 
  1248  0194                     	;# 
  1249  0195                     	;# 
  1250  0196                     	;# 
  1251  0197                     	;# 
  1252  0199                     	;# 
  1253  019A                     	;# 
  1254  019B                     	;# 
  1255  019C                     	;# 
  1256  019D                     	;# 
  1257  019E                     	;# 
  1258  019F                     	;# 
  1259  020C                     	;# 
  1260  020D                     	;# 
  1261  0211                     	;# 
  1262  0211                     	;# 
  1263  0212                     	;# 
  1264  0212                     	;# 
  1265  0213                     	;# 
  1266  0213                     	;# 
  1267  0214                     	;# 
  1268  0214                     	;# 
  1269  0215                     	;# 
  1270  0215                     	;# 
  1271  0215                     	;# 
  1272  0216                     	;# 
  1273  0216                     	;# 
  1274  0217                     	;# 
  1275  0217                     	;# 
  1276  0391                     	;# 
  1277  0392                     	;# 
  1278  0393                     	;# 
  1279  0394                     	;# 
  1280  0395                     	;# 
  1281  0396                     	;# 
  1282  039A                     	;# 
  1283  039B                     	;# 
  1284  0611                     	;# 
  1285  0612                     	;# 
  1286  0613                     	;# 
  1287  0613                     	;# 
  1288  0614                     	;# 
  1289  0615                     	;# 
  1290  0616                     	;# 
  1291  0616                     	;# 
  1292  0691                     	;# 
  1293  0692                     	;# 
  1294  0693                     	;# 
  1295  0694                     	;# 
  1296  0695                     	;# 
  1297  0E8E                     	;# 
  1298  0E8F                     	;# 
  1299  0E90                     	;# 
  1300  0E91                     	;# 
  1301  0E92                     	;# 
  1302  0E93                     	;# 
  1303  0E94                     	;# 
  1304  0E94                     	;# 
  1305  0E95                     	;# 
  1306  0E96                     	;# 
  1307  0E97                     	;# 
  1308  0E98                     	;# 
  1309  0E99                     	;# 
  1310  0E9A                     	;# 
  1311  0E9B                     	;# 
  1312  0E9C                     	;# 
  1313  0E9D                     	;# 
  1314  0E9E                     	;# 
  1315  0E9F                     	;# 
  1316  0FE4                     	;# 
  1317  0FE5                     	;# 
  1318  0FE6                     	;# 
  1319  0FE7                     	;# 
  1320  0FE8                     	;# 
  1321  0FE9                     	;# 
  1322  0FEA                     	;# 
  1323  0FEB                     	;# 
  1324  0FED                     	;# 
  1325  0FEE                     	;# 
  1326  0FEF                     	;# 
  1327  0000                     	;# 
  1328  0001                     	;# 
  1329  0002                     	;# 
  1330  0003                     	;# 
  1331  0004                     	;# 
  1332  0005                     	;# 
  1333  0006                     	;# 
  1334  0007                     	;# 
  1335  0008                     	;# 
  1336  0009                     	;# 
  1337  000A                     	;# 
  1338  000B                     	;# 
  1339  000C                     	;# 
  1340  000D                     	;# 
  1341  000E                     	;# 
  1342  0011                     	;# 
  1343  0012                     	;# 
  1344  0015                     	;# 
  1345  0016                     	;# 
  1346  0016                     	;# 
  1347  0017                     	;# 
  1348  0018                     	;# 
  1349  0019                     	;# 
  1350  001A                     	;# 
  1351  001B                     	;# 
  1352  001C                     	;# 
  1353  008C                     	;# 
  1354  008D                     	;# 
  1355  008E                     	;# 
  1356  0091                     	;# 
  1357  0092                     	;# 
  1358  0095                     	;# 
  1359  0096                     	;# 
  1360  0097                     	;# 
  1361  0098                     	;# 
  1362  0099                     	;# 
  1363  009A                     	;# 
  1364  009B                     	;# 
  1365  009B                     	;# 
  1366  009C                     	;# 
  1367  009D                     	;# 
  1368  009E                     	;# 
  1369  009F                     	;# 
  1370  010C                     	;# 
  1371  010D                     	;# 
  1372  010E                     	;# 
  1373  0111                     	;# 
  1374  0112                     	;# 
  1375  0113                     	;# 
  1376  0114                     	;# 
  1377  0115                     	;# 
  1378  0116                     	;# 
  1379  0117                     	;# 
  1380  0118                     	;# 
  1381  0119                     	;# 
  1382  011D                     	;# 
  1383  018C                     	;# 
  1384  018D                     	;# 
  1385  018E                     	;# 
  1386  0191                     	;# 
  1387  0191                     	;# 
  1388  0192                     	;# 
  1389  0193                     	;# 
  1390  0193                     	;# 
  1391  0194                     	;# 
  1392  0195                     	;# 
  1393  0196                     	;# 
  1394  0197                     	;# 
  1395  0199                     	;# 
  1396  019A                     	;# 
  1397  019B                     	;# 
  1398  019C                     	;# 
  1399  019D                     	;# 
  1400  019E                     	;# 
  1401  019F                     	;# 
  1402  020C                     	;# 
  1403  020D                     	;# 
  1404  0211                     	;# 
  1405  0211                     	;# 
  1406  0212                     	;# 
  1407  0212                     	;# 
  1408  0213                     	;# 
  1409  0213                     	;# 
  1410  0214                     	;# 
  1411  0214                     	;# 
  1412  0215                     	;# 
  1413  0215                     	;# 
  1414  0215                     	;# 
  1415  0216                     	;# 
  1416  0216                     	;# 
  1417  0217                     	;# 
  1418  0217                     	;# 
  1419  0391                     	;# 
  1420  0392                     	;# 
  1421  0393                     	;# 
  1422  0394                     	;# 
  1423  0395                     	;# 
  1424  0396                     	;# 
  1425  039A                     	;# 
  1426  039B                     	;# 
  1427  0611                     	;# 
  1428  0612                     	;# 
  1429  0613                     	;# 
  1430  0613                     	;# 
  1431  0614                     	;# 
  1432  0615                     	;# 
  1433  0616                     	;# 
  1434  0616                     	;# 
  1435  0691                     	;# 
  1436  0692                     	;# 
  1437  0693                     	;# 
  1438  0694                     	;# 
  1439  0695                     	;# 
  1440  0E8E                     	;# 
  1441  0E8F                     	;# 
  1442  0E90                     	;# 
  1443  0E91                     	;# 
  1444  0E92                     	;# 
  1445  0E93                     	;# 
  1446  0E94                     	;# 
  1447  0E94                     	;# 
  1448  0E95                     	;# 
  1449  0E96                     	;# 
  1450  0E97                     	;# 
  1451  0E98                     	;# 
  1452  0E99                     	;# 
  1453  0E9A                     	;# 
  1454  0E9B                     	;# 
  1455  0E9C                     	;# 
  1456  0E9D                     	;# 
  1457  0E9E                     	;# 
  1458  0E9F                     	;# 
  1459  0FE4                     	;# 
  1460  0FE5                     	;# 
  1461  0FE6                     	;# 
  1462  0FE7                     	;# 
  1463  0FE8                     	;# 
  1464  0FE9                     	;# 
  1465  0FEA                     	;# 
  1466  0FEB                     	;# 
  1467  0FED                     	;# 
  1468  0FEE                     	;# 
  1469  0FEF                     	;# 
  1470  0000                     	;# 
  1471  0001                     	;# 
  1472  0002                     	;# 
  1473  0003                     	;# 
  1474  0004                     	;# 
  1475  0005                     	;# 
  1476  0006                     	;# 
  1477  0007                     	;# 
  1478  0008                     	;# 
  1479  0009                     	;# 
  1480  000A                     	;# 
  1481  000B                     	;# 
  1482  000C                     	;# 
  1483  000D                     	;# 
  1484  000E                     	;# 
  1485  0011                     	;# 
  1486  0012                     	;# 
  1487  0015                     	;# 
  1488  0016                     	;# 
  1489  0016                     	;# 
  1490  0017                     	;# 
  1491  0018                     	;# 
  1492  0019                     	;# 
  1493  001A                     	;# 
  1494  001B                     	;# 
  1495  001C                     	;# 
  1496  008C                     	;# 
  1497  008D                     	;# 
  1498  008E                     	;# 
  1499  0091                     	;# 
  1500  0092                     	;# 
  1501  0095                     	;# 
  1502  0096                     	;# 
  1503  0097                     	;# 
  1504  0098                     	;# 
  1505  0099                     	;# 
  1506  009A                     	;# 
  1507  009B                     	;# 
  1508  009B                     	;# 
  1509  009C                     	;# 
  1510  009D                     	;# 
  1511  009E                     	;# 
  1512  009F                     	;# 
  1513  010C                     	;# 
  1514  010D                     	;# 
  1515  010E                     	;# 
  1516  0111                     	;# 
  1517  0112                     	;# 
  1518  0113                     	;# 
  1519  0114                     	;# 
  1520  0115                     	;# 
  1521  0116                     	;# 
  1522  0117                     	;# 
  1523  0118                     	;# 
  1524  0119                     	;# 
  1525  011D                     	;# 
  1526  018C                     	;# 
  1527  018D                     	;# 
  1528  018E                     	;# 
  1529  0191                     	;# 
  1530  0191                     	;# 
  1531  0192                     	;# 
  1532  0193                     	;# 
  1533  0193                     	;# 
  1534  0194                     	;# 
  1535  0195                     	;# 
  1536  0196                     	;# 
  1537  0197                     	;# 
  1538  0199                     	;# 
  1539  019A                     	;# 
  1540  019B                     	;# 
  1541  019C                     	;# 
  1542  019D                     	;# 
  1543  019E                     	;# 
  1544  019F                     	;# 
  1545  020C                     	;# 
  1546  020D                     	;# 
  1547  0211                     	;# 
  1548  0211                     	;# 
  1549  0212                     	;# 
  1550  0212                     	;# 
  1551  0213                     	;# 
  1552  0213                     	;# 
  1553  0214                     	;# 
  1554  0214                     	;# 
  1555  0215                     	;# 
  1556  0215                     	;# 
  1557  0215                     	;# 
  1558  0216                     	;# 
  1559  0216                     	;# 
  1560  0217                     	;# 
  1561  0217                     	;# 
  1562  0391                     	;# 
  1563  0392                     	;# 
  1564  0393                     	;# 
  1565  0394                     	;# 
  1566  0395                     	;# 
  1567  0396                     	;# 
  1568  039A                     	;# 
  1569  039B                     	;# 
  1570  0611                     	;# 
  1571  0612                     	;# 
  1572  0613                     	;# 
  1573  0613                     	;# 
  1574  0614                     	;# 
  1575  0615                     	;# 
  1576  0616                     	;# 
  1577  0616                     	;# 
  1578  0691                     	;# 
  1579  0692                     	;# 
  1580  0693                     	;# 
  1581  0694                     	;# 
  1582  0695                     	;# 
  1583  0E8E                     	;# 
  1584  0E8F                     	;# 
  1585  0E90                     	;# 
  1586  0E91                     	;# 
  1587  0E92                     	;# 
  1588  0E93                     	;# 
  1589  0E94                     	;# 
  1590  0E94                     	;# 
  1591  0E95                     	;# 
  1592  0E96                     	;# 
  1593  0E97                     	;# 
  1594  0E98                     	;# 
  1595  0E99                     	;# 
  1596  0E9A                     	;# 
  1597  0E9B                     	;# 
  1598  0E9C                     	;# 
  1599  0E9D                     	;# 
  1600  0E9E                     	;# 
  1601  0E9F                     	;# 
  1602  0FE4                     	;# 
  1603  0FE5                     	;# 
  1604  0FE6                     	;# 
  1605  0FE7                     	;# 
  1606  0FE8                     	;# 
  1607  0FE9                     	;# 
  1608  0FEA                     	;# 
  1609  0FEB                     	;# 
  1610  0FED                     	;# 
  1611  0FEE                     	;# 
  1612  0FEF                     	;# 
  1613  0000                     	;# 
  1614  0001                     	;# 
  1615  0002                     	;# 
  1616  0003                     	;# 
  1617  0004                     	;# 
  1618  0005                     	;# 
  1619  0006                     	;# 
  1620  0007                     	;# 
  1621  0008                     	;# 
  1622  0009                     	;# 
  1623  000A                     	;# 
  1624  000B                     	;# 
  1625  000C                     	;# 
  1626  000D                     	;# 
  1627  000E                     	;# 
  1628  0011                     	;# 
  1629  0012                     	;# 
  1630  0015                     	;# 
  1631  0016                     	;# 
  1632  0016                     	;# 
  1633  0017                     	;# 
  1634  0018                     	;# 
  1635  0019                     	;# 
  1636  001A                     	;# 
  1637  001B                     	;# 
  1638  001C                     	;# 
  1639  008C                     	;# 
  1640  008D                     	;# 
  1641  008E                     	;# 
  1642  0091                     	;# 
  1643  0092                     	;# 
  1644  0095                     	;# 
  1645  0096                     	;# 
  1646  0097                     	;# 
  1647  0098                     	;# 
  1648  0099                     	;# 
  1649  009A                     	;# 
  1650  009B                     	;# 
  1651  009B                     	;# 
  1652  009C                     	;# 
  1653  009D                     	;# 
  1654  009E                     	;# 
  1655  009F                     	;# 
  1656  010C                     	;# 
  1657  010D                     	;# 
  1658  010E                     	;# 
  1659  0111                     	;# 
  1660  0112                     	;# 
  1661  0113                     	;# 
  1662  0114                     	;# 
  1663  0115                     	;# 
  1664  0116                     	;# 
  1665  0117                     	;# 
  1666  0118                     	;# 
  1667  0119                     	;# 
  1668  011D                     	;# 
  1669  018C                     	;# 
  1670  018D                     	;# 
  1671  018E                     	;# 
  1672  0191                     	;# 
  1673  0191                     	;# 
  1674  0192                     	;# 
  1675  0193                     	;# 
  1676  0193                     	;# 
  1677  0194                     	;# 
  1678  0195                     	;# 
  1679  0196                     	;# 
  1680  0197                     	;# 
  1681  0199                     	;# 
  1682  019A                     	;# 
  1683  019B                     	;# 
  1684  019C                     	;# 
  1685  019D                     	;# 
  1686  019E                     	;# 
  1687  019F                     	;# 
  1688  020C                     	;# 
  1689  020D                     	;# 
  1690  0211                     	;# 
  1691  0211                     	;# 
  1692  0212                     	;# 
  1693  0212                     	;# 
  1694  0213                     	;# 
  1695  0213                     	;# 
  1696  0214                     	;# 
  1697  0214                     	;# 
  1698  0215                     	;# 
  1699  0215                     	;# 
  1700  0215                     	;# 
  1701  0216                     	;# 
  1702  0216                     	;# 
  1703  0217                     	;# 
  1704  0217                     	;# 
  1705  0391                     	;# 
  1706  0392                     	;# 
  1707  0393                     	;# 
  1708  0394                     	;# 
  1709  0395                     	;# 
  1710  0396                     	;# 
  1711  039A                     	;# 
  1712  039B                     	;# 
  1713  0611                     	;# 
  1714  0612                     	;# 
  1715  0613                     	;# 
  1716  0613                     	;# 
  1717  0614                     	;# 
  1718  0615                     	;# 
  1719  0616                     	;# 
  1720  0616                     	;# 
  1721  0691                     	;# 
  1722  0692                     	;# 
  1723  0693                     	;# 
  1724  0694                     	;# 
  1725  0695                     	;# 
  1726  0E8E                     	;# 
  1727  0E8F                     	;# 
  1728  0E90                     	;# 
  1729  0E91                     	;# 
  1730  0E92                     	;# 
  1731  0E93                     	;# 
  1732  0E94                     	;# 
  1733  0E94                     	;# 
  1734  0E95                     	;# 
  1735  0E96                     	;# 
  1736  0E97                     	;# 
  1737  0E98                     	;# 
  1738  0E99                     	;# 
  1739  0E9A                     	;# 
  1740  0E9B                     	;# 
  1741  0E9C                     	;# 
  1742  0E9D                     	;# 
  1743  0E9E                     	;# 
  1744  0E9F                     	;# 
  1745  0FE4                     	;# 
  1746  0FE5                     	;# 
  1747  0FE6                     	;# 
  1748  0FE7                     	;# 
  1749  0FE8                     	;# 
  1750  0FE9                     	;# 
  1751  0FEA                     	;# 
  1752  0FEB                     	;# 
  1753  0FED                     	;# 
  1754  0FEE                     	;# 
  1755  0FEF                     	;# 
  1756  0000                     	;# 
  1757  0001                     	;# 
  1758  0002                     	;# 
  1759  0003                     	;# 
  1760  0004                     	;# 
  1761  0005                     	;# 
  1762  0006                     	;# 
  1763  0007                     	;# 
  1764  0008                     	;# 
  1765  0009                     	;# 
  1766  000A                     	;# 
  1767  000B                     	;# 
  1768  000C                     	;# 
  1769  000D                     	;# 
  1770  000E                     	;# 
  1771  0011                     	;# 
  1772  0012                     	;# 
  1773  0015                     	;# 
  1774  0016                     	;# 
  1775  0016                     	;# 
  1776  0017                     	;# 
  1777  0018                     	;# 
  1778  0019                     	;# 
  1779  001A                     	;# 
  1780  001B                     	;# 
  1781  001C                     	;# 
  1782  008C                     	;# 
  1783  008D                     	;# 
  1784  008E                     	;# 
  1785  0091                     	;# 
  1786  0092                     	;# 
  1787  0095                     	;# 
  1788  0096                     	;# 
  1789  0097                     	;# 
  1790  0098                     	;# 
  1791  0099                     	;# 
  1792  009A                     	;# 
  1793  009B                     	;# 
  1794  009B                     	;# 
  1795  009C                     	;# 
  1796  009D                     	;# 
  1797  009E                     	;# 
  1798  009F                     	;# 
  1799  010C                     	;# 
  1800  010D                     	;# 
  1801  010E                     	;# 
  1802  0111                     	;# 
  1803  0112                     	;# 
  1804  0113                     	;# 
  1805  0114                     	;# 
  1806  0115                     	;# 
  1807  0116                     	;# 
  1808  0117                     	;# 
  1809  0118                     	;# 
  1810  0119                     	;# 
  1811  011D                     	;# 
  1812  018C                     	;# 
  1813  018D                     	;# 
  1814  018E                     	;# 
  1815  0191                     	;# 
  1816  0191                     	;# 
  1817  0192                     	;# 
  1818  0193                     	;# 
  1819  0193                     	;# 
  1820  0194                     	;# 
  1821  0195                     	;# 
  1822  0196                     	;# 
  1823  0197                     	;# 
  1824  0199                     	;# 
  1825  019A                     	;# 
  1826  019B                     	;# 
  1827  019C                     	;# 
  1828  019D                     	;# 
  1829  019E                     	;# 
  1830  019F                     	;# 
  1831  020C                     	;# 
  1832  020D                     	;# 
  1833  0211                     	;# 
  1834  0211                     	;# 
  1835  0212                     	;# 
  1836  0212                     	;# 
  1837  0213                     	;# 
  1838  0213                     	;# 
  1839  0214                     	;# 
  1840  0214                     	;# 
  1841  0215                     	;# 
  1842  0215                     	;# 
  1843  0215                     	;# 
  1844  0216                     	;# 
  1845  0216                     	;# 
  1846  0217                     	;# 
  1847  0217                     	;# 
  1848  0391                     	;# 
  1849  0392                     	;# 
  1850  0393                     	;# 
  1851  0394                     	;# 
  1852  0395                     	;# 
  1853  0396                     	;# 
  1854  039A                     	;# 
  1855  039B                     	;# 
  1856  0611                     	;# 
  1857  0612                     	;# 
  1858  0613                     	;# 
  1859  0613                     	;# 
  1860  0614                     	;# 
  1861  0615                     	;# 
  1862  0616                     	;# 
  1863  0616                     	;# 
  1864  0691                     	;# 
  1865  0692                     	;# 
  1866  0693                     	;# 
  1867  0694                     	;# 
  1868  0695                     	;# 
  1869  0E8E                     	;# 
  1870  0E8F                     	;# 
  1871  0E90                     	;# 
  1872  0E91                     	;# 
  1873  0E92                     	;# 
  1874  0E93                     	;# 
  1875  0E94                     	;# 
  1876  0E94                     	;# 
  1877  0E95                     	;# 
  1878  0E96                     	;# 
  1879  0E97                     	;# 
  1880  0E98                     	;# 
  1881  0E99                     	;# 
  1882  0E9A                     	;# 
  1883  0E9B                     	;# 
  1884  0E9C                     	;# 
  1885  0E9D                     	;# 
  1886  0E9E                     	;# 
  1887  0E9F                     	;# 
  1888  0FE4                     	;# 
  1889  0FE5                     	;# 
  1890  0FE6                     	;# 
  1891  0FE7                     	;# 
  1892  0FE8                     	;# 
  1893  0FE9                     	;# 
  1894  0FEA                     	;# 
  1895  0FEB                     	;# 
  1896  0FED                     	;# 
  1897  0FEE                     	;# 
  1898  0FEF                     	;# 
  1899  0000                     	;# 
  1900  0001                     	;# 
  1901  0002                     	;# 
  1902  0003                     	;# 
  1903  0004                     	;# 
  1904  0005                     	;# 
  1905  0006                     	;# 
  1906  0007                     	;# 
  1907  0008                     	;# 
  1908  0009                     	;# 
  1909  000A                     	;# 
  1910  000B                     	;# 
  1911  000C                     	;# 
  1912  000D                     	;# 
  1913  000E                     	;# 
  1914  0011                     	;# 
  1915  0012                     	;# 
  1916  0015                     	;# 
  1917  0016                     	;# 
  1918  0016                     	;# 
  1919  0017                     	;# 
  1920  0018                     	;# 
  1921  0019                     	;# 
  1922  001A                     	;# 
  1923  001B                     	;# 
  1924  001C                     	;# 
  1925  008C                     	;# 
  1926  008D                     	;# 
  1927  008E                     	;# 
  1928  0091                     	;# 
  1929  0092                     	;# 
  1930  0095                     	;# 
  1931  0096                     	;# 
  1932  0097                     	;# 
  1933  0098                     	;# 
  1934  0099                     	;# 
  1935  009A                     	;# 
  1936  009B                     	;# 
  1937  009B                     	;# 
  1938  009C                     	;# 
  1939  009D                     	;# 
  1940  009E                     	;# 
  1941  009F                     	;# 
  1942  010C                     	;# 
  1943  010D                     	;# 
  1944  010E                     	;# 
  1945  0111                     	;# 
  1946  0112                     	;# 
  1947  0113                     	;# 
  1948  0114                     	;# 
  1949  0115                     	;# 
  1950  0116                     	;# 
  1951  0117                     	;# 
  1952  0118                     	;# 
  1953  0119                     	;# 
  1954  011D                     	;# 
  1955  018C                     	;# 
  1956  018D                     	;# 
  1957  018E                     	;# 
  1958  0191                     	;# 
  1959  0191                     	;# 
  1960  0192                     	;# 
  1961  0193                     	;# 
  1962  0193                     	;# 
  1963  0194                     	;# 
  1964  0195                     	;# 
  1965  0196                     	;# 
  1966  0197                     	;# 
  1967  0199                     	;# 
  1968  019A                     	;# 
  1969  019B                     	;# 
  1970  019C                     	;# 
  1971  019D                     	;# 
  1972  019E                     	;# 
  1973  019F                     	;# 
  1974  020C                     	;# 
  1975  020D                     	;# 
  1976  0211                     	;# 
  1977  0211                     	;# 
  1978  0212                     	;# 
  1979  0212                     	;# 
  1980  0213                     	;# 
  1981  0213                     	;# 
  1982  0214                     	;# 
  1983  0214                     	;# 
  1984  0215                     	;# 
  1985  0215                     	;# 
  1986  0215                     	;# 
  1987  0216                     	;# 
  1988  0216                     	;# 
  1989  0217                     	;# 
  1990  0217                     	;# 
  1991  0391                     	;# 
  1992  0392                     	;# 
  1993  0393                     	;# 
  1994  0394                     	;# 
  1995  0395                     	;# 
  1996  0396                     	;# 
  1997  039A                     	;# 
  1998  039B                     	;# 
  1999  0611                     	;# 
  2000  0612                     	;# 
  2001  0613                     	;# 
  2002  0613                     	;# 
  2003  0614                     	;# 
  2004  0615                     	;# 
  2005  0616                     	;# 
  2006  0616                     	;# 
  2007  0691                     	;# 
  2008  0692                     	;# 
  2009  0693                     	;# 
  2010  0694                     	;# 
  2011  0695                     	;# 
  2012  0E8E                     	;# 
  2013  0E8F                     	;# 
  2014  0E90                     	;# 
  2015  0E91                     	;# 
  2016  0E92                     	;# 
  2017  0E93                     	;# 
  2018  0E94                     	;# 
  2019  0E94                     	;# 
  2020  0E95                     	;# 
  2021  0E96                     	;# 
  2022  0E97                     	;# 
  2023  0E98                     	;# 
  2024  0E99                     	;# 
  2025  0E9A                     	;# 
  2026  0E9B                     	;# 
  2027  0E9C                     	;# 
  2028  0E9D                     	;# 
  2029  0E9E                     	;# 
  2030  0E9F                     	;# 
  2031  0FE4                     	;# 
  2032  0FE5                     	;# 
  2033  0FE6                     	;# 
  2034  0FE7                     	;# 
  2035  0FE8                     	;# 
  2036  0FE9                     	;# 
  2037  0FEA                     	;# 
  2038  0FEB                     	;# 
  2039  0FED                     	;# 
  2040  0FEE                     	;# 
  2041  0FEF                     	;# 
  2042                           
  2043                           	psect	stringtext
  2044  1000                     __pstringtext:	
  2045  1000                     __stringtab:	
  2046  1000  3400               	retlw	0
  2047  1001                     __end_of__stringtab:	
  2048  1001                     process_level@idx_midi_map:	
  2049  1001  343F               	retlw	63
  2050  1002  3418               	retlw	24
  2051  1003  3418               	retlw	24
  2052  1004  3418               	retlw	24
  2053  1005  3418               	retlw	24
  2054  1006  3447               	retlw	71
  2055  1007  3418               	retlw	24
  2056  1008  3418               	retlw	24
  2057  1009  3418               	retlw	24
  2058  100A  3418               	retlw	24
  2059  100B  3418               	retlw	24
  2060  100C  3418               	retlw	24
  2061  100D  3418               	retlw	24
  2062  100E  3444               	retlw	68
  2063  100F  3445               	retlw	69
  2064  1010  3446               	retlw	70
  2065  1011  3431               	retlw	49
  2066  1012  3432               	retlw	50
  2067  1013  3418               	retlw	24
  2068  1014  3418               	retlw	24
  2069  1015  3430               	retlw	48
  2070  1016  3441               	retlw	65
  2071  1017  3442               	retlw	66
  2072  1018  3443               	retlw	67
  2073  1019  3418               	retlw	24
  2074  101A  3418               	retlw	24
  2075  101B  3436               	retlw	54
  2076  101C  3438               	retlw	56
  2077  101D  3434               	retlw	52
  2078  101E  343B               	retlw	59
  2079  101F  343D               	retlw	61
  2080  1020  3440               	retlw	64
  2081  1021  3433               	retlw	51
  2082  1022  3435               	retlw	53
  2083  1023  3437               	retlw	55
  2084  1024  3439               	retlw	57
  2085  1025  343A               	retlw	58
  2086  1026  343C               	retlw	60
  2087  1027  343E               	retlw	62
  2088  1028                     __end_ofprocess_level@idx_midi_map:	
  2089  1028                     _USB_SD_Ptr:	
  2090  1028  34F5               	retlw	low (_sd000| (0+32768))
  2091  1029  3490               	retlw	high (_sd000| (0+32768))
  2092  102A  3495               	retlw	low (_sd001| (0+32768))
  2093  102B  3490               	retlw	high (_sd001| (0+32768))
  2094  102C  34C9               	retlw	low (_sd002| (0+32768))
  2095  102D  3490               	retlw	high (_sd002| (0+32768))
  2096  102E                     __end_of_USB_SD_Ptr:	
  2097  102E                     _USB_CD_Ptr:	
  2098  102E  3430               	retlw	low (_configDescriptor1| (0+32768))
  2099  102F  3490               	retlw	high (_configDescriptor1| (0+32768))
  2100  1030                     __end_of_USB_CD_Ptr:	
  2101  1030                     _configDescriptor1:	
  2102  1030  3409               	retlw	9
  2103  1031  3402               	retlw	2
  2104  1032  3465               	retlw	101
  2105  1033  3400               	retlw	0
  2106  1034  3402               	retlw	2
  2107  1035  3401               	retlw	1
  2108  1036  3400               	retlw	0
  2109  1037  34C0               	retlw	192
  2110  1038  3432               	retlw	50
  2111  1039  3409               	retlw	9
  2112  103A  3404               	retlw	4
  2113  103B  3400               	retlw	0
  2114  103C  3400               	retlw	0
  2115  103D  3400               	retlw	0
  2116  103E  3401               	retlw	1
  2117  103F  3401               	retlw	1
  2118  1040  3400               	retlw	0
  2119  1041  3400               	retlw	0
  2120  1042  3409               	retlw	9
  2121  1043  3424               	retlw	36
  2122  1044  3401               	retlw	1
  2123  1045  3400               	retlw	0
  2124  1046  3401               	retlw	1
  2125  1047  3409               	retlw	9
  2126  1048  3400               	retlw	0
  2127  1049  3401               	retlw	1
  2128  104A  3401               	retlw	1
  2129  104B  3409               	retlw	9
  2130  104C  3404               	retlw	4
  2131  104D  3401               	retlw	1
  2132  104E  3400               	retlw	0
  2133  104F  3402               	retlw	2
  2134  1050  3401               	retlw	1
  2135  1051  3403               	retlw	3
  2136  1052  3400               	retlw	0
  2137  1053  3400               	retlw	0
  2138  1054  3407               	retlw	7
  2139  1055  3424               	retlw	36
  2140  1056  3401               	retlw	1
  2141  1057  3400               	retlw	0
  2142  1058  3401               	retlw	1
  2143  1059  3441               	retlw	65
  2144  105A  3400               	retlw	0
  2145  105B  3406               	retlw	6
  2146  105C  3424               	retlw	36
  2147  105D  3402               	retlw	2
  2148  105E  3401               	retlw	1
  2149  105F  3401               	retlw	1
  2150  1060  3400               	retlw	0
  2151  1061  3406               	retlw	6
  2152  1062  3424               	retlw	36
  2153  1063  3402               	retlw	2
  2154  1064  3402               	retlw	2
  2155  1065  3402               	retlw	2
  2156  1066  3400               	retlw	0
  2157  1067  3409               	retlw	9
  2158  1068  3424               	retlw	36
  2159  1069  3403               	retlw	3
  2160  106A  3401               	retlw	1
  2161  106B  3403               	retlw	3
  2162  106C  3401               	retlw	1
  2163  106D  3402               	retlw	2
  2164  106E  3401               	retlw	1
  2165  106F  3400               	retlw	0
  2166  1070  3409               	retlw	9
  2167  1071  3424               	retlw	36
  2168  1072  3403               	retlw	3
  2169  1073  3402               	retlw	2
  2170  1074  3404               	retlw	4
  2171  1075  3401               	retlw	1
  2172  1076  3401               	retlw	1
  2173  1077  3401               	retlw	1
  2174  1078  3400               	retlw	0
  2175  1079  3409               	retlw	9
  2176  107A  3405               	retlw	5
  2177  107B  3401               	retlw	1
  2178  107C  3402               	retlw	2
  2179  107D  3440               	retlw	64
  2180  107E  3400               	retlw	0
  2181  107F  3400               	retlw	0
  2182  1080  3400               	retlw	0
  2183  1081  3400               	retlw	0
  2184  1082  3405               	retlw	5
  2185  1083  3425               	retlw	37
  2186  1084  3401               	retlw	1
  2187  1085  3401               	retlw	1
  2188  1086  3401               	retlw	1
  2189  1087  3409               	retlw	9
  2190  1088  3405               	retlw	5
  2191  1089  3481               	retlw	129
  2192  108A  3402               	retlw	2
  2193  108B  3440               	retlw	64
  2194  108C  3400               	retlw	0
  2195  108D  3400               	retlw	0
  2196  108E  3400               	retlw	0
  2197  108F  3400               	retlw	0
  2198  1090  3405               	retlw	5
  2199  1091  3425               	retlw	37
  2200  1092  3401               	retlw	1
  2201  1093  3401               	retlw	1
  2202  1094  3403               	retlw	3
  2203  1095                     __end_of_configDescriptor1:	
  2204  1095                     _sd001:	
  2205  1095  3434               	retlw	52
  2206  1096  3403               	retlw	3
  2207  1097  344D               	retlw	77
  2208  1098  3400               	retlw	0
  2209  1099  3469               	retlw	105
  2210  109A  3400               	retlw	0
  2211  109B  3463               	retlw	99
  2212  109C  3400               	retlw	0
  2213  109D  3472               	retlw	114
  2214  109E  3400               	retlw	0
  2215  109F  346F               	retlw	111
  2216  10A0  3400               	retlw	0
  2217  10A1  3463               	retlw	99
  2218  10A2  3400               	retlw	0
  2219  10A3  3468               	retlw	104
  2220  10A4  3400               	retlw	0
  2221  10A5  3469               	retlw	105
  2222  10A6  3400               	retlw	0
  2223  10A7  3470               	retlw	112
  2224  10A8  3400               	retlw	0
  2225  10A9  3420               	retlw	32
  2226  10AA  3400               	retlw	0
  2227  10AB  3454               	retlw	84
  2228  10AC  3400               	retlw	0
  2229  10AD  3465               	retlw	101
  2230  10AE  3400               	retlw	0
  2231  10AF  3463               	retlw	99
  2232  10B0  3400               	retlw	0
  2233  10B1  3468               	retlw	104
  2234  10B2  3400               	retlw	0
  2235  10B3  346E               	retlw	110
  2236  10B4  3400               	retlw	0
  2237  10B5  346F               	retlw	111
  2238  10B6  3400               	retlw	0
  2239  10B7  346C               	retlw	108
  2240  10B8  3400               	retlw	0
  2241  10B9  346F               	retlw	111
  2242  10BA  3400               	retlw	0
  2243  10BB  3467               	retlw	103
  2244  10BC  3400               	retlw	0
  2245  10BD  3479               	retlw	121
  2246  10BE  3400               	retlw	0
  2247  10BF  3420               	retlw	32
  2248  10C0  3400               	retlw	0
  2249  10C1  3449               	retlw	73
  2250  10C2  3400               	retlw	0
  2251  10C3  346E               	retlw	110
  2252  10C4  3400               	retlw	0
  2253  10C5  3463               	retlw	99
  2254  10C6  3400               	retlw	0
  2255  10C7  342E               	retlw	46
  2256  10C8  3400               	retlw	0
  2257  10C9                     __end_of_sd001:	
  2258  10C9                     _sd002:	
  2259  10C9  341A               	retlw	26
  2260  10CA  3403               	retlw	3
  2261  10CB  344D               	retlw	77
  2262  10CC  3400               	retlw	0
  2263  10CD  3449               	retlw	73
  2264  10CE  3400               	retlw	0
  2265  10CF  3444               	retlw	68
  2266  10D0  3400               	retlw	0
  2267  10D1  3449               	retlw	73
  2268  10D2  3400               	retlw	0
  2269  10D3  3420               	retlw	32
  2270  10D4  3400               	retlw	0
  2271  10D5  3445               	retlw	69
  2272  10D6  3400               	retlw	0
  2273  10D7  3478               	retlw	120
  2274  10D8  3400               	retlw	0
  2275  10D9  3461               	retlw	97
  2276  10DA  3400               	retlw	0
  2277  10DB  346D               	retlw	109
  2278  10DC  3400               	retlw	0
  2279  10DD  3470               	retlw	112
  2280  10DE  3400               	retlw	0
  2281  10DF  346C               	retlw	108
  2282  10E0  3400               	retlw	0
  2283  10E1  3465               	retlw	101
  2284  10E2  3400               	retlw	0
  2285  10E3                     __end_of_sd002:	
  2286  10E3                     _device_dsc:	
  2287  10E3  3412               	retlw	18
  2288  10E4  3401               	retlw	1
  2289  10E5  3400               	retlw	0
  2290  10E6  3402               	retlw	2
  2291  10E7  3400               	retlw	0
  2292  10E8  3400               	retlw	0
  2293  10E9  3400               	retlw	0
  2294  10EA  3408               	retlw	8
  2295  10EB  34D8               	retlw	216
  2296  10EC  3404               	retlw	4
  2297  10ED  3459               	retlw	89
  2298  10EE  3400               	retlw	0
  2299  10EF  3402               	retlw	2
  2300  10F0  3400               	retlw	0
  2301  10F1  3401               	retlw	1
  2302  10F2  3402               	retlw	2
  2303  10F3  3400               	retlw	0
  2304  10F4  3401               	retlw	1
  2305  10F5                     __end_of_device_dsc:	
  2306  10F5                     _sd000:	
  2307  10F5  3404               	retlw	4
  2308  10F6  3403               	retlw	3
  2309  10F7  3409               	retlw	9
  2310  10F8  3404               	retlw	4
  2311  10F9                     __end_of_sd000:	
  2312  10F9                     process_level@midi_shift:	
  2313  10F9  3400               	retlw	0
  2314  10FA                     __end_ofprocess_level@midi_shift:	
  2315  000B                     _INTCONbits	set	11
  2316  0012                     _PIR2bits	set	18
  2317  0015                     _TMR0	set	21
  2318  009D                     _ADCON0bits	set	157
  2319  009E                     _ADCON1bits	set	158
  2320  009F                     _ADCON2bits	set	159
  2321  009C                     _ADRESH	set	156
  2322  0095                     _OPTION_REGbits	set	149
  2323  0099                     _OSCCON	set	153
  2324  0091                     _PIE1bits	set	145
  2325  0092                     _PIE2bits	set	146
  2326  008C                     _TRISAbits	set	140
  2327  008D                     _TRISBbits	set	141
  2328  008E                     _TRISCbits	set	142
  2329  010E                     _LATCbits	set	270
  2330  018C                     _ANSELA	set	396
  2331  018C                     _ANSELAbits	set	396
  2332  018E                     _ANSELCbits	set	398
  2333  0215                     _SSP1CON1	set	533
  2334  0217                     _SSP1CON3	set	535
  2335  0214                     _SSP1STAT	set	532
  2336  039B                     _ACTCON	set	923
  2337  0E96                     _UADDR	set	3734
  2338  0E91                     _UCFG	set	3729
  2339  0E8E                     _UCON	set	3726
  2340  0E8E                     _UCONbits	set	3726
  2341  0E97                     _UEIE	set	3735
  2342  0E93                     _UEIR	set	3731
  2343  0E98                     _UEP0bits	set	3736
  2344  0E92                     _UIE	set	3730
  2345  0E92                     _UIEbits	set	3730
  2346  0E90                     _UIR	set	3728
  2347  0E90                     _UIRbits	set	3728
  2348  0E8F                     _USTAT	set	3727
  2349  0E98                     _UEP0	set	3736
  2350  0E99                     _UEP1	set	3737
  2351                           
  2352                           ; #config settings
  2353  0000                     
  2354                           	psect	bssBANK0
  2355  0050                     __pbssBANK0:	
  2356  0050                     APP_LEDUpdateUSBStatus@ledCount:	
  2357  0050                     	ds	2
  2358  0052                     _pBDTEntryIn:	
  2359  0052                     	ds	2
  2360  0054                     _USBDeferStatusStagePacket:	
  2361  0054                     	ds	1
  2362  0055                     _USBDeviceState:	
  2363  0055                     	ds	1
  2364  0056                     _USBRxHandle:	
  2365  0056                     	ds	1
  2366  0057                     _controlTransferState:	
  2367  0057                     	ds	1
  2368  0058                     _pBDTEntryEP0OutCurrent:	
  2369  0058                     	ds	1
  2370  0059                     _pBDTEntryEP0OutNext:	
  2371  0059                     	ds	1
  2372  005A                     store_key_level@idx_key:	
  2373  005A                     	ds	1
  2374  005B                     _inPipes:	
  2375  005B                     	ds	5
  2376  0060                     _USTATcopy:	
  2377  0060                     	ds	1
  2378                           
  2379                           	psect	bssBANK1
  2380  00E0                     __pbssBANK1:	
  2381  00E0                     _USBDeferINDataStagePackets:	
  2382  00E0                     	ds	1
  2383  00E1                     _USBDeferOUTDataStagePackets:	
  2384  00E1                     	ds	1
  2385  00E2                     _USBStatusStageEnabledFlag1:	
  2386  00E2                     	ds	1
  2387  00E3                     _USBStatusStageEnabledFlag2:	
  2388  00E3                     	ds	1
  2389  00E4                     _USBStatusStageTimeoutCounter:	
  2390  00E4                     	ds	1
  2391  00E5                     _USBTxHandle:	
  2392  00E5                     	ds	1
  2393  00E6                     _endpoint_number:	
  2394  00E6                     	ds	1
  2395  00E7                     _msCounter:	
  2396  00E7                     	ds	1
  2397  00E8                     _pDst:	
  2398  00E8                     	ds	1
  2399  00E9                     _pitch:	
  2400  00E9                     	ds	1
  2401  00EA                     _sentNoteOff:	
  2402  00EA                     	ds	1
  2403  00EB                     _shortPacketStatus:	
  2404  00EB                     	ds	1
  2405  00EC                     _wait_timer:	
  2406  00EC                     	ds	1
  2407  00ED                     is_end_of_scan@scan_counter:	
  2408  00ED                     	ds	1
  2409  00EE                     _USBActiveConfiguration:	
  2410  00EE                     	ds	1
  2411  00EF                     _USBAlternateInterface:	
  2412  00EF                     	ds	1
  2413                           
  2414                           	psect	bssBANK2
  2415  0120                     __pbssBANK2:	
  2416  0120                     process_level@key_states:	
  2417  0120                     	ds	39
  2418  0147                     _outPipes:	
  2419  0147                     	ds	6
  2420  014D                     _ep_data_in:	
  2421  014D                     	ds	2
  2422  014F                     _ep_data_out:	
  2423  014F                     	ds	2
  2424  0151                     _note_event:	
  2425  0151                     	ds	2
  2426  0153                     _pBDTEntryOut:	
  2427  0153                     	ds	2
  2428  0155                     _BothEP0OutUOWNsSet:	
  2429  0155                     	ds	1
  2430  0156                     _RemoteWakeup:	
  2431  0156                     	ds	1
  2432  0157                     _USBBusIsSuspended:	
  2433  0157                     	ds	1
  2434  0158                     _USBTicksSinceSuspendEnd:	
  2435  0158                     	ds	1
  2436  0159                     _is_initialized:	
  2437  0159                     	ds	1
  2438  015A                     scan_task@state:	
  2439  015A                     	ds	1
  2440                           
  2441                           	psect	bssBANK3
  2442  01A4                     __pbssBANK3:	
  2443  01A4                     process_level@key_off_counter:	
  2444  01A4                     	ds	39
  2445                           
  2446                           	psect	bssBANK4
  2447  0220                     __pbssBANK4:	
  2448  0220                     _adc_levels:	
  2449  0220                     	ds	39
  2450  0247                     process_level@key_on_counter:	
  2451  0247                     	ds	39
  2452                           
  2453                           	psect	clrtext
  2454  0D85                     clear_ram0:	
  2455                           ;	Called with FSR0 containing the base address, and
  2456                           ;	WREG with the size to clear
  2457                           
  2458  0D85  0064               	clrwdt	;clear the watchdog before getting into this loop
  2459  0D86                     clrloop0:	
  2460  0D86  0180               	clrf	0	;clear RAM location pointed to by FSR
  2461  0D87  3101               	addfsr 0,1
  2462  0D88  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2463  0D89  2D86               	goto	clrloop0	;have we reached the end yet?
  2464  0D8A  3400               	retlw	0	;all done for this memory range, return
  2465                           
  2466                           	psect	cstackCOMMON
  2467  0070                     __pcstackCOMMON:	
  2468  0070                     ?_LED_Enable:	
  2469  0070                     ??_LED_Enable:	
  2470                           ; 0 bytes @ 0x0
  2471                           
  2472  0070                     ?_LED_Off:	
  2473                           ; 0 bytes @ 0x0
  2474                           
  2475  0070                     ??_LED_Off:	
  2476                           ; 0 bytes @ 0x0
  2477                           
  2478  0070                     ?_LED_On:	
  2479                           ; 0 bytes @ 0x0
  2480                           
  2481  0070                     ??_LED_On:	
  2482                           ; 0 bytes @ 0x0
  2483                           
  2484  0070                     ?_USBDeviceInit:	
  2485                           ; 0 bytes @ 0x0
  2486                           
  2487  0070                     ??_USBDeviceInit:	
  2488                           ; 0 bytes @ 0x0
  2489                           
  2490  0070                     ?_BLEDeviceInit:	
  2491                           ; 0 bytes @ 0x0
  2492                           
  2493  0070                     ??_BLEDeviceInit:	
  2494                           ; 0 bytes @ 0x0
  2495                           
  2496  0070                     ?_APP_DeviceAudioMIDITasks:	
  2497                           ; 0 bytes @ 0x0
  2498                           
  2499  0070                     ?_USBDeviceTasks:	
  2500                           ; 0 bytes @ 0x0
  2501                           
  2502  0070                     ?_APP_DeviceAudioMIDISOFHandler:	
  2503                           ; 0 bytes @ 0x0
  2504                           
  2505  0070                     ??_APP_DeviceAudioMIDISOFHandler:	
  2506                           ; 0 bytes @ 0x0
  2507                           
  2508  0070                     ?_APP_DeviceAudioMIDIInitialize:	
  2509                           ; 0 bytes @ 0x0
  2510                           
  2511  0070                     ?_PIN_MANAGER_Initialize:	
  2512                           ; 0 bytes @ 0x0
  2513                           
  2514  0070                     ??_PIN_MANAGER_Initialize:	
  2515                           ; 0 bytes @ 0x0
  2516                           
  2517  0070                     ?_SPI_Initialize:	
  2518                           ; 0 bytes @ 0x0
  2519                           
  2520  0070                     ??_SPI_Initialize:	
  2521                           ; 0 bytes @ 0x0
  2522                           
  2523  0070                     ?_USBWakeFromSuspend:	
  2524                           ; 0 bytes @ 0x0
  2525                           
  2526  0070                     ?_USBSuspend:	
  2527                           ; 0 bytes @ 0x0
  2528                           
  2529  0070                     ?_USBIncrement1msInternalTimers:	
  2530                           ; 0 bytes @ 0x0
  2531                           
  2532  0070                     ??_USBIncrement1msInternalTimers:	
  2533                           ; 0 bytes @ 0x0
  2534                           
  2535  0070                     ?_USBCtrlEPAllowStatusStage:	
  2536                           ; 0 bytes @ 0x0
  2537                           
  2538  0070                     ??_USBCtrlEPAllowStatusStage:	
  2539                           ; 0 bytes @ 0x0
  2540                           
  2541  0070                     ?_USBStallHandler:	
  2542                           ; 0 bytes @ 0x0
  2543                           
  2544  0070                     ??_USBStallHandler:	
  2545                           ; 0 bytes @ 0x0
  2546                           
  2547  0070                     ?_USBCtrlEPService:	
  2548                           ; 0 bytes @ 0x0
  2549                           
  2550  0070                     ?_USBConfigureEndpoint:	
  2551                           ; 0 bytes @ 0x0
  2552                           
  2553  0070                     ?_USBCtrlTrfTxService:	
  2554                           ; 0 bytes @ 0x0
  2555                           
  2556  0070                     ??_USBCtrlTrfTxService:	
  2557                           ; 0 bytes @ 0x0
  2558                           
  2559  0070                     ?_USBCtrlTrfSetupHandler:	
  2560                           ; 0 bytes @ 0x0
  2561                           
  2562  0070                     ?_USBCtrlTrfOutHandler:	
  2563                           ; 0 bytes @ 0x0
  2564                           
  2565  0070                     ?_USBCtrlTrfInHandler:	
  2566                           ; 0 bytes @ 0x0
  2567                           
  2568  0070                     ?_USBCheckStdRequest:	
  2569                           ; 0 bytes @ 0x0
  2570                           
  2571  0070                     ?_USBStdFeatureReqHandler:	
  2572                           ; 0 bytes @ 0x0
  2573                           
  2574  0070                     ?_SYSTEM_Initialize:	
  2575                           ; 0 bytes @ 0x0
  2576                           
  2577  0070                     ?_SYS_InterruptHigh:	
  2578                           ; 0 bytes @ 0x0
  2579                           
  2580  0070                     ??_SYS_InterruptHigh:	
  2581                           ; 0 bytes @ 0x0
  2582                           
  2583  0070                     ?_APP_LEDUpdateUSBStatus:	
  2584                           ; 0 bytes @ 0x0
  2585                           
  2586  0070                     ?_main:	
  2587                           ; 0 bytes @ 0x0
  2588                           
  2589  0070                     ?_scan_init:	
  2590                           ; 0 bytes @ 0x0
  2591                           
  2592  0070                     ??_scan_init:	
  2593                           ; 0 bytes @ 0x0
  2594                           
  2595  0070                     ?_set_timer:	
  2596                           ; 0 bytes @ 0x0
  2597                           
  2598  0070                     ??_set_timer:	
  2599                           ; 0 bytes @ 0x0
  2600                           
  2601  0070                     ??_waiting_for_timer:	
  2602                           ; 0 bytes @ 0x0
  2603                           
  2604  0070                     ?_set_clock_and_data:	
  2605                           ; 0 bytes @ 0x0
  2606                           
  2607  0070                     ??_get_data:	
  2608                           ; 0 bytes @ 0x0
  2609                           
  2610  0070                     ??_is_end_of_scan:	
  2611                           ; 0 bytes @ 0x0
  2612                           
  2613  0070                     ?_run_adc:	
  2614                           ; 0 bytes @ 0x0
  2615                           
  2616  0070                     ??_run_adc:	
  2617                           ; 0 bytes @ 0x0
  2618                           
  2619  0070                     ??_is_adc_ready:	
  2620                           ; 0 bytes @ 0x0
  2621                           
  2622  0070                     ??_get_adc:	
  2623                           ; 0 bytes @ 0x0
  2624                           
  2625  0070                     ?_USBCtrlEPAllowDataStage:	
  2626                           ; 0 bytes @ 0x0
  2627                           
  2628  0070                     ?_USBCtrlEPServiceComplete:	
  2629                           ; 0 bytes @ 0x0
  2630                           
  2631  0070                     ?_USBCtrlTrfRxService:	
  2632                           ; 0 bytes @ 0x0
  2633                           
  2634  0070                     ?_USBStdSetCfgHandler:	
  2635                           ; 0 bytes @ 0x0
  2636                           
  2637  0070                     ?_USBStdGetDscHandler:	
  2638                           ; 0 bytes @ 0x0
  2639                           
  2640  0070                     ??_USBStdGetDscHandler:	
  2641                           ; 0 bytes @ 0x0
  2642                           
  2643  0070                     ?_USBStdGetStatusHandler:	
  2644                           ; 0 bytes @ 0x0
  2645                           
  2646  0070                     ??_USBStdGetStatusHandler:	
  2647                           ; 0 bytes @ 0x0
  2648                           
  2649  0070                     ?_USBTransferOnePacket:	
  2650                           ; 0 bytes @ 0x0
  2651                           
  2652  0070                     ?_memset:	
  2653                           ; 1 bytes @ 0x0
  2654                           
  2655  0070                     ?_waiting_for_timer:	
  2656                           ; 1 bytes @ 0x0
  2657                           
  2658  0070                     ?_get_data:	
  2659                           ; 1 bytes @ 0x0
  2660                           
  2661  0070                     ?_is_end_of_scan:	
  2662                           ; 1 bytes @ 0x0
  2663                           
  2664  0070                     ?_is_adc_ready:	
  2665                           ; 1 bytes @ 0x0
  2666                           
  2667  0070                     ?_get_adc:	
  2668                           ; 1 bytes @ 0x0
  2669                           
  2670  0070                     _waiting_for_timer$809:	
  2671                           ; 1 bytes @ 0x0
  2672                           
  2673  0070                     set_clock_and_data@d:	
  2674                           ; 1 bytes @ 0x0
  2675                           
  2676  0070                     is_end_of_scan@res:	
  2677                           ; 1 bytes @ 0x0
  2678                           
  2679  0070                     LED_On@led:	
  2680                           ; 1 bytes @ 0x0
  2681                           
  2682  0070                     LED_Off@led:	
  2683                           ; 1 bytes @ 0x0
  2684                           
  2685  0070                     LED_Enable@led:	
  2686                           ; 1 bytes @ 0x0
  2687                           
  2688  0070                     USBTransferOnePacket@dir:	
  2689                           ; 1 bytes @ 0x0
  2690                           
  2691  0070                     USBConfigureEndpoint@direction:	
  2692                           ; 1 bytes @ 0x0
  2693                           
  2694  0070                     USBCtrlTrfTxService@byteToSend:	
  2695                           ; 1 bytes @ 0x0
  2696                           
  2697  0070                     USBStdGetStatusHandler@p:	
  2698                           ; 1 bytes @ 0x0
  2699                           
  2700  0070                     memset@c:	
  2701                           ; 1 bytes @ 0x0
  2702                           
  2703                           
  2704                           ; 2 bytes @ 0x0
  2705  0070                     	ds	1
  2706  0071                     ??_USBConfigureEndpoint:	
  2707  0071                     ??_USBCtrlTrfInHandler:	
  2708                           ; 0 bytes @ 0x1
  2709                           
  2710  0071                     ??_SYSTEM_Initialize:	
  2711                           ; 0 bytes @ 0x1
  2712                           
  2713  0071                     ??_APP_LEDUpdateUSBStatus:	
  2714                           ; 0 bytes @ 0x1
  2715                           
  2716  0071                     ??_set_clock_and_data:	
  2717                           ; 0 bytes @ 0x1
  2718                           
  2719  0071                     ?_process_level:	
  2720                           ; 0 bytes @ 0x1
  2721                           
  2722  0071                     ??_USBCtrlEPAllowDataStage:	
  2723                           ; 0 bytes @ 0x1
  2724                           
  2725  0071                     SYSTEM_Initialize@state:	
  2726                           ; 0 bytes @ 0x1
  2727                           
  2728  0071                     process_level@old_level:	
  2729                           ; 1 bytes @ 0x1
  2730                           
  2731  0071                     USBTransferOnePacket@data:	
  2732                           ; 1 bytes @ 0x1
  2733                           
  2734                           
  2735                           ; 2 bytes @ 0x1
  2736  0071                     	ds	1
  2737  0072                     ??_USBCtrlTrfRxService:	
  2738  0072                     set_clock_and_data@c:	
  2739                           ; 0 bytes @ 0x2
  2740                           
  2741  0072                     process_level@new_level:	
  2742                           ; 1 bytes @ 0x2
  2743                           
  2744  0072                     USBConfigureEndpoint@EPNum:	
  2745                           ; 1 bytes @ 0x2
  2746                           
  2747  0072                     USBDeviceInit@p:	
  2748                           ; 1 bytes @ 0x2
  2749                           
  2750  0072                     memset@n:	
  2751                           ; 2 bytes @ 0x2
  2752                           
  2753                           
  2754                           ; 2 bytes @ 0x2
  2755  0072                     	ds	1
  2756  0073                     ??_process_level:	
  2757  0073                     ??_USBCtrlEPServiceComplete:	
  2758                           ; 0 bytes @ 0x3
  2759                           
  2760  0073                     USBTransferOnePacket@len:	
  2761                           ; 0 bytes @ 0x3
  2762                           
  2763  0073                     USBConfigureEndpoint@handle:	
  2764                           ; 1 bytes @ 0x3
  2765                           
  2766  0073                     USBCtrlTrfInHandler@lastDTS:	
  2767                           ; 1 bytes @ 0x3
  2768                           
  2769                           
  2770                           ; 1 bytes @ 0x3
  2771  0073                     	ds	1
  2772  0074                     ?_USBEnableEndpoint:	
  2773  0074                     ??_USBTransferOnePacket:	
  2774                           ; 0 bytes @ 0x4
  2775                           
  2776  0074                     ??_memset:	
  2777                           ; 0 bytes @ 0x4
  2778                           
  2779  0074                     USBDeviceInit@i_1881:	
  2780                           ; 0 bytes @ 0x4
  2781                           
  2782  0074                     USBEnableEndpoint@options:	
  2783                           ; 1 bytes @ 0x4
  2784                           
  2785  0074                     USBCtrlTrfRxService@i:	
  2786                           ; 1 bytes @ 0x4
  2787                           
  2788  0074                     memset@p1:	
  2789                           ; 1 bytes @ 0x4
  2790                           
  2791  0074                     process_level@current_state:	
  2792                           ; 1 bytes @ 0x4
  2793                           
  2794                           
  2795                           ; 2 bytes @ 0x4
  2796  0074                     	ds	1
  2797  0075                     ??_USBEnableEndpoint:	
  2798  0075                     USBDeviceInit@i:	
  2799                           ; 0 bytes @ 0x5
  2800                           
  2801  0075                     USBCtrlTrfRxService@byteToRead:	
  2802                           ; 1 bytes @ 0x5
  2803                           
  2804  0075                     memset@p:	
  2805                           ; 1 bytes @ 0x5
  2806                           
  2807                           
  2808                           ; 1 bytes @ 0x5
  2809  0075                     	ds	1
  2810  0076                     ??_USBCtrlTrfOutHandler:	
  2811  0076                     process_level@off_flag:	
  2812                           ; 0 bytes @ 0x6
  2813                           
  2814  0076                     USBTransferOnePacket@ep:	
  2815                           ; 1 bytes @ 0x6
  2816                           
  2817                           
  2818                           ; 1 bytes @ 0x6
  2819  0076                     	ds	1
  2820  0077                     _process_level$846:	
  2821  0077                     USBTransferOnePacket@handle:	
  2822                           ; 1 bytes @ 0x7
  2823                           
  2824  0077                     USBEnableEndpoint@p:	
  2825                           ; 1 bytes @ 0x7
  2826                           
  2827                           
  2828                           ; 2 bytes @ 0x7
  2829  0077                     	ds	1
  2830  0078                     _process_level$847:	
  2831                           
  2832                           ; 2 bytes @ 0x8
  2833  0078                     	ds	1
  2834  0079                     USBEnableEndpoint@ep:	
  2835                           
  2836                           ; 1 bytes @ 0x9
  2837  0079                     	ds	1
  2838  007A                     ??_APP_DeviceAudioMIDIInitialize:	
  2839  007A                     ??_USBWakeFromSuspend:	
  2840                           ; 0 bytes @ 0xA
  2841                           
  2842  007A                     ??_USBSuspend:	
  2843                           ; 0 bytes @ 0xA
  2844                           
  2845  007A                     ??_USBStdFeatureReqHandler:	
  2846                           ; 0 bytes @ 0xA
  2847                           
  2848  007A                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2849                           ; 0 bytes @ 0xA
  2850                           
  2851  007A                     ??_USBStdSetCfgHandler:	
  2852                           ; 0 bytes @ 0xA
  2853                           
  2854  007A                     process_level@on_flag:	
  2855                           ; 0 bytes @ 0xA
  2856                           
  2857  007A                     USBStdSetCfgHandler@p:	
  2858                           ; 1 bytes @ 0xA
  2859                           
  2860                           
  2861                           ; 2 bytes @ 0xA
  2862  007A                     	ds	1
  2863  007B                     process_level@filtered_state:	
  2864                           
  2865                           ; 1 bytes @ 0xB
  2866  007B                     	ds	1
  2867  007C                     process_level@idx_key:	
  2868  007C                     USBStdSetCfgHandler@i_2209:	
  2869                           ; 1 bytes @ 0xC
  2870                           
  2871                           
  2872                           ; 1 bytes @ 0xC
  2873  007C                     	ds	1
  2874  007D                     ?_store_key_level:	
  2875  007D                     store_key_level@end_of_scan:	
  2876                           ; 1 bytes @ 0xD
  2877                           
  2878  007D                     USBStdSetCfgHandler@i:	
  2879                           ; 1 bytes @ 0xD
  2880                           
  2881                           
  2882                           ; 1 bytes @ 0xD
  2883  007D                     	ds	1
  2884  007E                     ??_APP_DeviceAudioMIDITasks:	
  2885  007E                     ??_scan_task:	
  2886                           ; 0 bytes @ 0xE
  2887                           
  2888  007E                     ??_USBCtrlTrfSetupHandler:	
  2889                           ; 0 bytes @ 0xE
  2890                           
  2891  007E                     ??_USBCheckStdRequest:	
  2892                           ; 0 bytes @ 0xE
  2893                           
  2894  007E                     ??_main:	
  2895                           ; 0 bytes @ 0xE
  2896                           
  2897  007E                     ??_store_key_level:	
  2898                           ; 0 bytes @ 0xE
  2899                           
  2900                           
  2901                           	psect	cstackBANK0
  2902  0061                     __pcstackBANK0:	
  2903                           ; 0 bytes @ 0xE
  2904                           
  2905  0061                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  2906  0061                     store_key_level@level:	
  2907                           ; 1 bytes @ 0x0
  2908                           
  2909  0061                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2910                           ; 1 bytes @ 0x0
  2911                           
  2912                           
  2913                           ; 2 bytes @ 0x0
  2914  0061                     	ds	1
  2915  0062                     ?_scan_task:	
  2916  0062                     scan_task@velocity:	
  2917                           ; 1 bytes @ 0x1
  2918                           
  2919                           
  2920                           ; 1 bytes @ 0x1
  2921  0062                     	ds	1
  2922  0063                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2923  0063                     _scan_task$857:	
  2924                           ; 1 bytes @ 0x2
  2925                           
  2926                           
  2927                           ; 2 bytes @ 0x2
  2928  0063                     	ds	1
  2929  0064                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2930                           
  2931                           ; 2 bytes @ 0x3
  2932  0064                     	ds	1
  2933  0065                     _scan_task$858:	
  2934                           
  2935                           ; 2 bytes @ 0x4
  2936  0065                     	ds	1
  2937  0066                     USBStdFeatureReqHandler@pUEP:	
  2938                           
  2939                           ; 2 bytes @ 0x5
  2940  0066                     	ds	1
  2941  0067                     scan_task@note:	
  2942                           
  2943                           ; 1 bytes @ 0x6
  2944  0067                     	ds	1
  2945  0068                     USBStdFeatureReqHandler@current_ep_data:	
  2946  0068                     _APP_DeviceAudioMIDITasks$416:	
  2947                           ; 1 bytes @ 0x7
  2948                           
  2949                           
  2950                           ; 2 bytes @ 0x7
  2951  0068                     	ds	1
  2952  0069                     USBStdFeatureReqHandler@p:	
  2953                           
  2954                           ; 1 bytes @ 0x8
  2955  0069                     	ds	1
  2956  006A                     ??_USBCtrlEPService:	
  2957  006A                     _APP_DeviceAudioMIDITasks$450:	
  2958                           ; 0 bytes @ 0x9
  2959                           
  2960                           
  2961                           ; 2 bytes @ 0x9
  2962  006A                     	ds	2
  2963  006C                     USBCtrlEPService@setup_cnt:	
  2964  006C                     _APP_DeviceAudioMIDITasks$451:	
  2965                           ; 1 bytes @ 0xB
  2966                           
  2967                           
  2968                           ; 2 bytes @ 0xB
  2969  006C                     	ds	1
  2970  006D                     ??_USBDeviceTasks:	
  2971                           
  2972                           ; 0 bytes @ 0xC
  2973  006D                     	ds	1
  2974  006E                     APP_DeviceAudioMIDITasks@scan_pitch:	
  2975  006E                     USBDeviceTasks@i:	
  2976                           ; 1 bytes @ 0xD
  2977                           
  2978                           
  2979                           ; 1 bytes @ 0xD
  2980  006E                     	ds	1
  2981  006F                     APP_DeviceAudioMIDITasks@velocity:	
  2982                           
  2983                           ; 1 bytes @ 0xE
  2984  006F                     	ds	1
  2985                           
  2986                           	psect	text3
  2987  0E50                     __ptext3:	
  2988 ;; *************** function _USBCtrlTrfInHandler *****************
  2989 ;; Defined at:
  2990 ;;		line 2618 in file "../framework/usb/usb_device.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;  lastDTS         1    3[COMMON] unsigned char 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;		None               void
  2997 ;; Registers used:
  2998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : 1F/0
  3001 ;;		On exit  : 1F/0
  3002 ;;		Unchanged: FFFE0/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3006 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3007 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3008 ;;Total ram usage:        3 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    2
  3011 ;; This function calls:
  3012 ;;		_USBCtrlTrfTxService
  3013 ;; This function is called by:
  3014 ;;		_USBCtrlEPService
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           
  3019                           ;psect for function _USBCtrlTrfInHandler
  3020  0E50                     _USBCtrlTrfInHandler:	
  3021  0E50                     l3785:	
  3022                           ;incstack = 0
  3023                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3024                           
  3025                           
  3026                           ;usb_device.c: 2619: uint8_t lastDTS;
  3027                           ;usb_device.c: 2621: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  3028  0E50  0852               	movf	_pBDTEntryIn,w
  3029  0E51  0086               	movwf	6
  3030  0E52  3000               	movlw	0
  3031  0E53  0187               	clrf	7
  3032  0E54  1B01               	btfsc	1,6
  3033  0E55  3001               	movlw	1
  3034  0E56  00F3               	movwf	USBCtrlTrfInHandler@lastDTS
  3035                           
  3036                           ;usb_device.c: 2624: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  3037  0E57  3004               	movlw	4
  3038  0E58  06D2               	xorwf	_pBDTEntryIn,f
  3039                           
  3040                           ;usb_device.c: 2629: if(USBDeviceState == ADR_PENDING_STATE)
  3041  0E59  0855               	movf	_USBDeviceState,w
  3042  0E5A  3A08               	xorlw	8
  3043  0E5B  1D03               	skipz
  3044  0E5C  2E69               	goto	l873
  3045                           
  3046                           ;usb_device.c: 2630: {
  3047                           ;usb_device.c: 2631: UADDR = (SetupPkt.bDevADR & 0x7F);
  3048  0E5D  0842               	movf	66,w	;volatile
  3049  0E5E  397F               	andlw	127
  3050  0E5F  003D               	movlb	29	; select bank29
  3051  0E60  0096               	movwf	22	;volatile
  3052                           
  3053                           ;usb_device.c: 2632: if(UADDR != 0u)
  3054  0E61  0816               	movf	22,w
  3055  0E62  1903               	btfsc	3,2
  3056  0E63  2E66               	goto	l3797
  3057                           
  3058                           ;usb_device.c: 2633: {
  3059                           ;usb_device.c: 2634: USBDeviceState=ADDRESS_STATE;
  3060  0E64  3010               	movlw	16
  3061  0E65  2E67               	goto	L2
  3062  0E66                     l3797:	
  3063                           ;usb_device.c: 2635: }
  3064                           
  3065                           
  3066                           ;usb_device.c: 2636: else
  3067                           ;usb_device.c: 2637: {
  3068                           ;usb_device.c: 2638: USBDeviceState=DEFAULT_STATE;
  3069  0E66  3004               	movlw	4
  3070  0E67                     L2:	
  3071  0E67  0020               	movlb	0	; select bank0
  3072  0E68  00D5               	movwf	_USBDeviceState
  3073  0E69                     l873:	
  3074                           
  3075                           ;usb_device.c: 2639: }
  3076                           ;usb_device.c: 2640: }
  3077                           ;usb_device.c: 2643: if(controlTransferState == 1)
  3078  0E69  0B57               	decfsz	_controlTransferState,w
  3079  0E6A  2E92               	goto	l876
  3080                           
  3081                           ;usb_device.c: 2644: {
  3082                           ;usb_device.c: 2645: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  3083  0E6B  3048               	movlw	72
  3084  0E6C  00F1               	movwf	??_USBCtrlTrfInHandler
  3085  0E6D  01F2               	clrf	??_USBCtrlTrfInHandler+1
  3086  0E6E  0852               	movf	_pBDTEntryIn,w
  3087  0E6F  3E02               	addlw	2
  3088  0E70  0086               	movwf	6
  3089  0E71  0187               	clrf	7
  3090  0E72  0871               	movf	??_USBCtrlTrfInHandler,w
  3091  0E73  3FC0               	movwi [0]fsr1
  3092  0E74  0872               	movf	??_USBCtrlTrfInHandler+1,w
  3093  0E75  3FC1               	movwi [1]fsr1
  3094                           
  3095                           ;usb_device.c: 2646: USBCtrlTrfTxService();
  3096  0E76  2716  318E         	fcall	_USBCtrlTrfTxService
  3097                           
  3098                           ;usb_device.c: 2652: if(shortPacketStatus == 2)
  3099  0E78  0021               	movlb	1	; select bank1
  3100  0E79  086B               	movf	_shortPacketStatus^(0+128),w
  3101  0E7A  3A02               	xorlw	2
  3102  0E7B  1D03               	skipz
  3103  0E7C  2E83               	goto	l3807
  3104                           
  3105                           ;usb_device.c: 2653: {
  3106                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val = 0x04;
  3107  0E7D  0020               	movlb	0	; select bank0
  3108  0E7E  0852               	movf	_pBDTEntryIn,w
  3109  0E7F  0086               	movwf	6
  3110  0E80  3004               	movlw	4
  3111  0E81  0187               	clrf	7
  3112                           
  3113                           ;usb_device.c: 2657: pBDTEntryIn[0]->STAT.Val |= 0x80;
  3114                           
  3115                           ;usb_device.c: 2658: }
  3116  0E82  2F6C               	ljmp	PL226	;call to abstracted procedure
  3117  0E83                     l3807:	
  3118                           
  3119                           ;usb_device.c: 2659: else
  3120                           ;usb_device.c: 2660: {
  3121                           ;usb_device.c: 2661: if(lastDTS == 0)
  3122  0E83  08F3               	movf	USBCtrlTrfInHandler@lastDTS,f
  3123  0E84  1D03               	skipz
  3124  0E85  2E8C               	goto	l3811
  3125                           
  3126                           ;usb_device.c: 2662: {
  3127                           ;usb_device.c: 2663: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  3128  0E86  0020               	movlb	0	; select bank0
  3129  0E87  0852               	movf	_pBDTEntryIn,w
  3130  0E88  0086               	movwf	6
  3131  0E89  3048               	movlw	72
  3132  0E8A  0187               	clrf	7
  3133                           
  3134                           ;usb_device.c: 2664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  3135                           
  3136                           ;usb_device.c: 2665: }
  3137  0E8B  2F6C               	ljmp	PL226	;call to abstracted procedure
  3138  0E8C                     l3811:	
  3139                           
  3140                           ;usb_device.c: 2666: else
  3141                           ;usb_device.c: 2667: {
  3142                           ;usb_device.c: 2668: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  3143  0E8C  0020               	movlb	0	; select bank0
  3144  0E8D  0852               	movf	_pBDTEntryIn,w
  3145  0E8E  0086               	movwf	6
  3146  0E8F  3008               	movlw	8
  3147  0E90  0187               	clrf	7
  3148                           
  3149                           ;usb_device.c: 2669: pBDTEntryIn[0]->STAT.Val |= 0x80;
  3150  0E91  2F6C               	ljmp	PL226	;call to abstracted procedure
  3151  0E92                     l876:	
  3152                           
  3153                           ;usb_device.c: 2673: else
  3154                           ;usb_device.c: 2674: {
  3155                           ;usb_device.c: 2678: if(outPipes[0].info.bits.busy == 1)
  3156  0E92  0022               	movlb	2	; select bank2
  3157  0E93  1FC9               	btfss	(_outPipes^(0+256)+2),7
  3158  0E94  2E9C               	goto	l3819
  3159                           
  3160                           ;usb_device.c: 2679: {
  3161                           ;usb_device.c: 2680: if(outPipes[0].pFunc != (0))
  3162  0E95  084C               	movf	(_outPipes+5)^(0+256),w
  3163  0E96  1903               	btfsc	3,2
  3164  0E97  2E9B               	goto	l3817
  3165                           
  3166                           ;usb_device.c: 2681: {
  3167                           ;usb_device.c: 2682: outPipes[0].pFunc();
  3168  0E98  084C               	movf	(_outPipes+5)^(0+256),w
  3169  0E99  318E  2E50         	ljmp	$	;if you get stuck here, you called an invalid pointer
  3170  0E9B                     l3817:	
  3171                           
  3172                           ;usb_device.c: 2683: }
  3173                           ;usb_device.c: 2684: outPipes[0].info.bits.busy = 0;
  3174  0E9B  13C9               	bcf	(_outPipes^(0+256)+2),7
  3175  0E9C                     l3819:	
  3176                           
  3177                           ;usb_device.c: 2685: }
  3178                           ;usb_device.c: 2687: controlTransferState = 0;
  3179  0E9C  0020               	movlb	0	; select bank0
  3180  0E9D  01D7               	clrf	_controlTransferState
  3181  0E9E  0008               	return
  3182  0E9F                     __end_of_USBCtrlTrfInHandler:	
  3183  0E9F                     __ptext13:	
  3184 ;; *************** function _USBCtrlEPServiceComplete *****************
  3185 ;; Defined at:
  3186 ;;		line 1636 in file "../framework/usb/usb_device.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;		None
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;		None
  3191 ;; Return value:  Size  Location     Type
  3192 ;;		None               void
  3193 ;; Registers used:
  3194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/2
  3197 ;;		On exit  : 1E/0
  3198 ;;		Unchanged: FFFE0/0
  3199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3202 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3203 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3204 ;;Total ram usage:        2 bytes
  3205 ;; Hardware stack levels used:    1
  3206 ;; Hardware stack levels required when called:    3
  3207 ;; This function calls:
  3208 ;;		_USBCtrlEPAllowStatusStage
  3209 ;;		_USBCtrlEPAllowDataStage
  3210 ;; This function is called by:
  3211 ;;		_USBCtrlTrfSetupHandler
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           
  3216                           ;psect for function _USBCtrlEPServiceComplete
  3217  0E9F                     _USBCtrlEPServiceComplete:	
  3218  0E9F                     l3543:	
  3219                           ;incstack = 0
  3220                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3221                           
  3222                           
  3223                           ;usb_device.c: 1641: UCONbits.PKTDIS = 0;
  3224  0E9F  003D               	movlb	29	; select bank29
  3225  0EA0  120E               	bcf	14,4	;volatile
  3226                           
  3227                           ;usb_device.c: 1647: if(inPipes[0].info.bits.busy == 0)
  3228  0EA1  0020               	movlb	0	; select bank0
  3229  0EA2  1BDD               	btfsc	_inPipes+2,7
  3230  0EA3  2EC0               	goto	l761
  3231                           
  3232                           ;usb_device.c: 1648: {
  3233                           ;usb_device.c: 1649: if(outPipes[0].info.bits.busy == 1)
  3234  0EA4  0022               	movlb	2	; select bank2
  3235  0EA5  1FC9               	btfss	(_outPipes^(0+256)+2),7
  3236  0EA6  2EB3               	goto	l3557
  3237                           
  3238                           ;usb_device.c: 1650: {
  3239                           ;usb_device.c: 1651: controlTransferState = 2;
  3240  0EA7  3002               	movlw	2
  3241  0EA8  0020               	movlb	0	; select bank0
  3242  0EA9  00D7               	movwf	_controlTransferState
  3243                           
  3244                           ;usb_device.c: 1662: if(USBDeferOUTDataStagePackets == 0)
  3245  0EAA  0021               	movlb	1	; select bank1
  3246  0EAB  08E1               	movf	_USBDeferOUTDataStagePackets^(0+128),f
  3247  0EAC  1D03               	skipz
  3248  0EAD  2EAF               	goto	l3553
  3249                           
  3250                           ;usb_device.c: 1663: {
  3251                           ;usb_device.c: 1664: USBCtrlEPAllowDataStage();
  3252  0EAE  26DE               	fcall	_USBCtrlEPAllowDataStage
  3253  0EAF                     l3553:	
  3254                           
  3255                           ;usb_device.c: 1665: }
  3256                           ;usb_device.c: 1669: USBStatusStageEnabledFlag2 = 0;
  3257  0EAF  0021               	movlb	1	; select bank1
  3258  0EB0  01E3               	clrf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  3259                           
  3260                           ;usb_device.c: 1670: USBStatusStageEnabledFlag1 = 0;
  3261  0EB1  01E2               	clrf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  3262                           
  3263                           ;usb_device.c: 1671: }
  3264  0EB2  0008               	return
  3265  0EB3                     l3557:	
  3266                           
  3267                           ;usb_device.c: 1672: else
  3268                           ;usb_device.c: 1673: {
  3269                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->CNT = 8;
  3270  0EB3  0020               	movlb	0	; select bank0
  3271  0EB4  0A59               	incf	_pBDTEntryEP0OutNext,w
  3272                           
  3273                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3274                           
  3275                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  3276  0EB5  275B  318E         	fcall	PL222	;call to abstracted procedure
  3277  0EB7  300C               	movlw	12
  3278  0EB8  0081               	movwf	1
  3279                           
  3280                           ;usb_device.c: 1681: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3281  0EB9  0859               	movf	_pBDTEntryEP0OutNext,w
  3282  0EBA  0086               	movwf	6
  3283  0EBB  1781               	bsf	1,7
  3284                           
  3285                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val = 0x04;
  3286  0EBC  0852               	movf	_pBDTEntryIn,w
  3287  0EBD  0086               	movwf	6
  3288  0EBE  3004               	movlw	4
  3289                           
  3290                           ;usb_device.c: 1683: pBDTEntryIn[0]->STAT.Val |= 0x80;
  3291  0EBF  2F6C               	ljmp	PL226	;call to abstracted procedure
  3292  0EC0                     l761:	
  3293                           
  3294                           ;usb_device.c: 1686: else
  3295                           ;usb_device.c: 1687: {
  3296                           ;usb_device.c: 1688: if(SetupPkt.DataDir == (0x80>>7))
  3297  0EC0  1FC0               	btfss	64,7	;volatile
  3298  0EC1  2ED3               	goto	l3573
  3299                           
  3300                           ;usb_device.c: 1689: {
  3301                           ;usb_device.c: 1690: controlTransferState = 1;
  3302  0EC2  01D7               	clrf	_controlTransferState
  3303  0EC3  0AD7               	incf	_controlTransferState,f
  3304                           
  3305                           ;usb_device.c: 1704: if(USBDeferINDataStagePackets == 0)
  3306  0EC4  0021               	movlb	1	; select bank1
  3307  0EC5  08E0               	movf	_USBDeferINDataStagePackets^(0+128),f
  3308  0EC6  1D03               	skipz
  3309  0EC7  2ECA               	goto	l3565
  3310                           
  3311                           ;usb_device.c: 1705: {
  3312                           ;usb_device.c: 1706: USBCtrlEPAllowDataStage();
  3313  0EC8  26DE  318E         	fcall	_USBCtrlEPAllowDataStage
  3314  0ECA                     l3565:	
  3315                           
  3316                           ;usb_device.c: 1707: }
  3317                           ;usb_device.c: 1729: USBStatusStageEnabledFlag2 = 0;
  3318  0ECA  0021               	movlb	1	; select bank1
  3319  0ECB  01E3               	clrf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  3320                           
  3321                           ;usb_device.c: 1730: USBStatusStageEnabledFlag1 = 0;
  3322  0ECC  01E2               	clrf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  3323                           
  3324                           ;usb_device.c: 1731: if(USBDeferStatusStagePacket == 0)
  3325  0ECD  0020               	movlb	0	; select bank0
  3326  0ECE  08D4               	movf	_USBDeferStatusStagePacket,f
  3327  0ECF  1D03               	skipz
  3328  0ED0  0008               	return
  3329                           
  3330                           ;usb_device.c: 1732: {
  3331                           ;usb_device.c: 1733: USBCtrlEPAllowStatusStage();
  3332  0ED1  3185  2DF6         	ljmp	l3387
  3333  0ED3                     l3573:	
  3334                           
  3335                           ;usb_device.c: 1736: else
  3336                           ;usb_device.c: 1737: {
  3337                           ;usb_device.c: 1748: controlTransferState = 2;
  3338  0ED3  3002               	movlw	2
  3339  0ED4  00D7               	movwf	_controlTransferState
  3340                           
  3341                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->CNT = 8;
  3342  0ED5  0A59               	incf	_pBDTEntryEP0OutNext,w
  3343                           
  3344                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3345                           
  3346                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  3347  0ED6  275B  318E         	fcall	PL222	;call to abstracted procedure
  3348  0ED8  3004               	movlw	4
  3349  0ED9  0081               	movwf	1
  3350                           
  3351                           ;usb_device.c: 1754: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3352  0EDA  0859               	movf	_pBDTEntryEP0OutNext,w
  3353  0EDB  0086               	movwf	6
  3354  0EDC  1781               	bsf	1,7
  3355  0EDD  2ECA               	goto	l3565
  3356  0EDE                     __end_of_USBCtrlEPServiceComplete:	
  3357                           ;usb_device.c: 1759: if(USBDeferStatusStagePacket == 0)
  3358                           
  3359                           ;usb_device.c: 1758: USBStatusStageEnabledFlag1 = 0;
  3360                           
  3361                           ;usb_device.c: 1757: USBStatusStageEnabledFlag2 = 0;
  3362                           
  3363  0EDE                     __ptext14:	
  3364 ;; *************** function _USBCtrlEPAllowDataStage *****************
  3365 ;; Defined at:
  3366 ;;		line 1508 in file "../framework/usb/usb_device.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;		None
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;		None
  3371 ;; Return value:  Size  Location     Type
  3372 ;;		None               void
  3373 ;; Registers used:
  3374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3375 ;; Tracked objects:
  3376 ;;		On entry : 1F/1
  3377 ;;		On exit  : 1F/0
  3378 ;;		Unchanged: FFFE0/0
  3379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3382 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3383 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3384 ;;Total ram usage:        2 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; Hardware stack levels required when called:    2
  3387 ;; This function calls:
  3388 ;;		_USBCtrlTrfTxService
  3389 ;; This function is called by:
  3390 ;;		_USBCtrlEPServiceComplete
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           
  3395                           ;psect for function _USBCtrlEPAllowDataStage
  3396  0EDE                     _USBCtrlEPAllowDataStage:	
  3397                           
  3398                           ;usb_device.c: 1509: USBDeferINDataStagePackets = 0;
  3399                           
  3400                           ;incstack = 0
  3401                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3402  0EDE  01E0               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  3403                           
  3404                           ;usb_device.c: 1510: USBDeferOUTDataStagePackets = 0;
  3405  0EDF  01E1               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  3406                           
  3407                           ;usb_device.c: 1512: if(controlTransferState == 2)
  3408  0EE0  0020               	movlb	0	; select bank0
  3409  0EE1  0857               	movf	_controlTransferState,w
  3410  0EE2  3A02               	xorlw	2
  3411  0EE3  1D03               	skipz
  3412  0EE4  2EF8               	goto	l3491
  3413                           
  3414                           ;usb_device.c: 1513: {
  3415                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->CNT = 8;
  3416  0EE5  0A59               	incf	_pBDTEntryEP0OutNext,w
  3417  0EE6  0086               	movwf	6
  3418  0EE7  3008               	movlw	8
  3419  0EE8  0187               	clrf	7
  3420  0EE9  0081               	movwf	1
  3421                           
  3422                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  3423  0EEA  3048               	movlw	72
  3424  0EEB  00F1               	movwf	??_USBCtrlEPAllowDataStage
  3425  0EEC  01F2               	clrf	??_USBCtrlEPAllowDataStage+1
  3426  0EED  0859               	movf	_pBDTEntryEP0OutNext,w
  3427  0EEE  3E02               	addlw	2
  3428  0EEF  0086               	movwf	6
  3429  0EF0  0871               	movf	??_USBCtrlEPAllowDataStage,w
  3430  0EF1  3FC0               	movwi [0]fsr1
  3431  0EF2  0872               	movf	??_USBCtrlEPAllowDataStage+1,w
  3432  0EF3  3FC1               	movwi [1]fsr1
  3433                           
  3434                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  3435  0EF4  0859               	movf	_pBDTEntryEP0OutNext,w
  3436  0EF5  0086               	movwf	6
  3437  0EF6  3048               	movlw	72
  3438                           
  3439                           ;usb_device.c: 1518: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3440                           
  3441                           ;usb_device.c: 1519: }
  3442  0EF7  2FFB               	ljmp	PL234	;call to abstracted procedure
  3443  0EF8                     l3491:	
  3444                           
  3445                           ;usb_device.c: 1520: else
  3446                           ;usb_device.c: 1521: {
  3447                           ;usb_device.c: 1524: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  3448  0EF8  085F               	movf	_inPipes+4,w
  3449  0EF9  0247               	subwf	71,w	;volatile
  3450  0EFA  1D03               	skipz
  3451  0EFB  2EFE               	goto	u2455
  3452  0EFC  085E               	movf	_inPipes+3,w
  3453  0EFD  0246               	subwf	70,w	;volatile
  3454  0EFE                     u2455:	
  3455  0EFE  1803               	skipnc
  3456  0EFF  2F04               	goto	l3495
  3457                           
  3458                           ;usb_device.c: 1525: {
  3459                           ;usb_device.c: 1526: inPipes[0].wCount.Val = SetupPkt.wLength;
  3460  0F00  0847               	movf	71,w	;volatile
  3461  0F01  00DF               	movwf	_inPipes+4
  3462  0F02  0846               	movf	70,w	;volatile
  3463  0F03  00DE               	movwf	_inPipes+3
  3464  0F04                     l3495:	
  3465                           
  3466                           ;usb_device.c: 1527: }
  3467                           ;usb_device.c: 1528: USBCtrlTrfTxService();
  3468  0F04  2716  318E         	fcall	_USBCtrlTrfTxService
  3469                           
  3470                           ;usb_device.c: 1533: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  3471  0F06  3048               	movlw	72
  3472  0F07  00F1               	movwf	??_USBCtrlEPAllowDataStage
  3473  0F08  01F2               	clrf	??_USBCtrlEPAllowDataStage+1
  3474  0F09  0020               	movlb	0	; select bank0
  3475  0F0A  0852               	movf	_pBDTEntryIn,w
  3476  0F0B  3E02               	addlw	2
  3477  0F0C  0086               	movwf	6
  3478  0F0D  0187               	clrf	7
  3479  0F0E  0871               	movf	??_USBCtrlEPAllowDataStage,w
  3480  0F0F  3FC0               	movwi [0]fsr1
  3481  0F10  0872               	movf	??_USBCtrlEPAllowDataStage+1,w
  3482  0F11  3FC1               	movwi [1]fsr1
  3483                           
  3484                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  3485  0F12  0852               	movf	_pBDTEntryIn,w
  3486  0F13  0086               	movwf	6
  3487  0F14  3048               	movlw	72
  3488                           
  3489                           ;usb_device.c: 1535: pBDTEntryIn[0]->STAT.Val |= 0x80;
  3490  0F15  2F6C               	ljmp	PL226	;call to abstracted procedure
  3491  0F16                     __end_of_USBCtrlEPAllowDataStage:	
  3492  0F16                     __ptext15:	
  3493 ;; *************** function _USBCtrlTrfTxService *****************
  3494 ;; Defined at:
  3495 ;;		line 1791 in file "../framework/usb/usb_device.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;		None
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;  byteToSend      1    0[COMMON] unsigned char 
  3500 ;; Return value:  Size  Location     Type
  3501 ;;		None               void
  3502 ;; Registers used:
  3503 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3504 ;; Tracked objects:
  3505 ;;		On entry : 1F/0
  3506 ;;		On exit  : 1E/0
  3507 ;;		Unchanged: FFFE0/0
  3508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3510 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3512 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3513 ;;Total ram usage:        1 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; Hardware stack levels required when called:    1
  3516 ;; This function calls:
  3517 ;;		Nothing
  3518 ;; This function is called by:
  3519 ;;		_USBCtrlEPAllowDataStage
  3520 ;;		_USBCtrlTrfInHandler
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524                           
  3525                           ;psect for function _USBCtrlTrfTxService
  3526  0F16                     _USBCtrlTrfTxService:	
  3527                           
  3528                           ;usb_device.c: 1792: uint8_t byteToSend;
  3529                           ;usb_device.c: 1796: byteToSend = 8;
  3530                           
  3531                           ;incstack = 0
  3532                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  3533  0F16  3008               	movlw	8
  3534  0F17  00F0               	movwf	USBCtrlTrfTxService@byteToSend
  3535                           
  3536                           ;usb_device.c: 1797: if(inPipes[0].wCount.Val < (uint8_t)8)
  3537  0F18  3000               	movlw	0
  3538  0F19  025F               	subwf	_inPipes+4,w
  3539  0F1A  3008               	movlw	8
  3540  0F1B  1903               	skipnz
  3541  0F1C  025E               	subwf	_inPipes+3,w
  3542  0F1D  1803               	skipnc
  3543  0F1E  2F2C               	goto	l774
  3544                           
  3545                           ;usb_device.c: 1798: {
  3546                           ;usb_device.c: 1799: byteToSend = inPipes[0].wCount.Val;
  3547  0F1F  085E               	movf	_inPipes+3,w
  3548  0F20  00F0               	movwf	USBCtrlTrfTxService@byteToSend
  3549                           
  3550                           ;usb_device.c: 1806: if(shortPacketStatus == 0)
  3551  0F21  0021               	movlb	1	; select bank1
  3552  0F22  08EB               	movf	_shortPacketStatus^(0+128),f
  3553  0F23  1D03               	skipz
  3554  0F24  2F28               	goto	l3511
  3555                           
  3556                           ;usb_device.c: 1807: {
  3557                           ;usb_device.c: 1808: shortPacketStatus = 1;
  3558  0F25  01EB               	clrf	_shortPacketStatus^(0+128)
  3559  0F26  0AEB               	incf	_shortPacketStatus^(0+128),f
  3560                           
  3561                           ;usb_device.c: 1809: }
  3562  0F27  2F2C               	goto	l774
  3563  0F28                     l3511:	
  3564                           
  3565                           ;usb_device.c: 1810: else if(shortPacketStatus == 1)
  3566  0F28  0B6B               	decfsz	_shortPacketStatus^(0+128),w
  3567  0F29  2F2C               	goto	l774
  3568                           
  3569                           ;usb_device.c: 1811: {
  3570                           ;usb_device.c: 1812: shortPacketStatus = 2;
  3571  0F2A  3002               	movlw	2
  3572  0F2B  00EB               	movwf	_shortPacketStatus^(0+128)
  3573  0F2C                     l774:	
  3574                           
  3575                           ;usb_device.c: 1813: }
  3576                           ;usb_device.c: 1814: }
  3577                           ;usb_device.c: 1818: inPipes[0].wCount.Val -= byteToSend;
  3578  0F2C  0870               	movf	USBCtrlTrfTxService@byteToSend,w
  3579  0F2D  0020               	movlb	0	; select bank0
  3580  0F2E  02DE               	subwf	_inPipes+3,f
  3581  0F2F  1C03               	skipc
  3582  0F30  03DF               	decf	_inPipes+4,f
  3583                           
  3584                           ;usb_device.c: 1823: pBDTEntryIn[0]->CNT = byteToSend;
  3585  0F31  0A52               	incf	_pBDTEntryIn,w
  3586  0F32  0086               	movwf	6
  3587  0F33  0187               	clrf	7
  3588  0F34  0870               	movf	USBCtrlTrfTxService@byteToSend,w
  3589  0F35  0081               	movwf	1
  3590                           
  3591                           ;usb_device.c: 1827: pDst = ( uint8_t*)CtrlTrfData;
  3592  0F36  3048               	movlw	72
  3593  0F37  0021               	movlb	1	; select bank1
  3594  0F38  00E8               	movwf	_pDst^(0+128)
  3595                           
  3596                           ;usb_device.c: 1828: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  3597  0F39  0020               	movlb	0	; select bank0
  3598  0F3A  1C5D               	btfss	_inPipes+2,0
  3599  0F3B  2F3F               	goto	l3531
  3600  0F3C  2F45               	goto	l3541
  3601  0F3D                     l3523:	
  3602                           
  3603                           ;usb_device.c: 1831: {
  3604                           ;usb_device.c: 1832: *pDst++ = *inPipes[0].pSrc.bRom++;
  3605                           
  3606                           ;usb_device.c: 1833: byteToSend--;
  3607  0F3D  2749  318E         	fcall	PL220	;call to abstracted procedure
  3608  0F3F                     l3531:	
  3609  0F3F  08F0               	movf	USBCtrlTrfTxService@byteToSend,f
  3610  0F40  1903               	btfsc	3,2
  3611  0F41  0008               	return
  3612  0F42  2F3D               	goto	l3523
  3613  0F43                     l3533:	
  3614                           
  3615                           ;usb_device.c: 1839: {
  3616                           ;usb_device.c: 1840: *pDst++ = *inPipes[0].pSrc.bRam++;
  3617                           
  3618                           ;usb_device.c: 1841: byteToSend--;
  3619  0F43  2749  318E         	fcall	PL220	;call to abstracted procedure
  3620  0F45                     l3541:	
  3621  0F45  08F0               	movf	USBCtrlTrfTxService@byteToSend,f
  3622  0F46  1903               	btfsc	3,2
  3623  0F47  0008               	return
  3624  0F48  2F43               	goto	l3533
  3625  0F49                     __end_of_USBCtrlTrfTxService:	
  3626  0F49                     PL220:	
  3627  0F49  0021               	movlb	1	; select bank1
  3628  0F4A  0868               	movf	_pDst^(0+128),w
  3629  0F4B  0086               	movwf	6
  3630  0F4C  0187               	clrf	7
  3631  0F4D  0020               	movlb	0	; select bank0
  3632  0F4E  085B               	movf	_inPipes,w
  3633  0F4F  0084               	movwf	4
  3634  0F50  085C               	movf	_inPipes+1,w
  3635  0F51  0085               	movwf	5
  3636  0F52  0800               	movf	0,w	;code access
  3637  0F53  0081               	movwf	1
  3638  0F54  0ADB               	incf	_inPipes,f
  3639  0F55  1903               	skipnz
  3640  0F56  0ADC               	incf	_inPipes+1,f
  3641  0F57  0021               	movlb	1	; select bank1
  3642  0F58  0AE8               	incf	_pDst^(0+128),f
  3643  0F59  03F0               	decf	USBCtrlTrfTxService@byteToSend,f
  3644  0F5A  0008               	return
  3645  0F5B                     __end_ofPL220:	
  3646  0F5B                     PL222:	
  3647  0F5B  0086               	movwf	6
  3648  0F5C  3008               	movlw	8
  3649  0F5D  0187               	clrf	7
  3650  0F5E  0081               	movwf	1
  3651  0F5F  3040               	movlw	64
  3652  0F60  00F3               	movwf	??_USBCtrlEPServiceComplete
  3653  0F61  01F4               	clrf	??_USBCtrlEPServiceComplete+1
  3654  0F62  0859               	movf	_pBDTEntryEP0OutNext,w
  3655  0F63  3E02               	addlw	2
  3656  0F64  0086               	movwf	6
  3657  0F65  0873               	movf	??_USBCtrlEPServiceComplete,w
  3658  0F66  3FC0               	movwi [0]fsr1
  3659  0F67  0874               	movf	??_USBCtrlEPServiceComplete+1,w
  3660  0F68  3FC1               	movwi [1]fsr1
  3661  0F69  0859               	movf	_pBDTEntryEP0OutNext,w
  3662  0F6A  0086               	movwf	6
  3663  0F6B  0008               	return
  3664  0F6C                     __end_ofPL222:	
  3665  0F6C                     PL226:	
  3666  0F6C  0081               	movwf	1
  3667  0F6D  0852               	movf	_pBDTEntryIn,w
  3668  0F6E  0086               	movwf	6
  3669  0F6F  1781               	bsf	1,7
  3670  0F70  0008               	return
  3671  0F71                     __end_ofPL226:	
  3672  0F71                     __ptext4:	
  3673 ;; *************** function _USBCtrlTrfOutHandler *****************
  3674 ;; Defined at:
  3675 ;;		line 2564 in file "../framework/usb/usb_device.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;		None
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;		None
  3680 ;; Return value:  Size  Location     Type
  3681 ;;		None               void
  3682 ;; Registers used:
  3683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3684 ;; Tracked objects:
  3685 ;;		On entry : 1F/0
  3686 ;;		On exit  : 1C/0
  3687 ;;		Unchanged: FFFE0/0
  3688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3691 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3692 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3693 ;;Total ram usage:        2 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:    3
  3696 ;; This function calls:
  3697 ;;		_USBCtrlTrfRxService
  3698 ;; This function is called by:
  3699 ;;		_USBCtrlEPService
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           
  3704                           ;psect for function _USBCtrlTrfOutHandler
  3705  0F71                     _USBCtrlTrfOutHandler:	
  3706  0F71                     l3773:	
  3707                           ;incstack = 0
  3708                           ; Regs used in _USBCtrlTrfOutHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3709                           
  3710                           
  3711                           ;usb_device.c: 2565: if(controlTransferState == 2)
  3712  0F71  0857               	movf	_controlTransferState,w
  3713  0F72  3A02               	xorlw	2
  3714  0F73  1D03               	skipz
  3715  0F74  2F76               	goto	l3777
  3716                           
  3717                           ;usb_device.c: 2566: {
  3718                           ;usb_device.c: 2567: USBCtrlTrfRxService();
  3719  0F75  2F8E               	ljmp	l3591
  3720  0F76                     l3777:	
  3721                           ;usb_device.c: 2568: }
  3722                           
  3723                           
  3724                           ;usb_device.c: 2569: else
  3725                           ;usb_device.c: 2570: {
  3726                           ;usb_device.c: 2573: controlTransferState = 0;
  3727  0F76  01D7               	clrf	_controlTransferState
  3728                           
  3729                           ;usb_device.c: 2580: if(BothEP0OutUOWNsSet == 0)
  3730  0F77  0022               	movlb	2	; select bank2
  3731  0F78  08D5               	movf	_BothEP0OutUOWNsSet^(0+256),f
  3732  0F79  1D03               	skipz
  3733  0F7A  2F8C               	goto	l3783
  3734                           
  3735                           ;usb_device.c: 2581: {
  3736                           ;usb_device.c: 2582: pBDTEntryEP0OutNext->CNT = 8;
  3737  0F7B  0020               	movlb	0	; select bank0
  3738  0F7C  27EB  318E         	fcall	PL228	;call to abstracted procedure
  3739                           
  3740                           ;usb_device.c: 2583: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3741  0F7E  3040               	movlw	64
  3742  0F7F  00F6               	movwf	??_USBCtrlTrfOutHandler
  3743  0F80  01F7               	clrf	??_USBCtrlTrfOutHandler+1
  3744  0F81  0859               	movf	_pBDTEntryEP0OutNext,w
  3745  0F82  3E02               	addlw	2
  3746  0F83  0086               	movwf	6
  3747  0F84  0876               	movf	??_USBCtrlTrfOutHandler,w
  3748  0F85  3FC0               	movwi [0]fsr1
  3749  0F86  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  3750  0F87  3FC1               	movwi [1]fsr1
  3751                           
  3752                           ;usb_device.c: 2584: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  3753  0F88  0859               	movf	_pBDTEntryEP0OutNext,w
  3754  0F89  0086               	movwf	6
  3755  0F8A  300C               	movlw	12
  3756                           
  3757                           ;usb_device.c: 2585: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3758                           
  3759                           ;usb_device.c: 2586: }
  3760  0F8B  2FFB               	ljmp	PL234	;call to abstracted procedure
  3761  0F8C                     l3783:	
  3762                           
  3763                           ;usb_device.c: 2587: else
  3764                           ;usb_device.c: 2588: {
  3765                           ;usb_device.c: 2589: BothEP0OutUOWNsSet = 0;
  3766  0F8C  01D5               	clrf	_BothEP0OutUOWNsSet^(0+256)
  3767  0F8D  0008               	return
  3768  0F8E                     __end_of_USBCtrlTrfOutHandler:	
  3769  0F8E                     __ptext5:	
  3770 ;; *************** function _USBCtrlTrfRxService *****************
  3771 ;; Defined at:
  3772 ;;		line 1872 in file "../framework/usb/usb_device.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;		None
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;  byteToRead      1    5[COMMON] unsigned char 
  3777 ;;  i               1    4[COMMON] unsigned char 
  3778 ;; Return value:  Size  Location     Type
  3779 ;;		None               void
  3780 ;; Registers used:
  3781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3782 ;; Tracked objects:
  3783 ;;		On entry : 1F/0
  3784 ;;		On exit  : 1E/0
  3785 ;;		Unchanged: FFFE0/0
  3786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3788 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3789 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3790 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3791 ;;Total ram usage:        4 bytes
  3792 ;; Hardware stack levels used:    1
  3793 ;; Hardware stack levels required when called:    2
  3794 ;; This function calls:
  3795 ;;		_USBCtrlEPAllowStatusStage
  3796 ;; This function is called by:
  3797 ;;		_USBCtrlTrfOutHandler
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           
  3802                           ;psect for function _USBCtrlTrfRxService
  3803  0F8E                     _USBCtrlTrfRxService:	
  3804  0F8E                     l3591:	
  3805                           ;incstack = 0
  3806                           ; Regs used in _USBCtrlTrfRxService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3807                           
  3808                           
  3809                           ;usb_device.c: 1873: uint8_t byteToRead;
  3810                           ;usb_device.c: 1874: uint8_t i;
  3811                           ;usb_device.c: 1878: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  3812  0F8E  0858               	movf	_pBDTEntryEP0OutCurrent,w
  3813  0F8F  0086               	movwf	6
  3814  0F90  0187               	clrf	7
  3815  0F91  3F41               	moviw [1]fsr1
  3816  0F92  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  3817                           
  3818                           ;usb_device.c: 1884: if(byteToRead > outPipes[0].wCount.Val)
  3819  0F93  00F2               	movwf	??_USBCtrlTrfRxService
  3820  0F94  01F3               	clrf	??_USBCtrlTrfRxService+1
  3821  0F95  0873               	movf	??_USBCtrlTrfRxService+1,w
  3822  0F96  0022               	movlb	2	; select bank2
  3823  0F97  024B               	subwf	((_outPipes+1)^(0+256)+3),w
  3824  0F98  1D03               	skipz
  3825  0F99  2F9C               	goto	u2595
  3826  0F9A  0872               	movf	??_USBCtrlTrfRxService,w
  3827  0F9B  024A               	subwf	(_outPipes^(0+256)+3),w
  3828  0F9C                     u2595:	
  3829  0F9C  1803               	skipnc
  3830  0F9D  2FA0               	goto	l789
  3831                           
  3832                           ;usb_device.c: 1885: {
  3833                           ;usb_device.c: 1886: byteToRead = outPipes[0].wCount.Val;
  3834  0F9E  084A               	movf	(_outPipes^(0+256)+3),w
  3835  0F9F  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  3836  0FA0                     l789:	
  3837                           
  3838                           ;usb_device.c: 1887: }
  3839                           ;usb_device.c: 1889: outPipes[0].wCount.Val -= byteToRead;
  3840  0FA0  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  3841  0FA1  02CA               	subwf	(_outPipes^(0+256)+3),f
  3842  0FA2  1C03               	skipc
  3843  0FA3  03CB               	decf	((_outPipes+1)^(0+256)+3),f
  3844                           
  3845                           ;usb_device.c: 1893: for(i=0;i<byteToRead;i++)
  3846  0FA4  01F4               	clrf	USBCtrlTrfRxService@i
  3847  0FA5                     l3605:	
  3848  0FA5  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  3849  0FA6  0274               	subwf	USBCtrlTrfRxService@i,w
  3850  0FA7  1803               	btfsc	3,0
  3851  0FA8  2FB5               	goto	l3607
  3852                           
  3853                           ;usb_device.c: 1894: {
  3854                           ;usb_device.c: 1895: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  3855  0FA9  0847               	movf	_outPipes^(0+256),w
  3856  0FAA  0086               	movwf	6
  3857  0FAB  0187               	clrf	7
  3858  0FAC  0874               	movf	USBCtrlTrfRxService@i,w
  3859  0FAD  3E48               	addlw	72
  3860  0FAE  0084               	movwf	4
  3861  0FAF  0185               	clrf	5
  3862  0FB0  0800               	movf	0,w
  3863  0FB1  0081               	movwf	1
  3864  0FB2  0AC7               	incf	_outPipes^(0+256),f
  3865  0FB3  0AF4               	incf	USBCtrlTrfRxService@i,f
  3866  0FB4  2FA5               	goto	l3605
  3867  0FB5                     l3607:	
  3868                           
  3869                           ;usb_device.c: 1896: }
  3870                           ;usb_device.c: 1900: if(outPipes[0].wCount.Val > 0)
  3871  0FB5  3003               	movlw	3
  3872  0FB6  3E47               	addlw	_outPipes& (0+255)
  3873  0FB7  0086               	movwf	6
  3874  0FB8  3001               	movlw	1	; select bank2/3
  3875  0FB9  0087               	movwf	7
  3876  0FBA  0016               	moviw fsr1++
  3877  0FBB  0401               	iorwf	1,w
  3878  0FBC  1903               	skipnz
  3879  0FBD  2FD0               	goto	l3615
  3880                           
  3881                           ;usb_device.c: 1901: {
  3882                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->CNT = 8;
  3883  0FBE  0020               	movlb	0	; select bank0
  3884  0FBF  27EB  318E         	fcall	PL228	;call to abstracted procedure
  3885                           
  3886                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  3887  0FC1  3048               	movlw	72
  3888  0FC2  27F1  318E         	fcall	PL230	;call to abstracted procedure
  3889                           
  3890                           ;usb_device.c: 1904: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  3891  0FC4  0858               	movf	_pBDTEntryEP0OutCurrent,w
  3892  0FC5  0086               	movwf	6
  3893                           
  3894                           ;usb_device.c: 1905: {
  3895                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  3896  0FC6  0859               	movf	_pBDTEntryEP0OutNext,w
  3897  0FC7  1B01               	btfsc	1,6
  3898  0FC8  2FCC               	goto	L3
  3899  0FC9  0086               	movwf	6
  3900  0FCA  3048               	movlw	72
  3901                           
  3902                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3903                           
  3904                           ;usb_device.c: 1908: }
  3905  0FCB  2FFB               	ljmp	PL234	;call to abstracted procedure
  3906  0FCC                     L3:	
  3907                           ;usb_device.c: 1909: else
  3908                           ;usb_device.c: 1910: {
  3909                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  3910                           
  3911  0FCC  0086               	movwf	6
  3912  0FCD  3008               	movlw	8
  3913  0FCE  0187               	clrf	7
  3914                           
  3915                           ;usb_device.c: 1912: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3916  0FCF  2FFB               	ljmp	PL234	;call to abstracted procedure
  3917  0FD0                     l3615:	
  3918                           
  3919                           ;usb_device.c: 1915: else
  3920                           ;usb_device.c: 1916: {
  3921                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->CNT = 8;
  3922  0FD0  0020               	movlb	0	; select bank0
  3923  0FD1  27EB  318E         	fcall	PL228	;call to abstracted procedure
  3924                           
  3925                           ;usb_device.c: 1921: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3926  0FD3  3040               	movlw	64
  3927  0FD4  27F1  318E         	fcall	PL230	;call to abstracted procedure
  3928                           
  3929                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  3930  0FD6  0859               	movf	_pBDTEntryEP0OutNext,w
  3931  0FD7  0086               	movwf	6
  3932  0FD8  3004               	movlw	4
  3933  0FD9  0081               	movwf	1
  3934                           
  3935                           ;usb_device.c: 1926: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  3936  0FDA  0859               	movf	_pBDTEntryEP0OutNext,w
  3937  0FDB  0086               	movwf	6
  3938  0FDC  1781               	bsf	1,7
  3939                           
  3940                           ;usb_device.c: 1933: if(outPipes[0].pFunc != (0))
  3941  0FDD  0022               	movlb	2	; select bank2
  3942  0FDE  084C               	movf	(_outPipes+5)^(0+256),w
  3943  0FDF  1903               	btfsc	3,2
  3944  0FE0  2FE4               	goto	l3621
  3945                           
  3946                           ;usb_device.c: 1934: {
  3947                           ;usb_device.c: 1940: outPipes[0].pFunc();
  3948  0FE1  084C               	movf	(_outPipes+5)^(0+256),w
  3949  0FE2  318E  2E50         	ljmp	$	;if you get stuck here, you called an invalid pointer
  3950  0FE4                     l3621:	
  3951                           
  3952                           ;usb_device.c: 1945: }
  3953                           ;usb_device.c: 1946: outPipes[0].info.bits.busy = 0;
  3954  0FE4  13C9               	bcf	(_outPipes^(0+256)+2),7
  3955                           
  3956                           ;usb_device.c: 1960: if(USBDeferStatusStagePacket == 0)
  3957  0FE5  0020               	movlb	0	; select bank0
  3958  0FE6  08D4               	movf	_USBDeferStatusStagePacket,f
  3959  0FE7  1D03               	skipz
  3960  0FE8  0008               	return
  3961                           
  3962                           ;usb_device.c: 1961: {
  3963                           ;usb_device.c: 1962: USBCtrlEPAllowStatusStage();
  3964  0FE9  3185  2DF6         	ljmp	l3387
  3965  0FEB                     __end_of_USBCtrlTrfRxService:	
  3966  0FEB                     PL228:	
  3967  0FEB  0A59               	incf	_pBDTEntryEP0OutNext,w
  3968  0FEC  0086               	movwf	6
  3969  0FED  3008               	movlw	8
  3970  0FEE  0187               	clrf	7
  3971  0FEF  0081               	movwf	1
  3972  0FF0  0008               	return
  3973  0FF1                     __end_ofPL228:	
  3974  0FF1                     PL230:	
  3975  0FF1  00F2               	movwf	??_USBCtrlTrfRxService
  3976  0FF2  01F3               	clrf	??_USBCtrlTrfRxService+1
  3977  0FF3  0859               	movf	_pBDTEntryEP0OutNext,w
  3978  0FF4  3E02               	addlw	2
  3979  0FF5  0086               	movwf	6
  3980  0FF6  0872               	movf	??_USBCtrlTrfRxService,w
  3981  0FF7  3FC0               	movwi [0]fsr1
  3982  0FF8  0873               	movf	??_USBCtrlTrfRxService+1,w
  3983  0FF9  3FC1               	movwi [1]fsr1
  3984  0FFA  0008               	return
  3985  0FFB                     __end_ofPL230:	
  3986  0FFB                     PL234:	
  3987  0FFB  0081               	movwf	1
  3988  0FFC  0859               	movf	_pBDTEntryEP0OutNext,w
  3989  0FFD  0086               	movwf	6
  3990  0FFE  1781               	bsf	1,7
  3991  0FFF  0008               	return
  3992  1000                     __end_ofPL234:	
  3993                           
  3994                           	psect	swtext1
  3995  07D9                     __pswtext1:	
  3996  07D9                     S4093:	
  3997  07D9  3187  2F32         	ljmp	l3839
  3998  07DB  3187  2F33         	ljmp	l3841
  3999  07DD  3187  2F20         	ljmp	l888
  4000  07DF  3187  2F33         	ljmp	l3841
  4001  07E1  3187  2F20         	ljmp	l888
  4002  07E3  3187  2F21         	ljmp	l890
  4003  07E5  3187  2F25         	ljmp	l3827
  4004  07E7  3187  2F42         	ljmp	l3853
  4005  07E9  3187  2F29         	ljmp	l3831
  4006  07EB  3187  2F27         	ljmp	l3829
  4007  07ED  3187  2F34         	ljmp	l3843
  4008  07EF  3187  2F3A         	ljmp	l899
  4009  07F1  3187  2F20         	ljmp	l888
  4010                           
  4011                           	psect	text10
  4012  0D8B                     __ptext10:	
  4013 ;; *************** function _USBStdGetDscHandler *****************
  4014 ;; Defined at:
  4015 ;;		line 2063 in file "../framework/usb/usb_device.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;		None
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;		None
  4020 ;; Return value:  Size  Location     Type
  4021 ;;		None               void
  4022 ;; Registers used:
  4023 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4024 ;; Tracked objects:
  4025 ;;		On entry : 1D/0
  4026 ;;		On exit  : 1F/0
  4027 ;;		Unchanged: FFFE0/0
  4028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4031 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4032 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4033 ;;Total ram usage:        2 bytes
  4034 ;; Hardware stack levels used:    1
  4035 ;; Hardware stack levels required when called:    1
  4036 ;; This function calls:
  4037 ;;		Nothing
  4038 ;; This function is called by:
  4039 ;;		_USBCheckStdRequest
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           
  4044                           ;psect for function _USBStdGetDscHandler
  4045  0D8B                     _USBStdGetDscHandler:	
  4046  0D8B                     l3687:	
  4047                           ;incstack = 0
  4048                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  4049                           
  4050                           
  4051                           ;usb_device.c: 2064: if(SetupPkt.bmRequestType == 0x80)
  4052  0D8B  0020               	movlb	0	; select bank0
  4053  0D8C  0840               	movf	64,w	;volatile
  4054  0D8D  3A80               	xorlw	128
  4055  0D8E  1D03               	skipz
  4056  0D8F  0008               	return
  4057                           
  4058                           ;usb_device.c: 2065: {
  4059                           ;usb_device.c: 2066: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  4060  0D90  30C0               	movlw	192
  4061  0D91  00DD               	movwf	_inPipes+2
  4062                           
  4063                           ;usb_device.c: 2068: switch(SetupPkt.bDescriptorType)
  4064  0D92  2DCA               	goto	l3715
  4065  0D93                     l3691:	
  4066                           
  4067                           ;usb_device.c: 2074: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  4068  0D93  30E3               	movlw	low (_device_dsc| (0+32768))
  4069  0D94  00DB               	movwf	_inPipes
  4070  0D95  3090               	movlw	high (_device_dsc| (0+32768))
  4071  0D96  00DC               	movwf	_inPipes+1
  4072                           
  4073                           ;usb_device.c: 2076: inPipes[0].wCount.Val = sizeof(device_dsc);
  4074  0D97  3012               	movlw	18
  4075  0D98  00DE               	movwf	_inPipes+3
  4076  0D99  01DF               	clrf	_inPipes+4
  4077                           
  4078                           ;usb_device.c: 2077: break;
  4079  0D9A  0008               	return
  4080  0D9B                     l3693:	
  4081                           
  4082                           ;usb_device.c: 2082: if(SetupPkt.bDscIndex < 1)
  4083  0D9B  0842               	movf	66,w
  4084  0D9C  1D03               	skipz
  4085  0D9D  2DB5               	goto	l3701
  4086                           
  4087                           ;usb_device.c: 2083: {
  4088                           ;usb_device.c: 2085: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  4089  0D9E  0842               	movf	66,w	;volatile
  4090  0D9F  00F0               	movwf	??_USBStdGetDscHandler
  4091  0DA0  302E               	movlw	low (_USB_CD_Ptr| (0+32768))
  4092  0DA1  25E4  318D         	fcall	PL256	;call to abstracted procedure
  4093  0DA3  3090               	movlw	high (_USB_CD_Ptr| (0+32768))
  4094  0DA4  25D6  318D         	fcall	PL248	;call to abstracted procedure
  4095                           
  4096                           ;usb_device.c: 2093: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  4097  0DA6  00F1               	movwf	??_USBStdGetDscHandler+1
  4098  0DA7  085B               	movf	_inPipes,w
  4099  0DA8  00F0               	movwf	??_USBStdGetDscHandler
  4100  0DA9  3E02               	addlw	2
  4101  0DAA  25DD  318D         	fcall	PL252	;call to abstracted procedure
  4102  0DAC  00DE               	movwf	_inPipes+3
  4103                           
  4104                           ;usb_device.c: 2094: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  4105  0DAD  085C               	movf	_inPipes+1,w
  4106  0DAE  00F1               	movwf	??_USBStdGetDscHandler+1
  4107  0DAF  085B               	movf	_inPipes,w
  4108  0DB0  00F0               	movwf	??_USBStdGetDscHandler
  4109  0DB1  3E03               	addlw	3
  4110  0DB2  25DD               	fcall	PL252	;call to abstracted procedure
  4111  0DB3  00DF               	movwf	_inPipes+4
  4112                           
  4113                           ;usb_device.c: 2095: }
  4114  0DB4  0008               	return
  4115  0DB5                     l3701:	
  4116                           
  4117                           ;usb_device.c: 2096: else
  4118                           ;usb_device.c: 2097: {
  4119                           ;usb_device.c: 2098: inPipes[0].info.Val = 0;
  4120  0DB5  01DD               	clrf	_inPipes+2
  4121  0DB6  0008               	return
  4122  0DB7                     l3703:	
  4123                           
  4124                           ;usb_device.c: 2105: if(SetupPkt.bDscIndex<3)
  4125  0DB7  3003               	movlw	3
  4126  0DB8  0242               	subwf	66,w	;volatile
  4127  0DB9  1803               	skipnc
  4128  0DBA  2DB5               	goto	l3701
  4129                           
  4130                           ;usb_device.c: 2106: {
  4131                           ;usb_device.c: 2108: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  4132  0DBB  0842               	movf	66,w	;volatile
  4133  0DBC  00F0               	movwf	??_USBStdGetDscHandler
  4134  0DBD  3028               	movlw	low (_USB_SD_Ptr| (0+32768))
  4135  0DBE  25E4  318D         	fcall	PL256	;call to abstracted procedure
  4136  0DC0  3090               	movlw	high (_USB_SD_Ptr| (0+32768))
  4137  0DC1  25D6               	fcall	PL248	;call to abstracted procedure
  4138                           
  4139                           ;usb_device.c: 2110: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  4140  0DC2  085B               	movf	_inPipes,w
  4141  0DC3  0084               	movwf	4
  4142  0DC4  085C               	movf	_inPipes+1,w
  4143  0DC5  0085               	movwf	5
  4144  0DC6  0800               	movf	0,w	;code access
  4145  0DC7  00DE               	movwf	_inPipes+3
  4146  0DC8  01DF               	clrf	_inPipes+4
  4147                           
  4148                           ;usb_device.c: 2111: }
  4149  0DC9  0008               	return
  4150  0DCA                     l3715:	
  4151  0DCA  0843               	movf	67,w	;volatile
  4152                           
  4153                           ; Switch size 1, requested type "space"
  4154                           ; Number of cases is 3, Range of values is 1 to 3
  4155                           ; switch strategies available:
  4156                           ; Name         Instructions Cycles
  4157                           ; simple_byte           10     6 (average)
  4158                           ; direct_byte           15     9 (fixed)
  4159                           ; jumptable            263     9 (fixed)
  4160                           ;	Chosen strategy is simple_byte
  4161  0DCB  3A01               	xorlw	1	; case 1
  4162  0DCC  1903               	skipnz
  4163  0DCD  2D93               	goto	l3691
  4164  0DCE  3A03               	xorlw	3	; case 2
  4165  0DCF  1903               	skipnz
  4166  0DD0  2D9B               	goto	l3693
  4167  0DD1  3A01               	xorlw	1	; case 3
  4168  0DD2  1903               	skipnz
  4169  0DD3  2DB7               	goto	l3703
  4170  0DD4  2DB5               	goto	l3701
  4171  0DD5  0008               	return
  4172  0DD6                     __end_of_USBStdGetDscHandler:	
  4173  0DD6                     PL248:	
  4174  0DD6  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  4175  0DD7  0085               	movwf	5
  4176  0DD8  3F00               	moviw [0]fsr0
  4177  0DD9  00DB               	movwf	_inPipes
  4178  0DDA  3F01               	moviw [1]fsr0
  4179  0DDB  00DC               	movwf	_inPipes+1
  4180  0DDC  0008               	return
  4181  0DDD                     __end_ofPL248:	
  4182  0DDD                     PL252:	
  4183  0DDD  0084               	movwf	4
  4184  0DDE  0871               	movf	??_USBStdGetDscHandler+1,w
  4185  0DDF  1803               	skipnc
  4186  0DE0  0A71               	incf	??_USBStdGetDscHandler+1,w
  4187  0DE1  0085               	movwf	5
  4188  0DE2  0800               	movf	0,w	;code access
  4189  0DE3  0008               	return
  4190  0DE4                     __end_ofPL252:	
  4191  0DE4                     PL256:	
  4192  0DE4  01F1               	clrf	??_USBStdGetDscHandler+1
  4193  0DE5  35F0               	lslf	??_USBStdGetDscHandler,f
  4194  0DE6  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  4195  0DE7  0770               	addwf	??_USBStdGetDscHandler,w
  4196  0DE8  0084               	movwf	4
  4197  0DE9  0008               	return
  4198  0DEA                     __end_ofPL256:	
  4199                           
  4200                           	psect	text11
  4201  0DEA                     __ptext11:	
  4202 ;; *************** function _USBStdSetCfgHandler *****************
  4203 ;; Defined at:
  4204 ;;		line 1988 in file "../framework/usb/usb_device.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;		None
  4207 ;; Auto vars:     Size  Location     Type
  4208 ;;  p               2   10[COMMON] PTR unsigned char 
  4209 ;;		 -> UEP1(1), 
  4210 ;;  i               1   12[COMMON] unsigned char 
  4211 ;;  i               1   13[COMMON] unsigned char 
  4212 ;; Return value:  Size  Location     Type
  4213 ;;		None               void
  4214 ;; Registers used:
  4215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4216 ;; Tracked objects:
  4217 ;;		On entry : 1D/0
  4218 ;;		On exit  : 1F/0
  4219 ;;		Unchanged: FFFE0/0
  4220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4222 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4224 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4225 ;;Total ram usage:        4 bytes
  4226 ;; Hardware stack levels used:    1
  4227 ;; Hardware stack levels required when called:    5
  4228 ;; This function calls:
  4229 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4230 ;;		_memset
  4231 ;; This function is called by:
  4232 ;;		_USBCheckStdRequest
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           
  4237                           ;psect for function _USBStdSetCfgHandler
  4238  0DEA                     _USBStdSetCfgHandler:	
  4239  0DEA                     l3627:	
  4240                           ;incstack = 0
  4241                           ; Regs used in _USBStdSetCfgHandler: [allreg]
  4242                           
  4243                           
  4244                           ;usb_device.c: 1989: uint8_t i;
  4245                           ;usb_device.c: 1992: inPipes[0].info.bits.busy = 1;
  4246  0DEA  0020               	movlb	0	; select bank0
  4247  0DEB  300E               	movlw	14
  4248  0DEC  17DD               	bsf	_inPipes+2,7
  4249                           
  4250                           ;usb_device.c: 1995: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 
      +                          0; };
  4251  0DED  00FB               	movwf	USBStdSetCfgHandler@p+1
  4252  0DEE  3099               	movlw	153
  4253  0DEF  00FA               	movwf	USBStdSetCfgHandler@p
  4254  0DF0  01FC               	clrf	USBStdSetCfgHandler@i_2209
  4255  0DF1                     l3635:	
  4256  0DF1  087A               	movf	USBStdSetCfgHandler@p,w
  4257  0DF2  0086               	movwf	6
  4258  0DF3  087B               	movf	USBStdSetCfgHandler@p+1,w
  4259  0DF4  0087               	movwf	7
  4260  0DF5  0181               	clrf	1
  4261  0DF6  0AFA               	incf	USBStdSetCfgHandler@p,f
  4262  0DF7  1903               	skipnz
  4263  0DF8  0AFB               	incf	USBStdSetCfgHandler@p+1,f
  4264  0DF9  0AFC               	incf	USBStdSetCfgHandler@i_2209,f
  4265  0DFA  1903               	btfsc	3,2
  4266  0DFB  2DF1               	goto	l3635
  4267  0DFC  3020               	movlw	32
  4268                           
  4269                           ;usb_device.c: 1998: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  4270  0DFD  01F0               	clrf	?_memset
  4271  0DFE  01F1               	clrf	?_memset+1
  4272  0DFF  00F2               	movwf	?_memset+2
  4273  0E00  01F3               	clrf	?_memset+3
  4274  0E01  263E  318D         	fcall	_memset
  4275                           
  4276                           ;usb_device.c: 2001: UCONbits.PPBRST = 1;
  4277  0E03  003D               	movlb	29	; select bank29
  4278  0E04  170E               	bsf	14,6	;volatile
  4279                           
  4280                           ;usb_device.c: 2006: for(i = 0; i < (uint8_t)(1+1u); i++)
  4281  0E05  01FD               	clrf	USBStdSetCfgHandler@i
  4282  0E06                     l3653:	
  4283                           
  4284                           ;usb_device.c: 2007: {
  4285                           ;usb_device.c: 2008: ep_data_in[i].Val = 0u;
  4286  0E06  087D               	movf	USBStdSetCfgHandler@i,w
  4287  0E07  3E4D               	addlw	_ep_data_in& (0+255)
  4288  0E08  0086               	movwf	6
  4289  0E09  3001               	movlw	1	; select bank2/3
  4290  0E0A  0087               	movwf	7
  4291  0E0B  0181               	clrf	1
  4292                           
  4293                           ;usb_device.c: 2009: ep_data_out[i].Val = 0u;
  4294  0E0C  087D               	movf	USBStdSetCfgHandler@i,w
  4295  0E0D  3E4F               	addlw	_ep_data_out& (0+255)
  4296  0E0E  0086               	movwf	6
  4297  0E0F  3002               	movlw	2
  4298  0E10  0181               	clrf	1
  4299  0E11  0AFD               	incf	USBStdSetCfgHandler@i,f
  4300  0E12  027D               	subwf	USBStdSetCfgHandler@i,w
  4301  0E13  1C03               	skipc
  4302  0E14  2E06               	goto	l3653
  4303  0E15  30EF               	movlw	_USBAlternateInterface& (0+255)
  4304                           
  4305                           ;usb_device.c: 2010: }
  4306                           ;usb_device.c: 2013: memset((void*)&USBAlternateInterface,0x00,1);
  4307  0E16  01F0               	clrf	?_memset
  4308  0E17  01F1               	clrf	?_memset+1
  4309  0E18  01F2               	clrf	?_memset+2
  4310  0E19  0AF2               	incf	?_memset+2,f
  4311  0E1A  01F3               	clrf	?_memset+3
  4312  0E1B  263E  318D         	fcall	_memset
  4313                           
  4314                           ;usb_device.c: 2016: UCONbits.PPBRST = 0;
  4315  0E1D  003D               	movlb	29	; select bank29
  4316  0E1E  130E               	bcf	14,6	;volatile
  4317                           
  4318                           ;usb_device.c: 2018: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  4319  0E1F  3028               	movlw	40
  4320  0E20  0020               	movlb	0	; select bank0
  4321  0E21  00D2               	movwf	_pBDTEntryIn
  4322                           
  4323                           ;usb_device.c: 2021: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  4324  0E22  3020               	movlw	32
  4325  0E23  00D8               	movwf	_pBDTEntryEP0OutCurrent
  4326                           
  4327                           ;usb_device.c: 2022: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  4328  0E24  00D9               	movwf	_pBDTEntryEP0OutNext
  4329                           
  4330                           ;usb_device.c: 2025: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  4331  0E25  0842               	movf	66,w	;volatile
  4332  0E26  0021               	movlb	1	; select bank1
  4333  0E27  00EE               	movwf	_USBActiveConfiguration^(0+128)
  4334                           
  4335                           ;usb_device.c: 2028: if(USBActiveConfiguration == 0)
  4336  0E28  08EE               	movf	_USBActiveConfiguration^(0+128),f
  4337  0E29  1D03               	skipz
  4338  0E2A  2E2F               	goto	l3675
  4339                           
  4340                           ;usb_device.c: 2029: {
  4341                           ;usb_device.c: 2031: USBDeviceState = ADDRESS_STATE;
  4342  0E2B  3010               	movlw	16
  4343  0E2C  0020               	movlb	0	; select bank0
  4344  0E2D  00D5               	movwf	_USBDeviceState
  4345                           
  4346                           ;usb_device.c: 2032: }
  4347  0E2E  0008               	return
  4348  0E2F                     l3675:	
  4349                           
  4350                           ;usb_device.c: 2033: else
  4351                           ;usb_device.c: 2034: {
  4352                           ;usb_device.c: 2036: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  4353  0E2F  0020               	movlb	0	; select bank0
  4354  0E30  30EE               	movlw	_USBActiveConfiguration& (0+255)
  4355  0E31  01E1               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER
  4356  0E32  0AE1               	incf	?_USER_USB_CALLBACK_EVENT_HANDLER,f
  4357  0E33  01E2               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  4358  0E34  00E3               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  4359  0E35  01E4               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  4360  0E36  0AE4               	incf	?_USER_USB_CALLBACK_EVENT_HANDLER+3,f
  4361  0E37  01E5               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  4362  0E38  3185  2516         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4363                           
  4364                           ;usb_device.c: 2041: USBDeviceState = CONFIGURED_STATE;
  4365  0E3A  3020               	movlw	32
  4366  0E3B  0020               	movlb	0	; select bank0
  4367  0E3C  00D5               	movwf	_USBDeviceState
  4368  0E3D  0008               	return
  4369  0E3E                     __end_of_USBStdSetCfgHandler:	
  4370  0E3E                     __ptext12:	
  4371 ;; *************** function _memset *****************
  4372 ;; Defined at:
  4373 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\memset.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;  p1              1    wreg     PTR void 
  4376 ;;		 -> USBAlternateInterface(1), BDT(32), 
  4377 ;;  c               2    0[COMMON] int 
  4378 ;;  n               2    2[COMMON] unsigned int 
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;  p1              1    4[COMMON] PTR void 
  4381 ;;		 -> USBAlternateInterface(1), BDT(32), 
  4382 ;;  p               1    5[COMMON] PTR unsigned char 
  4383 ;;		 -> USBAlternateInterface(1), BDT(32), 
  4384 ;; Return value:  Size  Location     Type
  4385 ;;                  1    wreg      PTR void 
  4386 ;; Registers used:
  4387 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4388 ;; Tracked objects:
  4389 ;;		On entry : 2/0
  4390 ;;		On exit  : 2/0
  4391 ;;		Unchanged: FFFFD/0
  4392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4393 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4394 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4396 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4397 ;;Total ram usage:        6 bytes
  4398 ;; Hardware stack levels used:    1
  4399 ;; Hardware stack levels required when called:    1
  4400 ;; This function calls:
  4401 ;;		Nothing
  4402 ;; This function is called by:
  4403 ;;		_USBStdSetCfgHandler
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           
  4408                           ;psect for function _memset
  4409  0E3E                     _memset:	
  4410                           
  4411                           ;incstack = 0
  4412                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  4413                           ;memset@p1 stored from wreg
  4414  0E3E  00F4               	movwf	memset@p1
  4415  0E3F  00F5               	movwf	memset@p
  4416  0E40                     l3685:	
  4417  0E40  3001               	movlw	1
  4418  0E41  02F2               	subwf	memset@n,f
  4419  0E42  3000               	movlw	0
  4420  0E43  3BF3               	subwfb	memset@n+1,f
  4421  0E44  0A72               	incf	memset@n,w
  4422  0E45  1903               	skipnz
  4423  0E46  0A73               	incf	memset@n+1,w
  4424  0E47  1903               	btfsc	3,2
  4425  0E48  0008               	return
  4426  0E49  0875               	movf	memset@p,w
  4427  0E4A  0086               	movwf	6
  4428  0E4B  0187               	clrf	7
  4429  0E4C  0870               	movf	memset@c,w
  4430  0E4D  0081               	movwf	1
  4431  0E4E  0AF5               	incf	memset@p,f
  4432  0E4F  2E40               	goto	l3685
  4433  0E50                     __end_of_memset:	
  4434                           
  4435                           	psect	text26
  4436  0008                     __ptext26:	
  4437 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  4438 ;; Defined at:
  4439 ;;		line 24 in file "../src/app_led_usb_status.c"
  4440 ;; Parameters:    Size  Location     Type
  4441 ;;		None
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;		None
  4444 ;; Return value:  Size  Location     Type
  4445 ;;		None               void
  4446 ;; Registers used:
  4447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4448 ;; Tracked objects:
  4449 ;;		On entry : 1F/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: FFFE0/0
  4452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4457 ;;Total ram usage:        0 bytes
  4458 ;; Hardware stack levels used:    1
  4459 ;; Hardware stack levels required when called:    2
  4460 ;; This function calls:
  4461 ;;		_LED_Off
  4462 ;;		_LED_On
  4463 ;; This function is called by:
  4464 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           
  4469                           ;psect for function _APP_LEDUpdateUSBStatus
  4470  0008                     _APP_LEDUpdateUSBStatus:	
  4471  0008                     l2739:	
  4472                           ;incstack = 0
  4473                           ; Regs used in _APP_LEDUpdateUSBStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4474                           
  4475                           
  4476                           ;app_led_usb_status.c: 25: static uint16_t ledCount = 0;
  4477                           ;app_led_usb_status.c: 27: if(UCONbits.SUSPND == 1)
  4478  0008  003D               	movlb	29	; select bank29
  4479  0009  1C8E               	btfss	14,1	;volatile
  4480  000A  283D               	goto	l2771
  4481                           
  4482                           ;app_led_usb_status.c: 28: {
  4483                           ;app_led_usb_status.c: 29: LED_Off(LED_D1);
  4484  000B  3001               	movlw	1
  4485  000C  2B72               	ljmp	_LED_Off
  4486  000D                     l2745:	
  4487                           
  4488                           ;app_led_usb_status.c: 38: if(ledCount == 1)
  4489  000D  0350               	decf	APP_LEDUpdateUSBStatus@ledCount,w
  4490  000E  0451               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w
  4491  000F  1D03               	skipz
  4492  0010  2815               	goto	l2749
  4493                           
  4494                           ;app_led_usb_status.c: 39: {
  4495                           ;app_led_usb_status.c: 40: LED_On(LED_D1);
  4496  0011  3001               	movlw	1
  4497  0012  2388  3180         	fcall	_LED_On
  4498                           
  4499                           ;app_led_usb_status.c: 41: }
  4500  0014  2843               	goto	l2773
  4501  0015                     l2749:	
  4502                           
  4503                           ;app_led_usb_status.c: 42: else if(ledCount == 75)
  4504  0015  0850               	movf	APP_LEDUpdateUSBStatus@ledCount,w
  4505  0016  3A4B               	xorlw	75
  4506  0017  0451               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w
  4507  0018  1D03               	skipz
  4508  0019  281E               	goto	l2753
  4509                           
  4510                           ;app_led_usb_status.c: 43: {
  4511                           ;app_led_usb_status.c: 44: LED_Off(LED_D1);
  4512  001A  3001               	movlw	1
  4513  001B  2372  3180         	fcall	_LED_Off
  4514                           
  4515                           ;app_led_usb_status.c: 45: }
  4516  001D  2843               	goto	l2773
  4517  001E                     l2753:	
  4518                           
  4519                           ;app_led_usb_status.c: 46: else if(ledCount > 150)
  4520  001E  3000               	movlw	0
  4521  001F  0251               	subwf	APP_LEDUpdateUSBStatus@ledCount+1,w
  4522  0020  3097               	movlw	151
  4523  0021                     L12:	
  4524  0021  1903               	skipnz
  4525  0022  0250               	subwf	APP_LEDUpdateUSBStatus@ledCount,w
  4526  0023  1C03               	skipc
  4527  0024  2843               	goto	l2773
  4528                           
  4529                           ;app_led_usb_status.c: 47: {
  4530                           ;app_led_usb_status.c: 48: ledCount = 0;
  4531  0025  01D0               	clrf	APP_LEDUpdateUSBStatus@ledCount
  4532  0026  01D1               	clrf	APP_LEDUpdateUSBStatus@ledCount+1
  4533  0027  2843               	goto	l2773
  4534  0028                     l2757:	
  4535                           ;app_led_usb_status.c: 49: }
  4536                           ;app_led_usb_status.c: 50: break;
  4537                           
  4538                           
  4539                           ;app_led_usb_status.c: 55: if(ledCount == 1)
  4540  0028  0350               	decf	APP_LEDUpdateUSBStatus@ledCount,w
  4541  0029  0451               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w
  4542  002A  1D03               	skipz
  4543  002B  2830               	goto	l2761
  4544                           
  4545                           ;app_led_usb_status.c: 56: {
  4546                           ;app_led_usb_status.c: 57: LED_On(LED_D1);
  4547  002C  3001               	movlw	1
  4548  002D  2388  3180         	fcall	_LED_On
  4549                           
  4550                           ;app_led_usb_status.c: 58: }
  4551  002F  2843               	goto	l2773
  4552  0030                     l2761:	
  4553                           
  4554                           ;app_led_usb_status.c: 59: else if(ledCount == 50)
  4555  0030  0850               	movf	APP_LEDUpdateUSBStatus@ledCount,w
  4556  0031  3A32               	xorlw	50
  4557  0032  0451               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w
  4558  0033  1D03               	skipz
  4559  0034  2839               	goto	l2765
  4560                           
  4561                           ;app_led_usb_status.c: 60: {
  4562                           ;app_led_usb_status.c: 61: LED_Off(LED_D1);
  4563  0035  3001               	movlw	1
  4564  0036  2372  3180         	fcall	_LED_Off
  4565                           
  4566                           ;app_led_usb_status.c: 62: }
  4567  0038  2843               	goto	l2773
  4568  0039                     l2765:	
  4569                           
  4570                           ;app_led_usb_status.c: 63: else if(ledCount > 950)
  4571  0039  3003               	movlw	3
  4572  003A  0251               	subwf	APP_LEDUpdateUSBStatus@ledCount+1,w
  4573  003B  30B7               	movlw	183
  4574  003C  2821               	goto	L12
  4575  003D                     l2771:	
  4576  003D  0020               	movlb	0	; select bank0
  4577  003E  0855               	movf	_USBDeviceState,w
  4578                           
  4579                           ; Switch size 1, requested type "space"
  4580                           ; Number of cases is 1, Range of values is 32 to 32
  4581                           ; switch strategies available:
  4582                           ; Name         Instructions Cycles
  4583                           ; simple_byte            4     3 (average)
  4584                           ; direct_byte           11     9 (fixed)
  4585                           ; jumptable            263     9 (fixed)
  4586                           ;	Chosen strategy is simple_byte
  4587  003F  3A20               	xorlw	32	; case 32
  4588  0040  1903               	skipnz
  4589  0041  280D               	goto	l2745
  4590  0042  2828               	goto	l2757
  4591  0043                     l2773:	
  4592                           
  4593                           ;app_led_usb_status.c: 71: ledCount++;
  4594  0043  0020               	movlb	0	; select bank0
  4595  0044  0AD0               	incf	APP_LEDUpdateUSBStatus@ledCount,f
  4596  0045  1903               	skipnz
  4597  0046  0AD1               	incf	APP_LEDUpdateUSBStatus@ledCount+1,f
  4598  0047  0008               	return
  4599  0048                     __end_of_APP_LEDUpdateUSBStatus:	
  4600  0048                     start_initialization:	
  4601  0048                     __initialization:	
  4602                           
  4603                           ; Clear objects allocated to BANK0
  4604  0048  3050               	movlw	low __pbssBANK0
  4605  0049  0084               	movwf	4
  4606  004A  3000               	movlw	high __pbssBANK0
  4607  004B  0085               	movwf	5
  4608  004C  3011               	movlw	17
  4609  004D  318D  2585  3180   	fcall	clear_ram0
  4610                           
  4611                           ; Clear objects allocated to BANK1
  4612  0050  30E0               	movlw	low __pbssBANK1
  4613  0051  0084               	movwf	4
  4614  0052  3000               	movlw	high __pbssBANK1
  4615  0053  0085               	movwf	5
  4616  0054  3010               	movlw	16
  4617  0055  318D  2585  3180   	fcall	clear_ram0
  4618                           
  4619                           ; Clear objects allocated to BANK2
  4620  0058  3020               	movlw	low __pbssBANK2
  4621  0059  0084               	movwf	4
  4622  005A  3001               	movlw	high __pbssBANK2
  4623  005B  0085               	movwf	5
  4624  005C  303B               	movlw	59
  4625  005D  318D  2585  3180   	fcall	clear_ram0
  4626                           
  4627                           ; Clear objects allocated to BANK3
  4628  0060  30A4               	movlw	low __pbssBANK3
  4629  0061  0084               	movwf	4
  4630  0062  3001               	movlw	high __pbssBANK3
  4631  0063  0085               	movwf	5
  4632  0064  3027               	movlw	39
  4633  0065  318D  2585  3180   	fcall	clear_ram0
  4634                           
  4635                           ; Clear objects allocated to BANK4
  4636  0068  3020               	movlw	low __pbssBANK4
  4637  0069  0084               	movwf	4
  4638  006A  3002               	movlw	high __pbssBANK4
  4639  006B  0085               	movwf	5
  4640  006C  304E               	movlw	78
  4641  006D  318D  2585  3180   	fcall	clear_ram0
  4642  0070                     end_of_initialization:	
  4643                           ;End of C runtime variable initialization code
  4644                           
  4645  0070                     __end_of__initialization:	
  4646  0070  0020               	movlb	0
  4647  0071  2872               	ljmp	_main	;jump to C main() function
  4648  0072                     __pmaintext:	
  4649 ;;
  4650 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4651 ;;
  4652 ;; *************** function _main *****************
  4653 ;; Defined at:
  4654 ;;		line 35 in file "../src/main.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;		None
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;		None
  4659 ;; Return value:  Size  Location     Type
  4660 ;;		None               void
  4661 ;; Registers used:
  4662 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4663 ;; Tracked objects:
  4664 ;;		On entry : 17F/0
  4665 ;;		On exit  : 17F/1D
  4666 ;;		Unchanged: FFE80/0
  4667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4672 ;;Total ram usage:        0 bytes
  4673 ;; Hardware stack levels required when called:   10
  4674 ;; This function calls:
  4675 ;;		_SYSTEM_Initialize
  4676 ;;		_USBDeviceInit
  4677 ;;		_BLEDeviceInit
  4678 ;;		_APP_DeviceAudioMIDITasks
  4679 ;;		_USBDeviceTasks
  4680 ;; This function is called by:
  4681 ;;		Startup code after reset
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           
  4686                           ;psect for function _main
  4687  0072                     _main:	
  4688                           
  4689                           ;main.c: 36: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  4690                           
  4691                           ;incstack = 0
  4692                           ; Regs used in _main: [allreg]
  4693  0072  3000               	movlw	0
  4694  0073  2084  3180         	fcall	_SYSTEM_Initialize
  4695                           
  4696                           ;main.c: 38: USBDeviceInit();
  4697  0075  2543  3180         	fcall	_USBDeviceInit
  4698                           
  4699                           ;main.c: 39: ;
  4700                           ;main.c: 41: BLEDeviceInit();
  4701  0077  2098  3180         	fcall	_BLEDeviceInit
  4702  0079                     l2801:	
  4703                           
  4704                           ;main.c: 44: {
  4705                           ;main.c: 45: ;
  4706                           ;main.c: 49: APP_DeviceAudioMIDITasks();
  4707  0079  209B  3180         	fcall	_APP_DeviceAudioMIDITasks
  4708                           
  4709                           ;main.c: 64: USBDeviceTasks();
  4710  007B  2471  3180         	fcall	_USBDeviceTasks
  4711                           
  4712                           ;main.c: 70: if( USBDeviceState < CONFIGURED_STATE )
  4713  007D  3020               	movlw	32
  4714  007E  0255               	subwf	_USBDeviceState,w
  4715  007F  1C03               	btfss	3,0
  4716  0080  2879               	goto	l2801
  4717                           
  4718                           ;main.c: 74: }
  4719                           ;main.c: 80: if( UCONbits.SUSPND == 1 )
  4720  0081  003D               	movlb	29	; select bank29
  4721  0082  080E               	movf	14,w	;volatile
  4722  0083  2879               	goto	l2801
  4723  0084                     __end_of_main:	
  4724  0084                     __ptext47:	
  4725 ;; *************** function _SYSTEM_Initialize *****************
  4726 ;; Defined at:
  4727 ;;		line 87 in file "../src/pic16f1459/system.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  state           1    wreg     enum E2634
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  state           1    1[COMMON] enum E2634
  4732 ;; Return value:  Size  Location     Type
  4733 ;;		None               void
  4734 ;; Registers used:
  4735 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4736 ;; Tracked objects:
  4737 ;;		On entry : 17F/0
  4738 ;;		On exit  : 178/0
  4739 ;;		Unchanged: FFE80/0
  4740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4744 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4745 ;;Total ram usage:        1 bytes
  4746 ;; Hardware stack levels used:    1
  4747 ;; Hardware stack levels required when called:    2
  4748 ;; This function calls:
  4749 ;;		_LED_Enable
  4750 ;; This function is called by:
  4751 ;;		_main
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           
  4756                           ;psect for function _SYSTEM_Initialize
  4757  0084                     _SYSTEM_Initialize:	
  4758                           
  4759                           ;incstack = 0
  4760                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4761                           ;SYSTEM_Initialize@state stored from wreg
  4762  0084  00F1               	movwf	SYSTEM_Initialize@state
  4763                           
  4764                           ; Switch size 1, requested type "space"
  4765                           ; Number of cases is 3, Range of values is 0 to 2
  4766                           ; switch strategies available:
  4767                           ; Name         Instructions Cycles
  4768                           ; simple_byte           10     6 (average)
  4769                           ; direct_byte           12     6 (fixed)
  4770                           ; jumptable            260     6 (fixed)
  4771                           ; rangetable             7     4 (fixed)
  4772                           ; spacedrange           11     6 (fixed)
  4773                           ; locatedrange           3     3 (fixed)
  4774                           ;	Chosen strategy is simple_byte
  4775                           
  4776                           ;system.c: 100: break;
  4777                           
  4778                           ;system.c: 88: switch(state)
  4779  0085  3A00               	xorlw	0	; case 0
  4780  0086  1903               	skipnz
  4781  0087  288F               	goto	l2721
  4782  0088  3A01               	xorlw	1	; case 1
  4783  0089  1903               	skipnz
  4784  008A  2897               	goto	l14
  4785  008B  3A03               	xorlw	3	; case 2
  4786  008C  1903               	skipnz
  4787  008D  2897               	goto	l14
  4788  008E  2897               	goto	l14
  4789  008F                     l2721:	
  4790                           
  4791                           ;system.c: 94: OSCCON = 0xFC;
  4792  008F  30FC               	movlw	252
  4793  0090  0021               	movlb	1	; select bank1
  4794  0091  0099               	movwf	25	;volatile
  4795                           
  4796                           ;system.c: 95: ACTCON = 0x90;
  4797  0092  3090               	movlw	144
  4798  0093  0027               	movlb	7	; select bank7
  4799  0094  009B               	movwf	27	;volatile
  4800                           
  4801                           ;system.c: 97: LED_Enable(LED_D1);
  4802  0095  3001               	movlw	1
  4803  0096  2B9E               	ljmp	_LED_Enable
  4804  0097                     l14:	
  4805  0097  0008               	return
  4806  0098                     __end_of_SYSTEM_Initialize:	
  4807  0098                     __ptext44:	
  4808 ;; *************** function _BLEDeviceInit *****************
  4809 ;; Defined at:
  4810 ;;		line 70 in file "../src/app_device_ble_midi.c"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;		None
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;		None
  4815 ;; Return value:  Size  Location     Type
  4816 ;;		None               void
  4817 ;; Registers used:
  4818 ;;		wreg, status,2, status,0, pclath, cstack
  4819 ;; Tracked objects:
  4820 ;;		On entry : 17F/0
  4821 ;;		On exit  : 17F/4
  4822 ;;		Unchanged: FFE80/0
  4823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4828 ;;Total ram usage:        0 bytes
  4829 ;; Hardware stack levels used:    1
  4830 ;; Hardware stack levels required when called:    2
  4831 ;; This function calls:
  4832 ;;		_PIN_MANAGER_Initialize
  4833 ;;		_SPI_Initialize
  4834 ;; This function is called by:
  4835 ;;		_main
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           
  4840                           ;psect for function _BLEDeviceInit
  4841  0098                     _BLEDeviceInit:	
  4842                           
  4843                           ;app_device_ble_midi.c: 72: PIN_MANAGER_Initialize();
  4844                           
  4845                           ;incstack = 0
  4846                           ; Regs used in _BLEDeviceInit: [wreg+status,2+status,0+pclath+cstack]
  4847  0098  2163  3180         	fcall	_PIN_MANAGER_Initialize
  4848                           
  4849                           ;app_device_ble_midi.c: 73: SPI_Initialize();
  4850  009A  2BB4               	ljmp	l3359
  4851  009B                     __end_of_BLEDeviceInit:	
  4852  009B                     __ptext28:	
  4853 ;; *************** function _APP_DeviceAudioMIDITasks *****************
  4854 ;; Defined at:
  4855 ;;		line 59 in file "../src/app_device_audio_midi.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;		None
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;  velocity        1   14[BANK0 ] unsigned char 
  4860 ;;  scan_pitch      1   13[BANK0 ] unsigned char 
  4861 ;; Return value:  Size  Location     Type
  4862 ;;		None               void
  4863 ;; Registers used:
  4864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4865 ;; Tracked objects:
  4866 ;;		On entry : 162/4
  4867 ;;		On exit  : 162/0
  4868 ;;		Unchanged: FFE80/0
  4869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4871 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4873 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4874 ;;Total ram usage:        8 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; Hardware stack levels required when called:    5
  4877 ;; This function calls:
  4878 ;;		_USBTransferOnePacket
  4879 ;;		_scan_task
  4880 ;; This function is called by:
  4881 ;;		_main
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           
  4886                           ;psect for function _APP_DeviceAudioMIDITasks
  4887  009B                     _APP_DeviceAudioMIDITasks:	
  4888                           
  4889                           ;app_device_audio_midi.c: 74: {
  4890                           ;app_device_audio_midi.c: 75: uint8_t scan_pitch = 0x3C, velocity = 0;
  4891                           
  4892                           ;incstack = 0
  4893                           ; Regs used in _APP_DeviceAudioMIDITasks: [allreg]
  4894  009B  303C               	movlw	60
  4895  009C  0020               	movlb	0	; select bank0
  4896  009D  00EE               	movwf	APP_DeviceAudioMIDITasks@scan_pitch
  4897  009E  306F               	movlw	APP_DeviceAudioMIDITasks@velocity& (0+255)
  4898  009F  01EF               	clrf	APP_DeviceAudioMIDITasks@velocity
  4899                           
  4900                           ;app_device_audio_midi.c: 76: if (scan_task(&scan_pitch, &velocity)) {
  4901  00A0  00E2               	movwf	?_scan_task
  4902  00A1  306E               	movlw	APP_DeviceAudioMIDITasks@scan_pitch& (0+255)
  4903  00A2  216A  3180         	fcall	_scan_task
  4904  00A4  3A00               	xorlw	0
  4905  00A5  1903               	skipnz
  4906  00A6  28D7               	goto	l2917
  4907                           
  4908                           ;app_device_audio_midi.c: 77: midiData.Val = 0;
  4909  00A7  0023               	movlb	3	; select bank3
  4910                           
  4911                           ;app_device_audio_midi.c: 78: midiData.CableNumber = 0;
  4912                           
  4913                           ;app_device_audio_midi.c: 79: midiData.CodeIndexNumber = 0x9;
  4914                           
  4915                           ;app_device_audio_midi.c: 80: midiData.DATA_0 = 0x90;
  4916  00A8  2781  3180         	fcall	PL224	;call to abstracted procedure
  4917                           
  4918                           ;app_device_audio_midi.c: 81: midiData.DATA_1 = scan_pitch;
  4919  00AA  0020               	movlb	0	; select bank0
  4920  00AB  086E               	movf	APP_DeviceAudioMIDITasks@scan_pitch,w
  4921  00AC  0023               	movlb	3	; select bank3
  4922  00AD  00A2               	movwf	34
  4923                           
  4924                           ;app_device_audio_midi.c: 82: midiData.DATA_2 = velocity;
  4925  00AE  0020               	movlb	0	; select bank0
  4926  00AF  086F               	movf	APP_DeviceAudioMIDITasks@velocity,w
  4927  00B0  0023               	movlb	3	; select bank3
  4928  00B1  00A3               	movwf	35
  4929                           
  4930                           ;app_device_audio_midi.c: 86: if( USBDeviceState == CONFIGURED_STATE || UCONbits.SUSPND)
  4931  00B2  0020               	movlb	0	; select bank0
  4932  00B3  0855               	movf	_USBDeviceState,w
  4933  00B4  3A20               	xorlw	32
  4934  00B5  1903               	skipnz
  4935  00B6  28BA               	goto	l2907
  4936  00B7  003D               	movlb	29	; select bank29
  4937  00B8  1C8E               	btfss	14,1	;volatile
  4938  00B9  28D7               	goto	l2917
  4939  00BA                     l2907:	
  4940                           
  4941                           ;app_device_audio_midi.c: 87: {
  4942                           ;app_device_audio_midi.c: 88: if(!(USBRxHandle==0?0:((volatile BDT_ENTRY*)USBRxHandle)->
      +                          STAT.UOWN))
  4943  00BA  0020               	movlb	0	; select bank0
  4944  00BB  0856               	movf	_USBRxHandle,w
  4945  00BC  1903               	btfsc	3,2
  4946  00BD  28C3               	goto	l2911
  4947  00BE  0856               	movf	_USBRxHandle,w
  4948  00BF  27B0  3180         	fcall	PL244	;call to abstracted procedure
  4949  00C1  00E8               	movwf	_APP_DeviceAudioMIDITasks$416
  4950  00C2  28C4               	goto	L13
  4951  00C3                     l2911:	
  4952  00C3  01E8               	clrf	_APP_DeviceAudioMIDITasks$416
  4953  00C4                     L13:	
  4954  00C4  01E9               	clrf	_APP_DeviceAudioMIDITasks$416+1
  4955  00C5  0869               	movf	_APP_DeviceAudioMIDITasks$416+1,w
  4956  00C6  0468               	iorwf	_APP_DeviceAudioMIDITasks$416,w
  4957  00C7  30A0               	movlw	160
  4958  00C8  1D03               	skipz
  4959  00C9  28D1               	goto	L16
  4960                           
  4961                           ;app_device_audio_midi.c: 89: {
  4962                           ;app_device_audio_midi.c: 90: USBRxHandle = USBTransferOnePacket(1,0,(uint8_t*)&Received
      +                          DataBuffer,64);
  4963  00CA  01F0               	clrf	?_USBTransferOnePacket
  4964  00CB  27AB  3180         	fcall	PL242	;call to abstracted procedure
  4965  00CD  212A  3180         	fcall	_USBTransferOnePacket
  4966  00CF  00D6               	movwf	_USBRxHandle
  4967  00D0  30A0               	movlw	160
  4968  00D1                     L16:	
  4969                           
  4970                           ;app_device_audio_midi.c: 91: }
  4971                           ;app_device_audio_midi.c: 92: USBTxHandle = USBTransferOnePacket(1,1,(uint8_t*)&midiData
      +                          ,4);
  4972  00D1  2795  3180         	fcall	PL236	;call to abstracted procedure
  4973  00D3  212A  3180         	fcall	_USBTransferOnePacket
  4974  00D5  0021               	movlb	1	; select bank1
  4975  00D6  00E5               	movwf	_USBTxHandle^(0+128)
  4976  00D7                     l2917:	
  4977                           
  4978                           ;app_device_audio_midi.c: 93: }
  4979                           ;app_device_audio_midi.c: 94: }
  4980                           ;app_device_audio_midi.c: 95: }
  4981                           ;app_device_audio_midi.c: 119: if (msCounter == 0 && !sentNoteOff && !(USBTxHandle==0?0:
      +                          ((volatile BDT_ENTRY*)USBTxHandle)->STAT.UOWN)) {
  4982  00D7  0021               	movlb	1	; select bank1
  4983  00D8  08E7               	movf	_msCounter^(0+128),f
  4984  00D9  1D03               	skipz
  4985  00DA  0008               	return
  4986  00DB  08EA               	movf	_sentNoteOff^(0+128),f
  4987  00DC  1D03               	skipz
  4988  00DD  0008               	return
  4989  00DE  0865               	movf	_USBTxHandle^(0+128),w
  4990  00DF  1903               	btfsc	3,2
  4991  00E0  28E7               	goto	l2925
  4992  00E1  0865               	movf	_USBTxHandle^(0+128),w
  4993  00E2  27B0  3180         	fcall	PL244	;call to abstracted procedure
  4994  00E4  0020               	movlb	0	; select bank0
  4995  00E5  00EA               	movwf	_APP_DeviceAudioMIDITasks$450
  4996  00E6  28E9               	goto	L14
  4997  00E7                     l2925:	
  4998  00E7  0020               	movlb	0	; select bank0
  4999  00E8  01EA               	clrf	_APP_DeviceAudioMIDITasks$450
  5000  00E9                     L14:	
  5001  00E9  01EB               	clrf	_APP_DeviceAudioMIDITasks$450+1
  5002  00EA  086B               	movf	_APP_DeviceAudioMIDITasks$450+1,w
  5003  00EB  046A               	iorwf	_APP_DeviceAudioMIDITasks$450,w
  5004  00EC  1D03               	skipz
  5005  00ED  0008               	return
  5006                           
  5007                           ;app_device_audio_midi.c: 121: msCounter = 100;
  5008  00EE  3064               	movlw	100
  5009  00EF  0021               	movlb	1	; select bank1
  5010  00F0  00E7               	movwf	_msCounter^(0+128)
  5011                           
  5012                           ;app_device_audio_midi.c: 122: midiData.Val = 0;
  5013  00F1  0023               	movlb	3	; select bank3
  5014                           
  5015                           ;app_device_audio_midi.c: 124: midiData.CableNumber = 0;
  5016                           
  5017                           ;app_device_audio_midi.c: 125: midiData.CodeIndexNumber = 0x9;
  5018                           
  5019                           ;app_device_audio_midi.c: 126: midiData.DATA_0 = 0x90;
  5020  00F2  2781  3180         	fcall	PL224	;call to abstracted procedure
  5021                           
  5022                           ;app_device_audio_midi.c: 127: midiData.DATA_1 = pitch++;
  5023  00F4  0021               	movlb	1	; select bank1
  5024  00F5  0869               	movf	_pitch^(0+128),w
  5025  00F6  0023               	movlb	3	; select bank3
  5026  00F7  00A2               	movwf	34
  5027  00F8  0021               	movlb	1	; select bank1
  5028  00F9  0AE9               	incf	_pitch^(0+128),f
  5029                           
  5030                           ;app_device_audio_midi.c: 128: midiData.DATA_2 = 0x00;
  5031  00FA  0023               	movlb	3	; select bank3
  5032  00FB  01A3               	clrf	35
  5033                           
  5034                           ;app_device_audio_midi.c: 130: if(pitch == 0x49)
  5035  00FC  0021               	movlb	1	; select bank1
  5036  00FD  0869               	movf	_pitch^(0+128),w
  5037  00FE  3A49               	xorlw	73
  5038  00FF  1D03               	skipz
  5039  0100  2903               	goto	l2945
  5040                           
  5041                           ;app_device_audio_midi.c: 131: pitch = 0x3C;
  5042  0101  303C               	movlw	60
  5043  0102  00E9               	movwf	_pitch^(0+128)
  5044  0103                     l2945:	
  5045                           
  5046                           ;app_device_audio_midi.c: 134: sentNoteOff = 1;
  5047  0103  01EA               	clrf	_sentNoteOff^(0+128)
  5048  0104  0AEA               	incf	_sentNoteOff^(0+128),f
  5049                           
  5050                           ;app_device_audio_midi.c: 136: if( USBDeviceState == CONFIGURED_STATE || UCONbits.SUSPND)
  5051  0105  0020               	movlb	0	; select bank0
  5052  0106  0855               	movf	_USBDeviceState,w
  5053  0107  3A20               	xorlw	32
  5054  0108  1903               	skipnz
  5055  0109  290D               	goto	l2949
  5056  010A  003D               	movlb	29	; select bank29
  5057  010B  1C8E               	btfss	14,1	;volatile
  5058  010C  0008               	return
  5059  010D                     l2949:	
  5060                           
  5061                           ;app_device_audio_midi.c: 137: {
  5062                           ;app_device_audio_midi.c: 138: if(!(USBRxHandle==0?0:((volatile BDT_ENTRY*)USBRxHandle)-
      +                          >STAT.UOWN))
  5063  010D  0020               	movlb	0	; select bank0
  5064  010E  0856               	movf	_USBRxHandle,w
  5065  010F  1903               	btfsc	3,2
  5066  0110  2916               	goto	l2953
  5067  0111  0856               	movf	_USBRxHandle,w
  5068  0112  27B0  3180         	fcall	PL244	;call to abstracted procedure
  5069  0114  00EC               	movwf	_APP_DeviceAudioMIDITasks$451
  5070  0115  2917               	goto	L15
  5071  0116                     l2953:	
  5072  0116  01EC               	clrf	_APP_DeviceAudioMIDITasks$451
  5073  0117                     L15:	
  5074  0117  01ED               	clrf	_APP_DeviceAudioMIDITasks$451+1
  5075  0118  086D               	movf	_APP_DeviceAudioMIDITasks$451+1,w
  5076  0119  046C               	iorwf	_APP_DeviceAudioMIDITasks$451,w
  5077  011A  30A0               	movlw	160
  5078  011B  1D03               	skipz
  5079  011C  2924               	goto	L17
  5080                           
  5081                           ;app_device_audio_midi.c: 139: {
  5082                           ;app_device_audio_midi.c: 140: USBRxHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receive
      +                          dDataBuffer,64);
  5083  011D  01F0               	clrf	?_USBTransferOnePacket
  5084  011E  27AB  3180         	fcall	PL242	;call to abstracted procedure
  5085  0120  212A  3180         	fcall	_USBTransferOnePacket
  5086  0122  00D6               	movwf	_USBRxHandle
  5087  0123  30A0               	movlw	160
  5088  0124                     L17:	
  5089                           
  5090                           ;app_device_audio_midi.c: 141: }
  5091                           ;app_device_audio_midi.c: 142: USBTxHandle = USBTransferOnePacket(1,1,(uint8_t*)&midiDat
      +                          a,4);
  5092  0124  2795  3180         	fcall	PL236	;call to abstracted procedure
  5093  0126  212A               	fcall	_USBTransferOnePacket
  5094  0127  0021               	movlb	1	; select bank1
  5095  0128  00E5               	movwf	_USBTxHandle^(0+128)
  5096  0129  0008               	return
  5097  012A                     __end_of_APP_DeviceAudioMIDITasks:	
  5098  012A                     __ptext43:	
  5099 ;; *************** function _USBTransferOnePacket *****************
  5100 ;; Defined at:
  5101 ;;		line 1015 in file "../framework/usb/usb_device.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;  ep              1    wreg     unsigned char 
  5104 ;;  dir             1    0[COMMON] unsigned char 
  5105 ;;  data            2    1[COMMON] PTR unsigned char 
  5106 ;;		 -> midiData(4), ReceivedDataBuffer(64), 
  5107 ;;  len             1    3[COMMON] unsigned char 
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;  ep              1    6[COMMON] unsigned char 
  5110 ;;  handle          1    7[COMMON] PTR volatile struct __BD
  5111 ;;		 -> BDT(32), NULL(0), 
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  1    wreg      PTR void 
  5114 ;; Registers used:
  5115 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5116 ;; Tracked objects:
  5117 ;;		On entry : 1E/1
  5118 ;;		On exit  : 1E/1
  5119 ;;		Unchanged: FFFE1/0
  5120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5121 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5122 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5123 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5124 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5125 ;;Total ram usage:        8 bytes
  5126 ;; Hardware stack levels used:    1
  5127 ;; Hardware stack levels required when called:    1
  5128 ;; This function calls:
  5129 ;;		Nothing
  5130 ;; This function is called by:
  5131 ;;		_APP_DeviceAudioMIDIInitialize
  5132 ;;		_APP_DeviceAudioMIDITasks
  5133 ;; This function uses a non-reentrant model
  5134 ;;
  5135                           
  5136                           
  5137                           ;psect for function _USBTransferOnePacket
  5138  012A                     _USBTransferOnePacket:	
  5139                           
  5140                           ;incstack = 0
  5141                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  5142                           ;USBTransferOnePacket@ep stored from wreg
  5143  012A  00F6               	movwf	USBTransferOnePacket@ep
  5144                           
  5145                           ;usb_device.c: 1016: volatile BDT_ENTRY* handle;
  5146                           ;usb_device.c: 1019: if(dir != 0)
  5147  012B  0870               	movf	USBTransferOnePacket@dir,w
  5148  012C  1903               	btfsc	3,2
  5149  012D  2933               	goto	l3137
  5150                           
  5151                           ;usb_device.c: 1020: {
  5152                           ;usb_device.c: 1022: handle = pBDTEntryIn[ep];
  5153  012E  0876               	movf	USBTransferOnePacket@ep,w
  5154  012F  3E52               	addlw	_pBDTEntryIn& (0+255)
  5155  0130  0086               	movwf	6
  5156  0131  0187               	clrf	7
  5157  0132  2936               	goto	L21
  5158  0133                     l3137:	
  5159                           ;usb_device.c: 1023: }
  5160                           
  5161                           
  5162                           ;usb_device.c: 1024: else
  5163                           ;usb_device.c: 1025: {
  5164                           ;usb_device.c: 1027: handle = pBDTEntryOut[ep];
  5165  0133  0876               	movf	USBTransferOnePacket@ep,w
  5166  0134  27C3  3180         	fcall	PL254	;call to abstracted procedure
  5167  0136                     L21:	
  5168  0136  0801               	movf	1,w
  5169  0137  00F7               	movwf	USBTransferOnePacket@handle
  5170                           
  5171                           ;usb_device.c: 1028: }
  5172                           ;usb_device.c: 1032: if(handle == 0)
  5173  0138  08F7               	movf	USBTransferOnePacket@handle,f
  5174  0139  1903               	btfsc	3,2
  5175                           
  5176                           ;usb_device.c: 1033: {
  5177                           ;usb_device.c: 1034: return 0;
  5178  013A  3400               	retlw	0
  5179                           
  5180                           ;usb_device.c: 1035: }
  5181                           ;usb_device.c: 1048: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  5182  013B  0871               	movf	USBTransferOnePacket@data,w
  5183  013C  00F4               	movwf	??_USBTransferOnePacket
  5184  013D  307F               	movlw	127
  5185  013E  0572               	andwf	USBTransferOnePacket@data+1,w
  5186  013F  00F5               	movwf	??_USBTransferOnePacket+1
  5187  0140  0877               	movf	USBTransferOnePacket@handle,w
  5188  0141  3E02               	addlw	2
  5189  0142  0086               	movwf	6
  5190  0143  0187               	clrf	7
  5191  0144  0874               	movf	??_USBTransferOnePacket,w
  5192  0145  3FC0               	movwi [0]fsr1
  5193  0146  0875               	movf	??_USBTransferOnePacket+1,w
  5194  0147  3FC1               	movwi [1]fsr1
  5195                           
  5196                           ;usb_device.c: 1049: handle->CNT = len;
  5197  0148  0A77               	incf	USBTransferOnePacket@handle,w
  5198  0149  0086               	movwf	6
  5199  014A  0873               	movf	USBTransferOnePacket@len,w
  5200  014B  0081               	movwf	1
  5201                           
  5202                           ;usb_device.c: 1050: handle->STAT.Val &= 0x40;
  5203  014C  0877               	movf	USBTransferOnePacket@handle,w
  5204  014D  0086               	movwf	6
  5205  014E  3040               	movlw	64
  5206  014F  0581               	andwf	1,f
  5207                           
  5208                           ;usb_device.c: 1051: handle->STAT.Val |= (0x08 & 0x08);
  5209  0150  0877               	movf	USBTransferOnePacket@handle,w
  5210  0151  0086               	movwf	6
  5211  0152  1581               	bsf	1,3
  5212                           
  5213                           ;usb_device.c: 1052: handle->STAT.Val |= 0x80;
  5214  0153  0877               	movf	USBTransferOnePacket@handle,w
  5215  0154  0086               	movwf	6
  5216  0155  1781               	bsf	1,7
  5217                           
  5218                           ;usb_device.c: 1055: if(dir != 0)
  5219  0156  0870               	movf	USBTransferOnePacket@dir,w
  5220  0157  1903               	btfsc	3,2
  5221  0158  295D               	goto	l3157
  5222                           
  5223                           ;usb_device.c: 1056: {
  5224                           ;usb_device.c: 1058: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  5225  0159  0876               	movf	USBTransferOnePacket@ep,w
  5226  015A  3E52               	addlw	_pBDTEntryIn& (0+255)
  5227  015B  0086               	movwf	6
  5228  015C  295F               	goto	L23
  5229  015D                     l3157:	
  5230                           ;usb_device.c: 1059: }
  5231                           
  5232                           
  5233                           ;usb_device.c: 1060: else
  5234                           ;usb_device.c: 1061: {
  5235                           ;usb_device.c: 1063: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  5236  015D  0876               	movf	USBTransferOnePacket@ep,w
  5237  015E  27C3               	fcall	PL254	;call to abstracted procedure
  5238  015F                     L23:	
  5239  015F  3004               	movlw	4
  5240  0160  0681               	xorwf	1,f
  5241                           
  5242                           ;usb_device.c: 1064: }
  5243                           ;usb_device.c: 1065: return (void*)handle;
  5244  0161  0877               	movf	USBTransferOnePacket@handle,w
  5245  0162  0008               	return
  5246  0163                     __end_of_USBTransferOnePacket:	
  5247  0163                     __ptext46:	
  5248 ;; *************** function _PIN_MANAGER_Initialize *****************
  5249 ;; Defined at:
  5250 ;;		line 50 in file "../src/pin_manager.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;		None
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;		None
  5255 ;; Return value:  Size  Location     Type
  5256 ;;		None               void
  5257 ;; Registers used:
  5258 ;;		None
  5259 ;; Tracked objects:
  5260 ;;		On entry : 17F/0
  5261 ;;		On exit  : 17F/1
  5262 ;;		Unchanged: FFE80/0
  5263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5268 ;;Total ram usage:        0 bytes
  5269 ;; Hardware stack levels used:    1
  5270 ;; Hardware stack levels required when called:    1
  5271 ;; This function calls:
  5272 ;;		Nothing
  5273 ;; This function is called by:
  5274 ;;		_BLEDeviceInit
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           
  5279                           ;psect for function _PIN_MANAGER_Initialize
  5280  0163                     _PIN_MANAGER_Initialize:	
  5281                           
  5282                           ;incstack = 0
  5283                           ; Regs used in _PIN_MANAGER_Initialize: []
  5284                           ;pin_manager.c: 52: do { TRISBbits.TRISB4 = 1; } while(0);
  5285  0163  0021               	movlb	1	; select bank1
  5286  0164  160D               	bsf	13,4	;volatile
  5287                           
  5288                           ;pin_manager.c: 53: do { TRISBbits.TRISB5 = 1; } while(0);
  5289  0165  168D               	bsf	13,5	;volatile
  5290                           
  5291                           ;pin_manager.c: 54: do { TRISBbits.TRISB6 = 1; } while(0);
  5292  0166  170D               	bsf	13,6	;volatile
  5293                           
  5294                           ;pin_manager.c: 55: do { TRISBbits.TRISB7 = 0; } while(0);
  5295  0167  138D               	bcf	13,7	;volatile
  5296                           
  5297                           ;pin_manager.c: 56: do { TRISCbits.TRISC7 = 0; } while(0);
  5298  0168  138E               	bcf	14,7	;volatile
  5299  0169  0008               	return
  5300  016A                     __end_of_PIN_MANAGER_Initialize:	
  5301  016A                     __ptext29:	
  5302 ;; *************** function _scan_task *****************
  5303 ;; Defined at:
  5304 ;;		line 212 in file "../src/scan.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;  note            1    wreg     PTR unsigned char 
  5307 ;;		 -> APP_DeviceAudioMIDITasks@scan_pitch(1), 
  5308 ;;  velocity        1    1[BANK0 ] PTR unsigned char 
  5309 ;;		 -> APP_DeviceAudioMIDITasks@velocity(1), 
  5310 ;; Auto vars:     Size  Location     Type
  5311 ;;  note            1    6[BANK0 ] PTR unsigned char 
  5312 ;;		 -> APP_DeviceAudioMIDITasks@scan_pitch(1), 
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  1    wreg      unsigned char 
  5315 ;; Registers used:
  5316 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5317 ;; Tracked objects:
  5318 ;;		On entry : 17F/0
  5319 ;;		On exit  : 17C/0
  5320 ;;		Unchanged: FFE80/0
  5321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5322 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5323 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5325 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5326 ;;Total ram usage:        6 bytes
  5327 ;; Hardware stack levels used:    1
  5328 ;; Hardware stack levels required when called:    4
  5329 ;; This function calls:
  5330 ;;		_scan_init
  5331 ;;		_set_timer
  5332 ;;		_waiting_for_timer
  5333 ;;		_set_clock_and_data
  5334 ;;		_get_data
  5335 ;;		_is_end_of_scan
  5336 ;;		_run_adc
  5337 ;;		_is_adc_ready
  5338 ;;		_get_adc
  5339 ;;		_store_key_level
  5340 ;; This function is called by:
  5341 ;;		_APP_DeviceAudioMIDITasks
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345                           
  5346                           ;psect for function _scan_task
  5347  016A                     _scan_task:	
  5348                           
  5349                           ;incstack = 0
  5350                           ; Regs used in _scan_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5351                           ;scan_task@note stored from wreg
  5352  016A  00E7               	movwf	scan_task@note
  5353                           
  5354                           ;scan.c: 213: static uint8_t state = S_INIT;
  5355                           ;scan.c: 215: note_event.pitch = note_event.velocity = 0;
  5356  016B  0022               	movlb	2	; select bank2
  5357  016C  01D2               	clrf	(_note_event^(0+256)+1)
  5358  016D  01D1               	clrf	_note_event^(0+256)
  5359                           
  5360                           ;scan.c: 216: *note = *velocity = 0;
  5361  016E  0020               	movlb	0	; select bank0
  5362  016F  0862               	movf	scan_task@velocity,w
  5363  0170  0086               	movwf	6
  5364  0171  0187               	clrf	7
  5365  0172  0181               	clrf	1
  5366  0173  0867               	movf	scan_task@note,w
  5367  0174  0086               	movwf	6
  5368  0175  0181               	clrf	1
  5369                           
  5370                           ;scan.c: 218: if (!is_initialized)
  5371  0176  0022               	movlb	2	; select bank2
  5372  0177  08D9               	movf	_is_initialized^(0+256),f
  5373  0178  1D03               	skipz
  5374  0179  297C               	goto	i1L__ptext40
  5375                           
  5376                           ;scan.c: 219: scan_init();
  5377  017A  2356  3180         	fcall	_scan_init
  5378  017C                     i1L__ptext40:	
  5379                           ;scan.c: 221: if (waiting_for_timer()) return 0;
  5380                           
  5381                           
  5382                           ;psect for function _waiting_for_timer
  5383  017C                     i1L_waiting_for_timer:	
  5384  017C                     i1Ll3255:	
  5385                           
  5386                           ;scan.c: 65: return (wait_timer = wait_timer && !INTCONbits.TMR0IF);
  5387  017C  01F0               	clrf	_waiting_for_timer$809
  5388  017D                     i1Ll3257:	
  5389  017D  0021               	movlb	1	; select bank1
  5390  017E  086C               	movf	_wait_timer^(0+128),w
  5391  017F  1D03               	btfss	3,2
  5392  0180  2982               	ljmp	i1Ll3259
  5393  0181  298B               	ljmp	i1Ll3263
  5394  0182                     i1Lu2140:	
  5395  0182                     i1Ll3259:	
  5396  0182  3180  190B         	btfsc	11,2	;volatile
  5397  0184  280C  3180         	ljmp	l3263
  5398  0186  2989               	ljmp	i1Ll3261
  5399  0187                     i1Lu2151:	
  5400  0187  3180  280C         	ljmp	l3263
  5401  0189                     i1Lu2150:	
  5402  0189                     i1Ll3261:	
  5403  0189  01F0               	clrf	_waiting_for_timer$809
  5404  018A  0AF0               	incf	_waiting_for_timer$809,f
  5405  018B                     i1Ll3263:	
  5406  018B  0870               	movf	_waiting_for_timer$809,w
  5407  018C  00EC               	movwf	_wait_timer^(0+128)
  5408  018D                     i1Ll210:	
  5409  018D  3A00               	xorlw	0
  5410  018E  1D03               	btfss	3,2
  5411  018F  3400               	retlw	0
  5412  0190  2B39               	goto	l3211
  5413  0191                     l3177:	
  5414  0191  3000               	movlw	0
  5415                           
  5416                           ;scan.c: 225: set_clock_and_data(0,1);
  5417  0192  01F0               	clrf	?_set_clock_and_data
  5418  0193  0AF0               	incf	?_set_clock_and_data,f
  5419  0194                     i2L__ptext39:	
  5420                           
  5421                           ;psect for function _set_clock_and_data
  5422  0194                     i2L_set_clock_and_data:	
  5423                           
  5424                           ;incstack = 0
  5425                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  5426                           ;set_clock_and_data@c stored from wreg
  5427  0194  00F2               	movwf	set_clock_and_data@c
  5428  0195                     i2Ll3267:	
  5429                           
  5430                           ;scan.c: 69: LATCbits.LATC4 = !!c;
  5431  0195  3000               	movlw	0
  5432  0196  08F2               	movf	set_clock_and_data@c,f
  5433  0197  1D03               	btfss	3,2
  5434  0198  3001               	movlw	1
  5435  0199  00F1               	movwf	??_set_clock_and_data
  5436  019A  0EF1               	swapf	??_set_clock_and_data,f
  5437  019B  0022               	movlb	2	; select bank2
  5438  019C  080E               	movf	14,w	;volatile
  5439  019D  0671               	xorwf	??_set_clock_and_data,w
  5440  019E  39EF               	andlw	-17
  5441  019F  0671               	xorwf	??_set_clock_and_data,w
  5442  01A0  008E               	movwf	14	;volatile
  5443                           
  5444                           ;scan.c: 70: LATCbits.LATC5 = !!d;
  5445  01A1  3000               	movlw	0
  5446  01A2  08F0               	movf	set_clock_and_data@d,f
  5447  01A3  1D03               	btfss	3,2
  5448  01A4  3001               	movlw	1
  5449  01A5  00F1               	movwf	??_set_clock_and_data
  5450  01A6  0EF1               	swapf	??_set_clock_and_data,f
  5451  01A7  0DF1               	rlf	??_set_clock_and_data,f
  5452  01A8  080E               	movf	14,w	;volatile
  5453  01A9  0671               	xorwf	??_set_clock_and_data,w
  5454  01AA  39DF               	andlw	-33
  5455  01AB  0671               	xorwf	??_set_clock_and_data,w
  5456  01AC  008E               	movwf	14	;volatile
  5457  01AD                     i2Ll213:	
  5458                           
  5459                           ;scan.c: 226: state = S_GO;
  5460  01AD  01DA               	clrf	scan_task@state^(0+256)
  5461  01AE  0ADA               	incf	scan_task@state^(0+256),f
  5462  01AF                     i3L__ptext41:	
  5463                           ;scan.c: 227: set_timer();
  5464                           
  5465                           
  5466                           ;psect for function _set_timer
  5467  01AF                     i3L_set_timer:	
  5468  01AF                     i3Ll3251:	
  5469                           
  5470                           ;scan.c: 56: wait_timer = 1;
  5471  01AF  0021               	movlb	1	; select bank1
  5472  01B0  01EC               	clrf	_wait_timer^(0+128)
  5473  01B1  0AEC               	incf	_wait_timer^(0+128),f
  5474                           
  5475                           ;scan.c: 57: OPTION_REGbits.TMR0CS = 0;
  5476  01B2  1295               	bcf	21,5	;volatile
  5477                           
  5478                           ;scan.c: 58: OPTION_REGbits.PSA = 1;
  5479  01B3  1595               	bsf	21,3	;volatile
  5480                           
  5481                           ;scan.c: 59: INTCONbits.TMR0IE = 0;
  5482  01B4  128B               	bcf	11,5	;volatile
  5483                           
  5484                           ;scan.c: 60: INTCONbits.TMR0IF = 0;
  5485  01B5  110B               	bcf	11,2	;volatile
  5486  01B6                     i3Ll3253:	
  5487                           
  5488                           ;scan.c: 61: TMR0 = 0;
  5489  01B6  0020               	movlb	0	; select bank0
  5490  01B7  0195               	clrf	21	;volatile
  5491  01B8                     i3Ll205:	
  5492                           
  5493                           ;scan.c: 228: break;
  5494  01B8  2B44               	goto	l3213
  5495  01B9                     l3183:	
  5496  01B9  3000               	movlw	0
  5497                           
  5498                           ;scan.c: 231: set_clock_and_data(0,1);
  5499  01BA  01F0               	clrf	?_set_clock_and_data
  5500  01BB  0AF0               	incf	?_set_clock_and_data,f
  5501  01BC                     i4L__ptext39:	
  5502                           
  5503                           ;psect for function _set_clock_and_data
  5504  01BC                     i4L_set_clock_and_data:	
  5505                           
  5506                           ;incstack = 0
  5507                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  5508                           ;set_clock_and_data@c stored from wreg
  5509  01BC  00F2               	movwf	set_clock_and_data@c
  5510  01BD                     i4Ll3267:	
  5511                           
  5512                           ;scan.c: 69: LATCbits.LATC4 = !!c;
  5513  01BD  3000               	movlw	0
  5514  01BE  08F2               	movf	set_clock_and_data@c,f
  5515  01BF  1D03               	btfss	3,2
  5516  01C0  3001               	movlw	1
  5517  01C1  00F1               	movwf	??_set_clock_and_data
  5518  01C2  0EF1               	swapf	??_set_clock_and_data,f
  5519  01C3  0022               	movlb	2	; select bank2
  5520  01C4  080E               	movf	14,w	;volatile
  5521  01C5  0671               	xorwf	??_set_clock_and_data,w
  5522  01C6  39EF               	andlw	-17
  5523  01C7  0671               	xorwf	??_set_clock_and_data,w
  5524  01C8  008E               	movwf	14	;volatile
  5525                           
  5526                           ;scan.c: 70: LATCbits.LATC5 = !!d;
  5527  01C9  3000               	movlw	0
  5528  01CA  08F0               	movf	set_clock_and_data@d,f
  5529  01CB  1D03               	btfss	3,2
  5530  01CC  3001               	movlw	1
  5531  01CD  00F1               	movwf	??_set_clock_and_data
  5532  01CE  0EF1               	swapf	??_set_clock_and_data,f
  5533  01CF  0DF1               	rlf	??_set_clock_and_data,f
  5534  01D0  080E               	movf	14,w	;volatile
  5535  01D1  0671               	xorwf	??_set_clock_and_data,w
  5536  01D2  39DF               	andlw	-33
  5537  01D3  0671               	xorwf	??_set_clock_and_data,w
  5538  01D4  008E               	movwf	14	;volatile
  5539  01D5                     i4Ll213:	
  5540                           
  5541                           ;scan.c: 232: state = S_CLOCK_RAISE;
  5542  01D5  3002               	movlw	2
  5543  01D6  00DA               	movwf	scan_task@state^(0+256)
  5544  01D7                     i5L__ptext41:	
  5545                           ;scan.c: 233: set_timer();
  5546                           
  5547                           
  5548                           ;psect for function _set_timer
  5549  01D7                     i5L_set_timer:	
  5550  01D7                     i5Ll3251:	
  5551                           
  5552                           ;scan.c: 56: wait_timer = 1;
  5553  01D7  0021               	movlb	1	; select bank1
  5554  01D8  01EC               	clrf	_wait_timer^(0+128)
  5555  01D9  0AEC               	incf	_wait_timer^(0+128),f
  5556                           
  5557                           ;scan.c: 57: OPTION_REGbits.TMR0CS = 0;
  5558  01DA  1295               	bcf	21,5	;volatile
  5559                           
  5560                           ;scan.c: 58: OPTION_REGbits.PSA = 1;
  5561  01DB  1595               	bsf	21,3	;volatile
  5562                           
  5563                           ;scan.c: 59: INTCONbits.TMR0IE = 0;
  5564  01DC  128B               	bcf	11,5	;volatile
  5565                           
  5566                           ;scan.c: 60: INTCONbits.TMR0IF = 0;
  5567  01DD  110B               	bcf	11,2	;volatile
  5568  01DE                     i5Ll3253:	
  5569                           
  5570                           ;scan.c: 61: TMR0 = 0;
  5571  01DE  0020               	movlb	0	; select bank0
  5572  01DF  0195               	clrf	21	;volatile
  5573  01E0                     i5Ll205:	
  5574                           
  5575                           ;scan.c: 234: break;
  5576  01E0  2B44               	goto	l3213
  5577  01E1                     l3187:	
  5578  01E1                     i6L__ptext38:	
  5579                           ;scan.c: 237: set_clock_and_data(1, get_data());
  5580                           
  5581                           
  5582                           ;psect for function _get_data
  5583  01E1                     i6L_get_data:	
  5584  01E1                     i6Ll3269:	
  5585                           
  5586                           ;scan.c: 74: return LATCbits.LATC5;
  5587  01E1  0022               	movlb	2	; select bank2
  5588  01E2  0E0E               	swapf	14,w	;volatile
  5589  01E3  0C89               	rrf	9,f
  5590  01E4  3901               	andlw	1
  5591  01E5                     i6Ll216:	
  5592  01E5  00F0               	movwf	?_set_clock_and_data
  5593  01E6  3001               	movlw	1
  5594  01E7                     i7L__ptext39:	
  5595                           
  5596                           ;psect for function _set_clock_and_data
  5597  01E7                     i7L_set_clock_and_data:	
  5598                           
  5599                           ;incstack = 0
  5600                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  5601                           ;set_clock_and_data@c stored from wreg
  5602  01E7  00F2               	movwf	set_clock_and_data@c
  5603  01E8                     i7Ll3267:	
  5604                           
  5605                           ;scan.c: 69: LATCbits.LATC4 = !!c;
  5606  01E8  3000               	movlw	0
  5607  01E9  08F2               	movf	set_clock_and_data@c,f
  5608  01EA  1D03               	btfss	3,2
  5609  01EB  3001               	movlw	1
  5610  01EC  00F1               	movwf	??_set_clock_and_data
  5611  01ED  0EF1               	swapf	??_set_clock_and_data,f
  5612  01EE  0022               	movlb	2	; select bank2
  5613  01EF  080E               	movf	14,w	;volatile
  5614  01F0  0671               	xorwf	??_set_clock_and_data,w
  5615  01F1  39EF               	andlw	-17
  5616  01F2  0671               	xorwf	??_set_clock_and_data,w
  5617  01F3  008E               	movwf	14	;volatile
  5618                           
  5619                           ;scan.c: 70: LATCbits.LATC5 = !!d;
  5620  01F4  3000               	movlw	0
  5621  01F5  08F0               	movf	set_clock_and_data@d,f
  5622  01F6  1D03               	btfss	3,2
  5623  01F7  3001               	movlw	1
  5624  01F8  00F1               	movwf	??_set_clock_and_data
  5625  01F9  0EF1               	swapf	??_set_clock_and_data,f
  5626  01FA  0DF1               	rlf	??_set_clock_and_data,f
  5627  01FB  080E               	movf	14,w	;volatile
  5628  01FC  0671               	xorwf	??_set_clock_and_data,w
  5629  01FD  39DF               	andlw	-33
  5630  01FE  0671               	xorwf	??_set_clock_and_data,w
  5631  01FF  008E               	movwf	14	;volatile
  5632  0200                     i7Ll213:	
  5633                           
  5634                           ;scan.c: 238: state = S_CLOCK_FALL;
  5635  0200  3003               	movlw	3
  5636  0201  00DA               	movwf	scan_task@state^(0+256)
  5637  0202                     i8L__ptext41:	
  5638                           ;scan.c: 239: set_timer();
  5639                           
  5640                           
  5641                           ;psect for function _set_timer
  5642  0202                     i8L_set_timer:	
  5643  0202                     i8Ll3251:	
  5644                           
  5645                           ;scan.c: 56: wait_timer = 1;
  5646  0202  0021               	movlb	1	; select bank1
  5647  0203  01EC               	clrf	_wait_timer^(0+128)
  5648  0204  0AEC               	incf	_wait_timer^(0+128),f
  5649                           
  5650                           ;scan.c: 57: OPTION_REGbits.TMR0CS = 0;
  5651  0205  1295               	bcf	21,5	;volatile
  5652                           
  5653                           ;scan.c: 58: OPTION_REGbits.PSA = 1;
  5654  0206  1595               	bsf	21,3	;volatile
  5655                           
  5656                           ;scan.c: 59: INTCONbits.TMR0IE = 0;
  5657  0207  128B               	bcf	11,5	;volatile
  5658                           
  5659                           ;scan.c: 60: INTCONbits.TMR0IF = 0;
  5660  0208  110B               	bcf	11,2	;volatile
  5661  0209                     i8Ll3253:	
  5662                           
  5663                           ;scan.c: 61: TMR0 = 0;
  5664  0209  0020               	movlb	0	; select bank0
  5665  020A  0195               	clrf	21	;volatile
  5666  020B                     i8Ll205:	
  5667                           
  5668                           ;scan.c: 240: break;
  5669  020B  2B44               	goto	l3213
  5670  020C                     l3191:	
  5671  020C  3000               	movlw	0
  5672                           
  5673                           ;scan.c: 243: set_clock_and_data(0,0);
  5674  020D  01F0               	clrf	?_set_clock_and_data
  5675  020E                     i9L__ptext39:	
  5676                           
  5677                           ;psect for function _set_clock_and_data
  5678  020E                     i9L_set_clock_and_data:	
  5679                           
  5680                           ;incstack = 0
  5681                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  5682                           ;set_clock_and_data@c stored from wreg
  5683  020E  00F2               	movwf	set_clock_and_data@c
  5684  020F                     i9Ll3267:	
  5685                           
  5686                           ;scan.c: 69: LATCbits.LATC4 = !!c;
  5687  020F  3000               	movlw	0
  5688  0210  08F2               	movf	set_clock_and_data@c,f
  5689  0211  1D03               	btfss	3,2
  5690  0212  3001               	movlw	1
  5691  0213  00F1               	movwf	??_set_clock_and_data
  5692  0214  0EF1               	swapf	??_set_clock_and_data,f
  5693  0215  0022               	movlb	2	; select bank2
  5694  0216  080E               	movf	14,w	;volatile
  5695  0217  0671               	xorwf	??_set_clock_and_data,w
  5696  0218  39EF               	andlw	-17
  5697  0219  0671               	xorwf	??_set_clock_and_data,w
  5698  021A  008E               	movwf	14	;volatile
  5699                           
  5700                           ;scan.c: 70: LATCbits.LATC5 = !!d;
  5701  021B  3000               	movlw	0
  5702  021C  08F0               	movf	set_clock_and_data@d,f
  5703  021D  1D03               	btfss	3,2
  5704  021E  3001               	movlw	1
  5705  021F  00F1               	movwf	??_set_clock_and_data
  5706  0220  0EF1               	swapf	??_set_clock_and_data,f
  5707  0221  0DF1               	rlf	??_set_clock_and_data,f
  5708  0222  080E               	movf	14,w	;volatile
  5709  0223  0671               	xorwf	??_set_clock_and_data,w
  5710  0224  39DF               	andlw	-33
  5711  0225  0671               	xorwf	??_set_clock_and_data,w
  5712  0226  008E               	movwf	14	;volatile
  5713  0227                     i9Ll213:	
  5714  0227                     i10L__ptext36:	
  5715                           ;scan.c: 244: run_adc();
  5716                           
  5717                           
  5718                           ;psect for function _run_adc
  5719  0227                     i10L_run_adc:	
  5720  0227                     i10Ll3283:	
  5721                           
  5722                           ;scan.c: 86: ADCON0bits.CHS = 7;
  5723  0227  0021               	movlb	1	; select bank1
  5724  0228  081D               	movf	29,w	;volatile
  5725  0229  3983               	andlw	-125
  5726  022A  381C               	iorlw	28
  5727  022B  009D               	movwf	29	;volatile
  5728  022C                     i10Ll3285:	
  5729                           
  5730                           ;scan.c: 87: ADCON0bits.GO = 1;
  5731  022C  149D               	bsf	29,1	;volatile
  5732  022D                     i10Ll225:	
  5733                           
  5734                           ;scan.c: 245: state = S_ADC_WAIT;
  5735  022D  3004               	movlw	4
  5736  022E  0022               	movlb	2	; select bank2
  5737  022F  00DA               	movwf	scan_task@state^(0+256)
  5738  0230                     i11L__ptext41:	
  5739                           ;scan.c: 246: set_timer();
  5740                           
  5741                           
  5742                           ;psect for function _set_timer
  5743  0230                     i11L_set_timer:	
  5744  0230                     i11Ll3251:	
  5745                           
  5746                           ;scan.c: 56: wait_timer = 1;
  5747  0230  0021               	movlb	1	; select bank1
  5748  0231  01EC               	clrf	_wait_timer^(0+128)
  5749  0232  0AEC               	incf	_wait_timer^(0+128),f
  5750                           
  5751                           ;scan.c: 57: OPTION_REGbits.TMR0CS = 0;
  5752  0233  1295               	bcf	21,5	;volatile
  5753                           
  5754                           ;scan.c: 58: OPTION_REGbits.PSA = 1;
  5755  0234  1595               	bsf	21,3	;volatile
  5756                           
  5757                           ;scan.c: 59: INTCONbits.TMR0IE = 0;
  5758  0235  128B               	bcf	11,5	;volatile
  5759                           
  5760                           ;scan.c: 60: INTCONbits.TMR0IF = 0;
  5761  0236  110B               	bcf	11,2	;volatile
  5762  0237                     i11Ll3253:	
  5763                           
  5764                           ;scan.c: 61: TMR0 = 0;
  5765  0237  0020               	movlb	0	; select bank0
  5766  0238  0195               	clrf	21	;volatile
  5767  0239                     i11Ll205:	
  5768                           
  5769                           ;scan.c: 247: break;
  5770  0239  2B44               	goto	l3213
  5771  023A                     l3195:	
  5772  023A                     i12L__ptext35:	
  5773                           ;scan.c: 250: state = (is_adc_ready()? S_ADC_READ : S_ADC_WAIT);
  5774                           
  5775                           
  5776                           ;psect for function _is_adc_ready
  5777  023A                     i12L_is_adc_ready:	
  5778  023A                     i12Ll3287:	
  5779                           
  5780                           ;scan.c: 91: return !ADCON0bits.GO_nDONE;
  5781  023A  3000               	movlw	0
  5782  023B  0021               	movlb	1	; select bank1
  5783  023C  1C9D               	btfss	29,1	;volatile
  5784  023D  3001               	movlw	1
  5785  023E  3800               	iorlw	0
  5786  023F  1D03               	skipz
  5787  0240  2A43               	goto	l3199
  5788  0241  3004               	movlw	4
  5789  0242  2A44               	goto	L18
  5790  0243                     l3199:	
  5791  0243  3005               	movlw	5
  5792  0244                     L18:	
  5793  0244  0020               	movlb	0	; select bank0
  5794  0245  00E3               	movwf	_scan_task$857
  5795  0246  01E4               	clrf	_scan_task$857+1
  5796  0247  2B36               	goto	L19
  5797  0248                     l3201:	
  5798                           ;scan.c: 251: break;
  5799                           
  5800  0248                     i13L__ptext37:	
  5801                           ;scan.c: 254: state = (store_key_level(get_adc(), is_end_of_scan())? S_GO : S_CLOCK_RAIS
      +                          E);
  5802                           
  5803                           
  5804                           ;psect for function _is_end_of_scan
  5805  0248                     i13L_is_end_of_scan:	
  5806  0248                     i13Ll3273:	
  5807                           
  5808                           ;scan.c: 79: static uint8_t scan_counter = 0;
  5809                           ;scan.c: 80: bool res = (++scan_counter) >= N_KEYS;
  5810  0248  3027               	movlw	39
  5811  0249  0021               	movlb	1	; select bank1
  5812  024A  0AED               	incf	is_end_of_scan@scan_counter^(0+128),f
  5813  024B  026D               	subwf	is_end_of_scan@scan_counter^(0+128),w
  5814  024C  3000               	movlw	0
  5815  024D  1803               	btfsc	3,0
  5816  024E  3001               	movlw	1
  5817  024F  00F0               	movwf	is_end_of_scan@res
  5818  0250                     i13Ll3275:	
  5819                           
  5820                           ;scan.c: 81: if (scan_counter >= N_KEYS) scan_counter = 0;
  5821  0250  3027               	movlw	39
  5822  0251  026D               	subwf	is_end_of_scan@scan_counter^(0+128),w
  5823  0252  1C03               	btfss	3,0
  5824  0253  2A57               	ljmp	i13Ll3279
  5825  0254  2A56               	ljmp	i13Ll3277
  5826  0255                     i13Lu2161:	
  5827  0255  2A57               	ljmp	i13Ll3279
  5828  0256                     i13Lu2160:	
  5829  0256                     i13Ll3277:	
  5830  0256  01ED               	clrf	is_end_of_scan@scan_counter^(0+128)
  5831  0257                     i13Ll3279:	
  5832                           
  5833                           ;scan.c: 82: return res;
  5834  0257  0870               	movf	is_end_of_scan@res,w
  5835  0258                     i13Ll222:	
  5836  0258  00FD               	movwf	?_store_key_level
  5837  0259                     i14L__ptext34:	
  5838                           
  5839                           ;psect for function _get_adc
  5840  0259                     i14L_get_adc:	
  5841  0259                     i14Ll3291:	
  5842                           
  5843                           ;scan.c: 95: return ADRESH;
  5844  0259  081C               	movf	28,w	;volatile
  5845  025A                     i14Ll231:	
  5846  025A                     i15L__ptext30:	
  5847                           
  5848                           ;psect for function _store_key_level
  5849  025A                     i15L_store_key_level:	
  5850                           
  5851                           ;incstack = 0
  5852                           ; Regs used in _store_key_level: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5853                           ;store_key_level@level stored from wreg
  5854  025A  0020               	movlb	0	; select bank0
  5855  025B  00E1               	movwf	store_key_level@level
  5856  025C                     i15Ll3343:	
  5857                           
  5858                           ;scan.c: 195: static uint8_t idx_key = 0;
  5859                           ;scan.c: 196: process_level(idx_key, adc_levels[idx_key], level);
  5860  025C  085A               	movf	store_key_level@idx_key,w
  5861  025D  3E20               	addlw	_adc_levels& (0+255)
  5862  025E  0086               	movwf	6
  5863  025F  3002               	movlw	2	; select bank4/5
  5864  0260  0087               	movwf	7
  5865  0261  0801               	movf	1,w
  5866  0262  00F1               	movwf	?_process_level
  5867  0263  0861               	movf	store_key_level@level,w
  5868  0264  00F2               	movwf	?_process_level+1
  5869  0265  085A               	movf	store_key_level@idx_key,w
  5870  0266                     i16L__ptext31:	
  5871                           
  5872                           ;psect for function _process_level
  5873  0266                     i16L_process_level:	
  5874                           
  5875                           ;incstack = 0
  5876                           ; Regs used in _process_level: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5877                           ;process_level@idx_key stored from wreg
  5878  0266  00FC               	movwf	process_level@idx_key
  5879  0267                     i16Ll3295:	
  5880                           
  5881                           ;scan.c: 163: int current_state = (new_level > L);
  5882  0267  300B               	movlw	11
  5883  0268  0272               	subwf	process_level@new_level,w
  5884  0269  3000               	movlw	0
  5885  026A  1803               	btfsc	3,0
  5886  026B  3001               	movlw	1
  5887  026C  00F4               	movwf	process_level@current_state
  5888  026D  01F5               	clrf	process_level@current_state+1
  5889  026E                     i16Ll3297:	
  5890                           
  5891                           ;scan.c: 165: note_event.pitch = 0;
  5892  026E  0022               	movlb	2	; select bank2
  5893  026F  01D1               	clrf	_note_event^(0+256)
  5894  0270                     i16Ll3299:	
  5895                           
  5896                           ;scan.c: 166: note_event.velocity = 0;
  5897  0270  01D2               	clrf	(_note_event^(0+256)+1)
  5898                           
  5899                           ;scan.c: 168: if (current_state) {
  5900  0271  0875               	movf	process_level@current_state+1,w
  5901  0272  0474               	iorwf	process_level@current_state,w
  5902  0273  1903               	btfsc	3,2
  5903  0274  2A84               	ljmp	i16Ll3303
  5904  0275  2A77               	ljmp	i16Ll3301
  5905  0276                     i16Lu2171:	
  5906  0276  2A84               	ljmp	i16Ll3303
  5907  0277                     i16Lu2170:	
  5908  0277                     i16Ll3301:	
  5909                           
  5910                           ;scan.c: 169: key_off_counter[idx_key] = 0;
  5911  0277  087C               	movf	process_level@idx_key,w
  5912  0278  3EA4               	addlw	process_level@key_off_counter& (0+255)
  5913  0279  0086               	movwf	6
  5914  027A  3001               	movlw	1	; select bank3/4
  5915  027B  0087               	movwf	7
  5916  027C  0181               	clrf	1
  5917                           
  5918                           ;scan.c: 170: key_on_counter [idx_key] ++;
  5919  027D  087C               	movf	process_level@idx_key,w
  5920  027E  3E47               	addlw	process_level@key_on_counter& (0+255)
  5921  027F  0086               	movwf	6
  5922  0280  3002               	movlw	2	; select bank4/5
  5923  0281  0087               	movwf	7
  5924  0282  0A81               	incf	1,f
  5925  0283  2A90               	ljmp	i16Ll251
  5926  0284                     i16Ll3303:	
  5927                           
  5928                           ;scan.c: 172: else {
  5929                           ;scan.c: 173: key_on_counter[idx_key] = 0;
  5930  0284  087C               	movf	process_level@idx_key,w
  5931  0285  3E47               	addlw	process_level@key_on_counter& (0+255)
  5932  0286  0086               	movwf	6
  5933  0287  3002               	movlw	2	; select bank4/5
  5934  0288  0087               	movwf	7
  5935  0289  0181               	clrf	1
  5936                           
  5937                           ;scan.c: 174: key_off_counter [idx_key] ++;
  5938  028A  087C               	movf	process_level@idx_key,w
  5939  028B  3EA4               	addlw	process_level@key_off_counter& (0+255)
  5940  028C  0086               	movwf	6
  5941  028D  3001               	movlw	1	; select bank3/4
  5942  028E  0087               	movwf	7
  5943  028F  0A81               	incf	1,f
  5944  0290                     i16Ll251:	
  5945                           
  5946                           ;scan.c: 175: }
  5947                           ;scan.c: 177: {
  5948                           ;scan.c: 178: bool
  5949                           ;scan.c: 179: on_flag = key_on_counter [idx_key] >= key_on_threshold,
  5950  0290  087C               	movf	process_level@idx_key,w
  5951  0291  3E47               	addlw	process_level@key_on_counter& (0+255)
  5952  0292  0086               	movwf	6
  5953  0293  3002               	movlw	2	; select bank4/5
  5954  0294  0087               	movwf	7
  5955  0295  3007               	movlw	7
  5956  0296  0201               	subwf	1,w
  5957  0297  3000               	movlw	0
  5958  0298  1803               	btfsc	3,0
  5959  0299  3001               	movlw	1
  5960  029A  00FA               	movwf	process_level@on_flag
  5961                           
  5962                           ;scan.c: 180: off_flag = key_off_counter[idx_key] >= key_off_threshold,
  5963  029B  087C               	movf	process_level@idx_key,w
  5964  029C  3EA4               	addlw	process_level@key_off_counter& (0+255)
  5965  029D  0086               	movwf	6
  5966  029E  3001               	movlw	1	; select bank3/4
  5967  029F  0087               	movwf	7
  5968  02A0  3005               	movlw	5
  5969  02A1  0201               	subwf	1,w
  5970  02A2  3000               	movlw	0
  5971  02A3  1803               	btfsc	3,0
  5972  02A4  3001               	movlw	1
  5973  02A5  00F6               	movwf	process_level@off_flag
  5974  02A6                     i16Ll3305:	
  5975                           
  5976                           ;scan.c: 181: filtered_state = on_flag || !on_flag && !off_flag && key_states[idx_key];
  5977  02A6  01F7               	clrf	_process_level$846
  5978  02A7  0AF7               	incf	_process_level$846,f
  5979  02A8                     i16Ll3307:	
  5980  02A8  08FA               	movf	process_level@on_flag,f
  5981  02A9  1D03               	btfss	3,2
  5982  02AA  2AC8               	ljmp	i16Ll3317
  5983  02AB  2AAD               	ljmp	i16Ll3309
  5984  02AC                     i16Lu2181:	
  5985  02AC  2AC8               	ljmp	i16Ll3317
  5986  02AD                     i16Lu2180:	
  5987  02AD                     i16Ll3309:	
  5988  02AD  08FA               	movf	process_level@on_flag,f
  5989  02AE  1D03               	btfss	3,2
  5990  02AF  2AC7               	ljmp	i16Ll3315
  5991  02B0  2AB2               	ljmp	i16Ll3311
  5992  02B1                     i16Lu2191:	
  5993  02B1  2AC7               	ljmp	i16Ll3315
  5994  02B2                     i16Lu2190:	
  5995  02B2                     i16Ll3311:	
  5996  02B2  08F6               	movf	process_level@off_flag,f
  5997  02B3  3180  1D03         	btfss	3,2
  5998  02B5  285B  3180         	ljmp	l3315
  5999  02B7  2ABA               	ljmp	i16Ll3313
  6000  02B8                     i16Lu2201:	
  6001  02B8  3180  285B         	ljmp	l3315
  6002  02BA                     i16Lu2200:	
  6003  02BA                     i16Ll3313:	
  6004  02BA  087C               	movf	process_level@idx_key,w
  6005  02BB  3E20               	addlw	process_level@key_states& (0+255)
  6006  02BC  0086               	movwf	6
  6007  02BD  3001               	movlw	1	; select bank2/3
  6008  02BE  0087               	movwf	7
  6009  02BF  0881               	movf	1,f
  6010  02C0  3180  1D03         	btfss	3,2
  6011  02C2  285C  3180         	ljmp	l3317
  6012  02C4  2AC7               	ljmp	i16Ll3315
  6013  02C5                     i16Lu2211:	
  6014  02C5  3180  285C         	ljmp	l3317
  6015  02C7                     i16Lu2210:	
  6016  02C7                     i16Ll3315:	
  6017  02C7  01F7               	clrf	_process_level$846
  6018  02C8                     i16Ll3317:	
  6019  02C8  0877               	movf	_process_level$846,w
  6020  02C9  00FB               	movwf	process_level@filtered_state
  6021  02CA                     i16Ll3319:	
  6022                           
  6023                           ;scan.c: 183: if (!key_states[idx_key] != !filtered_state) {
  6024  02CA  087B               	movf	process_level@filtered_state,w
  6025  02CB  3A00               	xorlw	0
  6026  02CC  1903               	btfsc	3,2
  6027  02CD  2ACF               	ljmp	i16Lu2221
  6028  02CE  2AD1               	ljmp	i16Lu2220
  6029  02CF                     i16Lu2221:	
  6030  02CF  3001               	movlw	1
  6031  02D0  2AD2               	ljmp	i16Lu2222
  6032  02D1                     i16Lu2220:	
  6033  02D1  3000               	movlw	0
  6034  02D2                     i16Lu2222:	
  6035  02D2  00F3               	movwf	??_process_level
  6036  02D3  087C               	movf	process_level@idx_key,w
  6037  02D4  3E20               	addlw	process_level@key_states& (0+255)
  6038  02D5  0086               	movwf	6
  6039  02D6  3001               	movlw	1	; select bank2/3
  6040  02D7  0087               	movwf	7
  6041  02D8  0801               	movf	1,w
  6042  02D9  3A00               	xorlw	0
  6043  02DA  1903               	btfsc	3,2
  6044  02DB  2ADD               	ljmp	i16Lu2231
  6045  02DC  2ADF               	ljmp	i16Lu2230
  6046  02DD                     i16Lu2231:	
  6047  02DD  3001               	movlw	1
  6048  02DE  2AE0               	ljmp	i16Lu2232
  6049  02DF                     i16Lu2230:	
  6050  02DF  3000               	movlw	0
  6051  02E0                     i16Lu2232:	
  6052  02E0  0673               	xorwf	??_process_level,w
  6053  02E1  1903               	btfsc	3,2
  6054  02E2  2B0C               	ljmp	i16Ll3341
  6055  02E3  2AE5               	ljmp	i16Ll3321
  6056  02E4                     i16Lu2241:	
  6057  02E4  2B0C               	ljmp	i16Ll3341
  6058  02E5                     i16Lu2240:	
  6059  02E5                     i16Ll3321:	
  6060                           
  6061                           ;scan.c: 184: note_event.pitch = midi_shift + idx_midi_map[idx_key];
  6062  02E5  087C               	movf	process_level@idx_key,w
  6063  02E6  3E01               	addlw	low (process_level@idx_midi_map| (0+32768))
  6064  02E7  0084               	movwf	4
  6065  02E8  3090               	movlw	high (process_level@idx_midi_map| (0+32768))
  6066  02E9  1803               	btfsc	3,0
  6067  02EA  3E01               	addlw	1
  6068  02EB  0085               	movwf	5
  6069  02EC  0800               	movf	0,w	;code access
  6070  02ED  00D1               	movwf	_note_event^(0+256)
  6071  02EE                     i16Ll3323:	
  6072                           
  6073                           ;scan.c: 185: note_event.velocity = (filtered_state? (new_level * 2 + 5): 0);
  6074  02EE  08FB               	movf	process_level@filtered_state,f
  6075  02EF  1D03               	btfss	3,2
  6076  02F0  2AF6               	ljmp	i16Ll3327
  6077  02F1  2AF3               	ljmp	i16Ll3325
  6078  02F2                     i16Lu2251:	
  6079  02F2  2AF6               	ljmp	i16Ll3327
  6080  02F3                     i16Lu2250:	
  6081  02F3                     i16Ll3325:	
  6082  02F3  01F8               	clrf	_process_level$847
  6083  02F4  01F9               	clrf	_process_level$847+1
  6084  02F5  2AFF               	ljmp	i16Ll3333
  6085  02F6                     i16Ll3327:	
  6086  02F6  0872               	movf	process_level@new_level,w
  6087  02F7  00F8               	movwf	_process_level$847
  6088  02F8  01F9               	clrf	_process_level$847+1
  6089  02F9                     i16Ll3329:	
  6090  02F9  35F8               	lslf	_process_level$847,f
  6091  02FA  0DF9               	rlf	_process_level$847+1,f
  6092  02FB                     i16Ll3331:	
  6093  02FB  3005               	movlw	5
  6094  02FC  07F8               	addwf	_process_level$847,f
  6095  02FD  1803               	btfsc	3,0
  6096  02FE  0AF9               	incf	_process_level$847+1,f
  6097  02FF                     i16Ll3333:	
  6098  02FF  0878               	movf	_process_level$847,w
  6099  0300  00D2               	movwf	(_note_event^(0+256)+1)
  6100  0301                     i16Ll3335:	
  6101                           
  6102                           ;scan.c: 186: if (filtered_state) LED_On(LED_D1);
  6103  0301  087B               	movf	process_level@filtered_state,w
  6104  0302  1D03               	btfss	3,2
  6105  0303  2B05               	ljmp	i16Ll3337
  6106  0304  2B09               	ljmp	i16Ll3339
  6107  0305                     i16Lu2260:	
  6108  0305                     i16Ll3337:	
  6109  0305  3001               	movlw	1
  6110  0306  2388               	fcall	_LED_On
  6111  0307  3180  28A1         	ljmp	l3341
  6112  0309                     i16Ll3339:	
  6113                           
  6114                           ;scan.c: 187: else LED_Off(LED_D1);
  6115  0309  3001               	movlw	1
  6116  030A  2372  3180         	fcall	_LED_Off
  6117  030C                     i16Ll3341:	
  6118                           
  6119                           ;scan.c: 188: }
  6120                           ;scan.c: 189: key_states[idx_key] = filtered_state;
  6121  030C  087C               	movf	process_level@idx_key,w
  6122  030D  3E20               	addlw	process_level@key_states& (0+255)
  6123  030E  0086               	movwf	6
  6124  030F  3001               	movlw	1	; select bank2/3
  6125  0310  0087               	movwf	7
  6126  0311  087B               	movf	process_level@filtered_state,w
  6127  0312  0081               	movwf	1
  6128  0313                     i16Ll261:	
  6129  0313                     i15Ll3345:	
  6130                           
  6131                           ;scan.c: 197: adc_levels[idx_key] = level;
  6132  0313  0020               	movlb	0	; select bank0
  6133  0314  085A               	movf	store_key_level@idx_key,w
  6134  0315  3E20               	addlw	_adc_levels& (0+255)
  6135  0316  0086               	movwf	6
  6136  0317  3002               	movlw	2	; select bank4/5
  6137  0318  0087               	movwf	7
  6138  0319  0861               	movf	store_key_level@level,w
  6139  031A  0081               	movwf	1
  6140  031B                     i15Ll3347:	
  6141                           
  6142                           ;scan.c: 198: idx_key ++;
  6143  031B  0ADA               	incf	store_key_level@idx_key,f
  6144  031C                     i15Ll3349:	
  6145                           
  6146                           ;scan.c: 199: if (idx_key >= N_KEYS || end_of_scan) idx_key = 0;
  6147  031C  3027               	movlw	39
  6148  031D  025A               	subwf	store_key_level@idx_key,w
  6149  031E  1803               	btfsc	3,0
  6150  031F  2B26               	ljmp	i15Ll3353
  6151  0320  2B22               	ljmp	i15Ll3351
  6152  0321                     i15Lu2271:	
  6153  0321  2B26               	ljmp	i15Ll3353
  6154  0322                     i15Lu2270:	
  6155  0322                     i15Ll3351:	
  6156  0322  087D               	movf	store_key_level@end_of_scan,w
  6157  0323  1D03               	btfss	3,2
  6158  0324  2B26               	ljmp	i15Ll3353
  6159  0325  2B27               	ljmp	i15Ll3355
  6160  0326                     i15Lu2280:	
  6161  0326                     i15Ll3353:	
  6162  0326  01DA               	clrf	store_key_level@idx_key
  6163  0327                     i15Ll3355:	
  6164                           
  6165                           ;scan.c: 200: return idx_key == 0;
  6166  0327  085A               	movf	store_key_level@idx_key,w
  6167  0328  3A00               	xorlw	0
  6168  0329  3000               	movlw	0
  6169  032A  1903               	btfsc	3,2
  6170  032B  3001               	movlw	1
  6171  032C  3800               	iorlw	0
  6172  032D  1D03               	skipz
  6173  032E  2B32               	goto	l3205
  6174  032F  3002               	movlw	2
  6175  0330  00E5               	movwf	_scan_task$858
  6176  0331  2B34               	goto	L20
  6177  0332                     l3205:	
  6178  0332  01E5               	clrf	_scan_task$858
  6179  0333  0AE5               	incf	_scan_task$858,f
  6180  0334                     L20:	
  6181  0334  01E6               	clrf	_scan_task$858+1
  6182  0335  0865               	movf	_scan_task$858,w
  6183  0336                     L19:	
  6184  0336  0022               	movlb	2	; select bank2
  6185  0337  00DA               	movwf	scan_task@state^(0+256)
  6186                           
  6187                           ;scan.c: 255: break;
  6188  0338  2B44               	goto	l3213
  6189  0339                     l3211:	
  6190  0339  0022               	movlb	2	; select bank2
  6191  033A  085A               	movf	scan_task@state^(0+256),w
  6192                           
  6193                           ; Switch size 1, requested type "space"
  6194                           ; Number of cases is 6, Range of values is 0 to 5
  6195                           ; switch strategies available:
  6196                           ; Name         Instructions Cycles
  6197                           ; direct_byte           18     6 (fixed)
  6198                           ; simple_byte           19    10 (average)
  6199                           ; jumptable            260     6 (fixed)
  6200                           ; rangetable            10     4 (fixed)
  6201                           ; spacedrange           17     6 (fixed)
  6202                           ; locatedrange           6     3 (fixed)
  6203                           ;	Chosen strategy is direct_byte
  6204  033B  0084               	movwf	4
  6205  033C  3006               	movlw	6
  6206  033D  0204               	subwf	4,w
  6207  033E  1803               	skipnc
  6208  033F  2B44               	goto	l3213
  6209  0340  3187               	movlp	high S4099
  6210  0341  3504               	lslf	4,w
  6211  0342  3EF3               	addlw	low S4099
  6212  0343  0082               	movwf	2
  6213  0344                     l3213:	
  6214                           
  6215                           ;scan.c: 258: *note = note_event.pitch;
  6216  0344  0020               	movlb	0	; select bank0
  6217  0345  0867               	movf	scan_task@note,w
  6218  0346  0086               	movwf	6
  6219  0347  0187               	clrf	7
  6220  0348  0022               	movlb	2	; select bank2
  6221  0349  0851               	movf	_note_event^(0+256),w
  6222  034A  0081               	movwf	1
  6223                           
  6224                           ;scan.c: 259: *velocity = note_event.velocity;
  6225  034B  0020               	movlb	0	; select bank0
  6226  034C  0862               	movf	scan_task@velocity,w
  6227  034D  0086               	movwf	6
  6228  034E  0022               	movlb	2	; select bank2
  6229  034F  0852               	movf	(_note_event^(0+256)+1),w
  6230  0350  0081               	movwf	1
  6231                           
  6232                           ;scan.c: 260: return !! note_event.pitch;
  6233  0351  3000               	movlw	0
  6234  0352  08D1               	movf	_note_event^(0+256),f
  6235  0353  1D03               	skipz
  6236  0354  3001               	movlw	1
  6237  0355  0008               	return
  6238  0356                     __end_of_scan_task:	
  6239  0356                     __ptext42:	
  6240 ;; *************** function _scan_init *****************
  6241 ;; Defined at:
  6242 ;;		line 32 in file "../src/scan.c"
  6243 ;; Parameters:    Size  Location     Type
  6244 ;;		None
  6245 ;; Auto vars:     Size  Location     Type
  6246 ;;		None
  6247 ;; Return value:  Size  Location     Type
  6248 ;;		None               void
  6249 ;; Registers used:
  6250 ;;		wreg, status,2, status,0
  6251 ;; Tracked objects:
  6252 ;;		On entry : 1F/2
  6253 ;;		On exit  : 1F/1
  6254 ;;		Unchanged: FFFE0/0
  6255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6260 ;;Total ram usage:        0 bytes
  6261 ;; Hardware stack levels used:    1
  6262 ;; Hardware stack levels required when called:    1
  6263 ;; This function calls:
  6264 ;;		Nothing
  6265 ;; This function is called by:
  6266 ;;		_scan_task
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270                           
  6271                           ;psect for function _scan_init
  6272  0356                     _scan_init:	
  6273                           
  6274                           ;scan.c: 33: is_initialized = 1;
  6275                           
  6276                           ;incstack = 0
  6277                           ; Regs used in _scan_init: [wreg+status,2+status,0]
  6278  0356  01D9               	clrf	_is_initialized^(0+256)
  6279  0357  0AD9               	incf	_is_initialized^(0+256),f
  6280                           
  6281                           ;scan.c: 34: TRISCbits.TRISC3 = PIN_INPUT;
  6282  0358  0021               	movlb	1	; select bank1
  6283  0359  158E               	bsf	14,3	;volatile
  6284                           
  6285                           ;scan.c: 35: TRISCbits.TRISC4 = PIN_OUTPUT;
  6286  035A  120E               	bcf	14,4	;volatile
  6287                           
  6288                           ;scan.c: 36: TRISCbits.TRISC5 = PIN_OUTPUT;
  6289  035B  128E               	bcf	14,5	;volatile
  6290                           
  6291                           ;scan.c: 38: ANSELA = 0;
  6292  035C  0023               	movlb	3	; select bank3
  6293  035D  018C               	clrf	12	;volatile
  6294                           
  6295                           ;scan.c: 40: ANSELCbits.ANSC3 = PIN_ANALOG;
  6296  035E  158E               	bsf	14,3	;volatile
  6297                           
  6298                           ;scan.c: 41: LATCbits.LATC4 = 0;
  6299  035F  0022               	movlb	2	; select bank2
  6300  0360  120E               	bcf	14,4	;volatile
  6301                           
  6302                           ;scan.c: 42: LATCbits.LATC5 = 0;
  6303  0361  128E               	bcf	14,5	;volatile
  6304                           
  6305                           ;scan.c: 44: ANSELAbits.ANSA4 = PIN_DIGITAL;
  6306  0362  0023               	movlb	3	; select bank3
  6307  0363  120C               	bcf	12,4	;volatile
  6308                           
  6309                           ;scan.c: 45: TRISAbits.TRISA4 = PIN_INPUT;
  6310  0364  0021               	movlb	1	; select bank1
  6311  0365  160C               	bsf	12,4	;volatile
  6312                           
  6313                           ;scan.c: 47: PIE1bits.ADIE = 0;
  6314  0366  1311               	bcf	17,6	;volatile
  6315                           
  6316                           ;scan.c: 48: ADCON0bits.ADON = 1;
  6317  0367  141D               	bsf	29,0	;volatile
  6318                           
  6319                           ;scan.c: 49: ADCON1bits.ADFM = 0;
  6320  0368  139E               	bcf	30,7	;volatile
  6321                           
  6322                           ;scan.c: 50: ADCON1bits.ADCS = 0b110;
  6323  0369  081E               	movf	30,w	;volatile
  6324  036A  398F               	andlw	-113
  6325  036B  3860               	iorlw	96
  6326  036C  009E               	movwf	30	;volatile
  6327                           
  6328                           ;scan.c: 51: ADCON1bits.ADPREF = 0;
  6329  036D  30FC               	movlw	-4
  6330  036E  059E               	andwf	30,f	;volatile
  6331                           
  6332                           ;scan.c: 52: ADCON2bits.TRIGSEL = 0;
  6333  036F  308F               	movlw	-113
  6334  0370  059F               	andwf	31,f	;volatile
  6335  0371  0008               	return
  6336  0372                     __end_of_scan_init:	
  6337  0372                     __ptext33:	
  6338 ;; *************** function _LED_Off *****************
  6339 ;; Defined at:
  6340 ;;		line 101 in file "../bsp/pic16f1459/leds.c"
  6341 ;; Parameters:    Size  Location     Type
  6342 ;;  led             1    wreg     enum E2
  6343 ;; Auto vars:     Size  Location     Type
  6344 ;;  led             1    0[COMMON] enum E2
  6345 ;; Return value:  Size  Location     Type
  6346 ;;		None               void
  6347 ;; Registers used:
  6348 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6349 ;; Tracked objects:
  6350 ;;		On entry : 0/1D
  6351 ;;		On exit  : 0/0
  6352 ;;		Unchanged: FFFE0/0
  6353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6355 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6357 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6358 ;;Total ram usage:        1 bytes
  6359 ;; Hardware stack levels used:    1
  6360 ;; Hardware stack levels required when called:    1
  6361 ;; This function calls:
  6362 ;;		Nothing
  6363 ;; This function is called by:
  6364 ;;		_APP_LEDUpdateUSBStatus
  6365 ;;		_process_level
  6366 ;; This function uses a non-reentrant model
  6367 ;;
  6368                           
  6369                           
  6370                           ;psect for function _LED_Off
  6371  0372                     _LED_Off:	
  6372                           
  6373                           ;incstack = 0
  6374                           ; Regs used in _LED_Off: [wreg-fsr0h+status,2+status,0]
  6375                           ;LED_Off@led stored from wreg
  6376  0372  00F0               	movwf	LED_Off@led
  6377                           
  6378                           ;leds.c: 102: switch(led)
  6379  0373  2B7D               	goto	l2779
  6380  0374                     l485:	
  6381                           ;leds.c: 103: {
  6382                           ;leds.c: 104: case LED_D1:
  6383                           
  6384                           
  6385                           ;leds.c: 105: LATCbits.LATC2 = 0;
  6386  0374  0022               	movlb	2	; select bank2
  6387  0375  110E               	bcf	14,2	;volatile
  6388                           
  6389                           ;leds.c: 106: break;
  6390  0376  0008               	return
  6391  0377                     l487:	
  6392                           ;leds.c: 108: case LED_D2:
  6393                           
  6394                           
  6395                           ;leds.c: 109: LATCbits.LATC1 = 0;
  6396  0377  0022               	movlb	2	; select bank2
  6397  0378  108E               	bcf	14,1	;volatile
  6398                           
  6399                           ;leds.c: 110: break;
  6400  0379  0008               	return
  6401  037A                     l489:	
  6402                           ;leds.c: 116: case LED_D4:
  6403                           
  6404                           
  6405                           ;leds.c: 117: LATCbits.LATC3 = 0;
  6406  037A  0022               	movlb	2	; select bank2
  6407  037B  118E               	bcf	14,3	;volatile
  6408                           
  6409                           ;leds.c: 118: break;
  6410  037C  0008               	return
  6411  037D                     l2779:	
  6412  037D  0870               	movf	LED_Off@led,w
  6413                           
  6414                           ; Switch size 1, requested type "space"
  6415                           ; Number of cases is 5, Range of values is 0 to 4
  6416                           ; switch strategies available:
  6417                           ; Name         Instructions Cycles
  6418                           ; direct_byte           16     6 (fixed)
  6419                           ; simple_byte           16     9 (average)
  6420                           ; jumptable            260     6 (fixed)
  6421                           ; rangetable             9     4 (fixed)
  6422                           ; spacedrange           15     6 (fixed)
  6423                           ; locatedrange           5     3 (fixed)
  6424                           ;	Chosen strategy is direct_byte
  6425  037E  0084               	movwf	4
  6426  037F  3005               	movlw	5
  6427  0380  0204               	subwf	4,w
  6428  0381  1803               	skipnc
  6429  0382  0008               	return
  6430  0383  3188               	movlp	high S4103
  6431  0384  3504               	lslf	4,w
  6432  0385  3E0A               	addlw	low S4103
  6433  0386  0082               	movwf	2
  6434  0387                     l491:	
  6435  0387  0008               	return
  6436  0388                     __end_of_LED_Off:	
  6437  0388                     __ptext32:	
  6438 ;; *************** function _LED_On *****************
  6439 ;; Defined at:
  6440 ;;		line 60 in file "../bsp/pic16f1459/leds.c"
  6441 ;; Parameters:    Size  Location     Type
  6442 ;;  led             1    wreg     enum E2
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;  led             1    0[COMMON] enum E2
  6445 ;; Return value:  Size  Location     Type
  6446 ;;		None               void
  6447 ;; Registers used:
  6448 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6449 ;; Tracked objects:
  6450 ;;		On entry : 1D/0
  6451 ;;		On exit  : 1D/0
  6452 ;;		Unchanged: FFFE0/0
  6453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6457 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6458 ;;Total ram usage:        1 bytes
  6459 ;; Hardware stack levels used:    1
  6460 ;; Hardware stack levels required when called:    1
  6461 ;; This function calls:
  6462 ;;		Nothing
  6463 ;; This function is called by:
  6464 ;;		_APP_LEDUpdateUSBStatus
  6465 ;;		_process_level
  6466 ;; This function uses a non-reentrant model
  6467 ;;
  6468                           
  6469                           
  6470                           ;psect for function _LED_On
  6471  0388                     _LED_On:	
  6472                           
  6473                           ;incstack = 0
  6474                           ; Regs used in _LED_On: [wreg-fsr0h+status,2+status,0]
  6475                           ;LED_On@led stored from wreg
  6476  0388  00F0               	movwf	LED_On@led
  6477                           
  6478                           ;leds.c: 61: switch(led)
  6479  0389  2B93               	goto	l2789
  6480  038A                     l475:	
  6481                           ;leds.c: 62: {
  6482                           ;leds.c: 63: case LED_D1:
  6483                           
  6484                           
  6485                           ;leds.c: 64: LATCbits.LATC2 = 1;
  6486  038A  0022               	movlb	2	; select bank2
  6487  038B  150E               	bsf	14,2	;volatile
  6488                           
  6489                           ;leds.c: 65: break;
  6490  038C  0008               	return
  6491  038D                     l477:	
  6492                           ;leds.c: 67: case LED_D2:
  6493                           
  6494                           
  6495                           ;leds.c: 68: LATCbits.LATC1 = 1;
  6496  038D  0022               	movlb	2	; select bank2
  6497  038E  148E               	bsf	14,1	;volatile
  6498                           
  6499                           ;leds.c: 69: break;
  6500  038F  0008               	return
  6501  0390                     l479:	
  6502                           ;leds.c: 75: case LED_D4:
  6503                           
  6504                           
  6505                           ;leds.c: 76: LATCbits.LATC3 = 1;
  6506  0390  0022               	movlb	2	; select bank2
  6507  0391  158E               	bsf	14,3	;volatile
  6508                           
  6509                           ;leds.c: 77: break;
  6510  0392  0008               	return
  6511  0393                     l2789:	
  6512  0393  0870               	movf	LED_On@led,w
  6513                           
  6514                           ; Switch size 1, requested type "space"
  6515                           ; Number of cases is 5, Range of values is 0 to 4
  6516                           ; switch strategies available:
  6517                           ; Name         Instructions Cycles
  6518                           ; direct_byte           16     6 (fixed)
  6519                           ; simple_byte           16     9 (average)
  6520                           ; jumptable            260     6 (fixed)
  6521                           ; rangetable             9     4 (fixed)
  6522                           ; spacedrange           15     6 (fixed)
  6523                           ; locatedrange           5     3 (fixed)
  6524                           ;	Chosen strategy is direct_byte
  6525  0394  0084               	movwf	4
  6526  0395  3005               	movlw	5
  6527  0396  0204               	subwf	4,w
  6528  0397  1803               	skipnc
  6529  0398  0008               	return
  6530  0399  3188               	movlp	high S4101
  6531  039A  3504               	lslf	4,w
  6532  039B  3E00               	addlw	low S4101
  6533  039C  0082               	movwf	2
  6534  039D                     l481:	
  6535  039D  0008               	return
  6536  039E                     __end_of_LED_On:	
  6537  039E                     __ptext48:	
  6538 ;; *************** function _LED_Enable *****************
  6539 ;; Defined at:
  6540 ;;		line 221 in file "../bsp/pic16f1459/leds.c"
  6541 ;; Parameters:    Size  Location     Type
  6542 ;;  led             1    wreg     enum E2
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;  led             1    0[COMMON] enum E2
  6545 ;; Return value:  Size  Location     Type
  6546 ;;		None               void
  6547 ;; Registers used:
  6548 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6549 ;; Tracked objects:
  6550 ;;		On entry : 17F/7
  6551 ;;		On exit  : 179/1
  6552 ;;		Unchanged: FFE80/0
  6553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6555 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6557 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6558 ;;Total ram usage:        1 bytes
  6559 ;; Hardware stack levels used:    1
  6560 ;; Hardware stack levels required when called:    1
  6561 ;; This function calls:
  6562 ;;		Nothing
  6563 ;; This function is called by:
  6564 ;;		_SYSTEM_Initialize
  6565 ;; This function uses a non-reentrant model
  6566 ;;
  6567                           
  6568                           
  6569                           ;psect for function _LED_Enable
  6570  039E                     _LED_Enable:	
  6571                           
  6572                           ;incstack = 0
  6573                           ; Regs used in _LED_Enable: [wreg-fsr0h+status,2+status,0]
  6574                           ;LED_Enable@led stored from wreg
  6575  039E  00F0               	movwf	LED_Enable@led
  6576                           
  6577                           ;leds.c: 222: switch(led)
  6578  039F  2BA9               	goto	l2733
  6579  03A0                     l515:	
  6580                           ;leds.c: 223: {
  6581                           ;leds.c: 224: case LED_D1:
  6582                           
  6583                           
  6584                           ;leds.c: 225: TRISCbits.TRISC2 = 0;
  6585  03A0  0021               	movlb	1	; select bank1
  6586  03A1  110E               	bcf	14,2	;volatile
  6587                           
  6588                           ;leds.c: 226: break;
  6589  03A2  0008               	return
  6590  03A3                     l517:	
  6591                           ;leds.c: 228: case LED_D2:
  6592                           
  6593                           
  6594                           ;leds.c: 229: TRISCbits.TRISC1 = 0;
  6595  03A3  0021               	movlb	1	; select bank1
  6596  03A4  108E               	bcf	14,1	;volatile
  6597                           
  6598                           ;leds.c: 230: break;
  6599  03A5  0008               	return
  6600  03A6                     l519:	
  6601                           ;leds.c: 236: case LED_D4:
  6602                           
  6603                           
  6604                           ;leds.c: 237: TRISCbits.TRISC3 = 0;
  6605  03A6  0021               	movlb	1	; select bank1
  6606  03A7  118E               	bcf	14,3	;volatile
  6607                           
  6608                           ;leds.c: 238: break;
  6609  03A8  0008               	return
  6610  03A9                     l2733:	
  6611  03A9  0870               	movf	LED_Enable@led,w
  6612                           
  6613                           ; Switch size 1, requested type "space"
  6614                           ; Number of cases is 5, Range of values is 0 to 4
  6615                           ; switch strategies available:
  6616                           ; Name         Instructions Cycles
  6617                           ; direct_byte           16     6 (fixed)
  6618                           ; simple_byte           16     9 (average)
  6619                           ; jumptable            260     6 (fixed)
  6620                           ; rangetable             9     4 (fixed)
  6621                           ; spacedrange           15     6 (fixed)
  6622                           ; locatedrange           5     3 (fixed)
  6623                           ;	Chosen strategy is direct_byte
  6624  03AA  0084               	movwf	4
  6625  03AB  3005               	movlw	5
  6626  03AC  0204               	subwf	4,w
  6627  03AD  1803               	skipnc
  6628  03AE  0008               	return
  6629  03AF  3188               	movlp	high S4105
  6630  03B0  3504               	lslf	4,w
  6631  03B1  3E14               	addlw	low S4105
  6632  03B2  0082               	movwf	2
  6633  03B3                     l521:	
  6634  03B3  0008               	return
  6635  03B4                     __end_of_LED_Enable:	
  6636  03B4                     __ptext45:	
  6637 ;; *************** function _SPI_Initialize *****************
  6638 ;; Defined at:
  6639 ;;		line 64 in file "../src/spi.c"
  6640 ;; Parameters:    Size  Location     Type
  6641 ;;		None
  6642 ;; Auto vars:     Size  Location     Type
  6643 ;;		None
  6644 ;; Return value:  Size  Location     Type
  6645 ;;		None               void
  6646 ;; Registers used:
  6647 ;;		wreg, status,2
  6648 ;; Tracked objects:
  6649 ;;		On entry : 17F/1
  6650 ;;		On exit  : 17F/4
  6651 ;;		Unchanged: FFE80/0
  6652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6657 ;;Total ram usage:        0 bytes
  6658 ;; Hardware stack levels used:    1
  6659 ;; Hardware stack levels required when called:    1
  6660 ;; This function calls:
  6661 ;;		Nothing
  6662 ;; This function is called by:
  6663 ;;		_BLEDeviceInit
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           
  6668                           ;psect for function _SPI_Initialize
  6669  03B4                     _SPI_Initialize:	
  6670  03B4                     l3359:	
  6671                           ;incstack = 0
  6672                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  6673                           
  6674                           
  6675                           ;spi.c: 68: SSP1STAT = 0x00;
  6676  03B4  0024               	movlb	4	; select bank4
  6677  03B5  0194               	clrf	20	;volatile
  6678                           
  6679                           ;spi.c: 71: SSP1CON1 = 0x35;
  6680  03B6  3035               	movlw	53
  6681  03B7  0095               	movwf	21	;volatile
  6682                           
  6683                           ;spi.c: 74: SSP1CON3 = 0x00;
  6684  03B8  0197               	clrf	23	;volatile
  6685  03B9  0008               	return
  6686  03BA                     __end_of_SPI_Initialize:	
  6687  03BA                     __ptext8:	
  6688 ;; *************** function _USBStdFeatureReqHandler *****************
  6689 ;; Defined at:
  6690 ;;		line 2780 in file "../framework/usb/usb_device.c"
  6691 ;; Parameters:    Size  Location     Type
  6692 ;;		None
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;  pUEP            2    5[BANK0 ] PTR unsigned char 
  6695 ;;		 -> UEP0(1), 
  6696 ;;  p               1    8[BANK0 ] PTR struct __BDT
  6697 ;;		 -> BDT(32), NULL(0), 
  6698 ;;  current_ep_d    1    7[BANK0 ] struct .
  6699 ;; Return value:  Size  Location     Type
  6700 ;;		None               void
  6701 ;; Registers used:
  6702 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6703 ;; Tracked objects:
  6704 ;;		On entry : 1D/0
  6705 ;;		On exit  : 1F/0
  6706 ;;		Unchanged: FFFE0/0
  6707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6709 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6710 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6711 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6712 ;;Total ram usage:        6 bytes
  6713 ;; Hardware stack levels used:    1
  6714 ;; Hardware stack levels required when called:    5
  6715 ;; This function calls:
  6716 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6717 ;; This function is called by:
  6718 ;;		_USBCheckStdRequest
  6719 ;; This function uses a non-reentrant model
  6720 ;;
  6721                           
  6722                           
  6723                           ;psect for function _USBStdFeatureReqHandler
  6724  03BA                     _USBStdFeatureReqHandler:	
  6725  03BA                     l3865:	
  6726                           ;incstack = 0
  6727                           ; Regs used in _USBStdFeatureReqHandler: [allreg]
  6728                           
  6729                           
  6730                           ;usb_device.c: 2781: BDT_ENTRY *p;
  6731                           ;usb_device.c: 2782: EP_STATUS current_ep_data;
  6732                           ;usb_device.c: 2786: unsigned char* pUEP;
  6733                           ;usb_device.c: 2824: if((SetupPkt.bFeature == 1)&&
  6734                           ;usb_device.c: 2825: (SetupPkt.Recipient == (0x00)))
  6735  03BA  0020               	movlb	0	; select bank0
  6736  03BB  0B42               	decfsz	66,w	;volatile
  6737  03BC  2BCC               	goto	l3877
  6738  03BD  0840               	movf	64,w	;volatile
  6739  03BE  391F               	andlw	31
  6740  03BF  1D03               	skipz
  6741  03C0  2BCC               	goto	l3877
  6742                           
  6743                           ;usb_device.c: 2826: {
  6744                           ;usb_device.c: 2827: inPipes[0].info.bits.busy = 1;
  6745  03C1  17DD               	bsf	_inPipes+2,7
  6746                           
  6747                           ;usb_device.c: 2828: if(SetupPkt.bRequest == 3)
  6748  03C2  0841               	movf	65,w	;volatile
  6749  03C3  3A03               	xorlw	3
  6750  03C4  1D03               	skipz
  6751  03C5  2BCA               	goto	l3875
  6752                           
  6753                           ;usb_device.c: 2829: RemoteWakeup = 1;
  6754  03C6  0022               	movlb	2	; select bank2
  6755  03C7  01D6               	clrf	_RemoteWakeup^(0+256)
  6756  03C8  0AD6               	incf	_RemoteWakeup^(0+256),f
  6757  03C9  2BCC               	goto	l3877
  6758  03CA                     l3875:	
  6759                           
  6760                           ;usb_device.c: 2830: else
  6761                           ;usb_device.c: 2831: RemoteWakeup = 0;
  6762  03CA  0022               	movlb	2	; select bank2
  6763  03CB  01D6               	clrf	_RemoteWakeup^(0+256)
  6764  03CC                     l3877:	
  6765                           
  6766                           ;usb_device.c: 2832: }
  6767                           ;usb_device.c: 2835: if((SetupPkt.bFeature == 0)&&
  6768                           ;usb_device.c: 2836: (SetupPkt.Recipient == (0x02))&&
  6769                           ;usb_device.c: 2837: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
  6770                           ;usb_device.c: 2838: (USBDeviceState == CONFIGURED_STATE))
  6771  03CC  0020               	movlb	0	; select bank0
  6772  03CD  0842               	movf	66,w
  6773  03CE  1D03               	skipz
  6774  03CF  0008               	return
  6775  03D0  0840               	movf	64,w	;volatile
  6776  03D1  391F               	andlw	31
  6777  03D2  3A02               	xorlw	2
  6778  03D3  1D03               	skipz
  6779  03D4  0008               	return
  6780  03D5  0844               	movf	68,w	;volatile
  6781  03D6  390F               	andlw	15
  6782  03D7  1903               	skipnz
  6783  03D8  0008               	return
  6784  03D9  0844               	movf	68,w	;volatile
  6785  03DA  390F               	andlw	15
  6786  03DB  00FA               	movwf	??_USBStdFeatureReqHandler
  6787  03DC  3002               	movlw	2
  6788  03DD  027A               	subwf	??_USBStdFeatureReqHandler,w
  6789  03DE  1803               	skipnc
  6790  03DF  0008               	return
  6791  03E0  0855               	movf	_USBDeviceState,w
  6792  03E1  3A20               	xorlw	32
  6793  03E2  1D03               	skipz
  6794  03E3  0008               	return
  6795                           
  6796                           ;usb_device.c: 2839: {
  6797                           ;usb_device.c: 2842: inPipes[0].info.bits.busy = 1;
  6798  03E4  17DD               	bsf	_inPipes+2,7
  6799                           
  6800                           ;usb_device.c: 2845: if(SetupPkt.EPDir == 0)
  6801  03E5  1BC4               	btfsc	68,7	;volatile
  6802  03E6  2BF1               	goto	l3891
  6803                           
  6804                           ;usb_device.c: 2846: {
  6805                           ;usb_device.c: 2847: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6806  03E7  0844               	movf	68,w	;volatile
  6807  03E8  27A5  3180         	fcall	PL240	;call to abstracted procedure
  6808  03EA  0801               	movf	1,w
  6809  03EB  00E9               	movwf	USBStdFeatureReqHandler@p
  6810                           
  6811                           ;usb_device.c: 2848: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  6812  03EC  0844               	movf	68,w	;volatile
  6813  03ED  390F               	andlw	15
  6814  03EE  3E4F               	addlw	_ep_data_out& (0+255)
  6815  03EF  0086               	movwf	6
  6816  03F0  2BFB               	goto	L4
  6817  03F1                     l3891:	
  6818                           ;usb_device.c: 2849: }
  6819                           
  6820                           
  6821                           ;usb_device.c: 2850: else
  6822                           ;usb_device.c: 2851: {
  6823                           ;usb_device.c: 2852: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6824  03F1  27B6  3180         	fcall	PL246	;call to abstracted procedure
  6825  03F3  0801               	movf	1,w
  6826  03F4  00E9               	movwf	USBStdFeatureReqHandler@p
  6827                           
  6828                           ;usb_device.c: 2853: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  6829  03F5  0844               	movf	68,w	;volatile
  6830  03F6  390F               	andlw	15
  6831  03F7  3E4D               	addlw	_ep_data_in& (0+255)
  6832  03F8  0086               	movwf	6
  6833  03F9  3001               	movlw	1	; select bank2/3
  6834  03FA  0087               	movwf	7
  6835  03FB                     L4:	
  6836  03FB  0801               	movf	1,w
  6837  03FC  00E8               	movwf	USBStdFeatureReqHandler@current_ep_data
  6838                           
  6839                           ;usb_device.c: 2854: }
  6840                           ;usb_device.c: 2860: if(current_ep_data.bits.ping_pong_state == 0)
  6841  03FD  1868               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  6842  03FE  2C01               	goto	l911
  6843                           
  6844                           ;usb_device.c: 2861: {
  6845                           ;usb_device.c: 2862: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  6846  03FF  1169               	bcf	USBStdFeatureReqHandler@p,2
  6847                           
  6848                           ;usb_device.c: 2863: }
  6849  0400  2C02               	goto	l912
  6850  0401                     l911:	
  6851                           
  6852                           ;usb_device.c: 2864: else
  6853                           ;usb_device.c: 2865: {
  6854                           ;usb_device.c: 2866: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  6855  0401  1569               	bsf	USBStdFeatureReqHandler@p,2
  6856  0402                     l912:	
  6857                           
  6858                           ;usb_device.c: 2867: }
  6859                           ;usb_device.c: 2872: if(SetupPkt.EPDir == 0)
  6860  0402  1BC4               	btfsc	68,7	;volatile
  6861  0403  2C08               	goto	l3899
  6862                           
  6863                           ;usb_device.c: 2873: {
  6864                           ;usb_device.c: 2874: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6865  0404  0844               	movf	68,w	;volatile
  6866  0405  27A5  3180         	fcall	PL240	;call to abstracted procedure
  6867  0407  2C0A               	goto	L5
  6868  0408                     l3899:	
  6869                           ;usb_device.c: 2875: }
  6870                           
  6871                           
  6872                           ;usb_device.c: 2876: else
  6873                           ;usb_device.c: 2877: {
  6874                           ;usb_device.c: 2878: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6875  0408  27B6  3180         	fcall	PL246	;call to abstracted procedure
  6876  040A                     L5:	
  6877  040A  0869               	movf	USBStdFeatureReqHandler@p,w
  6878  040B  0081               	movwf	1
  6879                           
  6880                           ;usb_device.c: 2879: }
  6881                           ;usb_device.c: 2882: if(SetupPkt.bRequest == 3)
  6882  040C  0841               	movf	65,w	;volatile
  6883  040D  3A03               	xorlw	3
  6884  040E  1D03               	skipz
  6885  040F  2C2A               	goto	l3915
  6886                           
  6887                           ;usb_device.c: 2883: {
  6888                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  6889  0410  0869               	movf	USBStdFeatureReqHandler@p,w
  6890  0411  0086               	movwf	6
  6891  0412  0187               	clrf	7
  6892  0413  1F81               	btfss	1,7
  6893  0414  2C22               	goto	l3911
  6894                           
  6895                           ;usb_device.c: 2885: {
  6896                           ;usb_device.c: 2888: if(SetupPkt.EPDir == 0)
  6897  0415  1BC4               	btfsc	68,7	;volatile
  6898  0416  2C1B               	goto	l3909
  6899                           
  6900                           ;usb_device.c: 2889: {
  6901                           ;usb_device.c: 2890: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6902  0417  0844               	movf	68,w	;volatile
  6903  0418  390F               	andlw	15
  6904  0419  3E4F               	addlw	_ep_data_out& (0+255)
  6905  041A  2C1E               	goto	L6
  6906  041B                     l3909:	
  6907                           ;usb_device.c: 2891: }
  6908                           
  6909                           
  6910                           ;usb_device.c: 2892: else
  6911                           ;usb_device.c: 2893: {
  6912                           ;usb_device.c: 2894: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6913  041B  0844               	movf	68,w	;volatile
  6914  041C  390F               	andlw	15
  6915  041D  3E4D               	addlw	_ep_data_in& (0+255)
  6916  041E                     L6:	
  6917  041E  0086               	movwf	6
  6918  041F  3001               	movlw	1	; select bank2/3
  6919  0420  0087               	movwf	7
  6920  0421  1481               	bsf	1,1
  6921  0422                     l3911:	
  6922                           
  6923                           ;usb_device.c: 2895: }
  6924                           ;usb_device.c: 2896: }
  6925                           ;usb_device.c: 2899: p->STAT.Val |= 0x04;
  6926  0422  0869               	movf	USBStdFeatureReqHandler@p,w
  6927  0423  0086               	movwf	6
  6928  0424  0187               	clrf	7
  6929  0425  1501               	bsf	1,2
  6930                           
  6931                           ;usb_device.c: 2900: p->STAT.Val |= 0x80;
  6932  0426  0869               	movf	USBStdFeatureReqHandler@p,w
  6933  0427  0086               	movwf	6
  6934  0428  1781               	bsf	1,7
  6935                           
  6936                           ;usb_device.c: 2901: }
  6937  0429  0008               	return
  6938  042A                     l3915:	
  6939                           
  6940                           ;usb_device.c: 2902: else
  6941                           ;usb_device.c: 2903: {
  6942                           ;usb_device.c: 2907: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  6943  042A  3004               	movlw	4
  6944  042B  06E9               	xorwf	USBStdFeatureReqHandler@p,f
  6945                           
  6946                           ;usb_device.c: 2909: if(p->STAT.UOWN == 1)
  6947  042C  0869               	movf	USBStdFeatureReqHandler@p,w
  6948  042D  0086               	movwf	6
  6949  042E  0187               	clrf	7
  6950                           
  6951                           ;usb_device.c: 2910: {
  6952                           ;usb_device.c: 2913: p->STAT.Val &= (~0x80);
  6953  042F  0869               	movf	USBStdFeatureReqHandler@p,w
  6954  0430  1F81               	btfss	1,7
  6955  0431  2C3C               	goto	L8
  6956  0432  0086               	movwf	6
  6957  0433  1381               	bcf	1,7
  6958                           
  6959                           ;usb_device.c: 2914: p->STAT.Val |= 0x40;
  6960  0434  0086               	movwf	6
  6961  0435  3005               	movlw	5
  6962  0436  1701               	bsf	1,6
  6963                           
  6964                           ;usb_device.c: 2915: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  6965  0437  279D  3180         	fcall	PL238	;call to abstracted procedure
  6966  0439  2516  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6967                           
  6968                           ;usb_device.c: 2916: }
  6969  043B  2C3F               	goto	l3925
  6970  043C                     L8:	
  6971                           ;usb_device.c: 2917: else
  6972                           ;usb_device.c: 2918: {
  6973                           ;usb_device.c: 2920: p->STAT.Val |= 0x40;
  6974                           
  6975  043C  0086               	movwf	6
  6976  043D  0187               	clrf	7
  6977  043E  1701               	bsf	1,6
  6978  043F                     l3925:	
  6979                           
  6980                           ;usb_device.c: 2921: }
  6981                           ;usb_device.c: 2925: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  6982  043F  3004               	movlw	4
  6983  0440  0020               	movlb	0	; select bank0
  6984  0441  06E9               	xorwf	USBStdFeatureReqHandler@p,f
  6985                           
  6986                           ;usb_device.c: 2931: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  6987  0442  18E8               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  6988  0443  2C49               	goto	l924
  6989  0444  0869               	movf	USBStdFeatureReqHandler@p,w
  6990  0445  0086               	movwf	6
  6991  0446  0187               	clrf	7
  6992  0447  1F81               	btfss	1,7
  6993  0448  2C5E               	goto	l3937
  6994  0449                     l924:	
  6995                           
  6996                           ;usb_device.c: 2932: {
  6997                           ;usb_device.c: 2933: if(SetupPkt.EPDir == 0)
  6998  0449  1BC4               	btfsc	68,7	;volatile
  6999  044A  2C4F               	goto	l3933
  7000                           
  7001                           ;usb_device.c: 2934: {
  7002                           ;usb_device.c: 2935: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7003  044B  0844               	movf	68,w	;volatile
  7004  044C  390F               	andlw	15
  7005  044D  3E4F               	addlw	_ep_data_out& (0+255)
  7006  044E  2C52               	goto	L7
  7007  044F                     l3933:	
  7008                           ;usb_device.c: 2936: }
  7009                           
  7010                           
  7011                           ;usb_device.c: 2937: else
  7012                           ;usb_device.c: 2938: {
  7013                           ;usb_device.c: 2939: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7014  044F  0844               	movf	68,w	;volatile
  7015  0450  390F               	andlw	15
  7016  0451  3E4D               	addlw	_ep_data_in& (0+255)
  7017  0452                     L7:	
  7018  0452  0086               	movwf	6
  7019  0453  3001               	movlw	1	; select bank2/3
  7020  0454  0087               	movwf	7
  7021  0455  1081               	bcf	1,1
  7022                           
  7023                           ;usb_device.c: 2940: }
  7024                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7025  0456  27CE  3180         	fcall	PL260	;call to abstracted procedure
  7026                           
  7027                           ;usb_device.c: 2945: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7028  0458  3005               	movlw	5
  7029  0459  279D  3180         	fcall	PL238	;call to abstracted procedure
  7030  045B  2516  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7031                           
  7032                           ;usb_device.c: 2946: }
  7033  045D  2C5F               	goto	l3939
  7034  045E                     l3937:	
  7035                           
  7036                           ;usb_device.c: 2947: else
  7037                           ;usb_device.c: 2948: {
  7038                           ;usb_device.c: 2950: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7039  045E  27CE               	fcall	PL260	;call to abstracted procedure
  7040  045F                     l3939:	
  7041                           
  7042                           ;usb_device.c: 2951: }
  7043                           ;usb_device.c: 2998: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  7044  045F  0020               	movlb	0	; select bank0
  7045  0460  0844               	movf	68,w	;volatile
  7046  0461  390F               	andlw	15
  7047  0462  3E98               	addlw	152
  7048  0463  00FA               	movwf	??_USBStdFeatureReqHandler
  7049  0464  300E               	movlw	14
  7050  0465  01FB               	clrf	??_USBStdFeatureReqHandler+1
  7051  0466  3DFB               	addwfc	??_USBStdFeatureReqHandler+1,f
  7052  0467  087A               	movf	??_USBStdFeatureReqHandler,w
  7053  0468  00E6               	movwf	USBStdFeatureReqHandler@pUEP
  7054  0469  087B               	movf	??_USBStdFeatureReqHandler+1,w
  7055  046A  00E7               	movwf	USBStdFeatureReqHandler@pUEP+1
  7056                           
  7057                           ;usb_device.c: 3002: *pUEP &= ~0x0001;
  7058  046B  0866               	movf	USBStdFeatureReqHandler@pUEP,w
  7059  046C  0086               	movwf	6
  7060  046D  0867               	movf	USBStdFeatureReqHandler@pUEP+1,w
  7061  046E  0087               	movwf	7
  7062  046F  1001               	bcf	1,0
  7063  0470  0008               	return
  7064  0471                     __end_of_USBStdFeatureReqHandler:	
  7065  0471                     __ptext1:	
  7066 ;; *************** function _USBDeviceTasks *****************
  7067 ;; Defined at:
  7068 ;;		line 497 in file "../framework/usb/usb_device.c"
  7069 ;; Parameters:    Size  Location     Type
  7070 ;;		None
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;  i               1   13[BANK0 ] unsigned char 
  7073 ;; Return value:  Size  Location     Type
  7074 ;;		None               void
  7075 ;; Registers used:
  7076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7077 ;; Tracked objects:
  7078 ;;		On entry : 162/4
  7079 ;;		On exit  : 17F/0
  7080 ;;		Unchanged: FFE80/0
  7081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7083 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7084 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7085 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7086 ;;Total ram usage:        2 bytes
  7087 ;; Hardware stack levels used:    1
  7088 ;; Hardware stack levels required when called:    9
  7089 ;; This function calls:
  7090 ;;		_USBDeviceInit
  7091 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7092 ;;		_USBWakeFromSuspend
  7093 ;;		_USBSuspend
  7094 ;;		_USBIncrement1msInternalTimers
  7095 ;;		_USBCtrlEPAllowStatusStage
  7096 ;;		_USBStallHandler
  7097 ;;		_USBCtrlEPService
  7098 ;; This function is called by:
  7099 ;;		_main
  7100 ;; This function uses a non-reentrant model
  7101 ;;
  7102                           
  7103                           
  7104                           ;psect for function _USBDeviceTasks
  7105  0471                     _USBDeviceTasks:	
  7106                           
  7107                           ;usb_device.c: 563: }
  7108                           ;usb_device.c: 585: if(USBDeviceState == DETACHED_STATE)
  7109                           
  7110                           ;usb_device.c: 498: uint8_t i;
  7111                           ;usb_device.c: 524: if (1 != 1)
  7112                           
  7113                           ;incstack = 0
  7114                           ; Regs used in _USBDeviceTasks: [allreg]
  7115  0471  0020               	movlb	0	; select bank0
  7116  0472  08D5               	movf	_USBDeviceState,f
  7117  0473  1D03               	skipz
  7118  0474  2C82               	goto	l2977
  7119                           
  7120                           ;usb_device.c: 586: {
  7121                           ;usb_device.c: 588: UCON = 0;
  7122  0475  003D               	movlb	29	; select bank29
  7123  0476  018E               	clrf	14	;volatile
  7124                           
  7125                           ;usb_device.c: 591: UIE = 0;
  7126  0477  0192               	clrf	18	;volatile
  7127                           
  7128                           ;usb_device.c: 595: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7129  0478  3016               	movlw	22
  7130  0479  27C8  3180         	fcall	PL258	;call to abstracted procedure
  7131  047B                     l693:	
  7132                           ;usb_device.c: 598: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7133                           
  7134  047B  198E               	btfsc	14,3	;volatile
  7135  047C  2C7F               	goto	l695
  7136  047D  158E               	bsf	14,3	;volatile
  7137  047E  2C7B               	goto	l693
  7138  047F                     l695:	
  7139                           
  7140                           ;usb_device.c: 601: USBDeviceState = ATTACHED_STATE;
  7141  047F  0020               	movlb	0	; select bank0
  7142  0480  01D5               	clrf	_USBDeviceState
  7143  0481  0AD5               	incf	_USBDeviceState,f
  7144  0482                     l2977:	
  7145                           
  7146                           ;usb_device.c: 606: }
  7147                           ;usb_device.c: 609: if(USBDeviceState == ATTACHED_STATE)
  7148  0482  0355               	decf	_USBDeviceState,w
  7149  0483  1D03               	skipz
  7150  0484  2C8F               	goto	l2989
  7151                           
  7152                           ;usb_device.c: 610: {
  7153                           ;usb_device.c: 620: if(!UCONbits.SE0)
  7154  0485  003D               	movlb	29	; select bank29
  7155  0486  1A8E               	btfsc	14,5	;volatile
  7156  0487  2C8F               	goto	l2989
  7157                           
  7158                           ;usb_device.c: 621: {
  7159                           ;usb_device.c: 627: {UIR = 0;};
  7160  0488  0190               	clrf	16	;volatile
  7161                           
  7162                           ;usb_device.c: 631: UIE=0;
  7163  0489  0192               	clrf	18	;volatile
  7164                           
  7165                           ;usb_device.c: 633: UIEbits.URSTIE = 1;
  7166  048A  1412               	bsf	18,0	;volatile
  7167                           
  7168                           ;usb_device.c: 634: UIEbits.IDLEIE = 1;
  7169  048B  1612               	bsf	18,4	;volatile
  7170                           
  7171                           ;usb_device.c: 635: USBDeviceState = POWERED_STATE;
  7172  048C  3002               	movlw	2
  7173  048D  0020               	movlb	0	; select bank0
  7174  048E  00D5               	movwf	_USBDeviceState
  7175  048F                     l2989:	
  7176                           
  7177                           ;usb_device.c: 636: }
  7178                           ;usb_device.c: 637: }
  7179                           ;usb_device.c: 653: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7180  048F  003D               	movlb	29	; select bank29
  7181  0490  1910               	btfsc	16,2	;volatile
  7182  0491  1D12               	btfss	18,2	;volatile
  7183  0492  2C96               	goto	l2997
  7184                           
  7185                           ;usb_device.c: 654: {
  7186                           ;usb_device.c: 655: (UIR &= 0xFB);
  7187  0493  1110               	bcf	16,2	;volatile
  7188                           
  7189                           ;usb_device.c: 659: USBWakeFromSuspend();
  7190  0494  25B7  3180         	fcall	_USBWakeFromSuspend
  7191  0496                     l2997:	
  7192                           
  7193                           ;usb_device.c: 661: }
  7194                           ;usb_device.c: 666: if(UCONbits.SUSPND==1)
  7195  0496  003D               	movlb	29	; select bank29
  7196  0497  1C8E               	btfss	14,1	;volatile
  7197  0498  2C9C               	goto	l699
  7198  0499                     l2999:	
  7199                           
  7200                           ;usb_device.c: 667: {
  7201                           ;usb_device.c: 668: PIR2bits.USBIF = 0;;
  7202  0499  0020               	movlb	0	; select bank0
  7203  049A  1112               	bcf	18,2	;volatile
  7204                           
  7205                           ;usb_device.c: 669: return;
  7206  049B  0008               	return
  7207  049C                     l699:	
  7208                           
  7209                           ;usb_device.c: 670: }
  7210                           ;usb_device.c: 682: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7211  049C  1810               	btfsc	16,0	;volatile
  7212  049D  1C12               	btfss	18,0	;volatile
  7213  049E  2CA5               	goto	l3009
  7214                           
  7215                           ;usb_device.c: 683: {
  7216                           ;usb_device.c: 684: USBDeviceInit();
  7217  049F  2543  3180         	fcall	_USBDeviceInit
  7218                           
  7219                           ;usb_device.c: 688: ;
  7220                           ;usb_device.c: 690: USBDeviceState = DEFAULT_STATE;
  7221  04A1  3004               	movlw	4
  7222  04A2  00D5               	movwf	_USBDeviceState
  7223                           
  7224                           ;usb_device.c: 700: (UIR &= 0xFE);
  7225  04A3  003D               	movlb	29	; select bank29
  7226  04A4  1010               	bcf	16,0	;volatile
  7227  04A5                     l3009:	
  7228                           
  7229                           ;usb_device.c: 701: }
  7230                           ;usb_device.c: 706: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7231  04A5  1A10               	btfsc	16,4	;volatile
  7232  04A6  1E12               	btfss	18,4	;volatile
  7233  04A7  2CAA               	goto	l3015
  7234                           
  7235                           ;usb_device.c: 707: {
  7236                           ;usb_device.c: 713: USBSuspend();
  7237  04A8  25C8  3180         	fcall	_USBSuspend
  7238  04AA                     l3015:	
  7239                           
  7240                           ;usb_device.c: 715: }
  7241                           ;usb_device.c: 727: if(UIRbits.SOFIF)
  7242  04AA  003D               	movlb	29	; select bank29
  7243  04AB  1F10               	btfss	16,6	;volatile
  7244  04AC  2CC4               	goto	l3031
  7245                           
  7246                           ;usb_device.c: 728: {
  7247                           ;usb_device.c: 730: if(UIEbits.SOFIE)
  7248  04AD  1F12               	btfss	18,6	;volatile
  7249  04AE  2CB7               	goto	l3021
  7250                           
  7251                           ;usb_device.c: 731: {
  7252                           ;usb_device.c: 732: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7253  04AF  3073               	movlw	115
  7254  04B0  0020               	movlb	0	; select bank0
  7255  04B1  00E1               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  7256  04B2  01E2               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  7257  04B3  27D4  3180         	fcall	PL262	;call to abstracted procedure
  7258  04B5  2516  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7259  04B7                     l3021:	
  7260                           
  7261                           ;usb_device.c: 733: }
  7262                           ;usb_device.c: 734: (UIR &= 0xBF);
  7263  04B7  003D               	movlb	29	; select bank29
  7264  04B8  1310               	bcf	16,6	;volatile
  7265                           
  7266                           ;usb_device.c: 737: USBIncrement1msInternalTimers();
  7267  04B9  25D3  3180         	fcall	_USBIncrement1msInternalTimers
  7268                           
  7269                           ;usb_device.c: 754: if(USBStatusStageTimeoutCounter != 0u)
  7270  04BB  0021               	movlb	1	; select bank1
  7271  04BC  0864               	movf	_USBStatusStageTimeoutCounter^(0+128),w
  7272  04BD  1D03               	skipz
  7273                           
  7274                           ;usb_device.c: 755: {
  7275                           ;usb_device.c: 756: USBStatusStageTimeoutCounter--;
  7276  04BE  03E4               	decf	_USBStatusStageTimeoutCounter^(0+128),f
  7277                           
  7278                           ;usb_device.c: 757: }
  7279                           ;usb_device.c: 763: if(USBStatusStageTimeoutCounter == 0)
  7280  04BF  08E4               	movf	_USBStatusStageTimeoutCounter^(0+128),f
  7281  04C0  1D03               	skipz
  7282  04C1  2CC4               	goto	l3031
  7283                           
  7284                           ;usb_device.c: 764: {
  7285                           ;usb_device.c: 765: USBCtrlEPAllowStatusStage();
  7286  04C2  25F6  3180         	fcall	_USBCtrlEPAllowStatusStage
  7287  04C4                     l3031:	
  7288                           
  7289                           ;usb_device.c: 766: }
  7290                           ;usb_device.c: 768: }
  7291                           ;usb_device.c: 770: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7292  04C4  003D               	movlb	29	; select bank29
  7293  04C5  1A90               	btfsc	16,5	;volatile
  7294  04C6  1E92               	btfss	18,5	;volatile
  7295  04C7  2CCA               	goto	l3037
  7296                           
  7297                           ;usb_device.c: 771: {
  7298                           ;usb_device.c: 772: USBStallHandler();
  7299  04C8  25DB  3180         	fcall	_USBStallHandler
  7300  04CA                     l3037:	
  7301                           
  7302                           ;usb_device.c: 773: }
  7303                           ;usb_device.c: 775: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7304  04CA  1890               	btfsc	16,1	;volatile
  7305  04CB  1C92               	btfss	18,1	;volatile
  7306  04CC  2CD8               	goto	l3045
  7307                           
  7308                           ;usb_device.c: 776: {
  7309                           ;usb_device.c: 777: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7310  04CD  30FF               	movlw	255
  7311  04CE  0020               	movlb	0	; select bank0
  7312  04CF  00E1               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  7313  04D0  307F               	movlw	127
  7314  04D1  00E2               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  7315  04D2  27D4  3180         	fcall	PL262	;call to abstracted procedure
  7316  04D4  2516  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7317                           
  7318                           ;usb_device.c: 778: {UEIR = 0;};
  7319  04D6  003D               	movlb	29	; select bank29
  7320  04D7  0193               	clrf	19	;volatile
  7321  04D8                     l3045:	
  7322                           
  7323                           ;usb_device.c: 786: }
  7324                           ;usb_device.c: 793: if(USBDeviceState < DEFAULT_STATE)
  7325  04D8  3004               	movlw	4
  7326  04D9  0020               	movlb	0	; select bank0
  7327  04DA  0255               	subwf	_USBDeviceState,w
  7328  04DB  1C03               	btfss	3,0
  7329  04DC  2C99               	goto	l2999
  7330                           
  7331                           ;usb_device.c: 797: }
  7332                           ;usb_device.c: 802: if(UIEbits.TRNIE)
  7333  04DD  003D               	movlb	29	; select bank29
  7334  04DE  1D92               	btfss	18,3	;volatile
  7335  04DF  2C99               	goto	l2999
  7336                           
  7337                           ;usb_device.c: 803: {
  7338                           ;usb_device.c: 804: for(i = 0; i < 4u; i++)
  7339  04E0  0020               	movlb	0	; select bank0
  7340  04E1  01EE               	clrf	USBDeviceTasks@i
  7341  04E2                     l710:	
  7342                           
  7343                           ;usb_device.c: 805: {
  7344                           ;usb_device.c: 806: if(UIRbits.TRNIF)
  7345  04E2  003D               	movlb	29	; select bank29
  7346  04E3  1D90               	btfss	16,3	;volatile
  7347  04E4  2C99               	goto	l2999
  7348                           
  7349                           ;usb_device.c: 807: {
  7350                           ;usb_device.c: 809: USTATcopy.Val = USTAT;
  7351  04E5  080F               	movf	15,w	;volatile
  7352  04E6  0020               	movlb	0	; select bank0
  7353  04E7  00E0               	movwf	_USTATcopy
  7354                           
  7355                           ;usb_device.c: 810: endpoint_number = USTATcopy.endpoint_number;
  7356  04E8  0C60               	rrf	_USTATcopy,w
  7357  04E9  00ED               	movwf	??_USBDeviceTasks
  7358  04EA  0CED               	rrf	??_USBDeviceTasks,f
  7359  04EB  0C6D               	rrf	??_USBDeviceTasks,w
  7360  04EC  390F               	andlw	15
  7361  04ED  0021               	movlb	1	; select bank1
  7362  04EE  00E6               	movwf	_endpoint_number^(0+128)
  7363                           
  7364                           ;usb_device.c: 812: (UIR &= 0xF7);
  7365  04EF  003D               	movlb	29	; select bank29
  7366  04F0  1190               	bcf	16,3	;volatile
  7367                           
  7368                           ;usb_device.c: 817: if(USTATcopy.direction == 0)
  7369  04F1  0020               	movlb	0	; select bank0
  7370  04F2  1960               	btfsc	_USTATcopy,2
  7371  04F3  2CF8               	goto	l3065
  7372                           
  7373                           ;usb_device.c: 818: {
  7374                           ;usb_device.c: 819: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7375  04F4  0021               	movlb	1	; select bank1
  7376  04F5  0866               	movf	_endpoint_number^(0+128),w
  7377  04F6  3E4F               	addlw	_ep_data_out& (0+255)
  7378  04F7  2CFB               	goto	L1
  7379  04F8                     l3065:	
  7380                           ;usb_device.c: 820: }
  7381                           
  7382                           
  7383                           ;usb_device.c: 821: else
  7384                           ;usb_device.c: 822: {
  7385                           ;usb_device.c: 823: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7386  04F8  0021               	movlb	1	; select bank1
  7387  04F9  0866               	movf	_endpoint_number^(0+128),w
  7388  04FA  3E4D               	addlw	_ep_data_in& (0+255)
  7389  04FB                     L1:	
  7390  04FB  0086               	movwf	6
  7391  04FC  3001               	movlw	1	; select bank2/3
  7392  04FD  0087               	movwf	7
  7393  04FE  0681               	xorwf	1,f
  7394                           
  7395                           ;usb_device.c: 824: }
  7396                           ;usb_device.c: 829: if(endpoint_number == 0)
  7397  04FF  08E6               	movf	_endpoint_number^(0+128),f
  7398  0500  1D03               	skipz
  7399  0501  2D05               	goto	l3071
  7400                           
  7401                           ;usb_device.c: 830: {
  7402                           ;usb_device.c: 831: USBCtrlEPService();
  7403  0502  2637  3180         	fcall	_USBCtrlEPService
  7404                           
  7405                           ;usb_device.c: 832: }
  7406  0504  2D0F               	goto	l3073
  7407  0505                     l3071:	
  7408                           
  7409                           ;usb_device.c: 833: else
  7410                           ;usb_device.c: 834: {
  7411                           ;usb_device.c: 835: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7412  0505  3072               	movlw	114
  7413  0506  0020               	movlb	0	; select bank0
  7414  0507  00E1               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  7415  0508  3060               	movlw	_USTATcopy& (0+255)
  7416  0509  01E2               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  7417  050A  00E3               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  7418  050B  01E4               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  7419  050C  01E5               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  7420  050D  2516  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7421  050F                     l3073:	
  7422  050F  0020               	movlb	0	; select bank0
  7423  0510  3004               	movlw	4
  7424  0511  0AEE               	incf	USBDeviceTasks@i,f
  7425  0512  026E               	subwf	USBDeviceTasks@i,w
  7426  0513  1803               	btfsc	3,0
  7427  0514  2C99               	goto	l2999
  7428  0515  2CE2               	goto	l710
  7429  0516                     __end_of_USBDeviceTasks:	
  7430  0516                     __ptext21:	
  7431 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7432 ;; Defined at:
  7433 ;;		line 95 in file "../src/main.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;  event           2    0[BANK0 ] enum E2684
  7436 ;;  pdata           1    2[BANK0 ] PTR void 
  7437 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(32), NULL(0), 
  7438 ;;  size            2    3[BANK0 ] unsigned int 
  7439 ;; Auto vars:     Size  Location     Type
  7440 ;;		None
  7441 ;; Return value:  Size  Location     Type
  7442 ;;                  1    wreg      unsigned char 
  7443 ;; Registers used:
  7444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7445 ;; Tracked objects:
  7446 ;;		On entry : 1F/0
  7447 ;;		On exit  : 0/0
  7448 ;;		Unchanged: FFFE0/0
  7449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7450 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7453 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7454 ;;Total ram usage:        5 bytes
  7455 ;; Hardware stack levels used:    1
  7456 ;; Hardware stack levels required when called:    4
  7457 ;; This function calls:
  7458 ;;		_APP_LEDUpdateUSBStatus
  7459 ;;		_APP_DeviceAudioMIDISOFHandler
  7460 ;;		_APP_DeviceAudioMIDIInitialize
  7461 ;; This function is called by:
  7462 ;;		_USBDeviceTasks
  7463 ;;		_USBStdSetCfgHandler
  7464 ;;		_USBSuspend
  7465 ;;		_USBWakeFromSuspend
  7466 ;;		_USBCtrlTrfSetupHandler
  7467 ;;		_USBCheckStdRequest
  7468 ;;		_USBStdFeatureReqHandler
  7469 ;; This function uses a non-reentrant model
  7470 ;;
  7471                           
  7472                           
  7473                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  7474  0516                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  7475  0516                     l3077:	
  7476                           ;incstack = 0
  7477                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [allreg]
  7478                           
  7479                           
  7480                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7481                           ; Switch size 1, requested type "space"
  7482                           ; Number of cases is 2, Range of values is 0 to 127
  7483                           ; switch strategies available:
  7484                           ; Name         Instructions Cycles
  7485                           ; simple_byte            7     4 (average)
  7486                           ; direct_byte          262     6 (fixed)
  7487                           ; jumptable            260     6 (fixed)
  7488                           ; rangetable           132     6 (fixed)
  7489                           ; spacedrange          261     8 (fixed)
  7490                           ; locatedrange         128     3 (fixed)
  7491                           ;	Chosen strategy is simple_byte
  7492                           
  7493                           ;main.c: 122: break;
  7494                           
  7495                           ;main.c: 96: switch( (int) event )
  7496  0516  0862               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  7497  0517  3A00               	xorlw	0	; case 0
  7498  0518  1903               	skipnz
  7499  0519  2D23               	goto	l4095
  7500  051A  3A7F               	xorlw	127	; case 127
  7501  051B  1903               	skipnz
  7502  051C  2D3D               	goto	l4097
  7503  051D  2D42               	goto	l88
  7504  051E                     l3079:	
  7505                           
  7506                           ;main.c: 104: APP_LEDUpdateUSBStatus();
  7507  051E  2008  3180         	fcall	_APP_LEDUpdateUSBStatus
  7508                           
  7509                           ;main.c: 105: APP_DeviceAudioMIDISOFHandler();
  7510  0520  2E86               	ljmp	l3105
  7511  0521                     l3083:	
  7512                           ;main.c: 106: break;
  7513                           
  7514                           
  7515                           ;main.c: 110: APP_LEDUpdateUSBStatus();
  7516  0521  2808               	ljmp	l2739
  7517  0522                     l3087:	
  7518                           ;main.c: 111: break;
  7519                           
  7520                           
  7521                           ;main.c: 121: APP_DeviceAudioMIDIInitialize();
  7522  0522  2E8B               	ljmp	l3109
  7523  0523                     l4095:	
  7524                           
  7525                           ; Switch size 1, requested type "space"
  7526                           ; Number of cases is 8, Range of values is 1 to 117
  7527                           ; switch strategies available:
  7528                           ; Name         Instructions Cycles
  7529                           ; simple_byte           25    13 (average)
  7530                           ; direct_byte          243     9 (fixed)
  7531                           ; jumptable            263     9 (fixed)
  7532                           ;	Chosen strategy is simple_byte
  7533  0523  0861               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  7534  0524  3A01               	xorlw	1	; case 1
  7535  0525  1903               	skipnz
  7536  0526  2D22               	goto	l3087
  7537  0527  3A03               	xorlw	3	; case 2
  7538  0528  1903               	skipnz
  7539  0529  2D42               	goto	l88
  7540  052A  3A01               	xorlw	1	; case 3
  7541  052B  1903               	skipnz
  7542  052C  2D42               	goto	l88
  7543  052D  3A06               	xorlw	6	; case 5
  7544  052E  1903               	skipnz
  7545  052F  2D42               	goto	l88
  7546  0530  3A77               	xorlw	119	; case 114
  7547  0531  1903               	skipnz
  7548  0532  2D42               	goto	l88
  7549  0533  3A01               	xorlw	1	; case 115
  7550  0534  1903               	skipnz
  7551  0535  2D1E               	goto	l3079
  7552  0536  3A07               	xorlw	7	; case 116
  7553  0537  1903               	skipnz
  7554  0538  2D21               	goto	l3083
  7555  0539  3A01               	xorlw	1	; case 117
  7556  053A  1903               	skipnz
  7557  053B  2D21               	goto	l3083
  7558  053C  2D42               	goto	l88
  7559  053D                     l4097:	
  7560                           
  7561                           ; Switch size 1, requested type "space"
  7562                           ; Number of cases is 1, Range of values is 255 to 255
  7563                           ; switch strategies available:
  7564                           ; Name         Instructions Cycles
  7565                           ; simple_byte            4     3 (average)
  7566                           ; direct_byte            7     5 (fixed)
  7567                           ; jumptable            263     9 (fixed)
  7568                           ;	Chosen strategy is simple_byte
  7569  053D  0861               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  7570  053E  3AFF               	xorlw	255	; case 255
  7571  053F  1903               	skipnz
  7572  0540  2D42               	goto	l88
  7573  0541  2D42               	goto	l88
  7574  0542                     l88:	
  7575  0542  0008               	return
  7576  0543                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  7577  0543                     __ptext27:	
  7578 ;; *************** function _USBDeviceInit *****************
  7579 ;; Defined at:
  7580 ;;		line 301 in file "../framework/usb/usb_device.c"
  7581 ;; Parameters:    Size  Location     Type
  7582 ;;		None
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;  p               2    2[COMMON] PTR unsigned char 
  7585 ;;		 -> UEP1(1), 
  7586 ;;  i               1    4[COMMON] unsigned char 
  7587 ;;  i               1    5[COMMON] unsigned char 
  7588 ;; Return value:  Size  Location     Type
  7589 ;;		None               void
  7590 ;; Registers used:
  7591 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7592 ;; Tracked objects:
  7593 ;;		On entry : 160/0
  7594 ;;		On exit  : 17F/0
  7595 ;;		Unchanged: FFE80/0
  7596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7598 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7599 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7600 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7601 ;;Total ram usage:        6 bytes
  7602 ;; Hardware stack levels used:    1
  7603 ;; Hardware stack levels required when called:    1
  7604 ;; This function calls:
  7605 ;;		Nothing
  7606 ;; This function is called by:
  7607 ;;		_main
  7608 ;;		_USBDeviceTasks
  7609 ;; This function uses a non-reentrant model
  7610 ;;
  7611                           
  7612                           
  7613                           ;psect for function _USBDeviceInit
  7614  0543                     _USBDeviceInit:	
  7615                           
  7616                           ;usb_device.c: 302: uint8_t i;
  7617                           ;usb_device.c: 304: {PIE2bits.USBIE = 0;};
  7618                           
  7619                           ;incstack = 0
  7620                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  7621  0543  0021               	movlb	1	; select bank1
  7622  0544  1112               	bcf	18,2	;volatile
  7623                           
  7624                           ;usb_device.c: 307: {UEIR = 0;};
  7625  0545  003D               	movlb	29	; select bank29
  7626  0546  0193               	clrf	19	;volatile
  7627                           
  7628                           ;usb_device.c: 310: {UIR = 0;};
  7629  0547  0190               	clrf	16	;volatile
  7630                           
  7631                           ;usb_device.c: 313: UEP0 = 0;
  7632  0548  0198               	clrf	24	;volatile
  7633                           
  7634                           ;usb_device.c: 315: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 0
      +                          ; };
  7635  0549  300E               	movlw	14
  7636  054A  00F3               	movwf	USBDeviceInit@p+1
  7637  054B  3099               	movlw	153
  7638  054C  00F2               	movwf	USBDeviceInit@p
  7639  054D  01F4               	clrf	USBDeviceInit@i_1881
  7640  054E                     l2821:	
  7641  054E  0872               	movf	USBDeviceInit@p,w
  7642  054F  0086               	movwf	6
  7643  0550  0873               	movf	USBDeviceInit@p+1,w
  7644  0551  0087               	movwf	7
  7645  0552  0181               	clrf	1
  7646  0553  0AF2               	incf	USBDeviceInit@p,f
  7647  0554  1903               	skipnz
  7648  0555  0AF3               	incf	USBDeviceInit@p+1,f
  7649  0556  0AF4               	incf	USBDeviceInit@i_1881,f
  7650  0557  1903               	btfsc	3,2
  7651  0558  2D4E               	goto	l2821
  7652                           
  7653                           ;usb_device.c: 317: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7654  0559  3016               	movlw	22
  7655  055A  003D               	movlb	29	; select bank29
  7656  055B  27C8  3180         	fcall	PL258	;call to abstracted procedure
  7657                           
  7658                           ;usb_device.c: 320: ;
  7659                           ;usb_device.c: 323: ;
  7660                           ;usb_device.c: 326: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  7661  055D  01F5               	clrf	USBDeviceInit@i
  7662  055E                     l2837:	
  7663                           
  7664                           ;usb_device.c: 327: {
  7665                           ;usb_device.c: 328: BDT[i].Val = 0x00;
  7666  055E  0875               	movf	USBDeviceInit@i,w
  7667  055F  0709               	addwf	9,w
  7668  0560  0709               	addwf	9,w
  7669  0561  3E20               	addlw	32
  7670  0562  0086               	movwf	6
  7671  0563  3000               	movlw	0
  7672  0564  0187               	clrf	7
  7673  0565  3FC0               	movwi [0]fsr1
  7674  0566  3FC1               	movwi [1]fsr1
  7675  0567  3FC2               	movwi [2]fsr1
  7676  0568  3FC3               	movwi [3]fsr1
  7677  0569  3008               	movlw	8
  7678  056A  0AF5               	incf	USBDeviceInit@i,f
  7679  056B  0275               	subwf	USBDeviceInit@i,w
  7680  056C  1C03               	skipc
  7681  056D  2D5E               	goto	l2837
  7682                           
  7683                           ;usb_device.c: 329: }
  7684                           ;usb_device.c: 332: UCONbits.PPBRST = 1;
  7685  056E  003D               	movlb	29	; select bank29
  7686  056F  170E               	bsf	14,6	;volatile
  7687                           
  7688                           ;usb_device.c: 335: UADDR = 0x00;
  7689  0570  0196               	clrf	22	;volatile
  7690                           
  7691                           ;usb_device.c: 338: UCONbits.PKTDIS = 0;
  7692  0571  120E               	bcf	14,4	;volatile
  7693                           
  7694                           ;usb_device.c: 341: UCONbits.PPBRST = 0;
  7695  0572  130E               	bcf	14,6	;volatile
  7696  0573                     l2849:	
  7697                           
  7698                           ;usb_device.c: 345: {
  7699                           ;usb_device.c: 346: (UIR &= 0xF7);
  7700  0573  1190               	bcf	16,3	;volatile
  7701                           
  7702                           ;usb_device.c: 348: inPipes[0].info.Val = 0;
  7703  0574  0020               	movlb	0	; select bank0
  7704  0575  01DD               	clrf	_inPipes+2
  7705                           
  7706                           ;usb_device.c: 349: outPipes[0].info.Val = 0;
  7707  0576  0022               	movlb	2	; select bank2
  7708  0577  01C9               	clrf	(_outPipes^(0+256)+2)
  7709                           
  7710                           ;usb_device.c: 350: outPipes[0].wCount.Val = 0;
  7711  0578  01CA               	clrf	(_outPipes^(0+256)+3)
  7712  0579  01CB               	clrf	((_outPipes+1)^(0+256)+3)
  7713                           
  7714                           ;usb_device.c: 351: }while(UIRbits.TRNIF == 1);
  7715  057A  003D               	movlb	29	; select bank29
  7716  057B  1990               	btfsc	16,3	;volatile
  7717  057C  2D73               	goto	l2849
  7718                           
  7719                           ;usb_device.c: 355: USBStatusStageEnabledFlag1 = 1;
  7720  057D  3001               	movlw	1
  7721  057E  0021               	movlb	1	; select bank1
  7722  057F  00E2               	movwf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  7723                           
  7724                           ;usb_device.c: 356: USBStatusStageEnabledFlag2 = 1;
  7725  0580  00E3               	movwf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  7726                           
  7727                           ;usb_device.c: 358: USBDeferINDataStagePackets = 0;
  7728  0581  01E0               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  7729                           
  7730                           ;usb_device.c: 359: USBDeferOUTDataStagePackets = 0;
  7731  0582  01E1               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  7732                           
  7733                           ;usb_device.c: 360: USBBusIsSuspended = 0;
  7734  0583  0022               	movlb	2	; select bank2
  7735  0584  01D7               	clrf	_USBBusIsSuspended^(0+256)
  7736                           
  7737                           ;usb_device.c: 364: for(i = 0; i < (uint8_t)(1+1u); i++)
  7738  0585  01F5               	clrf	USBDeviceInit@i
  7739  0586                     l2865:	
  7740                           
  7741                           ;usb_device.c: 365: {
  7742                           ;usb_device.c: 366: pBDTEntryIn[i] = 0u;
  7743  0586  0875               	movf	USBDeviceInit@i,w
  7744  0587  3E52               	addlw	_pBDTEntryIn& (0+255)
  7745  0588  0086               	movwf	6
  7746  0589  0187               	clrf	7
  7747  058A  0181               	clrf	1
  7748                           
  7749                           ;usb_device.c: 367: pBDTEntryOut[i] = 0u;
  7750  058B  0875               	movf	USBDeviceInit@i,w
  7751  058C  3E53               	addlw	_pBDTEntryOut& (0+255)
  7752  058D  0086               	movwf	6
  7753  058E  3001               	movlw	1	; select bank2/3
  7754  058F  0087               	movwf	7
  7755  0590  0181               	clrf	1
  7756                           
  7757                           ;usb_device.c: 368: ep_data_in[i].Val = 0u;
  7758  0591  0875               	movf	USBDeviceInit@i,w
  7759  0592  3E4D               	addlw	_ep_data_in& (0+255)
  7760  0593  0086               	movwf	6
  7761  0594  0181               	clrf	1
  7762                           
  7763                           ;usb_device.c: 369: ep_data_out[i].Val = 0u;
  7764  0595  0875               	movf	USBDeviceInit@i,w
  7765  0596  3E4F               	addlw	_ep_data_out& (0+255)
  7766  0597  0086               	movwf	6
  7767  0598  3002               	movlw	2
  7768  0599  0181               	clrf	1
  7769  059A  0AF5               	incf	USBDeviceInit@i,f
  7770  059B  0275               	subwf	USBDeviceInit@i,w
  7771  059C  1C03               	skipc
  7772  059D  2D86               	goto	l2865
  7773                           
  7774                           ;usb_device.c: 370: }
  7775                           ;usb_device.c: 373: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7776  059E  3028               	movlw	40
  7777  059F  0020               	movlb	0	; select bank0
  7778  05A0  00D2               	movwf	_pBDTEntryIn
  7779                           
  7780                           ;usb_device.c: 375: UEP0 = 0x06|0x10;
  7781  05A1  3016               	movlw	22
  7782  05A2  003D               	movlb	29	; select bank29
  7783  05A3  0098               	movwf	24	;volatile
  7784                           
  7785                           ;usb_device.c: 377: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7786  05A4  3040               	movlw	64
  7787  05A5  00F0               	movwf	??_USBDeviceInit
  7788  05A6  01F1               	clrf	??_USBDeviceInit+1
  7789  05A7  0020               	movlb	0	; select bank0
  7790  05A8  00A2               	movwf	34	;volatile
  7791  05A9  0871               	movf	??_USBDeviceInit+1,w
  7792  05AA  00A3               	movwf	35	;volatile
  7793                           
  7794                           ;usb_device.c: 378: BDT[0].CNT = 8;
  7795  05AB  3008               	movlw	8
  7796  05AC  00A1               	movwf	33	;volatile
  7797                           
  7798                           ;usb_device.c: 379: BDT[0].STAT.Val = 0x00|0x04;
  7799  05AD  3004               	movlw	4
  7800  05AE  00A0               	movwf	32	;volatile
  7801                           
  7802                           ;usb_device.c: 380: BDT[0].STAT.Val |= 0x80;
  7803  05AF  17A0               	bsf	32,7	;volatile
  7804                           
  7805                           ;usb_device.c: 385: USB1msTickCount = 0;
  7806  05B0  0021               	movlb	1	; select bank1
  7807  05B1  01EE               	clrf	_USBActiveConfiguration^(0+128)
  7808                           
  7809                           ;usb_device.c: 386: USBTicksSinceSuspendEnd = 0;
  7810  05B2  0022               	movlb	2	; select bank2
  7811  05B3  01D8               	clrf	_USBTicksSinceSuspendEnd^(0+256)
  7812                           
  7813                           ;usb_device.c: 389: USBDeviceState = DETACHED_STATE;
  7814  05B4  0020               	movlb	0	; select bank0
  7815  05B5  01D5               	clrf	_USBDeviceState
  7816  05B6  0008               	return
  7817  05B7                     __end_of_USBDeviceInit:	
  7818  05B7                     __ptext20:	
  7819 ;; *************** function _USBWakeFromSuspend *****************
  7820 ;; Defined at:
  7821 ;;		line 2323 in file "../framework/usb/usb_device.c"
  7822 ;; Parameters:    Size  Location     Type
  7823 ;;		None
  7824 ;; Auto vars:     Size  Location     Type
  7825 ;;		None
  7826 ;; Return value:  Size  Location     Type
  7827 ;;		None               void
  7828 ;; Registers used:
  7829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7830 ;; Tracked objects:
  7831 ;;		On entry : 17F/1D
  7832 ;;		On exit  : 17F/2
  7833 ;;		Unchanged: FFE80/0
  7834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7839 ;;Total ram usage:        0 bytes
  7840 ;; Hardware stack levels used:    1
  7841 ;; Hardware stack levels required when called:    5
  7842 ;; This function calls:
  7843 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7844 ;; This function is called by:
  7845 ;;		_USBDeviceTasks
  7846 ;; This function uses a non-reentrant model
  7847 ;;
  7848                           
  7849                           
  7850                           ;psect for function _USBWakeFromSuspend
  7851  05B7                     _USBWakeFromSuspend:	
  7852                           
  7853                           ;usb_device.c: 2324: USBBusIsSuspended = 0;
  7854                           
  7855                           ;incstack = 0
  7856                           ; Regs used in _USBWakeFromSuspend: [allreg]
  7857  05B7  0022               	movlb	2	; select bank2
  7858  05B8  3074               	movlw	116
  7859  05B9  01D7               	clrf	_USBBusIsSuspended^(0+256)
  7860                           
  7861                           ;usb_device.c: 2330: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  7862  05BA  278E  3180         	fcall	PL232	;call to abstracted procedure
  7863  05BC  2516  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7864                           
  7865                           ;usb_device.c: 2337: UCONbits.SUSPND = 0;
  7866  05BE  003D               	movlb	29	; select bank29
  7867  05BF  108E               	bcf	14,1	;volatile
  7868                           
  7869                           ;usb_device.c: 2342: UIEbits.ACTVIE = 0;
  7870  05C0  1112               	bcf	18,2	;volatile
  7871  05C1                     l847:	
  7872                           ;usb_device.c: 2360: while(UIRbits.ACTVIF)
  7873                           
  7874  05C1  1D10               	btfss	16,2	;volatile
  7875  05C2  2DC5               	goto	l3373
  7876                           
  7877                           ;usb_device.c: 2362: {
  7878                           ;usb_device.c: 2363: (UIR &= 0xFB);
  7879  05C3  1110               	bcf	16,2	;volatile
  7880  05C4  2DC1               	goto	l847
  7881  05C5                     l3373:	
  7882                           
  7883                           ;usb_device.c: 2364: }
  7884                           ;usb_device.c: 2366: USBTicksSinceSuspendEnd = 0;
  7885  05C5  0022               	movlb	2	; select bank2
  7886  05C6  01D8               	clrf	_USBTicksSinceSuspendEnd^(0+256)
  7887  05C7  0008               	return
  7888  05C8                     __end_of_USBWakeFromSuspend:	
  7889  05C8                     __ptext19:	
  7890 ;; *************** function _USBSuspend *****************
  7891 ;; Defined at:
  7892 ;;		line 2265 in file "../framework/usb/usb_device.c"
  7893 ;; Parameters:    Size  Location     Type
  7894 ;;		None
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;		None
  7897 ;; Return value:  Size  Location     Type
  7898 ;;		None               void
  7899 ;; Registers used:
  7900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7901 ;; Tracked objects:
  7902 ;;		On entry : 17F/1D
  7903 ;;		On exit  : 160/0
  7904 ;;		Unchanged: FFE80/0
  7905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7910 ;;Total ram usage:        0 bytes
  7911 ;; Hardware stack levels used:    1
  7912 ;; Hardware stack levels required when called:    5
  7913 ;; This function calls:
  7914 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7915 ;; This function is called by:
  7916 ;;		_USBDeviceTasks
  7917 ;; This function uses a non-reentrant model
  7918 ;;
  7919                           
  7920                           
  7921                           ;psect for function _USBSuspend
  7922  05C8                     _USBSuspend:	
  7923                           
  7924                           ;usb_device.c: 2289: UIEbits.ACTVIE = 1;
  7925                           
  7926                           ;incstack = 0
  7927                           ; Regs used in _USBSuspend: [allreg]
  7928  05C8  1512               	bsf	18,2	;volatile
  7929                           
  7930                           ;usb_device.c: 2290: (UIR &= 0xEF);
  7931  05C9  1210               	bcf	16,4	;volatile
  7932                           
  7933                           ;usb_device.c: 2293: UCONbits.SUSPND = 1;
  7934  05CA  148E               	bsf	14,1	;volatile
  7935                           
  7936                           ;usb_device.c: 2296: USBBusIsSuspended = 1;
  7937  05CB  0022               	movlb	2	; select bank2
  7938  05CC  3075               	movlw	117
  7939  05CD  01D7               	clrf	_USBBusIsSuspended^(0+256)
  7940  05CE  0AD7               	incf	_USBBusIsSuspended^(0+256),f
  7941                           
  7942                           ;usb_device.c: 2297: USBTicksSinceSuspendEnd = 0;
  7943  05CF  01D8               	clrf	_USBTicksSinceSuspendEnd^(0+256)
  7944                           
  7945                           ;usb_device.c: 2304: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  7946  05D0  278E  3180         	fcall	PL232	;call to abstracted procedure
  7947  05D2  2D16               	ljmp	l3077
  7948  05D3                     __end_of_USBSuspend:	
  7949  05D3                     __ptext18:	
  7950 ;; *************** function _USBIncrement1msInternalTimers *****************
  7951 ;; Defined at:
  7952 ;;		line 3051 in file "../framework/usb/usb_device.c"
  7953 ;; Parameters:    Size  Location     Type
  7954 ;;		None
  7955 ;; Auto vars:     Size  Location     Type
  7956 ;;		None
  7957 ;; Return value:  Size  Location     Type
  7958 ;;		None               void
  7959 ;; Registers used:
  7960 ;;		wreg, status,2, status,0
  7961 ;; Tracked objects:
  7962 ;;		On entry : 17F/1D
  7963 ;;		On exit  : 17F/2
  7964 ;;		Unchanged: FFE80/0
  7965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7970 ;;Total ram usage:        0 bytes
  7971 ;; Hardware stack levels used:    1
  7972 ;; Hardware stack levels required when called:    1
  7973 ;; This function calls:
  7974 ;;		Nothing
  7975 ;; This function is called by:
  7976 ;;		_USBDeviceTasks
  7977 ;; This function uses a non-reentrant model
  7978 ;;
  7979                           
  7980                           
  7981                           ;psect for function _USBIncrement1msInternalTimers
  7982  05D3                     _USBIncrement1msInternalTimers:	
  7983                           
  7984                           ;usb_device.c: 3059: if(USBBusIsSuspended == 0)
  7985                           
  7986                           ;incstack = 0
  7987                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  7988  05D3  0022               	movlb	2	; select bank2
  7989  05D4  08D7               	movf	_USBBusIsSuspended^(0+256),f
  7990  05D5  1903               	btfsc	3,2
  7991                           
  7992                           ;usb_device.c: 3060: {
  7993                           ;usb_device.c: 3061: USBTicksSinceSuspendEnd++;
  7994  05D6  0FD8               	incfsz	_USBTicksSinceSuspendEnd^(0+256),f
  7995                           
  7996                           ;usb_device.c: 3063: if(USBTicksSinceSuspendEnd == 0)
  7997  05D7  0008               	return
  7998                           
  7999                           ;usb_device.c: 3064: {
  8000                           ;usb_device.c: 3065: USBTicksSinceSuspendEnd = 255;
  8001  05D8  30FF               	movlw	255
  8002  05D9  00D8               	movwf	_USBTicksSinceSuspendEnd^(0+256)
  8003  05DA  0008               	return
  8004  05DB                     __end_of_USBIncrement1msInternalTimers:	
  8005  05DB                     __ptext17:	
  8006 ;; *************** function _USBStallHandler *****************
  8007 ;; Defined at:
  8008 ;;		line 2222 in file "../framework/usb/usb_device.c"
  8009 ;; Parameters:    Size  Location     Type
  8010 ;;		None
  8011 ;; Auto vars:     Size  Location     Type
  8012 ;;		None
  8013 ;; Return value:  Size  Location     Type
  8014 ;;		None               void
  8015 ;; Registers used:
  8016 ;;		wreg, fsr1l, fsr1h
  8017 ;; Tracked objects:
  8018 ;;		On entry : 17F/1D
  8019 ;;		On exit  : 17F/1D
  8020 ;;		Unchanged: FFE80/0
  8021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8026 ;;Total ram usage:        0 bytes
  8027 ;; Hardware stack levels used:    1
  8028 ;; Hardware stack levels required when called:    1
  8029 ;; This function calls:
  8030 ;;		Nothing
  8031 ;; This function is called by:
  8032 ;;		_USBDeviceTasks
  8033 ;; This function uses a non-reentrant model
  8034 ;;
  8035                           
  8036                           
  8037                           ;psect for function _USBStallHandler
  8038  05DB                     _USBStallHandler:	
  8039                           
  8040                           ;usb_device.c: 2233: if(UEP0bits.EPSTALL == 1)
  8041                           
  8042                           ;incstack = 0
  8043                           ; Regs used in _USBStallHandler: [wregfsr1]
  8044  05DB  1C18               	btfss	24,0	;volatile
  8045  05DC  2DF4               	goto	l3431
  8046                           
  8047                           ;usb_device.c: 2234: {
  8048                           ;usb_device.c: 2236: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8049  05DD  0020               	movlb	0	; select bank0
  8050  05DE  0858               	movf	_pBDTEntryEP0OutCurrent,w
  8051  05DF  0086               	movwf	6
  8052  05E0  0187               	clrf	7
  8053  05E1  0801               	movf	1,w
  8054  05E2  3A80               	xorlw	128
  8055  05E3  1D03               	skipz
  8056  05E4  2DF2               	goto	l3429
  8057  05E5  0852               	movf	_pBDTEntryIn,w
  8058  05E6  0086               	movwf	6
  8059  05E7  0801               	movf	1,w
  8060  05E8  3A84               	xorlw	132
  8061  05E9  1D03               	skipz
  8062  05EA  2DF2               	goto	l3429
  8063                           
  8064                           ;usb_device.c: 2237: {
  8065                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8066  05EB  0858               	movf	_pBDTEntryEP0OutCurrent,w
  8067  05EC  0086               	movwf	6
  8068  05ED  300C               	movlw	12
  8069  05EE  0081               	movwf	1
  8070                           
  8071                           ;usb_device.c: 2240: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8072  05EF  0858               	movf	_pBDTEntryEP0OutCurrent,w
  8073  05F0  0086               	movwf	6
  8074  05F1  1781               	bsf	1,7
  8075  05F2                     l3429:	
  8076                           
  8077                           ;usb_device.c: 2241: }
  8078                           ;usb_device.c: 2242: UEP0bits.EPSTALL = 0;
  8079  05F2  003D               	movlb	29	; select bank29
  8080  05F3  1018               	bcf	24,0	;volatile
  8081  05F4                     l3431:	
  8082                           
  8083                           ;usb_device.c: 2243: }
  8084                           ;usb_device.c: 2245: (UIR &= 0xDF);
  8085  05F4  1290               	bcf	16,5	;volatile
  8086  05F5  0008               	return
  8087  05F6                     __end_of_USBStallHandler:	
  8088  05F6                     __ptext16:	
  8089 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  8090 ;; Defined at:
  8091 ;;		line 1436 in file "../framework/usb/usb_device.c"
  8092 ;; Parameters:    Size  Location     Type
  8093 ;;		None
  8094 ;; Auto vars:     Size  Location     Type
  8095 ;;		None
  8096 ;; Return value:  Size  Location     Type
  8097 ;;		None               void
  8098 ;; Registers used:
  8099 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8100 ;; Tracked objects:
  8101 ;;		On entry : 0/1
  8102 ;;		On exit  : 1E/0
  8103 ;;		Unchanged: FFFE0/0
  8104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8107 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8108 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8109 ;;Total ram usage:        2 bytes
  8110 ;; Hardware stack levels used:    1
  8111 ;; Hardware stack levels required when called:    1
  8112 ;; This function calls:
  8113 ;;		Nothing
  8114 ;; This function is called by:
  8115 ;;		_USBDeviceTasks
  8116 ;;		_USBCtrlEPServiceComplete
  8117 ;;		_USBCtrlTrfRxService
  8118 ;; This function uses a non-reentrant model
  8119 ;;
  8120                           
  8121                           
  8122                           ;psect for function _USBCtrlEPAllowStatusStage
  8123  05F6                     _USBCtrlEPAllowStatusStage:	
  8124  05F6                     l3387:	
  8125                           ;incstack = 0
  8126                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  8127                           
  8128                           
  8129                           ;usb_device.c: 1442: if(USBStatusStageEnabledFlag1 == 0)
  8130  05F6  0021               	movlb	1	; select bank1
  8131  05F7  08E2               	movf	_USBStatusStageEnabledFlag1^(0+128),f
  8132  05F8  1D03               	skipz
  8133  05F9  0008               	return
  8134                           
  8135                           ;usb_device.c: 1443: {
  8136                           ;usb_device.c: 1444: USBStatusStageEnabledFlag1 = 1;
  8137  05FA  3001               	movlw	1
  8138  05FB  00E2               	movwf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  8139                           
  8140                           ;usb_device.c: 1445: if(USBStatusStageEnabledFlag2 == 0)
  8141  05FC  08E3               	movf	_USBStatusStageEnabledFlag2^(0+128),f
  8142  05FD  1D03               	skipz
  8143  05FE  0008               	return
  8144                           
  8145                           ;usb_device.c: 1446: {
  8146                           ;usb_device.c: 1447: USBStatusStageEnabledFlag2 = 1;
  8147  05FF  00E3               	movwf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  8148                           
  8149                           ;usb_device.c: 1451: if(controlTransferState == 2)
  8150  0600  0020               	movlb	0	; select bank0
  8151  0601  0857               	movf	_controlTransferState,w
  8152  0602  3A02               	xorlw	2
  8153  0603  1D03               	skipz
  8154  0604  2E0E               	goto	l3401
  8155                           
  8156                           ;usb_device.c: 1452: {
  8157                           ;usb_device.c: 1453: pBDTEntryIn[0]->CNT = 0;
  8158  0605  0A52               	incf	_pBDTEntryIn,w
  8159  0606  0086               	movwf	6
  8160  0607  0187               	clrf	7
  8161  0608  0181               	clrf	1
  8162                           
  8163                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8164  0609  0852               	movf	_pBDTEntryIn,w
  8165  060A  0086               	movwf	6
  8166  060B  3048               	movlw	72
  8167                           
  8168                           ;usb_device.c: 1455: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8169                           
  8170                           ;usb_device.c: 1456: }
  8171  060C  318F  2F6C         	ljmp	PL226	;call to abstracted procedure
  8172  060E                     l3401:	
  8173                           
  8174                           ;usb_device.c: 1457: else if(controlTransferState == 1)
  8175  060E  0B57               	decfsz	_controlTransferState,w
  8176  060F  0008               	return
  8177                           
  8178                           ;usb_device.c: 1458: {
  8179                           ;usb_device.c: 1459: BothEP0OutUOWNsSet = 0;
  8180  0610  0022               	movlb	2	; select bank2
  8181  0611  01D5               	clrf	_BothEP0OutUOWNsSet^(0+256)
  8182                           
  8183                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->CNT = 8;
  8184  0612  0020               	movlb	0	; select bank0
  8185  0613  0A58               	incf	_pBDTEntryEP0OutCurrent,w
  8186  0614  0086               	movwf	6
  8187  0615  3008               	movlw	8
  8188  0616  0187               	clrf	7
  8189  0617  0081               	movwf	1
  8190                           
  8191                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8192  0618  3040               	movlw	64
  8193  0619  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8194  061A  01F1               	clrf	??_USBCtrlEPAllowStatusStage+1
  8195  061B  0858               	movf	_pBDTEntryEP0OutCurrent,w
  8196  061C  27BC  3180         	fcall	PL250	;call to abstracted procedure
  8197                           
  8198                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  8199  061E  0858               	movf	_pBDTEntryEP0OutCurrent,w
  8200  061F  0086               	movwf	6
  8201  0620  3004               	movlw	4
  8202  0621  0081               	movwf	1
  8203                           
  8204                           ;usb_device.c: 1467: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8205  0622  0858               	movf	_pBDTEntryEP0OutCurrent,w
  8206  0623  0086               	movwf	6
  8207  0624  1781               	bsf	1,7
  8208                           
  8209                           ;usb_device.c: 1468: BothEP0OutUOWNsSet = 1;
  8210  0625  0022               	movlb	2	; select bank2
  8211  0626  01D5               	clrf	_BothEP0OutUOWNsSet^(0+256)
  8212  0627  0AD5               	incf	_BothEP0OutUOWNsSet^(0+256),f
  8213                           
  8214                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->CNT = 8;
  8215  0628  0020               	movlb	0	; select bank0
  8216  0629  0A59               	incf	_pBDTEntryEP0OutNext,w
  8217  062A  0086               	movwf	6
  8218  062B  3008               	movlw	8
  8219  062C  0081               	movwf	1
  8220                           
  8221                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8222  062D  3040               	movlw	64
  8223  062E  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8224  062F  01F1               	clrf	??_USBCtrlEPAllowStatusStage+1
  8225  0630  0859               	movf	_pBDTEntryEP0OutNext,w
  8226  0631  27BC               	fcall	PL250	;call to abstracted procedure
  8227                           
  8228                           ;usb_device.c: 1474: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  8229  0632  0859               	movf	_pBDTEntryEP0OutNext,w
  8230  0633  0086               	movwf	6
  8231  0634  3080               	movlw	128
  8232  0635  0081               	movwf	1
  8233  0636  0008               	return
  8234  0637                     __end_of_USBCtrlEPAllowStatusStage:	
  8235  0637                     __ptext2:	
  8236 ;; *************** function _USBCtrlEPService *****************
  8237 ;; Defined at:
  8238 ;;		line 2392 in file "../framework/usb/usb_device.c"
  8239 ;; Parameters:    Size  Location     Type
  8240 ;;		None
  8241 ;; Auto vars:     Size  Location     Type
  8242 ;;  setup_cnt       1   11[BANK0 ] unsigned char 
  8243 ;; Return value:  Size  Location     Type
  8244 ;;		None               void
  8245 ;; Registers used:
  8246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8247 ;; Tracked objects:
  8248 ;;		On entry : 17F/1
  8249 ;;		On exit  : 17C/0
  8250 ;;		Unchanged: FFE80/0
  8251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8253 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8254 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8255 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8256 ;;Total ram usage:        3 bytes
  8257 ;; Hardware stack levels used:    1
  8258 ;; Hardware stack levels required when called:    8
  8259 ;; This function calls:
  8260 ;;		_USBCtrlTrfSetupHandler
  8261 ;;		_USBCtrlTrfOutHandler
  8262 ;;		_USBCtrlTrfInHandler
  8263 ;; This function is called by:
  8264 ;;		_USBDeviceTasks
  8265 ;; This function uses a non-reentrant model
  8266 ;;
  8267                           
  8268                           
  8269                           ;psect for function _USBCtrlEPService
  8270  0637                     _USBCtrlEPService:	
  8271                           
  8272                           ;usb_device.c: 2397: USBStatusStageTimeoutCounter = (uint8_t)45;
  8273                           
  8274                           ;incstack = 0
  8275                           ; Regs used in _USBCtrlEPService: [allreg]
  8276  0637  302D               	movlw	45
  8277  0638  00E4               	movwf	_USBStatusStageTimeoutCounter^(0+128)
  8278                           
  8279                           ;usb_device.c: 2401: if((USTATcopy.Val & ~0x02) == 0x00)
  8280  0639  0020               	movlb	0	; select bank0
  8281  063A  0860               	movf	_USTATcopy,w
  8282  063B  39FD               	andlw	253
  8283  063C  1D03               	btfss	3,2
  8284  063D  2E7E               	goto	l3465
  8285                           
  8286                           ;usb_device.c: 2402: {
  8287                           ;usb_device.c: 2405: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8288  063E  3660               	lsrf	_USTATcopy,w
  8289  063F  393F               	andlw	63
  8290  0640  0709               	addwf	9,w
  8291  0641  0709               	addwf	9,w
  8292  0642  3E20               	addlw	32
  8293  0643  00D8               	movwf	_pBDTEntryEP0OutCurrent
  8294                           
  8295                           ;usb_device.c: 2413: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8296  0644  00D9               	movwf	_pBDTEntryEP0OutNext
  8297                           
  8298                           ;usb_device.c: 2415: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8299  0645  3004               	movlw	4
  8300  0646  06D9               	xorwf	_pBDTEntryEP0OutNext,f
  8301                           
  8302                           ;usb_device.c: 2418: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8303  0647  0858               	movf	_pBDTEntryEP0OutCurrent,w
  8304  0648  0086               	movwf	6
  8305  0649  0187               	clrf	7
  8306  064A  0C01               	rrf	1,w
  8307  064B  0C89               	rrf	9,f
  8308  064C  390F               	andlw	15
  8309  064D  3A0D               	xorlw	13
  8310  064E  1D03               	skipz
  8311  064F  2E7C               	goto	l3463
  8312                           
  8313                           ;usb_device.c: 2419: {
  8314                           ;usb_device.c: 2420: unsigned char setup_cnt;
  8315                           ;usb_device.c: 2426: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  8316  0650  01EC               	clrf	USBCtrlEPService@setup_cnt
  8317  0651                     l3451:	
  8318                           
  8319                           ;usb_device.c: 2427: {
  8320                           ;usb_device.c: 2428: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
  8321  0651  086C               	movf	USBCtrlEPService@setup_cnt,w
  8322  0652  3E40               	addlw	64
  8323  0653  0086               	movwf	6
  8324  0654  0187               	clrf	7
  8325  0655  0858               	movf	_pBDTEntryEP0OutCurrent,w
  8326  0656  3E02               	addlw	2
  8327  0657  0084               	movwf	4
  8328  0658  0185               	clrf	5
  8329  0659  3F00               	moviw [0]fsr0
  8330  065A  00EA               	movwf	??_USBCtrlEPService
  8331  065B  3F01               	moviw [1]fsr0
  8332  065C  00EB               	movwf	??_USBCtrlEPService+1
  8333  065D  086A               	movf	??_USBCtrlEPService,w
  8334  065E  0084               	movwf	4
  8335  065F  086B               	movf	??_USBCtrlEPService+1,w
  8336  0660  0085               	movwf	5
  8337  0661  0800               	movf	0,w
  8338  0662  0081               	movwf	1
  8339                           
  8340                           ;usb_device.c: 2429: pBDTEntryEP0OutCurrent->ADR++;
  8341  0663  0858               	movf	_pBDTEntryEP0OutCurrent,w
  8342  0664  3E02               	addlw	2
  8343  0665  0086               	movwf	6
  8344  0666  3001               	movlw	1
  8345  0667  0781               	addwf	1,f
  8346  0668  3141               	addfsr 1,1
  8347  0669  1803               	skipnc
  8348  066A  0A81               	incf	1,f
  8349  066B  3008               	movlw	8
  8350  066C  0AEC               	incf	USBCtrlEPService@setup_cnt,f
  8351  066D  026C               	subwf	USBCtrlEPService@setup_cnt,w
  8352  066E  1C03               	skipc
  8353  066F  2E51               	goto	l3451
  8354                           
  8355                           ;usb_device.c: 2430: }
  8356                           ;usb_device.c: 2431: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8357  0670  3040               	movlw	64
  8358  0671  00EA               	movwf	??_USBCtrlEPService
  8359  0672  01EB               	clrf	??_USBCtrlEPService+1
  8360  0673  0858               	movf	_pBDTEntryEP0OutCurrent,w
  8361  0674  3E02               	addlw	2
  8362  0675  0086               	movwf	6
  8363  0676  0187               	clrf	7
  8364  0677  086A               	movf	??_USBCtrlEPService,w
  8365  0678  3FC0               	movwi [0]fsr1
  8366  0679  086B               	movf	??_USBCtrlEPService+1,w
  8367  067A  3FC1               	movwi [1]fsr1
  8368                           
  8369                           ;usb_device.c: 2434: USBCtrlTrfSetupHandler();
  8370  067B  2EE8               	ljmp	l3747
  8371  067C                     l3463:	
  8372                           ;usb_device.c: 2435: }
  8373                           
  8374                           
  8375                           ;usb_device.c: 2436: else
  8376                           ;usb_device.c: 2437: {
  8377                           ;usb_device.c: 2439: USBCtrlTrfOutHandler();
  8378  067C  318F  2F71         	ljmp	l3773
  8379  067E                     l3465:	
  8380                           
  8381                           ;usb_device.c: 2442: else if((USTATcopy.Val & ~0x02) == 0x04)
  8382  067E  30FD               	movlw	253
  8383  067F  0560               	andwf	_USTATcopy,w
  8384  0680  00EA               	movwf	??_USBCtrlEPService
  8385  0681  3A04               	xorlw	4
  8386  0682  1D03               	skipz
  8387  0683  0008               	return
  8388                           
  8389                           ;usb_device.c: 2443: {
  8390                           ;usb_device.c: 2446: USBCtrlTrfInHandler();
  8391  0684  318E  2E50         	ljmp	l3785
  8392  0686                     __end_of_USBCtrlEPService:	
  8393  0686                     __ptext25:	
  8394 ;; *************** function _APP_DeviceAudioMIDISOFHandler *****************
  8395 ;; Defined at:
  8396 ;;		line 54 in file "../src/app_device_audio_midi.c"
  8397 ;; Parameters:    Size  Location     Type
  8398 ;;		None
  8399 ;; Auto vars:     Size  Location     Type
  8400 ;;		None
  8401 ;; Return value:  Size  Location     Type
  8402 ;;		None               void
  8403 ;; Registers used:
  8404 ;;		wreg, status,2, status,0
  8405 ;; Tracked objects:
  8406 ;;		On entry : 0/0
  8407 ;;		On exit  : 1F/1
  8408 ;;		Unchanged: FFFE0/0
  8409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8414 ;;Total ram usage:        0 bytes
  8415 ;; Hardware stack levels used:    1
  8416 ;; Hardware stack levels required when called:    1
  8417 ;; This function calls:
  8418 ;;		Nothing
  8419 ;; This function is called by:
  8420 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8421 ;; This function uses a non-reentrant model
  8422 ;;
  8423                           
  8424                           
  8425                           ;psect for function _APP_DeviceAudioMIDISOFHandler
  8426  0686                     _APP_DeviceAudioMIDISOFHandler:	
  8427  0686                     l3105:	
  8428                           ;incstack = 0
  8429                           ; Regs used in _APP_DeviceAudioMIDISOFHandler: [wreg+status,2+status,0]
  8430                           
  8431                           
  8432                           ;app_device_audio_midi.c: 55: if(msCounter != 0) msCounter--;
  8433  0686  0021               	movlb	1	; select bank1
  8434  0687  0867               	movf	_msCounter^(0+128),w
  8435  0688  1D03               	skipz
  8436  0689  03E7               	decf	_msCounter^(0+128),f
  8437  068A  0008               	return
  8438  068B                     __end_of_APP_DeviceAudioMIDISOFHandler:	
  8439  068B                     __ptext22:	
  8440 ;; *************** function _APP_DeviceAudioMIDIInitialize *****************
  8441 ;; Defined at:
  8442 ;;		line 42 in file "../src/app_device_audio_midi.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;		None
  8445 ;; Auto vars:     Size  Location     Type
  8446 ;;		None
  8447 ;; Return value:  Size  Location     Type
  8448 ;;		None               void
  8449 ;; Registers used:
  8450 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8451 ;; Tracked objects:
  8452 ;;		On entry : 1F/0
  8453 ;;		On exit  : 1F/0
  8454 ;;		Unchanged: FFFE0/0
  8455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8460 ;;Total ram usage:        0 bytes
  8461 ;; Hardware stack levels used:    1
  8462 ;; Hardware stack levels required when called:    3
  8463 ;; This function calls:
  8464 ;;		_USBEnableEndpoint
  8465 ;;		_USBTransferOnePacket
  8466 ;; This function is called by:
  8467 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8468 ;; This function uses a non-reentrant model
  8469 ;;
  8470                           
  8471                           
  8472                           ;psect for function _APP_DeviceAudioMIDIInitialize
  8473  068B                     _APP_DeviceAudioMIDIInitialize:	
  8474  068B                     l3109:	
  8475                           ;incstack = 0
  8476                           ; Regs used in _APP_DeviceAudioMIDIInitialize: [allreg]
  8477                           
  8478                           
  8479                           ;app_device_audio_midi.c: 43: USBTxHandle = (0);
  8480  068B  0021               	movlb	1	; select bank1
  8481  068C  01E5               	clrf	_USBTxHandle^(0+128)
  8482                           
  8483                           ;app_device_audio_midi.c: 44: USBRxHandle = (0);
  8484  068D  0020               	movlb	0	; select bank0
  8485  068E  303C               	movlw	60
  8486  068F  01D6               	clrf	_USBRxHandle
  8487                           
  8488                           ;app_device_audio_midi.c: 45: pitch = 0x3C;
  8489  0690  0021               	movlb	1	; select bank1
  8490  0691  00E9               	movwf	_pitch^(0+128)
  8491  0692  301E               	movlw	30
  8492                           
  8493                           ;app_device_audio_midi.c: 46: sentNoteOff = 1;
  8494  0693  01EA               	clrf	_sentNoteOff^(0+128)
  8495  0694  0AEA               	incf	_sentNoteOff^(0+128),f
  8496                           
  8497                           ;app_device_audio_midi.c: 47: msCounter = 0;
  8498  0695  01E7               	clrf	_msCounter^(0+128)
  8499                           
  8500                           ;app_device_audio_midi.c: 49: USBEnableEndpoint(1,0x04|0x02|0x10|0x08);
  8501  0696  00F4               	movwf	?_USBEnableEndpoint
  8502  0697  3001               	movlw	1
  8503  0698  26A2  3180         	fcall	_USBEnableEndpoint
  8504  069A  30A0               	movlw	160
  8505                           
  8506                           ;app_device_audio_midi.c: 51: USBRxHandle = USBTransferOnePacket(1,0,(uint8_t*)&Received
      +                          DataBuffer,64);
  8507  069B  01F0               	clrf	?_USBTransferOnePacket
  8508  069C  27AB  3180         	fcall	PL242	;call to abstracted procedure
  8509  069E  212A               	fcall	_USBTransferOnePacket
  8510  069F  0020               	movlb	0	; select bank0
  8511  06A0  00D6               	movwf	_USBRxHandle
  8512  06A1  0008               	return
  8513  06A2                     __end_of_APP_DeviceAudioMIDIInitialize:	
  8514  06A2                     __ptext23:	
  8515 ;; *************** function _USBEnableEndpoint *****************
  8516 ;; Defined at:
  8517 ;;		line 898 in file "../framework/usb/usb_device.c"
  8518 ;; Parameters:    Size  Location     Type
  8519 ;;  ep              1    wreg     unsigned char 
  8520 ;;  options         1    4[COMMON] unsigned char 
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;  ep              1    9[COMMON] unsigned char 
  8523 ;;  p               2    7[COMMON] PTR unsigned char 
  8524 ;;		 -> UEP0(1), 
  8525 ;; Return value:  Size  Location     Type
  8526 ;;		None               void
  8527 ;; Registers used:
  8528 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8529 ;; Tracked objects:
  8530 ;;		On entry : 1F/1
  8531 ;;		On exit  : 1F/1
  8532 ;;		Unchanged: FFFE0/0
  8533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8534 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8535 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8536 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8537 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8538 ;;Total ram usage:        6 bytes
  8539 ;; Hardware stack levels used:    1
  8540 ;; Hardware stack levels required when called:    2
  8541 ;; This function calls:
  8542 ;;		_USBConfigureEndpoint
  8543 ;; This function is called by:
  8544 ;;		_APP_DeviceAudioMIDIInitialize
  8545 ;; This function uses a non-reentrant model
  8546 ;;
  8547                           
  8548                           
  8549                           ;psect for function _USBEnableEndpoint
  8550  06A2                     _USBEnableEndpoint:	
  8551                           
  8552                           ;incstack = 0
  8553                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8554                           ;USBEnableEndpoint@ep stored from wreg
  8555  06A2  00F9               	movwf	USBEnableEndpoint@ep
  8556                           
  8557                           ;usb_device.c: 899: unsigned char* p;
  8558                           ;usb_device.c: 903: if(options & 0x04)
  8559  06A3  1D74               	btfss	USBEnableEndpoint@options,2
  8560  06A4  2EA8               	goto	l3125
  8561                           
  8562                           ;usb_device.c: 904: {
  8563                           ;usb_device.c: 905: USBConfigureEndpoint(ep, 0);
  8564  06A5  01F0               	clrf	?_USBConfigureEndpoint
  8565  06A6  26C1  3180         	fcall	_USBConfigureEndpoint
  8566  06A8                     l3125:	
  8567                           
  8568                           ;usb_device.c: 906: }
  8569                           ;usb_device.c: 907: if(options & 0x02)
  8570  06A8  1CF4               	btfss	USBEnableEndpoint@options,1
  8571  06A9  2EAE               	goto	l3129
  8572                           
  8573                           ;usb_device.c: 908: {
  8574                           ;usb_device.c: 909: USBConfigureEndpoint(ep, 1);
  8575  06AA  01F0               	clrf	?_USBConfigureEndpoint
  8576  06AB  0AF0               	incf	?_USBConfigureEndpoint,f
  8577  06AC  0879               	movf	USBEnableEndpoint@ep,w
  8578  06AD  26C1               	fcall	_USBConfigureEndpoint
  8579  06AE                     l3129:	
  8580                           
  8581                           ;usb_device.c: 910: }
  8582                           ;usb_device.c: 918: p = (unsigned char*)(&UEP0+ep);
  8583  06AE  0879               	movf	USBEnableEndpoint@ep,w
  8584  06AF  3E98               	addlw	152
  8585  06B0  00F5               	movwf	??_USBEnableEndpoint
  8586  06B1  300E               	movlw	14
  8587  06B2  01F6               	clrf	??_USBEnableEndpoint+1
  8588  06B3  3DF6               	addwfc	??_USBEnableEndpoint+1,f
  8589  06B4  0875               	movf	??_USBEnableEndpoint,w
  8590  06B5  00F7               	movwf	USBEnableEndpoint@p
  8591  06B6  0876               	movf	??_USBEnableEndpoint+1,w
  8592  06B7  00F8               	movwf	USBEnableEndpoint@p+1
  8593                           
  8594                           ;usb_device.c: 920: *p = options;
  8595  06B8  0874               	movf	USBEnableEndpoint@options,w
  8596  06B9  00F5               	movwf	??_USBEnableEndpoint
  8597  06BA  0877               	movf	USBEnableEndpoint@p,w
  8598  06BB  0086               	movwf	6
  8599  06BC  0878               	movf	USBEnableEndpoint@p+1,w
  8600  06BD  0087               	movwf	7
  8601  06BE  0875               	movf	??_USBEnableEndpoint,w
  8602  06BF  0081               	movwf	1
  8603  06C0  0008               	return
  8604  06C1                     __end_of_USBEnableEndpoint:	
  8605  06C1                     __ptext24:	
  8606 ;; *************** function _USBConfigureEndpoint *****************
  8607 ;; Defined at:
  8608 ;;		line 1563 in file "../framework/usb/usb_device.c"
  8609 ;; Parameters:    Size  Location     Type
  8610 ;;  EPNum           1    wreg     unsigned char 
  8611 ;;  direction       1    0[COMMON] unsigned char 
  8612 ;; Auto vars:     Size  Location     Type
  8613 ;;  EPNum           1    2[COMMON] unsigned char 
  8614 ;;  handle          1    3[COMMON] PTR volatile struct __BD
  8615 ;;		 -> BDT(32), 
  8616 ;; Return value:  Size  Location     Type
  8617 ;;		None               void
  8618 ;; Registers used:
  8619 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8620 ;; Tracked objects:
  8621 ;;		On entry : 1F/1
  8622 ;;		On exit  : 1F/1
  8623 ;;		Unchanged: FFFE0/0
  8624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8625 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8626 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8627 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8628 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8629 ;;Total ram usage:        4 bytes
  8630 ;; Hardware stack levels used:    1
  8631 ;; Hardware stack levels required when called:    1
  8632 ;; This function calls:
  8633 ;;		Nothing
  8634 ;; This function is called by:
  8635 ;;		_USBEnableEndpoint
  8636 ;; This function uses a non-reentrant model
  8637 ;;
  8638                           
  8639                           
  8640                           ;psect for function _USBConfigureEndpoint
  8641  06C1                     _USBConfigureEndpoint:	
  8642                           
  8643                           ;incstack = 0
  8644                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  8645                           ;USBConfigureEndpoint@EPNum stored from wreg
  8646  06C1  00F2               	movwf	USBConfigureEndpoint@EPNum
  8647                           
  8648                           ;usb_device.c: 1564: volatile BDT_ENTRY* handle;
  8649                           ;usb_device.c: 1568: handle = (volatile BDT_ENTRY*)&BDT[0];
  8650  06C2  3020               	movlw	32
  8651  06C3  00F3               	movwf	USBConfigureEndpoint@handle
  8652                           
  8653                           ;usb_device.c: 1569: handle += (4*EPNum+2*direction+0u);
  8654  06C4  0870               	movf	USBConfigureEndpoint@direction,w
  8655  06C5  00F1               	movwf	??_USBConfigureEndpoint
  8656  06C6  35F1               	lslf	??_USBConfigureEndpoint,f
  8657  06C7  0872               	movf	USBConfigureEndpoint@EPNum,w
  8658  06C8  0709               	addwf	9,w
  8659  06C9  0709               	addwf	9,w
  8660  06CA  0771               	addwf	??_USBConfigureEndpoint,w
  8661  06CB  0709               	addwf	9,w
  8662  06CC  0709               	addwf	9,w
  8663  06CD  07F3               	addwf	USBConfigureEndpoint@handle,f
  8664                           
  8665                           ;usb_device.c: 1571: handle->STAT.UOWN = 0;
  8666  06CE  0873               	movf	USBConfigureEndpoint@handle,w
  8667  06CF  0086               	movwf	6
  8668  06D0  0187               	clrf	7
  8669  06D1  1381               	bcf	1,7
  8670                           
  8671                           ;usb_device.c: 1576: if(direction == 0)
  8672  06D2  08F0               	movf	USBConfigureEndpoint@direction,f
  8673  06D3  1D03               	skipz
  8674  06D4  2ED9               	goto	l3479
  8675                           
  8676                           ;usb_device.c: 1577: {
  8677                           ;usb_device.c: 1578: pBDTEntryOut[EPNum] = handle;
  8678  06D5  0872               	movf	USBConfigureEndpoint@EPNum,w
  8679  06D6  27C3  3180         	fcall	PL254	;call to abstracted procedure
  8680  06D8  2EDD               	goto	L10
  8681  06D9                     l3479:	
  8682                           ;usb_device.c: 1579: }
  8683                           
  8684                           
  8685                           ;usb_device.c: 1580: else
  8686                           ;usb_device.c: 1581: {
  8687                           ;usb_device.c: 1582: pBDTEntryIn[EPNum] = handle;
  8688  06D9  0872               	movf	USBConfigureEndpoint@EPNum,w
  8689  06DA  3E52               	addlw	_pBDTEntryIn& (0+255)
  8690  06DB  0086               	movwf	6
  8691  06DC  0187               	clrf	7
  8692  06DD                     L10:	
  8693  06DD  0873               	movf	USBConfigureEndpoint@handle,w
  8694  06DE  0081               	movwf	1
  8695                           
  8696                           ;usb_device.c: 1583: }
  8697                           ;usb_device.c: 1586: handle->STAT.DTS = 0;
  8698  06DF  0873               	movf	USBConfigureEndpoint@handle,w
  8699  06E0  0086               	movwf	6
  8700  06E1  0187               	clrf	7
  8701  06E2  1301               	bcf	1,6
  8702                           
  8703                           ;usb_device.c: 1587: (handle+1)->STAT.DTS = 1;
  8704  06E3  0873               	movf	USBConfigureEndpoint@handle,w
  8705  06E4  3E04               	addlw	4
  8706  06E5  0086               	movwf	6
  8707  06E6  1701               	bsf	1,6
  8708  06E7  0008               	return
  8709  06E8                     __end_of_USBConfigureEndpoint:	
  8710  06E8                     __ptext6:	
  8711 ;; *************** function _USBCtrlTrfSetupHandler *****************
  8712 ;; Defined at:
  8713 ;;		line 2492 in file "../framework/usb/usb_device.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;		None
  8716 ;; Auto vars:     Size  Location     Type
  8717 ;;		None
  8718 ;; Return value:  Size  Location     Type
  8719 ;;		None               void
  8720 ;; Registers used:
  8721 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8722 ;; Tracked objects:
  8723 ;;		On entry : 1F/0
  8724 ;;		On exit  : 1E/0
  8725 ;;		Unchanged: FFFE0/0
  8726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8731 ;;Total ram usage:        0 bytes
  8732 ;; Hardware stack levels used:    1
  8733 ;; Hardware stack levels required when called:    7
  8734 ;; This function calls:
  8735 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8736 ;;		_USBCtrlEPServiceComplete
  8737 ;;		_USBCheckStdRequest
  8738 ;; This function is called by:
  8739 ;;		_USBCtrlEPService
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743                           
  8744                           ;psect for function _USBCtrlTrfSetupHandler
  8745  06E8                     _USBCtrlTrfSetupHandler:	
  8746  06E8                     l3747:	
  8747                           ;incstack = 0
  8748                           ; Regs used in _USBCtrlTrfSetupHandler: [allreg]
  8749                           
  8750                           
  8751                           ;usb_device.c: 2496: shortPacketStatus = 0;
  8752  06E8  0021               	movlb	1	; select bank1
  8753  06E9  01EB               	clrf	_shortPacketStatus^(0+128)
  8754                           
  8755                           ;usb_device.c: 2497: USBDeferStatusStagePacket = 0;
  8756  06EA  0020               	movlb	0	; select bank0
  8757  06EB  01D4               	clrf	_USBDeferStatusStagePacket	;volatile
  8758                           
  8759                           ;usb_device.c: 2498: USBDeferINDataStagePackets = 0;
  8760  06EC  0021               	movlb	1	; select bank1
  8761  06ED  01E0               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  8762                           
  8763                           ;usb_device.c: 2499: USBDeferOUTDataStagePackets = 0;
  8764  06EE  01E1               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  8765                           
  8766                           ;usb_device.c: 2500: BothEP0OutUOWNsSet = 0;
  8767  06EF  0022               	movlb	2	; select bank2
  8768  06F0  01D5               	clrf	_BothEP0OutUOWNsSet^(0+256)
  8769                           
  8770                           ;usb_device.c: 2501: controlTransferState = 0;
  8771  06F1  0020               	movlb	0	; select bank0
  8772  06F2  01D7               	clrf	_controlTransferState
  8773                           
  8774                           ;usb_device.c: 2510: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8775  06F3  0852               	movf	_pBDTEntryIn,w
  8776  06F4  0086               	movwf	6
  8777  06F5  3004               	movlw	4
  8778  06F6  0187               	clrf	7
  8779  06F7  1381               	bcf	1,7
  8780                           
  8781                           ;usb_device.c: 2511: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8782  06F8  06D2               	xorwf	_pBDTEntryIn,f
  8783                           
  8784                           ;usb_device.c: 2512: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8785  06F9  0852               	movf	_pBDTEntryIn,w
  8786  06FA  0086               	movwf	6
  8787  06FB  3004               	movlw	4
  8788  06FC  1381               	bcf	1,7
  8789                           
  8790                           ;usb_device.c: 2513: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8791  06FD  06D2               	xorwf	_pBDTEntryIn,f
  8792                           
  8793                           ;usb_device.c: 2514: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  8794  06FE  0859               	movf	_pBDTEntryEP0OutNext,w
  8795  06FF  0086               	movwf	6
  8796  0700  1381               	bcf	1,7
  8797                           
  8798                           ;usb_device.c: 2516: inPipes[0].info.Val = 0;
  8799  0701  01DD               	clrf	_inPipes+2
  8800                           
  8801                           ;usb_device.c: 2517: inPipes[0].wCount.Val = 0;
  8802  0702  01DE               	clrf	_inPipes+3
  8803  0703  01DF               	clrf	_inPipes+4
  8804                           
  8805                           ;usb_device.c: 2518: outPipes[0].info.Val = 0;
  8806  0704  0022               	movlb	2	; select bank2
  8807  0705  01C9               	clrf	(_outPipes^(0+256)+2)
  8808                           
  8809                           ;usb_device.c: 2519: outPipes[0].wCount.Val = 0;
  8810  0706  01CA               	clrf	(_outPipes^(0+256)+3)
  8811  0707  01CB               	clrf	((_outPipes+1)^(0+256)+3)
  8812                           
  8813                           ;usb_device.c: 2525: USBCheckStdRequest();
  8814  0708  2710  3180         	fcall	_USBCheckStdRequest
  8815                           
  8816                           ;usb_device.c: 2526: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  8817  070A  3003               	movlw	3
  8818  070B  278E  3180         	fcall	PL232	;call to abstracted procedure
  8819  070D  2516               	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  8820                           
  8821                           ;usb_device.c: 2539: USBCtrlEPServiceComplete();
  8822  070E  318E  2E9F         	ljmp	l3543
  8823  0710                     __end_of_USBCtrlTrfSetupHandler:	
  8824  0710                     __ptext7:	
  8825 ;; *************** function _USBCheckStdRequest *****************
  8826 ;; Defined at:
  8827 ;;		line 2712 in file "../framework/usb/usb_device.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;		None
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;		None
  8832 ;; Return value:  Size  Location     Type
  8833 ;;		None               void
  8834 ;; Registers used:
  8835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8836 ;; Tracked objects:
  8837 ;;		On entry : 1F/2
  8838 ;;		On exit  : 0/0
  8839 ;;		Unchanged: FFFE0/0
  8840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8845 ;;Total ram usage:        0 bytes
  8846 ;; Hardware stack levels used:    1
  8847 ;; Hardware stack levels required when called:    6
  8848 ;; This function calls:
  8849 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8850 ;;		_USBStdSetCfgHandler
  8851 ;;		_USBStdGetDscHandler
  8852 ;;		_USBStdGetStatusHandler
  8853 ;;		_USBStdFeatureReqHandler
  8854 ;; This function is called by:
  8855 ;;		_USBCtrlTrfSetupHandler
  8856 ;; This function uses a non-reentrant model
  8857 ;;
  8858                           
  8859                           
  8860                           ;psect for function _USBCheckStdRequest
  8861  0710                     _USBCheckStdRequest:	
  8862                           
  8863                           ;usb_device.c: 2713: if(SetupPkt.RequestType != (0x00>>5)) return;
  8864                           
  8865                           ;incstack = 0
  8866                           ; Regs used in _USBCheckStdRequest: [allreg]
  8867  0710  0020               	movlb	0	; select bank0
  8868  0711  0E40               	swapf	64,w	;volatile
  8869  0712  0C89               	rrf	9,f
  8870  0713  3903               	andlw	3
  8871  0714  1D03               	btfss	3,2
  8872  0715  0008               	return
  8873                           
  8874                           ;usb_device.c: 2753: break;
  8875  0716  0841               	movf	65,w	;volatile
  8876                           
  8877                           ; Switch size 1, requested type "space"
  8878                           ; Number of cases is 11, Range of values is 0 to 12
  8879                           ; switch strategies available:
  8880                           ; Name         Instructions Cycles
  8881                           ; direct_byte           32     6 (fixed)
  8882                           ; simple_byte           34    18 (average)
  8883                           ; jumptable            260     6 (fixed)
  8884                           ; rangetable            17     4 (fixed)
  8885                           ; spacedrange           31     6 (fixed)
  8886                           ; locatedrange          13     3 (fixed)
  8887                           ;	Chosen strategy is direct_byte
  8888  0717  0084               	movwf	4
  8889  0718  300D               	movlw	13
  8890  0719  0204               	subwf	4,w
  8891  071A  1803               	skipnc
  8892  071B  0008               	return
  8893  071C  3187               	movlp	high S4093
  8894  071D  3504               	lslf	4,w
  8895  071E  3ED9               	addlw	low S4093
  8896  071F  0082               	movwf	2
  8897  0720                     l888:	
  8898  0720  0008               	return
  8899  0721                     l890:	
  8900                           ;usb_device.c: 2716: {
  8901                           ;usb_device.c: 2717: case 5:
  8902                           
  8903  0721  3008               	movlw	8
  8904                           
  8905                           ;usb_device.c: 2718: inPipes[0].info.bits.busy = 1;
  8906  0722  17DD               	bsf	_inPipes+2,7
  8907                           
  8908                           ;usb_device.c: 2719: USBDeviceState = ADR_PENDING_STATE;
  8909  0723  00D5               	movwf	_USBDeviceState
  8910                           
  8911                           ;usb_device.c: 2721: break;
  8912  0724  0008               	return
  8913  0725                     l3827:	
  8914                           
  8915                           ;usb_device.c: 2723: USBStdGetDscHandler();
  8916  0725  318D  2D8B         	ljmp	l3687
  8917  0727                     l3829:	
  8918                           ;usb_device.c: 2724: break;
  8919                           
  8920                           
  8921                           ;usb_device.c: 2726: USBStdSetCfgHandler();
  8922  0727  318D  2DEA         	ljmp	l3627
  8923  0729                     l3831:	
  8924                           ;usb_device.c: 2727: break;
  8925                           
  8926                           
  8927                           ;usb_device.c: 2729: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  8928  0729  30EE               	movlw	low _USBActiveConfiguration
  8929  072A  00DB               	movwf	_inPipes
  8930  072B  3000               	movlw	high _USBActiveConfiguration
  8931  072C  00DC               	movwf	_inPipes+1
  8932  072D                     l3833:	
  8933                           
  8934                           ;usb_device.c: 2730: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8935  072D  145D               	bsf	_inPipes+2,0
  8936                           
  8937                           ;usb_device.c: 2731: inPipes[0].wCount.v[0] = 1;
  8938  072E  01DE               	clrf	_inPipes+3
  8939  072F  0ADE               	incf	_inPipes+3,f
  8940                           
  8941                           ;usb_device.c: 2732: inPipes[0].info.bits.busy = 1;
  8942  0730  17DD               	bsf	_inPipes+2,7
  8943                           
  8944                           ;usb_device.c: 2733: break;
  8945  0731  0008               	return
  8946  0732                     l3839:	
  8947                           
  8948                           ;usb_device.c: 2735: USBStdGetStatusHandler();
  8949  0732  2F49               	ljmp	l3717
  8950  0733                     l3841:	
  8951                           ;usb_device.c: 2736: break;
  8952                           
  8953                           
  8954                           ;usb_device.c: 2738: case 3:
  8955                           ;usb_device.c: 2739: USBStdFeatureReqHandler();
  8956  0733  2BBA               	ljmp	l3865
  8957  0734                     l3843:	
  8958                           ;usb_device.c: 2740: break;
  8959                           
  8960                           
  8961                           ;usb_device.c: 2742: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  8962  0734  0844               	movf	68,w	;volatile
  8963  0735  3EEF               	addlw	_USBAlternateInterface& (0+255)
  8964  0736  00DB               	movwf	_inPipes
  8965  0737  3000               	movlw	0
  8966  0738  01DC               	clrf	_inPipes+1
  8967  0739  2F2D               	goto	l3833
  8968  073A                     l899:	
  8969                           ;usb_device.c: 2747: case 11:
  8970                           
  8971                           
  8972                           ;usb_device.c: 2748: inPipes[0].info.bits.busy = 1;
  8973  073A  17DD               	bsf	_inPipes+2,7
  8974                           
  8975                           ;usb_device.c: 2749: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  8976  073B  0844               	movf	68,w	;volatile
  8977  073C  3EEF               	addlw	_USBAlternateInterface& (0+255)
  8978  073D  0086               	movwf	6
  8979  073E  0187               	clrf	7
  8980  073F  0842               	movf	66,w	;volatile
  8981  0740  0081               	movwf	1
  8982                           
  8983                           ;usb_device.c: 2750: break;
  8984  0741  0008               	return
  8985  0742                     l3853:	
  8986                           
  8987                           ;usb_device.c: 2752: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  8988  0742  3002               	movlw	2
  8989  0743  00E1               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  8990  0744  01E2               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  8991  0745  01E3               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  8992  0746  01E4               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  8993  0747  01E5               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  8994  0748  2D16               	ljmp	l3077
  8995  0749                     __end_of_USBCheckStdRequest:	
  8996  0749                     __ptext9:	
  8997 ;; *************** function _USBStdGetStatusHandler *****************
  8998 ;; Defined at:
  8999 ;;		line 2149 in file "../framework/usb/usb_device.c"
  9000 ;; Parameters:    Size  Location     Type
  9001 ;;		None
  9002 ;; Auto vars:     Size  Location     Type
  9003 ;;  p               1    0[COMMON] PTR struct __BDT
  9004 ;;		 -> BDT(32), NULL(0), 
  9005 ;; Return value:  Size  Location     Type
  9006 ;;		None               void
  9007 ;; Registers used:
  9008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  9009 ;; Tracked objects:
  9010 ;;		On entry : 1D/0
  9011 ;;		On exit  : 1F/0
  9012 ;;		Unchanged: FFFE0/0
  9013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9015 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9017 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9018 ;;Total ram usage:        1 bytes
  9019 ;; Hardware stack levels used:    1
  9020 ;; Hardware stack levels required when called:    1
  9021 ;; This function calls:
  9022 ;;		Nothing
  9023 ;; This function is called by:
  9024 ;;		_USBCheckStdRequest
  9025 ;; This function uses a non-reentrant model
  9026 ;;
  9027                           
  9028                           
  9029                           ;psect for function _USBStdGetStatusHandler
  9030  0749                     _USBStdGetStatusHandler:	
  9031  0749                     l3717:	
  9032                           ;incstack = 0
  9033                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  9034                           
  9035                           
  9036                           ;usb_device.c: 2150: CtrlTrfData[0] = 0;
  9037  0749  0020               	movlb	0	; select bank0
  9038  074A  01C8               	clrf	72	;volatile
  9039                           
  9040                           ;usb_device.c: 2151: CtrlTrfData[1] = 0;
  9041  074B  01C9               	clrf	73	;volatile
  9042                           
  9043                           ;usb_device.c: 2153: switch(SetupPkt.Recipient)
  9044  074C  2F6C               	goto	l3739
  9045  074D                     l826:	
  9046                           ;usb_device.c: 2154: {
  9047                           ;usb_device.c: 2155: case (0x00):
  9048                           
  9049                           
  9050                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  9051  074D  17DD               	bsf	_inPipes+2,7
  9052                           
  9053                           ;usb_device.c: 2164: }
  9054                           ;usb_device.c: 2166: if(RemoteWakeup == 1)
  9055                           
  9056                           ;usb_device.c: 2161: if(0 == 1)
  9057  074E  0022               	movlb	2	; select bank2
  9058  074F  0B56               	decfsz	_RemoteWakeup^(0+256),w
  9059  0750  2F77               	goto	l829
  9060                           
  9061                           ;usb_device.c: 2167: {
  9062                           ;usb_device.c: 2168: CtrlTrfData[0]|=0x02;
  9063  0751  0020               	movlb	0	; select bank0
  9064  0752  14C8               	bsf	72,1	;volatile
  9065  0753  2F77               	goto	l829
  9066  0754                     l830:	
  9067                           ;usb_device.c: 2171: case (0x01):
  9068                           
  9069                           
  9070                           ;usb_device.c: 2172: inPipes[0].info.bits.busy = 1;
  9071  0754  17DD               	bsf	_inPipes+2,7
  9072                           
  9073                           ;usb_device.c: 2173: break;
  9074  0755  2F77               	goto	l829
  9075  0756                     l831:	
  9076                           ;usb_device.c: 2174: case (0x02):
  9077                           
  9078                           
  9079                           ;usb_device.c: 2175: inPipes[0].info.bits.busy = 1;
  9080  0756  17DD               	bsf	_inPipes+2,7
  9081                           
  9082                           ;usb_device.c: 2179: {
  9083                           ;usb_device.c: 2180: BDT_ENTRY *p;
  9084                           ;usb_device.c: 2182: if(SetupPkt.EPDir == 0)
  9085  0757  1BC4               	btfsc	68,7	;volatile
  9086  0758  2F5D               	goto	l3729
  9087                           
  9088                           ;usb_device.c: 2183: {
  9089                           ;usb_device.c: 2184: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  9090  0759  0844               	movf	68,w	;volatile
  9091  075A  27A5  3180         	fcall	PL240	;call to abstracted procedure
  9092  075C  2F5F               	goto	L9
  9093  075D                     l3729:	
  9094                           ;usb_device.c: 2185: }
  9095                           
  9096                           
  9097                           ;usb_device.c: 2186: else
  9098                           ;usb_device.c: 2187: {
  9099                           ;usb_device.c: 2188: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  9100  075D  27B6  3180         	fcall	PL246	;call to abstracted procedure
  9101  075F                     L9:	
  9102  075F  0801               	movf	1,w
  9103  0760  00F0               	movwf	USBStdGetStatusHandler@p
  9104                           
  9105                           ;usb_device.c: 2189: }
  9106                           ;usb_device.c: 2191: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  9107  0761  0086               	movwf	6
  9108  0762  0187               	clrf	7
  9109  0763  1F81               	btfss	1,7
  9110  0764  2F77               	goto	l829
  9111  0765  0870               	movf	USBStdGetStatusHandler@p,w
  9112  0766  0086               	movwf	6
  9113  0767  1D01               	btfss	1,2
  9114  0768  2F77               	goto	l829
  9115                           
  9116                           ;usb_device.c: 2192: CtrlTrfData[0]=0x01;
  9117  0769  3001               	movlw	1
  9118  076A  00C8               	movwf	72	;volatile
  9119  076B  2F77               	goto	l829
  9120  076C                     l3739:	
  9121  076C  0840               	movf	64,w	;volatile
  9122  076D  391F               	andlw	31
  9123                           
  9124                           ; Switch size 1, requested type "space"
  9125                           ; Number of cases is 3, Range of values is 0 to 2
  9126                           ; switch strategies available:
  9127                           ; Name         Instructions Cycles
  9128                           ; simple_byte           10     6 (average)
  9129                           ; direct_byte           12     6 (fixed)
  9130                           ; jumptable            260     6 (fixed)
  9131                           ; rangetable             7     4 (fixed)
  9132                           ; spacedrange           11     6 (fixed)
  9133                           ; locatedrange           3     3 (fixed)
  9134                           ;	Chosen strategy is simple_byte
  9135  076E  1903               	skipnz
  9136  076F  2F4D               	goto	l826
  9137  0770  3A01               	xorlw	1	; case 1
  9138  0771  1903               	skipnz
  9139  0772  2F54               	goto	l830
  9140  0773  3A03               	xorlw	3	; case 2
  9141  0774  1903               	skipnz
  9142  0775  2F56               	goto	l831
  9143  0776  2F77               	goto	l829
  9144  0777                     l829:	
  9145                           
  9146                           ;usb_device.c: 2197: if(inPipes[0].info.bits.busy == 1)
  9147  0777  0020               	movlb	0	; select bank0
  9148  0778  1FDD               	btfss	_inPipes+2,7
  9149  0779  0008               	return
  9150                           
  9151                           ;usb_device.c: 2198: {
  9152                           ;usb_device.c: 2199: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  9153  077A  3048               	movlw	72
  9154  077B  00DB               	movwf	_inPipes
  9155  077C  3002               	movlw	2
  9156  077D  01DC               	clrf	_inPipes+1
  9157                           
  9158                           ;usb_device.c: 2200: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9159  077E  145D               	bsf	_inPipes+2,0
  9160                           
  9161                           ;usb_device.c: 2201: inPipes[0].wCount.v[0] = 2;
  9162  077F  00DE               	movwf	_inPipes+3
  9163  0780  0008               	return
  9164  0781                     __end_of_USBStdGetStatusHandler:	
  9165  0781                     PL224:	
  9166  0781  300F               	movlw	-241
  9167  0782  01A0               	clrf	32
  9168  0783  01A1               	clrf	33
  9169  0784  01A2               	clrf	34
  9170  0785  01A3               	clrf	35
  9171  0786  05A0               	andwf	32,f
  9172  0787  0820               	movf	32,w
  9173  0788  39F0               	andlw	-16
  9174  0789  3809               	iorlw	9
  9175  078A  00A0               	movwf	32
  9176  078B  3090               	movlw	144
  9177  078C  00A1               	movwf	33
  9178  078D  0008               	return
  9179  078E                     __end_ofPL224:	
  9180  078E                     PL232:	
  9181  078E  0020               	movlb	0	; select bank0
  9182  078F  00E1               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  9183  0790  01E2               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  9184  0791  01E3               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  9185  0792  01E4               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  9186  0793  01E5               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  9187  0794  0008               	return
  9188  0795                     __end_ofPL232:	
  9189  0795                     PL236:	
  9190  0795  01F0               	clrf	?_USBTransferOnePacket
  9191  0796  0AF0               	incf	?_USBTransferOnePacket,f
  9192  0797  00F1               	movwf	?_USBTransferOnePacket+1
  9193  0798  3001               	movlw	1
  9194  0799  00F2               	movwf	?_USBTransferOnePacket+2
  9195  079A  3004               	movlw	4
  9196  079B  00F3               	movwf	?_USBTransferOnePacket+3
  9197  079C  3401               	retlw	1
  9198  079D                     __end_ofPL236:	
  9199  079D                     PL238:	
  9200  079D  00E1               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER
  9201  079E  01E2               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+1
  9202  079F  0869               	movf	USBStdFeatureReqHandler@p,w
  9203  07A0  00E3               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  9204  07A1  01E4               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  9205  07A2  0AE4               	incf	?_USER_USB_CALLBACK_EVENT_HANDLER+3,f
  9206  07A3  01E5               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  9207  07A4  0008               	return
  9208  07A5                     __end_ofPL238:	
  9209  07A5                     PL240:	
  9210  07A5  390F               	andlw	15
  9211  07A6  3E53               	addlw	_pBDTEntryOut& (0+255)
  9212  07A7  0086               	movwf	6
  9213  07A8  3001               	movlw	1	; select bank2/3
  9214  07A9  0087               	movwf	7
  9215  07AA  0008               	return
  9216  07AB                     __end_ofPL240:	
  9217  07AB                     PL242:	
  9218  07AB  00F1               	movwf	?_USBTransferOnePacket+1
  9219  07AC  3040               	movlw	64
  9220  07AD  01F2               	clrf	?_USBTransferOnePacket+2
  9221  07AE  00F3               	movwf	?_USBTransferOnePacket+3
  9222  07AF  3401               	retlw	1
  9223  07B0                     __end_ofPL242:	
  9224  07B0                     PL244:	
  9225  07B0  0086               	movwf	6
  9226  07B1  0187               	clrf	7
  9227  07B2  0D01               	rlf	1,w
  9228  07B3  0D01               	rlf	1,w
  9229  07B4  3901               	andlw	1
  9230  07B5  0008               	return
  9231  07B6                     __end_ofPL244:	
  9232  07B6                     PL246:	
  9233  07B6  0844               	movf	68,w	;volatile
  9234  07B7  390F               	andlw	15
  9235  07B8  3E52               	addlw	_pBDTEntryIn& (0+255)
  9236  07B9  0086               	movwf	6
  9237  07BA  0187               	clrf	7
  9238  07BB  0008               	return
  9239  07BC                     __end_ofPL246:	
  9240  07BC                     PL250:	
  9241  07BC  3E02               	addlw	2
  9242  07BD  0086               	movwf	6
  9243  07BE  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9244  07BF  3FC0               	movwi [0]fsr1
  9245  07C0  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9246  07C1  3FC1               	movwi [1]fsr1
  9247  07C2  0008               	return
  9248  07C3                     __end_ofPL250:	
  9249  07C3                     PL254:	
  9250  07C3  3E53               	addlw	_pBDTEntryOut& (0+255)
  9251  07C4  0086               	movwf	6
  9252  07C5  3001               	movlw	1	; select bank2/3
  9253  07C6  0087               	movwf	7
  9254  07C7  0008               	return
  9255  07C8                     __end_ofPL254:	
  9256  07C8                     PL258:	
  9257  07C8  0091               	movwf	17	;volatile
  9258  07C9  309F               	movlw	159
  9259  07CA  0097               	movwf	23	;volatile
  9260  07CB  307B               	movlw	123
  9261  07CC  0092               	movwf	18	;volatile
  9262  07CD  0008               	return
  9263  07CE                     __end_ofPL258:	
  9264  07CE                     PL260:	
  9265  07CE  0869               	movf	USBStdFeatureReqHandler@p,w
  9266  07CF  0086               	movwf	6
  9267  07D0  303B               	movlw	59
  9268  07D1  0187               	clrf	7
  9269  07D2  0581               	andwf	1,f
  9270  07D3  0008               	return
  9271  07D4                     __end_ofPL260:	
  9272  07D4                     PL262:	
  9273  07D4  01E3               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+2
  9274  07D5  01E4               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+3
  9275  07D6  0AE4               	incf	?_USER_USB_CALLBACK_EVENT_HANDLER+3,f
  9276  07D7  01E5               	clrf	?_USER_USB_CALLBACK_EVENT_HANDLER+4
  9277  07D8  0008               	return
  9278  07D9                     __end_ofPL262:	
  9279                           
  9280                           	psect	swtext2
  9281  07F3                     __pswtext2:	
  9282  07F3                     S4099:	
  9283  07F3  3181  2991         	ljmp	l3177
  9284  07F5  3181  29B9         	ljmp	l3183
  9285  07F7  3181  29E1         	ljmp	l3187
  9286  07F9  3182  2A0C         	ljmp	l3191
  9287  07FB  3182  2A3A         	ljmp	l3195
  9288  07FD  3182  2A48         	ljmp	l3201
  9289                           
  9290                           	psect	text30
  9291  0000                     __ptext30:	
  9292 ;; *************** function _store_key_level *****************
  9293 ;; Defined at:
  9294 ;;		line 194 in file "../src/scan.c"
  9295 ;; Parameters:    Size  Location     Type
  9296 ;;  level           1    wreg     unsigned char 
  9297 ;;  end_of_scan     1   13[COMMON] unsigned char 
  9298 ;; Auto vars:     Size  Location     Type
  9299 ;;  level           1    0[BANK0 ] unsigned char 
  9300 ;; Return value:  Size  Location     Type
  9301 ;;                  1    wreg      unsigned char 
  9302 ;; Registers used:
  9303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9304 ;; Tracked objects:
  9305 ;;		On entry : 1F/1
  9306 ;;		On exit  : 1F/0
  9307 ;;		Unchanged: FFFE0/0
  9308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9309 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9310 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9312 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9313 ;;Total ram usage:        2 bytes
  9314 ;; Hardware stack levels used:    1
  9315 ;; Hardware stack levels required when called:    3
  9316 ;; This function calls:
  9317 ;;		_process_level
  9318 ;; This function is called by:
  9319 ;;		_scan_task
  9320 ;; This function uses a non-reentrant model
  9321 ;;
  9322                           
  9323  0000                     _store_key_level:	
  9324                           ;psect for function _store_key_level
  9325                           
  9326  0000                     __end_of_store_key_level:	
  9327                           ;scan.c: 200: return idx_key == 0;
  9328                           
  9329                           ;scan.c: 199: if (idx_key >= N_KEYS || end_of_scan) idx_key = 0;
  9330                           
  9331                           ;scan.c: 198: idx_key ++;
  9332                           
  9333                           ;scan.c: 197: adc_levels[idx_key] = level;
  9334                           
  9335                           ;scan.c: 188: }
  9336                           ;scan.c: 189: key_states[idx_key] = filtered_state;
  9337                           
  9338                           ;scan.c: 187: else LED_Off(LED_D1);
  9339                           
  9340                           ;scan.c: 186: if (filtered_state) LED_On(LED_D1);
  9341                           
  9342                           ;scan.c: 185: note_event.velocity = (filtered_state? (new_level * 2 + 5): 0);
  9343                           
  9344                           ;scan.c: 184: note_event.pitch = midi_shift + idx_midi_map[idx_key];
  9345                           
  9346                           ;scan.c: 183: if (!key_states[idx_key] != !filtered_state) {
  9347                           
  9348                           ;scan.c: 181: filtered_state = on_flag || !on_flag && !off_flag && key_states[idx_key];
  9349                           
  9350                           ;scan.c: 180: off_flag = key_off_counter[idx_key] >= key_off_threshold,
  9351                           
  9352                           ;scan.c: 175: }
  9353                           ;scan.c: 177: {
  9354                           ;scan.c: 178: bool
  9355                           ;scan.c: 179: on_flag = key_on_counter [idx_key] >= key_on_threshold,
  9356                           
  9357                           ;scan.c: 174: key_off_counter [idx_key] ++;
  9358                           
  9359                           ;scan.c: 172: else {
  9360                           ;scan.c: 173: key_on_counter[idx_key] = 0;
  9361                           
  9362                           ;scan.c: 170: key_on_counter [idx_key] ++;
  9363                           
  9364                           ;scan.c: 169: key_off_counter[idx_key] = 0;
  9365                           
  9366                           ;scan.c: 168: if (current_state) {
  9367                           
  9368                           ;scan.c: 166: note_event.velocity = 0;
  9369                           
  9370                           ;scan.c: 165: note_event.pitch = 0;
  9371                           
  9372                           ;scan.c: 163: int current_state = (new_level > L);
  9373                           
  9374                           ;incstack = 0
  9375                           ; Regs used in _process_level: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9376                           ;process_level@idx_key stored from wreg
  9377                           
  9378                           ;psect for function _process_level
  9379                           
  9380                           ;scan.c: 195: static uint8_t idx_key = 0;
  9381                           ;scan.c: 196: process_level(idx_key, adc_levels[idx_key], level);
  9382                           
  9383                           ;incstack = 0
  9384                           ; Regs used in _store_key_level: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9385                           ;store_key_level@level stored from wreg
  9386                           
  9387                           
  9388                           	psect	text31
  9389  0000                     __ptext31:	
  9390 ;; *************** function _process_level *****************
  9391 ;; Defined at:
  9392 ;;		line 145 in file "../src/scan.c"
  9393 ;; Parameters:    Size  Location     Type
  9394 ;;  idx_key         1    wreg     unsigned char 
  9395 ;;  old_level       1    1[COMMON] const unsigned char 
  9396 ;;  new_level       1    2[COMMON] const unsigned char 
  9397 ;; Auto vars:     Size  Location     Type
  9398 ;;  idx_key         1   12[COMMON] unsigned char 
  9399 ;;  filtered_sta    1   11[COMMON] unsigned char 
  9400 ;;  on_flag         1   10[COMMON] unsigned char 
  9401 ;;  off_flag        1    6[COMMON] unsigned char 
  9402 ;;  current_stat    2    4[COMMON] int 
  9403 ;;  old_state       2    0        int 
  9404 ;; Return value:  Size  Location     Type
  9405 ;;		None               void
  9406 ;; Registers used:
  9407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9408 ;; Tracked objects:
  9409 ;;		On entry : 1F/0
  9410 ;;		On exit  : 0/0
  9411 ;;		Unchanged: FFFE0/0
  9412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9413 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9414 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9415 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9416 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9417 ;;Total ram usage:       12 bytes
  9418 ;; Hardware stack levels used:    1
  9419 ;; Hardware stack levels required when called:    2
  9420 ;; This function calls:
  9421 ;;		_LED_Off
  9422 ;;		_LED_On
  9423 ;; This function is called by:
  9424 ;;		_store_key_level
  9425 ;; This function uses a non-reentrant model
  9426 ;;
  9427                           
  9428  0000                     _process_level:	
  9429                           ;psect for function _process_level
  9430                           
  9431  0000                     __end_of_process_level:	
  9432                           ;scan.c: 188: }
  9433                           ;scan.c: 189: key_states[idx_key] = filtered_state;
  9434                           
  9435                           ;scan.c: 187: else LED_Off(LED_D1);
  9436                           
  9437                           ;scan.c: 186: if (filtered_state) LED_On(LED_D1);
  9438                           
  9439                           ;scan.c: 185: note_event.velocity = (filtered_state? (new_level * 2 + 5): 0);
  9440                           
  9441                           ;scan.c: 184: note_event.pitch = midi_shift + idx_midi_map[idx_key];
  9442                           
  9443                           ;scan.c: 183: if (!key_states[idx_key] != !filtered_state) {
  9444                           
  9445                           ;scan.c: 181: filtered_state = on_flag || !on_flag && !off_flag && key_states[idx_key];
  9446                           
  9447                           ;scan.c: 180: off_flag = key_off_counter[idx_key] >= key_off_threshold,
  9448                           
  9449                           ;scan.c: 175: }
  9450                           ;scan.c: 177: {
  9451                           ;scan.c: 178: bool
  9452                           ;scan.c: 179: on_flag = key_on_counter [idx_key] >= key_on_threshold,
  9453                           
  9454                           ;scan.c: 174: key_off_counter [idx_key] ++;
  9455                           
  9456                           ;scan.c: 172: else {
  9457                           ;scan.c: 173: key_on_counter[idx_key] = 0;
  9458                           
  9459                           ;scan.c: 171: }
  9460                           
  9461                           ;scan.c: 170: key_on_counter [idx_key] ++;
  9462                           
  9463                           ;scan.c: 169: key_off_counter[idx_key] = 0;
  9464                           
  9465                           ;scan.c: 168: if (current_state) {
  9466                           
  9467                           ;scan.c: 166: note_event.velocity = 0;
  9468                           
  9469                           ;scan.c: 165: note_event.pitch = 0;
  9470                           
  9471                           ;scan.c: 163: int current_state = (new_level > L);
  9472                           
  9473                           ;incstack = 0
  9474                           ; Regs used in _process_level: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9475                           ;process_level@idx_key stored from wreg
  9476                           
  9477                           
  9478                           	psect	swtext3
  9479  0800                     __pswtext3:	
  9480  0800                     S4101:	
  9481  0800  3183  2B9D         	ljmp	l481
  9482  0802  3183  2B8A         	ljmp	l475
  9483  0804  3183  2B8D         	ljmp	l477
  9484  0806  3183  2B8A         	ljmp	l475
  9485  0808  3183  2B90         	ljmp	l479
  9486                           
  9487                           	psect	swtext4
  9488  080A                     __pswtext4:	
  9489  080A                     S4103:	
  9490  080A  3183  2B87         	ljmp	l491
  9491  080C  3183  2B74         	ljmp	l485
  9492  080E  3183  2B77         	ljmp	l487
  9493  0810  3183  2B74         	ljmp	l485
  9494  0812  3183  2B7A         	ljmp	l489
  9495                           
  9496                           	psect	text34
  9497  0000                     __ptext34:	
  9498 ;; *************** function _get_adc *****************
  9499 ;; Defined at:
  9500 ;;		line 94 in file "../src/scan.c"
  9501 ;; Parameters:    Size  Location     Type
  9502 ;;		None
  9503 ;; Auto vars:     Size  Location     Type
  9504 ;;		None
  9505 ;; Return value:  Size  Location     Type
  9506 ;;                  1    wreg      unsigned char 
  9507 ;; Registers used:
  9508 ;;		wreg
  9509 ;; Tracked objects:
  9510 ;;		On entry : 1F/1
  9511 ;;		On exit  : 1F/1
  9512 ;;		Unchanged: FFFE0/0
  9513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9518 ;;Total ram usage:        0 bytes
  9519 ;; Hardware stack levels used:    1
  9520 ;; Hardware stack levels required when called:    1
  9521 ;; This function calls:
  9522 ;;		Nothing
  9523 ;; This function is called by:
  9524 ;;		_scan_task
  9525 ;; This function uses a non-reentrant model
  9526 ;;
  9527                           
  9528  0000                     _get_adc:	
  9529                           ;psect for function _get_adc
  9530                           
  9531  0000                     __end_of_get_adc:	
  9532                           ;scan.c: 95: return ADRESH;
  9533                           
  9534                           ;incstack = 0
  9535                           ; Regs used in _get_adc: [wreg]
  9536                           
  9537                           
  9538                           	psect	text35
  9539  0000                     __ptext35:	
  9540 ;; *************** function _is_adc_ready *****************
  9541 ;; Defined at:
  9542 ;;		line 90 in file "../src/scan.c"
  9543 ;; Parameters:    Size  Location     Type
  9544 ;;		None
  9545 ;; Auto vars:     Size  Location     Type
  9546 ;;		None
  9547 ;; Return value:  Size  Location     Type
  9548 ;;                  1    wreg      unsigned char 
  9549 ;; Registers used:
  9550 ;;		wreg
  9551 ;; Tracked objects:
  9552 ;;		On entry : 1D/2
  9553 ;;		On exit  : 1F/1
  9554 ;;		Unchanged: FFFE0/0
  9555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9560 ;;Total ram usage:        0 bytes
  9561 ;; Hardware stack levels used:    1
  9562 ;; Hardware stack levels required when called:    1
  9563 ;; This function calls:
  9564 ;;		Nothing
  9565 ;; This function is called by:
  9566 ;;		_scan_task
  9567 ;; This function uses a non-reentrant model
  9568 ;;
  9569                           
  9570  0000                     _is_adc_ready:	
  9571                           ;psect for function _is_adc_ready
  9572                           
  9573  0000                     __end_of_is_adc_ready:	
  9574                           ;scan.c: 91: return !ADCON0bits.GO_nDONE;
  9575                           
  9576                           ;incstack = 0
  9577                           ; Regs used in _is_adc_ready: [wreg]
  9578                           
  9579                           
  9580                           	psect	text36
  9581  0000                     __ptext36:	
  9582 ;; *************** function _run_adc *****************
  9583 ;; Defined at:
  9584 ;;		line 85 in file "../src/scan.c"
  9585 ;; Parameters:    Size  Location     Type
  9586 ;;		None
  9587 ;; Auto vars:     Size  Location     Type
  9588 ;;		None
  9589 ;; Return value:  Size  Location     Type
  9590 ;;		None               void
  9591 ;; Registers used:
  9592 ;;		wreg, status,2, status,0
  9593 ;; Tracked objects:
  9594 ;;		On entry : 1F/2
  9595 ;;		On exit  : 1F/1
  9596 ;;		Unchanged: FFFE0/0
  9597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9602 ;;Total ram usage:        0 bytes
  9603 ;; Hardware stack levels used:    1
  9604 ;; Hardware stack levels required when called:    1
  9605 ;; This function calls:
  9606 ;;		Nothing
  9607 ;; This function is called by:
  9608 ;;		_scan_task
  9609 ;; This function uses a non-reentrant model
  9610 ;;
  9611                           
  9612  0000                     _run_adc:	
  9613                           ;psect for function _run_adc
  9614                           
  9615  0000                     __end_of_run_adc:	
  9616                           ;scan.c: 87: ADCON0bits.GO = 1;
  9617                           
  9618                           ;scan.c: 86: ADCON0bits.CHS = 7;
  9619                           
  9620                           ;incstack = 0
  9621                           ; Regs used in _run_adc: [wreg+status,2+status,0]
  9622                           
  9623                           
  9624                           	psect	text37
  9625  0000                     __ptext37:	
  9626 ;; *************** function _is_end_of_scan *****************
  9627 ;; Defined at:
  9628 ;;		line 77 in file "../src/scan.c"
  9629 ;; Parameters:    Size  Location     Type
  9630 ;;		None
  9631 ;; Auto vars:     Size  Location     Type
  9632 ;;  res             1    0[COMMON] unsigned char 
  9633 ;; Return value:  Size  Location     Type
  9634 ;;                  1    wreg      unsigned char 
  9635 ;; Registers used:
  9636 ;;		wreg, status,2, status,0
  9637 ;; Tracked objects:
  9638 ;;		On entry : 1D/2
  9639 ;;		On exit  : 1F/1
  9640 ;;		Unchanged: FFFE0/0
  9641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9645 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9646 ;;Total ram usage:        1 bytes
  9647 ;; Hardware stack levels used:    1
  9648 ;; Hardware stack levels required when called:    1
  9649 ;; This function calls:
  9650 ;;		Nothing
  9651 ;; This function is called by:
  9652 ;;		_scan_task
  9653 ;; This function uses a non-reentrant model
  9654 ;;
  9655                           
  9656  0000                     _is_end_of_scan:	
  9657                           ;psect for function _is_end_of_scan
  9658                           
  9659  0000                     __end_of_is_end_of_scan:	
  9660                           ;scan.c: 82: return res;
  9661                           
  9662                           ;scan.c: 81: if (scan_counter >= N_KEYS) scan_counter = 0;
  9663                           
  9664                           ;scan.c: 79: static uint8_t scan_counter = 0;
  9665                           ;scan.c: 80: bool res = (++scan_counter) >= N_KEYS;
  9666                           
  9667                           ;incstack = 0
  9668                           ; Regs used in _is_end_of_scan: [wreg+status,2+status,0]
  9669                           
  9670                           
  9671                           	psect	text38
  9672  0000                     __ptext38:	
  9673 ;; *************** function _get_data *****************
  9674 ;; Defined at:
  9675 ;;		line 73 in file "../src/scan.c"
  9676 ;; Parameters:    Size  Location     Type
  9677 ;;		None
  9678 ;; Auto vars:     Size  Location     Type
  9679 ;;		None
  9680 ;; Return value:  Size  Location     Type
  9681 ;;                  1    wreg      unsigned char 
  9682 ;; Registers used:
  9683 ;;		wreg, status,2, status,0
  9684 ;; Tracked objects:
  9685 ;;		On entry : 1D/2
  9686 ;;		On exit  : 1F/2
  9687 ;;		Unchanged: FFFE0/0
  9688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9693 ;;Total ram usage:        0 bytes
  9694 ;; Hardware stack levels used:    1
  9695 ;; Hardware stack levels required when called:    1
  9696 ;; This function calls:
  9697 ;;		Nothing
  9698 ;; This function is called by:
  9699 ;;		_scan_task
  9700 ;; This function uses a non-reentrant model
  9701 ;;
  9702                           
  9703  0000                     _get_data:	
  9704                           ;psect for function _get_data
  9705                           
  9706  0000                     __end_of_get_data:	
  9707                           ;scan.c: 74: return LATCbits.LATC5;
  9708                           
  9709                           ;incstack = 0
  9710                           ; Regs used in _get_data: [wreg+status,2+status,0]
  9711                           
  9712                           
  9713                           	psect	text39
  9714  0000                     __ptext39:	
  9715 ;; *************** function _set_clock_and_data *****************
  9716 ;; Defined at:
  9717 ;;		line 68 in file "../src/scan.c"
  9718 ;; Parameters:    Size  Location     Type
  9719 ;;  c               1    wreg     const unsigned char 
  9720 ;;  d               1    0[COMMON] const unsigned char 
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;  c               1    2[COMMON] const unsigned char 
  9723 ;; Return value:  Size  Location     Type
  9724 ;;		None               void
  9725 ;; Registers used:
  9726 ;;		wreg, status,2, status,0
  9727 ;; Tracked objects:
  9728 ;;		On entry : 1D/2
  9729 ;;		On exit  : 1F/2
  9730 ;;		Unchanged: FFFE0/0
  9731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9732 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9733 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9734 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9735 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9736 ;;Total ram usage:        3 bytes
  9737 ;; Hardware stack levels used:    1
  9738 ;; Hardware stack levels required when called:    1
  9739 ;; This function calls:
  9740 ;;		Nothing
  9741 ;; This function is called by:
  9742 ;;		_scan_task
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746  0000                     _set_clock_and_data:	
  9747                           ;psect for function _set_clock_and_data
  9748                           
  9749  0000                     __end_of_set_clock_and_data:	
  9750                           ;scan.c: 70: LATCbits.LATC5 = !!d;
  9751                           
  9752                           ;scan.c: 69: LATCbits.LATC4 = !!c;
  9753                           
  9754                           ;incstack = 0
  9755                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  9756                           ;set_clock_and_data@c stored from wreg
  9757                           
  9758                           
  9759                           	psect	text40
  9760  0000                     __ptext40:	
  9761 ;; *************** function _waiting_for_timer *****************
  9762 ;; Defined at:
  9763 ;;		line 64 in file "../src/scan.c"
  9764 ;; Parameters:    Size  Location     Type
  9765 ;;		None
  9766 ;; Auto vars:     Size  Location     Type
  9767 ;;		None
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  1    wreg      unsigned char 
  9770 ;; Registers used:
  9771 ;;		wreg, status,2
  9772 ;; Tracked objects:
  9773 ;;		On entry : 1C/2
  9774 ;;		On exit  : 1F/1
  9775 ;;		Unchanged: FFFE0/0
  9776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9778 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9780 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9781 ;;Total ram usage:        1 bytes
  9782 ;; Hardware stack levels used:    1
  9783 ;; Hardware stack levels required when called:    1
  9784 ;; This function calls:
  9785 ;;		Nothing
  9786 ;; This function is called by:
  9787 ;;		_scan_task
  9788 ;; This function uses a non-reentrant model
  9789 ;;
  9790                           
  9791  0000                     _waiting_for_timer:	
  9792                           ;psect for function _waiting_for_timer
  9793                           
  9794  0000                     __end_of_waiting_for_timer:	
  9795                           ;scan.c: 65: return (wait_timer = wait_timer && !INTCONbits.TMR0IF);
  9796                           
  9797                           ;incstack = 0
  9798                           ; Regs used in _waiting_for_timer: [wreg+status,2]
  9799                           
  9800                           
  9801                           	psect	text41
  9802  0000                     __ptext41:	
  9803 ;; *************** function _set_timer *****************
  9804 ;; Defined at:
  9805 ;;		line 55 in file "../src/scan.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;		None
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;		None
  9810 ;; Return value:  Size  Location     Type
  9811 ;;		None               void
  9812 ;; Registers used:
  9813 ;;		status,2
  9814 ;; Tracked objects:
  9815 ;;		On entry : 1F/2
  9816 ;;		On exit  : 1F/0
  9817 ;;		Unchanged: FFFE0/0
  9818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9823 ;;Total ram usage:        0 bytes
  9824 ;; Hardware stack levels used:    1
  9825 ;; Hardware stack levels required when called:    1
  9826 ;; This function calls:
  9827 ;;		Nothing
  9828 ;; This function is called by:
  9829 ;;		_scan_task
  9830 ;; This function uses a non-reentrant model
  9831 ;;
  9832                           
  9833  0000                     _set_timer:	
  9834                           ;psect for function _set_timer
  9835                           
  9836  0000                     __end_of_set_timer:	
  9837                           ;scan.c: 61: TMR0 = 0;
  9838                           
  9839                           ;scan.c: 60: INTCONbits.TMR0IF = 0;
  9840                           
  9841                           ;scan.c: 59: INTCONbits.TMR0IE = 0;
  9842                           
  9843                           ;scan.c: 58: OPTION_REGbits.PSA = 1;
  9844                           
  9845                           ;scan.c: 57: OPTION_REGbits.TMR0CS = 0;
  9846                           
  9847                           ;scan.c: 56: wait_timer = 1;
  9848                           
  9849                           ;incstack = 0
  9850                           ; Regs used in _set_timer: [status,2]
  9851                           
  9852                           
  9853                           	psect	swtext5
  9854  0814                     __pswtext5:	
  9855  0814                     S4105:	
  9856  0814  3183  2BB3         	ljmp	l521
  9857  0816  3183  2BA0         	ljmp	l515
  9858  0818  3183  2BA3         	ljmp	l517
  9859  081A  3183  2BA0         	ljmp	l515
  9860  081C  3183  2BA6         	ljmp	l519
  9861                           
  9862                           	psect	intentry
  9863  0004                     __pintentry:	
  9864 ;; *************** function _SYS_InterruptHigh *****************
  9865 ;; Defined at:
  9866 ;;		line 113 in file "../src/pic16f1459/system.c"
  9867 ;; Parameters:    Size  Location     Type
  9868 ;;		None
  9869 ;; Auto vars:     Size  Location     Type
  9870 ;;		None
  9871 ;; Return value:  Size  Location     Type
  9872 ;;		None               void
  9873 ;; Registers used:
  9874 ;;		None
  9875 ;; Tracked objects:
  9876 ;;		On entry : 0/0
  9877 ;;		On exit  : 0/0
  9878 ;;		Unchanged: FFFFFFFF/0
  9879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9884 ;;Total ram usage:        0 bytes
  9885 ;; Hardware stack levels used:    1
  9886 ;; This function calls:
  9887 ;;		Nothing
  9888 ;; This function is called by:
  9889 ;;		Interrupt level 1
  9890 ;; This function uses a non-reentrant model
  9891 ;;
  9892                           
  9893  0004                     _SYS_InterruptHigh:	
  9894                           
  9895                           ;incstack = 0
  9896                           ; Regs used in _SYS_InterruptHigh: []
  9897  0004  3180               	pagesel	$
  9898  0005  0009               	retfie
  9899  0006                     __end_of_SYS_InterruptHigh:	
  9900  007E                     btemp	set	126	;btemp
  9901  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    249
    Data        0
    BSS         209
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            32     15      32
    BANK1            16      0      16
    BANK2            80      0      59
    BANK3            76      0      39
    BANK4            80      0      78
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ?_memset	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(1) Largest target is 32
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK1[1]), BDT(BANK0[32]), NULL(NULL[0]), 

    ?_USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    memset@p1	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    memset@p	PTR unsigned char  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITSFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    sp__memset	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(BITSFR29[1]), 

    pDst	PTR unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> midiData(BANK3[4]), ReceivedDataBuffer(BANK1[64]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(BITSFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    S1346$pFunc	PTR FTN()void  size(1) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(1) Largest target is 0

    S1336$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S1336$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S1312$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S1312$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S1312$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S1312$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(BITSFR29[1]), 

    scan_task@velocity	PTR unsigned char  size(1) Largest target is 1
		 -> APP_DeviceAudioMIDITasks@velocity(BANK0[1]), 

    scan_task@note	PTR unsigned char  size(1) Largest target is 1
		 -> APP_DeviceAudioMIDITasks@scan_pitch(BANK0[1]), 

    sp__USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBRxHandle	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBTxHandle	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[26]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 101
		 -> configDescriptor1(CODE[101]), 


Critical Paths under _main in COMMON

    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCheckStdRequest->_USBStdSetCfgHandler
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _APP_DeviceAudioMIDIInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _scan_task->_store_key_level
    _store_key_level->_process_level
    _process_level->_LED_Off
    _process_level->_LED_On
    _SYSTEM_Initialize->_LED_Enable

Critical Paths under _SYS_InterruptHigh in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_APP_DeviceAudioMIDITasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _APP_DeviceAudioMIDITasks->_scan_task
    _scan_task->_store_key_level

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8477
                  _SYSTEM_Initialize
                      _USBDeviceInit
                      _BLEDeviceInit
           _APP_DeviceAudioMIDITasks
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       2     2      0    6817
                                             12 BANK0      2     2      0
                      _USBDeviceInit
    _USER_USB_CALLBACK_EVENT_HANDLER
                 _USBWakeFromSuspend
                         _USBSuspend
      _USBIncrement1msInternalTimers
          _USBCtrlEPAllowStatusStage
                    _USBStallHandler
                   _USBCtrlEPService
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     3     3      0    4174
                                              9 BANK0      3     3      0
             _USBCtrlTrfSetupHandler
               _USBCtrlTrfOutHandler
                _USBCtrlTrfInHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  3     3      0     115
                                              1 COMMON     3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 2     2      0     114
                                              6 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  4     4      0     114
                                              2 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0    3877
    _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCtrlEPServiceComplete
                 _USBCheckStdRequest
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0    3010
    _USER_USB_CALLBACK_EVENT_HANDLER
                _USBStdSetCfgHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
            _USBStdFeatureReqHandler
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0    1158
                                             10 COMMON     2     2      0
                                              5 BANK0      4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               1     1      0      46
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  4     4      0    1031
                                             10 COMMON     4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               6     2      4      96
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             2     2      0      92
                                              3 COMMON     2     2      0
          _USBCtrlEPAllowStatusStage
            _USBCtrlEPAllowDataStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              1 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0     775
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0     775
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      5     0      5     775
                                              0 BANK0      5     0      5
             _APP_LEDUpdateUSBStatus
      _APP_DeviceAudioMIDISOFHandler
      _APP_DeviceAudioMIDIInitialize
 ---------------------------------------------------------------------------------
 (7) _APP_DeviceAudioMIDIInitialize                        0     0      0     709
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (8) _USBEnableEndpoint                                    6     5      1     377
                                              4 COMMON     6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (9) _USBConfigureEndpoint                                 4     3      1     222
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (7) _APP_DeviceAudioMIDISOFHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _APP_LEDUpdateUSBStatus                               0     0      0      44
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        6     6      0     272
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceAudioMIDITasks                             8     8      0    1344
                                              7 BANK0      8     8      0
               _USBTransferOnePacket
                          _scan_task
 ---------------------------------------------------------------------------------
 (2) _scan_task                                            6     5      1     842
                                              1 BANK0      6     5      1
                          _scan_init
                          _set_timer
                  _waiting_for_timer
                 _set_clock_and_data
                           _get_data
                     _is_end_of_scan
                            _run_adc
                       _is_adc_ready
                            _get_adc
                    _store_key_level
 ---------------------------------------------------------------------------------
 (3) _store_key_level                                      2     1      1     615
                                             13 COMMON     1     0      1
                                              0 BANK0      1     1      0
                     _is_end_of_scan (ARG)
                            _get_adc (ARG)
                      _process_level
 ---------------------------------------------------------------------------------
 (4) _process_level                                       14    12      2     549
                                              1 COMMON    12    10      2
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (8) _LED_On                                               1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _LED_Off                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _get_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _is_adc_ready                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _run_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _is_end_of_scan                                       1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _get_data                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _set_clock_and_data                                   3     2      1      44
                                              0 COMMON     3     2      1
                           _get_data (ARG)
 ---------------------------------------------------------------------------------
 (3) _waiting_for_timer                                    1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _set_timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _scan_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBTransferOnePacket                                 8     4      4     332
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _BLEDeviceInit                                        0     0      0       0
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      44
                                              1 COMMON     1     1      0
                         _LED_Enable
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SYS_InterruptHigh                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _LED_Enable
   _USBDeviceInit
   _BLEDeviceInit
     _PIN_MANAGER_Initialize
     _SPI_Initialize
   _APP_DeviceAudioMIDITasks
     _USBTransferOnePacket
     _scan_task
       _scan_init
       _set_timer
       _waiting_for_timer
       _set_clock_and_data
         _get_data (ARG)
       _get_data
       _is_end_of_scan
       _run_adc
       _is_adc_ready
       _get_adc
       _store_key_level
         _is_end_of_scan (ARG)
         _get_adc (ARG)
         _process_level (ARG)
           _LED_Off
           _LED_On
   _USBDeviceTasks
     _USBDeviceInit
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On
       _APP_DeviceAudioMIDISOFHandler
       _APP_DeviceAudioMIDIInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _APP_DeviceAudioMIDISOFHandler
         _APP_DeviceAudioMIDIInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
         _APP_DeviceAudioMIDISOFHandler
         _APP_DeviceAudioMIDIInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
     _USBIncrement1msInternalTimers
     _USBCtrlEPAllowStatusStage
     _USBStallHandler
     _USBCtrlEPService
       _USBCtrlTrfSetupHandler
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
           _APP_DeviceAudioMIDISOFHandler
           _APP_DeviceAudioMIDIInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
         _USBCheckStdRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
             _APP_DeviceAudioMIDISOFHandler
             _APP_DeviceAudioMIDIInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _APP_DeviceAudioMIDISOFHandler
               _APP_DeviceAudioMIDIInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
             _memset
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
               _APP_DeviceAudioMIDISOFHandler
               _APP_DeviceAudioMIDIInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService

 _SYS_InterruptHigh (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       9       3        0.0%
BITBANK0            20      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               20      F      20       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10      0      10       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3B       9       73.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            4C      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               4C      0      27      11       51.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4E      13       97.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      EE      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F7      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Sun May 22 01:34:53 2016

                          _SPI_Initialize 03B4                                _USB_SD_Ptr 1028  
                                       pc 0002                               __CFG_CP$OFF 0000  
                                      l14 0097                                        l88 0542  
                             ?_LED_Enable 0070                             _USBDeviceInit 0543  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0061      USER_USB_CALLBACK_EVENT_HANDLER@pdata 0063  
                                     l210 000E                                       l205 0009  
                                     l213 0019                                       l222 0010  
                                     l231 0001                                       l216 0004  
                                     l225 0006                                       l228 0004  
                                     l261 00A8               __end_of_USBStdGetDscHandler 0DD6  
                                     l521 03B3                                       l515 03A0  
                                     l517 03A3                                       l269 0028  
                                     l710 04E2                                       l519 03A6  
                                     l481 039D                                       l491 0387  
                                     l475 038A                                       l485 0374  
                                     l477 038D                                       l830 0754  
                                     l487 0377                                       l479 0390  
                                     l831 0756                                       l911 0401  
                                     l912 0402                                       l489 037A  
                                     l761 0EC0                                       l826 074D  
                                     l924 0449                                       _BDT 0020  
                                     l829 0777                                       l693 047B  
                                     l774 0F2C                                       l847 05C1  
                                     l695 047F                                       l873 0E69  
                                     l890 0721                                       l699 049C  
                                     l876 0E92                                       l789 0FA0  
                                     l888 0720                                       l899 073A  
                                     _UIE 0E92                                       _UIR 0E90  
                  _APP_LEDUpdateUSBStatus 0008                                _USBSuspend 05C8  
                    USBStdSetCfgHandler@i 007D                      USBStdSetCfgHandler@p 007A  
                             _USBRxHandle 0056                              __CFG_BORV$LO 0000  
                                     wreg 0009                            _USBDeviceTasks 0471  
                          _USBDeviceState 0055                               _USBTxHandle 00E5  
                                    S4101 0800                                      S4103 080A  
                                    S4105 0814                                      S4093 07D9  
                                    S4099 07F3                     ??_USBCtrlTrfRxService 0072  
                                    PL220 0F49                                      PL230 0FF1  
                                    PL222 0F5B                                      PL240 07A5  
                                    PL232 078E                                      PL224 0781  
                USBEnableEndpoint@options 0074                                      PL250 07BC  
                                    PL242 07AB                                      PL234 0FFB  
                                    PL226 0F6C                                      PL260 07CE  
                                    PL252 0DDD                                      PL244 07B0  
                                    PL236 0795                                      PL228 0FEB  
                                    PL262 07D4                                      PL254 07C3  
                                    PL246 07B6                                      PL238 079D  
                                    PL256 0DE4                                      PL248 0DD6  
                                    PL258 07C8                              __CFG_LVP$OFF 0000  
                         __end_of_LED_Off 0388                                      l3021 04B7  
                                    l3031 04C4                                      l3015 04AA  
                                    l3201 0248                                      l3105 0686  
                                    l3009 04A5                                      l3211 0339  
                                    l3301 0011                                      l3205 0332  
                                    l3213 0344                                      l3125 06A8  
                                    l3109 068B                                      l3045 04D8  
                                    l3037 04CA                                      l3311 004C  
                                    l3071 0505                                      l3137 0133  
                                    l3321 0079                                      l3313 0051  
                                    l3305 0040                                      l3129 06AE  
                                    l3401 060E                                      l3073 050F  
                                    l3065 04F8                                      l3251 0000  
                                    l3331 008F                                      l3323 0082  
                                    l3315 005B                                      l3307 0042  
                                    l3083 0521                USBConfigureEndpoint@handle 0073  
                                    l3157 015D                                      l3253 0007  
                                    l3261 000A                                      l3325 0087  
                                    l3341 00A1                                      l3309 0047  
                                    l3317 005C                                      l3077 0516  
                                    l3263 000C                                      l3255 0000  
                                    l3335 0095                                      l3319 005E  
                                    l3351 001E                                      l3343 0002  
                                    l3191 020C                                      l3183 01B9  
                                    l3087 0522                                      l3079 051E  
                                    l3431 05F4                                      l3511 0F28  
                                    l2721 008F                                      l3257 0001  
                                    l3273 0000                                      l3337 0099  
                                    l3329 008D                                      l3345 000F  
                                    l3177 0191                                      l2801 0079  
                                    l3259 0006                                      l3267 0001  
                                    l3275 0008                                      l3283 0000  
                                    l3291 0000                                      l3347 0017  
                                    l3195 023A                                      l3187 01E1  
                                    l3523 0F3D                                      l3531 0F3F  
                                    l3451 0651                                      l2733 03A9  
                                    l3269 0000                                      l3277 000E  
                                    l3285 0005                                      l3349 0018  
                                    l2821 054E                                      l3373 05C5  
                                    l3429 05F2                                      l3533 0F43  
                                    l3541 0F45                                      l3701 0DB5  
                                    l3621 0FE4                                      l3605 0FA5  
                                    l3359 03B4                                      l3287 0000  
                                    l3295 0001                                      l3199 0243  
                                    l2911 00C3                                      l4095 0523  
                                    l3543 0E9F                                      l3703 0DB7  
                                    l3615 0FD0                                      l3607 0FB5  
                                    l3463 067C                                      l3297 0008  
                                    l2761 0030                                      l2753 001E  
                                    l2745 000D                                      l4097 053D  
                                    l3553 0EAF                                      l3465 067E  
                                    l3299 000A                                      l2907 00BA  
                                    l2771 003D                                      l2739 0008  
                                    l3387 05F6                                      l3491 0EF8  
                                    l3635 0DF1                                      l3627 0DEA  
                                    l3715 0DCA                                      l3811 0E8C  
                                    l2925 00E7                                      l2917 00D7  
                                    l2837 055E                                      l2765 0039  
                                    l2757 0028                                      l2773 0043  
                                    l2749 0015                                      l3565 0ECA  
                                    l3573 0ED3                                      l3557 0EB3  
                                    l3653 0E06                                      l3717 0749  
                                    l3479 06D9                                      l3495 0F04  
                                    l3911 0422                                      l3831 0729  
                                    l3591 0F8E                                      l3807 0E83  
                                    l2953 0116                                      l2945 0103  
                                    l2865 0586                                      l2849 0573  
                                    l3729 075D                                      l3841 0733  
                                    l3833 072D                                      l3817 0E9B  
                                    l2779 037D                                      l3675 0E2F  
                                    l3691 0D93                                      l3739 076C  
                                    l3915 042A                                      l3843 0734  
                                    l3827 0725                                      l3747 06E8  
                                    l3819 0E9C                                      l2789 0393  
                                    l2949 010D                                      l3685 0E40  
                                    l3693 0D9B                                      l3933 044F  
                                    l3925 043F                                      l3909 041B  
                                    l3853 0742                                      l3829 0727  
                                    l3773 0F71                                      l3687 0D8B  
                                    l3839 0732                                      l3783 0F8C  
                                    l3937 045E                                      l3865 03BA  
                                    l3777 0F76                                      l3785 0E50  
                                    l2977 0482                                      l3939 045F  
                                    l3891 03F1                                      l3875 03CA  
                                    l3877 03CC                                      l3797 0E66  
                                    l2997 0496                                      l2989 048F  
                                    l2999 0499                                      l3899 0408  
                                    u2455 0EFE                                      u2595 0F9C  
                   ??_USBCtrlTrfTxService 0070                                      _UCFG 0E91  
                                    _UEP0 0E98                                      _UEP1 0E99  
                                    _UEIE 0E97                                      _UEIR 0E93  
                                    _UCON 0E8E                                      _TMR0 0015  
                            __CFG_WRT$OFF 0000    USBStdFeatureReqHandler@current_ep_data 0068  
                                    _pDst 00E8                                      _main 0072  
                                    fsr0h 0005                                      fsr1h 0007  
                                    fsr0l 0004                                      indf0 0000  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                                    start 0006                             __CFG_IESO$OFF 0000  
              process_level@current_state 0074                    __end_of_SPI_Initialize 03BA  
                    process_level@idx_key 007C                __end_of_USBCheckStdRequest 0749  
                  ??_USBCtrlTrfOutHandler 0076                             __CFG_MCLRE$ON 0000  
               ??_USBStdFeatureReqHandler 007A                       USBDeviceInit@i_1881 0074  
                    process_level@on_flag 007A                     __end_of_BLEDeviceInit 009B  
                ??_USBStdGetStatusHandler 0070                            ?_USBDeviceInit 0070  
             process_level@key_on_counter 0247                                     ?_main 0070  
                           __CFG_WDTE$OFF 0000         __size_of_USBCtrlEPServiceComplete 003F  
                  __end_of_USBDeviceTasks 0516                 ?_USBCtrlEPServiceComplete 0070  
                                   _UADDR 0E96                                     _USTAT 0E8F  
      __size_of_USBCtrlEPAllowStatusStage 0041                            __CFG_FCMEN$OFF 0000  
                         __end_of_get_adc 0000           __end_of_USBCtrlEPAllowDataStage 0F16  
                                   _sd000 10F5                                     _sd001 1095  
                                   _sd002 10C9            ?_USBIncrement1msInternalTimers 0070  
                           ?_is_adc_ready 0070     __end_of_APP_DeviceAudioMIDIInitialize 06A2  
  __size_of_APP_DeviceAudioMIDIInitialize 0017             _APP_DeviceAudioMIDIInitialize 068B  
                         _store_key_level 0000               __size_of_set_clock_and_data 0000  
                                   _pitch 00E9                           ??_process_level 0073  
                     __size_of_LED_Enable 0016                           __end_of_run_adc 0000  
      APP_DeviceAudioMIDITasks@scan_pitch 006E                                     status 0003  
                                   wtemp0 007E                              __end_ofPL220 0F5B  
                            __end_ofPL230 0FFB                              __end_ofPL222 0F6C  
                            __end_ofPL240 07AB                              __end_ofPL232 0795  
                            __end_ofPL224 078E                              __end_ofPL250 07C3  
                            __end_ofPL242 07B0                              __end_ofPL234 1000  
                            __end_ofPL226 0F71                              __end_ofPL260 07D4  
                            __end_ofPL252 0DE4                              __end_ofPL244 07B6  
                            __end_ofPL236 079D                              __end_ofPL228 0FF1  
                            __end_ofPL262 07D9                              __end_ofPL254 07C8  
                            __end_ofPL246 07BC                              __end_ofPL238 07A5  
                            __end_ofPL256 0DEA                              __end_ofPL248 0DDD  
                            __end_ofPL258 07CE                           ?_SPI_Initialize 0070  
            __size_of_USBStdSetCfgHandler 0054                     process_level@off_flag 0076  
                         __initialization 0048                is_end_of_scan@scan_counter 00ED  
                            __end_of_main 0084                ??_APP_DeviceAudioMIDITasks 007E  
                          __CFG_LPBOR$OFF 0000                             scan_task@note 0067  
               __size_of_USBCtrlEPService 004F                                    ??_main 007E  
                         ?_USBDeviceTasks 0070                               ?_USBSuspend 0070  
                               ??_LED_Off 0070                       __CFG_USBLSCLK$48MHz 0000  
                          ??_is_adc_ready 0070                                    _ACTCON 039B  
                                  _ADRESH 009C                                    _ANSELA 018C  
                  SYSTEM_Initialize@state 0071                                    _LED_On 0388  
                     set_clock_and_data@c 0072                       set_clock_and_data@d 0070  
                                  _OSCCON 0099                            __CFG_PWRTE$OFF 0000  
                       _shortPacketStatus 00EB                          __end_of_get_data 0000  
                         USBDeviceTasks@i 006E               USBStdFeatureReqHandler@pUEP 0066  
                USBTransferOnePacket@data 0071                USBCtrlTrfInHandler@lastDTS 0073  
                         ??_USBDeviceInit 0070                            __CFG_STVREN$ON 0000  
                       _USBEnableEndpoint 06A2           __size_of_USBStdGetStatusHandler 0038  
                                  _memset 0E3E                        ?_USBEnableEndpoint 0074  
                               ??_get_adc 0070                   __end_of_store_key_level 0000  
           __size_of_USBTransferOnePacket 0039                       ??_USBEnableEndpoint 0075  
                               ??_run_adc 0070                               _CtrlTrfData 0048  
                 __size_of_is_end_of_scan 0000                      _controlTransferState 0057  
                       _SYSTEM_Initialize 0084                   __end_of__initialization 0070  
                      ?_SYSTEM_Initialize 0070                  __size_of_USBStallHandler 001B  
                     __size_of_USBSuspend 000B                            __pcstackCOMMON 0070  
               __end_of_USBEnableEndpoint 06C1              _APP_DeviceAudioMIDITasks$416 0068  
            _APP_DeviceAudioMIDITasks$450 006A              _APP_DeviceAudioMIDITasks$451 006C  
                           __end_of_sd000 10F9                             __end_of_sd001 10C9  
                           __end_of_sd002 10E3                       ??_SYSTEM_Initialize 0071  
                               LED_On@led 0070          __size_of_USBCtrlEPAllowDataStage 0038  
                              _adc_levels 0220                    process_level@old_level 0071  
                  process_level@new_level 0072                              ??_LED_Enable 0070  
           __size_of_USBConfigureEndpoint 0027               __end_of_USBCtrlTrfInHandler 0E9F  
                 ?_APP_LEDUpdateUSBStatus 0070                    store_key_level@idx_key 005A  
                          _OPTION_REGbits 0095                            scan_task@state 015A  
              store_key_level@end_of_scan 007D                  ??_USBCtrlTrfSetupHandler 007E  
                 _USBTicksSinceSuspendEnd 0158                 __end_of_SYSTEM_Initialize 0098  
                  _USBStdGetStatusHandler 0749                                __pbssBANK0 0050  
                              __pbssBANK1 00E0                                __pbssBANK2 0120  
                              __pbssBANK3 01A4                                __pbssBANK4 0220  
                                 ?_LED_On 0070                        __end_of_LED_Enable 03B4  
                    store_key_level@level 0061               __size_of_USBWakeFromSuspend 0011  
                             _pBDTEntryIn 0052          __end_of_USBCtrlEPServiceComplete 0EDE  
                      __size_of_scan_init 001C                                __pmaintext 0072  
                      __size_of_scan_task 01EC                      USBCtrlTrfRxService@i 0074  
                    __end_of_is_adc_ready 0000                             LED_Enable@led 0070  
                         __CFG_PLLMULT$3x 0000            __end_of_APP_LEDUpdateUSBStatus 0048  
                              __pintentry 0004                                   ?_memset 0070  
                              _device_dsc 10E3                          _USBCtrlEPService 0637  
                              _ep_data_in 014D                        __size_of_set_timer 0000  
             __end_of_USBCtrlTrfRxService 0FEB                        _USBCheckStdRequest 0710  
                        ?_store_key_level 007D                         _configDescriptor1 1030  
                       scan_task@velocity 0062                                   _LED_Off 0372  
             __end_of_USBCtrlTrfTxService 0F49                       _USBStdSetCfgHandler 0DEA  
                               ?_get_data 0070                       ?_USBCheckStdRequest 0070  
            __size_of_USBStdGetDscHandler 004B                                   _UIEbits 0E92  
                              __stringtab 1000                                   _UIRbits 0E90  
                        ??_SPI_Initialize 0070                           __size_of_LED_On 0016  
                       is_end_of_scan@res 0070            APP_LEDUpdateUSBStatus@ledCount 0050  
         ??_USBIncrement1msInternalTimers 0070                      ?_USBStdSetCfgHandler 0070  
              __size_of_USBEnableEndpoint 001F                      ??_USBCheckStdRequest 007E  
           __size_of_USBCtrlTrfOutHandler 001D                          ??_USBDeviceTasks 006D  
                       ??_USBStallHandler 0070                           __size_of_memset 0012  
               __end_of_configDescriptor1 1095                                   __ptext1 0471  
                                 __ptext2 0637                                   __ptext3 0E50  
                                 __ptext4 0F71                                   __ptext5 0F8E  
                                 __ptext6 06E8                                   __ptext7 0710  
                                 __ptext8 03BA                                   __ptext9 0749  
                                 _inPipes 005B                                   _get_adc 0000  
             _USBDeferOUTDataStagePackets 00E1                              ??_USBSuspend 007A  
                           _scan_task$857 0063                             _scan_task$858 0065  
                ??_PIN_MANAGER_Initialize 0070                __end_of_set_clock_and_data 0000  
                       __end_of_scan_init 0372                         __end_of_scan_task 0356  
                                 _run_adc 0000                        __end_of_USB_CD_Ptr 1030  
                              ??_get_data 0070                __size_of_SYSTEM_Initialize 0014  
         __size_of_USBCtrlTrfSetupHandler 0028                                   clrloop0 0D86  
                          _is_end_of_scan 0000                    __size_of_BLEDeviceInit 0003  
                    end_of_initialization 0070                        __end_of_USB_SD_Ptr 102E  
                     _pBDTEntryEP0OutNext 0059                                   memset@c 0070  
                                 memset@n 0072                                   memset@p 0075  
                   __end_of_process_level 0000                  ?_USBStdFeatureReqHandler 0070  
                       __end_of_set_timer 0000                     ??_USBStdSetCfgHandler 007A  
                              _note_event 0151                        __end_of_USBSuspend 05D3  
                 _USBCtrlEPAllowDataStage 0EDE                              __pstringtext 1000  
                _USBCtrlEPServiceComplete 0E9F                                _wait_timer 00EC  
              _USBStatusStageEnabledFlag1 00E2                _USBStatusStageEnabledFlag2 00E3  
                      USBEnableEndpoint@p 0077            ?_APP_DeviceAudioMIDISOFHandler 0070  
                        __CFG_FOSC$INTOSC 0000                                 _TRISAbits 008C  
                               _TRISBbits 008D                                 _TRISCbits 008E  
                      _ReceivedDataBuffer 00A0                    __end_of_is_end_of_scan 0000  
                      _BothEP0OutUOWNsSet 0155                 USBStdSetCfgHandler@i_2209 007C  
               USBConfigureEndpoint@EPNum 0072         __size_of_APP_DeviceAudioMIDITasks 008F  
              ?_USBCtrlEPAllowStatusStage 0070                 ?_APP_DeviceAudioMIDITasks 0070  
     USER_USB_CALLBACK_EVENT_HANDLER@size 0064                                 _USTATcopy 0060  
            __end_of_USBTransferOnePacket 0163                            __end_of_LED_On 039E  
                   __size_of_is_adc_ready 0000                   process_level@midi_shift 10F9  
             process_level@filtered_state 007B                        __CFG_PLLEN$ENABLED 0000  
                  _USBCtrlTrfSetupHandler 06E8                   process_level@key_states 0120  
                           _BLEDeviceInit 0098                     __end_of_USBDeviceInit 05B7  
   __end_of_USBIncrement1msInternalTimers 05DB    __size_of_USBIncrement1msInternalTimers 0008  
           _USBIncrement1msInternalTimers 05D3                                LED_Off@led 0070  
                          __end_of_memset 0E50                         _USBBusIsSuspended 0157  
                     start_initialization 0048                   ?_USBStdGetStatusHandler 0070  
           USBCtrlTrfRxService@byteToRead 0075           __size_of_PIN_MANAGER_Initialize 0007  
                         ?_is_end_of_scan 0070                            _is_initialized 0159  
                            _is_adc_ready 0000              __end_of_USBConfigureEndpoint 06E8  
         __end_of_USBStdFeatureReqHandler 0471                                  ??_LED_On 0070  
       __end_of_USBCtrlEPAllowStatusStage 0637                  __end_of_USBCtrlEPService 0686  
               ??_USBCtrlEPAllowDataStage 0071                            USBDeviceInit@i 0075  
                          USBDeviceInit@p 0072                    _pBDTEntryEP0OutCurrent 0058  
                 USBTransferOnePacket@dir 0070                   USBTransferOnePacket@len 0073  
                          ?_BLEDeviceInit 0070                       _USBStdGetDscHandler 0D8B  
                                ??_memset 0074                    _USBActiveConfiguration 00EE  
          __end_of_USBStdGetStatusHandler 0781                 process_level@idx_midi_map 1001  
                   _waiting_for_timer$809 0070                                  ?_LED_Off 0070  
                           __pcstackBANK0 0061              __size_of_USBCtrlTrfInHandler 004F  
                    ?_USBStdGetDscHandler 0070                         __size_of_get_data 0000  
              __end_of_USBWakeFromSuspend 05C8                           _USBStallHandler 05DB  
                            _pBDTEntryOut 0153            ?_APP_DeviceAudioMIDIInitialize 0070  
                  _PIN_MANAGER_Initialize 0163                                 __pswtext1 07D9  
                               __pswtext2 07F3                                 __pswtext3 0800  
                               __pswtext4 080A                                 __pswtext5 0814  
                                ?_get_adc 0070                      _USBTransferOnePacket 012A  
                               _msCounter 00E7              process_level@key_off_counter 01A4  
            __end_of_USBCtrlTrfOutHandler 0F8E                     ??_USBStdGetDscHandler 0070  
                             _ep_data_out 014F                                  ?_run_adc 0070  
            __size_of_USBCtrlTrfRxService 005D             USBConfigureEndpoint@direction 0070  
                __size_of_store_key_level 0000                                 _scan_init 0356  
                               _scan_task 016A              __size_of_USBCtrlTrfTxService 0033  
                                _LATCbits 010E                ??_USBCtrlEPServiceComplete 0073  
                               clear_ram0 0D85                        _set_clock_and_data 0000  
                                _PIE1bits 0091                                  _PIE2bits 0092  
                       _waiting_for_timer 0000                           ??_BLEDeviceInit 0070  
                                _PIR2bits 0012                 USBCtrlEPService@setup_cnt 006C  
                      ?_waiting_for_timer 0070                                 _set_timer 0000  
                                _UEP0bits 0E98                _USBDeferINDataStagePackets 00E0  
                                _SSP1CON1 0215                                  _SSP1CON3 0217  
             __size_of_USBCheckStdRequest 0039                       ?_set_clock_and_data 0070  
                                _SSP1STAT 0214                                  _UCONbits 0E8E  
                    _USBConfigureEndpoint 06C1           __end_ofprocess_level@midi_shift 10FA  
        __size_of_USBStdFeatureReqHandler 00B7          __end_of_APP_DeviceAudioMIDITasks 012A  
                     ??_waiting_for_timer 0070                                _ADCON0bits 009D  
                              _ADCON1bits 009E                                _ADCON2bits 009F  
                   ?_USBTransferOnePacket 0070                         _SYS_InterruptHigh 0004  
                            _RemoteWakeup 0156                          __size_of_LED_Off 0016  
                      ?_SYS_InterruptHigh 0070                   __end_of_USBStallHandler 05F6  
                       _process_level$846 0077                         _process_level$847 0078  
                    ??_set_clock_and_data 0071               ??_USBCtrlEPAllowStatusStage 0070  
             __end_of_USBStdSetCfgHandler 0E3E                                ?_scan_init 0070  
                              ?_scan_task 0062                       ??_SYS_InterruptHigh 0070  
               __end_of_waiting_for_timer 0000           ??_APP_DeviceAudioMIDISOFHandler 0070  
                      __end_of_device_dsc 10F5                  ??_APP_LEDUpdateUSBStatus 0071  
                 ?_USBCtrlTrfSetupHandler 0070                   USBStdGetStatusHandler@p 0070  
                  USBTransferOnePacket@ep 0076                                ?_set_timer 0070  
                                _SetupPkt 0040                   __size_of_SPI_Initialize 0006  
                   ?_USBConfigureEndpoint 0070                 __end_of_SYS_InterruptHigh 0006  
                      __end_of__stringtab 1001                          ??_is_end_of_scan 0070  
                              _ANSELAbits 018C                                _ANSELCbits 018E  
                        __size_of_get_adc 0000                    __size_of_process_level 0000  
                 __size_of_USBDeviceTasks 00A5                                  __ptext10 0D8B  
                                __ptext11 0DEA                                  __ptext20 05B7  
                                __ptext12 0E3E                                  __ptext21 0516  
                                __ptext13 0E9F                                  __ptext30 0000  
                                __ptext22 068B                                  __ptext14 0EDE  
                                __ptext31 0000                                  __ptext23 06A2  
                                __ptext15 0F16                                  __ptext40 0000  
                                __ptext32 0388                                  __ptext24 06C1  
                                __ptext16 05F6                                  __ptext41 0000  
                                __ptext33 0372                                  __ptext25 0686  
                                __ptext17 05DB                                  __ptext42 0356  
                                __ptext34 0000                                  __ptext26 0008  
                                __ptext18 05D3                                  __ptext43 012A  
                                __ptext35 0000                                  __ptext27 0543  
                                __ptext19 05C8                                  __ptext44 0098  
                                __ptext36 0000                                  __ptext28 009B  
                                __ptext45 03B4                                  __ptext37 0000  
                                __ptext29 016A                                  __ptext46 0163  
                                __ptext38 0000                                  __ptext47 0084  
                                __ptext39 0000                                  __ptext48 039E  
                                _get_data 0000                          __size_of_run_adc 0000  
                                _midiData 01A0            __end_of_USBCtrlTrfSetupHandler 0710  
                           __size_of_main 0012                         ?_USBCtrlEPService 0070  
                      ??_USBCtrlEPService 006A                         ??_store_key_level 007E  
                     _USBCtrlTrfInHandler 0E50                                  _outPipes 0147  
                    _USBCtrlTrfOutHandler 0F71                 _USBCtrlEPAllowStatusStage 05F6  
                              _LED_Enable 039E                    ??_USBTransferOnePacket 0074  
               _USBDeferStatusStagePacket 0054                                _INTCONbits 000B  
                    ?_USBCtrlTrfInHandler 0070                  _APP_DeviceAudioMIDITasks 009B  
           USBCtrlTrfTxService@byteToSend 0070                                  memset@p1 0074  
                        ?_USBStallHandler 0070                  USBStdFeatureReqHandler@p 0069  
                                intlevel1 0000                               ??_scan_init 0070  
                             ??_scan_task 007E                    __size_of_USBDeviceInit 0074  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0543  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 002D  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0061         ??_USER_USB_CALLBACK_EVENT_HANDLER 007A  
         _USER_USB_CALLBACK_EVENT_HANDLER 0516                __size_of_waiting_for_timer 0000  
       __end_ofprocess_level@idx_midi_map 1028                   ?_PIN_MANAGER_Initialize 0070  
                       __CFG_CLKOUTEN$OFF 0000                             _process_level 0000  
                             _sentNoteOff 00EA           __size_of_APP_LEDUpdateUSBStatus 0040  
   __end_of_APP_DeviceAudioMIDISOFHandler 068B    __size_of_APP_DeviceAudioMIDISOFHandler 0005  
           _APP_DeviceAudioMIDISOFHandler 0686                               ??_set_timer 0070  
                  ??_USBConfigureEndpoint 0071                     ?_USBCtrlTrfOutHandler 0070  
                    __CFG_CPUDIV$NOCLKDIV 0000                       _USBCtrlTrfRxService 0F8E  
                      _USBWakeFromSuspend 05B7                   _USBStdFeatureReqHandler 03BA  
                     _USBCtrlTrfTxService 0F16                __size_of_SYS_InterruptHigh 0002  
         ??_APP_DeviceAudioMIDIInitialize 007A                       ?_USBWakeFromSuspend 0070  
                   ??_USBCtrlTrfInHandler 0071                     _USBAlternateInterface 00EF  
                     USBEnableEndpoint@ep 0079                           _endpoint_number 00E6  
                    ?_USBCtrlTrfRxService 0070            __end_of_PIN_MANAGER_Initialize 016A  
                ?_USBCtrlEPAllowDataStage 0070                      ?_USBCtrlTrfTxService 0070  
                          ?_process_level 0071              _USBStatusStageTimeoutCounter 00E4  
                    ??_USBWakeFromSuspend 007A                USBTransferOnePacket@handle 0077  
                              _USB_CD_Ptr 102E          APP_DeviceAudioMIDITasks@velocity 006F  
