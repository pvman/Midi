

Microchip Technology PIC PRO Macro Assembler V1.34 build -361300703 
                                                                                               Sat Jun 06 23:36:57 2015

Microchip Technology Omniscient Code Generator (PRO mode) build 201502162209
     1                           	processor	16F1455
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	text7,local,class=CODE,merge=1,delta=2
    13                           	psect	swtext1,local,class=CONST,delta=2
    14                           	psect	swtext2,local,class=CONST,delta=2
    15                           	psect	swtext3,local,class=CONST,delta=2
    16                           	psect	swtext4,local,class=CONST,delta=2
    17                           	psect	swtext5,local,class=CONST,delta=2
    18                           	psect	swtext6,local,class=CONST,delta=2
    19                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    24                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	pa_nodes,global,class=CODE,delta=2
    31                           	dabs	1,0x20,32,_BDT
    32                           	dabs	1,0x48,8,_CtrlTrfData
    33                           	dabs	1,0x40,8,_SetupPkt
    34                           	dabs	1,0xA0,64,_ReceivedDataBuffer
    35                           	dabs	1,0x1A0,4,_midiData
    36                           	dabs	1,0x7E,2
    37  0000                     	;# 
    38  0001                     	;# 
    39  0002                     	;# 
    40  0003                     	;# 
    41  0004                     	;# 
    42  0005                     	;# 
    43  0006                     	;# 
    44  0007                     	;# 
    45  0008                     	;# 
    46  0009                     	;# 
    47  000A                     	;# 
    48  000B                     	;# 
    49  000C                     	;# 
    50  000E                     	;# 
    51  0011                     	;# 
    52  0012                     	;# 
    53  0015                     	;# 
    54  0016                     	;# 
    55  0016                     	;# 
    56  0017                     	;# 
    57  0018                     	;# 
    58  0019                     	;# 
    59  001A                     	;# 
    60  001B                     	;# 
    61  001C                     	;# 
    62  008C                     	;# 
    63  008E                     	;# 
    64  0091                     	;# 
    65  0092                     	;# 
    66  0095                     	;# 
    67  0096                     	;# 
    68  0097                     	;# 
    69  0098                     	;# 
    70  0099                     	;# 
    71  009A                     	;# 
    72  009B                     	;# 
    73  009B                     	;# 
    74  009C                     	;# 
    75  009D                     	;# 
    76  009E                     	;# 
    77  009F                     	;# 
    78  010C                     	;# 
    79  010E                     	;# 
    80  0111                     	;# 
    81  0112                     	;# 
    82  0113                     	;# 
    83  0114                     	;# 
    84  0115                     	;# 
    85  0116                     	;# 
    86  0117                     	;# 
    87  0118                     	;# 
    88  0119                     	;# 
    89  011D                     	;# 
    90  018C                     	;# 
    91  018E                     	;# 
    92  0191                     	;# 
    93  0191                     	;# 
    94  0192                     	;# 
    95  0193                     	;# 
    96  0193                     	;# 
    97  0194                     	;# 
    98  0195                     	;# 
    99  0196                     	;# 
   100  0197                     	;# 
   101  0199                     	;# 
   102  019A                     	;# 
   103  019B                     	;# 
   104  019B                     	;# 
   105  019C                     	;# 
   106  019D                     	;# 
   107  019E                     	;# 
   108  019F                     	;# 
   109  020C                     	;# 
   110  0211                     	;# 
   111  0211                     	;# 
   112  0212                     	;# 
   113  0212                     	;# 
   114  0213                     	;# 
   115  0213                     	;# 
   116  0214                     	;# 
   117  0214                     	;# 
   118  0215                     	;# 
   119  0215                     	;# 
   120  0215                     	;# 
   121  0216                     	;# 
   122  0216                     	;# 
   123  0217                     	;# 
   124  0217                     	;# 
   125  0391                     	;# 
   126  0392                     	;# 
   127  0393                     	;# 
   128  039A                     	;# 
   129  039B                     	;# 
   130  0611                     	;# 
   131  0612                     	;# 
   132  0613                     	;# 
   133  0613                     	;# 
   134  0614                     	;# 
   135  0615                     	;# 
   136  0616                     	;# 
   137  0616                     	;# 
   138  0691                     	;# 
   139  0692                     	;# 
   140  0693                     	;# 
   141  0694                     	;# 
   142  0695                     	;# 
   143  0E8E                     	;# 
   144  0E8F                     	;# 
   145  0E90                     	;# 
   146  0E91                     	;# 
   147  0E92                     	;# 
   148  0E93                     	;# 
   149  0E94                     	;# 
   150  0E94                     	;# 
   151  0E95                     	;# 
   152  0E96                     	;# 
   153  0E97                     	;# 
   154  0E98                     	;# 
   155  0E99                     	;# 
   156  0E9A                     	;# 
   157  0E9B                     	;# 
   158  0E9C                     	;# 
   159  0E9D                     	;# 
   160  0E9E                     	;# 
   161  0E9F                     	;# 
   162  0FE4                     	;# 
   163  0FE5                     	;# 
   164  0FE6                     	;# 
   165  0FE7                     	;# 
   166  0FE8                     	;# 
   167  0FE9                     	;# 
   168  0FEA                     	;# 
   169  0FEB                     	;# 
   170  0FED                     	;# 
   171  0FEE                     	;# 
   172  0FEF                     	;# 
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  0007                     	;# 
   181  0008                     	;# 
   182  0009                     	;# 
   183  000A                     	;# 
   184  000B                     	;# 
   185  000C                     	;# 
   186  000E                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0015                     	;# 
   190  0016                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001C                     	;# 
   198  008C                     	;# 
   199  008E                     	;# 
   200  0091                     	;# 
   201  0092                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  010C                     	;# 
   215  010E                     	;# 
   216  0111                     	;# 
   217  0112                     	;# 
   218  0113                     	;# 
   219  0114                     	;# 
   220  0115                     	;# 
   221  0116                     	;# 
   222  0117                     	;# 
   223  0118                     	;# 
   224  0119                     	;# 
   225  011D                     	;# 
   226  018C                     	;# 
   227  018E                     	;# 
   228  0191                     	;# 
   229  0191                     	;# 
   230  0192                     	;# 
   231  0193                     	;# 
   232  0193                     	;# 
   233  0194                     	;# 
   234  0195                     	;# 
   235  0196                     	;# 
   236  0197                     	;# 
   237  0199                     	;# 
   238  019A                     	;# 
   239  019B                     	;# 
   240  019B                     	;# 
   241  019C                     	;# 
   242  019D                     	;# 
   243  019E                     	;# 
   244  019F                     	;# 
   245  020C                     	;# 
   246  0211                     	;# 
   247  0211                     	;# 
   248  0212                     	;# 
   249  0212                     	;# 
   250  0213                     	;# 
   251  0213                     	;# 
   252  0214                     	;# 
   253  0214                     	;# 
   254  0215                     	;# 
   255  0215                     	;# 
   256  0215                     	;# 
   257  0216                     	;# 
   258  0216                     	;# 
   259  0217                     	;# 
   260  0217                     	;# 
   261  0391                     	;# 
   262  0392                     	;# 
   263  0393                     	;# 
   264  039A                     	;# 
   265  039B                     	;# 
   266  0611                     	;# 
   267  0612                     	;# 
   268  0613                     	;# 
   269  0613                     	;# 
   270  0614                     	;# 
   271  0615                     	;# 
   272  0616                     	;# 
   273  0616                     	;# 
   274  0691                     	;# 
   275  0692                     	;# 
   276  0693                     	;# 
   277  0694                     	;# 
   278  0695                     	;# 
   279  0E8E                     	;# 
   280  0E8F                     	;# 
   281  0E90                     	;# 
   282  0E91                     	;# 
   283  0E92                     	;# 
   284  0E93                     	;# 
   285  0E94                     	;# 
   286  0E94                     	;# 
   287  0E95                     	;# 
   288  0E96                     	;# 
   289  0E97                     	;# 
   290  0E98                     	;# 
   291  0E99                     	;# 
   292  0E9A                     	;# 
   293  0E9B                     	;# 
   294  0E9C                     	;# 
   295  0E9D                     	;# 
   296  0E9E                     	;# 
   297  0E9F                     	;# 
   298  0FE4                     	;# 
   299  0FE5                     	;# 
   300  0FE6                     	;# 
   301  0FE7                     	;# 
   302  0FE8                     	;# 
   303  0FE9                     	;# 
   304  0FEA                     	;# 
   305  0FEB                     	;# 
   306  0FED                     	;# 
   307  0FEE                     	;# 
   308  0FEF                     	;# 
   309  0000                     	;# 
   310  0001                     	;# 
   311  0002                     	;# 
   312  0003                     	;# 
   313  0004                     	;# 
   314  0005                     	;# 
   315  0006                     	;# 
   316  0007                     	;# 
   317  0008                     	;# 
   318  0009                     	;# 
   319  000A                     	;# 
   320  000B                     	;# 
   321  000C                     	;# 
   322  000E                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0015                     	;# 
   326  0016                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001C                     	;# 
   334  008C                     	;# 
   335  008E                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  010C                     	;# 
   351  010E                     	;# 
   352  0111                     	;# 
   353  0112                     	;# 
   354  0113                     	;# 
   355  0114                     	;# 
   356  0115                     	;# 
   357  0116                     	;# 
   358  0117                     	;# 
   359  0118                     	;# 
   360  0119                     	;# 
   361  011D                     	;# 
   362  018C                     	;# 
   363  018E                     	;# 
   364  0191                     	;# 
   365  0191                     	;# 
   366  0192                     	;# 
   367  0193                     	;# 
   368  0193                     	;# 
   369  0194                     	;# 
   370  0195                     	;# 
   371  0196                     	;# 
   372  0197                     	;# 
   373  0199                     	;# 
   374  019A                     	;# 
   375  019B                     	;# 
   376  019B                     	;# 
   377  019C                     	;# 
   378  019D                     	;# 
   379  019E                     	;# 
   380  019F                     	;# 
   381  020C                     	;# 
   382  0211                     	;# 
   383  0211                     	;# 
   384  0212                     	;# 
   385  0212                     	;# 
   386  0213                     	;# 
   387  0213                     	;# 
   388  0214                     	;# 
   389  0214                     	;# 
   390  0215                     	;# 
   391  0215                     	;# 
   392  0215                     	;# 
   393  0216                     	;# 
   394  0216                     	;# 
   395  0217                     	;# 
   396  0217                     	;# 
   397  0391                     	;# 
   398  0392                     	;# 
   399  0393                     	;# 
   400  039A                     	;# 
   401  039B                     	;# 
   402  0611                     	;# 
   403  0612                     	;# 
   404  0613                     	;# 
   405  0613                     	;# 
   406  0614                     	;# 
   407  0615                     	;# 
   408  0616                     	;# 
   409  0616                     	;# 
   410  0691                     	;# 
   411  0692                     	;# 
   412  0693                     	;# 
   413  0694                     	;# 
   414  0695                     	;# 
   415  0E8E                     	;# 
   416  0E8F                     	;# 
   417  0E90                     	;# 
   418  0E91                     	;# 
   419  0E92                     	;# 
   420  0E93                     	;# 
   421  0E94                     	;# 
   422  0E94                     	;# 
   423  0E95                     	;# 
   424  0E96                     	;# 
   425  0E97                     	;# 
   426  0E98                     	;# 
   427  0E99                     	;# 
   428  0E9A                     	;# 
   429  0E9B                     	;# 
   430  0E9C                     	;# 
   431  0E9D                     	;# 
   432  0E9E                     	;# 
   433  0E9F                     	;# 
   434  0FE4                     	;# 
   435  0FE5                     	;# 
   436  0FE6                     	;# 
   437  0FE7                     	;# 
   438  0FE8                     	;# 
   439  0FE9                     	;# 
   440  0FEA                     	;# 
   441  0FEB                     	;# 
   442  0FED                     	;# 
   443  0FEE                     	;# 
   444  0FEF                     	;# 
   445  0000                     	;# 
   446  0001                     	;# 
   447  0002                     	;# 
   448  0003                     	;# 
   449  0004                     	;# 
   450  0005                     	;# 
   451  0006                     	;# 
   452  0007                     	;# 
   453  0008                     	;# 
   454  0009                     	;# 
   455  000A                     	;# 
   456  000B                     	;# 
   457  000C                     	;# 
   458  000E                     	;# 
   459  0011                     	;# 
   460  0012                     	;# 
   461  0015                     	;# 
   462  0016                     	;# 
   463  0016                     	;# 
   464  0017                     	;# 
   465  0018                     	;# 
   466  0019                     	;# 
   467  001A                     	;# 
   468  001B                     	;# 
   469  001C                     	;# 
   470  008C                     	;# 
   471  008E                     	;# 
   472  0091                     	;# 
   473  0092                     	;# 
   474  0095                     	;# 
   475  0096                     	;# 
   476  0097                     	;# 
   477  0098                     	;# 
   478  0099                     	;# 
   479  009A                     	;# 
   480  009B                     	;# 
   481  009B                     	;# 
   482  009C                     	;# 
   483  009D                     	;# 
   484  009E                     	;# 
   485  009F                     	;# 
   486  010C                     	;# 
   487  010E                     	;# 
   488  0111                     	;# 
   489  0112                     	;# 
   490  0113                     	;# 
   491  0114                     	;# 
   492  0115                     	;# 
   493  0116                     	;# 
   494  0117                     	;# 
   495  0118                     	;# 
   496  0119                     	;# 
   497  011D                     	;# 
   498  018C                     	;# 
   499  018E                     	;# 
   500  0191                     	;# 
   501  0191                     	;# 
   502  0192                     	;# 
   503  0193                     	;# 
   504  0193                     	;# 
   505  0194                     	;# 
   506  0195                     	;# 
   507  0196                     	;# 
   508  0197                     	;# 
   509  0199                     	;# 
   510  019A                     	;# 
   511  019B                     	;# 
   512  019B                     	;# 
   513  019C                     	;# 
   514  019D                     	;# 
   515  019E                     	;# 
   516  019F                     	;# 
   517  020C                     	;# 
   518  0211                     	;# 
   519  0211                     	;# 
   520  0212                     	;# 
   521  0212                     	;# 
   522  0213                     	;# 
   523  0213                     	;# 
   524  0214                     	;# 
   525  0214                     	;# 
   526  0215                     	;# 
   527  0215                     	;# 
   528  0215                     	;# 
   529  0216                     	;# 
   530  0216                     	;# 
   531  0217                     	;# 
   532  0217                     	;# 
   533  0391                     	;# 
   534  0392                     	;# 
   535  0393                     	;# 
   536  039A                     	;# 
   537  039B                     	;# 
   538  0611                     	;# 
   539  0612                     	;# 
   540  0613                     	;# 
   541  0613                     	;# 
   542  0614                     	;# 
   543  0615                     	;# 
   544  0616                     	;# 
   545  0616                     	;# 
   546  0691                     	;# 
   547  0692                     	;# 
   548  0693                     	;# 
   549  0694                     	;# 
   550  0695                     	;# 
   551  0E8E                     	;# 
   552  0E8F                     	;# 
   553  0E90                     	;# 
   554  0E91                     	;# 
   555  0E92                     	;# 
   556  0E93                     	;# 
   557  0E94                     	;# 
   558  0E94                     	;# 
   559  0E95                     	;# 
   560  0E96                     	;# 
   561  0E97                     	;# 
   562  0E98                     	;# 
   563  0E99                     	;# 
   564  0E9A                     	;# 
   565  0E9B                     	;# 
   566  0E9C                     	;# 
   567  0E9D                     	;# 
   568  0E9E                     	;# 
   569  0E9F                     	;# 
   570  0FE4                     	;# 
   571  0FE5                     	;# 
   572  0FE6                     	;# 
   573  0FE7                     	;# 
   574  0FE8                     	;# 
   575  0FE9                     	;# 
   576  0FEA                     	;# 
   577  0FEB                     	;# 
   578  0FED                     	;# 
   579  0FEE                     	;# 
   580  0FEF                     	;# 
   581  0000                     	;# 
   582  0001                     	;# 
   583  0002                     	;# 
   584  0003                     	;# 
   585  0004                     	;# 
   586  0005                     	;# 
   587  0006                     	;# 
   588  0007                     	;# 
   589  0008                     	;# 
   590  0009                     	;# 
   591  000A                     	;# 
   592  000B                     	;# 
   593  000C                     	;# 
   594  000E                     	;# 
   595  0011                     	;# 
   596  0012                     	;# 
   597  0015                     	;# 
   598  0016                     	;# 
   599  0016                     	;# 
   600  0017                     	;# 
   601  0018                     	;# 
   602  0019                     	;# 
   603  001A                     	;# 
   604  001B                     	;# 
   605  001C                     	;# 
   606  008C                     	;# 
   607  008E                     	;# 
   608  0091                     	;# 
   609  0092                     	;# 
   610  0095                     	;# 
   611  0096                     	;# 
   612  0097                     	;# 
   613  0098                     	;# 
   614  0099                     	;# 
   615  009A                     	;# 
   616  009B                     	;# 
   617  009B                     	;# 
   618  009C                     	;# 
   619  009D                     	;# 
   620  009E                     	;# 
   621  009F                     	;# 
   622  010C                     	;# 
   623  010E                     	;# 
   624  0111                     	;# 
   625  0112                     	;# 
   626  0113                     	;# 
   627  0114                     	;# 
   628  0115                     	;# 
   629  0116                     	;# 
   630  0117                     	;# 
   631  0118                     	;# 
   632  0119                     	;# 
   633  011D                     	;# 
   634  018C                     	;# 
   635  018E                     	;# 
   636  0191                     	;# 
   637  0191                     	;# 
   638  0192                     	;# 
   639  0193                     	;# 
   640  0193                     	;# 
   641  0194                     	;# 
   642  0195                     	;# 
   643  0196                     	;# 
   644  0197                     	;# 
   645  0199                     	;# 
   646  019A                     	;# 
   647  019B                     	;# 
   648  019B                     	;# 
   649  019C                     	;# 
   650  019D                     	;# 
   651  019E                     	;# 
   652  019F                     	;# 
   653  020C                     	;# 
   654  0211                     	;# 
   655  0211                     	;# 
   656  0212                     	;# 
   657  0212                     	;# 
   658  0213                     	;# 
   659  0213                     	;# 
   660  0214                     	;# 
   661  0214                     	;# 
   662  0215                     	;# 
   663  0215                     	;# 
   664  0215                     	;# 
   665  0216                     	;# 
   666  0216                     	;# 
   667  0217                     	;# 
   668  0217                     	;# 
   669  0391                     	;# 
   670  0392                     	;# 
   671  0393                     	;# 
   672  039A                     	;# 
   673  039B                     	;# 
   674  0611                     	;# 
   675  0612                     	;# 
   676  0613                     	;# 
   677  0613                     	;# 
   678  0614                     	;# 
   679  0615                     	;# 
   680  0616                     	;# 
   681  0616                     	;# 
   682  0691                     	;# 
   683  0692                     	;# 
   684  0693                     	;# 
   685  0694                     	;# 
   686  0695                     	;# 
   687  0E8E                     	;# 
   688  0E8F                     	;# 
   689  0E90                     	;# 
   690  0E91                     	;# 
   691  0E92                     	;# 
   692  0E93                     	;# 
   693  0E94                     	;# 
   694  0E94                     	;# 
   695  0E95                     	;# 
   696  0E96                     	;# 
   697  0E97                     	;# 
   698  0E98                     	;# 
   699  0E99                     	;# 
   700  0E9A                     	;# 
   701  0E9B                     	;# 
   702  0E9C                     	;# 
   703  0E9D                     	;# 
   704  0E9E                     	;# 
   705  0E9F                     	;# 
   706  0FE4                     	;# 
   707  0FE5                     	;# 
   708  0FE6                     	;# 
   709  0FE7                     	;# 
   710  0FE8                     	;# 
   711  0FE9                     	;# 
   712  0FEA                     	;# 
   713  0FEB                     	;# 
   714  0FED                     	;# 
   715  0FEE                     	;# 
   716  0FEF                     	;# 
   717  0000                     	;# 
   718  0001                     	;# 
   719  0002                     	;# 
   720  0003                     	;# 
   721  0004                     	;# 
   722  0005                     	;# 
   723  0006                     	;# 
   724  0007                     	;# 
   725  0008                     	;# 
   726  0009                     	;# 
   727  000A                     	;# 
   728  000B                     	;# 
   729  000C                     	;# 
   730  000E                     	;# 
   731  0011                     	;# 
   732  0012                     	;# 
   733  0015                     	;# 
   734  0016                     	;# 
   735  0016                     	;# 
   736  0017                     	;# 
   737  0018                     	;# 
   738  0019                     	;# 
   739  001A                     	;# 
   740  001B                     	;# 
   741  001C                     	;# 
   742  008C                     	;# 
   743  008E                     	;# 
   744  0091                     	;# 
   745  0092                     	;# 
   746  0095                     	;# 
   747  0096                     	;# 
   748  0097                     	;# 
   749  0098                     	;# 
   750  0099                     	;# 
   751  009A                     	;# 
   752  009B                     	;# 
   753  009B                     	;# 
   754  009C                     	;# 
   755  009D                     	;# 
   756  009E                     	;# 
   757  009F                     	;# 
   758  010C                     	;# 
   759  010E                     	;# 
   760  0111                     	;# 
   761  0112                     	;# 
   762  0113                     	;# 
   763  0114                     	;# 
   764  0115                     	;# 
   765  0116                     	;# 
   766  0117                     	;# 
   767  0118                     	;# 
   768  0119                     	;# 
   769  011D                     	;# 
   770  018C                     	;# 
   771  018E                     	;# 
   772  0191                     	;# 
   773  0191                     	;# 
   774  0192                     	;# 
   775  0193                     	;# 
   776  0193                     	;# 
   777  0194                     	;# 
   778  0195                     	;# 
   779  0196                     	;# 
   780  0197                     	;# 
   781  0199                     	;# 
   782  019A                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019C                     	;# 
   786  019D                     	;# 
   787  019E                     	;# 
   788  019F                     	;# 
   789  020C                     	;# 
   790  0211                     	;# 
   791  0211                     	;# 
   792  0212                     	;# 
   793  0212                     	;# 
   794  0213                     	;# 
   795  0213                     	;# 
   796  0214                     	;# 
   797  0214                     	;# 
   798  0215                     	;# 
   799  0215                     	;# 
   800  0215                     	;# 
   801  0216                     	;# 
   802  0216                     	;# 
   803  0217                     	;# 
   804  0217                     	;# 
   805  0391                     	;# 
   806  0392                     	;# 
   807  0393                     	;# 
   808  039A                     	;# 
   809  039B                     	;# 
   810  0611                     	;# 
   811  0612                     	;# 
   812  0613                     	;# 
   813  0613                     	;# 
   814  0614                     	;# 
   815  0615                     	;# 
   816  0616                     	;# 
   817  0616                     	;# 
   818  0691                     	;# 
   819  0692                     	;# 
   820  0693                     	;# 
   821  0694                     	;# 
   822  0695                     	;# 
   823  0E8E                     	;# 
   824  0E8F                     	;# 
   825  0E90                     	;# 
   826  0E91                     	;# 
   827  0E92                     	;# 
   828  0E93                     	;# 
   829  0E94                     	;# 
   830  0E94                     	;# 
   831  0E95                     	;# 
   832  0E96                     	;# 
   833  0E97                     	;# 
   834  0E98                     	;# 
   835  0E99                     	;# 
   836  0E9A                     	;# 
   837  0E9B                     	;# 
   838  0E9C                     	;# 
   839  0E9D                     	;# 
   840  0E9E                     	;# 
   841  0E9F                     	;# 
   842  0FE4                     	;# 
   843  0FE5                     	;# 
   844  0FE6                     	;# 
   845  0FE7                     	;# 
   846  0FE8                     	;# 
   847  0FE9                     	;# 
   848  0FEA                     	;# 
   849  0FEB                     	;# 
   850  0FED                     	;# 
   851  0FEE                     	;# 
   852  0FEF                     	;# 
   853  0000                     	;# 
   854  0001                     	;# 
   855  0002                     	;# 
   856  0003                     	;# 
   857  0004                     	;# 
   858  0005                     	;# 
   859  0006                     	;# 
   860  0007                     	;# 
   861  0008                     	;# 
   862  0009                     	;# 
   863  000A                     	;# 
   864  000B                     	;# 
   865  000C                     	;# 
   866  000E                     	;# 
   867  0011                     	;# 
   868  0012                     	;# 
   869  0015                     	;# 
   870  0016                     	;# 
   871  0016                     	;# 
   872  0017                     	;# 
   873  0018                     	;# 
   874  0019                     	;# 
   875  001A                     	;# 
   876  001B                     	;# 
   877  001C                     	;# 
   878  008C                     	;# 
   879  008E                     	;# 
   880  0091                     	;# 
   881  0092                     	;# 
   882  0095                     	;# 
   883  0096                     	;# 
   884  0097                     	;# 
   885  0098                     	;# 
   886  0099                     	;# 
   887  009A                     	;# 
   888  009B                     	;# 
   889  009B                     	;# 
   890  009C                     	;# 
   891  009D                     	;# 
   892  009E                     	;# 
   893  009F                     	;# 
   894  010C                     	;# 
   895  010E                     	;# 
   896  0111                     	;# 
   897  0112                     	;# 
   898  0113                     	;# 
   899  0114                     	;# 
   900  0115                     	;# 
   901  0116                     	;# 
   902  0117                     	;# 
   903  0118                     	;# 
   904  0119                     	;# 
   905  011D                     	;# 
   906  018C                     	;# 
   907  018E                     	;# 
   908  0191                     	;# 
   909  0191                     	;# 
   910  0192                     	;# 
   911  0193                     	;# 
   912  0193                     	;# 
   913  0194                     	;# 
   914  0195                     	;# 
   915  0196                     	;# 
   916  0197                     	;# 
   917  0199                     	;# 
   918  019A                     	;# 
   919  019B                     	;# 
   920  019B                     	;# 
   921  019C                     	;# 
   922  019D                     	;# 
   923  019E                     	;# 
   924  019F                     	;# 
   925  020C                     	;# 
   926  0211                     	;# 
   927  0211                     	;# 
   928  0212                     	;# 
   929  0212                     	;# 
   930  0213                     	;# 
   931  0213                     	;# 
   932  0214                     	;# 
   933  0214                     	;# 
   934  0215                     	;# 
   935  0215                     	;# 
   936  0215                     	;# 
   937  0216                     	;# 
   938  0216                     	;# 
   939  0217                     	;# 
   940  0217                     	;# 
   941  0391                     	;# 
   942  0392                     	;# 
   943  0393                     	;# 
   944  039A                     	;# 
   945  039B                     	;# 
   946  0611                     	;# 
   947  0612                     	;# 
   948  0613                     	;# 
   949  0613                     	;# 
   950  0614                     	;# 
   951  0615                     	;# 
   952  0616                     	;# 
   953  0616                     	;# 
   954  0691                     	;# 
   955  0692                     	;# 
   956  0693                     	;# 
   957  0694                     	;# 
   958  0695                     	;# 
   959  0E8E                     	;# 
   960  0E8F                     	;# 
   961  0E90                     	;# 
   962  0E91                     	;# 
   963  0E92                     	;# 
   964  0E93                     	;# 
   965  0E94                     	;# 
   966  0E94                     	;# 
   967  0E95                     	;# 
   968  0E96                     	;# 
   969  0E97                     	;# 
   970  0E98                     	;# 
   971  0E99                     	;# 
   972  0E9A                     	;# 
   973  0E9B                     	;# 
   974  0E9C                     	;# 
   975  0E9D                     	;# 
   976  0E9E                     	;# 
   977  0E9F                     	;# 
   978  0FE4                     	;# 
   979  0FE5                     	;# 
   980  0FE6                     	;# 
   981  0FE7                     	;# 
   982  0FE8                     	;# 
   983  0FE9                     	;# 
   984  0FEA                     	;# 
   985  0FEB                     	;# 
   986  0FED                     	;# 
   987  0FEE                     	;# 
   988  0FEF                     	;# 
   989  0000                     	;# 
   990  0001                     	;# 
   991  0002                     	;# 
   992  0003                     	;# 
   993  0004                     	;# 
   994  0005                     	;# 
   995  0006                     	;# 
   996  0007                     	;# 
   997  0008                     	;# 
   998  0009                     	;# 
   999  000A                     	;# 
  1000  000B                     	;# 
  1001  000C                     	;# 
  1002  000E                     	;# 
  1003  0011                     	;# 
  1004  0012                     	;# 
  1005  0015                     	;# 
  1006  0016                     	;# 
  1007  0016                     	;# 
  1008  0017                     	;# 
  1009  0018                     	;# 
  1010  0019                     	;# 
  1011  001A                     	;# 
  1012  001B                     	;# 
  1013  001C                     	;# 
  1014  008C                     	;# 
  1015  008E                     	;# 
  1016  0091                     	;# 
  1017  0092                     	;# 
  1018  0095                     	;# 
  1019  0096                     	;# 
  1020  0097                     	;# 
  1021  0098                     	;# 
  1022  0099                     	;# 
  1023  009A                     	;# 
  1024  009B                     	;# 
  1025  009B                     	;# 
  1026  009C                     	;# 
  1027  009D                     	;# 
  1028  009E                     	;# 
  1029  009F                     	;# 
  1030  010C                     	;# 
  1031  010E                     	;# 
  1032  0111                     	;# 
  1033  0112                     	;# 
  1034  0113                     	;# 
  1035  0114                     	;# 
  1036  0115                     	;# 
  1037  0116                     	;# 
  1038  0117                     	;# 
  1039  0118                     	;# 
  1040  0119                     	;# 
  1041  011D                     	;# 
  1042  018C                     	;# 
  1043  018E                     	;# 
  1044  0191                     	;# 
  1045  0191                     	;# 
  1046  0192                     	;# 
  1047  0193                     	;# 
  1048  0193                     	;# 
  1049  0194                     	;# 
  1050  0195                     	;# 
  1051  0196                     	;# 
  1052  0197                     	;# 
  1053  0199                     	;# 
  1054  019A                     	;# 
  1055  019B                     	;# 
  1056  019B                     	;# 
  1057  019C                     	;# 
  1058  019D                     	;# 
  1059  019E                     	;# 
  1060  019F                     	;# 
  1061  020C                     	;# 
  1062  0211                     	;# 
  1063  0211                     	;# 
  1064  0212                     	;# 
  1065  0212                     	;# 
  1066  0213                     	;# 
  1067  0213                     	;# 
  1068  0214                     	;# 
  1069  0214                     	;# 
  1070  0215                     	;# 
  1071  0215                     	;# 
  1072  0215                     	;# 
  1073  0216                     	;# 
  1074  0216                     	;# 
  1075  0217                     	;# 
  1076  0217                     	;# 
  1077  0391                     	;# 
  1078  0392                     	;# 
  1079  0393                     	;# 
  1080  039A                     	;# 
  1081  039B                     	;# 
  1082  0611                     	;# 
  1083  0612                     	;# 
  1084  0613                     	;# 
  1085  0613                     	;# 
  1086  0614                     	;# 
  1087  0615                     	;# 
  1088  0616                     	;# 
  1089  0616                     	;# 
  1090  0691                     	;# 
  1091  0692                     	;# 
  1092  0693                     	;# 
  1093  0694                     	;# 
  1094  0695                     	;# 
  1095  0E8E                     	;# 
  1096  0E8F                     	;# 
  1097  0E90                     	;# 
  1098  0E91                     	;# 
  1099  0E92                     	;# 
  1100  0E93                     	;# 
  1101  0E94                     	;# 
  1102  0E94                     	;# 
  1103  0E95                     	;# 
  1104  0E96                     	;# 
  1105  0E97                     	;# 
  1106  0E98                     	;# 
  1107  0E99                     	;# 
  1108  0E9A                     	;# 
  1109  0E9B                     	;# 
  1110  0E9C                     	;# 
  1111  0E9D                     	;# 
  1112  0E9E                     	;# 
  1113  0E9F                     	;# 
  1114  0FE4                     	;# 
  1115  0FE5                     	;# 
  1116  0FE6                     	;# 
  1117  0FE7                     	;# 
  1118  0FE8                     	;# 
  1119  0FE9                     	;# 
  1120  0FEA                     	;# 
  1121  0FEB                     	;# 
  1122  0FED                     	;# 
  1123  0FEE                     	;# 
  1124  0FEF                     	;# 
  1125  0000                     	;# 
  1126  0001                     	;# 
  1127  0002                     	;# 
  1128  0003                     	;# 
  1129  0004                     	;# 
  1130  0005                     	;# 
  1131  0006                     	;# 
  1132  0007                     	;# 
  1133  0008                     	;# 
  1134  0009                     	;# 
  1135  000A                     	;# 
  1136  000B                     	;# 
  1137  000C                     	;# 
  1138  000E                     	;# 
  1139  0011                     	;# 
  1140  0012                     	;# 
  1141  0015                     	;# 
  1142  0016                     	;# 
  1143  0016                     	;# 
  1144  0017                     	;# 
  1145  0018                     	;# 
  1146  0019                     	;# 
  1147  001A                     	;# 
  1148  001B                     	;# 
  1149  001C                     	;# 
  1150  008C                     	;# 
  1151  008E                     	;# 
  1152  0091                     	;# 
  1153  0092                     	;# 
  1154  0095                     	;# 
  1155  0096                     	;# 
  1156  0097                     	;# 
  1157  0098                     	;# 
  1158  0099                     	;# 
  1159  009A                     	;# 
  1160  009B                     	;# 
  1161  009B                     	;# 
  1162  009C                     	;# 
  1163  009D                     	;# 
  1164  009E                     	;# 
  1165  009F                     	;# 
  1166  010C                     	;# 
  1167  010E                     	;# 
  1168  0111                     	;# 
  1169  0112                     	;# 
  1170  0113                     	;# 
  1171  0114                     	;# 
  1172  0115                     	;# 
  1173  0116                     	;# 
  1174  0117                     	;# 
  1175  0118                     	;# 
  1176  0119                     	;# 
  1177  011D                     	;# 
  1178  018C                     	;# 
  1179  018E                     	;# 
  1180  0191                     	;# 
  1181  0191                     	;# 
  1182  0192                     	;# 
  1183  0193                     	;# 
  1184  0193                     	;# 
  1185  0194                     	;# 
  1186  0195                     	;# 
  1187  0196                     	;# 
  1188  0197                     	;# 
  1189  0199                     	;# 
  1190  019A                     	;# 
  1191  019B                     	;# 
  1192  019B                     	;# 
  1193  019C                     	;# 
  1194  019D                     	;# 
  1195  019E                     	;# 
  1196  019F                     	;# 
  1197  020C                     	;# 
  1198  0211                     	;# 
  1199  0211                     	;# 
  1200  0212                     	;# 
  1201  0212                     	;# 
  1202  0213                     	;# 
  1203  0213                     	;# 
  1204  0214                     	;# 
  1205  0214                     	;# 
  1206  0215                     	;# 
  1207  0215                     	;# 
  1208  0215                     	;# 
  1209  0216                     	;# 
  1210  0216                     	;# 
  1211  0217                     	;# 
  1212  0217                     	;# 
  1213  0391                     	;# 
  1214  0392                     	;# 
  1215  0393                     	;# 
  1216  039A                     	;# 
  1217  039B                     	;# 
  1218  0611                     	;# 
  1219  0612                     	;# 
  1220  0613                     	;# 
  1221  0613                     	;# 
  1222  0614                     	;# 
  1223  0615                     	;# 
  1224  0616                     	;# 
  1225  0616                     	;# 
  1226  0691                     	;# 
  1227  0692                     	;# 
  1228  0693                     	;# 
  1229  0694                     	;# 
  1230  0695                     	;# 
  1231  0E8E                     	;# 
  1232  0E8F                     	;# 
  1233  0E90                     	;# 
  1234  0E91                     	;# 
  1235  0E92                     	;# 
  1236  0E93                     	;# 
  1237  0E94                     	;# 
  1238  0E94                     	;# 
  1239  0E95                     	;# 
  1240  0E96                     	;# 
  1241  0E97                     	;# 
  1242  0E98                     	;# 
  1243  0E99                     	;# 
  1244  0E9A                     	;# 
  1245  0E9B                     	;# 
  1246  0E9C                     	;# 
  1247  0E9D                     	;# 
  1248  0E9E                     	;# 
  1249  0E9F                     	;# 
  1250  0FE4                     	;# 
  1251  0FE5                     	;# 
  1252  0FE6                     	;# 
  1253  0FE7                     	;# 
  1254  0FE8                     	;# 
  1255  0FE9                     	;# 
  1256  0FEA                     	;# 
  1257  0FEB                     	;# 
  1258  0FED                     	;# 
  1259  0FEE                     	;# 
  1260  0FEF                     	;# 
  1261  0000                     	;# 
  1262  0001                     	;# 
  1263  0002                     	;# 
  1264  0003                     	;# 
  1265  0004                     	;# 
  1266  0005                     	;# 
  1267  0006                     	;# 
  1268  0007                     	;# 
  1269  0008                     	;# 
  1270  0009                     	;# 
  1271  000A                     	;# 
  1272  000B                     	;# 
  1273  000C                     	;# 
  1274  000E                     	;# 
  1275  0011                     	;# 
  1276  0012                     	;# 
  1277  0015                     	;# 
  1278  0016                     	;# 
  1279  0016                     	;# 
  1280  0017                     	;# 
  1281  0018                     	;# 
  1282  0019                     	;# 
  1283  001A                     	;# 
  1284  001B                     	;# 
  1285  001C                     	;# 
  1286  008C                     	;# 
  1287  008E                     	;# 
  1288  0091                     	;# 
  1289  0092                     	;# 
  1290  0095                     	;# 
  1291  0096                     	;# 
  1292  0097                     	;# 
  1293  0098                     	;# 
  1294  0099                     	;# 
  1295  009A                     	;# 
  1296  009B                     	;# 
  1297  009B                     	;# 
  1298  009C                     	;# 
  1299  009D                     	;# 
  1300  009E                     	;# 
  1301  009F                     	;# 
  1302  010C                     	;# 
  1303  010E                     	;# 
  1304  0111                     	;# 
  1305  0112                     	;# 
  1306  0113                     	;# 
  1307  0114                     	;# 
  1308  0115                     	;# 
  1309  0116                     	;# 
  1310  0117                     	;# 
  1311  0118                     	;# 
  1312  0119                     	;# 
  1313  011D                     	;# 
  1314  018C                     	;# 
  1315  018E                     	;# 
  1316  0191                     	;# 
  1317  0191                     	;# 
  1318  0192                     	;# 
  1319  0193                     	;# 
  1320  0193                     	;# 
  1321  0194                     	;# 
  1322  0195                     	;# 
  1323  0196                     	;# 
  1324  0197                     	;# 
  1325  0199                     	;# 
  1326  019A                     	;# 
  1327  019B                     	;# 
  1328  019B                     	;# 
  1329  019C                     	;# 
  1330  019D                     	;# 
  1331  019E                     	;# 
  1332  019F                     	;# 
  1333  020C                     	;# 
  1334  0211                     	;# 
  1335  0211                     	;# 
  1336  0212                     	;# 
  1337  0212                     	;# 
  1338  0213                     	;# 
  1339  0213                     	;# 
  1340  0214                     	;# 
  1341  0214                     	;# 
  1342  0215                     	;# 
  1343  0215                     	;# 
  1344  0215                     	;# 
  1345  0216                     	;# 
  1346  0216                     	;# 
  1347  0217                     	;# 
  1348  0217                     	;# 
  1349  0391                     	;# 
  1350  0392                     	;# 
  1351  0393                     	;# 
  1352  039A                     	;# 
  1353  039B                     	;# 
  1354  0611                     	;# 
  1355  0612                     	;# 
  1356  0613                     	;# 
  1357  0613                     	;# 
  1358  0614                     	;# 
  1359  0615                     	;# 
  1360  0616                     	;# 
  1361  0616                     	;# 
  1362  0691                     	;# 
  1363  0692                     	;# 
  1364  0693                     	;# 
  1365  0694                     	;# 
  1366  0695                     	;# 
  1367  0E8E                     	;# 
  1368  0E8F                     	;# 
  1369  0E90                     	;# 
  1370  0E91                     	;# 
  1371  0E92                     	;# 
  1372  0E93                     	;# 
  1373  0E94                     	;# 
  1374  0E94                     	;# 
  1375  0E95                     	;# 
  1376  0E96                     	;# 
  1377  0E97                     	;# 
  1378  0E98                     	;# 
  1379  0E99                     	;# 
  1380  0E9A                     	;# 
  1381  0E9B                     	;# 
  1382  0E9C                     	;# 
  1383  0E9D                     	;# 
  1384  0E9E                     	;# 
  1385  0E9F                     	;# 
  1386  0FE4                     	;# 
  1387  0FE5                     	;# 
  1388  0FE6                     	;# 
  1389  0FE7                     	;# 
  1390  0FE8                     	;# 
  1391  0FE9                     	;# 
  1392  0FEA                     	;# 
  1393  0FEB                     	;# 
  1394  0FED                     	;# 
  1395  0FEE                     	;# 
  1396  0FEF                     	;# 
  1397                           
  1398                           	psect	stringtext
  1399  1000                     __pstringtext:	
  1400  1000                     _USB_SD_Ptr:	
  1401  1000  34CD               	retlw	low (_sd000| (0+32768))
  1402  1001  3490               	retlw	high (_sd000| (0+32768))
  1403  1002  346D               	retlw	low (_sd001| (0+32768))
  1404  1003  3490               	retlw	high (_sd001| (0+32768))
  1405  1004  34A1               	retlw	low (_sd002| (0+32768))
  1406  1005  3490               	retlw	high (_sd002| (0+32768))
  1407  1006                     __end_of_USB_SD_Ptr:	
  1408  1006                     _USB_CD_Ptr:	
  1409  1006  3408               	retlw	low (_configDescriptor1| (0+32768))
  1410  1007  3490               	retlw	high (_configDescriptor1| (0+32768))
  1411  1008                     __end_of_USB_CD_Ptr:	
  1412  1008                     _configDescriptor1:	
  1413  1008  3409               	retlw	9
  1414  1009  3402               	retlw	2
  1415  100A  3465               	retlw	101
  1416  100B  3400               	retlw	0
  1417  100C  3402               	retlw	2
  1418  100D  3401               	retlw	1
  1419  100E  3400               	retlw	0
  1420  100F  34C0               	retlw	192
  1421  1010  3432               	retlw	50
  1422  1011  3409               	retlw	9
  1423  1012  3404               	retlw	4
  1424  1013  3400               	retlw	0
  1425  1014  3400               	retlw	0
  1426  1015  3400               	retlw	0
  1427  1016  3401               	retlw	1
  1428  1017  3401               	retlw	1
  1429  1018  3400               	retlw	0
  1430  1019  3400               	retlw	0
  1431  101A  3409               	retlw	9
  1432  101B  3424               	retlw	36
  1433  101C  3401               	retlw	1
  1434  101D  3400               	retlw	0
  1435  101E  3401               	retlw	1
  1436  101F  3409               	retlw	9
  1437  1020  3400               	retlw	0
  1438  1021  3401               	retlw	1
  1439  1022  3401               	retlw	1
  1440  1023  3409               	retlw	9
  1441  1024  3404               	retlw	4
  1442  1025  3401               	retlw	1
  1443  1026  3400               	retlw	0
  1444  1027  3402               	retlw	2
  1445  1028  3401               	retlw	1
  1446  1029  3403               	retlw	3
  1447  102A  3400               	retlw	0
  1448  102B  3400               	retlw	0
  1449  102C  3407               	retlw	7
  1450  102D  3424               	retlw	36
  1451  102E  3401               	retlw	1
  1452  102F  3400               	retlw	0
  1453  1030  3401               	retlw	1
  1454  1031  3441               	retlw	65
  1455  1032  3400               	retlw	0
  1456  1033  3406               	retlw	6
  1457  1034  3424               	retlw	36
  1458  1035  3402               	retlw	2
  1459  1036  3401               	retlw	1
  1460  1037  3401               	retlw	1
  1461  1038  3400               	retlw	0
  1462  1039  3406               	retlw	6
  1463  103A  3424               	retlw	36
  1464  103B  3402               	retlw	2
  1465  103C  3402               	retlw	2
  1466  103D  3402               	retlw	2
  1467  103E  3400               	retlw	0
  1468  103F  3409               	retlw	9
  1469  1040  3424               	retlw	36
  1470  1041  3403               	retlw	3
  1471  1042  3401               	retlw	1
  1472  1043  3403               	retlw	3
  1473  1044  3401               	retlw	1
  1474  1045  3402               	retlw	2
  1475  1046  3401               	retlw	1
  1476  1047  3400               	retlw	0
  1477  1048  3409               	retlw	9
  1478  1049  3424               	retlw	36
  1479  104A  3403               	retlw	3
  1480  104B  3402               	retlw	2
  1481  104C  3404               	retlw	4
  1482  104D  3401               	retlw	1
  1483  104E  3401               	retlw	1
  1484  104F  3401               	retlw	1
  1485  1050  3400               	retlw	0
  1486  1051  3409               	retlw	9
  1487  1052  3405               	retlw	5
  1488  1053  3401               	retlw	1
  1489  1054  3402               	retlw	2
  1490  1055  3440               	retlw	64
  1491  1056  3400               	retlw	0
  1492  1057  3400               	retlw	0
  1493  1058  3400               	retlw	0
  1494  1059  3400               	retlw	0
  1495  105A  3405               	retlw	5
  1496  105B  3425               	retlw	37
  1497  105C  3401               	retlw	1
  1498  105D  3401               	retlw	1
  1499  105E  3401               	retlw	1
  1500  105F  3409               	retlw	9
  1501  1060  3405               	retlw	5
  1502  1061  3481               	retlw	129
  1503  1062  3402               	retlw	2
  1504  1063  3440               	retlw	64
  1505  1064  3400               	retlw	0
  1506  1065  3400               	retlw	0
  1507  1066  3400               	retlw	0
  1508  1067  3400               	retlw	0
  1509  1068  3405               	retlw	5
  1510  1069  3425               	retlw	37
  1511  106A  3401               	retlw	1
  1512  106B  3401               	retlw	1
  1513  106C  3403               	retlw	3
  1514  106D                     __end_of_configDescriptor1:	
  1515  106D                     _sd001:	
  1516  106D  3434               	retlw	52
  1517  106E  3403               	retlw	3
  1518  106F  344D               	retlw	77
  1519  1070  3400               	retlw	0
  1520  1071  3469               	retlw	105
  1521  1072  3400               	retlw	0
  1522  1073  3463               	retlw	99
  1523  1074  3400               	retlw	0
  1524  1075  3472               	retlw	114
  1525  1076  3400               	retlw	0
  1526  1077  346F               	retlw	111
  1527  1078  3400               	retlw	0
  1528  1079  3463               	retlw	99
  1529  107A  3400               	retlw	0
  1530  107B  3468               	retlw	104
  1531  107C  3400               	retlw	0
  1532  107D  3469               	retlw	105
  1533  107E  3400               	retlw	0
  1534  107F  3470               	retlw	112
  1535  1080  3400               	retlw	0
  1536  1081  3420               	retlw	32
  1537  1082  3400               	retlw	0
  1538  1083  3454               	retlw	84
  1539  1084  3400               	retlw	0
  1540  1085  3465               	retlw	101
  1541  1086  3400               	retlw	0
  1542  1087  3463               	retlw	99
  1543  1088  3400               	retlw	0
  1544  1089  3468               	retlw	104
  1545  108A  3400               	retlw	0
  1546  108B  346E               	retlw	110
  1547  108C  3400               	retlw	0
  1548  108D  346F               	retlw	111
  1549  108E  3400               	retlw	0
  1550  108F  346C               	retlw	108
  1551  1090  3400               	retlw	0
  1552  1091  346F               	retlw	111
  1553  1092  3400               	retlw	0
  1554  1093  3467               	retlw	103
  1555  1094  3400               	retlw	0
  1556  1095  3479               	retlw	121
  1557  1096  3400               	retlw	0
  1558  1097  3420               	retlw	32
  1559  1098  3400               	retlw	0
  1560  1099  3449               	retlw	73
  1561  109A  3400               	retlw	0
  1562  109B  346E               	retlw	110
  1563  109C  3400               	retlw	0
  1564  109D  3463               	retlw	99
  1565  109E  3400               	retlw	0
  1566  109F  342E               	retlw	46
  1567  10A0  3400               	retlw	0
  1568  10A1                     __end_of_sd001:	
  1569  10A1                     _sd002:	
  1570  10A1  341A               	retlw	26
  1571  10A2  3403               	retlw	3
  1572  10A3  344D               	retlw	77
  1573  10A4  3400               	retlw	0
  1574  10A5  3449               	retlw	73
  1575  10A6  3400               	retlw	0
  1576  10A7  3444               	retlw	68
  1577  10A8  3400               	retlw	0
  1578  10A9  3449               	retlw	73
  1579  10AA  3400               	retlw	0
  1580  10AB  3420               	retlw	32
  1581  10AC  3400               	retlw	0
  1582  10AD  3445               	retlw	69
  1583  10AE  3400               	retlw	0
  1584  10AF  3478               	retlw	120
  1585  10B0  3400               	retlw	0
  1586  10B1  3461               	retlw	97
  1587  10B2  3400               	retlw	0
  1588  10B3  346D               	retlw	109
  1589  10B4  3400               	retlw	0
  1590  10B5  3470               	retlw	112
  1591  10B6  3400               	retlw	0
  1592  10B7  346C               	retlw	108
  1593  10B8  3400               	retlw	0
  1594  10B9  3465               	retlw	101
  1595  10BA  3400               	retlw	0
  1596  10BB                     __end_of_sd002:	
  1597  10BB                     _device_dsc:	
  1598  10BB  3412               	retlw	18
  1599  10BC  3401               	retlw	1
  1600  10BD  3400               	retlw	0
  1601  10BE  3402               	retlw	2
  1602  10BF  3400               	retlw	0
  1603  10C0  3400               	retlw	0
  1604  10C1  3400               	retlw	0
  1605  10C2  3408               	retlw	8
  1606  10C3  34D8               	retlw	216
  1607  10C4  3404               	retlw	4
  1608  10C5  3459               	retlw	89
  1609  10C6  3400               	retlw	0
  1610  10C7  3402               	retlw	2
  1611  10C8  3400               	retlw	0
  1612  10C9  3401               	retlw	1
  1613  10CA  3402               	retlw	2
  1614  10CB  3400               	retlw	0
  1615  10CC  3401               	retlw	1
  1616  10CD                     __end_of_device_dsc:	
  1617  10CD                     _sd000:	
  1618  10CD  3404               	retlw	4
  1619  10CE  3403               	retlw	3
  1620  10CF  3409               	retlw	9
  1621  10D0  3404               	retlw	4
  1622  10D1                     __end_of_sd000:	
  1623  000B                     _INTCONbits	set	11
  1624  0012                     _PIR2bits	set	18
  1625  000C                     _PORTAbits	set	12
  1626  0015                     _TMR0	set	21
  1627  009D                     _ADCON0bits	set	157
  1628  009E                     _ADCON1bits	set	158
  1629  009F                     _ADCON2bits	set	159
  1630  009C                     _ADRESH	set	156
  1631  0095                     _OPTION_REGbits	set	149
  1632  0099                     _OSCCON	set	153
  1633  0091                     _PIE1bits	set	145
  1634  0092                     _PIE2bits	set	146
  1635  008C                     _TRISAbits	set	140
  1636  008E                     _TRISCbits	set	142
  1637  010E                     _LATCbits	set	270
  1638  018C                     _ANSELA	set	396
  1639  018C                     _ANSELAbits	set	396
  1640  018E                     _ANSELCbits	set	398
  1641  039B                     _ACTCON	set	923
  1642  0E96                     _UADDR	set	3734
  1643  0E91                     _UCFG	set	3729
  1644  0E8E                     _UCON	set	3726
  1645  0E8E                     _UCONbits	set	3726
  1646  0E97                     _UEIE	set	3735
  1647  0E93                     _UEIR	set	3731
  1648  0E98                     _UEP0bits	set	3736
  1649  0E92                     _UIE	set	3730
  1650  0E92                     _UIEbits	set	3730
  1651  0E90                     _UIR	set	3728
  1652  0E90                     _UIRbits	set	3728
  1653  0E8F                     _USTAT	set	3727
  1654  0E98                     _UEP0	set	3736
  1655  0E99                     _UEP1	set	3737
  1656                           
  1657                           ; #config settings
  1658  0000                     
  1659                           	psect	cinit
  1660  0008                     start_initialization:	
  1661  0008                     __initialization:	
  1662                           
  1663                           ; Clear objects allocated to BANK0
  1664  0008  3050               	movlw	low __pbssBANK0
  1665  0009  0084               	movwf	4
  1666  000A  3000               	movlw	high __pbssBANK0
  1667  000B  0085               	movwf	5
  1668  000C  3011               	movlw	17
  1669  000D  3189  213E  3180   	fcall	clear_ram0
  1670                           
  1671                           ; Clear objects allocated to BANK1
  1672  0010  30E0               	movlw	low __pbssBANK1
  1673  0011  0084               	movwf	4
  1674  0012  3000               	movlw	high __pbssBANK1
  1675  0013  0085               	movwf	5
  1676  0014  3010               	movlw	16
  1677  0015  3189  213E  3180   	fcall	clear_ram0
  1678                           
  1679                           ; Clear objects allocated to BANK2
  1680  0018  3020               	movlw	low __pbssBANK2
  1681  0019  0084               	movwf	4
  1682  001A  3001               	movlw	high __pbssBANK2
  1683  001B  0085               	movwf	5
  1684  001C  3032               	movlw	50
  1685  001D  3189  213E  3180   	fcall	clear_ram0
  1686  0020                     end_of_initialization:	
  1687                           ;End of C runtime variable initialization code
  1688                           
  1689  0020                     __end_of__initialization:	
  1690  0020  0020               	movlb	0
  1691  0021  2822               	ljmp	_main	;jump to C main() function
  1692  0022                     __pmaintext:	
  1693 ;;
  1694 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1695 ;;
  1696 ;; *************** function _main *****************
  1697 ;; Defined at:
  1698 ;;		line 48 in file "../src/main.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;		None               void
  1705 ;; Registers used:
  1706 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : B1F/0
  1709 ;;		On exit  : 2/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1716 ;;Total ram usage:        0 bytes
  1717 ;; Hardware stack levels required when called:   10
  1718 ;; This function calls:
  1719 ;;		_APP_DeviceAudioMIDITasks
  1720 ;;		_SYSTEM_Initialize
  1721 ;;		_USBDeviceInit
  1722 ;;		_USBDeviceTasks
  1723 ;; This function is called by:
  1724 ;;		Startup code after reset
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           
  1729                           ;psect for function _main
  1730  0022                     _main:	
  1731                           
  1732                           ;main.c: 50: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  1733                           
  1734                           ;incstack = 0
  1735                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1736  0022  3000               	movlw	0
  1737  0023  22C9  3180         	fcall	_SYSTEM_Initialize
  1738                           
  1739                           ;main.c: 52: USBDeviceInit();
  1740  0025  22E0  3180         	fcall	_USBDeviceInit
  1741  0027                     l3798:	
  1742                           
  1743                           ;main.c: 56: {
  1744                           ;main.c: 57: ;
  1745                           ;main.c: 72: USBDeviceTasks();
  1746  0027  244A  3180         	fcall	_USBDeviceTasks
  1747                           
  1748                           ;main.c: 78: if( USBDeviceState < CONFIGURED_STATE )
  1749  0029  3020               	movlw	32
  1750  002A  0255               	subwf	_USBDeviceState,w
  1751  002B  1C03               	btfss	3,0
  1752  002C  2827               	goto	l3798
  1753                           
  1754                           ;main.c: 82: }
  1755                           ;main.c: 88: if( UCONbits.SUSPND == 1 )
  1756  002D  003D               	movlb	29	; select bank29
  1757  002E  188E               	btfsc	14,1	;volatile
  1758  002F  2827               	goto	l3798
  1759                           
  1760                           ;main.c: 92: }
  1761                           ;main.c: 95: APP_DeviceAudioMIDITasks();
  1762  0030  2033  3180         	fcall	_APP_DeviceAudioMIDITasks
  1763  0032  2827               	goto	l3798
  1764  0033                     __end_of_main:	
  1765  0033                     __ptext32:	
  1766 ;; *************** function _APP_DeviceAudioMIDITasks *****************
  1767 ;; Defined at:
  1768 ;;		line 129 in file "../src/app_device_audio_midi.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;		None
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;  velocity        1   12[BANK0 ] unsigned char 
  1773 ;;  scan_pitch      1   11[BANK0 ] unsigned char 
  1774 ;; Return value:  Size  Location     Type
  1775 ;;		None               void
  1776 ;; Registers used:
  1777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1778 ;; Tracked objects:
  1779 ;;		On entry : 1F/1D
  1780 ;;		On exit  : 2/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1784 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1786 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1787 ;;Total ram usage:        8 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    4
  1790 ;; This function calls:
  1791 ;;		_BUTTON_IsPressed
  1792 ;;		_USBTransferOnePacket
  1793 ;;		_scan_task
  1794 ;; This function is called by:
  1795 ;;		_main
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           
  1800                           ;psect for function _APP_DeviceAudioMIDITasks
  1801  0033                     _APP_DeviceAudioMIDITasks:	
  1802                           
  1803                           ;app_device_audio_midi.c: 131: uint8_t scan_pitch = 0x3C, velocity = 0;
  1804                           
  1805                           ;incstack = 0
  1806                           ; Regs used in _APP_DeviceAudioMIDITasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1807  0033  303C               	movlw	60
  1808  0034  0020               	movlb	0	; select bank0
  1809  0035  00EC               	movwf	APP_DeviceAudioMIDITasks@scan_pitch
  1810  0036  3020               	movlw	32
  1811  0037  01ED               	clrf	APP_DeviceAudioMIDITasks@velocity
  1812                           
  1813                           ;app_device_audio_midi.c: 136: if( (USBDeviceState < CONFIGURED_STATE) ||
  1814                           ;app_device_audio_midi.c: 137: (UCONbits.SUSPND == 1))
  1815  0038  0255               	subwf	_USBDeviceState,w
  1816  0039  1C03               	skipc
  1817  003A  0008               	return
  1818  003B  003D               	movlb	29	; select bank29
  1819  003C  188E               	btfsc	14,1	;volatile
  1820  003D  0008               	return
  1821                           
  1822                           ;app_device_audio_midi.c: 140: }
  1823                           ;app_device_audio_midi.c: 142: if(!(USBRxHandle==0?0:((volatile BDT_ENTRY*)USBRxHandle)-
      +                          >STAT.UOWN))
  1824                           
  1825                           ;app_device_audio_midi.c: 138: {
  1826                           ;app_device_audio_midi.c: 139: return;
  1827  003E  0021               	movlb	1	; select bank1
  1828  003F  0862               	movf	_USBRxHandle^(0+128),w
  1829  0040  1903               	btfsc	3,2
  1830  0041  284B               	goto	l3716
  1831  0042  0862               	movf	_USBRxHandle^(0+128),w
  1832  0043  0086               	movwf	6
  1833  0044  0187               	clrf	7
  1834  0045  0D01               	rlf	1,w
  1835  0046  0D01               	rlf	1,w
  1836  0047  3901               	andlw	1
  1837  0048  0020               	movlb	0	; select bank0
  1838  0049  00E6               	movwf	_APP_DeviceAudioMIDITasks$427
  1839  004A  284D               	goto	L13
  1840  004B                     l3716:	
  1841  004B  0020               	movlb	0	; select bank0
  1842  004C  01E6               	clrf	_APP_DeviceAudioMIDITasks$427
  1843  004D                     L13:	
  1844  004D  01E7               	clrf	_APP_DeviceAudioMIDITasks$427+1
  1845  004E  0866               	movf	_APP_DeviceAudioMIDITasks$427,w
  1846  004F  0467               	iorwf	_APP_DeviceAudioMIDITasks$427+1,w
  1847  0050  1D03               	btfss	3,2
  1848  0051  285D               	goto	l3722
  1849  0052  30A0               	movlw	160
  1850                           
  1851                           ;app_device_audio_midi.c: 143: {
  1852                           ;app_device_audio_midi.c: 150: USBRxHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receive
      +                          dDataBuffer,64);
  1853  0053  01F0               	clrf	USBTransferOnePacket@dir
  1854  0054  00F1               	movwf	USBTransferOnePacket@data
  1855  0055  3040               	movlw	64
  1856  0056  01F2               	clrf	USBTransferOnePacket@data+1
  1857  0057  00F3               	movwf	USBTransferOnePacket@len
  1858  0058  3001               	movlw	1
  1859  0059  2111  3180         	fcall	_USBTransferOnePacket
  1860  005B  0021               	movlb	1	; select bank1
  1861  005C  00E2               	movwf	_USBRxHandle^(0+128)
  1862  005D                     l3722:	
  1863                           
  1864                           ;app_device_audio_midi.c: 151: }
  1865                           ;app_device_audio_midi.c: 153: if (scan_task(&scan_pitch, &velocity)) {
  1866  005D  306D               	movlw	(low (APP_DeviceAudioMIDITasks@velocity| 0))& (0+255)
  1867  005E  00FB               	movwf	scan_task@velocity
  1868  005F  306C               	movlw	(low (APP_DeviceAudioMIDITasks@scan_pitch| 0))& (0+255)
  1869  0060  2162  3180         	fcall	_scan_task
  1870  0062  3A00               	xorlw	0
  1871  0063  1903               	skipnz
  1872  0064  2887               	goto	l3736
  1873                           
  1874                           ;app_device_audio_midi.c: 154: midiData.Val = 0;
  1875  0065  0023               	movlb	3	; select bank3
  1876  0066  300F               	movlw	-241
  1877  0067  01A0               	clrf	32
  1878  0068  01A1               	clrf	33
  1879  0069  01A2               	clrf	34
  1880  006A  01A3               	clrf	35
  1881                           
  1882                           ;app_device_audio_midi.c: 155: midiData.CableNumber = 0;
  1883  006B  05A0               	andwf	32,f
  1884                           
  1885                           ;app_device_audio_midi.c: 156: midiData.CodeIndexNumber = 0x9;
  1886  006C  0820               	movf	32,w
  1887  006D  39F0               	andlw	-16
  1888  006E  3809               	iorlw	9
  1889  006F  00A0               	movwf	32
  1890                           
  1891                           ;app_device_audio_midi.c: 157: midiData.DATA_0 = 0x90;
  1892  0070  3090               	movlw	144
  1893  0071  00A1               	movwf	33
  1894                           
  1895                           ;app_device_audio_midi.c: 158: midiData.DATA_1 = scan_pitch;
  1896  0072  0020               	movlb	0	; select bank0
  1897  0073  086C               	movf	APP_DeviceAudioMIDITasks@scan_pitch,w
  1898  0074  0023               	movlb	3	; select bank3
  1899  0075  00A2               	movwf	34
  1900                           
  1901                           ;app_device_audio_midi.c: 159: midiData.DATA_2 = velocity;
  1902  0076  0020               	movlb	0	; select bank0
  1903  0077  086D               	movf	APP_DeviceAudioMIDITasks@velocity,w
  1904  0078  0023               	movlb	3	; select bank3
  1905  0079  00A3               	movwf	35
  1906  007A  30A0               	movlw	160
  1907                           
  1908                           ;app_device_audio_midi.c: 160: USBTxHandle = USBTransferOnePacket(1,1,(uint8_t*)&midiDat
      +                          a,4);
  1909  007B  01F0               	clrf	USBTransferOnePacket@dir
  1910  007C  0AF0               	incf	USBTransferOnePacket@dir,f
  1911  007D  00F1               	movwf	USBTransferOnePacket@data
  1912  007E  3001               	movlw	1
  1913  007F  00F2               	movwf	USBTransferOnePacket@data+1
  1914  0080  3004               	movlw	4
  1915  0081  00F3               	movwf	USBTransferOnePacket@len
  1916  0082  3001               	movlw	1
  1917  0083  2111  3180         	fcall	_USBTransferOnePacket
  1918  0085  0020               	movlb	0	; select bank0
  1919  0086  00D6               	movwf	_USBTxHandle
  1920  0087                     l3736:	
  1921                           
  1922                           ;app_device_audio_midi.c: 161: }
  1923                           ;app_device_audio_midi.c: 164: if(BUTTON_IsPressed(BUTTON_S1))
  1924  0087  3001               	movlw	1
  1925  0088  214F  3180         	fcall	_BUTTON_IsPressed
  1926  008A  3A00               	xorlw	0
  1927  008B  1903               	skipnz
  1928  008C  28C9               	goto	l3762
  1929                           
  1930                           ;app_device_audio_midi.c: 165: {
  1931                           ;app_device_audio_midi.c: 167: if(msCounter == 0)
  1932  008D  0021               	movlb	1	; select bank1
  1933  008E  0868               	movf	_msCounter^(0+128),w
  1934  008F  1903               	btfsc	3,2
  1935                           
  1936                           ;app_device_audio_midi.c: 168: {
  1937                           ;app_device_audio_midi.c: 170: if(sentNoteOff == 1)
  1938  0090  0B6B               	decfsz	_sentNoteOff^(0+128),w
  1939  0091  0008               	return
  1940                           
  1941                           ;app_device_audio_midi.c: 171: {
  1942                           ;app_device_audio_midi.c: 173: if(!(USBTxHandle==0?0:((volatile BDT_ENTRY*)USBTxHandle)-
      +                          >STAT.UOWN))
  1943  0092  0020               	movlb	0	; select bank0
  1944  0093  0856               	movf	_USBTxHandle,w
  1945  0094  1903               	btfsc	3,2
  1946  0095  289E               	goto	l3746
  1947  0096  0856               	movf	_USBTxHandle,w
  1948  0097  0086               	movwf	6
  1949  0098  0187               	clrf	7
  1950  0099  0D01               	rlf	1,w
  1951  009A  0D01               	rlf	1,w
  1952  009B  3901               	andlw	1
  1953  009C  00E8               	movwf	_APP_DeviceAudioMIDITasks$466
  1954  009D  289F               	goto	L14
  1955  009E                     l3746:	
  1956  009E  01E8               	clrf	_APP_DeviceAudioMIDITasks$466
  1957  009F                     L14:	
  1958  009F  01E9               	clrf	_APP_DeviceAudioMIDITasks$466+1
  1959  00A0  0868               	movf	_APP_DeviceAudioMIDITasks$466,w
  1960  00A1  0469               	iorwf	_APP_DeviceAudioMIDITasks$466+1,w
  1961  00A2  1D03               	btfss	3,2
  1962  00A3  0008               	return
  1963                           
  1964                           ;app_device_audio_midi.c: 174: {
  1965                           ;app_device_audio_midi.c: 176: msCounter = 100;
  1966  00A4  3064               	movlw	100
  1967  00A5  0021               	movlb	1	; select bank1
  1968  00A6  00E8               	movwf	_msCounter^(0+128)
  1969                           
  1970                           ;app_device_audio_midi.c: 178: midiData.Val = 0;
  1971  00A7  0023               	movlb	3	; select bank3
  1972  00A8  300F               	movlw	-241
  1973  00A9  01A0               	clrf	32
  1974  00AA  01A1               	clrf	33
  1975  00AB  01A2               	clrf	34
  1976  00AC  01A3               	clrf	35
  1977                           
  1978                           ;app_device_audio_midi.c: 181: midiData.CableNumber = 0;
  1979  00AD  05A0               	andwf	32,f
  1980                           
  1981                           ;app_device_audio_midi.c: 182: midiData.CodeIndexNumber = 0x9;
  1982  00AE  0820               	movf	32,w
  1983  00AF  39F0               	andlw	-16
  1984  00B0  3809               	iorlw	9
  1985  00B1  00A0               	movwf	32
  1986                           
  1987                           ;app_device_audio_midi.c: 183: midiData.DATA_0 = 0x90;
  1988  00B2  3090               	movlw	144
  1989  00B3  00A1               	movwf	33
  1990                           
  1991                           ;app_device_audio_midi.c: 184: midiData.DATA_1 = pitch;
  1992  00B4  0021               	movlb	1	; select bank1
  1993  00B5  086A               	movf	_pitch^(0+128),w
  1994  00B6  0023               	movlb	3	; select bank3
  1995  00B7  00A2               	movwf	34
  1996                           
  1997                           ;app_device_audio_midi.c: 185: midiData.DATA_2 = 0x7F;
  1998  00B8  307F               	movlw	127
  1999  00B9  00A3               	movwf	35
  2000  00BA  30A0               	movlw	160
  2001                           
  2002                           ;app_device_audio_midi.c: 187: USBTxHandle = USBTransferOnePacket(1,1,(uint8_t*)&midiDat
      +                          a,4);
  2003  00BB  01F0               	clrf	USBTransferOnePacket@dir
  2004  00BC  0AF0               	incf	USBTransferOnePacket@dir,f
  2005  00BD  00F1               	movwf	USBTransferOnePacket@data
  2006  00BE  3001               	movlw	1
  2007  00BF  00F2               	movwf	USBTransferOnePacket@data+1
  2008  00C0  3004               	movlw	4
  2009  00C1  00F3               	movwf	USBTransferOnePacket@len
  2010  00C2  3001               	movlw	1
  2011  00C3  2111               	fcall	_USBTransferOnePacket
  2012  00C4  0020               	movlb	0	; select bank0
  2013  00C5  00D6               	movwf	_USBTxHandle
  2014                           
  2015                           ;app_device_audio_midi.c: 190: sentNoteOff = 0;
  2016  00C6  0021               	movlb	1	; select bank1
  2017  00C7  01EB               	clrf	_sentNoteOff^(0+128)
  2018  00C8  0008               	return
  2019  00C9                     l3762:	
  2020                           
  2021                           ;app_device_audio_midi.c: 195: else
  2022                           ;app_device_audio_midi.c: 196: {
  2023                           ;app_device_audio_midi.c: 197: if(msCounter == 0)
  2024  00C9  0021               	movlb	1	; select bank1
  2025  00CA  0868               	movf	_msCounter^(0+128),w
  2026  00CB  1D03               	btfss	3,2
  2027  00CC  0008               	return
  2028                           
  2029                           ;app_device_audio_midi.c: 198: {
  2030                           ;app_device_audio_midi.c: 199: if(sentNoteOff == 0)
  2031  00CD  086B               	movf	_sentNoteOff^(0+128),w
  2032  00CE  1D03               	btfss	3,2
  2033  00CF  0008               	return
  2034                           
  2035                           ;app_device_audio_midi.c: 200: {
  2036                           ;app_device_audio_midi.c: 201: if(!(USBTxHandle==0?0:((volatile BDT_ENTRY*)USBTxHandle)-
      +                          >STAT.UOWN))
  2037  00D0  0020               	movlb	0	; select bank0
  2038  00D1  0856               	movf	_USBTxHandle,w
  2039  00D2  1903               	btfsc	3,2
  2040  00D3  28DC               	goto	l3770
  2041  00D4  0856               	movf	_USBTxHandle,w
  2042  00D5  0086               	movwf	6
  2043  00D6  0187               	clrf	7
  2044  00D7  0D01               	rlf	1,w
  2045  00D8  0D01               	rlf	1,w
  2046  00D9  3901               	andlw	1
  2047  00DA  00EA               	movwf	_APP_DeviceAudioMIDITasks$467
  2048  00DB  28DD               	goto	L15
  2049  00DC                     l3770:	
  2050  00DC  01EA               	clrf	_APP_DeviceAudioMIDITasks$467
  2051  00DD                     L15:	
  2052  00DD  01EB               	clrf	_APP_DeviceAudioMIDITasks$467+1
  2053  00DE  086A               	movf	_APP_DeviceAudioMIDITasks$467,w
  2054  00DF  046B               	iorwf	_APP_DeviceAudioMIDITasks$467+1,w
  2055  00E0  1D03               	btfss	3,2
  2056  00E1  0008               	return
  2057                           
  2058                           ;app_device_audio_midi.c: 202: {
  2059                           ;app_device_audio_midi.c: 204: msCounter = 100;
  2060  00E2  3064               	movlw	100
  2061  00E3  0021               	movlb	1	; select bank1
  2062  00E4  00E8               	movwf	_msCounter^(0+128)
  2063                           
  2064                           ;app_device_audio_midi.c: 206: midiData.Val = 0;
  2065  00E5  0023               	movlb	3	; select bank3
  2066  00E6  300F               	movlw	-241
  2067  00E7  01A0               	clrf	32
  2068  00E8  01A1               	clrf	33
  2069  00E9  01A2               	clrf	34
  2070  00EA  01A3               	clrf	35
  2071                           
  2072                           ;app_device_audio_midi.c: 209: midiData.CableNumber = 0;
  2073  00EB  05A0               	andwf	32,f
  2074                           
  2075                           ;app_device_audio_midi.c: 210: midiData.CodeIndexNumber = 0x9;
  2076  00EC  0820               	movf	32,w
  2077  00ED  39F0               	andlw	-16
  2078  00EE  3809               	iorlw	9
  2079  00EF  00A0               	movwf	32
  2080                           
  2081                           ;app_device_audio_midi.c: 211: midiData.DATA_0 = 0x90;
  2082  00F0  3090               	movlw	144
  2083  00F1  00A1               	movwf	33
  2084                           
  2085                           ;app_device_audio_midi.c: 212: midiData.DATA_1 = pitch++;
  2086  00F2  0021               	movlb	1	; select bank1
  2087  00F3  086A               	movf	_pitch^(0+128),w
  2088  00F4  0023               	movlb	3	; select bank3
  2089  00F5  00A2               	movwf	34
  2090  00F6  0021               	movlb	1	; select bank1
  2091  00F7  0AEA               	incf	_pitch^(0+128),f
  2092                           
  2093                           ;app_device_audio_midi.c: 213: midiData.DATA_2 = 0x00;
  2094  00F8  0023               	movlb	3	; select bank3
  2095  00F9  3049               	movlw	73
  2096  00FA  01A3               	clrf	35
  2097                           
  2098                           ;app_device_audio_midi.c: 215: if(pitch == 0x49)
  2099  00FB  0021               	movlb	1	; select bank1
  2100  00FC  066A               	xorwf	_pitch^(0+128),w
  2101  00FD  1D03               	btfss	3,2
  2102  00FE  2901               	goto	l3790
  2103                           
  2104                           ;app_device_audio_midi.c: 216: {
  2105                           ;app_device_audio_midi.c: 217: pitch = 0x3C;
  2106  00FF  303C               	movlw	60
  2107  0100  00EA               	movwf	_pitch^(0+128)
  2108  0101                     l3790:	
  2109  0101  30A0               	movlw	160
  2110                           
  2111                           ;app_device_audio_midi.c: 218: }
  2112                           ;app_device_audio_midi.c: 220: USBTxHandle = USBTransferOnePacket(1,1,(uint8_t*)&midiDat
      +                          a,4);
  2113  0102  01F0               	clrf	USBTransferOnePacket@dir
  2114  0103  0AF0               	incf	USBTransferOnePacket@dir,f
  2115  0104  00F1               	movwf	USBTransferOnePacket@data
  2116  0105  3001               	movlw	1
  2117  0106  00F2               	movwf	USBTransferOnePacket@data+1
  2118  0107  3004               	movlw	4
  2119  0108  00F3               	movwf	USBTransferOnePacket@len
  2120  0109  3001               	movlw	1
  2121  010A  2111               	fcall	_USBTransferOnePacket
  2122  010B  0020               	movlb	0	; select bank0
  2123  010C  00D6               	movwf	_USBTxHandle
  2124                           
  2125                           ;app_device_audio_midi.c: 221: sentNoteOff = 1;
  2126  010D  0021               	movlb	1	; select bank1
  2127  010E  01EB               	clrf	_sentNoteOff^(0+128)
  2128  010F  0AEB               	incf	_sentNoteOff^(0+128),f
  2129  0110  0008               	return
  2130  0111                     __end_of_APP_DeviceAudioMIDITasks:	
  2131  0111                     __ptext45:	
  2132 ;; *************** function _USBTransferOnePacket *****************
  2133 ;; Defined at:
  2134 ;;		line 995 in file "../../../../../../framework/usb/src/usb_device.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  ep              1    wreg     unsigned char 
  2137 ;;  dir             1    0[COMMON] unsigned char 
  2138 ;;  data            2    1[COMMON] PTR unsigned char 
  2139 ;;		 -> midiData(4), ReceivedDataBuffer(64), 
  2140 ;;  len             1    3[COMMON] unsigned char 
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;  ep              1    6[COMMON] unsigned char 
  2143 ;;  handle          1    7[COMMON] PTR volatile struct __BD
  2144 ;;		 -> BDT(32), NULL(0), 
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  1    wreg      PTR void 
  2147 ;; Registers used:
  2148 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/1
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2154 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2155 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2156 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2157 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2158 ;;Total ram usage:        8 bytes
  2159 ;; Hardware stack levels used:    1
  2160 ;; Hardware stack levels required when called:    1
  2161 ;; This function calls:
  2162 ;;		Nothing
  2163 ;; This function is called by:
  2164 ;;		_APP_DeviceAudioMIDIInitialize
  2165 ;;		_APP_DeviceAudioMIDITasks
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169                           
  2170                           ;psect for function _USBTransferOnePacket
  2171  0111                     _USBTransferOnePacket:	
  2172                           
  2173                           ;incstack = 0
  2174                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  2175                           ;USBTransferOnePacket@ep stored from wreg
  2176  0111  00F6               	movwf	USBTransferOnePacket@ep
  2177                           
  2178                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  2179                           ;usb_device.c: 1000: if(dir != 0)
  2180  0112  0870               	movf	USBTransferOnePacket@dir,w
  2181  0113  1903               	btfsc	3,2
  2182  0114  291A               	goto	l2626
  2183                           
  2184                           ;usb_device.c: 1001: {
  2185                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  2186  0115  0876               	movf	USBTransferOnePacket@ep,w
  2187  0116  3E52               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  2188  0117  0086               	movwf	6
  2189  0118  0187               	clrf	7
  2190  0119  291F               	goto	L19
  2191  011A                     l2626:	
  2192                           ;usb_device.c: 1004: }
  2193                           
  2194                           
  2195                           ;usb_device.c: 1005: else
  2196                           ;usb_device.c: 1006: {
  2197                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  2198  011A  0876               	movf	USBTransferOnePacket@ep,w
  2199  011B  3E4D               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  2200  011C  0086               	movwf	6
  2201  011D  3001               	movlw	1	; select bank2/3
  2202  011E  0087               	movwf	7
  2203  011F                     L19:	
  2204  011F  0801               	movf	1,w
  2205  0120  00F7               	movwf	USBTransferOnePacket@handle
  2206                           
  2207                           ;usb_device.c: 1009: }
  2208                           ;usb_device.c: 1013: if(handle == 0)
  2209  0121  0877               	movf	USBTransferOnePacket@handle,w
  2210  0122  1903               	btfsc	3,2
  2211                           
  2212                           ;usb_device.c: 1014: {
  2213                           ;usb_device.c: 1015: return 0;
  2214  0123  3400               	retlw	0
  2215                           
  2216                           ;usb_device.c: 1016: }
  2217                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  2218  0124  0871               	movf	USBTransferOnePacket@data,w
  2219  0125  00F4               	movwf	??_USBTransferOnePacket
  2220  0126  307F               	movlw	127
  2221  0127  0572               	andwf	USBTransferOnePacket@data+1,w
  2222  0128  00F5               	movwf	??_USBTransferOnePacket+1
  2223  0129  0877               	movf	USBTransferOnePacket@handle,w
  2224  012A  3E02               	addlw	2
  2225  012B  0086               	movwf	6
  2226  012C  0187               	clrf	7
  2227  012D  0874               	movf	??_USBTransferOnePacket,w
  2228  012E  3FC0               	movwi [0]fsr1
  2229  012F  0875               	movf	??_USBTransferOnePacket+1,w
  2230  0130  3FC1               	movwi [1]fsr1
  2231                           
  2232                           ;usb_device.c: 1030: handle->CNT = len;
  2233  0131  0A77               	incf	USBTransferOnePacket@handle,w
  2234  0132  0086               	movwf	6
  2235  0133  0873               	movf	USBTransferOnePacket@len,w
  2236  0134  0081               	movwf	1
  2237                           
  2238                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  2239  0135  0877               	movf	USBTransferOnePacket@handle,w
  2240  0136  0086               	movwf	6
  2241  0137  3040               	movlw	64
  2242  0138  0581               	andwf	1,f
  2243                           
  2244                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  2245  0139  0877               	movf	USBTransferOnePacket@handle,w
  2246  013A  0086               	movwf	6
  2247  013B  1581               	bsf	1,3
  2248                           
  2249                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  2250  013C  0877               	movf	USBTransferOnePacket@handle,w
  2251  013D  0086               	movwf	6
  2252  013E  1781               	bsf	1,7
  2253                           
  2254                           ;usb_device.c: 1036: if(dir != 0)
  2255  013F  0870               	movf	USBTransferOnePacket@dir,w
  2256  0140  1903               	btfsc	3,2
  2257  0141  2946               	goto	l2644
  2258                           
  2259                           ;usb_device.c: 1037: {
  2260                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  2261  0142  0876               	movf	USBTransferOnePacket@ep,w
  2262  0143  3E52               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  2263  0144  0086               	movwf	6
  2264  0145  294B               	goto	L21
  2265  0146                     l2644:	
  2266                           ;usb_device.c: 1040: }
  2267                           
  2268                           
  2269                           ;usb_device.c: 1041: else
  2270                           ;usb_device.c: 1042: {
  2271                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  2272  0146  0876               	movf	USBTransferOnePacket@ep,w
  2273  0147  3E4D               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  2274  0148  0086               	movwf	6
  2275  0149  3001               	movlw	1	; select bank2/3
  2276  014A  0087               	movwf	7
  2277  014B                     L21:	
  2278  014B  3004               	movlw	4
  2279  014C  0681               	xorwf	1,f
  2280                           
  2281                           ;usb_device.c: 1045: }
  2282                           ;usb_device.c: 1046: return (void*)handle;
  2283  014D  0877               	movf	USBTransferOnePacket@handle,w
  2284  014E  0008               	return
  2285  014F                     __end_of_USBTransferOnePacket:	
  2286  014F                     __ptext46:	
  2287 ;; *************** function _BUTTON_IsPressed *****************
  2288 ;; Defined at:
  2289 ;;		line 33 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1455/buttons.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;  button          1    wreg     enum E2429
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;  button          1    0[COMMON] enum E2429
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  1    wreg      unsigned char 
  2296 ;; Registers used:
  2297 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2298 ;; Tracked objects:
  2299 ;;		On entry : 1C/0
  2300 ;;		On exit  : 1C/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2304 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2306 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2307 ;;Total ram usage:        1 bytes
  2308 ;; Hardware stack levels used:    1
  2309 ;; Hardware stack levels required when called:    1
  2310 ;; This function calls:
  2311 ;;		Nothing
  2312 ;; This function is called by:
  2313 ;;		_APP_DeviceAudioMIDITasks
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           
  2318                           ;psect for function _BUTTON_IsPressed
  2319  014F                     _BUTTON_IsPressed:	
  2320                           
  2321                           ;incstack = 0
  2322                           ; Regs used in _BUTTON_IsPressed: [wreg-fsr0h+status,2+status,0]
  2323                           ;BUTTON_IsPressed@button stored from wreg
  2324  014F  00F0               	movwf	BUTTON_IsPressed@button
  2325                           
  2326                           ;buttons.c: 35: switch(button)
  2327  0150  2959               	goto	l3508
  2328  0151                     l3498:	
  2329                           
  2330                           ;buttons.c: 38: return ( (PORTAbits.RA5 == 0) ? 1 : 0);
  2331  0151  1003               	clrc
  2332  0152  0020               	movlb	0	; select bank0
  2333  0153  1E8C               	btfss	12,5	;volatile
  2334  0154  1403               	setc
  2335  0155  3000               	movlw	0
  2336  0156  3D09               	addwfc	9,w
  2337  0157  0008               	return
  2338  0158                     l3502:	
  2339                           
  2340                           ;buttons.c: 41: return 0;
  2341  0158  3400               	retlw	0
  2342  0159                     l3508:	
  2343  0159  0870               	movf	BUTTON_IsPressed@button,w
  2344                           
  2345                           ; Switch size 1, requested type "speed"
  2346                           ; Number of cases is 2, Range of values is 0 to 1
  2347                           ; switch strategies available:
  2348                           ; Name         Instructions Cycles
  2349                           ; simple_byte            7     4 (average)
  2350                           ; direct_byte           10     6 (fixed)
  2351                           ; jumptable            260     6 (fixed)
  2352                           ;	Chosen strategy is simple_byte
  2353  015A  3A00               	xorlw	0	; case 0
  2354  015B  1903               	skipnz
  2355  015C  2958               	goto	l3502
  2356  015D  3A01               	xorlw	1	; case 1
  2357  015E  1903               	skipnz
  2358  015F  2951               	goto	l3498
  2359  0160  2958               	goto	l3502
  2360  0161  0008               	return
  2361  0162                     __end_of_BUTTON_IsPressed:	
  2362  0162                     __ptext33:	
  2363 ;; *************** function _scan_task *****************
  2364 ;; Defined at:
  2365 ;;		line 123 in file "../src/scan.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  note            1    wreg     PTR unsigned char 
  2368 ;;		 -> APP_DeviceAudioMIDITasks@scan_pitch(1), 
  2369 ;;  velocity        1   11[COMMON] PTR unsigned char 
  2370 ;;		 -> APP_DeviceAudioMIDITasks@velocity(1), 
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;  note            1    4[BANK0 ] PTR unsigned char 
  2373 ;;		 -> APP_DeviceAudioMIDITasks@scan_pitch(1), 
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  1    wreg      unsigned char 
  2376 ;; Registers used:
  2377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2378 ;; Tracked objects:
  2379 ;;		On entry : 1E/0
  2380 ;;		On exit  : 1C/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2383 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2384 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2386 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2387 ;;Total ram usage:        6 bytes
  2388 ;; Hardware stack levels used:    1
  2389 ;; Hardware stack levels required when called:    3
  2390 ;; This function calls:
  2391 ;;		_get_adc
  2392 ;;		_get_data
  2393 ;;		_is_adc_ready
  2394 ;;		_is_end_of_scan
  2395 ;;		_run_adc
  2396 ;;		_scan_init
  2397 ;;		_set_clock_and_data
  2398 ;;		_set_timer
  2399 ;;		_store_key_level
  2400 ;;		_waiting_for_timer
  2401 ;; This function is called by:
  2402 ;;		_APP_DeviceAudioMIDITasks
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           
  2407                           ;psect for function _scan_task
  2408  0162                     _scan_task:	
  2409                           
  2410                           ;incstack = 0
  2411                           ; Regs used in _scan_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2412                           ;scan_task@note stored from wreg
  2413  0162  0020               	movlb	0	; select bank0
  2414  0163  00E5               	movwf	scan_task@note
  2415                           
  2416                           ;scan.c: 124: static uint8_t state = S_INIT;
  2417                           ;scan.c: 125: *note = 0;
  2418  0164  0086               	movwf	6
  2419  0165  0187               	clrf	7
  2420  0166  0181               	clrf	1
  2421                           
  2422                           ;scan.c: 126: *velocity = 0;
  2423  0167  087B               	movf	scan_task@velocity,w
  2424  0168  0086               	movwf	6
  2425  0169  0181               	clrf	1
  2426                           
  2427                           ;scan.c: 128: if (!is_initialized)
  2428  016A  0021               	movlb	1	; select bank1
  2429  016B  0867               	movf	_is_initialized^(0+128),w
  2430  016C  1D03               	btfss	3,2
  2431  016D  2970               	goto	i1L__ptext34
  2432                           
  2433                           ;scan.c: 129: scan_init();
  2434  016E  22AE  3180         	fcall	_scan_init
  2435  0170                     i1L__ptext34:	
  2436                           ;scan.c: 131: if (waiting_for_timer()) return 0;
  2437                           
  2438                           
  2439                           ;psect for function _waiting_for_timer
  2440  0170                     i1L_waiting_for_timer:	
  2441  0170                     i1Ll3224:	
  2442                           
  2443                           ;scan.c: 62: return (wait_timer = wait_timer && !INTCONbits.TMR0IF);
  2444  0170  01F0               	clrf	_waiting_for_timer$813
  2445  0171                     i1Ll3226:	
  2446  0171  086D               	movf	_wait_timer^(0+128),w
  2447  0172  1903               	btfsc	3,2
  2448  0173  297C               	ljmp	i1Ll3232
  2449  0174  2976               	ljmp	i1Ll3228
  2450  0175                     i1Lu2311:	
  2451  0175  297C               	ljmp	i1Ll3232
  2452  0176                     i1Lu2310:	
  2453  0176                     i1Ll3228:	
  2454  0176  190B               	btfsc	11,2	;volatile
  2455  0177  297C               	ljmp	i1Ll3232
  2456  0178  297A               	ljmp	i1Ll3230
  2457  0179                     i1Lu2321:	
  2458  0179  297C               	ljmp	i1Ll3232
  2459  017A                     i1Lu2320:	
  2460  017A                     i1Ll3230:	
  2461  017A  01F0               	clrf	_waiting_for_timer$813
  2462  017B  0AF0               	incf	_waiting_for_timer$813,f
  2463  017C                     i1Ll3232:	
  2464  017C  0870               	movf	_waiting_for_timer$813,w
  2465  017D  00ED               	movwf	_wait_timer^(0+128)
  2466  017E                     i1Ll213:	
  2467  017E  3A00               	xorlw	0
  2468  017F  1D03               	btfss	3,2
  2469  0180  3400               	retlw	0
  2470  0181  2A94               	goto	l3484
  2471  0182                     l3450:	
  2472  0182  3000               	movlw	0
  2473                           
  2474                           ;scan.c: 135: set_clock_and_data(0,1);
  2475  0183  01F0               	clrf	set_clock_and_data@d
  2476  0184  0AF0               	incf	set_clock_and_data@d,f
  2477  0185                     i2L__ptext38:	
  2478                           
  2479                           ;psect for function _set_clock_and_data
  2480  0185                     i2L_set_clock_and_data:	
  2481                           
  2482                           ;incstack = 0
  2483                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  2484                           ;set_clock_and_data@c stored from wreg
  2485  0185  00F1               	movwf	set_clock_and_data@c
  2486  0186                     i2Ll3236:	
  2487                           
  2488                           ;scan.c: 66: LATCbits.LATC4 = !!c;
  2489  0186  0871               	movf	set_clock_and_data@c,w
  2490  0187  1D03               	btfss	3,2
  2491  0188  298A               	ljmp	i2Lu2331
  2492  0189  298D               	ljmp	i2Lu2330
  2493  018A                     i2Lu2331:	
  2494  018A  0022               	movlb	2	; select bank2
  2495  018B  160E               	bsf	14,4	;volatile
  2496  018C  298F               	ljmp	i2Lu2344
  2497  018D                     i2Lu2330:	
  2498  018D  0022               	movlb	2	; select bank2
  2499  018E  120E               	bcf	14,4	;volatile
  2500  018F                     i2Lu2344:	
  2501                           
  2502                           ;scan.c: 67: LATCbits.LATC5 = !!d;
  2503  018F  0870               	movf	set_clock_and_data@d,w
  2504  0190  1D03               	btfss	3,2
  2505  0191  2993               	ljmp	i2Lu2351
  2506  0192  2996               	ljmp	i2Lu2350
  2507  0193                     i2Lu2351:	
  2508  0193  0022               	movlb	2	; select bank2
  2509  0194  168E               	bsf	14,5	;volatile
  2510  0195  2998               	ljmp	iL16
  2511  0196                     i2Lu2350:	
  2512  0196  0022               	movlb	2	; select bank2
  2513  0197  128E               	bcf	14,5	;volatile
  2514  0198                     i2Lu2364:	
  2515  0198                     i2Ll216:	
  2516  0198                     iL16:	
  2517                           
  2518                           ;scan.c: 136: state = S_GO;
  2519  0198  01D1               	clrf	scan_task@state^(0+256)
  2520  0199  0AD1               	incf	scan_task@state^(0+256),f
  2521  019A                     i3L__ptext37:	
  2522                           ;scan.c: 137: set_timer();
  2523                           
  2524                           
  2525                           ;psect for function _set_timer
  2526  019A                     i3L_set_timer:	
  2527  019A                     i3Ll3220:	
  2528                           
  2529                           ;scan.c: 53: wait_timer = 1;
  2530  019A  0021               	movlb	1	; select bank1
  2531  019B  01ED               	clrf	_wait_timer^(0+128)
  2532  019C  0AED               	incf	_wait_timer^(0+128),f
  2533                           
  2534                           ;scan.c: 54: OPTION_REGbits.TMR0CS = 0;
  2535  019D  1295               	bcf	21,5	;volatile
  2536                           
  2537                           ;scan.c: 55: OPTION_REGbits.PSA = 0;
  2538  019E  1195               	bcf	21,3	;volatile
  2539                           
  2540                           ;scan.c: 56: INTCONbits.TMR0IE = 0;
  2541  019F  128B               	bcf	11,5	;volatile
  2542                           
  2543                           ;scan.c: 57: INTCONbits.TMR0IF = 0;
  2544  01A0  110B               	bcf	11,2	;volatile
  2545  01A1                     i3Ll3222:	
  2546                           
  2547                           ;scan.c: 58: TMR0 = 0;
  2548  01A1  0020               	movlb	0	; select bank0
  2549  01A2  0195               	clrf	21	;volatile
  2550  01A3                     i3Ll208:	
  2551                           
  2552                           ;scan.c: 138: break;
  2553  01A3  2A9F               	goto	l3486
  2554  01A4                     l3456:	
  2555  01A4  3000               	movlw	0
  2556                           
  2557                           ;scan.c: 141: set_clock_and_data(0,1);
  2558  01A5  01F0               	clrf	set_clock_and_data@d
  2559  01A6  0AF0               	incf	set_clock_and_data@d,f
  2560  01A7                     i4L__ptext38:	
  2561                           
  2562                           ;psect for function _set_clock_and_data
  2563  01A7                     i4L_set_clock_and_data:	
  2564                           
  2565                           ;incstack = 0
  2566                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  2567                           ;set_clock_and_data@c stored from wreg
  2568  01A7  00F1               	movwf	set_clock_and_data@c
  2569  01A8                     i4Ll3236:	
  2570                           
  2571                           ;scan.c: 66: LATCbits.LATC4 = !!c;
  2572  01A8  0871               	movf	set_clock_and_data@c,w
  2573  01A9  1D03               	btfss	3,2
  2574  01AA  29AC               	ljmp	i4Lu2331
  2575  01AB  29AF               	ljmp	i4Lu2330
  2576  01AC                     i4Lu2331:	
  2577  01AC  0022               	movlb	2	; select bank2
  2578  01AD  160E               	bsf	14,4	;volatile
  2579  01AE  29B1               	ljmp	i4Lu2344
  2580  01AF                     i4Lu2330:	
  2581  01AF  0022               	movlb	2	; select bank2
  2582  01B0  120E               	bcf	14,4	;volatile
  2583  01B1                     i4Lu2344:	
  2584                           
  2585                           ;scan.c: 67: LATCbits.LATC5 = !!d;
  2586  01B1  0870               	movf	set_clock_and_data@d,w
  2587  01B2  1D03               	btfss	3,2
  2588  01B3  29B5               	ljmp	i4Lu2351
  2589  01B4  29B8               	ljmp	i4Lu2350
  2590  01B5                     i4Lu2351:	
  2591  01B5  0022               	movlb	2	; select bank2
  2592  01B6  168E               	bsf	14,5	;volatile
  2593  01B7  29BA               	ljmp	iL35
  2594  01B8                     i4Lu2350:	
  2595  01B8  0022               	movlb	2	; select bank2
  2596  01B9  128E               	bcf	14,5	;volatile
  2597  01BA                     i4Lu2364:	
  2598  01BA                     i4Ll216:	
  2599  01BA                     iL35:	
  2600                           
  2601                           ;scan.c: 142: state = S_CLOCK_RAISE;
  2602  01BA  3002               	movlw	2
  2603  01BB  00D1               	movwf	scan_task@state^(0+256)
  2604  01BC                     i5L__ptext37:	
  2605                           ;scan.c: 143: set_timer();
  2606                           
  2607                           
  2608                           ;psect for function _set_timer
  2609  01BC                     i5L_set_timer:	
  2610  01BC                     i5Ll3220:	
  2611                           
  2612                           ;scan.c: 53: wait_timer = 1;
  2613  01BC  0021               	movlb	1	; select bank1
  2614  01BD  01ED               	clrf	_wait_timer^(0+128)
  2615  01BE  0AED               	incf	_wait_timer^(0+128),f
  2616                           
  2617                           ;scan.c: 54: OPTION_REGbits.TMR0CS = 0;
  2618  01BF  1295               	bcf	21,5	;volatile
  2619                           
  2620                           ;scan.c: 55: OPTION_REGbits.PSA = 0;
  2621  01C0  1195               	bcf	21,3	;volatile
  2622                           
  2623                           ;scan.c: 56: INTCONbits.TMR0IE = 0;
  2624  01C1  128B               	bcf	11,5	;volatile
  2625                           
  2626                           ;scan.c: 57: INTCONbits.TMR0IF = 0;
  2627  01C2  110B               	bcf	11,2	;volatile
  2628  01C3                     i5Ll3222:	
  2629                           
  2630                           ;scan.c: 58: TMR0 = 0;
  2631  01C3  0020               	movlb	0	; select bank0
  2632  01C4  0195               	clrf	21	;volatile
  2633  01C5                     i5Ll208:	
  2634                           
  2635                           ;scan.c: 144: break;
  2636  01C5  2A9F               	goto	l3486
  2637  01C6                     l3460:	
  2638  01C6                     i6L__ptext43:	
  2639                           ;scan.c: 147: set_clock_and_data(1, get_data());
  2640                           
  2641                           
  2642                           ;psect for function _get_data
  2643  01C6                     i6L_get_data:	
  2644  01C6                     i6Ll3238:	
  2645                           
  2646                           ;scan.c: 71: return LATCbits.LATC5;
  2647  01C6  0022               	movlb	2	; select bank2
  2648  01C7  0E0E               	swapf	14,w	;volatile
  2649  01C8  0C89               	rrf	9,f
  2650  01C9  3901               	andlw	1
  2651  01CA                     i6Ll219:	
  2652  01CA  00F0               	movwf	set_clock_and_data@d
  2653  01CB  3001               	movlw	1
  2654  01CC                     i7L__ptext38:	
  2655                           
  2656                           ;psect for function _set_clock_and_data
  2657  01CC                     i7L_set_clock_and_data:	
  2658                           
  2659                           ;incstack = 0
  2660                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  2661                           ;set_clock_and_data@c stored from wreg
  2662  01CC  00F1               	movwf	set_clock_and_data@c
  2663  01CD                     i7Ll3236:	
  2664                           
  2665                           ;scan.c: 66: LATCbits.LATC4 = !!c;
  2666  01CD  0871               	movf	set_clock_and_data@c,w
  2667  01CE  1D03               	btfss	3,2
  2668  01CF  29D1               	ljmp	i7Lu2331
  2669  01D0  29D4               	ljmp	i7Lu2330
  2670  01D1                     i7Lu2331:	
  2671  01D1  0022               	movlb	2	; select bank2
  2672  01D2  160E               	bsf	14,4	;volatile
  2673  01D3  29D6               	ljmp	i7Lu2344
  2674  01D4                     i7Lu2330:	
  2675  01D4  0022               	movlb	2	; select bank2
  2676  01D5  120E               	bcf	14,4	;volatile
  2677  01D6                     i7Lu2344:	
  2678                           
  2679                           ;scan.c: 67: LATCbits.LATC5 = !!d;
  2680  01D6  0870               	movf	set_clock_and_data@d,w
  2681  01D7  1D03               	btfss	3,2
  2682  01D8  29DA               	ljmp	i7Lu2351
  2683  01D9  29DD               	ljmp	i7Lu2350
  2684  01DA                     i7Lu2351:	
  2685  01DA  0022               	movlb	2	; select bank2
  2686  01DB  168E               	bsf	14,5	;volatile
  2687  01DC  29DF               	ljmp	iL60
  2688  01DD                     i7Lu2350:	
  2689  01DD  0022               	movlb	2	; select bank2
  2690  01DE  128E               	bcf	14,5	;volatile
  2691  01DF                     i7Lu2364:	
  2692  01DF                     i7Ll216:	
  2693  01DF                     iL60:	
  2694                           
  2695                           ;scan.c: 148: state = S_CLOCK_FALL;
  2696  01DF  3003               	movlw	3
  2697  01E0  00D1               	movwf	scan_task@state^(0+256)
  2698  01E1                     i8L__ptext37:	
  2699                           ;scan.c: 149: set_timer();
  2700                           
  2701                           
  2702                           ;psect for function _set_timer
  2703  01E1                     i8L_set_timer:	
  2704  01E1                     i8Ll3220:	
  2705                           
  2706                           ;scan.c: 53: wait_timer = 1;
  2707  01E1  0021               	movlb	1	; select bank1
  2708  01E2  01ED               	clrf	_wait_timer^(0+128)
  2709  01E3  0AED               	incf	_wait_timer^(0+128),f
  2710                           
  2711                           ;scan.c: 54: OPTION_REGbits.TMR0CS = 0;
  2712  01E4  1295               	bcf	21,5	;volatile
  2713                           
  2714                           ;scan.c: 55: OPTION_REGbits.PSA = 0;
  2715  01E5  1195               	bcf	21,3	;volatile
  2716                           
  2717                           ;scan.c: 56: INTCONbits.TMR0IE = 0;
  2718  01E6  128B               	bcf	11,5	;volatile
  2719                           
  2720                           ;scan.c: 57: INTCONbits.TMR0IF = 0;
  2721  01E7  110B               	bcf	11,2	;volatile
  2722  01E8                     i8Ll3222:	
  2723                           
  2724                           ;scan.c: 58: TMR0 = 0;
  2725  01E8  0020               	movlb	0	; select bank0
  2726  01E9  0195               	clrf	21	;volatile
  2727  01EA                     i8Ll208:	
  2728                           
  2729                           ;scan.c: 150: break;
  2730  01EA  2A9F               	goto	l3486
  2731  01EB                     l3464:	
  2732  01EB  3000               	movlw	0
  2733                           
  2734                           ;scan.c: 153: set_clock_and_data(0,0);
  2735  01EC  01F0               	clrf	set_clock_and_data@d
  2736  01ED                     i9L__ptext38:	
  2737                           
  2738                           ;psect for function _set_clock_and_data
  2739  01ED                     i9L_set_clock_and_data:	
  2740                           
  2741                           ;incstack = 0
  2742                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  2743                           ;set_clock_and_data@c stored from wreg
  2744  01ED  00F1               	movwf	set_clock_and_data@c
  2745  01EE                     i9Ll3236:	
  2746                           
  2747                           ;scan.c: 66: LATCbits.LATC4 = !!c;
  2748  01EE  0871               	movf	set_clock_and_data@c,w
  2749  01EF  1D03               	btfss	3,2
  2750  01F0  29F2               	ljmp	i9Lu2331
  2751  01F1  29F5               	ljmp	i9Lu2330
  2752  01F2                     i9Lu2331:	
  2753  01F2  0022               	movlb	2	; select bank2
  2754  01F3  160E               	bsf	14,4	;volatile
  2755  01F4  29F7               	ljmp	i9Lu2344
  2756  01F5                     i9Lu2330:	
  2757  01F5  0022               	movlb	2	; select bank2
  2758  01F6  120E               	bcf	14,4	;volatile
  2759  01F7                     i9Lu2344:	
  2760                           
  2761                           ;scan.c: 67: LATCbits.LATC5 = !!d;
  2762  01F7  0870               	movf	set_clock_and_data@d,w
  2763  01F8  1D03               	btfss	3,2
  2764  01F9  29FB               	ljmp	i9Lu2351
  2765  01FA  29FE               	ljmp	i9Lu2350
  2766  01FB                     i9Lu2351:	
  2767  01FB  0022               	movlb	2	; select bank2
  2768  01FC  168E               	bsf	14,5	;volatile
  2769  01FD  2A00               	ljmp	i10L__ptext40
  2770  01FE                     i9Lu2350:	
  2771  01FE  0022               	movlb	2	; select bank2
  2772  01FF  128E               	bcf	14,5	;volatile
  2773  0200                     i9Lu2364:	
  2774  0200                     i9Ll216:	
  2775  0200                     i10L__ptext40:	
  2776                           ;scan.c: 154: run_adc();
  2777                           
  2778                           
  2779                           ;psect for function _run_adc
  2780  0200                     i10L_run_adc:	
  2781  0200                     i10Ll3246:	
  2782                           
  2783                           ;scan.c: 79: ADCON0bits.CHS = 7;
  2784  0200  0021               	movlb	1	; select bank1
  2785  0201  081D               	movf	29,w	;volatile
  2786  0202  3983               	andlw	-125
  2787  0203  381C               	iorlw	28
  2788  0204  009D               	movwf	29	;volatile
  2789  0205                     i10Ll3248:	
  2790                           
  2791                           ;scan.c: 80: ADCON0bits.GO = 1;
  2792  0205  149D               	bsf	29,1	;volatile
  2793  0206                     i10Ll225:	
  2794                           
  2795                           ;scan.c: 155: state = S_ADC_WAIT;
  2796  0206  3004               	movlw	4
  2797  0207  0022               	movlb	2	; select bank2
  2798  0208  00D1               	movwf	scan_task@state^(0+256)
  2799  0209                     i11L__ptext37:	
  2800                           ;scan.c: 156: set_timer();
  2801                           
  2802                           
  2803                           ;psect for function _set_timer
  2804  0209                     i11L_set_timer:	
  2805  0209                     i11Ll3220:	
  2806                           
  2807                           ;scan.c: 53: wait_timer = 1;
  2808  0209  0021               	movlb	1	; select bank1
  2809  020A  01ED               	clrf	_wait_timer^(0+128)
  2810  020B  0AED               	incf	_wait_timer^(0+128),f
  2811                           
  2812                           ;scan.c: 54: OPTION_REGbits.TMR0CS = 0;
  2813  020C  1295               	bcf	21,5	;volatile
  2814                           
  2815                           ;scan.c: 55: OPTION_REGbits.PSA = 0;
  2816  020D  1195               	bcf	21,3	;volatile
  2817                           
  2818                           ;scan.c: 56: INTCONbits.TMR0IE = 0;
  2819  020E  128B               	bcf	11,5	;volatile
  2820                           
  2821                           ;scan.c: 57: INTCONbits.TMR0IF = 0;
  2822  020F  110B               	bcf	11,2	;volatile
  2823  0210                     i11Ll3222:	
  2824                           
  2825                           ;scan.c: 58: TMR0 = 0;
  2826  0210  0020               	movlb	0	; select bank0
  2827  0211  0195               	clrf	21	;volatile
  2828  0212                     i11Ll208:	
  2829                           
  2830                           ;scan.c: 157: break;
  2831  0212  2A9F               	goto	l3486
  2832  0213                     l3468:	
  2833  0213                     i12L__ptext42:	
  2834                           ;scan.c: 160: state = (is_adc_ready()? S_ADC_READ : S_ADC_WAIT);
  2835                           
  2836                           
  2837                           ;psect for function _is_adc_ready
  2838  0213                     i12L_is_adc_ready:	
  2839  0213                     i12Ll3250:	
  2840                           
  2841                           ;scan.c: 84: return !ADCON0bits.GO_nDONE;
  2842  0213  1003               	bcf	3,0
  2843  0214  0021               	movlb	1	; select bank1
  2844  0215  1C9D               	btfss	29,1	;volatile
  2845  0216  1403               	bsf	3,0
  2846  0217  3000               	movlw	0
  2847  0218  3D09               	addwfc	9,w
  2848  0219                     i12Ll228:	
  2849  0219  3A00               	xorlw	0
  2850  021A  1D03               	skipz
  2851  021B  2A1E               	goto	l3472
  2852  021C  3004               	movlw	4
  2853  021D  2A1F               	goto	L16
  2854  021E                     l3472:	
  2855  021E  3005               	movlw	5
  2856  021F                     L16:	
  2857  021F  0020               	movlb	0	; select bank0
  2858  0220  00E1               	movwf	_scan_task$863
  2859  0221  01E2               	clrf	_scan_task$863+1
  2860  0222  2A91               	goto	L17
  2861  0223                     l3474:	
  2862                           ;scan.c: 161: break;
  2863                           
  2864  0223                     i13L__ptext41:	
  2865                           ;scan.c: 164: state = (store_key_level(get_adc(), is_end_of_scan())? S_GO : S_CLOCK_RAIS
      +                          E);
  2866                           
  2867                           
  2868                           ;psect for function _is_end_of_scan
  2869  0223                     i13L_is_end_of_scan:	
  2870  0223                     i13Ll3242:	
  2871                           
  2872                           ;scan.c: 75: return !! PORTAbits.RA4;
  2873  0223  0020               	movlb	0	; select bank0
  2874  0224  0E0C               	swapf	12,w	;volatile
  2875  0225  3901               	andlw	1
  2876  0226                     i13Ll222:	
  2877  0226  00F9               	movwf	store_key_level@end_of_scan
  2878  0227                     i14L__ptext44:	
  2879                           
  2880                           ;psect for function _get_adc
  2881  0227                     i14L_get_adc:	
  2882  0227                     i14Ll3254:	
  2883                           
  2884                           ;scan.c: 88: return ADRESH;
  2885  0227  0021               	movlb	1	; select bank1
  2886  0228  081C               	movf	28,w	;volatile
  2887  0229                     i14Ll231:	
  2888  0229                     i15L__ptext35:	
  2889                           
  2890                           ;psect for function _store_key_level
  2891  0229                     i15L_store_key_level:	
  2892                           
  2893                           ;incstack = 0
  2894                           ; Regs used in _store_key_level: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2895                           ;store_key_level@level stored from wreg
  2896  0229  00FA               	movwf	store_key_level@level
  2897  022A                     i15Ll3258:	
  2898                           
  2899                           ;scan.c: 106: static uint8_t idx_key = 0;
  2900                           ;scan.c: 107: process_level(idx_key, adc_levels[idx_key], level);
  2901  022A  0020               	movlb	0	; select bank0
  2902  022B  085A               	movf	store_key_level@idx_key,w
  2903  022C  3E20               	addlw	(low (_adc_levels| (0+256)))& (0+255)
  2904  022D  0086               	movwf	6
  2905  022E  3001               	movlw	1	; select bank2/3
  2906  022F  0087               	movwf	7
  2907  0230  0801               	movf	1,w
  2908  0231  00F0               	movwf	process_level@old_level
  2909  0232  087A               	movf	store_key_level@level,w
  2910  0233  00F1               	movwf	process_level@new_level
  2911  0234  085A               	movf	store_key_level@idx_key,w
  2912  0235                     i16L__ptext36:	
  2913                           
  2914                           ;psect for function _process_level
  2915  0235                     i16L_process_level:	
  2916                           
  2917                           ;incstack = 0
  2918                           ; Regs used in _process_level: [wreg+status,2+status,0]
  2919                           ;process_level@idx_key stored from wreg
  2920  0235  00F2               	movwf	process_level@idx_key
  2921  0236                     i16Ll3032:	
  2922                           
  2923                           ;scan.c: 92: const uint8_t L = 0x20;
  2924                           ;scan.c: 93: bool
  2925                           ;scan.c: 94: old_on = (old_level > L),
  2926  0236  3021               	movlw	33
  2927  0237  0270               	subwf	process_level@old_level,w
  2928  0238  1803               	btfsc	3,0
  2929  0239  2A3B               	ljmp	i16Lu2111
  2930  023A  2A3D               	ljmp	i16Lu2110
  2931  023B                     i16Lu2111:	
  2932  023B  3001               	movlw	1
  2933  023C  2A3E               	ljmp	i16Lu2120
  2934  023D                     i16Lu2110:	
  2935  023D  3000               	movlw	0
  2936  023E                     i16Lu2120:	
  2937  023E  00F7               	movwf	process_level@old_on
  2938                           
  2939                           ;scan.c: 95: new_on = (new_level > L);
  2940  023F  3021               	movlw	33
  2941  0240  0271               	subwf	process_level@new_level,w
  2942  0241  1803               	btfsc	3,0
  2943  0242  2A44               	ljmp	i16Lu2131
  2944  0243  2A46               	ljmp	i16Lu2130
  2945  0244                     i16Lu2131:	
  2946  0244  3001               	movlw	1
  2947  0245  2A47               	ljmp	i16Lu2140
  2948  0246                     i16Lu2130:	
  2949  0246  3000               	movlw	0
  2950  0247                     i16Lu2140:	
  2951  0247  00F8               	movwf	process_level@new_on
  2952                           
  2953                           ;scan.c: 97: note_event.pitch = ((new_on == old_on)? 0 : 0x3C);
  2954  0248  0677               	xorwf	process_level@old_on,w
  2955  0249  1903               	btfsc	3,2
  2956  024A  2A51               	ljmp	i16Ll3036
  2957  024B  2A4D               	ljmp	i16Ll3034
  2958  024C                     i16Lu2151:	
  2959  024C  2A51               	ljmp	i16Ll3036
  2960  024D                     i16Lu2150:	
  2961  024D                     i16Ll3034:	
  2962  024D  303C               	movlw	60
  2963  024E  00F3               	movwf	_process_level$844
  2964  024F  01F4               	clrf	_process_level$844+1
  2965  0250  2A53               	ljmp	i16Ll3038
  2966  0251                     i16Ll3036:	
  2967  0251  01F3               	clrf	_process_level$844
  2968  0252  01F4               	clrf	_process_level$844+1
  2969  0253                     i16Ll3038:	
  2970  0253  0873               	movf	_process_level$844,w
  2971  0254  0022               	movlb	2	; select bank2
  2972  0255  00CB               	movwf	_note_event^(0+256)
  2973  0256                     i16Ll3040:	
  2974                           
  2975                           ;scan.c: 98: note_event.velocity = (new_on? 0x7F : 0);
  2976  0256  0878               	movf	process_level@new_on,w
  2977  0257  1D03               	btfss	3,2
  2978  0258  2A5E               	ljmp	i16Ll3044
  2979  0259  2A5B               	ljmp	i16Ll3042
  2980  025A                     i16Lu2161:	
  2981  025A  2A5E               	ljmp	i16Ll3044
  2982  025B                     i16Lu2160:	
  2983  025B                     i16Ll3042:	
  2984  025B  01F5               	clrf	_process_level$845
  2985  025C  01F6               	clrf	_process_level$845+1
  2986  025D  2A61               	ljmp	i16Ll243
  2987  025E                     i16Ll3044:	
  2988  025E  307F               	movlw	127
  2989  025F  00F5               	movwf	_process_level$845
  2990  0260  01F6               	clrf	_process_level$845+1
  2991  0261                     i16Ll243:	
  2992  0261  0875               	movf	_process_level$845,w
  2993  0262  00CC               	movwf	(_note_event^(0+256)+1)
  2994  0263                     i16Ll3046:	
  2995                           
  2996                           ;scan.c: 100: if (idx_key == 0) return;
  2997  0263  0872               	movf	process_level@idx_key,w
  2998  0264  1D03               	btfss	3,2
  2999  0265  2A69               	ljmp	i16Ll3050
  3000  0266  2A6B               	ljmp	i15Ll3260
  3001  0267                     i16Lu2171:	
  3002  0267  2A69               	ljmp	i16Ll3050
  3003  0268                     i16Lu2170:	
  3004  0268  2A6B               	ljmp	i15Ll3260
  3005  0269                     i16Ll3050:	
  3006                           
  3007                           ;scan.c: 101: note_event.pitch = 0;
  3008  0269  01CB               	clrf	_note_event^(0+256)
  3009                           
  3010                           ;scan.c: 102: note_event.velocity = 0;
  3011  026A  01CC               	clrf	(_note_event^(0+256)+1)
  3012  026B                     i16Ll245:	
  3013  026B                     i15Ll3260:	
  3014                           
  3015                           ;scan.c: 108: adc_levels[idx_key] = level;
  3016  026B  0020               	movlb	0	; select bank0
  3017  026C  085A               	movf	store_key_level@idx_key,w
  3018  026D  3E20               	addlw	(low (_adc_levels| (0+256)))& (0+255)
  3019  026E  0086               	movwf	6
  3020  026F  3001               	movlw	1	; select bank2/3
  3021  0270  0087               	movwf	7
  3022  0271  087A               	movf	store_key_level@level,w
  3023  0272  0081               	movwf	1
  3024  0273                     i15Ll3262:	
  3025                           
  3026                           ;scan.c: 109: idx_key ++;
  3027  0273  0ADA               	incf	store_key_level@idx_key,f
  3028  0274                     i15Ll3264:	
  3029                           
  3030                           ;scan.c: 110: if (idx_key >= N_KEYS || end_of_scan) idx_key = 0;
  3031  0274  3020               	movlw	32
  3032  0275  025A               	subwf	store_key_level@idx_key,w
  3033  0276  1803               	btfsc	3,0
  3034  0277  2A7F               	ljmp	i15Ll3268
  3035  0278  2A7A               	ljmp	i15Ll3266
  3036  0279                     i15Lu2371:	
  3037  0279  2A7F               	ljmp	i15Ll3268
  3038  027A                     i15Lu2370:	
  3039  027A                     i15Ll3266:	
  3040  027A  0879               	movf	store_key_level@end_of_scan,w
  3041  027B  1903               	btfsc	3,2
  3042  027C  2A80               	ljmp	i15Ll3270
  3043  027D  2A7F               	ljmp	i15Ll3268
  3044  027E                     i15Lu2381:	
  3045  027E  2A80               	ljmp	i15Ll3270
  3046  027F                     i15Lu2380:	
  3047  027F                     i15Ll3268:	
  3048  027F  01DA               	clrf	store_key_level@idx_key
  3049  0280                     i15Ll3270:	
  3050                           
  3051                           ;scan.c: 111: return idx_key == 0;
  3052  0280  085A               	movf	store_key_level@idx_key,w
  3053  0281  1903               	btfsc	3,2
  3054  0282  2A84               	ljmp	i15Lu2391
  3055  0283  2A86               	ljmp	i15Lu2390
  3056  0284                     i15Lu2391:	
  3057  0284  3001               	movlw	1
  3058  0285  2A87               	ljmp	iL123
  3059  0286                     i15Lu2390:	
  3060  0286  3000               	movlw	0
  3061  0287                     i15Lu2400:	
  3062  0287                     i15Ll253:	
  3063  0287                     iL123:	
  3064  0287  3A00               	xorlw	0
  3065  0288  1D03               	skipz
  3066  0289  2A8D               	goto	l3478
  3067  028A  3002               	movlw	2
  3068  028B  00E3               	movwf	_scan_task$867
  3069  028C  2A8F               	goto	L18
  3070  028D                     l3478:	
  3071  028D  01E3               	clrf	_scan_task$867
  3072  028E  0AE3               	incf	_scan_task$867,f
  3073  028F                     L18:	
  3074  028F  01E4               	clrf	_scan_task$867+1
  3075  0290  0863               	movf	_scan_task$867,w
  3076  0291                     L17:	
  3077  0291  0022               	movlb	2	; select bank2
  3078  0292  00D1               	movwf	scan_task@state^(0+256)
  3079                           
  3080                           ;scan.c: 165: break;
  3081  0293  2A9F               	goto	l3486
  3082  0294                     l3484:	
  3083  0294  0022               	movlb	2	; select bank2
  3084  0295  0851               	movf	scan_task@state^(0+256),w
  3085                           
  3086                           ; Switch size 1, requested type "speed"
  3087                           ; Number of cases is 6, Range of values is 0 to 5
  3088                           ; switch strategies available:
  3089                           ; Name         Instructions Cycles
  3090                           ; direct_byte           18     6 (fixed)
  3091                           ; simple_byte           19    10 (average)
  3092                           ; jumptable            260     6 (fixed)
  3093                           ;	Chosen strategy is direct_byte
  3094  0296  0084               	movwf	4
  3095  0297  3006               	movlw	6
  3096  0298  0204               	subwf	4,w
  3097  0299  1803               	skipnc
  3098  029A  2A9F               	goto	l3486
  3099  029B  3189               	movlp	high S3992
  3100  029C  3504               	lslf	4,w
  3101  029D  3E32               	addlw	low S3992
  3102  029E  0082               	movwf	2
  3103  029F                     l3486:	
  3104                           
  3105                           ;scan.c: 168: *note = note_event.pitch;
  3106  029F  0020               	movlb	0	; select bank0
  3107  02A0  0865               	movf	scan_task@note,w
  3108  02A1  0086               	movwf	6
  3109  02A2  0187               	clrf	7
  3110  02A3  0022               	movlb	2	; select bank2
  3111  02A4  084B               	movf	_note_event^(0+256),w
  3112  02A5  0081               	movwf	1
  3113                           
  3114                           ;scan.c: 169: *velocity = note_event.velocity;
  3115  02A6  087B               	movf	scan_task@velocity,w
  3116  02A7  0086               	movwf	6
  3117  02A8  084C               	movf	(_note_event^(0+256)+1),w
  3118  02A9  0081               	movwf	1
  3119                           
  3120                           ;scan.c: 170: return !! note_event.pitch;
  3121  02AA  084B               	movf	_note_event^(0+256),w
  3122  02AB  1D03               	btfss	3,2
  3123  02AC  3401               	retlw	1
  3124  02AD  3400               	retlw	0
  3125  02AE                     __end_of_scan_task:	
  3126  02AE                     __ptext39:	
  3127 ;; *************** function _scan_init *****************
  3128 ;; Defined at:
  3129 ;;		line 29 in file "../src/scan.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;		None
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;		None
  3134 ;; Return value:  Size  Location     Type
  3135 ;;		None               void
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, status,0
  3138 ;; Tracked objects:
  3139 ;;		On entry : 1F/1
  3140 ;;		On exit  : 1F/1
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3147 ;;Total ram usage:        0 bytes
  3148 ;; Hardware stack levels used:    1
  3149 ;; Hardware stack levels required when called:    1
  3150 ;; This function calls:
  3151 ;;		Nothing
  3152 ;; This function is called by:
  3153 ;;		_scan_task
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           
  3158                           ;psect for function _scan_init
  3159  02AE                     _scan_init:	
  3160                           
  3161                           ;scan.c: 30: is_initialized = 1;
  3162                           
  3163                           ;incstack = 0
  3164                           ; Regs used in _scan_init: [wreg+status,2+status,0]
  3165  02AE  01E7               	clrf	_is_initialized^(0+128)
  3166  02AF  0AE7               	incf	_is_initialized^(0+128),f
  3167                           
  3168                           ;scan.c: 31: TRISCbits.TRISC3 = PIN_INPUT;
  3169  02B0  158E               	bsf	14,3	;volatile
  3170                           
  3171                           ;scan.c: 32: TRISCbits.TRISC4 = PIN_OUTPUT;
  3172  02B1  120E               	bcf	14,4	;volatile
  3173                           
  3174                           ;scan.c: 33: TRISCbits.TRISC5 = PIN_OUTPUT;
  3175  02B2  128E               	bcf	14,5	;volatile
  3176                           
  3177                           ;scan.c: 35: ANSELA = 0;
  3178  02B3  0023               	movlb	3	; select bank3
  3179  02B4  018C               	clrf	12	;volatile
  3180                           
  3181                           ;scan.c: 37: ANSELCbits.ANSC3 = PIN_ANALOG;
  3182  02B5  158E               	bsf	14,3	;volatile
  3183                           
  3184                           ;scan.c: 38: LATCbits.LATC4 = 0;
  3185  02B6  0022               	movlb	2	; select bank2
  3186  02B7  120E               	bcf	14,4	;volatile
  3187                           
  3188                           ;scan.c: 39: LATCbits.LATC5 = 0;
  3189  02B8  128E               	bcf	14,5	;volatile
  3190                           
  3191                           ;scan.c: 41: ANSELAbits.ANSA4 = PIN_DIGITAL;
  3192  02B9  0023               	movlb	3	; select bank3
  3193  02BA  120C               	bcf	12,4	;volatile
  3194                           
  3195                           ;scan.c: 42: TRISAbits.TRISA4 = PIN_INPUT;
  3196  02BB  0021               	movlb	1	; select bank1
  3197  02BC  160C               	bsf	12,4	;volatile
  3198                           
  3199                           ;scan.c: 44: PIE1bits.ADIE = 0;
  3200  02BD  1311               	bcf	17,6	;volatile
  3201                           
  3202                           ;scan.c: 45: ADCON0bits.ADON = 1;
  3203  02BE  141D               	bsf	29,0	;volatile
  3204                           
  3205                           ;scan.c: 46: ADCON1bits.ADFM = 0;
  3206  02BF  139E               	bcf	30,7	;volatile
  3207                           
  3208                           ;scan.c: 47: ADCON1bits.ADCS = 0b110;
  3209  02C0  081E               	movf	30,w	;volatile
  3210  02C1  398F               	andlw	-113
  3211  02C2  3860               	iorlw	96
  3212  02C3  009E               	movwf	30	;volatile
  3213                           
  3214                           ;scan.c: 48: ADCON1bits.ADPREF = 0;
  3215  02C4  30FC               	movlw	-4
  3216  02C5  059E               	andwf	30,f	;volatile
  3217                           
  3218                           ;scan.c: 49: ADCON2bits.TRIGSEL = 0;
  3219  02C6  308F               	movlw	-113
  3220  02C7  059F               	andwf	31,f	;volatile
  3221  02C8  0008               	return
  3222  02C9                     __end_of_scan_init:	
  3223  02C9                     __ptext29:	
  3224 ;; *************** function _SYSTEM_Initialize *****************
  3225 ;; Defined at:
  3226 ;;		line 62 in file "../src/system_config/low_pin_count_usb_development_kit/pic16f1455/system.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  state           1    wreg     enum E2461
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  state           1    1[COMMON] enum E2461
  3231 ;; Return value:  Size  Location     Type
  3232 ;;		None               void
  3233 ;; Registers used:
  3234 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : B1F/0
  3237 ;;		On exit  : B18/0
  3238 ;;		Unchanged: B00/0
  3239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3243 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3244 ;;Total ram usage:        1 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    2
  3247 ;; This function calls:
  3248 ;;		_BUTTON_Enable
  3249 ;;		_LED_Enable
  3250 ;; This function is called by:
  3251 ;;		_main
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           
  3256                           ;psect for function _SYSTEM_Initialize
  3257  02C9                     _SYSTEM_Initialize:	
  3258                           
  3259                           ;incstack = 0
  3260                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3261                           ;SYSTEM_Initialize@state stored from wreg
  3262  02C9  00F1               	movwf	SYSTEM_Initialize@state
  3263                           
  3264                           ; Switch size 1, requested type "speed"
  3265                           ; Number of cases is 3, Range of values is 0 to 2
  3266                           ; switch strategies available:
  3267                           ; Name         Instructions Cycles
  3268                           ; simple_byte           10     6 (average)
  3269                           ; direct_byte           12     6 (fixed)
  3270                           ; jumptable            260     6 (fixed)
  3271                           ;	Chosen strategy is simple_byte
  3272                           
  3273                           ;system.c: 75: break;
  3274                           
  3275                           ;system.c: 64: switch(state)
  3276  02CA  3A00               	xorlw	0	; case 0
  3277  02CB  1903               	skipnz
  3278  02CC  2AD4               	goto	l3574
  3279  02CD  3A01               	xorlw	1	; case 1
  3280  02CE  1903               	skipnz
  3281  02CF  2ADF               	goto	l16
  3282  02D0  3A03               	xorlw	3	; case 2
  3283  02D1  1903               	skipnz
  3284  02D2  2ADF               	goto	l16
  3285  02D3  2ADF               	goto	l16
  3286  02D4                     l3574:	
  3287                           
  3288                           ;system.c: 70: OSCCON = 0xFC;
  3289  02D4  30FC               	movlw	252
  3290  02D5  0021               	movlb	1	; select bank1
  3291  02D6  0099               	movwf	25	;volatile
  3292                           
  3293                           ;system.c: 71: ACTCON = 0x90;
  3294  02D7  3090               	movlw	144
  3295  02D8  0027               	movlb	7	; select bank7
  3296  02D9  009B               	movwf	27	;volatile
  3297                           
  3298                           ;system.c: 73: LED_Enable(LED_C2);
  3299  02DA  3001               	movlw	1
  3300  02DB  235A  3180         	fcall	_LED_Enable
  3301                           
  3302                           ;system.c: 74: BUTTON_Enable(BUTTON_S1);
  3303  02DD  3001               	movlw	1
  3304  02DE  2B51               	ljmp	_BUTTON_Enable
  3305  02DF                     l16:	
  3306  02DF  0008               	return
  3307  02E0                     __end_of_SYSTEM_Initialize:	
  3308  02E0                     __ptext5:	
  3309 ;; *************** function _USBDeviceInit *****************
  3310 ;; Defined at:
  3311 ;;		line 298 in file "../../../../../../framework/usb/src/usb_device.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;		None
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;  p               2    0[COMMON] PTR unsigned char 
  3316 ;;		 -> UEP1(1), 
  3317 ;;  i               1    2[COMMON] unsigned char 
  3318 ;;  i               1    3[COMMON] unsigned char 
  3319 ;; Return value:  Size  Location     Type
  3320 ;;		None               void
  3321 ;; Registers used:
  3322 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 1F/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3329 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3331 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3332 ;;Total ram usage:        4 bytes
  3333 ;; Hardware stack levels used:    1
  3334 ;; Hardware stack levels required when called:    1
  3335 ;; This function calls:
  3336 ;;		Nothing
  3337 ;; This function is called by:
  3338 ;;		_main
  3339 ;;		_USBDeviceTasks
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           
  3344                           ;psect for function _USBDeviceInit
  3345  02E0                     _USBDeviceInit:	
  3346                           
  3347                           ;usb_device.c: 300: uint8_t i;
  3348                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
  3349                           
  3350                           ;incstack = 0
  3351                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  3352  02E0  0021               	movlb	1	; select bank1
  3353  02E1  1112               	bcf	18,2	;volatile
  3354                           
  3355                           ;usb_device.c: 305: {UEIR = 0;};
  3356  02E2  003D               	movlb	29	; select bank29
  3357  02E3  0193               	clrf	19	;volatile
  3358                           
  3359                           ;usb_device.c: 308: {UIR = 0;};
  3360  02E4  0190               	clrf	16	;volatile
  3361                           
  3362                           ;usb_device.c: 311: UEP0 = 0;
  3363  02E5  0198               	clrf	24	;volatile
  3364                           
  3365                           ;usb_device.c: 313: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 0
      +                          ; };
  3366  02E6  300E               	movlw	14
  3367  02E7  00F1               	movwf	USBDeviceInit@p+1
  3368  02E8  3099               	movlw	153
  3369  02E9  00F0               	movwf	USBDeviceInit@p
  3370  02EA  01F2               	clrf	USBDeviceInit@i_1597
  3371  02EB                     l3378:	
  3372  02EB  0870               	movf	USBDeviceInit@p,w
  3373  02EC  0086               	movwf	6
  3374  02ED  0871               	movf	USBDeviceInit@p+1,w
  3375  02EE  0087               	movwf	7
  3376  02EF  0181               	clrf	1
  3377  02F0  0AF0               	incf	USBDeviceInit@p,f
  3378  02F1  1903               	skipnz
  3379  02F2  0AF1               	incf	USBDeviceInit@p+1,f
  3380  02F3  0AF2               	incf	USBDeviceInit@i_1597,f
  3381  02F4  1903               	btfsc	3,2
  3382  02F5  2AEB               	goto	l3378
  3383                           
  3384                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  3385  02F6  3016               	movlw	22
  3386  02F7  003D               	movlb	29	; select bank29
  3387  02F8  0091               	movwf	17	;volatile
  3388  02F9  309F               	movlw	159
  3389  02FA  0097               	movwf	23	;volatile
  3390  02FB  307B               	movlw	123
  3391  02FC  0092               	movwf	18	;volatile
  3392                           
  3393                           ;usb_device.c: 318: ;
  3394                           ;usb_device.c: 321: ;
  3395                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  3396  02FD  01F3               	clrf	USBDeviceInit@i
  3397  02FE                     l3394:	
  3398                           
  3399                           ;usb_device.c: 325: {
  3400                           ;usb_device.c: 326: BDT[i].Val = 0x00;
  3401  02FE  0873               	movf	USBDeviceInit@i,w
  3402  02FF  0709               	addwf	9,w
  3403  0300  0709               	addwf	9,w
  3404  0301  3E20               	addlw	32
  3405  0302  0086               	movwf	6
  3406  0303  3000               	movlw	0
  3407  0304  0187               	clrf	7
  3408  0305  3FC0               	movwi [0]fsr1
  3409  0306  3FC1               	movwi [1]fsr1
  3410  0307  3FC2               	movwi [2]fsr1
  3411  0308  3FC3               	movwi [3]fsr1
  3412  0309  3008               	movlw	8
  3413  030A  0AF3               	incf	USBDeviceInit@i,f
  3414  030B  0273               	subwf	USBDeviceInit@i,w
  3415  030C  1C03               	skipc
  3416  030D  2AFE               	goto	l3394
  3417                           
  3418                           ;usb_device.c: 327: }
  3419                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
  3420  030E  003D               	movlb	29	; select bank29
  3421  030F  170E               	bsf	14,6	;volatile
  3422                           
  3423                           ;usb_device.c: 333: UADDR = 0x00;
  3424  0310  0196               	clrf	22	;volatile
  3425                           
  3426                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
  3427  0311  120E               	bcf	14,4	;volatile
  3428                           
  3429                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
  3430  0312  130E               	bcf	14,6	;volatile
  3431  0313                     l3408:	
  3432                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
  3433                           
  3434  0313  003D               	movlb	29	; select bank29
  3435  0314  1D90               	btfss	16,3	;volatile
  3436  0315  2B1E               	goto	l3410
  3437                           
  3438                           ;usb_device.c: 343: {
  3439                           ;usb_device.c: 344: (UIR &= 0xF7);
  3440  0316  1190               	bcf	16,3	;volatile
  3441                           
  3442                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
  3443  0317  0020               	movlb	0	; select bank0
  3444  0318  01DD               	clrf	_inPipes+2
  3445                           
  3446                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
  3447  0319  0022               	movlb	2	; select bank2
  3448  031A  01C2               	clrf	(_outPipes^(0+256)+2)
  3449                           
  3450                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
  3451  031B  01C3               	clrf	(_outPipes^(0+256)+3)
  3452  031C  01C4               	clrf	((_outPipes+1)^(0+256)+3)
  3453  031D  2B13               	goto	l3408
  3454  031E                     l3410:	
  3455                           
  3456                           ;usb_device.c: 349: }
  3457                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
  3458  031E  3001               	movlw	1
  3459  031F  0021               	movlb	1	; select bank1
  3460  0320  00E3               	movwf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  3461                           
  3462                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
  3463  0321  00E4               	movwf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  3464                           
  3465                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
  3466  0322  01E0               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  3467                           
  3468                           ;usb_device.c: 358: USBBusIsSuspended = 0;
  3469  0323  01E1               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  3470                           
  3471                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(1+1u); i++)
  3472  0324  01F3               	clrf	USBDeviceInit@i
  3473  0325                     l3422:	
  3474                           
  3475                           ;usb_device.c: 363: {
  3476                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
  3477  0325  0873               	movf	USBDeviceInit@i,w
  3478  0326  3E52               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  3479  0327  0086               	movwf	6
  3480  0328  0187               	clrf	7
  3481  0329  0181               	clrf	1
  3482                           
  3483                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
  3484  032A  0873               	movf	USBDeviceInit@i,w
  3485  032B  3E4D               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3486  032C  0086               	movwf	6
  3487  032D  3001               	movlw	1	; select bank2/3
  3488  032E  0087               	movwf	7
  3489  032F  0181               	clrf	1
  3490                           
  3491                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
  3492  0330  0873               	movf	USBDeviceInit@i,w
  3493  0331  3E47               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  3494  0332  0086               	movwf	6
  3495  0333  0181               	clrf	1
  3496                           
  3497                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
  3498  0334  0873               	movf	USBDeviceInit@i,w
  3499  0335  3E49               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  3500  0336  0086               	movwf	6
  3501  0337  3002               	movlw	2
  3502  0338  0181               	clrf	1
  3503  0339  0AF3               	incf	USBDeviceInit@i,f
  3504  033A  0273               	subwf	USBDeviceInit@i,w
  3505  033B  1C03               	skipc
  3506  033C  2B25               	goto	l3422
  3507                           
  3508                           ;usb_device.c: 368: }
  3509                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  3510  033D  3028               	movlw	40
  3511  033E  0020               	movlb	0	; select bank0
  3512  033F  00D2               	movwf	_pBDTEntryIn
  3513                           
  3514                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
  3515  0340  3016               	movlw	22
  3516  0341  003D               	movlb	29	; select bank29
  3517  0342  0098               	movwf	24	;volatile
  3518                           
  3519                           ;usb_device.c: 375: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3520  0343  0020               	movlb	0	; select bank0
  3521  0344  01A3               	clrf	35	;volatile
  3522  0345  3040               	movlw	64
  3523  0346  00A2               	movwf	34	;volatile
  3524                           
  3525                           ;usb_device.c: 376: BDT[0].CNT = 8;
  3526  0347  3008               	movlw	8
  3527  0348  00A1               	movwf	33	;volatile
  3528                           
  3529                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
  3530  0349  3004               	movlw	4
  3531  034A  00A0               	movwf	32	;volatile
  3532                           
  3533                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
  3534  034B  17A0               	bsf	32,7	;volatile
  3535                           
  3536                           ;usb_device.c: 381: USBActiveConfiguration = 0;
  3537  034C  0021               	movlb	1	; select bank1
  3538  034D  01EE               	clrf	_USBActiveConfiguration^(0+128)
  3539                           
  3540                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
  3541  034E  0020               	movlb	0	; select bank0
  3542  034F  01D5               	clrf	_USBDeviceState
  3543  0350  0008               	return
  3544  0351                     __end_of_USBDeviceInit:	
  3545  0351                     __ptext31:	
  3546 ;; *************** function _BUTTON_Enable *****************
  3547 ;; Defined at:
  3548 ;;		line 63 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1455/buttons.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;  button          1    wreg     enum E2429
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;  button          1    0[COMMON] enum E2429
  3553 ;; Return value:  Size  Location     Type
  3554 ;;		None               void
  3555 ;; Registers used:
  3556 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3557 ;; Tracked objects:
  3558 ;;		On entry : B19/7
  3559 ;;		On exit  : B19/1
  3560 ;;		Unchanged: B18/0
  3561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3565 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3566 ;;Total ram usage:        1 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; Hardware stack levels required when called:    1
  3569 ;; This function calls:
  3570 ;;		Nothing
  3571 ;; This function is called by:
  3572 ;;		_SYSTEM_Initialize
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           
  3577                           ;psect for function _BUTTON_Enable
  3578  0351                     _BUTTON_Enable:	
  3579                           
  3580                           ;incstack = 0
  3581                           ; Regs used in _BUTTON_Enable: [wreg-fsr0h+status,2+status,0]
  3582                           ;BUTTON_Enable@button stored from wreg
  3583  0351  00F0               	movwf	BUTTON_Enable@button
  3584                           
  3585                           ; Switch size 1, requested type "speed"
  3586                           ; Number of cases is 2, Range of values is 0 to 1
  3587                           ; switch strategies available:
  3588                           ; Name         Instructions Cycles
  3589                           ; simple_byte            7     4 (average)
  3590                           ; direct_byte           10     6 (fixed)
  3591                           ; jumptable            260     6 (fixed)
  3592                           ;	Chosen strategy is simple_byte
  3593                           
  3594                           ;buttons.c: 65: switch(button)
  3595  0352  3A00               	xorlw	0	; case 0
  3596  0353  1903               	skipnz
  3597  0354  2B59               	goto	l339
  3598  0355  3A01               	xorlw	1	; case 1
  3599  0356  1903               	skipnz
  3600  0357  2B59               	goto	l339
  3601  0358  2B59               	goto	l339
  3602  0359                     l339:	
  3603  0359  0008               	return
  3604  035A                     __end_of_BUTTON_Enable:	
  3605  035A                     __ptext30:	
  3606 ;; *************** function _LED_Enable *****************
  3607 ;; Defined at:
  3608 ;;		line 237 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1455/leds.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;  led             1    wreg     enum E2
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  led             1    0[COMMON] enum E2
  3613 ;; Return value:  Size  Location     Type
  3614 ;;		None               void
  3615 ;; Registers used:
  3616 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3617 ;; Tracked objects:
  3618 ;;		On entry : B1F/7
  3619 ;;		On exit  : B19/1
  3620 ;;		Unchanged: B00/0
  3621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3625 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3626 ;;Total ram usage:        1 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:    1
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_SYSTEM_Initialize
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           
  3637                           ;psect for function _LED_Enable
  3638  035A                     _LED_Enable:	
  3639                           
  3640                           ;incstack = 0
  3641                           ; Regs used in _LED_Enable: [wreg-fsr0h+status,2+status,0]
  3642                           ;LED_Enable@led stored from wreg
  3643  035A  00F0               	movwf	LED_Enable@led
  3644                           
  3645                           ;leds.c: 239: switch(led)
  3646  035B  2B6B               	goto	l3356
  3647  035C                     l391:	
  3648                           ;leds.c: 240: {
  3649                           ;leds.c: 241: case LED_C2:
  3650                           
  3651                           
  3652                           ;leds.c: 242: TRISCbits.TRISC2 = 0;
  3653  035C  0021               	movlb	1	; select bank1
  3654  035D  110E               	bcf	14,2	;volatile
  3655                           
  3656                           ;leds.c: 243: break;
  3657  035E  0008               	return
  3658  035F                     l393:	
  3659                           ;leds.c: 245: case LED_D1:
  3660                           
  3661                           
  3662                           ;leds.c: 246: TRISCbits.TRISC0 = 0;
  3663  035F  0021               	movlb	1	; select bank1
  3664  0360  100E               	bcf	14,0	;volatile
  3665                           
  3666                           ;leds.c: 247: break;
  3667  0361  0008               	return
  3668  0362                     l394:	
  3669                           ;leds.c: 249: case LED_D2:
  3670                           
  3671                           
  3672                           ;leds.c: 250: TRISCbits.TRISC1 = 0;
  3673  0362  0021               	movlb	1	; select bank1
  3674  0363  108E               	bcf	14,1	;volatile
  3675                           
  3676                           ;leds.c: 251: break;
  3677  0364  0008               	return
  3678  0365                     l395:	
  3679                           ;leds.c: 253: case LED_D3:
  3680                           
  3681                           
  3682                           ;leds.c: 254: TRISCbits.TRISC2 = 0;
  3683  0365  0021               	movlb	1	; select bank1
  3684  0366  110E               	bcf	14,2	;volatile
  3685                           
  3686                           ;leds.c: 255: break;
  3687  0367  0008               	return
  3688  0368                     l396:	
  3689                           ;leds.c: 257: case LED_D4:
  3690                           
  3691                           
  3692                           ;leds.c: 258: TRISCbits.TRISC3 = 0;
  3693  0368  0021               	movlb	1	; select bank1
  3694  0369  118E               	bcf	14,3	;volatile
  3695                           
  3696                           ;leds.c: 259: break;
  3697  036A  0008               	return
  3698  036B                     l3356:	
  3699  036B  0870               	movf	LED_Enable@led,w
  3700                           
  3701                           ; Switch size 1, requested type "speed"
  3702                           ; Number of cases is 6, Range of values is 0 to 5
  3703                           ; switch strategies available:
  3704                           ; Name         Instructions Cycles
  3705                           ; direct_byte           18     6 (fixed)
  3706                           ; simple_byte           19    10 (average)
  3707                           ; jumptable            260     6 (fixed)
  3708                           ;	Chosen strategy is direct_byte
  3709  036C  0084               	movwf	4
  3710  036D  3006               	movlw	6
  3711  036E  0204               	subwf	4,w
  3712  036F  1803               	skipnc
  3713  0370  0008               	return
  3714  0371  3189               	movlp	high S3990
  3715  0372  3504               	lslf	4,w
  3716  0373  3E26               	addlw	low S3990
  3717  0374  0082               	movwf	2
  3718  0375                     l398:	
  3719  0375  0008               	return
  3720  0376                     __end_of_LED_Enable:	
  3721  0376                     __ptext15:	
  3722 ;; *************** function _USBStdFeatureReqHandler *****************
  3723 ;; Defined at:
  3724 ;;		line 2757 in file "../../../../../../framework/usb/src/usb_device.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;		None
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;  pUEP            2    5[BANK0 ] PTR unsigned char 
  3729 ;;		 -> UEP0(1), 
  3730 ;;  p               1    8[BANK0 ] PTR struct __BDT
  3731 ;;		 -> BDT(32), NULL(0), 
  3732 ;;  current_ep_d    1    7[BANK0 ] struct .
  3733 ;; Return value:  Size  Location     Type
  3734 ;;		None               void
  3735 ;; Registers used:
  3736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3737 ;; Tracked objects:
  3738 ;;		On entry : 1D/0
  3739 ;;		On exit  : 1F/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3743 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3744 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3745 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3746 ;;Total ram usage:        6 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; Hardware stack levels required when called:    5
  3749 ;; This function calls:
  3750 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3751 ;; This function is called by:
  3752 ;;		_USBCheckStdRequest
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           
  3757                           ;psect for function _USBStdFeatureReqHandler
  3758  0376                     _USBStdFeatureReqHandler:	
  3759  0376                     l2954:	
  3760                           ;incstack = 0
  3761                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3762                           
  3763                           
  3764                           ;usb_device.c: 2759: BDT_ENTRY *p;
  3765                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
  3766                           ;usb_device.c: 2764: unsigned char* pUEP;
  3767                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
  3768                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
  3769  0376  0020               	movlb	0	; select bank0
  3770  0377  0B42               	decfsz	66,w	;volatile
  3771  0378  2B88               	goto	l2966
  3772  0379  0840               	movf	64,w	;volatile
  3773  037A  391F               	andlw	31
  3774  037B  1D03               	skipz
  3775  037C  2B88               	goto	l2966
  3776  037D  3003               	movlw	3
  3777                           
  3778                           ;usb_device.c: 2804: {
  3779                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
  3780  037E  17DD               	bsf	_inPipes+2,7
  3781                           
  3782                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
  3783  037F  0641               	xorwf	65,w	;volatile
  3784  0380  1D03               	btfss	3,2
  3785  0381  2B86               	goto	l2964
  3786                           
  3787                           ;usb_device.c: 2807: RemoteWakeup = 1;
  3788  0382  0022               	movlb	2	; select bank2
  3789  0383  01D0               	clrf	_RemoteWakeup^(0+256)
  3790  0384  0AD0               	incf	_RemoteWakeup^(0+256),f
  3791  0385  2B88               	goto	l2966
  3792  0386                     l2964:	
  3793                           
  3794                           ;usb_device.c: 2808: else
  3795                           ;usb_device.c: 2809: RemoteWakeup = 0;
  3796  0386  0022               	movlb	2	; select bank2
  3797  0387  01D0               	clrf	_RemoteWakeup^(0+256)
  3798  0388                     l2966:	
  3799                           
  3800                           ;usb_device.c: 2810: }
  3801                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
  3802                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
  3803                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
  3804                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
  3805  0388  0020               	movlb	0	; select bank0
  3806  0389  0842               	movf	66,w	;volatile
  3807  038A  1D03               	btfss	3,2
  3808  038B  0008               	return
  3809  038C  0840               	movf	64,w	;volatile
  3810  038D  391F               	andlw	31
  3811  038E  3A02               	xorlw	2
  3812  038F  1D03               	skipz
  3813  0390  0008               	return
  3814  0391  0844               	movf	68,w	;volatile
  3815  0392  390F               	andlw	15
  3816  0393  1903               	skipnz
  3817  0394  0008               	return
  3818  0395  0844               	movf	68,w	;volatile
  3819  0396  390F               	andlw	15
  3820  0397  00FA               	movwf	??_USBStdFeatureReqHandler
  3821  0398  3002               	movlw	2
  3822  0399  027A               	subwf	??_USBStdFeatureReqHandler,w
  3823  039A  1803               	skipnc
  3824  039B  0008               	return
  3825  039C  3020               	movlw	32
  3826  039D  0655               	xorwf	_USBDeviceState,w
  3827  039E  1D03               	btfss	3,2
  3828  039F  0008               	return
  3829                           
  3830                           ;usb_device.c: 2817: {
  3831                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
  3832  03A0  17DD               	bsf	_inPipes+2,7
  3833                           
  3834                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
  3835  03A1  1BC4               	btfsc	68,7	;volatile
  3836  03A2  2BB0               	goto	l2980
  3837                           
  3838                           ;usb_device.c: 2824: {
  3839                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  3840  03A3  0844               	movf	68,w	;volatile
  3841  03A4  390F               	andlw	15
  3842  03A5  3E4D               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3843  03A6  0086               	movwf	6
  3844  03A7  3001               	movlw	1	; select bank2/3
  3845  03A8  0087               	movwf	7
  3846  03A9  0801               	movf	1,w
  3847  03AA  00E9               	movwf	USBStdFeatureReqHandler@p
  3848                           
  3849                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  3850  03AB  0844               	movf	68,w	;volatile
  3851  03AC  390F               	andlw	15
  3852  03AD  3E49               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  3853  03AE  0086               	movwf	6
  3854  03AF  2BBD               	goto	L3
  3855  03B0                     l2980:	
  3856                           ;usb_device.c: 2827: }
  3857                           
  3858                           
  3859                           ;usb_device.c: 2828: else
  3860                           ;usb_device.c: 2829: {
  3861                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  3862  03B0  0844               	movf	68,w	;volatile
  3863  03B1  390F               	andlw	15
  3864  03B2  3E52               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  3865  03B3  0086               	movwf	6
  3866  03B4  0187               	clrf	7
  3867  03B5  0801               	movf	1,w
  3868  03B6  00E9               	movwf	USBStdFeatureReqHandler@p
  3869                           
  3870                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  3871  03B7  0844               	movf	68,w	;volatile
  3872  03B8  390F               	andlw	15
  3873  03B9  3E47               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  3874  03BA  0086               	movwf	6
  3875  03BB  3001               	movlw	1	; select bank2/3
  3876  03BC  0087               	movwf	7
  3877  03BD                     L3:	
  3878  03BD  0801               	movf	1,w
  3879  03BE  00E8               	movwf	USBStdFeatureReqHandler@current_ep_data
  3880                           
  3881                           ;usb_device.c: 2832: }
  3882                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
  3883  03BF  1868               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  3884  03C0  2BC3               	goto	l756
  3885                           
  3886                           ;usb_device.c: 2839: {
  3887                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  3888  03C1  1169               	bcf	USBStdFeatureReqHandler@p,2
  3889                           
  3890                           ;usb_device.c: 2841: }
  3891  03C2  2BC4               	goto	l757
  3892  03C3                     l756:	
  3893                           
  3894                           ;usb_device.c: 2842: else
  3895                           ;usb_device.c: 2843: {
  3896                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  3897  03C3  1569               	bsf	USBStdFeatureReqHandler@p,2
  3898  03C4                     l757:	
  3899                           
  3900                           ;usb_device.c: 2845: }
  3901                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
  3902  03C4  1BC4               	btfsc	68,7	;volatile
  3903  03C5  2BCD               	goto	l2988
  3904                           
  3905                           ;usb_device.c: 2851: {
  3906                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  3907  03C6  0844               	movf	68,w	;volatile
  3908  03C7  390F               	andlw	15
  3909  03C8  3E4D               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3910  03C9  0086               	movwf	6
  3911  03CA  3001               	movlw	1	; select bank2/3
  3912  03CB  0087               	movwf	7
  3913  03CC  2BD2               	goto	L4
  3914  03CD                     l2988:	
  3915                           ;usb_device.c: 2853: }
  3916                           
  3917                           
  3918                           ;usb_device.c: 2854: else
  3919                           ;usb_device.c: 2855: {
  3920                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  3921  03CD  0844               	movf	68,w	;volatile
  3922  03CE  390F               	andlw	15
  3923  03CF  3E52               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  3924  03D0  0086               	movwf	6
  3925  03D1  0187               	clrf	7
  3926  03D2                     L4:	
  3927  03D2  0869               	movf	USBStdFeatureReqHandler@p,w
  3928  03D3  0081               	movwf	1
  3929                           
  3930                           ;usb_device.c: 2857: }
  3931                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
  3932  03D4  3003               	movlw	3
  3933  03D5  0641               	xorwf	65,w	;volatile
  3934  03D6  1D03               	btfss	3,2
  3935  03D7  2BF2               	goto	l3004
  3936                           
  3937                           ;usb_device.c: 2861: {
  3938                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
  3939  03D8  0869               	movf	USBStdFeatureReqHandler@p,w
  3940  03D9  0086               	movwf	6
  3941  03DA  0187               	clrf	7
  3942  03DB  1F81               	btfss	1,7
  3943  03DC  2BEA               	goto	l3000
  3944                           
  3945                           ;usb_device.c: 2863: {
  3946                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
  3947  03DD  1BC4               	btfsc	68,7	;volatile
  3948  03DE  2BE3               	goto	l2998
  3949                           
  3950                           ;usb_device.c: 2867: {
  3951                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  3952  03DF  0844               	movf	68,w	;volatile
  3953  03E0  390F               	andlw	15
  3954  03E1  3E49               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  3955  03E2  2BE6               	goto	L5
  3956  03E3                     l2998:	
  3957                           ;usb_device.c: 2869: }
  3958                           
  3959                           
  3960                           ;usb_device.c: 2870: else
  3961                           ;usb_device.c: 2871: {
  3962                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  3963  03E3  0844               	movf	68,w	;volatile
  3964  03E4  390F               	andlw	15
  3965  03E5  3E47               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  3966  03E6                     L5:	
  3967  03E6  0086               	movwf	6
  3968  03E7  3001               	movlw	1	; select bank2/3
  3969  03E8  0087               	movwf	7
  3970  03E9  1481               	bsf	1,1
  3971  03EA                     l3000:	
  3972                           
  3973                           ;usb_device.c: 2873: }
  3974                           ;usb_device.c: 2874: }
  3975                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
  3976  03EA  0869               	movf	USBStdFeatureReqHandler@p,w
  3977  03EB  0086               	movwf	6
  3978  03EC  0187               	clrf	7
  3979  03ED  1501               	bsf	1,2
  3980                           
  3981                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
  3982  03EE  0869               	movf	USBStdFeatureReqHandler@p,w
  3983  03EF  0086               	movwf	6
  3984  03F0  1781               	bsf	1,7
  3985                           
  3986                           ;usb_device.c: 2879: }
  3987  03F1  0008               	return
  3988  03F2                     l3004:	
  3989                           
  3990                           ;usb_device.c: 2880: else
  3991                           ;usb_device.c: 2881: {
  3992                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  3993  03F2  3004               	movlw	4
  3994  03F3  06E9               	xorwf	USBStdFeatureReqHandler@p,f
  3995                           
  3996                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
  3997  03F4  0869               	movf	USBStdFeatureReqHandler@p,w
  3998  03F5  0086               	movwf	6
  3999  03F6  0187               	clrf	7
  4000                           
  4001                           ;usb_device.c: 2888: {
  4002                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
  4003  03F7  0869               	movf	USBStdFeatureReqHandler@p,w
  4004  03F8  1F81               	btfss	1,7
  4005  03F9  2C09               	goto	L7
  4006  03FA  0086               	movwf	6
  4007  03FB  1381               	bcf	1,7
  4008                           
  4009                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
  4010  03FC  0086               	movwf	6
  4011  03FD  3005               	movlw	5
  4012  03FE  1701               	bsf	1,6
  4013                           
  4014                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  4015  03FF  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4016  0400  01E2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4017  0401  0869               	movf	USBStdFeatureReqHandler@p,w
  4018  0402  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4019  0403  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4020  0404  0AE4               	incf	USER_USB_CALLBACK_EVENT_HANDLER@size,f
  4021  0405  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4022  0406  24F9  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4023                           
  4024                           ;usb_device.c: 2894: }
  4025  0408  2C0C               	goto	l3014
  4026  0409                     L7:	
  4027                           ;usb_device.c: 2895: else
  4028                           ;usb_device.c: 2896: {
  4029                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
  4030                           
  4031  0409  0086               	movwf	6
  4032  040A  0187               	clrf	7
  4033  040B  1701               	bsf	1,6
  4034  040C                     l3014:	
  4035                           
  4036                           ;usb_device.c: 2899: }
  4037                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  4038  040C  3004               	movlw	4
  4039  040D  0020               	movlb	0	; select bank0
  4040  040E  06E9               	xorwf	USBStdFeatureReqHandler@p,f
  4041                           
  4042                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  4043  040F  18E8               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  4044  0410  2C16               	goto	l769
  4045  0411  0869               	movf	USBStdFeatureReqHandler@p,w
  4046  0412  0086               	movwf	6
  4047  0413  0187               	clrf	7
  4048  0414  1F81               	btfss	1,7
  4049  0415  2C33               	goto	l3026
  4050  0416                     l769:	
  4051                           
  4052                           ;usb_device.c: 2910: {
  4053                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
  4054  0416  1BC4               	btfsc	68,7	;volatile
  4055  0417  2C1C               	goto	l3022
  4056                           
  4057                           ;usb_device.c: 2912: {
  4058                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  4059  0418  0844               	movf	68,w	;volatile
  4060  0419  390F               	andlw	15
  4061  041A  3E49               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4062  041B  2C1F               	goto	L6
  4063  041C                     l3022:	
  4064                           ;usb_device.c: 2914: }
  4065                           
  4066                           
  4067                           ;usb_device.c: 2915: else
  4068                           ;usb_device.c: 2916: {
  4069                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  4070  041C  0844               	movf	68,w	;volatile
  4071  041D  390F               	andlw	15
  4072  041E  3E47               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4073  041F                     L6:	
  4074  041F  0086               	movwf	6
  4075  0420  3001               	movlw	1	; select bank2/3
  4076  0421  0087               	movwf	7
  4077  0422  1081               	bcf	1,1
  4078                           
  4079                           ;usb_device.c: 2918: }
  4080                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  4081  0423  0869               	movf	USBStdFeatureReqHandler@p,w
  4082  0424  0086               	movwf	6
  4083  0425  303B               	movlw	59
  4084  0426  0187               	clrf	7
  4085  0427  0581               	andwf	1,f
  4086                           
  4087                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  4088  0428  3005               	movlw	5
  4089  0429  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4090  042A  01E2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4091  042B  0869               	movf	USBStdFeatureReqHandler@p,w
  4092  042C  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4093  042D  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4094  042E  0AE4               	incf	USER_USB_CALLBACK_EVENT_HANDLER@size,f
  4095  042F  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4096  0430  24F9  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4097                           
  4098                           ;usb_device.c: 2924: }
  4099  0432  2C38               	goto	l3028
  4100  0433                     l3026:	
  4101                           
  4102                           ;usb_device.c: 2925: else
  4103                           ;usb_device.c: 2926: {
  4104                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  4105  0433  0869               	movf	USBStdFeatureReqHandler@p,w
  4106  0434  0086               	movwf	6
  4107  0435  303B               	movlw	59
  4108  0436  0187               	clrf	7
  4109  0437  0581               	andwf	1,f
  4110  0438                     l3028:	
  4111                           
  4112                           ;usb_device.c: 2929: }
  4113                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  4114  0438  0020               	movlb	0	; select bank0
  4115  0439  0844               	movf	68,w	;volatile
  4116  043A  390F               	andlw	15
  4117  043B  3E98               	addlw	152
  4118  043C  00FA               	movwf	??_USBStdFeatureReqHandler
  4119  043D  300E               	movlw	14
  4120  043E  01FB               	clrf	??_USBStdFeatureReqHandler+1
  4121  043F  3DFB               	addwfc	??_USBStdFeatureReqHandler+1,f
  4122  0440  087A               	movf	??_USBStdFeatureReqHandler,w
  4123  0441  00E6               	movwf	USBStdFeatureReqHandler@pUEP
  4124  0442  087B               	movf	??_USBStdFeatureReqHandler+1,w
  4125  0443  00E7               	movwf	USBStdFeatureReqHandler@pUEP+1
  4126                           
  4127                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
  4128  0444  0866               	movf	USBStdFeatureReqHandler@pUEP,w
  4129  0445  0086               	movwf	6
  4130  0446  0867               	movf	USBStdFeatureReqHandler@pUEP+1,w
  4131  0447  0087               	movwf	7
  4132  0448  1001               	bcf	1,0
  4133  0449  0008               	return
  4134  044A                     __end_of_USBStdFeatureReqHandler:	
  4135  044A                     __ptext1:	
  4136 ;; *************** function _USBDeviceTasks *****************
  4137 ;; Defined at:
  4138 ;;		line 489 in file "../../../../../../framework/usb/src/usb_device.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;		None
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;  i               1   14[BANK0 ] unsigned char 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;		None               void
  4145 ;; Registers used:
  4146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4147 ;; Tracked objects:
  4148 ;;		On entry : 2/0
  4149 ;;		On exit  : 1F/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4153 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4154 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4155 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4156 ;;Total ram usage:        2 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    9
  4159 ;; This function calls:
  4160 ;;		_USBCtrlEPAllowStatusStage
  4161 ;;		_USBCtrlEPService
  4162 ;;		_USBDeviceInit
  4163 ;;		_USBStallHandler
  4164 ;;		_USBSuspend
  4165 ;;		_USBWakeFromSuspend
  4166 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4167 ;; This function is called by:
  4168 ;;		_main
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           
  4173                           ;psect for function _USBDeviceTasks
  4174  044A                     _USBDeviceTasks:	
  4175                           
  4176                           ;usb_device.c: 556: }
  4177                           ;usb_device.c: 578: if(USBDeviceState == DETACHED_STATE)
  4178                           
  4179                           ;usb_device.c: 491: uint8_t i;
  4180                           ;usb_device.c: 517: if (1 != 1)
  4181                           
  4182                           ;incstack = 0
  4183                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4184  044A  0020               	movlb	0	; select bank0
  4185  044B  0855               	movf	_USBDeviceState,w
  4186  044C  1D03               	btfss	3,2
  4187  044D  2C5E               	goto	l3602
  4188                           
  4189                           ;usb_device.c: 579: {
  4190                           ;usb_device.c: 581: UCON = 0;
  4191  044E  003D               	movlb	29	; select bank29
  4192  044F  018E               	clrf	14	;volatile
  4193                           
  4194                           ;usb_device.c: 584: UIE = 0;
  4195  0450  0192               	clrf	18	;volatile
  4196                           
  4197                           ;usb_device.c: 588: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  4198  0451  3016               	movlw	22
  4199  0452  0091               	movwf	17	;volatile
  4200  0453  309F               	movlw	159
  4201  0454  0097               	movwf	23	;volatile
  4202  0455  307B               	movlw	123
  4203  0456  0092               	movwf	18	;volatile
  4204  0457                     l538:	
  4205                           ;usb_device.c: 591: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  4206                           
  4207  0457  198E               	btfsc	14,3	;volatile
  4208  0458  2C5B               	goto	l540
  4209  0459  158E               	bsf	14,3	;volatile
  4210  045A  2C57               	goto	l538
  4211  045B                     l540:	
  4212                           
  4213                           ;usb_device.c: 594: USBDeviceState = ATTACHED_STATE;
  4214  045B  0020               	movlb	0	; select bank0
  4215  045C  01D5               	clrf	_USBDeviceState
  4216  045D  0AD5               	incf	_USBDeviceState,f
  4217  045E                     l3602:	
  4218                           
  4219                           ;usb_device.c: 599: }
  4220                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
  4221  045E  0355               	decf	_USBDeviceState,w
  4222  045F  1D03               	btfss	3,2
  4223  0460  2C6B               	goto	l3614
  4224                           
  4225                           ;usb_device.c: 603: {
  4226                           ;usb_device.c: 613: if(!UCONbits.SE0)
  4227  0461  003D               	movlb	29	; select bank29
  4228  0462  1A8E               	btfsc	14,5	;volatile
  4229  0463  2C6B               	goto	l3614
  4230                           
  4231                           ;usb_device.c: 614: {
  4232                           ;usb_device.c: 615: {UIR = 0;};
  4233  0464  0190               	clrf	16	;volatile
  4234                           
  4235                           ;usb_device.c: 617: UIE=0;
  4236  0465  0192               	clrf	18	;volatile
  4237                           
  4238                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
  4239  0466  1412               	bsf	18,0	;volatile
  4240                           
  4241                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
  4242  0467  1612               	bsf	18,4	;volatile
  4243                           
  4244                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
  4245  0468  3002               	movlw	2
  4246  0469  0020               	movlb	0	; select bank0
  4247  046A  00D5               	movwf	_USBDeviceState
  4248  046B                     l3614:	
  4249                           
  4250                           ;usb_device.c: 622: }
  4251                           ;usb_device.c: 623: }
  4252                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4253  046B  003D               	movlb	29	; select bank29
  4254  046C  1910               	btfsc	16,2	;volatile
  4255  046D  1D12               	btfss	18,2	;volatile
  4256  046E  2C72               	goto	l3622
  4257                           
  4258                           ;usb_device.c: 640: {
  4259                           ;usb_device.c: 641: (UIR &= 0xFB);
  4260  046F  1110               	bcf	16,2	;volatile
  4261                           
  4262                           ;usb_device.c: 645: USBWakeFromSuspend();
  4263  0470  2653  3180         	fcall	_USBWakeFromSuspend
  4264  0472                     l3622:	
  4265                           
  4266                           ;usb_device.c: 647: }
  4267                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
  4268  0472  1C8E               	btfss	14,1	;volatile
  4269  0473  2C77               	goto	l544
  4270                           
  4271                           ;usb_device.c: 653: {
  4272                           ;usb_device.c: 654: PIR2bits.USBIF = 0;;
  4273  0474  0020               	movlb	0	; select bank0
  4274  0475  1112               	bcf	18,2	;volatile
  4275                           
  4276                           ;usb_device.c: 655: return;
  4277  0476  0008               	return
  4278  0477                     l544:	
  4279                           
  4280                           ;usb_device.c: 656: }
  4281                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4282  0477  1810               	btfsc	16,0	;volatile
  4283  0478  1C12               	btfss	18,0	;volatile
  4284  0479  2C80               	goto	l3634
  4285                           
  4286                           ;usb_device.c: 669: {
  4287                           ;usb_device.c: 670: USBDeviceInit();
  4288  047A  22E0  3180         	fcall	_USBDeviceInit
  4289                           
  4290                           ;usb_device.c: 674: ;
  4291                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
  4292  047C  3004               	movlw	4
  4293  047D  00D5               	movwf	_USBDeviceState
  4294                           
  4295                           ;usb_device.c: 686: (UIR &= 0xFE);
  4296  047E  003D               	movlb	29	; select bank29
  4297  047F  1010               	bcf	16,0	;volatile
  4298  0480                     l3634:	
  4299                           
  4300                           ;usb_device.c: 687: }
  4301                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4302  0480  1A10               	btfsc	16,4	;volatile
  4303  0481  1E12               	btfss	18,4	;volatile
  4304  0482  2C87               	goto	l3642
  4305                           
  4306                           ;usb_device.c: 693: {
  4307                           ;usb_device.c: 698: USBSuspend();
  4308  0483  2648  3180         	fcall	_USBSuspend
  4309                           
  4310                           ;usb_device.c: 701: (UIR &= 0xEF);
  4311  0485  003D               	movlb	29	; select bank29
  4312  0486  1210               	bcf	16,4	;volatile
  4313  0487                     l3642:	
  4314                           
  4315                           ;usb_device.c: 702: }
  4316                           ;usb_device.c: 704: if(UIRbits.SOFIF)
  4317  0487  1F10               	btfss	16,6	;volatile
  4318  0488  2CA0               	goto	l3658
  4319                           
  4320                           ;usb_device.c: 705: {
  4321                           ;usb_device.c: 706: if(UIEbits.SOFIE)
  4322  0489  1F12               	btfss	18,6	;volatile
  4323  048A  2C95               	goto	l3648
  4324                           
  4325                           ;usb_device.c: 707: {
  4326                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4327  048B  3073               	movlw	115
  4328  048C  0020               	movlb	0	; select bank0
  4329  048D  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4330  048E  01E2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4331  048F  01E3               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4332  0490  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4333  0491  0AE4               	incf	USER_USB_CALLBACK_EVENT_HANDLER@size,f
  4334  0492  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4335  0493  24F9  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4336  0495                     l3648:	
  4337                           
  4338                           ;usb_device.c: 709: }
  4339                           ;usb_device.c: 710: (UIR &= 0xBF);
  4340  0495  003D               	movlb	29	; select bank29
  4341  0496  1310               	bcf	16,6	;volatile
  4342                           
  4343                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  4344  0497  0021               	movlb	1	; select bank1
  4345  0498  0865               	movf	_USBStatusStageTimeoutCounter^(0+128),w
  4346  0499  1D03               	btfss	3,2
  4347                           
  4348                           ;usb_device.c: 736: {
  4349                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  4350  049A  03E5               	decf	_USBStatusStageTimeoutCounter^(0+128),f
  4351                           
  4352                           ;usb_device.c: 738: }
  4353                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  4354  049B  0865               	movf	_USBStatusStageTimeoutCounter^(0+128),w
  4355  049C  1D03               	btfss	3,2
  4356  049D  2CA0               	goto	l3658
  4357                           
  4358                           ;usb_device.c: 745: {
  4359                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  4360  049E  2519  3180         	fcall	_USBCtrlEPAllowStatusStage
  4361  04A0                     l3658:	
  4362                           
  4363                           ;usb_device.c: 747: }
  4364                           ;usb_device.c: 749: }
  4365                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4366  04A0  003D               	movlb	29	; select bank29
  4367  04A1  1A90               	btfsc	16,5	;volatile
  4368  04A2  1E92               	btfss	18,5	;volatile
  4369  04A3  2CA6               	goto	l3664
  4370                           
  4371                           ;usb_device.c: 752: {
  4372                           ;usb_device.c: 753: USBStallHandler();
  4373  04A4  262D  3180         	fcall	_USBStallHandler
  4374  04A6                     l3664:	
  4375                           
  4376                           ;usb_device.c: 754: }
  4377                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4378  04A6  1890               	btfsc	16,1	;volatile
  4379  04A7  1C92               	btfss	18,1	;volatile
  4380  04A8  2CB6               	goto	l3672
  4381                           
  4382                           ;usb_device.c: 757: {
  4383                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4384  04A9  30FF               	movlw	255
  4385  04AA  0020               	movlb	0	; select bank0
  4386  04AB  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4387  04AC  307F               	movlw	127
  4388  04AD  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4389  04AE  01E3               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4390  04AF  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4391  04B0  0AE4               	incf	USER_USB_CALLBACK_EVENT_HANDLER@size,f
  4392  04B1  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4393  04B2  24F9  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4394                           
  4395                           ;usb_device.c: 759: {UEIR = 0;};
  4396  04B4  003D               	movlb	29	; select bank29
  4397  04B5  0193               	clrf	19	;volatile
  4398  04B6                     l3672:	
  4399                           
  4400                           ;usb_device.c: 767: }
  4401                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  4402  04B6  3004               	movlw	4
  4403  04B7  0020               	movlb	0	; select bank0
  4404  04B8  0255               	subwf	_USBDeviceState,w
  4405  04B9  1803               	skipnc
  4406  04BA  2CBD               	goto	l553
  4407                           
  4408                           ;usb_device.c: 775: {
  4409                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  4410  04BB  1112               	bcf	18,2	;volatile
  4411                           
  4412                           ;usb_device.c: 777: return;
  4413  04BC  0008               	return
  4414  04BD                     l553:	
  4415                           
  4416                           ;usb_device.c: 778: }
  4417                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  4418  04BD  003D               	movlb	29	; select bank29
  4419  04BE  1D92               	btfss	18,3	;volatile
  4420  04BF  2CF6               	goto	l554
  4421                           
  4422                           ;usb_device.c: 784: {
  4423                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  4424  04C0  0020               	movlb	0	; select bank0
  4425  04C1  01EF               	clrf	USBDeviceTasks@i
  4426  04C2  2CF3               	goto	l555
  4427  04C3                     l3682:	
  4428                           
  4429                           ;usb_device.c: 788: {
  4430                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  4431  04C3  080F               	movf	15,w	;volatile
  4432  04C4  0020               	movlb	0	; select bank0
  4433  04C5  00E0               	movwf	_USTATcopy
  4434                           
  4435                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  4436  04C6  0C60               	rrf	_USTATcopy,w
  4437  04C7  00EE               	movwf	??_USBDeviceTasks
  4438  04C8  0CEE               	rrf	??_USBDeviceTasks,f
  4439  04C9  0C6E               	rrf	??_USBDeviceTasks,w
  4440  04CA  390F               	andlw	15
  4441  04CB  0021               	movlb	1	; select bank1
  4442  04CC  00E6               	movwf	_endpoint_number^(0+128)
  4443                           
  4444                           ;usb_device.c: 793: (UIR &= 0xF7);
  4445  04CD  003D               	movlb	29	; select bank29
  4446  04CE  1190               	bcf	16,3	;volatile
  4447                           
  4448                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  4449  04CF  0020               	movlb	0	; select bank0
  4450  04D0  1960               	btfsc	_USTATcopy,2
  4451  04D1  2CD6               	goto	l3692
  4452                           
  4453                           ;usb_device.c: 799: {
  4454                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4455  04D2  0021               	movlb	1	; select bank1
  4456  04D3  0866               	movf	_endpoint_number^(0+128),w
  4457  04D4  3E49               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4458  04D5  2CD9               	goto	L1
  4459  04D6                     l3692:	
  4460                           ;usb_device.c: 801: }
  4461                           
  4462                           
  4463                           ;usb_device.c: 802: else
  4464                           ;usb_device.c: 803: {
  4465                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4466  04D6  0021               	movlb	1	; select bank1
  4467  04D7  0866               	movf	_endpoint_number^(0+128),w
  4468  04D8  3E47               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4469  04D9                     L1:	
  4470  04D9  0086               	movwf	6
  4471  04DA  3001               	movlw	1	; select bank2/3
  4472  04DB  0087               	movwf	7
  4473  04DC  0681               	xorwf	1,f
  4474                           
  4475                           ;usb_device.c: 805: }
  4476                           ;usb_device.c: 810: if(endpoint_number == 0)
  4477  04DD  0866               	movf	_endpoint_number^(0+128),w
  4478  04DE  1D03               	btfss	3,2
  4479  04DF  2CE3               	goto	l3698
  4480                           
  4481                           ;usb_device.c: 811: {
  4482                           ;usb_device.c: 812: USBCtrlEPService();
  4483  04E0  25DF  3180         	fcall	_USBCtrlEPService
  4484                           
  4485                           ;usb_device.c: 813: }
  4486  04E2  2CED               	goto	l3700
  4487  04E3                     l3698:	
  4488                           
  4489                           ;usb_device.c: 814: else
  4490                           ;usb_device.c: 815: {
  4491                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  4492  04E3  3072               	movlw	114
  4493  04E4  0020               	movlb	0	; select bank0
  4494  04E5  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4495  04E6  3060               	movlw	(low (_USTATcopy| 0))& (0+255)
  4496  04E7  01E2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4497  04E8  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4498  04E9  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4499  04EA  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4500  04EB  24F9  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4501  04ED                     l3700:	
  4502  04ED  0020               	movlb	0	; select bank0
  4503  04EE  3004               	movlw	4
  4504  04EF  0AEF               	incf	USBDeviceTasks@i,f
  4505  04F0  026F               	subwf	USBDeviceTasks@i,w
  4506  04F1  1803               	btfsc	3,0
  4507  04F2  2CF6               	goto	l554
  4508  04F3                     l555:	
  4509                           
  4510                           ;usb_device.c: 786: {
  4511                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  4512  04F3  003D               	movlb	29	; select bank29
  4513  04F4  1990               	btfsc	16,3	;volatile
  4514  04F5  2CC3               	goto	l3682
  4515  04F6                     l554:	
  4516                           
  4517                           ;usb_device.c: 822: }
  4518                           ;usb_device.c: 823: }
  4519                           ;usb_device.c: 824: }
  4520                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  4521  04F6  0020               	movlb	0	; select bank0
  4522  04F7  1112               	bcf	18,2	;volatile
  4523  04F8  0008               	return
  4524  04F9                     __end_of_USBDeviceTasks:	
  4525  04F9                     __ptext16:	
  4526 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  4527 ;; Defined at:
  4528 ;;		line 101 in file "../src/main.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;  event           2    0[BANK0 ] enum E2511
  4531 ;;  pdata           1    2[BANK0 ] PTR void 
  4532 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(32), NULL(0), 
  4533 ;;  size            2    3[BANK0 ] unsigned int 
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;		None
  4536 ;; Return value:  Size  Location     Type
  4537 ;;                  1    wreg      unsigned char 
  4538 ;; Registers used:
  4539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4540 ;; Tracked objects:
  4541 ;;		On entry : 1F/0
  4542 ;;		On exit  : 0/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4545 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4548 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4549 ;;Total ram usage:        5 bytes
  4550 ;; Hardware stack levels used:    1
  4551 ;; Hardware stack levels required when called:    4
  4552 ;; This function calls:
  4553 ;;		_APP_DeviceAudioMIDIInitialize
  4554 ;;		_APP_DeviceAudioMIDISOFHandler
  4555 ;;		_APP_LEDUpdateUSBStatus
  4556 ;; This function is called by:
  4557 ;;		_USBDeviceTasks
  4558 ;;		_USBStdSetCfgHandler
  4559 ;;		_USBSuspend
  4560 ;;		_USBWakeFromSuspend
  4561 ;;		_USBCtrlTrfSetupHandler
  4562 ;;		_USBCheckStdRequest
  4563 ;;		_USBStdFeatureReqHandler
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           
  4568                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  4569  04F9                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  4570  04F9                     l2702:	
  4571                           ;incstack = 0
  4572                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  4573                           
  4574                           
  4575                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4576                           ; Switch size 1, requested type "speed"
  4577                           ; Number of cases is 2, Range of values is 0 to 127
  4578                           ; switch strategies available:
  4579                           ; Name         Instructions Cycles
  4580                           ; simple_byte            7     4 (average)
  4581                           ; direct_byte          262     6 (fixed)
  4582                           ; jumptable            260     6 (fixed)
  4583                           ;	Chosen strategy is simple_byte
  4584                           
  4585                           ;main.c: 129: break;
  4586                           
  4587                           ;main.c: 103: switch( (int) event )
  4588  04F9  0862               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  4589  04FA  3A00               	xorlw	0	; case 0
  4590  04FB  1903               	skipnz
  4591  04FC  2D06               	goto	l3980
  4592  04FD  3A7F               	xorlw	127	; case 127
  4593  04FE  1903               	skipnz
  4594  04FF  2D13               	goto	l3982
  4595  0500  2D18               	goto	l88
  4596  0501                     l2704:	
  4597                           
  4598                           ;main.c: 111: APP_LEDUpdateUSBStatus();
  4599  0501  2567  3180         	fcall	_APP_LEDUpdateUSBStatus
  4600                           
  4601                           ;main.c: 112: APP_DeviceAudioMIDISOFHandler();
  4602  0503  2FF7               	ljmp	l2686
  4603  0504                     l2708:	
  4604                           ;main.c: 113: break;
  4605                           
  4606                           
  4607                           ;main.c: 117: APP_LEDUpdateUSBStatus();
  4608  0504  2D67               	ljmp	l2650
  4609  0505                     l2712:	
  4610                           ;main.c: 118: break;
  4611                           
  4612                           
  4613                           ;main.c: 128: APP_DeviceAudioMIDIInitialize();
  4614  0505  2F99               	ljmp	l2690
  4615  0506                     l3980:	
  4616                           
  4617                           ; Switch size 1, requested type "speed"
  4618                           ; Number of cases is 8, Range of values is 1 to 117
  4619                           ; switch strategies available:
  4620                           ; Name         Instructions Cycles
  4621                           ; direct_byte          243     9 (fixed)
  4622                           ; simple_byte           25    13 (average)
  4623                           ; jumptable            263     9 (fixed)
  4624                           ;	Chosen strategy is direct_byte
  4625  0506  0861               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  4626  0507  3EFF               	addlw	-1
  4627  0508  1C03               	skipc
  4628  0509  0008               	return
  4629  050A  0084               	movwf	4
  4630  050B  3075               	movlw	117
  4631  050C  0204               	subwf	4,w
  4632  050D  1803               	skipnc
  4633  050E  0008               	return
  4634  050F  3188               	movlp	high S3984
  4635  0510  3504               	lslf	4,w
  4636  0511  3E00               	addlw	low S3984
  4637  0512  0082               	movwf	2
  4638  0513                     l3982:	
  4639                           
  4640                           ; Switch size 1, requested type "speed"
  4641                           ; Number of cases is 1, Range of values is 255 to 255
  4642                           ; switch strategies available:
  4643                           ; Name         Instructions Cycles
  4644                           ; simple_byte            4     3 (average)
  4645                           ; direct_byte            7     5 (fixed)
  4646                           ; jumptable            263     9 (fixed)
  4647                           ;	Chosen strategy is simple_byte
  4648  0513  0861               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  4649  0514  3AFF               	xorlw	255	; case 255
  4650  0515  1903               	skipnz
  4651  0516  2D18               	goto	l88
  4652  0517  2D18               	goto	l88
  4653  0518                     l88:	
  4654  0518  0008               	return
  4655  0519                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  4656  0519                     __ptext26:	
  4657 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  4658 ;; Defined at:
  4659 ;;		line 1416 in file "../../../../../../framework/usb/src/usb_device.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;		None
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;		None               void
  4666 ;; Registers used:
  4667 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/1
  4670 ;;		On exit  : 1E/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4675 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4676 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4677 ;;Total ram usage:        2 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; Hardware stack levels required when called:    1
  4680 ;; This function calls:
  4681 ;;		Nothing
  4682 ;; This function is called by:
  4683 ;;		_USBDeviceTasks
  4684 ;;		_USBCtrlEPServiceComplete
  4685 ;;		_USBCtrlTrfRxService
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           
  4690                           ;psect for function _USBCtrlEPAllowStatusStage
  4691  0519                     _USBCtrlEPAllowStatusStage:	
  4692  0519                     l2784:	
  4693                           ;incstack = 0
  4694                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  4695                           
  4696                           
  4697                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  4698  0519  0021               	movlb	1	; select bank1
  4699  051A  0863               	movf	_USBStatusStageEnabledFlag1^(0+128),w	;volatile
  4700  051B  1D03               	btfss	3,2
  4701  051C  0008               	return
  4702                           
  4703                           ;usb_device.c: 1424: {
  4704                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  4705  051D  3001               	movlw	1
  4706  051E  00E3               	movwf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  4707                           
  4708                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  4709  051F  0864               	movf	_USBStatusStageEnabledFlag2^(0+128),w	;volatile
  4710  0520  1D03               	btfss	3,2
  4711  0521  0008               	return
  4712                           
  4713                           ;usb_device.c: 1427: {
  4714                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  4715  0522  3001               	movlw	1
  4716  0523  00E4               	movwf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  4717                           
  4718                           ;usb_device.c: 1432: if(controlTransferState == 2)
  4719  0524  3002               	movlw	2
  4720  0525  0020               	movlb	0	; select bank0
  4721  0526  0657               	xorwf	_controlTransferState,w
  4722  0527  1D03               	btfss	3,2
  4723  0528  2D35               	goto	l2800
  4724                           
  4725                           ;usb_device.c: 1433: {
  4726                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  4727  0529  0A52               	incf	_pBDTEntryIn,w
  4728  052A  0086               	movwf	6
  4729  052B  0187               	clrf	7
  4730  052C  0181               	clrf	1
  4731                           
  4732                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  4733  052D  0852               	movf	_pBDTEntryIn,w
  4734  052E  0086               	movwf	6
  4735  052F  3048               	movlw	72
  4736  0530  0081               	movwf	1
  4737                           
  4738                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  4739  0531  0852               	movf	_pBDTEntryIn,w
  4740  0532  0086               	movwf	6
  4741  0533  1781               	bsf	1,7
  4742                           
  4743                           ;usb_device.c: 1437: }
  4744  0534  0008               	return
  4745  0535                     l2800:	
  4746                           
  4747                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  4748  0535  0B57               	decfsz	_controlTransferState,w
  4749  0536  0008               	return
  4750                           
  4751                           ;usb_device.c: 1439: {
  4752                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  4753  0537  0022               	movlb	2	; select bank2
  4754  0538  01CF               	clrf	_BothEP0OutUOWNsSet^(0+256)
  4755                           
  4756                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
  4757  0539  0020               	movlb	0	; select bank0
  4758  053A  0A58               	incf	_pBDTEntryEP0OutCurrent,w
  4759  053B  0086               	movwf	6
  4760  053C  3008               	movlw	8
  4761  053D  0187               	clrf	7
  4762  053E  0081               	movwf	1
  4763                           
  4764                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4765  053F  3040               	movlw	64
  4766  0540  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  4767  0541  01F1               	clrf	??_USBCtrlEPAllowStatusStage+1
  4768  0542  0858               	movf	_pBDTEntryEP0OutCurrent,w
  4769  0543  3E02               	addlw	2
  4770  0544  0086               	movwf	6
  4771  0545  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  4772  0546  3FC0               	movwi [0]fsr1
  4773  0547  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  4774  0548  3FC1               	movwi [1]fsr1
  4775                           
  4776                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  4777  0549  0858               	movf	_pBDTEntryEP0OutCurrent,w
  4778  054A  0086               	movwf	6
  4779  054B  3004               	movlw	4
  4780  054C  0081               	movwf	1
  4781                           
  4782                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  4783  054D  0858               	movf	_pBDTEntryEP0OutCurrent,w
  4784  054E  0086               	movwf	6
  4785  054F  1781               	bsf	1,7
  4786                           
  4787                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  4788  0550  0022               	movlb	2	; select bank2
  4789  0551  01CF               	clrf	_BothEP0OutUOWNsSet^(0+256)
  4790  0552  0ACF               	incf	_BothEP0OutUOWNsSet^(0+256),f
  4791                           
  4792                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
  4793  0553  0020               	movlb	0	; select bank0
  4794  0554  0A59               	incf	_pBDTEntryEP0OutNext,w
  4795  0555  0086               	movwf	6
  4796  0556  3008               	movlw	8
  4797  0557  0081               	movwf	1
  4798                           
  4799                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4800  0558  3040               	movlw	64
  4801  0559  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  4802  055A  01F1               	clrf	??_USBCtrlEPAllowStatusStage+1
  4803  055B  0859               	movf	_pBDTEntryEP0OutNext,w
  4804  055C  3E02               	addlw	2
  4805  055D  0086               	movwf	6
  4806  055E  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  4807  055F  3FC0               	movwi [0]fsr1
  4808  0560  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  4809  0561  3FC1               	movwi [1]fsr1
  4810                           
  4811                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  4812  0562  0859               	movf	_pBDTEntryEP0OutNext,w
  4813  0563  0086               	movwf	6
  4814  0564  3080               	movlw	128
  4815  0565  0081               	movwf	1
  4816  0566  0008               	return
  4817  0567                     __end_of_USBCtrlEPAllowStatusStage:	
  4818  0567                     __ptext17:	
  4819 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  4820 ;; Defined at:
  4821 ;;		line 75 in file "../src/app_led_usb_status.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;		None
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;		None
  4826 ;; Return value:  Size  Location     Type
  4827 ;;		None               void
  4828 ;; Registers used:
  4829 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4830 ;; Tracked objects:
  4831 ;;		On entry : 1F/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4839 ;;Total ram usage:        0 bytes
  4840 ;; Hardware stack levels used:    1
  4841 ;; Hardware stack levels required when called:    2
  4842 ;; This function calls:
  4843 ;;		_LED_Off
  4844 ;;		_LED_On
  4845 ;; This function is called by:
  4846 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           
  4851                           ;psect for function _APP_LEDUpdateUSBStatus
  4852  0567                     _APP_LEDUpdateUSBStatus:	
  4853  0567                     l2650:	
  4854                           ;incstack = 0
  4855                           ; Regs used in _APP_LEDUpdateUSBStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4856                           
  4857                           
  4858                           ;app_led_usb_status.c: 77: static uint16_t ledCount = 0;
  4859                           ;app_led_usb_status.c: 79: if(UCONbits.SUSPND == 1)
  4860  0567  003D               	movlb	29	; select bank29
  4861  0568  1C8E               	btfss	14,1	;volatile
  4862  0569  2D9C               	goto	l2682
  4863                           
  4864                           ;app_led_usb_status.c: 80: {
  4865                           ;app_led_usb_status.c: 81: LED_Off(LED_C2);
  4866  056A  3001               	movlw	1
  4867  056B  2DA7               	ljmp	_LED_Off
  4868  056C                     l2656:	
  4869                           
  4870                           ;app_led_usb_status.c: 90: if(ledCount == 1)
  4871  056C  0350               	decf	APP_LEDUpdateUSBStatus@ledCount,w
  4872  056D  0451               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w
  4873  056E  1D03               	btfss	3,2
  4874  056F  2D74               	goto	l2660
  4875                           
  4876                           ;app_led_usb_status.c: 91: {
  4877                           ;app_led_usb_status.c: 92: LED_On(LED_C2);
  4878  0570  3001               	movlw	1
  4879  0571  25C3  3180         	fcall	_LED_On
  4880                           
  4881                           ;app_led_usb_status.c: 93: }
  4882  0573  2DA2               	goto	l2684
  4883  0574                     l2660:	
  4884                           
  4885                           ;app_led_usb_status.c: 94: else if(ledCount == 75)
  4886  0574  304B               	movlw	75
  4887  0575  0650               	xorwf	APP_LEDUpdateUSBStatus@ledCount,w
  4888  0576  0451               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w
  4889  0577  1D03               	btfss	3,2
  4890  0578  2D7D               	goto	l2664
  4891                           
  4892                           ;app_led_usb_status.c: 95: {
  4893                           ;app_led_usb_status.c: 96: LED_Off(LED_C2);
  4894  0579  3001               	movlw	1
  4895  057A  25A7  3180         	fcall	_LED_Off
  4896                           
  4897                           ;app_led_usb_status.c: 97: }
  4898  057C  2DA2               	goto	l2684
  4899  057D                     l2664:	
  4900                           
  4901                           ;app_led_usb_status.c: 98: else if(ledCount > 150)
  4902  057D  3000               	movlw	0
  4903  057E  0251               	subwf	APP_LEDUpdateUSBStatus@ledCount+1,w
  4904  057F  3097               	movlw	151
  4905  0580                     L9:	
  4906  0580  1903               	skipnz
  4907  0581  0250               	subwf	APP_LEDUpdateUSBStatus@ledCount,w
  4908  0582  1C03               	skipc
  4909  0583  2DA2               	goto	l2684
  4910                           
  4911                           ;app_led_usb_status.c: 99: {
  4912                           ;app_led_usb_status.c: 100: ledCount = 0;
  4913  0584  01D0               	clrf	APP_LEDUpdateUSBStatus@ledCount
  4914  0585  01D1               	clrf	APP_LEDUpdateUSBStatus@ledCount+1
  4915  0586  2DA2               	goto	l2684
  4916  0587                     l2668:	
  4917                           ;app_led_usb_status.c: 101: }
  4918                           ;app_led_usb_status.c: 102: break;
  4919                           
  4920                           
  4921                           ;app_led_usb_status.c: 107: if(ledCount == 1)
  4922  0587  0350               	decf	APP_LEDUpdateUSBStatus@ledCount,w
  4923  0588  0451               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w
  4924  0589  1D03               	btfss	3,2
  4925  058A  2D8F               	goto	l2672
  4926                           
  4927                           ;app_led_usb_status.c: 108: {
  4928                           ;app_led_usb_status.c: 109: LED_On(LED_C2);
  4929  058B  3001               	movlw	1
  4930  058C  25C3  3180         	fcall	_LED_On
  4931                           
  4932                           ;app_led_usb_status.c: 110: }
  4933  058E  2DA2               	goto	l2684
  4934  058F                     l2672:	
  4935                           
  4936                           ;app_led_usb_status.c: 111: else if(ledCount == 50)
  4937  058F  3032               	movlw	50
  4938  0590  0650               	xorwf	APP_LEDUpdateUSBStatus@ledCount,w
  4939  0591  0451               	iorwf	APP_LEDUpdateUSBStatus@ledCount+1,w
  4940  0592  1D03               	btfss	3,2
  4941  0593  2D98               	goto	l2676
  4942                           
  4943                           ;app_led_usb_status.c: 112: {
  4944                           ;app_led_usb_status.c: 113: LED_Off(LED_C2);
  4945  0594  3001               	movlw	1
  4946  0595  25A7  3180         	fcall	_LED_Off
  4947                           
  4948                           ;app_led_usb_status.c: 114: }
  4949  0597  2DA2               	goto	l2684
  4950  0598                     l2676:	
  4951                           
  4952                           ;app_led_usb_status.c: 115: else if(ledCount > 950)
  4953  0598  3003               	movlw	3
  4954  0599  0251               	subwf	APP_LEDUpdateUSBStatus@ledCount+1,w
  4955  059A  30B7               	movlw	183
  4956  059B  2D80               	goto	L9
  4957  059C                     l2682:	
  4958  059C  0020               	movlb	0	; select bank0
  4959  059D  0855               	movf	_USBDeviceState,w
  4960                           
  4961                           ; Switch size 1, requested type "speed"
  4962                           ; Number of cases is 1, Range of values is 32 to 32
  4963                           ; switch strategies available:
  4964                           ; Name         Instructions Cycles
  4965                           ; simple_byte            4     3 (average)
  4966                           ; direct_byte           11     9 (fixed)
  4967                           ; jumptable            263     9 (fixed)
  4968                           ;	Chosen strategy is simple_byte
  4969  059E  3A20               	xorlw	32	; case 32
  4970  059F  1903               	skipnz
  4971  05A0  2D6C               	goto	l2656
  4972  05A1  2D87               	goto	l2668
  4973  05A2                     l2684:	
  4974                           
  4975                           ;app_led_usb_status.c: 123: ledCount++;
  4976  05A2  0020               	movlb	0	; select bank0
  4977  05A3  0AD0               	incf	APP_LEDUpdateUSBStatus@ledCount,f
  4978  05A4  1903               	skipnz
  4979  05A5  0AD1               	incf	APP_LEDUpdateUSBStatus@ledCount+1,f
  4980  05A6  0008               	return
  4981  05A7                     __end_of_APP_LEDUpdateUSBStatus:	
  4982  05A7                     __ptext19:	
  4983 ;; *************** function _LED_Off *****************
  4984 ;; Defined at:
  4985 ;;		line 106 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1455/leds.c"
  4986 ;; Parameters:    Size  Location     Type
  4987 ;;  led             1    wreg     enum E2
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;  led             1    0[COMMON] enum E2
  4990 ;; Return value:  Size  Location     Type
  4991 ;;		None               void
  4992 ;; Registers used:
  4993 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4994 ;; Tracked objects:
  4995 ;;		On entry : 2/1D
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5000 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5002 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5003 ;;Total ram usage:        1 bytes
  5004 ;; Hardware stack levels used:    1
  5005 ;; Hardware stack levels required when called:    1
  5006 ;; This function calls:
  5007 ;;		Nothing
  5008 ;; This function is called by:
  5009 ;;		_APP_LEDUpdateUSBStatus
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013                           
  5014                           ;psect for function _LED_Off
  5015  05A7                     _LED_Off:	
  5016                           
  5017                           ;incstack = 0
  5018                           ; Regs used in _LED_Off: [wreg-fsr0h+status,2+status,0]
  5019                           ;LED_Off@led stored from wreg
  5020  05A7  00F0               	movwf	LED_Off@led
  5021                           
  5022                           ;leds.c: 108: switch(led)
  5023  05A8  2DB8               	goto	l2594
  5024  05A9                     l358:	
  5025                           ;leds.c: 109: {
  5026                           ;leds.c: 110: case LED_C2:
  5027                           
  5028                           
  5029                           ;leds.c: 111: LATCbits.LATC2 = 0;
  5030  05A9  0022               	movlb	2	; select bank2
  5031  05AA  110E               	bcf	14,2	;volatile
  5032                           
  5033                           ;leds.c: 112: break;
  5034  05AB  0008               	return
  5035  05AC                     l360:	
  5036                           ;leds.c: 114: case LED_D1:
  5037                           
  5038                           
  5039                           ;leds.c: 115: LATCbits.LATC0 = 0;
  5040  05AC  0022               	movlb	2	; select bank2
  5041  05AD  100E               	bcf	14,0	;volatile
  5042                           
  5043                           ;leds.c: 116: break;
  5044  05AE  0008               	return
  5045  05AF                     l361:	
  5046                           ;leds.c: 118: case LED_D2:
  5047                           
  5048                           
  5049                           ;leds.c: 119: LATCbits.LATC1 = 0;
  5050  05AF  0022               	movlb	2	; select bank2
  5051  05B0  108E               	bcf	14,1	;volatile
  5052                           
  5053                           ;leds.c: 120: break;
  5054  05B1  0008               	return
  5055  05B2                     l362:	
  5056                           ;leds.c: 122: case LED_D3:
  5057                           
  5058                           
  5059                           ;leds.c: 123: LATCbits.LATC2 = 0;
  5060  05B2  0022               	movlb	2	; select bank2
  5061  05B3  110E               	bcf	14,2	;volatile
  5062                           
  5063                           ;leds.c: 124: break;
  5064  05B4  0008               	return
  5065  05B5                     l363:	
  5066                           ;leds.c: 126: case LED_D4:
  5067                           
  5068                           
  5069                           ;leds.c: 127: LATCbits.LATC3 = 0;
  5070  05B5  0022               	movlb	2	; select bank2
  5071  05B6  118E               	bcf	14,3	;volatile
  5072                           
  5073                           ;leds.c: 128: break;
  5074  05B7  0008               	return
  5075  05B8                     l2594:	
  5076  05B8  0870               	movf	LED_Off@led,w
  5077                           
  5078                           ; Switch size 1, requested type "speed"
  5079                           ; Number of cases is 6, Range of values is 0 to 5
  5080                           ; switch strategies available:
  5081                           ; Name         Instructions Cycles
  5082                           ; direct_byte           18     6 (fixed)
  5083                           ; simple_byte           19    10 (average)
  5084                           ; jumptable            260     6 (fixed)
  5085                           ;	Chosen strategy is direct_byte
  5086  05B9  0084               	movwf	4
  5087  05BA  3006               	movlw	6
  5088  05BB  0204               	subwf	4,w
  5089  05BC  1803               	skipnc
  5090  05BD  0008               	return
  5091  05BE  3189               	movlp	high S3988
  5092  05BF  3504               	lslf	4,w
  5093  05C0  3E1A               	addlw	low S3988
  5094  05C1  0082               	movwf	2
  5095  05C2                     l365:	
  5096  05C2  0008               	return
  5097  05C3                     __end_of_LED_Off:	
  5098  05C3                     __ptext18:	
  5099 ;; *************** function _LED_On *****************
  5100 ;; Defined at:
  5101 ;;		line 61 in file "../../../../../../bsp/low_pin_count_usb_development_kit/pic16f1455/leds.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;  led             1    wreg     enum E2
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;  led             1    0[COMMON] enum E2
  5106 ;; Return value:  Size  Location     Type
  5107 ;;		None               void
  5108 ;; Registers used:
  5109 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5110 ;; Tracked objects:
  5111 ;;		On entry : 1F/0
  5112 ;;		On exit  : 1D/0
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5116 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5118 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5119 ;;Total ram usage:        1 bytes
  5120 ;; Hardware stack levels used:    1
  5121 ;; Hardware stack levels required when called:    1
  5122 ;; This function calls:
  5123 ;;		Nothing
  5124 ;; This function is called by:
  5125 ;;		_APP_LEDUpdateUSBStatus
  5126 ;; This function uses a non-reentrant model
  5127 ;;
  5128                           
  5129                           
  5130                           ;psect for function _LED_On
  5131  05C3                     _LED_On:	
  5132                           
  5133                           ;incstack = 0
  5134                           ; Regs used in _LED_On: [wreg-fsr0h+status,2+status,0]
  5135                           ;LED_On@led stored from wreg
  5136  05C3  00F0               	movwf	LED_On@led
  5137                           
  5138                           ;leds.c: 63: switch(led)
  5139  05C4  2DD4               	goto	l2604
  5140  05C5                     l347:	
  5141                           ;leds.c: 64: {
  5142                           ;leds.c: 65: case LED_C2:
  5143                           
  5144                           
  5145                           ;leds.c: 66: LATCbits.LATC2 = 1;
  5146  05C5  0022               	movlb	2	; select bank2
  5147  05C6  150E               	bsf	14,2	;volatile
  5148                           
  5149                           ;leds.c: 67: break;
  5150  05C7  0008               	return
  5151  05C8                     l349:	
  5152                           ;leds.c: 69: case LED_D1:
  5153                           
  5154                           
  5155                           ;leds.c: 70: LATCbits.LATC0 = 1;
  5156  05C8  0022               	movlb	2	; select bank2
  5157  05C9  140E               	bsf	14,0	;volatile
  5158                           
  5159                           ;leds.c: 71: break;
  5160  05CA  0008               	return
  5161  05CB                     l350:	
  5162                           ;leds.c: 73: case LED_D2:
  5163                           
  5164                           
  5165                           ;leds.c: 74: LATCbits.LATC1 = 1;
  5166  05CB  0022               	movlb	2	; select bank2
  5167  05CC  148E               	bsf	14,1	;volatile
  5168                           
  5169                           ;leds.c: 75: break;
  5170  05CD  0008               	return
  5171  05CE                     l351:	
  5172                           ;leds.c: 77: case LED_D3:
  5173                           
  5174                           
  5175                           ;leds.c: 78: LATCbits.LATC2 = 1;
  5176  05CE  0022               	movlb	2	; select bank2
  5177  05CF  150E               	bsf	14,2	;volatile
  5178                           
  5179                           ;leds.c: 79: break;
  5180  05D0  0008               	return
  5181  05D1                     l352:	
  5182                           ;leds.c: 81: case LED_D4:
  5183                           
  5184                           
  5185                           ;leds.c: 82: LATCbits.LATC3 = 1;
  5186  05D1  0022               	movlb	2	; select bank2
  5187  05D2  158E               	bsf	14,3	;volatile
  5188                           
  5189                           ;leds.c: 83: break;
  5190  05D3  0008               	return
  5191  05D4                     l2604:	
  5192  05D4  0870               	movf	LED_On@led,w
  5193                           
  5194                           ; Switch size 1, requested type "speed"
  5195                           ; Number of cases is 6, Range of values is 0 to 5
  5196                           ; switch strategies available:
  5197                           ; Name         Instructions Cycles
  5198                           ; direct_byte           18     6 (fixed)
  5199                           ; simple_byte           19    10 (average)
  5200                           ; jumptable            260     6 (fixed)
  5201                           ;	Chosen strategy is direct_byte
  5202  05D5  0084               	movwf	4
  5203  05D6  3006               	movlw	6
  5204  05D7  0204               	subwf	4,w
  5205  05D8  1803               	skipnc
  5206  05D9  0008               	return
  5207  05DA  3188               	movlp	high S3986
  5208  05DB  3504               	lslf	4,w
  5209  05DC  3EEA               	addlw	low S3986
  5210  05DD  0082               	movwf	2
  5211  05DE                     l354:	
  5212  05DE  0008               	return
  5213  05DF                     __end_of_LED_On:	
  5214  05DF                     __ptext6:	
  5215 ;; *************** function _USBCtrlEPService *****************
  5216 ;; Defined at:
  5217 ;;		line 2369 in file "../../../../../../framework/usb/src/usb_device.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;		None
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;  setup_cnt       1   12[BANK0 ] unsigned char 
  5222 ;; Return value:  Size  Location     Type
  5223 ;;		None               void
  5224 ;; Registers used:
  5225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5226 ;; Tracked objects:
  5227 ;;		On entry : 1F/1
  5228 ;;		On exit  : 1C/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5232 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5233 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5234 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5235 ;;Total ram usage:        3 bytes
  5236 ;; Hardware stack levels used:    1
  5237 ;; Hardware stack levels required when called:    8
  5238 ;; This function calls:
  5239 ;;		_USBCtrlTrfInHandler
  5240 ;;		_USBCtrlTrfOutHandler
  5241 ;;		_USBCtrlTrfSetupHandler
  5242 ;; This function is called by:
  5243 ;;		_USBDeviceTasks
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           
  5248                           ;psect for function _USBCtrlEPService
  5249  05DF                     _USBCtrlEPService:	
  5250                           
  5251                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
  5252                           
  5253                           ;incstack = 0
  5254                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5255  05DF  302D               	movlw	45
  5256  05E0  00E5               	movwf	_USBStatusStageTimeoutCounter^(0+128)
  5257                           
  5258                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
  5259  05E1  0020               	movlb	0	; select bank0
  5260  05E2  0860               	movf	_USTATcopy,w
  5261  05E3  39FD               	andlw	253
  5262  05E4  1D03               	btfss	3,2
  5263  05E5  2E26               	goto	l3568
  5264                           
  5265                           ;usb_device.c: 2380: {
  5266                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5267  05E6  3660               	lsrf	_USTATcopy,w
  5268  05E7  393F               	andlw	63
  5269  05E8  0709               	addwf	9,w
  5270  05E9  0709               	addwf	9,w
  5271  05EA  3E20               	addlw	32
  5272  05EB  00D8               	movwf	_pBDTEntryEP0OutCurrent
  5273                           
  5274                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5275  05EC  00D9               	movwf	_pBDTEntryEP0OutNext
  5276                           
  5277                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  5278  05ED  3004               	movlw	4
  5279  05EE  06D9               	xorwf	_pBDTEntryEP0OutNext,f
  5280                           
  5281                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5282  05EF  0858               	movf	_pBDTEntryEP0OutCurrent,w
  5283  05F0  0086               	movwf	6
  5284  05F1  0187               	clrf	7
  5285  05F2  0C01               	rrf	1,w
  5286  05F3  0C89               	rrf	9,f
  5287  05F4  390F               	andlw	15
  5288  05F5  3A0D               	xorlw	13
  5289  05F6  1D03               	skipz
  5290  05F7  2E25               	goto	l3566
  5291                           
  5292                           ;usb_device.c: 2397: {
  5293                           ;usb_device.c: 2398: unsigned char setup_cnt;
  5294                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  5295  05F8  01ED               	clrf	USBCtrlEPService@setup_cnt
  5296  05F9                     l3554:	
  5297                           
  5298                           ;usb_device.c: 2405: {
  5299                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
  5300  05F9  086D               	movf	USBCtrlEPService@setup_cnt,w
  5301  05FA  3E40               	addlw	64
  5302  05FB  0086               	movwf	6
  5303  05FC  0187               	clrf	7
  5304  05FD  0858               	movf	_pBDTEntryEP0OutCurrent,w
  5305  05FE  3E02               	addlw	2
  5306  05FF  0084               	movwf	4
  5307  0600  0185               	clrf	5
  5308  0601  3F00               	moviw [0]fsr0
  5309  0602  00EB               	movwf	??_USBCtrlEPService
  5310  0603  3F01               	moviw [1]fsr0
  5311  0604  00EC               	movwf	??_USBCtrlEPService+1
  5312  0605  086B               	movf	??_USBCtrlEPService,w
  5313  0606  0084               	movwf	4
  5314  0607  086C               	movf	??_USBCtrlEPService+1,w
  5315  0608  0085               	movwf	5
  5316  0609  0800               	movf	0,w
  5317  060A  0081               	movwf	1
  5318                           
  5319                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
  5320  060B  0858               	movf	_pBDTEntryEP0OutCurrent,w
  5321  060C  3E02               	addlw	2
  5322  060D  0086               	movwf	6
  5323  060E  3001               	movlw	1
  5324  060F  0781               	addwf	1,f
  5325  0610  3141               	addfsr 1,1
  5326  0611  1803               	skipnc
  5327  0612  0A81               	incf	1,f
  5328  0613  3008               	movlw	8
  5329  0614  0AED               	incf	USBCtrlEPService@setup_cnt,f
  5330  0615  026D               	subwf	USBCtrlEPService@setup_cnt,w
  5331  0616  1C03               	skipc
  5332  0617  2DF9               	goto	l3554
  5333                           
  5334                           ;usb_device.c: 2408: }
  5335                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5336  0618  3040               	movlw	64
  5337  0619  00EB               	movwf	??_USBCtrlEPService
  5338  061A  01EC               	clrf	??_USBCtrlEPService+1
  5339  061B  0858               	movf	_pBDTEntryEP0OutCurrent,w
  5340  061C  3E02               	addlw	2
  5341  061D  0086               	movwf	6
  5342  061E  0187               	clrf	7
  5343  061F  086B               	movf	??_USBCtrlEPService,w
  5344  0620  3FC0               	movwi [0]fsr1
  5345  0621  086C               	movf	??_USBCtrlEPService+1,w
  5346  0622  3FC1               	movwi [1]fsr1
  5347                           
  5348                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
  5349  0623  318D  2DF4         	ljmp	l3274
  5350  0625                     l3566:	
  5351                           ;usb_device.c: 2413: }
  5352                           
  5353                           
  5354                           ;usb_device.c: 2414: else
  5355                           ;usb_device.c: 2415: {
  5356                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
  5357  0625  2F08               	ljmp	l3300
  5358  0626                     l3568:	
  5359                           
  5360                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
  5361  0626  30FD               	movlw	253
  5362  0627  0560               	andwf	_USTATcopy,w
  5363  0628  00EB               	movwf	??_USBCtrlEPService
  5364  0629  3A04               	xorlw	4
  5365  062A  1D03               	btfss	3,2
  5366  062B  0008               	return
  5367                           
  5368                           ;usb_device.c: 2421: {
  5369                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
  5370  062C  2E63               	ljmp	l3318
  5371  062D                     __end_of_USBCtrlEPService:	
  5372  062D                     __ptext4:	
  5373 ;; *************** function _USBStallHandler *****************
  5374 ;; Defined at:
  5375 ;;		line 2202 in file "../../../../../../framework/usb/src/usb_device.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;		None
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;		None
  5380 ;; Return value:  Size  Location     Type
  5381 ;;		None               void
  5382 ;; Registers used:
  5383 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5384 ;; Tracked objects:
  5385 ;;		On entry : 1F/1D
  5386 ;;		On exit  : 1F/1D
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5393 ;;Total ram usage:        0 bytes
  5394 ;; Hardware stack levels used:    1
  5395 ;; Hardware stack levels required when called:    1
  5396 ;; This function calls:
  5397 ;;		Nothing
  5398 ;; This function is called by:
  5399 ;;		_USBDeviceTasks
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           
  5404                           ;psect for function _USBStallHandler
  5405  062D                     _USBStallHandler:	
  5406                           
  5407                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  5408                           
  5409                           ;incstack = 0
  5410                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  5411  062D  1C18               	btfss	24,0	;volatile
  5412  062E  2E46               	goto	l3534
  5413                           
  5414                           ;usb_device.c: 2215: {
  5415                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  5416  062F  0020               	movlb	0	; select bank0
  5417  0630  0858               	movf	_pBDTEntryEP0OutCurrent,w
  5418  0631  0086               	movwf	6
  5419  0632  3080               	movlw	128
  5420  0633  0187               	clrf	7
  5421  0634  0601               	xorwf	1,w
  5422  0635  1D03               	btfss	3,2
  5423  0636  2E44               	goto	l3532
  5424  0637  0852               	movf	_pBDTEntryIn,w
  5425  0638  0086               	movwf	6
  5426  0639  3084               	movlw	132
  5427  063A  0601               	xorwf	1,w
  5428  063B  1D03               	btfss	3,2
  5429  063C  2E44               	goto	l3532
  5430                           
  5431                           ;usb_device.c: 2218: {
  5432                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5433  063D  0858               	movf	_pBDTEntryEP0OutCurrent,w
  5434  063E  0086               	movwf	6
  5435  063F  300C               	movlw	12
  5436  0640  0081               	movwf	1
  5437                           
  5438                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  5439  0641  0858               	movf	_pBDTEntryEP0OutCurrent,w
  5440  0642  0086               	movwf	6
  5441  0643  1781               	bsf	1,7
  5442  0644                     l3532:	
  5443                           
  5444                           ;usb_device.c: 2222: }
  5445                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  5446  0644  003D               	movlb	29	; select bank29
  5447  0645  1018               	bcf	24,0	;volatile
  5448  0646                     l3534:	
  5449                           
  5450                           ;usb_device.c: 2224: }
  5451                           ;usb_device.c: 2226: (UIR &= 0xDF);
  5452  0646  1290               	bcf	16,5	;volatile
  5453  0647  0008               	return
  5454  0648                     __end_of_USBStallHandler:	
  5455  0648                     __ptext3:	
  5456 ;; *************** function _USBSuspend *****************
  5457 ;; Defined at:
  5458 ;;		line 2245 in file "../../../../../../framework/usb/src/usb_device.c"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;		None
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;		None
  5463 ;; Return value:  Size  Location     Type
  5464 ;;		None               void
  5465 ;; Registers used:
  5466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5467 ;; Tracked objects:
  5468 ;;		On entry : 1F/1D
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5476 ;;Total ram usage:        0 bytes
  5477 ;; Hardware stack levels used:    1
  5478 ;; Hardware stack levels required when called:    5
  5479 ;; This function calls:
  5480 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5481 ;; This function is called by:
  5482 ;;		_USBDeviceTasks
  5483 ;; This function uses a non-reentrant model
  5484 ;;
  5485                           
  5486                           
  5487                           ;psect for function _USBSuspend
  5488  0648                     _USBSuspend:	
  5489                           
  5490                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  5491                           
  5492                           ;incstack = 0
  5493                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5494  0648  1512               	bsf	18,2	;volatile
  5495                           
  5496                           ;usb_device.c: 2271: (UIR &= 0xEF);
  5497  0649  1210               	bcf	16,4	;volatile
  5498                           
  5499                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  5500  064A  148E               	bsf	14,1	;volatile
  5501                           
  5502                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  5503  064B  3075               	movlw	117
  5504  064C  0020               	movlb	0	; select bank0
  5505  064D  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5506  064E  01E2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5507  064F  01E3               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5508  0650  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5509  0651  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5510  0652  2CF9               	ljmp	l2702
  5511  0653                     __end_of_USBSuspend:	
  5512  0653                     __ptext2:	
  5513 ;; *************** function _USBWakeFromSuspend *****************
  5514 ;; Defined at:
  5515 ;;		line 2302 in file "../../../../../../framework/usb/src/usb_device.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;		None
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;		None
  5520 ;; Return value:  Size  Location     Type
  5521 ;;		None               void
  5522 ;; Registers used:
  5523 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5524 ;; Tracked objects:
  5525 ;;		On entry : 1F/1D
  5526 ;;		On exit  : 1F/1D
  5527 ;;		Unchanged: 0/0
  5528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5533 ;;Total ram usage:        0 bytes
  5534 ;; Hardware stack levels used:    1
  5535 ;; Hardware stack levels required when called:    5
  5536 ;; This function calls:
  5537 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5538 ;; This function is called by:
  5539 ;;		_USBDeviceTasks
  5540 ;; This function uses a non-reentrant model
  5541 ;;
  5542                           
  5543                           
  5544                           ;psect for function _USBWakeFromSuspend
  5545  0653                     _USBWakeFromSuspend:	
  5546                           
  5547                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  5548                           
  5549                           ;incstack = 0
  5550                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5551  0653  3074               	movlw	116
  5552  0654  0020               	movlb	0	; select bank0
  5553  0655  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5554  0656  01E2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5555  0657  01E3               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5556  0658  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5557  0659  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5558  065A  24F9  3180         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5559                           
  5560                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
  5561  065C  003D               	movlb	29	; select bank29
  5562  065D  108E               	bcf	14,1	;volatile
  5563                           
  5564                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
  5565  065E  1112               	bcf	18,2	;volatile
  5566  065F                     l692:	
  5567                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
  5568                           
  5569  065F  1D10               	btfss	16,2	;volatile
  5570  0660  0008               	return
  5571                           
  5572                           ;usb_device.c: 2342: {
  5573                           ;usb_device.c: 2343: (UIR &= 0xFB);
  5574  0661  1110               	bcf	16,2	;volatile
  5575  0662  2E5F               	goto	l692
  5576  0663                     __end_of_USBWakeFromSuspend:	
  5577  0663                     __ptext27:	
  5578 ;; *************** function _USBCtrlTrfInHandler *****************
  5579 ;; Defined at:
  5580 ;;		line 2595 in file "../../../../../../framework/usb/src/usb_device.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;		None
  5583 ;; Auto vars:     Size  Location     Type
  5584 ;;  lastDTS         1    3[COMMON] unsigned char 
  5585 ;; Return value:  Size  Location     Type
  5586 ;;		None               void
  5587 ;; Registers used:
  5588 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5589 ;; Tracked objects:
  5590 ;;		On entry : 1F/0
  5591 ;;		On exit  : 1F/0
  5592 ;;		Unchanged: 0/0
  5593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5595 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5596 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5597 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5598 ;;Total ram usage:        3 bytes
  5599 ;; Hardware stack levels used:    1
  5600 ;; Hardware stack levels required when called:    2
  5601 ;; This function calls:
  5602 ;;		_USBCtrlTrfTxService
  5603 ;; This function is called by:
  5604 ;;		_USBCtrlEPService
  5605 ;; This function uses a non-reentrant model
  5606 ;;
  5607                           
  5608                           
  5609                           ;psect for function _USBCtrlTrfInHandler
  5610  0663                     _USBCtrlTrfInHandler:	
  5611  0663                     l3318:	
  5612                           ;incstack = 0
  5613                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5614                           
  5615                           
  5616                           ;usb_device.c: 2597: uint8_t lastDTS;
  5617                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  5618  0663  0852               	movf	_pBDTEntryIn,w
  5619  0664  0086               	movwf	6
  5620  0665  3000               	movlw	0
  5621  0666  0187               	clrf	7
  5622  0667  1B01               	btfsc	1,6
  5623  0668  3001               	movlw	1
  5624  0669  00F3               	movwf	USBCtrlTrfInHandler@lastDTS
  5625                           
  5626                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  5627  066A  3004               	movlw	4
  5628  066B  06D2               	xorwf	_pBDTEntryIn,f
  5629                           
  5630                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
  5631  066C  3008               	movlw	8
  5632  066D  0655               	xorwf	_USBDeviceState,w
  5633  066E  1D03               	btfss	3,2
  5634  066F  2E7C               	goto	l3332
  5635                           
  5636                           ;usb_device.c: 2608: {
  5637                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
  5638  0670  0842               	movf	66,w	;volatile
  5639  0671  397F               	andlw	127
  5640  0672  003D               	movlb	29	; select bank29
  5641  0673  0096               	movwf	22	;volatile
  5642                           
  5643                           ;usb_device.c: 2610: if(UADDR != 0u)
  5644  0674  0816               	movf	22,w
  5645  0675  1903               	btfsc	3,2
  5646  0676  2E79               	goto	l3330
  5647                           
  5648                           ;usb_device.c: 2611: {
  5649                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
  5650  0677  3010               	movlw	16
  5651  0678  2E7A               	goto	L12
  5652  0679                     l3330:	
  5653                           ;usb_device.c: 2613: }
  5654                           
  5655                           
  5656                           ;usb_device.c: 2614: else
  5657                           ;usb_device.c: 2615: {
  5658                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
  5659  0679  3004               	movlw	4
  5660  067A                     L12:	
  5661  067A  0020               	movlb	0	; select bank0
  5662  067B  00D5               	movwf	_USBDeviceState
  5663  067C                     l3332:	
  5664                           
  5665                           ;usb_device.c: 2617: }
  5666                           ;usb_device.c: 2618: }
  5667                           ;usb_device.c: 2621: if(controlTransferState == 1)
  5668  067C  0B57               	decfsz	_controlTransferState,w
  5669  067D  2EB1               	goto	l721
  5670                           
  5671                           ;usb_device.c: 2622: {
  5672                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  5673  067E  3048               	movlw	72
  5674  067F  00F1               	movwf	??_USBCtrlTrfInHandler
  5675  0680  01F2               	clrf	??_USBCtrlTrfInHandler+1
  5676  0681  0852               	movf	_pBDTEntryIn,w
  5677  0682  3E02               	addlw	2
  5678  0683  0086               	movwf	6
  5679  0684  0187               	clrf	7
  5680  0685  0871               	movf	??_USBCtrlTrfInHandler,w
  5681  0686  3FC0               	movwi [0]fsr1
  5682  0687  0872               	movf	??_USBCtrlTrfInHandler+1,w
  5683  0688  3FC1               	movwi [1]fsr1
  5684                           
  5685                           ;usb_device.c: 2624: USBCtrlTrfTxService();
  5686  0689  26B7  3180         	fcall	_USBCtrlTrfTxService
  5687                           
  5688                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
  5689  068B  3002               	movlw	2
  5690  068C  0021               	movlb	1	; select bank1
  5691  068D  066C               	xorwf	_shortPacketStatus^(0+128),w
  5692  068E  1D03               	btfss	3,2
  5693  068F  2E9A               	goto	l3342
  5694                           
  5695                           ;usb_device.c: 2631: {
  5696                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
  5697  0690  0020               	movlb	0	; select bank0
  5698  0691  0852               	movf	_pBDTEntryIn,w
  5699  0692  0086               	movwf	6
  5700  0693  3004               	movlw	4
  5701  0694  0187               	clrf	7
  5702  0695  0081               	movwf	1
  5703                           
  5704                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5705  0696  0852               	movf	_pBDTEntryIn,w
  5706  0697  0086               	movwf	6
  5707  0698  1781               	bsf	1,7
  5708                           
  5709                           ;usb_device.c: 2636: }
  5710  0699  0008               	return
  5711  069A                     l3342:	
  5712                           
  5713                           ;usb_device.c: 2637: else
  5714                           ;usb_device.c: 2638: {
  5715                           ;usb_device.c: 2639: if(lastDTS == 0)
  5716  069A  0873               	movf	USBCtrlTrfInHandler@lastDTS,w
  5717  069B  1D03               	btfss	3,2
  5718  069C  2EA7               	goto	l3346
  5719                           
  5720                           ;usb_device.c: 2640: {
  5721                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  5722  069D  0020               	movlb	0	; select bank0
  5723  069E  0852               	movf	_pBDTEntryIn,w
  5724  069F  0086               	movwf	6
  5725  06A0  3048               	movlw	72
  5726  06A1  0187               	clrf	7
  5727  06A2  0081               	movwf	1
  5728                           
  5729                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5730  06A3  0852               	movf	_pBDTEntryIn,w
  5731  06A4  0086               	movwf	6
  5732  06A5  1781               	bsf	1,7
  5733                           
  5734                           ;usb_device.c: 2643: }
  5735  06A6  0008               	return
  5736  06A7                     l3346:	
  5737                           
  5738                           ;usb_device.c: 2644: else
  5739                           ;usb_device.c: 2645: {
  5740                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  5741  06A7  0020               	movlb	0	; select bank0
  5742  06A8  0852               	movf	_pBDTEntryIn,w
  5743  06A9  0086               	movwf	6
  5744  06AA  3008               	movlw	8
  5745  06AB  0187               	clrf	7
  5746  06AC  0081               	movwf	1
  5747                           
  5748                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5749  06AD  0852               	movf	_pBDTEntryIn,w
  5750  06AE  0086               	movwf	6
  5751  06AF  1781               	bsf	1,7
  5752  06B0  0008               	return
  5753  06B1                     l721:	
  5754                           
  5755                           ;usb_device.c: 2651: else
  5756                           ;usb_device.c: 2652: {
  5757                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
  5758  06B1  0022               	movlb	2	; select bank2
  5759  06B2  1BC2               	btfsc	(_outPipes^(0+256)+2),7
  5760                           
  5761                           ;usb_device.c: 2661: }
  5762                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
  5763  06B3  13C2               	bcf	(_outPipes^(0+256)+2),7
  5764                           
  5765                           ;usb_device.c: 2663: }
  5766                           ;usb_device.c: 2665: controlTransferState = 0;
  5767  06B4  0020               	movlb	0	; select bank0
  5768  06B5  01D7               	clrf	_controlTransferState
  5769  06B6  0008               	return
  5770  06B7                     __end_of_USBCtrlTrfInHandler:	
  5771  06B7                     __ptext28:	
  5772 ;; *************** function _USBCtrlTrfTxService *****************
  5773 ;; Defined at:
  5774 ;;		line 1771 in file "../../../../../../framework/usb/src/usb_device.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;		None
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;  byteToSend      1    0[COMMON] unsigned char 
  5779 ;; Return value:  Size  Location     Type
  5780 ;;		None               void
  5781 ;; Registers used:
  5782 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5783 ;; Tracked objects:
  5784 ;;		On entry : 1F/0
  5785 ;;		On exit  : 1E/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5791 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5792 ;;Total ram usage:        1 bytes
  5793 ;; Hardware stack levels used:    1
  5794 ;; Hardware stack levels required when called:    1
  5795 ;; This function calls:
  5796 ;;		Nothing
  5797 ;; This function is called by:
  5798 ;;		_USBCtrlEPAllowDataStage
  5799 ;;		_USBCtrlTrfInHandler
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           
  5804                           ;psect for function _USBCtrlTrfTxService
  5805  06B7                     _USBCtrlTrfTxService:	
  5806                           
  5807                           ;usb_device.c: 1773: uint8_t byteToSend;
  5808                           ;usb_device.c: 1777: byteToSend = 8;
  5809                           
  5810                           ;incstack = 0
  5811                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  5812  06B7  3008               	movlw	8
  5813  06B8  00F0               	movwf	USBCtrlTrfTxService@byteToSend
  5814                           
  5815                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
  5816  06B9  3000               	movlw	0
  5817  06BA  025F               	subwf	_inPipes+4,w
  5818  06BB  3008               	movlw	8
  5819  06BC  1903               	skipnz
  5820  06BD  025E               	subwf	_inPipes+3,w
  5821  06BE  1803               	skipnc
  5822  06BF  2ECD               	goto	l619
  5823                           
  5824                           ;usb_device.c: 1779: {
  5825                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
  5826  06C0  085E               	movf	_inPipes+3,w
  5827  06C1  00F0               	movwf	USBCtrlTrfTxService@byteToSend
  5828                           
  5829                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
  5830  06C2  0021               	movlb	1	; select bank1
  5831  06C3  086C               	movf	_shortPacketStatus^(0+128),w
  5832  06C4  1D03               	btfss	3,2
  5833  06C5  2EC9               	goto	l2744
  5834                           
  5835                           ;usb_device.c: 1788: {
  5836                           ;usb_device.c: 1789: shortPacketStatus = 1;
  5837  06C6  01EC               	clrf	_shortPacketStatus^(0+128)
  5838  06C7  0AEC               	incf	_shortPacketStatus^(0+128),f
  5839                           
  5840                           ;usb_device.c: 1790: }
  5841  06C8  2ECD               	goto	l619
  5842  06C9                     l2744:	
  5843                           
  5844                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
  5845  06C9  0B6C               	decfsz	_shortPacketStatus^(0+128),w
  5846  06CA  2ECD               	goto	l619
  5847                           
  5848                           ;usb_device.c: 1792: {
  5849                           ;usb_device.c: 1793: shortPacketStatus = 2;
  5850  06CB  3002               	movlw	2
  5851  06CC  00EC               	movwf	_shortPacketStatus^(0+128)
  5852  06CD                     l619:	
  5853                           
  5854                           ;usb_device.c: 1794: }
  5855                           ;usb_device.c: 1795: }
  5856                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
  5857  06CD  0870               	movf	USBCtrlTrfTxService@byteToSend,w
  5858  06CE  0020               	movlb	0	; select bank0
  5859  06CF  02DE               	subwf	_inPipes+3,f
  5860  06D0  1C03               	skipc
  5861  06D1  03DF               	decf	_inPipes+4,f
  5862                           
  5863                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
  5864  06D2  0A52               	incf	_pBDTEntryIn,w
  5865  06D3  0086               	movwf	6
  5866  06D4  0187               	clrf	7
  5867  06D5  0870               	movf	USBCtrlTrfTxService@byteToSend,w
  5868  06D6  0081               	movwf	1
  5869                           
  5870                           ;usb_device.c: 1808: pDst = ( uint8_t*)CtrlTrfData;
  5871  06D7  3048               	movlw	72
  5872  06D8  0021               	movlb	1	; select bank1
  5873  06D9  00E9               	movwf	_pDst^(0+128)
  5874                           
  5875                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  5876  06DA  0020               	movlb	0	; select bank0
  5877  06DB  1C5D               	btfss	_inPipes+2,0
  5878  06DC  2EEF               	goto	l2764
  5879  06DD  2F04               	goto	l2774
  5880  06DE                     l2756:	
  5881                           
  5882                           ;usb_device.c: 1812: {
  5883                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
  5884  06DE  0021               	movlb	1	; select bank1
  5885  06DF  0869               	movf	_pDst^(0+128),w
  5886  06E0  0086               	movwf	6
  5887  06E1  0187               	clrf	7
  5888  06E2  0020               	movlb	0	; select bank0
  5889  06E3  085B               	movf	_inPipes,w
  5890  06E4  0084               	movwf	4
  5891  06E5  085C               	movf	_inPipes+1,w
  5892  06E6  0085               	movwf	5
  5893  06E7  0800               	movf	0,w	;code access
  5894  06E8  0081               	movwf	1
  5895  06E9  0ADB               	incf	_inPipes,f
  5896  06EA  1903               	skipnz
  5897  06EB  0ADC               	incf	_inPipes+1,f
  5898  06EC  0021               	movlb	1	; select bank1
  5899  06ED  0AE9               	incf	_pDst^(0+128),f
  5900                           
  5901                           ;usb_device.c: 1814: byteToSend--;
  5902  06EE  03F0               	decf	USBCtrlTrfTxService@byteToSend,f
  5903  06EF                     l2764:	
  5904  06EF  0870               	movf	USBCtrlTrfTxService@byteToSend,w
  5905  06F0  1903               	btfsc	3,2
  5906  06F1  0008               	return
  5907  06F2  2EDE               	goto	l2756
  5908  06F3                     l2766:	
  5909                           
  5910                           ;usb_device.c: 1820: {
  5911                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
  5912  06F3  0021               	movlb	1	; select bank1
  5913  06F4  0869               	movf	_pDst^(0+128),w
  5914  06F5  0086               	movwf	6
  5915  06F6  0187               	clrf	7
  5916  06F7  0020               	movlb	0	; select bank0
  5917  06F8  085B               	movf	_inPipes,w
  5918  06F9  0084               	movwf	4
  5919  06FA  085C               	movf	_inPipes+1,w
  5920  06FB  0085               	movwf	5
  5921  06FC  0800               	movf	0,w	;code access
  5922  06FD  0081               	movwf	1
  5923  06FE  0ADB               	incf	_inPipes,f
  5924  06FF  1903               	skipnz
  5925  0700  0ADC               	incf	_inPipes+1,f
  5926  0701  0021               	movlb	1	; select bank1
  5927  0702  0AE9               	incf	_pDst^(0+128),f
  5928                           
  5929                           ;usb_device.c: 1822: byteToSend--;
  5930  0703  03F0               	decf	USBCtrlTrfTxService@byteToSend,f
  5931  0704                     l2774:	
  5932  0704  0870               	movf	USBCtrlTrfTxService@byteToSend,w
  5933  0705  1903               	btfsc	3,2
  5934  0706  0008               	return
  5935  0707  2EF3               	goto	l2766
  5936  0708                     __end_of_USBCtrlTrfTxService:	
  5937  0708                     __ptext24:	
  5938 ;; *************** function _USBCtrlTrfOutHandler *****************
  5939 ;; Defined at:
  5940 ;;		line 2541 in file "../../../../../../framework/usb/src/usb_device.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;		None
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;		None
  5945 ;; Return value:  Size  Location     Type
  5946 ;;		None               void
  5947 ;; Registers used:
  5948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5949 ;; Tracked objects:
  5950 ;;		On entry : 1F/0
  5951 ;;		On exit  : 1C/0
  5952 ;;		Unchanged: 0/0
  5953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5956 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5957 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5958 ;;Total ram usage:        2 bytes
  5959 ;; Hardware stack levels used:    1
  5960 ;; Hardware stack levels required when called:    3
  5961 ;; This function calls:
  5962 ;;		_USBCtrlTrfRxService
  5963 ;; This function is called by:
  5964 ;;		_USBCtrlEPService
  5965 ;; This function uses a non-reentrant model
  5966 ;;
  5967                           
  5968                           
  5969                           ;psect for function _USBCtrlTrfOutHandler
  5970  0708                     _USBCtrlTrfOutHandler:	
  5971  0708                     l3300:	
  5972                           ;incstack = 0
  5973                           ; Regs used in _USBCtrlTrfOutHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5974                           
  5975                           
  5976                           ;usb_device.c: 2543: if(controlTransferState == 2)
  5977  0708  3002               	movlw	2
  5978  0709  0657               	xorwf	_controlTransferState,w
  5979  070A  1D03               	btfss	3,2
  5980  070B  2F0D               	goto	l3304
  5981                           
  5982                           ;usb_device.c: 2544: {
  5983                           ;usb_device.c: 2545: USBCtrlTrfRxService();
  5984  070C  2F2C               	ljmp	l3108
  5985  070D                     l3304:	
  5986                           ;usb_device.c: 2546: }
  5987                           
  5988                           
  5989                           ;usb_device.c: 2547: else
  5990                           ;usb_device.c: 2548: {
  5991                           ;usb_device.c: 2551: controlTransferState = 0;
  5992  070D  01D7               	clrf	_controlTransferState
  5993                           
  5994                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
  5995  070E  0022               	movlb	2	; select bank2
  5996  070F  084F               	movf	_BothEP0OutUOWNsSet^(0+256),w
  5997  0710  1D03               	btfss	3,2
  5998  0711  2F2A               	goto	l3316
  5999                           
  6000                           ;usb_device.c: 2559: {
  6001                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
  6002  0712  0020               	movlb	0	; select bank0
  6003  0713  0A59               	incf	_pBDTEntryEP0OutNext,w
  6004  0714  0086               	movwf	6
  6005  0715  3008               	movlw	8
  6006  0716  0187               	clrf	7
  6007  0717  0081               	movwf	1
  6008                           
  6009                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6010  0718  3040               	movlw	64
  6011  0719  00F6               	movwf	??_USBCtrlTrfOutHandler
  6012  071A  01F7               	clrf	??_USBCtrlTrfOutHandler+1
  6013  071B  0859               	movf	_pBDTEntryEP0OutNext,w
  6014  071C  3E02               	addlw	2
  6015  071D  0086               	movwf	6
  6016  071E  0876               	movf	??_USBCtrlTrfOutHandler,w
  6017  071F  3FC0               	movwi [0]fsr1
  6018  0720  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  6019  0721  3FC1               	movwi [1]fsr1
  6020                           
  6021                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6022  0722  0859               	movf	_pBDTEntryEP0OutNext,w
  6023  0723  0086               	movwf	6
  6024  0724  300C               	movlw	12
  6025  0725  0081               	movwf	1
  6026                           
  6027                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6028  0726  0859               	movf	_pBDTEntryEP0OutNext,w
  6029  0727  0086               	movwf	6
  6030  0728  1781               	bsf	1,7
  6031                           
  6032                           ;usb_device.c: 2564: }
  6033  0729  0008               	return
  6034  072A                     l3316:	
  6035                           
  6036                           ;usb_device.c: 2565: else
  6037                           ;usb_device.c: 2566: {
  6038                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
  6039  072A  01CF               	clrf	_BothEP0OutUOWNsSet^(0+256)
  6040  072B  0008               	return
  6041  072C                     __end_of_USBCtrlTrfOutHandler:	
  6042  072C                     __ptext25:	
  6043 ;; *************** function _USBCtrlTrfRxService *****************
  6044 ;; Defined at:
  6045 ;;		line 1852 in file "../../../../../../framework/usb/src/usb_device.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;		None
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;  byteToRead      1    5[COMMON] unsigned char 
  6050 ;;  i               1    4[COMMON] unsigned char 
  6051 ;; Return value:  Size  Location     Type
  6052 ;;		None               void
  6053 ;; Registers used:
  6054 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6055 ;; Tracked objects:
  6056 ;;		On entry : 1F/0
  6057 ;;		On exit  : 1E/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6061 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6062 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6063 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6064 ;;Total ram usage:        4 bytes
  6065 ;; Hardware stack levels used:    1
  6066 ;; Hardware stack levels required when called:    2
  6067 ;; This function calls:
  6068 ;;		_USBCtrlEPAllowStatusStage
  6069 ;; This function is called by:
  6070 ;;		_USBCtrlTrfOutHandler
  6071 ;; This function uses a non-reentrant model
  6072 ;;
  6073                           
  6074                           
  6075                           ;psect for function _USBCtrlTrfRxService
  6076  072C                     _USBCtrlTrfRxService:	
  6077  072C                     l3108:	
  6078                           ;incstack = 0
  6079                           ; Regs used in _USBCtrlTrfRxService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6080                           
  6081                           
  6082                           ;usb_device.c: 1854: uint8_t byteToRead;
  6083                           ;usb_device.c: 1855: uint8_t i;
  6084                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  6085  072C  0858               	movf	_pBDTEntryEP0OutCurrent,w
  6086  072D  0086               	movwf	6
  6087  072E  0187               	clrf	7
  6088  072F  3F41               	moviw [1]fsr1
  6089  0730  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  6090                           
  6091                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  6092  0731  00F2               	movwf	??_USBCtrlTrfRxService
  6093  0732  01F3               	clrf	??_USBCtrlTrfRxService+1
  6094  0733  0873               	movf	??_USBCtrlTrfRxService+1,w
  6095  0734  0022               	movlb	2	; select bank2
  6096  0735  0244               	subwf	((_outPipes+1)^(0+256)+3),w
  6097  0736  1D03               	skipz
  6098  0737  2F3A               	goto	u2255
  6099  0738  0872               	movf	??_USBCtrlTrfRxService,w
  6100  0739  0243               	subwf	(_outPipes^(0+256)+3),w
  6101  073A                     u2255:	
  6102  073A  1803               	skipnc
  6103  073B  2F3E               	goto	l634
  6104                           
  6105                           ;usb_device.c: 1866: {
  6106                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  6107  073C  0843               	movf	(_outPipes^(0+256)+3),w
  6108  073D  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  6109  073E                     l634:	
  6110                           
  6111                           ;usb_device.c: 1868: }
  6112                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  6113  073E  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  6114  073F  02C3               	subwf	(_outPipes^(0+256)+3),f
  6115  0740  1C03               	skipc
  6116  0741  03C4               	decf	((_outPipes+1)^(0+256)+3),f
  6117                           
  6118                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  6119  0742  01F4               	clrf	USBCtrlTrfRxService@i
  6120  0743                     l3122:	
  6121  0743  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  6122  0744  0274               	subwf	USBCtrlTrfRxService@i,w
  6123  0745  1803               	btfsc	3,0
  6124  0746  2F53               	goto	l3124
  6125                           
  6126                           ;usb_device.c: 1875: {
  6127                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  6128  0747  0840               	movf	_outPipes^(0+256),w
  6129  0748  0086               	movwf	6
  6130  0749  0187               	clrf	7
  6131  074A  0874               	movf	USBCtrlTrfRxService@i,w
  6132  074B  3E48               	addlw	72
  6133  074C  0084               	movwf	4
  6134  074D  0185               	clrf	5
  6135  074E  0800               	movf	0,w
  6136  074F  0081               	movwf	1
  6137  0750  0AC0               	incf	_outPipes^(0+256),f
  6138  0751  0AF4               	incf	USBCtrlTrfRxService@i,f
  6139  0752  2F43               	goto	l3122
  6140  0753                     l3124:	
  6141                           
  6142                           ;usb_device.c: 1877: }
  6143                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  6144  0753  0843               	movf	(_outPipes^(0+256)+3),w
  6145  0754  0444               	iorwf	((_outPipes+1)^(0+256)+3),w
  6146  0755  1903               	btfsc	3,2
  6147  0756  2F7B               	goto	l3136
  6148                           
  6149                           ;usb_device.c: 1882: {
  6150                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  6151  0757  0020               	movlb	0	; select bank0
  6152  0758  0A59               	incf	_pBDTEntryEP0OutNext,w
  6153  0759  0086               	movwf	6
  6154  075A  3008               	movlw	8
  6155  075B  0187               	clrf	7
  6156  075C  0081               	movwf	1
  6157                           
  6158                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  6159  075D  3048               	movlw	72
  6160  075E  00F2               	movwf	??_USBCtrlTrfRxService
  6161  075F  01F3               	clrf	??_USBCtrlTrfRxService+1
  6162  0760  0859               	movf	_pBDTEntryEP0OutNext,w
  6163  0761  3E02               	addlw	2
  6164  0762  0086               	movwf	6
  6165  0763  0872               	movf	??_USBCtrlTrfRxService,w
  6166  0764  3FC0               	movwi [0]fsr1
  6167  0765  0873               	movf	??_USBCtrlTrfRxService+1,w
  6168  0766  3FC1               	movwi [1]fsr1
  6169                           
  6170                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  6171  0767  0858               	movf	_pBDTEntryEP0OutCurrent,w
  6172  0768  0086               	movwf	6
  6173                           
  6174                           ;usb_device.c: 1886: {
  6175                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  6176  0769  0859               	movf	_pBDTEntryEP0OutNext,w
  6177  076A  1B01               	btfsc	1,6
  6178  076B  2F73               	goto	L11
  6179  076C  0086               	movwf	6
  6180  076D  3048               	movlw	72
  6181  076E  0081               	movwf	1
  6182                           
  6183                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6184  076F  0859               	movf	_pBDTEntryEP0OutNext,w
  6185  0770  0086               	movwf	6
  6186  0771  1781               	bsf	1,7
  6187                           
  6188                           ;usb_device.c: 1889: }
  6189  0772  0008               	return
  6190  0773                     L11:	
  6191                           ;usb_device.c: 1890: else
  6192                           ;usb_device.c: 1891: {
  6193                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  6194                           
  6195  0773  0086               	movwf	6
  6196  0774  3008               	movlw	8
  6197  0775  0187               	clrf	7
  6198  0776  0081               	movwf	1
  6199                           
  6200                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6201  0777  0859               	movf	_pBDTEntryEP0OutNext,w
  6202  0778  0086               	movwf	6
  6203  0779  1781               	bsf	1,7
  6204  077A  0008               	return
  6205  077B                     l3136:	
  6206                           
  6207                           ;usb_device.c: 1896: else
  6208                           ;usb_device.c: 1897: {
  6209                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  6210  077B  0020               	movlb	0	; select bank0
  6211  077C  0A59               	incf	_pBDTEntryEP0OutNext,w
  6212  077D  0086               	movwf	6
  6213  077E  3008               	movlw	8
  6214  077F  0187               	clrf	7
  6215  0780  0081               	movwf	1
  6216                           
  6217                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6218  0781  3040               	movlw	64
  6219  0782  00F2               	movwf	??_USBCtrlTrfRxService
  6220  0783  01F3               	clrf	??_USBCtrlTrfRxService+1
  6221  0784  0859               	movf	_pBDTEntryEP0OutNext,w
  6222  0785  3E02               	addlw	2
  6223  0786  0086               	movwf	6
  6224  0787  0872               	movf	??_USBCtrlTrfRxService,w
  6225  0788  3FC0               	movwi [0]fsr1
  6226  0789  0873               	movf	??_USBCtrlTrfRxService+1,w
  6227  078A  3FC1               	movwi [1]fsr1
  6228                           
  6229                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  6230  078B  0859               	movf	_pBDTEntryEP0OutNext,w
  6231  078C  0086               	movwf	6
  6232  078D  3004               	movlw	4
  6233  078E  0081               	movwf	1
  6234                           
  6235                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6236  078F  0859               	movf	_pBDTEntryEP0OutNext,w
  6237  0790  0086               	movwf	6
  6238  0791  1781               	bsf	1,7
  6239                           
  6240                           ;usb_device.c: 1926: }
  6241                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  6242  0792  0022               	movlb	2	; select bank2
  6243  0793  13C2               	bcf	(_outPipes^(0+256)+2),7
  6244                           
  6245                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  6246  0794  0020               	movlb	0	; select bank0
  6247  0795  0854               	movf	_USBDeferStatusStagePacket,w	;volatile
  6248  0796  1D03               	btfss	3,2
  6249  0797  0008               	return
  6250                           
  6251                           ;usb_device.c: 1942: {
  6252                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  6253  0798  2D19               	ljmp	l2784
  6254  0799                     __end_of_USBCtrlTrfRxService:	
  6255  0799                     __ptext21:	
  6256 ;; *************** function _APP_DeviceAudioMIDIInitialize *****************
  6257 ;; Defined at:
  6258 ;;		line 77 in file "../src/app_device_audio_midi.c"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;		None
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;		None
  6263 ;; Return value:  Size  Location     Type
  6264 ;;		None               void
  6265 ;; Registers used:
  6266 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6267 ;; Tracked objects:
  6268 ;;		On entry : 1F/0
  6269 ;;		On exit  : 1F/1
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6276 ;;Total ram usage:        0 bytes
  6277 ;; Hardware stack levels used:    1
  6278 ;; Hardware stack levels required when called:    3
  6279 ;; This function calls:
  6280 ;;		_USBEnableEndpoint
  6281 ;;		_USBTransferOnePacket
  6282 ;; This function is called by:
  6283 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287                           
  6288                           ;psect for function _APP_DeviceAudioMIDIInitialize
  6289  0799                     _APP_DeviceAudioMIDIInitialize:	
  6290  0799                     l2690:	
  6291                           ;incstack = 0
  6292                           ; Regs used in _APP_DeviceAudioMIDIInitialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclat
      +                          h+cstack]
  6293                           
  6294                           
  6295                           ;app_device_audio_midi.c: 79: USBTxHandle = (0);
  6296  0799  01D6               	clrf	_USBTxHandle
  6297                           
  6298                           ;app_device_audio_midi.c: 80: USBRxHandle = (0);
  6299  079A  0021               	movlb	1	; select bank1
  6300  079B  303C               	movlw	60
  6301  079C  01E2               	clrf	_USBRxHandle^(0+128)
  6302                           
  6303                           ;app_device_audio_midi.c: 82: pitch = 0x3C;
  6304  079D  00EA               	movwf	_pitch^(0+128)
  6305  079E  301E               	movlw	30
  6306                           
  6307                           ;app_device_audio_midi.c: 83: sentNoteOff = 1;
  6308  079F  01EB               	clrf	_sentNoteOff^(0+128)
  6309  07A0  0AEB               	incf	_sentNoteOff^(0+128),f
  6310                           
  6311                           ;app_device_audio_midi.c: 85: msCounter = 0;
  6312  07A1  01E8               	clrf	_msCounter^(0+128)
  6313                           
  6314                           ;app_device_audio_midi.c: 88: USBEnableEndpoint(1,0x04|0x02|0x10|0x08);
  6315  07A2  00F4               	movwf	USBEnableEndpoint@options
  6316  07A3  3001               	movlw	1
  6317  07A4  27B1  3180         	fcall	_USBEnableEndpoint
  6318  07A6  30A0               	movlw	160
  6319                           
  6320                           ;app_device_audio_midi.c: 91: USBRxHandle = USBTransferOnePacket(1,0,(uint8_t*)&Received
      +                          DataBuffer,64);
  6321  07A7  01F0               	clrf	USBTransferOnePacket@dir
  6322  07A8  00F1               	movwf	USBTransferOnePacket@data
  6323  07A9  3040               	movlw	64
  6324  07AA  01F2               	clrf	USBTransferOnePacket@data+1
  6325  07AB  00F3               	movwf	USBTransferOnePacket@len
  6326  07AC  3001               	movlw	1
  6327  07AD  2111               	fcall	_USBTransferOnePacket
  6328  07AE  0021               	movlb	1	; select bank1
  6329  07AF  00E2               	movwf	_USBRxHandle^(0+128)
  6330  07B0  0008               	return
  6331  07B1                     __end_of_APP_DeviceAudioMIDIInitialize:	
  6332  07B1                     __ptext22:	
  6333 ;; *************** function _USBEnableEndpoint *****************
  6334 ;; Defined at:
  6335 ;;		line 878 in file "../../../../../../framework/usb/src/usb_device.c"
  6336 ;; Parameters:    Size  Location     Type
  6337 ;;  ep              1    wreg     unsigned char 
  6338 ;;  options         1    4[COMMON] unsigned char 
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;  ep              1    9[COMMON] unsigned char 
  6341 ;;  p               2    7[COMMON] PTR unsigned char 
  6342 ;;		 -> UEP0(1), 
  6343 ;; Return value:  Size  Location     Type
  6344 ;;		None               void
  6345 ;; Registers used:
  6346 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6347 ;; Tracked objects:
  6348 ;;		On entry : 1F/1
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6352 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6353 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6354 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6355 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6356 ;;Total ram usage:        6 bytes
  6357 ;; Hardware stack levels used:    1
  6358 ;; Hardware stack levels required when called:    2
  6359 ;; This function calls:
  6360 ;;		_USBConfigureEndpoint
  6361 ;; This function is called by:
  6362 ;;		_APP_DeviceAudioMIDIInitialize
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366                           
  6367                           ;psect for function _USBEnableEndpoint
  6368  07B1                     _USBEnableEndpoint:	
  6369                           
  6370                           ;incstack = 0
  6371                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6372                           ;USBEnableEndpoint@ep stored from wreg
  6373  07B1  00F9               	movwf	USBEnableEndpoint@ep
  6374                           
  6375                           ;usb_device.c: 880: unsigned char* p;
  6376                           ;usb_device.c: 884: if(options & 0x04)
  6377  07B2  1D74               	btfss	USBEnableEndpoint@options,2
  6378  07B3  2FB7               	goto	l2614
  6379                           
  6380                           ;usb_device.c: 885: {
  6381                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  6382  07B4  01F0               	clrf	USBConfigureEndpoint@direction
  6383  07B5  27CE  3180         	fcall	_USBConfigureEndpoint
  6384  07B7                     l2614:	
  6385                           
  6386                           ;usb_device.c: 887: }
  6387                           ;usb_device.c: 888: if(options & 0x02)
  6388  07B7  1CF4               	btfss	USBEnableEndpoint@options,1
  6389  07B8  2FBD               	goto	l2618
  6390                           
  6391                           ;usb_device.c: 889: {
  6392                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  6393  07B9  01F0               	clrf	USBConfigureEndpoint@direction
  6394  07BA  0AF0               	incf	USBConfigureEndpoint@direction,f
  6395  07BB  0879               	movf	USBEnableEndpoint@ep,w
  6396  07BC  27CE               	fcall	_USBConfigureEndpoint
  6397  07BD                     l2618:	
  6398                           
  6399                           ;usb_device.c: 891: }
  6400                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  6401  07BD  0879               	movf	USBEnableEndpoint@ep,w
  6402  07BE  3E98               	addlw	152
  6403  07BF  00F5               	movwf	??_USBEnableEndpoint
  6404  07C0  300E               	movlw	14
  6405  07C1  01F6               	clrf	??_USBEnableEndpoint+1
  6406  07C2  3DF6               	addwfc	??_USBEnableEndpoint+1,f
  6407  07C3  0875               	movf	??_USBEnableEndpoint,w
  6408  07C4  00F7               	movwf	USBEnableEndpoint@p
  6409  07C5  0876               	movf	??_USBEnableEndpoint+1,w
  6410  07C6  00F8               	movwf	USBEnableEndpoint@p+1
  6411                           
  6412                           ;usb_device.c: 901: *p = options;
  6413  07C7  0877               	movf	USBEnableEndpoint@p,w
  6414  07C8  0086               	movwf	6
  6415  07C9  0878               	movf	USBEnableEndpoint@p+1,w
  6416  07CA  0087               	movwf	7
  6417  07CB  0874               	movf	USBEnableEndpoint@options,w
  6418  07CC  0081               	movwf	1
  6419  07CD  0008               	return
  6420  07CE                     __end_of_USBEnableEndpoint:	
  6421  07CE                     __ptext23:	
  6422 ;; *************** function _USBConfigureEndpoint *****************
  6423 ;; Defined at:
  6424 ;;		line 1543 in file "../../../../../../framework/usb/src/usb_device.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;  EPNum           1    wreg     unsigned char 
  6427 ;;  direction       1    0[COMMON] unsigned char 
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;  EPNum           1    2[COMMON] unsigned char 
  6430 ;;  handle          1    3[COMMON] PTR volatile struct __BD
  6431 ;;		 -> BDT(32), 
  6432 ;; Return value:  Size  Location     Type
  6433 ;;		None               void
  6434 ;; Registers used:
  6435 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/1
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6441 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6442 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6443 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6444 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6445 ;;Total ram usage:        4 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; Hardware stack levels required when called:    1
  6448 ;; This function calls:
  6449 ;;		Nothing
  6450 ;; This function is called by:
  6451 ;;		_USBEnableEndpoint
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454                           
  6455                           
  6456                           ;psect for function _USBConfigureEndpoint
  6457  07CE                     _USBConfigureEndpoint:	
  6458                           
  6459                           ;incstack = 0
  6460                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  6461                           ;USBConfigureEndpoint@EPNum stored from wreg
  6462  07CE  00F2               	movwf	USBConfigureEndpoint@EPNum
  6463                           
  6464                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  6465                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  6466  07CF  3020               	movlw	32
  6467  07D0  00F3               	movwf	USBConfigureEndpoint@handle
  6468                           
  6469                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  6470  07D1  0870               	movf	USBConfigureEndpoint@direction,w
  6471  07D2  00F1               	movwf	??_USBConfigureEndpoint
  6472  07D3  35F1               	lslf	??_USBConfigureEndpoint,f
  6473  07D4  0872               	movf	USBConfigureEndpoint@EPNum,w
  6474  07D5  0709               	addwf	9,w
  6475  07D6  0709               	addwf	9,w
  6476  07D7  0771               	addwf	??_USBConfigureEndpoint,w
  6477  07D8  0709               	addwf	9,w
  6478  07D9  0709               	addwf	9,w
  6479  07DA  07F3               	addwf	USBConfigureEndpoint@handle,f
  6480                           
  6481                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  6482  07DB  0873               	movf	USBConfigureEndpoint@handle,w
  6483  07DC  0086               	movwf	6
  6484  07DD  0187               	clrf	7
  6485  07DE  1381               	bcf	1,7
  6486                           
  6487                           ;usb_device.c: 1557: if(direction == 0)
  6488  07DF  0870               	movf	USBConfigureEndpoint@direction,w
  6489  07E0  1D03               	btfss	3,2
  6490  07E1  2FE8               	goto	l2584
  6491                           
  6492                           ;usb_device.c: 1558: {
  6493                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  6494  07E2  0872               	movf	USBConfigureEndpoint@EPNum,w
  6495  07E3  3E4D               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6496  07E4  0086               	movwf	6
  6497  07E5  3001               	movlw	1	; select bank2/3
  6498  07E6  0087               	movwf	7
  6499  07E7  2FEC               	goto	L10
  6500  07E8                     l2584:	
  6501                           ;usb_device.c: 1560: }
  6502                           
  6503                           
  6504                           ;usb_device.c: 1561: else
  6505                           ;usb_device.c: 1562: {
  6506                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  6507  07E8  0872               	movf	USBConfigureEndpoint@EPNum,w
  6508  07E9  3E52               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  6509  07EA  0086               	movwf	6
  6510  07EB  0187               	clrf	7
  6511  07EC                     L10:	
  6512  07EC  0873               	movf	USBConfigureEndpoint@handle,w
  6513  07ED  0081               	movwf	1
  6514                           
  6515                           ;usb_device.c: 1564: }
  6516                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  6517  07EE  0873               	movf	USBConfigureEndpoint@handle,w
  6518  07EF  0086               	movwf	6
  6519  07F0  0187               	clrf	7
  6520  07F1  1301               	bcf	1,6
  6521                           
  6522                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  6523  07F2  0873               	movf	USBConfigureEndpoint@handle,w
  6524  07F3  3E04               	addlw	4
  6525  07F4  0086               	movwf	6
  6526  07F5  1701               	bsf	1,6
  6527  07F6  0008               	return
  6528  07F7                     __end_of_USBConfigureEndpoint:	
  6529  07F7                     __ptext20:	
  6530 ;; *************** function _APP_DeviceAudioMIDISOFHandler *****************
  6531 ;; Defined at:
  6532 ;;		line 106 in file "../src/app_device_audio_midi.c"
  6533 ;; Parameters:    Size  Location     Type
  6534 ;;		None
  6535 ;; Auto vars:     Size  Location     Type
  6536 ;;		None
  6537 ;; Return value:  Size  Location     Type
  6538 ;;		None               void
  6539 ;; Registers used:
  6540 ;;		wreg, status,2, status,0
  6541 ;; Tracked objects:
  6542 ;;		On entry : 0/0
  6543 ;;		On exit  : 1F/1
  6544 ;;		Unchanged: 0/0
  6545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6550 ;;Total ram usage:        0 bytes
  6551 ;; Hardware stack levels used:    1
  6552 ;; Hardware stack levels required when called:    1
  6553 ;; This function calls:
  6554 ;;		Nothing
  6555 ;; This function is called by:
  6556 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6557 ;; This function uses a non-reentrant model
  6558 ;;
  6559                           
  6560                           
  6561                           ;psect for function _APP_DeviceAudioMIDISOFHandler
  6562  07F7                     _APP_DeviceAudioMIDISOFHandler:	
  6563  07F7                     l2686:	
  6564                           ;incstack = 0
  6565                           ; Regs used in _APP_DeviceAudioMIDISOFHandler: [wreg+status,2+status,0]
  6566                           
  6567                           
  6568                           ;app_device_audio_midi.c: 108: if(msCounter != 0)
  6569  07F7  0021               	movlb	1	; select bank1
  6570  07F8  0868               	movf	_msCounter^(0+128),w
  6571  07F9  1D03               	btfss	3,2
  6572                           
  6573                           ;app_device_audio_midi.c: 109: {
  6574                           ;app_device_audio_midi.c: 110: msCounter--;
  6575  07FA  03E8               	decf	_msCounter^(0+128),f
  6576  07FB  0008               	return
  6577  07FC                     __end_of_APP_DeviceAudioMIDISOFHandler:	
  6578                           
  6579                           	psect	bssBANK0
  6580  0050                     __pbssBANK0:	
  6581  0050                     APP_LEDUpdateUSBStatus@ledCount:	
  6582  0050                     	ds	2
  6583  0052                     _pBDTEntryIn:	
  6584  0052                     	ds	2
  6585  0054                     _USBDeferStatusStagePacket:	
  6586  0054                     	ds	1
  6587  0055                     _USBDeviceState:	
  6588  0055                     	ds	1
  6589  0056                     _USBTxHandle:	
  6590  0056                     	ds	1
  6591  0057                     _controlTransferState:	
  6592  0057                     	ds	1
  6593  0058                     _pBDTEntryEP0OutCurrent:	
  6594  0058                     	ds	1
  6595  0059                     _pBDTEntryEP0OutNext:	
  6596  0059                     	ds	1
  6597  005A                     store_key_level@idx_key:	
  6598  005A                     	ds	1
  6599  005B                     _inPipes:	
  6600  005B                     	ds	5
  6601  0060                     _USTATcopy:	
  6602  0060                     	ds	1
  6603                           
  6604                           	psect	bssBANK1
  6605  00E0                     __pbssBANK1:	
  6606  00E0                     _USBDeferINDataStagePackets:	
  6607  00E0                     	ds	1
  6608  00E1                     _USBDeferOUTDataStagePackets:	
  6609  00E1                     	ds	1
  6610  00E2                     _USBRxHandle:	
  6611  00E2                     	ds	1
  6612  00E3                     _USBStatusStageEnabledFlag1:	
  6613  00E3                     	ds	1
  6614  00E4                     _USBStatusStageEnabledFlag2:	
  6615  00E4                     	ds	1
  6616  00E5                     _USBStatusStageTimeoutCounter:	
  6617  00E5                     	ds	1
  6618  00E6                     _endpoint_number:	
  6619  00E6                     	ds	1
  6620  00E7                     _is_initialized:	
  6621  00E7                     	ds	1
  6622  00E8                     _msCounter:	
  6623  00E8                     	ds	1
  6624  00E9                     _pDst:	
  6625  00E9                     	ds	1
  6626  00EA                     _pitch:	
  6627  00EA                     	ds	1
  6628  00EB                     _sentNoteOff:	
  6629  00EB                     	ds	1
  6630  00EC                     _shortPacketStatus:	
  6631  00EC                     	ds	1
  6632  00ED                     _wait_timer:	
  6633  00ED                     	ds	1
  6634  00EE                     _USBActiveConfiguration:	
  6635  00EE                     	ds	1
  6636  00EF                     _USBAlternateInterface:	
  6637  00EF                     	ds	1
  6638                           
  6639                           	psect	bssBANK2
  6640  0120                     __pbssBANK2:	
  6641  0120                     _adc_levels:	
  6642  0120                     	ds	32
  6643  0140                     _outPipes:	
  6644  0140                     	ds	7
  6645  0147                     _ep_data_in:	
  6646  0147                     	ds	2
  6647  0149                     _ep_data_out:	
  6648  0149                     	ds	2
  6649  014B                     _note_event:	
  6650  014B                     	ds	2
  6651  014D                     _pBDTEntryOut:	
  6652  014D                     	ds	2
  6653  014F                     _BothEP0OutUOWNsSet:	
  6654  014F                     	ds	1
  6655  0150                     _RemoteWakeup:	
  6656  0150                     	ds	1
  6657  0151                     scan_task@state:	
  6658  0151                     	ds	1
  6659                           
  6660                           	psect	clrtext
  6661  093E                     clear_ram0:	
  6662                           ;	Called with FSR0 containing the base address, and
  6663                           ;	WREG with the size to clear
  6664                           
  6665  093E  0064               	clrwdt	;clear the watchdog before getting into this loop
  6666  093F                     clrloop0:	
  6667  093F  0180               	clrf	0	;clear RAM location pointed to by FSR
  6668  0940  3101               	addfsr 0,1
  6669  0941  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6670  0942  293F               	goto	clrloop0	;have we reached the end yet?
  6671  0943  3400               	retlw	0	;all done for this memory range, return
  6672                           
  6673                           	psect	cstackCOMMON
  6674  0070                     __pcstackCOMMON:	
  6675  0070                     ?_LED_Enable:	
  6676  0070                     ??_LED_Enable:	
  6677                           ; 0 bytes @ 0x0
  6678                           
  6679  0070                     ?_BUTTON_Enable:	
  6680                           ; 0 bytes @ 0x0
  6681                           
  6682  0070                     ??_BUTTON_Enable:	
  6683                           ; 0 bytes @ 0x0
  6684                           
  6685  0070                     ?_LED_Off:	
  6686                           ; 0 bytes @ 0x0
  6687                           
  6688  0070                     ??_LED_Off:	
  6689                           ; 0 bytes @ 0x0
  6690                           
  6691  0070                     ?_LED_On:	
  6692                           ; 0 bytes @ 0x0
  6693                           
  6694  0070                     ??_LED_On:	
  6695                           ; 0 bytes @ 0x0
  6696                           
  6697  0070                     ?_USBDeviceInit:	
  6698                           ; 0 bytes @ 0x0
  6699                           
  6700  0070                     ??_USBDeviceInit:	
  6701                           ; 0 bytes @ 0x0
  6702                           
  6703  0070                     ?_USBDeviceTasks:	
  6704                           ; 0 bytes @ 0x0
  6705                           
  6706  0070                     ?_APP_DeviceAudioMIDITasks:	
  6707                           ; 0 bytes @ 0x0
  6708                           
  6709  0070                     ?_APP_DeviceAudioMIDISOFHandler:	
  6710                           ; 0 bytes @ 0x0
  6711                           
  6712  0070                     ??_APP_DeviceAudioMIDISOFHandler:	
  6713                           ; 0 bytes @ 0x0
  6714                           
  6715  0070                     ?_APP_DeviceAudioMIDIInitialize:	
  6716                           ; 0 bytes @ 0x0
  6717                           
  6718  0070                     ??_BUTTON_IsPressed:	
  6719                           ; 0 bytes @ 0x0
  6720                           
  6721  0070                     ?_USBWakeFromSuspend:	
  6722                           ; 0 bytes @ 0x0
  6723                           
  6724  0070                     ?_USBSuspend:	
  6725                           ; 0 bytes @ 0x0
  6726                           
  6727  0070                     ?_USBCtrlEPAllowStatusStage:	
  6728                           ; 0 bytes @ 0x0
  6729                           
  6730  0070                     ??_USBCtrlEPAllowStatusStage:	
  6731                           ; 0 bytes @ 0x0
  6732                           
  6733  0070                     ?_USBStallHandler:	
  6734                           ; 0 bytes @ 0x0
  6735                           
  6736  0070                     ??_USBStallHandler:	
  6737                           ; 0 bytes @ 0x0
  6738                           
  6739  0070                     ?_USBCtrlEPService:	
  6740                           ; 0 bytes @ 0x0
  6741                           
  6742  0070                     ?_USBConfigureEndpoint:	
  6743                           ; 0 bytes @ 0x0
  6744                           
  6745  0070                     ?_USBCtrlTrfTxService:	
  6746                           ; 0 bytes @ 0x0
  6747                           
  6748  0070                     ??_USBCtrlTrfTxService:	
  6749                           ; 0 bytes @ 0x0
  6750                           
  6751  0070                     ?_USBCtrlTrfSetupHandler:	
  6752                           ; 0 bytes @ 0x0
  6753                           
  6754  0070                     ?_USBCtrlTrfOutHandler:	
  6755                           ; 0 bytes @ 0x0
  6756                           
  6757  0070                     ?_USBCtrlTrfInHandler:	
  6758                           ; 0 bytes @ 0x0
  6759                           
  6760  0070                     ?_USBCheckStdRequest:	
  6761                           ; 0 bytes @ 0x0
  6762                           
  6763  0070                     ?_USBStdFeatureReqHandler:	
  6764                           ; 0 bytes @ 0x0
  6765                           
  6766  0070                     ?_SYSTEM_Initialize:	
  6767                           ; 0 bytes @ 0x0
  6768                           
  6769  0070                     ?_SYS_InterruptHigh:	
  6770                           ; 0 bytes @ 0x0
  6771                           
  6772  0070                     ??_SYS_InterruptHigh:	
  6773                           ; 0 bytes @ 0x0
  6774                           
  6775  0070                     ?_APP_LEDUpdateUSBStatus:	
  6776                           ; 0 bytes @ 0x0
  6777                           
  6778  0070                     ?_main:	
  6779                           ; 0 bytes @ 0x0
  6780                           
  6781  0070                     ?_scan_init:	
  6782                           ; 0 bytes @ 0x0
  6783                           
  6784  0070                     ??_scan_init:	
  6785                           ; 0 bytes @ 0x0
  6786                           
  6787  0070                     ?_set_timer:	
  6788                           ; 0 bytes @ 0x0
  6789                           
  6790  0070                     ??_set_timer:	
  6791                           ; 0 bytes @ 0x0
  6792                           
  6793  0070                     ??_waiting_for_timer:	
  6794                           ; 0 bytes @ 0x0
  6795                           
  6796  0070                     ?_set_clock_and_data:	
  6797                           ; 0 bytes @ 0x0
  6798                           
  6799  0070                     ??_get_data:	
  6800                           ; 0 bytes @ 0x0
  6801                           
  6802  0070                     ??_is_end_of_scan:	
  6803                           ; 0 bytes @ 0x0
  6804                           
  6805  0070                     ?_run_adc:	
  6806                           ; 0 bytes @ 0x0
  6807                           
  6808  0070                     ??_run_adc:	
  6809                           ; 0 bytes @ 0x0
  6810                           
  6811  0070                     ??_is_adc_ready:	
  6812                           ; 0 bytes @ 0x0
  6813                           
  6814  0070                     ??_get_adc:	
  6815                           ; 0 bytes @ 0x0
  6816                           
  6817  0070                     ?_process_level:	
  6818                           ; 0 bytes @ 0x0
  6819                           
  6820  0070                     ?_USBCtrlEPAllowDataStage:	
  6821                           ; 0 bytes @ 0x0
  6822                           
  6823  0070                     ?_USBCtrlEPServiceComplete:	
  6824                           ; 0 bytes @ 0x0
  6825                           
  6826  0070                     ?_USBCtrlTrfRxService:	
  6827                           ; 0 bytes @ 0x0
  6828                           
  6829  0070                     ?_USBStdSetCfgHandler:	
  6830                           ; 0 bytes @ 0x0
  6831                           
  6832  0070                     ?_USBStdGetDscHandler:	
  6833                           ; 0 bytes @ 0x0
  6834                           
  6835  0070                     ??_USBStdGetDscHandler:	
  6836                           ; 0 bytes @ 0x0
  6837                           
  6838  0070                     ?_USBStdGetStatusHandler:	
  6839                           ; 0 bytes @ 0x0
  6840                           
  6841  0070                     ??_USBStdGetStatusHandler:	
  6842                           ; 0 bytes @ 0x0
  6843                           
  6844  0070                     ?_USBTransferOnePacket:	
  6845                           ; 0 bytes @ 0x0
  6846                           
  6847  0070                     ?_BUTTON_IsPressed:	
  6848                           ; 1 bytes @ 0x0
  6849                           
  6850  0070                     ?_memset:	
  6851                           ; 1 bytes @ 0x0
  6852                           
  6853  0070                     ?_waiting_for_timer:	
  6854                           ; 1 bytes @ 0x0
  6855                           
  6856  0070                     ?_get_data:	
  6857                           ; 1 bytes @ 0x0
  6858                           
  6859  0070                     ?_is_end_of_scan:	
  6860                           ; 1 bytes @ 0x0
  6861                           
  6862  0070                     ?_is_adc_ready:	
  6863                           ; 1 bytes @ 0x0
  6864                           
  6865  0070                     ?_get_adc:	
  6866                           ; 1 bytes @ 0x0
  6867                           
  6868  0070                     _waiting_for_timer$813:	
  6869                           ; 1 bytes @ 0x0
  6870                           
  6871  0070                     set_clock_and_data@d:	
  6872                           ; 1 bytes @ 0x0
  6873                           
  6874  0070                     process_level@old_level:	
  6875                           ; 1 bytes @ 0x0
  6876                           
  6877  0070                     BUTTON_IsPressed@button:	
  6878                           ; 1 bytes @ 0x0
  6879                           
  6880  0070                     BUTTON_Enable@button:	
  6881                           ; 1 bytes @ 0x0
  6882                           
  6883  0070                     LED_On@led:	
  6884                           ; 1 bytes @ 0x0
  6885                           
  6886  0070                     LED_Off@led:	
  6887                           ; 1 bytes @ 0x0
  6888                           
  6889  0070                     LED_Enable@led:	
  6890                           ; 1 bytes @ 0x0
  6891                           
  6892  0070                     USBTransferOnePacket@dir:	
  6893                           ; 1 bytes @ 0x0
  6894                           
  6895  0070                     USBConfigureEndpoint@direction:	
  6896                           ; 1 bytes @ 0x0
  6897                           
  6898  0070                     USBCtrlTrfTxService@byteToSend:	
  6899                           ; 1 bytes @ 0x0
  6900                           
  6901  0070                     USBStdGetStatusHandler@p:	
  6902                           ; 1 bytes @ 0x0
  6903                           
  6904  0070                     USBDeviceInit@p:	
  6905                           ; 1 bytes @ 0x0
  6906                           
  6907  0070                     memset@c:	
  6908                           ; 2 bytes @ 0x0
  6909                           
  6910                           
  6911                           ; 2 bytes @ 0x0
  6912  0070                     	ds	1
  6913  0071                     ??_USBConfigureEndpoint:	
  6914  0071                     ??_USBCtrlTrfInHandler:	
  6915                           ; 0 bytes @ 0x1
  6916                           
  6917  0071                     ??_SYSTEM_Initialize:	
  6918                           ; 0 bytes @ 0x1
  6919                           
  6920  0071                     ??_APP_LEDUpdateUSBStatus:	
  6921                           ; 0 bytes @ 0x1
  6922                           
  6923  0071                     ??_set_clock_and_data:	
  6924                           ; 0 bytes @ 0x1
  6925                           
  6926  0071                     ??_USBCtrlEPAllowDataStage:	
  6927                           ; 0 bytes @ 0x1
  6928                           
  6929  0071                     SYSTEM_Initialize@state:	
  6930                           ; 0 bytes @ 0x1
  6931                           
  6932  0071                     set_clock_and_data@c:	
  6933                           ; 1 bytes @ 0x1
  6934                           
  6935  0071                     process_level@new_level:	
  6936                           ; 1 bytes @ 0x1
  6937                           
  6938  0071                     USBTransferOnePacket@data:	
  6939                           ; 1 bytes @ 0x1
  6940                           
  6941                           
  6942                           ; 2 bytes @ 0x1
  6943  0071                     	ds	1
  6944  0072                     ??_process_level:	
  6945  0072                     ??_USBCtrlTrfRxService:	
  6946                           ; 0 bytes @ 0x2
  6947                           
  6948  0072                     process_level@idx_key:	
  6949                           ; 0 bytes @ 0x2
  6950                           
  6951  0072                     USBDeviceInit@i_1597:	
  6952                           ; 1 bytes @ 0x2
  6953                           
  6954  0072                     USBConfigureEndpoint@EPNum:	
  6955                           ; 1 bytes @ 0x2
  6956                           
  6957  0072                     memset@n:	
  6958                           ; 1 bytes @ 0x2
  6959                           
  6960                           
  6961                           ; 2 bytes @ 0x2
  6962  0072                     	ds	1
  6963  0073                     ??_USBCtrlEPServiceComplete:	
  6964  0073                     USBDeviceInit@i:	
  6965                           ; 0 bytes @ 0x3
  6966                           
  6967  0073                     USBTransferOnePacket@len:	
  6968                           ; 1 bytes @ 0x3
  6969                           
  6970  0073                     USBConfigureEndpoint@handle:	
  6971                           ; 1 bytes @ 0x3
  6972                           
  6973  0073                     USBCtrlTrfInHandler@lastDTS:	
  6974                           ; 1 bytes @ 0x3
  6975                           
  6976  0073                     _process_level$844:	
  6977                           ; 1 bytes @ 0x3
  6978                           
  6979                           
  6980                           ; 2 bytes @ 0x3
  6981  0073                     	ds	1
  6982  0074                     ?_USBEnableEndpoint:	
  6983  0074                     ??_USBTransferOnePacket:	
  6984                           ; 0 bytes @ 0x4
  6985                           
  6986  0074                     ??_memset:	
  6987                           ; 0 bytes @ 0x4
  6988                           
  6989  0074                     USBEnableEndpoint@options:	
  6990                           ; 0 bytes @ 0x4
  6991                           
  6992  0074                     USBCtrlTrfRxService@i:	
  6993                           ; 1 bytes @ 0x4
  6994                           
  6995  0074                     memset@p:	
  6996                           ; 1 bytes @ 0x4
  6997                           
  6998                           
  6999                           ; 1 bytes @ 0x4
  7000  0074                     	ds	1
  7001  0075                     ??_USBEnableEndpoint:	
  7002  0075                     USBCtrlTrfRxService@byteToRead:	
  7003                           ; 0 bytes @ 0x5
  7004                           
  7005  0075                     memset@p1:	
  7006                           ; 1 bytes @ 0x5
  7007                           
  7008  0075                     _process_level$845:	
  7009                           ; 1 bytes @ 0x5
  7010                           
  7011                           
  7012                           ; 2 bytes @ 0x5
  7013  0075                     	ds	1
  7014  0076                     ??_USBCtrlTrfOutHandler:	
  7015  0076                     USBTransferOnePacket@ep:	
  7016                           ; 0 bytes @ 0x6
  7017                           
  7018                           
  7019                           ; 1 bytes @ 0x6
  7020  0076                     	ds	1
  7021  0077                     process_level@old_on:	
  7022  0077                     USBTransferOnePacket@handle:	
  7023                           ; 1 bytes @ 0x7
  7024                           
  7025  0077                     USBEnableEndpoint@p:	
  7026                           ; 1 bytes @ 0x7
  7027                           
  7028                           
  7029                           ; 2 bytes @ 0x7
  7030  0077                     	ds	1
  7031  0078                     process_level@new_on:	
  7032                           
  7033                           ; 1 bytes @ 0x8
  7034  0078                     	ds	1
  7035  0079                     ?_store_key_level:	
  7036  0079                     store_key_level@end_of_scan:	
  7037                           ; 1 bytes @ 0x9
  7038                           
  7039  0079                     USBEnableEndpoint@ep:	
  7040                           ; 1 bytes @ 0x9
  7041                           
  7042                           
  7043                           ; 1 bytes @ 0x9
  7044  0079                     	ds	1
  7045  007A                     ??_APP_DeviceAudioMIDIInitialize:	
  7046  007A                     ??_USBWakeFromSuspend:	
  7047                           ; 0 bytes @ 0xA
  7048                           
  7049  007A                     ??_USBSuspend:	
  7050                           ; 0 bytes @ 0xA
  7051                           
  7052  007A                     ??_USBStdFeatureReqHandler:	
  7053                           ; 0 bytes @ 0xA
  7054                           
  7055  007A                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  7056                           ; 0 bytes @ 0xA
  7057                           
  7058  007A                     ??_store_key_level:	
  7059                           ; 0 bytes @ 0xA
  7060                           
  7061  007A                     ??_USBStdSetCfgHandler:	
  7062                           ; 0 bytes @ 0xA
  7063                           
  7064  007A                     store_key_level@level:	
  7065                           ; 0 bytes @ 0xA
  7066                           
  7067  007A                     USBStdSetCfgHandler@p:	
  7068                           ; 1 bytes @ 0xA
  7069                           
  7070                           
  7071                           ; 2 bytes @ 0xA
  7072  007A                     	ds	1
  7073  007B                     ?_scan_task:	
  7074  007B                     scan_task@velocity:	
  7075                           ; 1 bytes @ 0xB
  7076                           
  7077                           
  7078                           ; 1 bytes @ 0xB
  7079  007B                     	ds	1
  7080  007C                     ??_APP_DeviceAudioMIDITasks:	
  7081  007C                     ??_scan_task:	
  7082                           ; 0 bytes @ 0xC
  7083                           
  7084  007C                     USBStdSetCfgHandler@i_1928:	
  7085                           ; 0 bytes @ 0xC
  7086                           
  7087                           
  7088                           ; 1 bytes @ 0xC
  7089  007C                     	ds	1
  7090  007D                     USBStdSetCfgHandler@i:	
  7091                           
  7092                           ; 1 bytes @ 0xD
  7093  007D                     	ds	1
  7094  007E                     ??_USBCtrlTrfSetupHandler:	
  7095  007E                     ??_main:	
  7096                           ; 0 bytes @ 0xE
  7097                           
  7098                           
  7099                           	psect	cstackBANK0
  7100  0061                     __pcstackBANK0:	
  7101                           ; 0 bytes @ 0xE
  7102                           
  7103  0061                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  7104  0061                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  7105                           ; 1 bytes @ 0x0
  7106                           
  7107  0061                     _scan_task$863:	
  7108                           ; 2 bytes @ 0x0
  7109                           
  7110                           
  7111                           ; 2 bytes @ 0x0
  7112  0061                     	ds	2
  7113  0063                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  7114  0063                     _scan_task$867:	
  7115                           ; 1 bytes @ 0x2
  7116                           
  7117                           
  7118                           ; 2 bytes @ 0x2
  7119  0063                     	ds	1
  7120  0064                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  7121                           
  7122                           ; 2 bytes @ 0x3
  7123  0064                     	ds	1
  7124  0065                     scan_task@note:	
  7125                           
  7126                           ; 1 bytes @ 0x4
  7127  0065                     	ds	1
  7128  0066                     _APP_DeviceAudioMIDITasks$427:	
  7129  0066                     USBStdFeatureReqHandler@pUEP:	
  7130                           ; 2 bytes @ 0x5
  7131                           
  7132                           
  7133                           ; 2 bytes @ 0x5
  7134  0066                     	ds	2
  7135  0068                     USBStdFeatureReqHandler@current_ep_data:	
  7136  0068                     _APP_DeviceAudioMIDITasks$466:	
  7137                           ; 1 bytes @ 0x7
  7138                           
  7139                           
  7140                           ; 2 bytes @ 0x7
  7141  0068                     	ds	1
  7142  0069                     USBStdFeatureReqHandler@p:	
  7143                           
  7144                           ; 1 bytes @ 0x8
  7145  0069                     	ds	1
  7146  006A                     ??_USBCheckStdRequest:	
  7147  006A                     _APP_DeviceAudioMIDITasks$467:	
  7148                           ; 0 bytes @ 0x9
  7149                           
  7150                           
  7151                           ; 2 bytes @ 0x9
  7152  006A                     	ds	1
  7153  006B                     ??_USBCtrlEPService:	
  7154                           
  7155                           ; 0 bytes @ 0xA
  7156  006B                     	ds	1
  7157  006C                     APP_DeviceAudioMIDITasks@scan_pitch:	
  7158                           
  7159                           ; 1 bytes @ 0xB
  7160  006C                     	ds	1
  7161  006D                     APP_DeviceAudioMIDITasks@velocity:	
  7162  006D                     USBCtrlEPService@setup_cnt:	
  7163                           ; 1 bytes @ 0xC
  7164                           
  7165                           
  7166                           ; 1 bytes @ 0xC
  7167  006D                     	ds	1
  7168  006E                     ??_USBDeviceTasks:	
  7169                           
  7170                           ; 0 bytes @ 0xD
  7171  006E                     	ds	1
  7172  006F                     USBDeviceTasks@i:	
  7173                           
  7174                           ; 1 bytes @ 0xE
  7175  006F                     	ds	1
  7176                           
  7177                           	psect	text7
  7178  0DF4                     __ptext7:	
  7179 ;; *************** function _USBCtrlTrfSetupHandler *****************
  7180 ;; Defined at:
  7181 ;;		line 2469 in file "../../../../../../framework/usb/src/usb_device.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;		None
  7184 ;; Auto vars:     Size  Location     Type
  7185 ;;		None
  7186 ;; Return value:  Size  Location     Type
  7187 ;;		None               void
  7188 ;; Registers used:
  7189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7190 ;; Tracked objects:
  7191 ;;		On entry : 1F/0
  7192 ;;		On exit  : 1E/0
  7193 ;;		Unchanged: 0/0
  7194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7199 ;;Total ram usage:        0 bytes
  7200 ;; Hardware stack levels used:    1
  7201 ;; Hardware stack levels required when called:    7
  7202 ;; This function calls:
  7203 ;;		_USBCheckStdRequest
  7204 ;;		_USBCtrlEPServiceComplete
  7205 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7206 ;; This function is called by:
  7207 ;;		_USBCtrlEPService
  7208 ;; This function uses a non-reentrant model
  7209 ;;
  7210                           
  7211                           
  7212                           ;psect for function _USBCtrlTrfSetupHandler
  7213  0DF4                     _USBCtrlTrfSetupHandler:	
  7214  0DF4                     l3274:	
  7215                           ;incstack = 0
  7216                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7217                           
  7218                           
  7219                           ;usb_device.c: 2474: shortPacketStatus = 0;
  7220  0DF4  0021               	movlb	1	; select bank1
  7221  0DF5  01EC               	clrf	_shortPacketStatus^(0+128)
  7222                           
  7223                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
  7224  0DF6  0020               	movlb	0	; select bank0
  7225  0DF7  01D4               	clrf	_USBDeferStatusStagePacket	;volatile
  7226                           
  7227                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
  7228  0DF8  0021               	movlb	1	; select bank1
  7229  0DF9  01E0               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  7230                           
  7231                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
  7232  0DFA  01E1               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  7233                           
  7234                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
  7235  0DFB  0022               	movlb	2	; select bank2
  7236  0DFC  01CF               	clrf	_BothEP0OutUOWNsSet^(0+256)
  7237                           
  7238                           ;usb_device.c: 2479: controlTransferState = 0;
  7239  0DFD  0020               	movlb	0	; select bank0
  7240  0DFE  01D7               	clrf	_controlTransferState
  7241                           
  7242                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  7243  0DFF  0852               	movf	_pBDTEntryIn,w
  7244  0E00  0086               	movwf	6
  7245  0E01  3004               	movlw	4
  7246  0E02  0187               	clrf	7
  7247  0E03  1381               	bcf	1,7
  7248                           
  7249                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  7250  0E04  06D2               	xorwf	_pBDTEntryIn,f
  7251                           
  7252                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  7253  0E05  0852               	movf	_pBDTEntryIn,w
  7254  0E06  0086               	movwf	6
  7255  0E07  3004               	movlw	4
  7256  0E08  1381               	bcf	1,7
  7257                           
  7258                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  7259  0E09  06D2               	xorwf	_pBDTEntryIn,f
  7260                           
  7261                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  7262  0E0A  0859               	movf	_pBDTEntryEP0OutNext,w
  7263  0E0B  0086               	movwf	6
  7264  0E0C  1381               	bcf	1,7
  7265                           
  7266                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
  7267  0E0D  01DD               	clrf	_inPipes+2
  7268                           
  7269                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
  7270  0E0E  01DE               	clrf	_inPipes+3
  7271  0E0F  01DF               	clrf	_inPipes+4
  7272                           
  7273                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
  7274  0E10  0022               	movlb	2	; select bank2
  7275  0E11  01C2               	clrf	(_outPipes^(0+256)+2)
  7276                           
  7277                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
  7278  0E12  01C3               	clrf	(_outPipes^(0+256)+3)
  7279  0E13  01C4               	clrf	((_outPipes+1)^(0+256)+3)
  7280                           
  7281                           ;usb_device.c: 2503: USBCheckStdRequest();
  7282  0E14  2620               	fcall	_USBCheckStdRequest
  7283                           
  7284                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  7285  0E15  3003               	movlw	3
  7286  0E16  0020               	movlb	0	; select bank0
  7287  0E17  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7288  0E18  01E2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7289  0E19  01E3               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7290  0E1A  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7291  0E1B  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7292  0E1C  3184  24F9  318D   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7293                           
  7294                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
  7295  0E1F  2F61               	ljmp	l3052
  7296  0E20                     __end_of_USBCtrlTrfSetupHandler:	
  7297  0E20                     __ptext10:	
  7298 ;; *************** function _USBCheckStdRequest *****************
  7299 ;; Defined at:
  7300 ;;		line 2689 in file "../../../../../../framework/usb/src/usb_device.c"
  7301 ;; Parameters:    Size  Location     Type
  7302 ;;		None
  7303 ;; Auto vars:     Size  Location     Type
  7304 ;;		None
  7305 ;; Return value:  Size  Location     Type
  7306 ;;		None               void
  7307 ;; Registers used:
  7308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7309 ;; Tracked objects:
  7310 ;;		On entry : 1F/2
  7311 ;;		On exit  : 0/0
  7312 ;;		Unchanged: 0/0
  7313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7316 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7317 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7318 ;;Total ram usage:        1 bytes
  7319 ;; Hardware stack levels used:    1
  7320 ;; Hardware stack levels required when called:    6
  7321 ;; This function calls:
  7322 ;;		_USBStdFeatureReqHandler
  7323 ;;		_USBStdGetDscHandler
  7324 ;;		_USBStdGetStatusHandler
  7325 ;;		_USBStdSetCfgHandler
  7326 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7327 ;; This function is called by:
  7328 ;;		_USBCtrlTrfSetupHandler
  7329 ;; This function uses a non-reentrant model
  7330 ;;
  7331                           
  7332                           
  7333                           ;psect for function _USBCheckStdRequest
  7334  0E20                     _USBCheckStdRequest:	
  7335                           
  7336                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
  7337                           
  7338                           ;incstack = 0
  7339                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7340  0E20  0020               	movlb	0	; select bank0
  7341  0E21  0E40               	swapf	64,w	;volatile
  7342  0E22  0C89               	rrf	9,f
  7343  0E23  3903               	andlw	3
  7344  0E24  1D03               	btfss	3,2
  7345  0E25  0008               	return
  7346                           
  7347                           ;usb_device.c: 2731: break;
  7348  0E26  0841               	movf	65,w	;volatile
  7349                           
  7350                           ; Switch size 1, requested type "speed"
  7351                           ; Number of cases is 11, Range of values is 0 to 12
  7352                           ; switch strategies available:
  7353                           ; Name         Instructions Cycles
  7354                           ; direct_byte           32     6 (fixed)
  7355                           ; simple_byte           34    18 (average)
  7356                           ; jumptable            260     6 (fixed)
  7357                           ;	Chosen strategy is direct_byte
  7358  0E27  0084               	movwf	4
  7359  0E28  300D               	movlw	13
  7360  0E29  0204               	subwf	4,w
  7361  0E2A  1803               	skipnc
  7362  0E2B  0008               	return
  7363  0E2C  3189               	movlp	high S3978
  7364  0E2D  3504               	lslf	4,w
  7365  0E2E  3E00               	addlw	low S3978
  7366  0E2F  0082               	movwf	2
  7367  0E30                     l733:	
  7368  0E30  0008               	return
  7369  0E31                     l735:	
  7370                           ;usb_device.c: 2694: {
  7371                           ;usb_device.c: 2695: case 5:
  7372                           
  7373  0E31  3008               	movlw	8
  7374                           
  7375                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
  7376  0E32  17DD               	bsf	_inPipes+2,7
  7377                           
  7378                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
  7379  0E33  00D5               	movwf	_USBDeviceState
  7380                           
  7381                           ;usb_device.c: 2699: break;
  7382  0E34  0008               	return
  7383  0E35                     l3156:	
  7384                           
  7385                           ;usb_device.c: 2701: USBStdGetDscHandler();
  7386  0E35  2E5A               	ljmp	l2896
  7387  0E36                     l3158:	
  7388                           ;usb_device.c: 2702: break;
  7389                           
  7390                           
  7391                           ;usb_device.c: 2704: USBStdSetCfgHandler();
  7392  0E36  2EFB               	ljmp	l2844
  7393  0E37                     l3160:	
  7394                           ;usb_device.c: 2705: break;
  7395                           
  7396                           
  7397                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  7398  0E37  30EE               	movlw	low _USBActiveConfiguration
  7399  0E38  00DB               	movwf	_inPipes
  7400  0E39  3000               	movlw	high _USBActiveConfiguration
  7401  0E3A  00DC               	movwf	_inPipes+1
  7402  0E3B                     l3162:	
  7403                           
  7404                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7405  0E3B  145D               	bsf	_inPipes+2,0
  7406                           
  7407                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
  7408  0E3C  01DE               	clrf	_inPipes+3
  7409  0E3D  0ADE               	incf	_inPipes+3,f
  7410                           
  7411                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  7412  0E3E  17DD               	bsf	_inPipes+2,7
  7413                           
  7414                           ;usb_device.c: 2711: break;
  7415  0E3F  0008               	return
  7416  0E40                     l3168:	
  7417                           
  7418                           ;usb_device.c: 2713: USBStdGetStatusHandler();
  7419  0E40  2EBD               	ljmp	l2926
  7420  0E41                     l3170:	
  7421                           ;usb_device.c: 2714: break;
  7422                           
  7423                           
  7424                           ;usb_device.c: 2716: case 3:
  7425                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
  7426  0E41  3183  2B76         	ljmp	l2954
  7427  0E43                     l3172:	
  7428                           ;usb_device.c: 2718: break;
  7429                           
  7430                           
  7431                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  7432  0E43  30EF               	movlw	(low (_USBAlternateInterface| 0))& (0+255)
  7433  0E44  0744               	addwf	68,w	;volatile
  7434  0E45  00EA               	movwf	??_USBCheckStdRequest
  7435  0E46  00DB               	movwf	_inPipes
  7436  0E47  3000               	movlw	0
  7437  0E48  01DC               	clrf	_inPipes+1
  7438  0E49  2E3B               	goto	l3162
  7439  0E4A                     l744:	
  7440                           ;usb_device.c: 2725: case 11:
  7441                           
  7442                           
  7443                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
  7444  0E4A  17DD               	bsf	_inPipes+2,7
  7445                           
  7446                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  7447  0E4B  0844               	movf	68,w	;volatile
  7448  0E4C  3EEF               	addlw	(low (_USBAlternateInterface| 0))& (0+255)
  7449  0E4D  0086               	movwf	6
  7450  0E4E  0187               	clrf	7
  7451  0E4F  0842               	movf	66,w	;volatile
  7452  0E50  0081               	movwf	1
  7453                           
  7454                           ;usb_device.c: 2728: break;
  7455  0E51  0008               	return
  7456  0E52                     l3182:	
  7457                           
  7458                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  7459  0E52  3002               	movlw	2
  7460  0E53  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7461  0E54  01E2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7462  0E55  01E3               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7463  0E56  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7464  0E57  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7465  0E58  3184  2CF9         	ljmp	l2702
  7466  0E5A                     __end_of_USBCheckStdRequest:	
  7467  0E5A                     __ptext14:	
  7468 ;; *************** function _USBStdGetDscHandler *****************
  7469 ;; Defined at:
  7470 ;;		line 2043 in file "../../../../../../framework/usb/src/usb_device.c"
  7471 ;; Parameters:    Size  Location     Type
  7472 ;;		None
  7473 ;; Auto vars:     Size  Location     Type
  7474 ;;		None
  7475 ;; Return value:  Size  Location     Type
  7476 ;;		None               void
  7477 ;; Registers used:
  7478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7479 ;; Tracked objects:
  7480 ;;		On entry : 1D/0
  7481 ;;		On exit  : 1F/0
  7482 ;;		Unchanged: 0/0
  7483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7486 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7487 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7488 ;;Total ram usage:        3 bytes
  7489 ;; Hardware stack levels used:    1
  7490 ;; Hardware stack levels required when called:    1
  7491 ;; This function calls:
  7492 ;;		Nothing
  7493 ;; This function is called by:
  7494 ;;		_USBCheckStdRequest
  7495 ;; This function uses a non-reentrant model
  7496 ;;
  7497                           
  7498                           
  7499                           ;psect for function _USBStdGetDscHandler
  7500  0E5A                     _USBStdGetDscHandler:	
  7501  0E5A                     l2896:	
  7502                           ;incstack = 0
  7503                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  7504                           
  7505                           
  7506                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  7507  0E5A  3080               	movlw	128
  7508  0E5B  0020               	movlb	0	; select bank0
  7509  0E5C  0640               	xorwf	64,w	;volatile
  7510  0E5D  1D03               	btfss	3,2
  7511  0E5E  0008               	return
  7512                           
  7513                           ;usb_device.c: 2046: {
  7514                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  7515  0E5F  30C0               	movlw	192
  7516  0E60  00DD               	movwf	_inPipes+2
  7517                           
  7518                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  7519  0E61  2EB1               	goto	l2924
  7520  0E62                     l2900:	
  7521                           
  7522                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  7523  0E62  30BB               	movlw	low (_device_dsc| (0+32768))
  7524  0E63  00DB               	movwf	_inPipes
  7525  0E64  3090               	movlw	high (_device_dsc| (0+32768))
  7526  0E65  00DC               	movwf	_inPipes+1
  7527                           
  7528                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  7529  0E66  3012               	movlw	18
  7530  0E67  00DE               	movwf	_inPipes+3
  7531  0E68  01DF               	clrf	_inPipes+4
  7532                           
  7533                           ;usb_device.c: 2058: break;
  7534  0E69  0008               	return
  7535  0E6A                     l2902:	
  7536                           
  7537                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  7538  0E6A  0842               	movf	66,w	;volatile
  7539  0E6B  1D03               	btfss	3,2
  7540  0E6C  2E94               	goto	l2910
  7541                           
  7542                           ;usb_device.c: 2064: {
  7543                           ;usb_device.c: 2066: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  7544  0E6D  0842               	movf	66,w	;volatile
  7545  0E6E  00F0               	movwf	??_USBStdGetDscHandler
  7546  0E6F  3006               	movlw	low (_USB_CD_Ptr| (0+32768))
  7547  0E70  01F1               	clrf	??_USBStdGetDscHandler+1
  7548  0E71  35F0               	lslf	??_USBStdGetDscHandler,f
  7549  0E72  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  7550  0E73  0770               	addwf	??_USBStdGetDscHandler,w
  7551  0E74  0084               	movwf	4
  7552  0E75  3090               	movlw	high (_USB_CD_Ptr| (0+32768))
  7553  0E76  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  7554  0E77  0085               	movwf	5
  7555  0E78  3F00               	moviw [0]fsr0
  7556  0E79  00DB               	movwf	_inPipes
  7557  0E7A  3F01               	moviw [1]fsr0
  7558  0E7B  00DC               	movwf	_inPipes+1
  7559                           
  7560                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  7561  0E7C  00F1               	movwf	??_USBStdGetDscHandler+1
  7562  0E7D  085B               	movf	_inPipes,w
  7563  0E7E  00F0               	movwf	??_USBStdGetDscHandler
  7564  0E7F  3E02               	addlw	2
  7565  0E80  0084               	movwf	4
  7566  0E81  0871               	movf	??_USBStdGetDscHandler+1,w
  7567  0E82  1803               	skipnc
  7568  0E83  0A71               	incf	??_USBStdGetDscHandler+1,w
  7569  0E84  0085               	movwf	5
  7570  0E85  0800               	movf	0,w	;code access
  7571  0E86  00DE               	movwf	_inPipes+3
  7572                           
  7573                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  7574  0E87  085C               	movf	_inPipes+1,w
  7575  0E88  00F1               	movwf	??_USBStdGetDscHandler+1
  7576  0E89  085B               	movf	_inPipes,w
  7577  0E8A  00F0               	movwf	??_USBStdGetDscHandler
  7578  0E8B  3E03               	addlw	3
  7579  0E8C  0084               	movwf	4
  7580  0E8D  0871               	movf	??_USBStdGetDscHandler+1,w
  7581  0E8E  1803               	skipnc
  7582  0E8F  0A71               	incf	??_USBStdGetDscHandler+1,w
  7583  0E90  0085               	movwf	5
  7584  0E91  0800               	movf	0,w	;code access
  7585  0E92  00DF               	movwf	_inPipes+4
  7586                           
  7587                           ;usb_device.c: 2076: }
  7588  0E93  0008               	return
  7589  0E94                     l2910:	
  7590                           
  7591                           ;usb_device.c: 2077: else
  7592                           ;usb_device.c: 2078: {
  7593                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  7594  0E94  01DD               	clrf	_inPipes+2
  7595  0E95  0008               	return
  7596  0E96                     l2912:	
  7597                           
  7598                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  7599  0E96  3003               	movlw	3
  7600  0E97  0242               	subwf	66,w	;volatile
  7601  0E98  1803               	skipnc
  7602  0E99  2E94               	goto	l2910
  7603                           
  7604                           ;usb_device.c: 2087: {
  7605                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  7606  0E9A  0842               	movf	66,w	;volatile
  7607  0E9B  00F0               	movwf	??_USBStdGetDscHandler
  7608  0E9C  3000               	movlw	low (_USB_SD_Ptr| (0+32768))
  7609  0E9D  01F1               	clrf	??_USBStdGetDscHandler+1
  7610  0E9E  35F0               	lslf	??_USBStdGetDscHandler,f
  7611  0E9F  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  7612  0EA0  0770               	addwf	??_USBStdGetDscHandler,w
  7613  0EA1  0084               	movwf	4
  7614  0EA2  3090               	movlw	high (_USB_SD_Ptr| (0+32768))
  7615  0EA3  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  7616  0EA4  0085               	movwf	5
  7617  0EA5  3F00               	moviw [0]fsr0
  7618  0EA6  00DB               	movwf	_inPipes
  7619  0EA7  3F01               	moviw [1]fsr0
  7620  0EA8  00DC               	movwf	_inPipes+1
  7621                           
  7622                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  7623  0EA9  085B               	movf	_inPipes,w
  7624  0EAA  0084               	movwf	4
  7625  0EAB  085C               	movf	_inPipes+1,w
  7626  0EAC  0085               	movwf	5
  7627  0EAD  0800               	movf	0,w	;code access
  7628  0EAE  00DE               	movwf	_inPipes+3
  7629  0EAF  01DF               	clrf	_inPipes+4
  7630                           
  7631                           ;usb_device.c: 2092: }
  7632  0EB0  0008               	return
  7633  0EB1                     l2924:	
  7634  0EB1  0843               	movf	67,w	;volatile
  7635                           
  7636                           ; Switch size 1, requested type "speed"
  7637                           ; Number of cases is 3, Range of values is 1 to 3
  7638                           ; switch strategies available:
  7639                           ; Name         Instructions Cycles
  7640                           ; simple_byte           10     6 (average)
  7641                           ; direct_byte           15     9 (fixed)
  7642                           ; jumptable            263     9 (fixed)
  7643                           ;	Chosen strategy is simple_byte
  7644  0EB2  3A01               	xorlw	1	; case 1
  7645  0EB3  1903               	skipnz
  7646  0EB4  2E62               	goto	l2900
  7647  0EB5  3A03               	xorlw	3	; case 2
  7648  0EB6  1903               	skipnz
  7649  0EB7  2E6A               	goto	l2902
  7650  0EB8  3A01               	xorlw	1	; case 3
  7651  0EB9  1903               	skipnz
  7652  0EBA  2E96               	goto	l2912
  7653  0EBB  2E94               	goto	l2910
  7654  0EBC  0008               	return
  7655  0EBD                     __end_of_USBStdGetDscHandler:	
  7656  0EBD                     __ptext13:	
  7657 ;; *************** function _USBStdGetStatusHandler *****************
  7658 ;; Defined at:
  7659 ;;		line 2129 in file "../../../../../../framework/usb/src/usb_device.c"
  7660 ;; Parameters:    Size  Location     Type
  7661 ;;		None
  7662 ;; Auto vars:     Size  Location     Type
  7663 ;;  p               1    0[COMMON] PTR struct __BDT
  7664 ;;		 -> BDT(32), NULL(0), 
  7665 ;; Return value:  Size  Location     Type
  7666 ;;		None               void
  7667 ;; Registers used:
  7668 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7669 ;; Tracked objects:
  7670 ;;		On entry : 1D/0
  7671 ;;		On exit  : 1F/0
  7672 ;;		Unchanged: 0/0
  7673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7675 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7677 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7678 ;;Total ram usage:        1 bytes
  7679 ;; Hardware stack levels used:    1
  7680 ;; Hardware stack levels required when called:    1
  7681 ;; This function calls:
  7682 ;;		Nothing
  7683 ;; This function is called by:
  7684 ;;		_USBCheckStdRequest
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688                           
  7689                           ;psect for function _USBStdGetStatusHandler
  7690  0EBD                     _USBStdGetStatusHandler:	
  7691  0EBD                     l2926:	
  7692                           ;incstack = 0
  7693                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  7694                           
  7695                           
  7696                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  7697  0EBD  0020               	movlb	0	; select bank0
  7698  0EBE  01C8               	clrf	72	;volatile
  7699                           
  7700                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  7701  0EBF  01C9               	clrf	73	;volatile
  7702                           
  7703                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  7704  0EC0  2EE6               	goto	l2946
  7705  0EC1                     l671:	
  7706                           ;usb_device.c: 2135: {
  7707                           ;usb_device.c: 2136: case (0x00):
  7708                           
  7709                           
  7710                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  7711  0EC1  17DD               	bsf	_inPipes+2,7
  7712                           
  7713                           ;usb_device.c: 2145: }
  7714                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  7715                           
  7716                           ;usb_device.c: 2142: if(0 == 1)
  7717  0EC2  0022               	movlb	2	; select bank2
  7718  0EC3  0B50               	decfsz	_RemoteWakeup^(0+256),w
  7719  0EC4  2EF1               	goto	l674
  7720                           
  7721                           ;usb_device.c: 2148: {
  7722                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  7723  0EC5  0020               	movlb	0	; select bank0
  7724  0EC6  14C8               	bsf	72,1	;volatile
  7725  0EC7  2EF1               	goto	l674
  7726  0EC8                     l675:	
  7727                           ;usb_device.c: 2152: case (0x01):
  7728                           
  7729                           
  7730                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  7731  0EC8  17DD               	bsf	_inPipes+2,7
  7732                           
  7733                           ;usb_device.c: 2154: break;
  7734  0EC9  2EF1               	goto	l674
  7735  0ECA                     l676:	
  7736                           ;usb_device.c: 2155: case (0x02):
  7737                           
  7738                           
  7739                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  7740  0ECA  17DD               	bsf	_inPipes+2,7
  7741                           
  7742                           ;usb_device.c: 2160: {
  7743                           ;usb_device.c: 2161: BDT_ENTRY *p;
  7744                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  7745  0ECB  1BC4               	btfsc	68,7	;volatile
  7746  0ECC  2ED4               	goto	l2936
  7747                           
  7748                           ;usb_device.c: 2164: {
  7749                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7750  0ECD  0844               	movf	68,w	;volatile
  7751  0ECE  390F               	andlw	15
  7752  0ECF  3E4D               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7753  0ED0  0086               	movwf	6
  7754  0ED1  3001               	movlw	1	; select bank2/3
  7755  0ED2  0087               	movwf	7
  7756  0ED3  2ED9               	goto	L2
  7757  0ED4                     l2936:	
  7758                           ;usb_device.c: 2166: }
  7759                           
  7760                           
  7761                           ;usb_device.c: 2167: else
  7762                           ;usb_device.c: 2168: {
  7763                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7764  0ED4  0844               	movf	68,w	;volatile
  7765  0ED5  390F               	andlw	15
  7766  0ED6  3E52               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  7767  0ED7  0086               	movwf	6
  7768  0ED8  0187               	clrf	7
  7769  0ED9                     L2:	
  7770  0ED9  0801               	movf	1,w
  7771  0EDA  00F0               	movwf	USBStdGetStatusHandler@p
  7772                           
  7773                           ;usb_device.c: 2170: }
  7774                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  7775  0EDB  0086               	movwf	6
  7776  0EDC  0187               	clrf	7
  7777  0EDD  1F81               	btfss	1,7
  7778  0EDE  2EF1               	goto	l674
  7779  0EDF  0870               	movf	USBStdGetStatusHandler@p,w
  7780  0EE0  0086               	movwf	6
  7781  0EE1  1D01               	btfss	1,2
  7782  0EE2  2EF1               	goto	l674
  7783                           
  7784                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  7785  0EE3  3001               	movlw	1
  7786  0EE4  00C8               	movwf	72	;volatile
  7787  0EE5  2EF1               	goto	l674
  7788  0EE6                     l2946:	
  7789  0EE6  0840               	movf	64,w	;volatile
  7790  0EE7  391F               	andlw	31
  7791                           
  7792                           ; Switch size 1, requested type "speed"
  7793                           ; Number of cases is 3, Range of values is 0 to 2
  7794                           ; switch strategies available:
  7795                           ; Name         Instructions Cycles
  7796                           ; simple_byte           10     6 (average)
  7797                           ; direct_byte           12     6 (fixed)
  7798                           ; jumptable            260     6 (fixed)
  7799                           ;	Chosen strategy is simple_byte
  7800  0EE8  1903               	skipnz
  7801  0EE9  2EC1               	goto	l671
  7802  0EEA  3A01               	xorlw	1	; case 1
  7803  0EEB  1903               	skipnz
  7804  0EEC  2EC8               	goto	l675
  7805  0EED  3A03               	xorlw	3	; case 2
  7806  0EEE  1903               	skipnz
  7807  0EEF  2ECA               	goto	l676
  7808  0EF0  2EF1               	goto	l674
  7809  0EF1                     l674:	
  7810                           
  7811                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  7812  0EF1  0020               	movlb	0	; select bank0
  7813  0EF2  1FDD               	btfss	_inPipes+2,7
  7814  0EF3  0008               	return
  7815                           
  7816                           ;usb_device.c: 2179: {
  7817                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  7818  0EF4  3048               	movlw	72
  7819  0EF5  00DB               	movwf	_inPipes
  7820  0EF6  3002               	movlw	2
  7821  0EF7  01DC               	clrf	_inPipes+1
  7822                           
  7823                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7824  0EF8  145D               	bsf	_inPipes+2,0
  7825                           
  7826                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  7827  0EF9  00DE               	movwf	_inPipes+3
  7828  0EFA  0008               	return
  7829  0EFB                     __end_of_USBStdGetStatusHandler:	
  7830  0EFB                     __ptext11:	
  7831 ;; *************** function _USBStdSetCfgHandler *****************
  7832 ;; Defined at:
  7833 ;;		line 1968 in file "../../../../../../framework/usb/src/usb_device.c"
  7834 ;; Parameters:    Size  Location     Type
  7835 ;;		None
  7836 ;; Auto vars:     Size  Location     Type
  7837 ;;  p               2   10[COMMON] PTR unsigned char 
  7838 ;;		 -> UEP1(1), 
  7839 ;;  i               1   12[COMMON] unsigned char 
  7840 ;;  i               1   13[COMMON] unsigned char 
  7841 ;; Return value:  Size  Location     Type
  7842 ;;		None               void
  7843 ;; Registers used:
  7844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7845 ;; Tracked objects:
  7846 ;;		On entry : 1D/0
  7847 ;;		On exit  : 1F/0
  7848 ;;		Unchanged: 0/0
  7849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7851 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7853 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7854 ;;Total ram usage:        4 bytes
  7855 ;; Hardware stack levels used:    1
  7856 ;; Hardware stack levels required when called:    5
  7857 ;; This function calls:
  7858 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7859 ;;		_memset
  7860 ;; This function is called by:
  7861 ;;		_USBCheckStdRequest
  7862 ;; This function uses a non-reentrant model
  7863 ;;
  7864                           
  7865                           
  7866                           ;psect for function _USBStdSetCfgHandler
  7867  0EFB                     _USBStdSetCfgHandler:	
  7868  0EFB                     l2844:	
  7869                           ;incstack = 0
  7870                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7871                           
  7872                           
  7873                           ;usb_device.c: 1970: uint8_t i;
  7874                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  7875  0EFB  0020               	movlb	0	; select bank0
  7876  0EFC  300E               	movlw	14
  7877  0EFD  17DD               	bsf	_inPipes+2,7
  7878                           
  7879                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 
      +                          0; };
  7880  0EFE  00FB               	movwf	USBStdSetCfgHandler@p+1
  7881  0EFF  3099               	movlw	153
  7882  0F00  00FA               	movwf	USBStdSetCfgHandler@p
  7883  0F01  01FC               	clrf	USBStdSetCfgHandler@i_1928
  7884  0F02                     l2852:	
  7885  0F02  087A               	movf	USBStdSetCfgHandler@p,w
  7886  0F03  0086               	movwf	6
  7887  0F04  087B               	movf	USBStdSetCfgHandler@p+1,w
  7888  0F05  0087               	movwf	7
  7889  0F06  0181               	clrf	1
  7890  0F07  0AFA               	incf	USBStdSetCfgHandler@p,f
  7891  0F08  1903               	skipnz
  7892  0F09  0AFB               	incf	USBStdSetCfgHandler@p+1,f
  7893  0F0A  0AFC               	incf	USBStdSetCfgHandler@i_1928,f
  7894  0F0B  1903               	btfsc	3,2
  7895  0F0C  2F02               	goto	l2852
  7896  0F0D  3020               	movlw	32
  7897                           
  7898                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  7899  0F0E  01F0               	clrf	memset@c
  7900  0F0F  01F1               	clrf	memset@c+1
  7901  0F10  00F2               	movwf	memset@n
  7902  0F11  01F3               	clrf	memset@n+1
  7903  0F12  274F  318D         	fcall	_memset
  7904                           
  7905                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  7906  0F14  003D               	movlb	29	; select bank29
  7907  0F15  170E               	bsf	14,6	;volatile
  7908                           
  7909                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(1+1u); i++)
  7910  0F16  01FD               	clrf	USBStdSetCfgHandler@i
  7911  0F17                     l2870:	
  7912                           
  7913                           ;usb_device.c: 1988: {
  7914                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  7915  0F17  087D               	movf	USBStdSetCfgHandler@i,w
  7916  0F18  3E47               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7917  0F19  0086               	movwf	6
  7918  0F1A  3001               	movlw	1	; select bank2/3
  7919  0F1B  0087               	movwf	7
  7920  0F1C  0181               	clrf	1
  7921                           
  7922                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  7923  0F1D  087D               	movf	USBStdSetCfgHandler@i,w
  7924  0F1E  3E49               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7925  0F1F  0086               	movwf	6
  7926  0F20  3002               	movlw	2
  7927  0F21  0181               	clrf	1
  7928  0F22  0AFD               	incf	USBStdSetCfgHandler@i,f
  7929  0F23  027D               	subwf	USBStdSetCfgHandler@i,w
  7930  0F24  1C03               	skipc
  7931  0F25  2F17               	goto	l2870
  7932  0F26  30EF               	movlw	(low (_USBAlternateInterface| 0))& (0+255)
  7933                           
  7934                           ;usb_device.c: 1991: }
  7935                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,1);
  7936  0F27  01F0               	clrf	memset@c
  7937  0F28  01F1               	clrf	memset@c+1
  7938  0F29  01F2               	clrf	memset@n
  7939  0F2A  0AF2               	incf	memset@n,f
  7940  0F2B  01F3               	clrf	memset@n+1
  7941  0F2C  274F  318D         	fcall	_memset
  7942                           
  7943                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  7944  0F2E  003D               	movlb	29	; select bank29
  7945  0F2F  130E               	bcf	14,6	;volatile
  7946                           
  7947                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7948  0F30  3028               	movlw	40
  7949  0F31  0020               	movlb	0	; select bank0
  7950  0F32  00D2               	movwf	_pBDTEntryIn
  7951                           
  7952                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  7953  0F33  3020               	movlw	32
  7954  0F34  00D8               	movwf	_pBDTEntryEP0OutCurrent
  7955                           
  7956                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  7957  0F35  00D9               	movwf	_pBDTEntryEP0OutNext
  7958                           
  7959                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  7960  0F36  0842               	movf	66,w	;volatile
  7961  0F37  0021               	movlb	1	; select bank1
  7962  0F38  00EE               	movwf	_USBActiveConfiguration^(0+128)
  7963                           
  7964                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  7965  0F39  086E               	movf	_USBActiveConfiguration^(0+128),w
  7966  0F3A  1D03               	btfss	3,2
  7967  0F3B  2F40               	goto	l2892
  7968                           
  7969                           ;usb_device.c: 2010: {
  7970                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  7971  0F3C  3010               	movlw	16
  7972  0F3D  0020               	movlb	0	; select bank0
  7973  0F3E  00D5               	movwf	_USBDeviceState
  7974                           
  7975                           ;usb_device.c: 2013: }
  7976  0F3F  0008               	return
  7977  0F40                     l2892:	
  7978                           
  7979                           ;usb_device.c: 2014: else
  7980                           ;usb_device.c: 2015: {
  7981                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  7982  0F40  0020               	movlb	0	; select bank0
  7983  0F41  30EE               	movlw	(low (_USBActiveConfiguration| 0))& (0+255)
  7984  0F42  01E1               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7985  0F43  0AE1               	incf	USER_USB_CALLBACK_EVENT_HANDLER@event,f
  7986  0F44  01E2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7987  0F45  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7988  0F46  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7989  0F47  0AE4               	incf	USER_USB_CALLBACK_EVENT_HANDLER@size,f
  7990  0F48  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7991  0F49  3184  24F9         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7992                           
  7993                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  7994  0F4B  3020               	movlw	32
  7995  0F4C  0020               	movlb	0	; select bank0
  7996  0F4D  00D5               	movwf	_USBDeviceState
  7997  0F4E  0008               	return
  7998  0F4F                     __end_of_USBStdSetCfgHandler:	
  7999  0F4F                     __ptext12:	
  8000 ;; *************** function _memset *****************
  8001 ;; Defined at:
  8002 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\memset.c"
  8003 ;; Parameters:    Size  Location     Type
  8004 ;;  p1              1    wreg     PTR void 
  8005 ;;		 -> USBAlternateInterface(1), BDT(32), 
  8006 ;;  c               2    0[COMMON] int 
  8007 ;;  n               2    2[COMMON] unsigned int 
  8008 ;; Auto vars:     Size  Location     Type
  8009 ;;  p1              1    5[COMMON] PTR void 
  8010 ;;		 -> USBAlternateInterface(1), BDT(32), 
  8011 ;;  p               1    4[COMMON] PTR unsigned char 
  8012 ;;		 -> USBAlternateInterface(1), BDT(32), 
  8013 ;; Return value:  Size  Location     Type
  8014 ;;                  1    wreg      PTR void 
  8015 ;; Registers used:
  8016 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8017 ;; Tracked objects:
  8018 ;;		On entry : 2/0
  8019 ;;		On exit  : 2/0
  8020 ;;		Unchanged: 2/0
  8021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8022 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8023 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8025 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8026 ;;Total ram usage:        6 bytes
  8027 ;; Hardware stack levels used:    1
  8028 ;; Hardware stack levels required when called:    1
  8029 ;; This function calls:
  8030 ;;		Nothing
  8031 ;; This function is called by:
  8032 ;;		_USBStdSetCfgHandler
  8033 ;; This function uses a non-reentrant model
  8034 ;;
  8035                           
  8036                           
  8037                           ;psect for function _memset
  8038  0F4F                     _memset:	
  8039                           
  8040                           ;incstack = 0
  8041                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  8042                           ;memset@p1 stored from wreg
  8043  0F4F  00F5               	movwf	memset@p1
  8044  0F50  00F4               	movwf	memset@p
  8045  0F51                     l2782:	
  8046  0F51  3001               	movlw	1
  8047  0F52  02F2               	subwf	memset@n,f
  8048  0F53  3000               	movlw	0
  8049  0F54  3BF3               	subwfb	memset@n+1,f
  8050  0F55  0F72               	incfsz	memset@n,w
  8051  0F56  2F5A               	goto	l2778
  8052  0F57  0A73               	incf	memset@n+1,w
  8053  0F58  1903               	btfsc	3,2
  8054  0F59  0008               	return
  8055  0F5A                     l2778:	
  8056  0F5A  0874               	movf	memset@p,w
  8057  0F5B  0086               	movwf	6
  8058  0F5C  0187               	clrf	7
  8059  0F5D  0870               	movf	memset@c,w
  8060  0F5E  0081               	movwf	1
  8061  0F5F  0AF4               	incf	memset@p,f
  8062  0F60  2F51               	goto	l2782
  8063  0F61                     __end_of_memset:	
  8064  0F61                     __ptext8:	
  8065 ;; *************** function _USBCtrlEPServiceComplete *****************
  8066 ;; Defined at:
  8067 ;;		line 1616 in file "../../../../../../framework/usb/src/usb_device.c"
  8068 ;; Parameters:    Size  Location     Type
  8069 ;;		None
  8070 ;; Auto vars:     Size  Location     Type
  8071 ;;		None
  8072 ;; Return value:  Size  Location     Type
  8073 ;;		None               void
  8074 ;; Registers used:
  8075 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8076 ;; Tracked objects:
  8077 ;;		On entry : 0/2
  8078 ;;		On exit  : 1E/0
  8079 ;;		Unchanged: 0/0
  8080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8083 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8084 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8085 ;;Total ram usage:        2 bytes
  8086 ;; Hardware stack levels used:    1
  8087 ;; Hardware stack levels required when called:    3
  8088 ;; This function calls:
  8089 ;;		_USBCtrlEPAllowDataStage
  8090 ;;		_USBCtrlEPAllowStatusStage
  8091 ;; This function is called by:
  8092 ;;		_USBCtrlTrfSetupHandler
  8093 ;; This function uses a non-reentrant model
  8094 ;;
  8095                           
  8096                           
  8097                           ;psect for function _USBCtrlEPServiceComplete
  8098  0F61                     _USBCtrlEPServiceComplete:	
  8099  0F61                     l3052:	
  8100                           ;incstack = 0
  8101                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8102                           
  8103                           
  8104                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  8105  0F61  003D               	movlb	29	; select bank29
  8106  0F62  120E               	bcf	14,4	;volatile
  8107                           
  8108                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  8109  0F63  0020               	movlb	0	; select bank0
  8110  0F64  1BDD               	btfsc	_inPipes+2,7
  8111  0F65  2F94               	goto	l606
  8112                           
  8113                           ;usb_device.c: 1629: {
  8114                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  8115  0F66  0022               	movlb	2	; select bank2
  8116  0F67  1FC2               	btfss	(_outPipes^(0+256)+2),7
  8117  0F68  2F75               	goto	l3066
  8118                           
  8119                           ;usb_device.c: 1631: {
  8120                           ;usb_device.c: 1632: controlTransferState = 2;
  8121  0F69  3002               	movlw	2
  8122  0F6A  0020               	movlb	0	; select bank0
  8123  0F6B  00D7               	movwf	_controlTransferState
  8124                           
  8125                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  8126  0F6C  0021               	movlb	1	; select bank1
  8127  0F6D  0861               	movf	_USBDeferOUTDataStagePackets^(0+128),w	;volatile
  8128  0F6E  1D03               	btfss	3,2
  8129  0F6F  2F71               	goto	l3062
  8130                           
  8131                           ;usb_device.c: 1644: {
  8132                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  8133  0F70  27C0               	fcall	_USBCtrlEPAllowDataStage
  8134  0F71                     l3062:	
  8135                           
  8136                           ;usb_device.c: 1646: }
  8137                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  8138  0F71  0021               	movlb	1	; select bank1
  8139  0F72  01E4               	clrf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  8140                           
  8141                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  8142  0F73  01E3               	clrf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  8143                           
  8144                           ;usb_device.c: 1652: }
  8145  0F74  0008               	return
  8146  0F75                     l3066:	
  8147                           
  8148                           ;usb_device.c: 1653: else
  8149                           ;usb_device.c: 1654: {
  8150                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  8151  0F75  0020               	movlb	0	; select bank0
  8152  0F76  0A59               	incf	_pBDTEntryEP0OutNext,w
  8153  0F77  0086               	movwf	6
  8154  0F78  3008               	movlw	8
  8155  0F79  0187               	clrf	7
  8156  0F7A  0081               	movwf	1
  8157                           
  8158                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8159  0F7B  3040               	movlw	64
  8160  0F7C  00F3               	movwf	??_USBCtrlEPServiceComplete
  8161  0F7D  01F4               	clrf	??_USBCtrlEPServiceComplete+1
  8162  0F7E  0859               	movf	_pBDTEntryEP0OutNext,w
  8163  0F7F  3E02               	addlw	2
  8164  0F80  0086               	movwf	6
  8165  0F81  0873               	movf	??_USBCtrlEPServiceComplete,w
  8166  0F82  3FC0               	movwi [0]fsr1
  8167  0F83  0874               	movf	??_USBCtrlEPServiceComplete+1,w
  8168  0F84  3FC1               	movwi [1]fsr1
  8169                           
  8170                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8171  0F85  0859               	movf	_pBDTEntryEP0OutNext,w
  8172  0F86  0086               	movwf	6
  8173  0F87  300C               	movlw	12
  8174  0F88  0081               	movwf	1
  8175                           
  8176                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8177  0F89  0859               	movf	_pBDTEntryEP0OutNext,w
  8178  0F8A  0086               	movwf	6
  8179  0F8B  1781               	bsf	1,7
  8180                           
  8181                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  8182  0F8C  0852               	movf	_pBDTEntryIn,w
  8183  0F8D  0086               	movwf	6
  8184  0F8E  3004               	movlw	4
  8185  0F8F  0081               	movwf	1
  8186                           
  8187                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8188  0F90  0852               	movf	_pBDTEntryIn,w
  8189  0F91  0086               	movwf	6
  8190  0F92  1781               	bsf	1,7
  8191  0F93  0008               	return
  8192  0F94                     l606:	
  8193                           
  8194                           ;usb_device.c: 1667: else
  8195                           ;usb_device.c: 1668: {
  8196                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  8197  0F94  1FC0               	btfss	64,7	;volatile
  8198  0F95  2FA7               	goto	l3092
  8199                           
  8200                           ;usb_device.c: 1670: {
  8201                           ;usb_device.c: 1671: controlTransferState = 1;
  8202  0F96  01D7               	clrf	_controlTransferState
  8203  0F97  0AD7               	incf	_controlTransferState,f
  8204                           
  8205                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  8206  0F98  0021               	movlb	1	; select bank1
  8207  0F99  0860               	movf	_USBDeferINDataStagePackets^(0+128),w	;volatile
  8208  0F9A  1D03               	btfss	3,2
  8209  0F9B  2F9E               	goto	l3084
  8210                           
  8211                           ;usb_device.c: 1686: {
  8212                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  8213  0F9C  27C0  318D         	fcall	_USBCtrlEPAllowDataStage
  8214  0F9E                     l3084:	
  8215                           
  8216                           ;usb_device.c: 1688: }
  8217                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  8218  0F9E  0021               	movlb	1	; select bank1
  8219  0F9F  01E4               	clrf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  8220                           
  8221                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  8222  0FA0  01E3               	clrf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  8223                           
  8224                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  8225  0FA1  0020               	movlb	0	; select bank0
  8226  0FA2  0854               	movf	_USBDeferStatusStagePacket,w	;volatile
  8227  0FA3  1D03               	btfss	3,2
  8228  0FA4  0008               	return
  8229                           
  8230                           ;usb_device.c: 1713: {
  8231                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  8232  0FA5  3185  2D19         	ljmp	l2784
  8233  0FA7                     l3092:	
  8234                           
  8235                           ;usb_device.c: 1717: else
  8236                           ;usb_device.c: 1718: {
  8237                           ;usb_device.c: 1729: controlTransferState = 2;
  8238  0FA7  3002               	movlw	2
  8239  0FA8  00D7               	movwf	_controlTransferState
  8240                           
  8241                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  8242  0FA9  0A59               	incf	_pBDTEntryEP0OutNext,w
  8243  0FAA  0086               	movwf	6
  8244  0FAB  3008               	movlw	8
  8245  0FAC  0187               	clrf	7
  8246  0FAD  0081               	movwf	1
  8247                           
  8248                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8249  0FAE  3040               	movlw	64
  8250  0FAF  00F3               	movwf	??_USBCtrlEPServiceComplete
  8251  0FB0  01F4               	clrf	??_USBCtrlEPServiceComplete+1
  8252  0FB1  0859               	movf	_pBDTEntryEP0OutNext,w
  8253  0FB2  3E02               	addlw	2
  8254  0FB3  0086               	movwf	6
  8255  0FB4  0873               	movf	??_USBCtrlEPServiceComplete,w
  8256  0FB5  3FC0               	movwi [0]fsr1
  8257  0FB6  0874               	movf	??_USBCtrlEPServiceComplete+1,w
  8258  0FB7  3FC1               	movwi [1]fsr1
  8259                           
  8260                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  8261  0FB8  0859               	movf	_pBDTEntryEP0OutNext,w
  8262  0FB9  0086               	movwf	6
  8263  0FBA  3004               	movlw	4
  8264  0FBB  0081               	movwf	1
  8265                           
  8266                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8267  0FBC  0859               	movf	_pBDTEntryEP0OutNext,w
  8268  0FBD  0086               	movwf	6
  8269  0FBE  1781               	bsf	1,7
  8270  0FBF  2F9E               	goto	l3084
  8271  0FC0                     __end_of_USBCtrlEPServiceComplete:	
  8272                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  8273                           
  8274                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  8275                           
  8276                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  8277                           
  8278  0FC0                     __ptext9:	
  8279 ;; *************** function _USBCtrlEPAllowDataStage *****************
  8280 ;; Defined at:
  8281 ;;		line 1488 in file "../../../../../../framework/usb/src/usb_device.c"
  8282 ;; Parameters:    Size  Location     Type
  8283 ;;		None
  8284 ;; Auto vars:     Size  Location     Type
  8285 ;;		None
  8286 ;; Return value:  Size  Location     Type
  8287 ;;		None               void
  8288 ;; Registers used:
  8289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8290 ;; Tracked objects:
  8291 ;;		On entry : 1F/1
  8292 ;;		On exit  : 1F/0
  8293 ;;		Unchanged: 0/0
  8294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8297 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8298 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8299 ;;Total ram usage:        2 bytes
  8300 ;; Hardware stack levels used:    1
  8301 ;; Hardware stack levels required when called:    2
  8302 ;; This function calls:
  8303 ;;		_USBCtrlTrfTxService
  8304 ;; This function is called by:
  8305 ;;		_USBCtrlEPServiceComplete
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           
  8309                           
  8310                           ;psect for function _USBCtrlEPAllowDataStage
  8311  0FC0                     _USBCtrlEPAllowDataStage:	
  8312                           
  8313                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  8314                           
  8315                           ;incstack = 0
  8316                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8317  0FC0  01E0               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  8318                           
  8319                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  8320  0FC1  01E1               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  8321                           
  8322                           ;usb_device.c: 1493: if(controlTransferState == 2)
  8323  0FC2  3002               	movlw	2
  8324  0FC3  0020               	movlb	0	; select bank0
  8325  0FC4  0657               	xorwf	_controlTransferState,w
  8326  0FC5  1D03               	btfss	3,2
  8327  0FC6  2FDE               	goto	l2832
  8328                           
  8329                           ;usb_device.c: 1494: {
  8330                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  8331  0FC7  0A59               	incf	_pBDTEntryEP0OutNext,w
  8332  0FC8  0086               	movwf	6
  8333  0FC9  3008               	movlw	8
  8334  0FCA  0187               	clrf	7
  8335  0FCB  0081               	movwf	1
  8336                           
  8337                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  8338  0FCC  3048               	movlw	72
  8339  0FCD  00F1               	movwf	??_USBCtrlEPAllowDataStage
  8340  0FCE  01F2               	clrf	??_USBCtrlEPAllowDataStage+1
  8341  0FCF  0859               	movf	_pBDTEntryEP0OutNext,w
  8342  0FD0  3E02               	addlw	2
  8343  0FD1  0086               	movwf	6
  8344  0FD2  0871               	movf	??_USBCtrlEPAllowDataStage,w
  8345  0FD3  3FC0               	movwi [0]fsr1
  8346  0FD4  0872               	movf	??_USBCtrlEPAllowDataStage+1,w
  8347  0FD5  3FC1               	movwi [1]fsr1
  8348                           
  8349                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  8350  0FD6  0859               	movf	_pBDTEntryEP0OutNext,w
  8351  0FD7  0086               	movwf	6
  8352  0FD8  3048               	movlw	72
  8353  0FD9  0081               	movwf	1
  8354                           
  8355                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8356  0FDA  0859               	movf	_pBDTEntryEP0OutNext,w
  8357  0FDB  0086               	movwf	6
  8358  0FDC  1781               	bsf	1,7
  8359                           
  8360                           ;usb_device.c: 1500: }
  8361  0FDD  0008               	return
  8362  0FDE                     l2832:	
  8363                           
  8364                           ;usb_device.c: 1501: else
  8365                           ;usb_device.c: 1502: {
  8366                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  8367  0FDE  085F               	movf	_inPipes+4,w
  8368  0FDF  0247               	subwf	71,w	;volatile
  8369  0FE0  1D03               	skipz
  8370  0FE1  2FE4               	goto	u1815
  8371  0FE2  085E               	movf	_inPipes+3,w
  8372  0FE3  0246               	subwf	70,w	;volatile
  8373  0FE4                     u1815:	
  8374  0FE4  1803               	skipnc
  8375  0FE5  2FEA               	goto	l2836
  8376                           
  8377                           ;usb_device.c: 1506: {
  8378                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  8379  0FE6  0847               	movf	71,w	;volatile
  8380  0FE7  00DF               	movwf	_inPipes+4
  8381  0FE8  0846               	movf	70,w	;volatile
  8382  0FE9  00DE               	movwf	_inPipes+3
  8383  0FEA                     l2836:	
  8384                           
  8385                           ;usb_device.c: 1508: }
  8386                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  8387  0FEA  3186  26B7         	fcall	_USBCtrlTrfTxService
  8388                           
  8389                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  8390  0FEC  3048               	movlw	72
  8391  0FED  00F1               	movwf	??_USBCtrlEPAllowDataStage
  8392  0FEE  01F2               	clrf	??_USBCtrlEPAllowDataStage+1
  8393  0FEF  0020               	movlb	0	; select bank0
  8394  0FF0  0852               	movf	_pBDTEntryIn,w
  8395  0FF1  3E02               	addlw	2
  8396  0FF2  0086               	movwf	6
  8397  0FF3  0187               	clrf	7
  8398  0FF4  0871               	movf	??_USBCtrlEPAllowDataStage,w
  8399  0FF5  3FC0               	movwi [0]fsr1
  8400  0FF6  0872               	movf	??_USBCtrlEPAllowDataStage+1,w
  8401  0FF7  3FC1               	movwi [1]fsr1
  8402                           
  8403                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8404  0FF8  0852               	movf	_pBDTEntryIn,w
  8405  0FF9  0086               	movwf	6
  8406  0FFA  3048               	movlw	72
  8407  0FFB  0081               	movwf	1
  8408                           
  8409                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8410  0FFC  0852               	movf	_pBDTEntryIn,w
  8411  0FFD  0086               	movwf	6
  8412  0FFE  1781               	bsf	1,7
  8413  0FFF  0008               	return
  8414  1000                     __end_of_USBCtrlEPAllowDataStage:	
  8415                           
  8416                           	psect	swtext1
  8417  0900                     __pswtext1:	
  8418  0900                     S3978:	
  8419  0900  318E  2E40         	ljmp	l3168
  8420  0902  318E  2E41         	ljmp	l3170
  8421  0904  318E  2E30         	ljmp	l733
  8422  0906  318E  2E41         	ljmp	l3170
  8423  0908  318E  2E30         	ljmp	l733
  8424  090A  318E  2E31         	ljmp	l735
  8425  090C  318E  2E35         	ljmp	l3156
  8426  090E  318E  2E52         	ljmp	l3182
  8427  0910  318E  2E37         	ljmp	l3160
  8428  0912  318E  2E36         	ljmp	l3158
  8429  0914  318E  2E43         	ljmp	l3172
  8430  0916  318E  2E4A         	ljmp	l744
  8431  0918  318E  2E30         	ljmp	l733
  8432                           
  8433                           	psect	swtext2
  8434  0800                     __pswtext2:	
  8435  0800                     S3984:	
  8436  0800  3185  2D05         	ljmp	l2712
  8437  0802  3185  2D18         	ljmp	l88
  8438  0804  3185  2D18         	ljmp	l88
  8439  0806  3185  2D18         	ljmp	l88
  8440  0808  3185  2D18         	ljmp	l88
  8441  080A  3185  2D18         	ljmp	l88
  8442  080C  3185  2D18         	ljmp	l88
  8443  080E  3185  2D18         	ljmp	l88
  8444  0810  3185  2D18         	ljmp	l88
  8445  0812  3185  2D18         	ljmp	l88
  8446  0814  3185  2D18         	ljmp	l88
  8447  0816  3185  2D18         	ljmp	l88
  8448  0818  3185  2D18         	ljmp	l88
  8449  081A  3185  2D18         	ljmp	l88
  8450  081C  3185  2D18         	ljmp	l88
  8451  081E  3185  2D18         	ljmp	l88
  8452  0820  3185  2D18         	ljmp	l88
  8453  0822  3185  2D18         	ljmp	l88
  8454  0824  3185  2D18         	ljmp	l88
  8455  0826  3185  2D18         	ljmp	l88
  8456  0828  3185  2D18         	ljmp	l88
  8457  082A  3185  2D18         	ljmp	l88
  8458  082C  3185  2D18         	ljmp	l88
  8459  082E  3185  2D18         	ljmp	l88
  8460  0830  3185  2D18         	ljmp	l88
  8461  0832  3185  2D18         	ljmp	l88
  8462  0834  3185  2D18         	ljmp	l88
  8463  0836  3185  2D18         	ljmp	l88
  8464  0838  3185  2D18         	ljmp	l88
  8465  083A  3185  2D18         	ljmp	l88
  8466  083C  3185  2D18         	ljmp	l88
  8467  083E  3185  2D18         	ljmp	l88
  8468  0840  3185  2D18         	ljmp	l88
  8469  0842  3185  2D18         	ljmp	l88
  8470  0844  3185  2D18         	ljmp	l88
  8471  0846  3185  2D18         	ljmp	l88
  8472  0848  3185  2D18         	ljmp	l88
  8473  084A  3185  2D18         	ljmp	l88
  8474  084C  3185  2D18         	ljmp	l88
  8475  084E  3185  2D18         	ljmp	l88
  8476  0850  3185  2D18         	ljmp	l88
  8477  0852  3185  2D18         	ljmp	l88
  8478  0854  3185  2D18         	ljmp	l88
  8479  0856  3185  2D18         	ljmp	l88
  8480  0858  3185  2D18         	ljmp	l88
  8481  085A  3185  2D18         	ljmp	l88
  8482  085C  3185  2D18         	ljmp	l88
  8483  085E  3185  2D18         	ljmp	l88
  8484  0860  3185  2D18         	ljmp	l88
  8485  0862  3185  2D18         	ljmp	l88
  8486  0864  3185  2D18         	ljmp	l88
  8487  0866  3185  2D18         	ljmp	l88
  8488  0868  3185  2D18         	ljmp	l88
  8489  086A  3185  2D18         	ljmp	l88
  8490  086C  3185  2D18         	ljmp	l88
  8491  086E  3185  2D18         	ljmp	l88
  8492  0870  3185  2D18         	ljmp	l88
  8493  0872  3185  2D18         	ljmp	l88
  8494  0874  3185  2D18         	ljmp	l88
  8495  0876  3185  2D18         	ljmp	l88
  8496  0878  3185  2D18         	ljmp	l88
  8497  087A  3185  2D18         	ljmp	l88
  8498  087C  3185  2D18         	ljmp	l88
  8499  087E  3185  2D18         	ljmp	l88
  8500  0880  3185  2D18         	ljmp	l88
  8501  0882  3185  2D18         	ljmp	l88
  8502  0884  3185  2D18         	ljmp	l88
  8503  0886  3185  2D18         	ljmp	l88
  8504  0888  3185  2D18         	ljmp	l88
  8505  088A  3185  2D18         	ljmp	l88
  8506  088C  3185  2D18         	ljmp	l88
  8507  088E  3185  2D18         	ljmp	l88
  8508  0890  3185  2D18         	ljmp	l88
  8509  0892  3185  2D18         	ljmp	l88
  8510  0894  3185  2D18         	ljmp	l88
  8511  0896  3185  2D18         	ljmp	l88
  8512  0898  3185  2D18         	ljmp	l88
  8513  089A  3185  2D18         	ljmp	l88
  8514  089C  3185  2D18         	ljmp	l88
  8515  089E  3185  2D18         	ljmp	l88
  8516  08A0  3185  2D18         	ljmp	l88
  8517  08A2  3185  2D18         	ljmp	l88
  8518  08A4  3185  2D18         	ljmp	l88
  8519  08A6  3185  2D18         	ljmp	l88
  8520  08A8  3185  2D18         	ljmp	l88
  8521  08AA  3185  2D18         	ljmp	l88
  8522  08AC  3185  2D18         	ljmp	l88
  8523  08AE  3185  2D18         	ljmp	l88
  8524  08B0  3185  2D18         	ljmp	l88
  8525  08B2  3185  2D18         	ljmp	l88
  8526  08B4  3185  2D18         	ljmp	l88
  8527  08B6  3185  2D18         	ljmp	l88
  8528  08B8  3185  2D18         	ljmp	l88
  8529  08BA  3185  2D18         	ljmp	l88
  8530  08BC  3185  2D18         	ljmp	l88
  8531  08BE  3185  2D18         	ljmp	l88
  8532  08C0  3185  2D18         	ljmp	l88
  8533  08C2  3185  2D18         	ljmp	l88
  8534  08C4  3185  2D18         	ljmp	l88
  8535  08C6  3185  2D18         	ljmp	l88
  8536  08C8  3185  2D18         	ljmp	l88
  8537  08CA  3185  2D18         	ljmp	l88
  8538  08CC  3185  2D18         	ljmp	l88
  8539  08CE  3185  2D18         	ljmp	l88
  8540  08D0  3185  2D18         	ljmp	l88
  8541  08D2  3185  2D18         	ljmp	l88
  8542  08D4  3185  2D18         	ljmp	l88
  8543  08D6  3185  2D18         	ljmp	l88
  8544  08D8  3185  2D18         	ljmp	l88
  8545  08DA  3185  2D18         	ljmp	l88
  8546  08DC  3185  2D18         	ljmp	l88
  8547  08DE  3185  2D18         	ljmp	l88
  8548  08E0  3185  2D18         	ljmp	l88
  8549  08E2  3185  2D18         	ljmp	l88
  8550  08E4  3185  2D01         	ljmp	l2704
  8551  08E6  3185  2D04         	ljmp	l2708
  8552  08E8  3185  2D04         	ljmp	l2708
  8553                           
  8554                           	psect	swtext3
  8555  08EA                     __pswtext3:	
  8556  08EA                     S3986:	
  8557  08EA  3185  2DDE         	ljmp	l354
  8558  08EC  3185  2DC5         	ljmp	l347
  8559  08EE  3185  2DC8         	ljmp	l349
  8560  08F0  3185  2DCB         	ljmp	l350
  8561  08F2  3185  2DCE         	ljmp	l351
  8562  08F4  3185  2DD1         	ljmp	l352
  8563                           
  8564                           	psect	swtext4
  8565  091A                     __pswtext4:	
  8566  091A                     S3988:	
  8567  091A  3185  2DC2         	ljmp	l365
  8568  091C  3185  2DA9         	ljmp	l358
  8569  091E  3185  2DAC         	ljmp	l360
  8570  0920  3185  2DAF         	ljmp	l361
  8571  0922  3185  2DB2         	ljmp	l362
  8572  0924  3185  2DB5         	ljmp	l363
  8573                           
  8574                           	psect	swtext5
  8575  0926                     __pswtext5:	
  8576  0926                     S3990:	
  8577  0926  3183  2B75         	ljmp	l398
  8578  0928  3183  2B5C         	ljmp	l391
  8579  092A  3183  2B5F         	ljmp	l393
  8580  092C  3183  2B62         	ljmp	l394
  8581  092E  3183  2B65         	ljmp	l395
  8582  0930  3183  2B68         	ljmp	l396
  8583                           
  8584                           	psect	swtext6
  8585  0932                     __pswtext6:	
  8586  0932                     S3992:	
  8587  0932  3181  2982         	ljmp	l3450
  8588  0934  3181  29A4         	ljmp	l3456
  8589  0936  3181  29C6         	ljmp	l3460
  8590  0938  3181  29EB         	ljmp	l3464
  8591  093A  3182  2A13         	ljmp	l3468
  8592  093C  3182  2A23         	ljmp	l3474
  8593                           
  8594                           	psect	text34
  8595  0000                     __ptext34:	
  8596 ;; *************** function _waiting_for_timer *****************
  8597 ;; Defined at:
  8598 ;;		line 61 in file "../src/scan.c"
  8599 ;; Parameters:    Size  Location     Type
  8600 ;;		None
  8601 ;; Auto vars:     Size  Location     Type
  8602 ;;		None
  8603 ;; Return value:  Size  Location     Type
  8604 ;;                  1    wreg      unsigned char 
  8605 ;; Registers used:
  8606 ;;		wreg, status,2, status,0
  8607 ;; Tracked objects:
  8608 ;;		On entry : 1F/1
  8609 ;;		On exit  : 1F/1
  8610 ;;		Unchanged: 0/0
  8611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8615 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8616 ;;Total ram usage:        1 bytes
  8617 ;; Hardware stack levels used:    1
  8618 ;; Hardware stack levels required when called:    1
  8619 ;; This function calls:
  8620 ;;		Nothing
  8621 ;; This function is called by:
  8622 ;;		_scan_task
  8623 ;; This function uses a non-reentrant model
  8624 ;;
  8625                           
  8626  0000                     _waiting_for_timer:	
  8627                           ;psect for function _waiting_for_timer
  8628                           
  8629  0000                     __end_of_waiting_for_timer:	
  8630                           ;scan.c: 62: return (wait_timer = wait_timer && !INTCONbits.TMR0IF);
  8631                           
  8632                           ;incstack = 0
  8633                           ; Regs used in _waiting_for_timer: [wreg+status,2+status,0]
  8634                           
  8635                           
  8636                           	psect	text35
  8637  0000                     __ptext35:	
  8638 ;; *************** function _store_key_level *****************
  8639 ;; Defined at:
  8640 ;;		line 105 in file "../src/scan.c"
  8641 ;; Parameters:    Size  Location     Type
  8642 ;;  level           1    wreg     unsigned char 
  8643 ;;  end_of_scan     1    9[COMMON] unsigned char 
  8644 ;; Auto vars:     Size  Location     Type
  8645 ;;  level           1   10[COMMON] unsigned char 
  8646 ;; Return value:  Size  Location     Type
  8647 ;;                  1    wreg      unsigned char 
  8648 ;; Registers used:
  8649 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8650 ;; Tracked objects:
  8651 ;;		On entry : 1F/1
  8652 ;;		On exit  : 1F/0
  8653 ;;		Unchanged: 0/0
  8654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8655 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8656 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8658 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8659 ;;Total ram usage:        2 bytes
  8660 ;; Hardware stack levels used:    1
  8661 ;; Hardware stack levels required when called:    2
  8662 ;; This function calls:
  8663 ;;		_process_level
  8664 ;; This function is called by:
  8665 ;;		_scan_task
  8666 ;; This function uses a non-reentrant model
  8667 ;;
  8668                           
  8669  0000                     _store_key_level:	
  8670                           ;psect for function _store_key_level
  8671                           
  8672  0000                     __end_of_store_key_level:	
  8673                           ;scan.c: 111: return idx_key == 0;
  8674                           
  8675                           ;scan.c: 110: if (idx_key >= N_KEYS || end_of_scan) idx_key = 0;
  8676                           
  8677                           ;scan.c: 109: idx_key ++;
  8678                           
  8679                           ;scan.c: 108: adc_levels[idx_key] = level;
  8680                           
  8681                           ;scan.c: 102: note_event.velocity = 0;
  8682                           
  8683                           ;scan.c: 101: note_event.pitch = 0;
  8684                           
  8685                           ;scan.c: 100: if (idx_key == 0) return;
  8686                           
  8687                           ;scan.c: 98: note_event.velocity = (new_on? 0x7F : 0);
  8688                           
  8689                           ;scan.c: 97: note_event.pitch = ((new_on == old_on)? 0 : 0x3C);
  8690                           
  8691                           ;scan.c: 95: new_on = (new_level > L);
  8692                           
  8693                           ;scan.c: 92: const uint8_t L = 0x20;
  8694                           ;scan.c: 93: bool
  8695                           ;scan.c: 94: old_on = (old_level > L),
  8696                           
  8697                           ;incstack = 0
  8698                           ; Regs used in _process_level: [wreg+status,2+status,0]
  8699                           ;process_level@idx_key stored from wreg
  8700                           
  8701                           ;psect for function _process_level
  8702                           
  8703                           ;scan.c: 106: static uint8_t idx_key = 0;
  8704                           ;scan.c: 107: process_level(idx_key, adc_levels[idx_key], level);
  8705                           
  8706                           ;incstack = 0
  8707                           ; Regs used in _store_key_level: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8708                           ;store_key_level@level stored from wreg
  8709                           
  8710                           
  8711                           	psect	text36
  8712  0000                     __ptext36:	
  8713 ;; *************** function _process_level *****************
  8714 ;; Defined at:
  8715 ;;		line 91 in file "../src/scan.c"
  8716 ;; Parameters:    Size  Location     Type
  8717 ;;  idx_key         1    wreg     unsigned char 
  8718 ;;  old_level       1    0[COMMON] unsigned char 
  8719 ;;  new_level       1    1[COMMON] unsigned char 
  8720 ;; Auto vars:     Size  Location     Type
  8721 ;;  idx_key         1    2[COMMON] unsigned char 
  8722 ;;  new_on          1    8[COMMON] unsigned char 
  8723 ;;  old_on          1    7[COMMON] unsigned char 
  8724 ;; Return value:  Size  Location     Type
  8725 ;;		None               void
  8726 ;; Registers used:
  8727 ;;		wreg, status,2, status,0
  8728 ;; Tracked objects:
  8729 ;;		On entry : 1F/0
  8730 ;;		On exit  : 1F/2
  8731 ;;		Unchanged: 0/0
  8732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8733 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8734 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8736 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8737 ;;Total ram usage:        9 bytes
  8738 ;; Hardware stack levels used:    1
  8739 ;; Hardware stack levels required when called:    1
  8740 ;; This function calls:
  8741 ;;		Nothing
  8742 ;; This function is called by:
  8743 ;;		_store_key_level
  8744 ;; This function uses a non-reentrant model
  8745 ;;
  8746                           
  8747  0000                     _process_level:	
  8748                           ;psect for function _process_level
  8749                           
  8750  0000                     __end_of_process_level:	
  8751                           ;scan.c: 102: note_event.velocity = 0;
  8752                           
  8753                           ;scan.c: 101: note_event.pitch = 0;
  8754                           
  8755                           ;scan.c: 100: if (idx_key == 0) return;
  8756                           
  8757                           ;scan.c: 98: note_event.velocity = (new_on? 0x7F : 0);
  8758                           
  8759                           ;scan.c: 97: note_event.pitch = ((new_on == old_on)? 0 : 0x3C);
  8760                           
  8761                           ;scan.c: 95: new_on = (new_level > L);
  8762                           
  8763                           ;scan.c: 92: const uint8_t L = 0x20;
  8764                           ;scan.c: 93: bool
  8765                           ;scan.c: 94: old_on = (old_level > L),
  8766                           
  8767                           ;incstack = 0
  8768                           ; Regs used in _process_level: [wreg+status,2+status,0]
  8769                           ;process_level@idx_key stored from wreg
  8770                           
  8771                           
  8772                           	psect	text37
  8773  0000                     __ptext37:	
  8774 ;; *************** function _set_timer *****************
  8775 ;; Defined at:
  8776 ;;		line 52 in file "../src/scan.c"
  8777 ;; Parameters:    Size  Location     Type
  8778 ;;		None
  8779 ;; Auto vars:     Size  Location     Type
  8780 ;;		None
  8781 ;; Return value:  Size  Location     Type
  8782 ;;		None               void
  8783 ;; Registers used:
  8784 ;;		status,2
  8785 ;; Tracked objects:
  8786 ;;		On entry : 1F/2
  8787 ;;		On exit  : 1F/0
  8788 ;;		Unchanged: 0/0
  8789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8794 ;;Total ram usage:        0 bytes
  8795 ;; Hardware stack levels used:    1
  8796 ;; Hardware stack levels required when called:    1
  8797 ;; This function calls:
  8798 ;;		Nothing
  8799 ;; This function is called by:
  8800 ;;		_scan_task
  8801 ;; This function uses a non-reentrant model
  8802 ;;
  8803                           
  8804  0000                     _set_timer:	
  8805                           ;psect for function _set_timer
  8806                           
  8807  0000                     __end_of_set_timer:	
  8808                           ;scan.c: 58: TMR0 = 0;
  8809                           
  8810                           ;scan.c: 57: INTCONbits.TMR0IF = 0;
  8811                           
  8812                           ;scan.c: 56: INTCONbits.TMR0IE = 0;
  8813                           
  8814                           ;scan.c: 55: OPTION_REGbits.PSA = 0;
  8815                           
  8816                           ;scan.c: 54: OPTION_REGbits.TMR0CS = 0;
  8817                           
  8818                           ;scan.c: 53: wait_timer = 1;
  8819                           
  8820                           ;incstack = 0
  8821                           ; Regs used in _set_timer: [status,2]
  8822                           
  8823                           
  8824                           	psect	text38
  8825  0000                     __ptext38:	
  8826 ;; *************** function _set_clock_and_data *****************
  8827 ;; Defined at:
  8828 ;;		line 65 in file "../src/scan.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;  c               1    wreg     const unsigned char 
  8831 ;;  d               1    0[COMMON] const unsigned char 
  8832 ;; Auto vars:     Size  Location     Type
  8833 ;;  c               1    1[COMMON] const unsigned char 
  8834 ;; Return value:  Size  Location     Type
  8835 ;;		None               void
  8836 ;; Registers used:
  8837 ;;		wreg, status,2, status,0
  8838 ;; Tracked objects:
  8839 ;;		On entry : 1D/2
  8840 ;;		On exit  : 1F/2
  8841 ;;		Unchanged: 0/0
  8842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8843 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8846 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8847 ;;Total ram usage:        2 bytes
  8848 ;; Hardware stack levels used:    1
  8849 ;; Hardware stack levels required when called:    1
  8850 ;; This function calls:
  8851 ;;		Nothing
  8852 ;; This function is called by:
  8853 ;;		_scan_task
  8854 ;; This function uses a non-reentrant model
  8855 ;;
  8856                           
  8857  0000                     _set_clock_and_data:	
  8858                           ;psect for function _set_clock_and_data
  8859                           
  8860  0000                     __end_of_set_clock_and_data:	
  8861                           ;scan.c: 67: LATCbits.LATC5 = !!d;
  8862                           
  8863                           ;scan.c: 66: LATCbits.LATC4 = !!c;
  8864                           
  8865                           ;incstack = 0
  8866                           ; Regs used in _set_clock_and_data: [wreg+status,2+status,0]
  8867                           ;set_clock_and_data@c stored from wreg
  8868                           
  8869                           
  8870                           	psect	text40
  8871  0000                     __ptext40:	
  8872 ;; *************** function _run_adc *****************
  8873 ;; Defined at:
  8874 ;;		line 78 in file "../src/scan.c"
  8875 ;; Parameters:    Size  Location     Type
  8876 ;;		None
  8877 ;; Auto vars:     Size  Location     Type
  8878 ;;		None
  8879 ;; Return value:  Size  Location     Type
  8880 ;;		None               void
  8881 ;; Registers used:
  8882 ;;		wreg, status,2, status,0
  8883 ;; Tracked objects:
  8884 ;;		On entry : 1F/2
  8885 ;;		On exit  : 1F/1
  8886 ;;		Unchanged: 0/0
  8887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8892 ;;Total ram usage:        0 bytes
  8893 ;; Hardware stack levels used:    1
  8894 ;; Hardware stack levels required when called:    1
  8895 ;; This function calls:
  8896 ;;		Nothing
  8897 ;; This function is called by:
  8898 ;;		_scan_task
  8899 ;; This function uses a non-reentrant model
  8900 ;;
  8901                           
  8902  0000                     _run_adc:	
  8903                           ;psect for function _run_adc
  8904                           
  8905  0000                     __end_of_run_adc:	
  8906                           ;scan.c: 80: ADCON0bits.GO = 1;
  8907                           
  8908                           ;scan.c: 79: ADCON0bits.CHS = 7;
  8909                           
  8910                           ;incstack = 0
  8911                           ; Regs used in _run_adc: [wreg+status,2+status,0]
  8912                           
  8913                           
  8914                           	psect	text41
  8915  0000                     __ptext41:	
  8916 ;; *************** function _is_end_of_scan *****************
  8917 ;; Defined at:
  8918 ;;		line 74 in file "../src/scan.c"
  8919 ;; Parameters:    Size  Location     Type
  8920 ;;		None
  8921 ;; Auto vars:     Size  Location     Type
  8922 ;;		None
  8923 ;; Return value:  Size  Location     Type
  8924 ;;                  1    wreg      unsigned char 
  8925 ;; Registers used:
  8926 ;;		wreg, status,2, status,0
  8927 ;; Tracked objects:
  8928 ;;		On entry : 1D/2
  8929 ;;		On exit  : 1F/0
  8930 ;;		Unchanged: 0/0
  8931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8936 ;;Total ram usage:        0 bytes
  8937 ;; Hardware stack levels used:    1
  8938 ;; Hardware stack levels required when called:    1
  8939 ;; This function calls:
  8940 ;;		Nothing
  8941 ;; This function is called by:
  8942 ;;		_scan_task
  8943 ;; This function uses a non-reentrant model
  8944 ;;
  8945                           
  8946  0000                     _is_end_of_scan:	
  8947                           ;psect for function _is_end_of_scan
  8948                           
  8949  0000                     __end_of_is_end_of_scan:	
  8950                           ;scan.c: 75: return !! PORTAbits.RA4;
  8951                           
  8952                           ;incstack = 0
  8953                           ; Regs used in _is_end_of_scan: [wreg+status,2+status,0]
  8954                           
  8955                           
  8956                           	psect	text42
  8957  0000                     __ptext42:	
  8958 ;; *************** function _is_adc_ready *****************
  8959 ;; Defined at:
  8960 ;;		line 83 in file "../src/scan.c"
  8961 ;; Parameters:    Size  Location     Type
  8962 ;;		None
  8963 ;; Auto vars:     Size  Location     Type
  8964 ;;		None
  8965 ;; Return value:  Size  Location     Type
  8966 ;;                  1    wreg      unsigned char 
  8967 ;; Registers used:
  8968 ;;		wreg, status,0
  8969 ;; Tracked objects:
  8970 ;;		On entry : 1D/2
  8971 ;;		On exit  : 1F/1
  8972 ;;		Unchanged: 0/0
  8973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8978 ;;Total ram usage:        0 bytes
  8979 ;; Hardware stack levels used:    1
  8980 ;; Hardware stack levels required when called:    1
  8981 ;; This function calls:
  8982 ;;		Nothing
  8983 ;; This function is called by:
  8984 ;;		_scan_task
  8985 ;; This function uses a non-reentrant model
  8986 ;;
  8987                           
  8988  0000                     _is_adc_ready:	
  8989                           ;psect for function _is_adc_ready
  8990                           
  8991  0000                     __end_of_is_adc_ready:	
  8992                           ;scan.c: 84: return !ADCON0bits.GO_nDONE;
  8993                           
  8994                           ;incstack = 0
  8995                           ; Regs used in _is_adc_ready: [wreg+status,0]
  8996                           
  8997                           
  8998                           	psect	text43
  8999  0000                     __ptext43:	
  9000 ;; *************** function _get_data *****************
  9001 ;; Defined at:
  9002 ;;		line 70 in file "../src/scan.c"
  9003 ;; Parameters:    Size  Location     Type
  9004 ;;		None
  9005 ;; Auto vars:     Size  Location     Type
  9006 ;;		None
  9007 ;; Return value:  Size  Location     Type
  9008 ;;                  1    wreg      unsigned char 
  9009 ;; Registers used:
  9010 ;;		wreg, status,2, status,0
  9011 ;; Tracked objects:
  9012 ;;		On entry : 1D/2
  9013 ;;		On exit  : 1F/2
  9014 ;;		Unchanged: 0/0
  9015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9020 ;;Total ram usage:        0 bytes
  9021 ;; Hardware stack levels used:    1
  9022 ;; Hardware stack levels required when called:    1
  9023 ;; This function calls:
  9024 ;;		Nothing
  9025 ;; This function is called by:
  9026 ;;		_scan_task
  9027 ;; This function uses a non-reentrant model
  9028 ;;
  9029                           
  9030  0000                     _get_data:	
  9031                           ;psect for function _get_data
  9032                           
  9033  0000                     __end_of_get_data:	
  9034                           ;scan.c: 71: return LATCbits.LATC5;
  9035                           
  9036                           ;incstack = 0
  9037                           ; Regs used in _get_data: [wreg+status,2+status,0]
  9038                           
  9039                           
  9040                           	psect	text44
  9041  0000                     __ptext44:	
  9042 ;; *************** function _get_adc *****************
  9043 ;; Defined at:
  9044 ;;		line 87 in file "../src/scan.c"
  9045 ;; Parameters:    Size  Location     Type
  9046 ;;		None
  9047 ;; Auto vars:     Size  Location     Type
  9048 ;;		None
  9049 ;; Return value:  Size  Location     Type
  9050 ;;                  1    wreg      unsigned char 
  9051 ;; Registers used:
  9052 ;;		wreg
  9053 ;; Tracked objects:
  9054 ;;		On entry : 1F/0
  9055 ;;		On exit  : 1F/1
  9056 ;;		Unchanged: 0/0
  9057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9062 ;;Total ram usage:        0 bytes
  9063 ;; Hardware stack levels used:    1
  9064 ;; Hardware stack levels required when called:    1
  9065 ;; This function calls:
  9066 ;;		Nothing
  9067 ;; This function is called by:
  9068 ;;		_scan_task
  9069 ;; This function uses a non-reentrant model
  9070 ;;
  9071                           
  9072  0000                     _get_adc:	
  9073                           ;psect for function _get_adc
  9074                           
  9075  0000                     __end_of_get_adc:	
  9076                           ;scan.c: 88: return ADRESH;
  9077                           
  9078                           ;incstack = 0
  9079                           ; Regs used in _get_adc: [wreg]
  9080                           
  9081                           
  9082                           	psect	intentry
  9083  0004                     __pintentry:	
  9084 ;; *************** function _SYS_InterruptHigh *****************
  9085 ;; Defined at:
  9086 ;;		line 87 in file "../src/system_config/low_pin_count_usb_development_kit/pic16f1455/system.c"
  9087 ;; Parameters:    Size  Location     Type
  9088 ;;		None
  9089 ;; Auto vars:     Size  Location     Type
  9090 ;;		None
  9091 ;; Return value:  Size  Location     Type
  9092 ;;		None               void
  9093 ;; Registers used:
  9094 ;;		None
  9095 ;; Tracked objects:
  9096 ;;		On entry : 0/0
  9097 ;;		On exit  : 0/0
  9098 ;;		Unchanged: 0/0
  9099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9104 ;;Total ram usage:        0 bytes
  9105 ;; Hardware stack levels used:    1
  9106 ;; This function calls:
  9107 ;;		Nothing
  9108 ;; This function is called by:
  9109 ;;		Interrupt level 1
  9110 ;; This function uses a non-reentrant model
  9111 ;;
  9112                           
  9113  0004                     _SYS_InterruptHigh:	
  9114                           
  9115                           ;incstack = 0
  9116                           ; Regs used in _SYS_InterruptHigh: []
  9117  0004  3180               	pagesel	$
  9118  0005  0009               	retfie
  9119  0006                     __end_of_SYS_InterruptHigh:	
  9120  007E                     btemp	set	126	;btemp
  9121  007E                     wtemp	set	126
  9122  007E                     wtemp0	set	126
  9123  0080                     wtemp1	set	128
  9124  0082                     wtemp2	set	130
  9125  0084                     wtemp3	set	132
  9126  0086                     wtemp4	set	134
  9127  0088                     wtemp5	set	136
  9128  007F                     wtemp6	set	127
  9129  007E                     ttemp	set	126
  9130  007E                     ttemp0	set	126
  9131  0081                     ttemp1	set	129
  9132  0084                     ttemp2	set	132
  9133  0087                     ttemp3	set	135
  9134  007F                     ttemp4	set	127
  9135  007E                     ltemp	set	126
  9136  007E                     ltemp0	set	126
  9137  0082                     ltemp1	set	130
  9138  0086                     ltemp2	set	134
  9139  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    209
    Data        0
    BSS         83
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            32     15      32
    BANK1            16      0      16
    BANK2            80      0      50
    BANK3            76      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(1) Largest target is 32
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK1[1]), BDT(BANK0[32]), NULL(NULL[0]), 

    memset@p1	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    memset@p	PTR unsigned char  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    sp__memset	PTR void  size(1) Largest target is 32
		 -> USBAlternateInterface(BANK1[1]), BDT(BANK0[32]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> midiData(BANK3[4]), ReceivedDataBuffer(BANK1[64]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    S1068$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S1058$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S1058$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S1034$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S1034$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S1034$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S1034$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    scan_task@velocity	PTR unsigned char  size(1) Largest target is 1
		 -> APP_DeviceAudioMIDITasks@velocity(BANK0[1]), 

    scan_task@note	PTR unsigned char  size(1) Largest target is 1
		 -> APP_DeviceAudioMIDITasks@scan_pitch(BANK0[1]), 

    sp__USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBRxHandle	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USBTxHandle	PTR void  size(1) Largest target is 32
		 -> BDT(BANK0[32]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[26]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 101
		 -> configDescriptor1(CODE[101]), 


Critical Paths under _main in COMMON

    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdSetCfgHandler
    _APP_LEDUpdateUSBStatus->_LED_Off
    _APP_LEDUpdateUSBStatus->_LED_On
    _APP_DeviceAudioMIDIInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _SYSTEM_Initialize->_BUTTON_Enable
    _SYSTEM_Initialize->_LED_Enable
    _APP_DeviceAudioMIDITasks->_scan_task
    _scan_task->_store_key_level
    _store_key_level->_process_level

Critical Paths under _SYS_InterruptHigh in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _APP_DeviceAudioMIDITasks->_scan_task

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   40573
           _APP_DeviceAudioMIDITasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       2     2      0   37149
                                             13 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0    5047
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0    5047
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        4     4      0     272
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     3     3      0   21690
                                             10 BANK0      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   21393
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             2     2      0      92
                                              3 COMMON     2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              1 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   1     1      0   16254
                                              9 BANK0      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  4     4      0    5731
                                             10 COMMON     4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               6     2      4     524
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               1     1      0      46
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0    5430
                                             10 COMMON     2     2      0
                                              5 BANK0      4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      5     0      5    5047
                                              0 BANK0      5     0      5
      _APP_DeviceAudioMIDIInitialize
      _APP_DeviceAudioMIDISOFHandler
             _APP_LEDUpdateUSBStatus
 ---------------------------------------------------------------------------------
 (3) _APP_LEDUpdateUSBStatus                               0     0      0      44
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (4) _LED_On                                               1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LED_Off                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceAudioMIDISOFHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceAudioMIDIInitialize                        0     0      0    2311
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    6     5      1     644
                                              4 COMMON     6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 4     3      1     400
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 2     2      0     114
                                              6 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  4     4      0     114
                                              2 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  3     3      0     115
                                              1 COMMON     3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      66
                                              1 COMMON     1     1      0
                      _BUTTON_Enable
                         _LED_Enable
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTON_Enable                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceAudioMIDITasks                             8     8      0    3086
                                              5 BANK0      8     8      0
                   _BUTTON_IsPressed
               _USBTransferOnePacket
                          _scan_task
 ---------------------------------------------------------------------------------
 (2) _scan_task                                            6     5      1    1227
                                             11 COMMON     1     0      1
                                              0 BANK0      5     5      0
                            _get_adc
                           _get_data
                       _is_adc_ready
                     _is_end_of_scan
                            _run_adc
                          _scan_init
                 _set_clock_and_data
                          _set_timer
                    _store_key_level
                  _waiting_for_timer
 ---------------------------------------------------------------------------------
 (3) _waiting_for_timer                                    1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _store_key_level                                      2     1      1     515
                                              9 COMMON     2     1      1
                            _get_adc (ARG)
                     _is_end_of_scan (ARG)
                      _process_level
 ---------------------------------------------------------------------------------
 (4) _process_level                                        9     7      2     360
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) _set_timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _set_clock_and_data                                   2     1      1     400
                                              0 COMMON     2     1      1
                           _get_data (ARG)
 ---------------------------------------------------------------------------------
 (3) _scan_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _run_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _is_end_of_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _is_adc_ready                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get_data                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _get_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 8     4      4    1667
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _BUTTON_IsPressed                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SYS_InterruptHigh                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceAudioMIDITasks
     _BUTTON_IsPressed
     _USBTransferOnePacket
     _scan_task
       _get_adc
       _get_data
       _is_adc_ready
       _is_end_of_scan
       _run_adc
       _scan_init
       _set_clock_and_data
         _get_data (ARG)
       _set_timer
       _store_key_level
         _get_adc (ARG)
         _is_end_of_scan (ARG)
         _process_level (ARG)
       _waiting_for_timer
   _SYSTEM_Initialize
     _BUTTON_Enable
     _LED_Enable
   _USBDeviceInit
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceAudioMIDIInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceAudioMIDISOFHandler
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceAudioMIDIInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceAudioMIDISOFHandler
               _APP_LEDUpdateUSBStatus
                 _LED_Off
                 _LED_On
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceAudioMIDIInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceAudioMIDISOFHandler
             _APP_LEDUpdateUSBStatus
               _LED_Off
               _LED_On
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceAudioMIDIInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceAudioMIDISOFHandler
           _APP_LEDUpdateUSBStatus
             _LED_Off
             _LED_On
     _USBDeviceInit
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceAudioMIDIInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceAudioMIDISOFHandler
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceAudioMIDIInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceAudioMIDISOFHandler
         _APP_LEDUpdateUSBStatus
           _LED_Off
           _LED_On
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceAudioMIDIInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceAudioMIDISOFHandler
       _APP_LEDUpdateUSBStatus
         _LED_Off
         _LED_On

 _SYS_InterruptHigh (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            20      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               20      F      20       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10      0      10       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      32       9       62.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            4C      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               4C      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      70      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      70      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Jun 06 23:36:57 2015

                              _USB_SD_Ptr 1000                                         pc 0002  
                             __CFG_CP$OFF 0000                                        l16 02DF  
                                      l88 0518                               ?_LED_Enable 0070  
                           _USBDeviceInit 02E0      USER_USB_CALLBACK_EVENT_HANDLER@event 0061  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 0063                                       l213 000E  
                                     l222 0003                                       l231 0002  
                                     l216 0013                                       l208 0009  
                                     l225 0006                                       l219 0004  
                                     l228 0006                                       l253 002B  
                                     l350 05CB               __end_of_USBStdGetDscHandler 0EBD  
                                     l351 05CE                                       l360 05AC  
                                     l352 05D1                                       l361 05AF  
                                     l362 05B2                                       l354 05DE  
                                     l339 0359                                       l363 05B5  
                                     l347 05C5                                       l540 045B  
                                     l365 05C2                                       l349 05C8  
                                     l358 05A9                                       l606 0F94  
                                     l391 035C                                       l544 0477  
                                     l393 035F                                       l721 06B1  
                                     l553 04BD                                       l394 0362  
                                     l634 073E                                       l554 04F6  
                                     l538 0457                                       l395 0365  
                                     l619 06CD                                       l555 04F3  
                                     l396 0368                                       l733 0E30  
                                     l398 0375                                       l671 0EC1  
                                     l735 0E31                                       l744 0E4A  
                                     l674 0EF1                                       l675 0EC8  
                                     l756 03C3                                       l676 0ECA  
                                     l692 065F                                       _BDT 0020  
                                     l757 03C4                                       l769 0416  
                                     _UIE 0E92                                       _UIR 0E90  
                  _APP_LEDUpdateUSBStatus 0567                                _USBSuspend 0648  
                    USBStdSetCfgHandler@i 007D                      USBStdSetCfgHandler@p 007A  
                             _USBRxHandle 00E2                              __CFG_BORV$LO 0000  
                                     wreg 0009                            _USBDeviceTasks 044A  
                          _USBDeviceState 0055                               _USBTxHandle 0056  
                           _BUTTON_Enable 0351                                      S3990 0926  
                                    S3992 0932                                      S3984 0800  
                                    S3986 08EA                                      S3978 0900  
                                    S3988 091A                     ??_USBCtrlTrfRxService 0072  
                USBEnableEndpoint@options 0074                              __CFG_LVP$OFF 0000  
                         __end_of_LED_Off 05C3                                      l3000 03EA  
                                    l3004 03F2                                      l3022 041C  
                                    l3014 040C                                      l3040 0022  
                                    l3032 0001                                      l3042 0027  
                                    l3034 0019                                      l3122 0743  
                                    l3026 0433                                      l3220 0000  
                                    l3124 0753                                      l3108 072C  
                                    l3300 0708                                      l3028 0438  
                                    l3052 0F61                                      l3222 0007  
                                    l3046 002F                                      l3230 000A  
                                    l3062 0F71                                      l3224 0000  
                                    l3136 077B                                      l3304 070D  
                                    l3160 0E37                                      l3250 0000  
                                    l3242 0000                                      l3226 0001  
                                    l3330 0679                                      l3170 0E41  
                                    l3162 0E3B                                      l3066 0F75  
                                    l3410 031E                                      l3236 0001  
                                    l3260 000F                                      l3228 0006  
                                    l3332 067C                                      l3316 072A  
                                    l2604 05D4                                      l3172 0E43  
                                    l3156 0E35                                      l3084 0F9E  
                                    l3092 0FA7                USBConfigureEndpoint@handle 0073  
                                    l3502 0158                                      l3254 0000  
                                    l3238 0000                                      l3246 0000  
                                    l3262 0017                                      l3342 069A  
                                    l3318 0663                                      l2614 07B7  
                                    l2702 04F9                                      l3182 0E52  
                                    l3158 0E36                                      l3422 0325  
                                    l3248 0005                                      l3264 0018  
                                    l2800 0535                                      l2712 0505  
                                    l2704 0501                                      l3168 0E40  
                                    l3408 0313                                      l2626 011A  
                                    l3266 001E                                      l3258 0001  
                                    l3450 0182                                      l3346 06A7  
                                    l2618 07BD                                      l2650 0567  
                                    l3274 0DF4                                      l3602 045E  
                                    l3508 0159                                      l2644 0146  
                                    l3460 01C6                                      l3356 036B  
                                    l2660 0574                                      l2708 0504  
                                    l2900 0E62                                      l3532 0644  
                                    l3700 04ED                                      l2910 0E94  
                                    l2902 0E6A                                      l3534 0646  
                                    l3622 0472                                      l3614 046B  
                                    l3472 021E                                      l3464 01EB  
                                    l3456 01A4                                      l2744 06C9  
                                    l2584 07E8                                      l2672 058F  
                                    l2664 057D                                      l2656 056C  
                                    l2912 0E96                                      l2832 0FDE  
                                    l3474 0223                                      l3722 005D  
                                    l2690 0799                                      l2594 05B8  
                                    l2682 059C                                      l3554 05F9  
                                    l3394 02FE                                      l3378 02EB  
                                    l3642 0487                                      l3634 0480  
                                    l3468 0213                                      l3484 0294  
                                    l3716 004B                                      l2756 06DE  
                                    l2764 06EF                                      l2676 0598  
                                    l2668 0587                                      l2684 05A2  
                                    l2924 0EB1                                      l2852 0F02  
                                    l2844 0EFB                                      l2836 0FEA  
                                    l3478 028D                                      l3486 029F  
                                    l3574 02D4                                      l2766 06F3  
                                    l2774 0704                                      l2686 07F7  
                                    l2926 0EBD                                      l2782 0F51  
                                    l2870 0F17                                      l3566 0625  
                                    l3736 0087                                      l2784 0519  
                                    l2936 0ED4                                      l3568 0626  
                                    l3672 04B6                                      l3664 04A6  
                                    l3648 0495                                      l3498 0151  
                                    l3770 00DC                                      l3746 009E  
                                    l3762 00C9                                      l2954 0376  
                                    l2946 0EE6                                      l2778 0F5A  
                                    l3682 04C3                                      l3658 04A0  
                                    l2980 03B0                                      l2964 0386  
                                    l2892 0F40                                      l3692 04D6  
                                    l3790 0101                                      l2966 0388  
                                    l2896 0E5A                                      l3698 04E3  
                                    l3980 0506                                      l2988 03CD  
                                    l3982 0513                                      l2998 03E3  
                                    l3798 0027                                      u2255 073A  
                                    u1815 0FE4                     ??_USBCtrlTrfTxService 0070  
                                    _UCFG 0E91                                      _UEP0 0E98  
                                    _UEP1 0E99                                      _UEIE 0E97  
                                    _UEIR 0E93                                      _UCON 0E8E  
                                    _TMR0 0015                              __CFG_WRT$OFF 0000  
  USBStdFeatureReqHandler@current_ep_data 0068                                      _pDst 00E9  
                                    _main 0022                                      fsr0h 0005  
                                    fsr1h 0007                                      fsr0l 0004  
                                    indf0 0000                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                           __CFG_BOREN$ON 0000                                      ltemp 007E  
                                    start 0006                                      ttemp 007E  
                                    wtemp 007E                             __CFG_IESO$OFF 0000  
                    process_level@idx_key 0072                __end_of_USBCheckStdRequest 0E5A  
                  ??_USBCtrlTrfOutHandler 0076                 ??_USBStdFeatureReqHandler 007A  
                     USBDeviceInit@i_1597 0072                  ??_USBStdGetStatusHandler 0070  
                          ?_USBDeviceInit 0070                                     ?_main 0070  
                           __CFG_WDTE$OFF 0000         __size_of_USBCtrlEPServiceComplete 005F  
                  __end_of_USBDeviceTasks 04F9                 ?_USBCtrlEPServiceComplete 0070  
                                   _UADDR 0E96                                     _USTAT 0E8F  
      __size_of_USBCtrlEPAllowStatusStage 004E                            __CFG_FCMEN$OFF 0000  
                          ?_BUTTON_Enable 0070                           __end_of_get_adc 0000  
         __end_of_USBCtrlEPAllowDataStage 1000                                     _sd000 10CD  
                                   _sd001 106D                                     _sd002 10A1  
                           ?_is_adc_ready 0070     __end_of_APP_DeviceAudioMIDIInitialize 07B1  
  __size_of_APP_DeviceAudioMIDIInitialize 0018             _APP_DeviceAudioMIDIInitialize 0799  
                         _store_key_level 0000               __size_of_set_clock_and_data 0000  
                                   _pitch 00EA                 __size_of_BUTTON_IsPressed 0013  
                         ??_process_level 0072                                     ltemp0 007E  
                                   ltemp1 0082                                     ltemp2 0086  
                                   ltemp3 0080                       __size_of_LED_Enable 001C  
                         __end_of_run_adc 0000                                     ttemp0 007E  
                                   ttemp1 0081                                     ttemp2 0084  
                                   ttemp3 0087                                     ttemp4 007F  
      APP_DeviceAudioMIDITasks@scan_pitch 006C                                     status 0003  
                                   wtemp0 007E                                     wtemp1 0080  
                                   wtemp2 0082                                     wtemp3 0084  
                                   wtemp4 0086                                     wtemp5 0088  
                                   wtemp6 007F              __size_of_USBStdSetCfgHandler 0054  
                          __CFG_MCLRE$OFF 0000                           __initialization 0008  
                            __end_of_main 0033                ??_APP_DeviceAudioMIDITasks 007C  
                          __CFG_LPBOR$OFF 0000                             scan_task@note 0065  
               __size_of_USBCtrlEPService 004E                                    ??_main 007E  
                         ?_USBDeviceTasks 0070                               ?_USBSuspend 0070  
                               ??_LED_Off 0070                       __CFG_USBLSCLK$48MHz 0000  
                          ??_is_adc_ready 0070                                    _ACTCON 039B  
                                  _ADRESH 009C                                    _ANSELA 018C  
                  SYSTEM_Initialize@state 0071                                    _LED_On 05C3  
                     set_clock_and_data@c 0071                       set_clock_and_data@d 0070  
                                  _OSCCON 0099                            __CFG_PWRTE$OFF 0000  
                       _shortPacketStatus 00EC                          __end_of_get_data 0000  
                         USBDeviceTasks@i 006F               USBStdFeatureReqHandler@pUEP 0066  
                USBTransferOnePacket@data 0071                USBCtrlTrfInHandler@lastDTS 0073  
                         ??_USBDeviceInit 0070                            __CFG_STVREN$ON 0000  
                       _USBEnableEndpoint 07B1           __size_of_USBStdGetStatusHandler 003E  
                                  _memset 0F4F                        ?_USBEnableEndpoint 0074  
                               ??_get_adc 0070                   __end_of_store_key_level 0000  
           __size_of_USBTransferOnePacket 003E                           ??_BUTTON_Enable 0070  
                     ??_USBEnableEndpoint 0075                                 ??_run_adc 0070  
                             _CtrlTrfData 0048                   __size_of_is_end_of_scan 0000  
                    _controlTransferState 0057                         _SYSTEM_Initialize 02C9  
                 __end_of__initialization 0020                        ?_SYSTEM_Initialize 0070  
                __size_of_USBStallHandler 001B                       __size_of_USBSuspend 000B  
                          __pcstackCOMMON 0070                 __end_of_USBEnableEndpoint 07CE  
            _APP_DeviceAudioMIDITasks$427 0066              _APP_DeviceAudioMIDITasks$466 0068  
            _APP_DeviceAudioMIDITasks$467 006A                             __end_of_sd000 10D1  
                           __end_of_sd001 10A1                             __end_of_sd002 10BB  
                     ??_SYSTEM_Initialize 0071                                 LED_On@led 0070  
        __size_of_USBCtrlEPAllowDataStage 0040                                _adc_levels 0120  
                  process_level@old_level 0070                    process_level@new_level 0071  
                            ??_LED_Enable 0070             __size_of_USBConfigureEndpoint 0029  
             __end_of_USBCtrlTrfInHandler 06B7                   ?_APP_LEDUpdateUSBStatus 0070  
                  store_key_level@idx_key 005A                            _OPTION_REGbits 0095  
                          scan_task@state 0151                store_key_level@end_of_scan 0079  
                ??_USBCtrlTrfSetupHandler 007E                 __end_of_SYSTEM_Initialize 02E0  
                        _BUTTON_IsPressed 014F                    _USBStdGetStatusHandler 0EBD  
                              __pbssBANK0 0050                                __pbssBANK1 00E0  
                              __pbssBANK2 0120                                   ?_LED_On 0070  
                      __end_of_LED_Enable 0376                      store_key_level@level 007A  
             __size_of_USBWakeFromSuspend 0010                               _pBDTEntryIn 0052  
        __end_of_USBCtrlEPServiceComplete 0FC0                        __size_of_scan_init 001B  
                              __pmaintext 0022                        __size_of_scan_task 014C  
                    USBCtrlTrfRxService@i 0074                      __end_of_is_adc_ready 0000  
                           LED_Enable@led 0070                           __CFG_PLLMULT$3x 0000  
          __end_of_APP_LEDUpdateUSBStatus 05A7                                __pintentry 0004  
                                 ?_memset 0070                                _device_dsc 10BB  
                        _USBCtrlEPService 05DF                                _ep_data_in 0147  
                      __size_of_set_timer 0000               __end_of_USBCtrlTrfRxService 0799  
                      _USBCheckStdRequest 0E20                          ?_store_key_level 0079  
                       _configDescriptor1 1008                         scan_task@velocity 007B  
                                 _LED_Off 05A7               __end_of_USBCtrlTrfTxService 0708  
                     _USBStdSetCfgHandler 0EFB                                 ?_get_data 0070  
                     ?_USBCheckStdRequest 0070              __size_of_USBStdGetDscHandler 0063  
                                 _UIEbits 0E92                                   _UIRbits 0E90  
                         __size_of_LED_On 001C            APP_LEDUpdateUSBStatus@ledCount 0050  
                    ?_USBStdSetCfgHandler 0070                __size_of_USBEnableEndpoint 001D  
                    ??_USBCheckStdRequest 006A             __size_of_USBCtrlTrfOutHandler 0024  
                        ??_USBDeviceTasks 006E                         ??_USBStallHandler 0070  
                         __size_of_memset 0012                 __end_of_configDescriptor1 106D  
                                 __ptext1 044A                                   __ptext2 0653  
                                 __ptext3 0648                                   __ptext4 062D  
                                 __ptext5 02E0                                   __ptext6 05DF  
                                 __ptext7 0DF4                                   __ptext8 0F61  
                                 __ptext9 0FC0                                   _inPipes 005B  
                                 _get_adc 0000               _USBDeferOUTDataStagePackets 00E1  
                            ??_USBSuspend 007A                             _scan_task$863 0061  
                           _scan_task$867 0063                __end_of_set_clock_and_data 0000  
                       __end_of_scan_init 02C9                         __end_of_scan_task 02AE  
                                 _run_adc 0000                        __end_of_USB_CD_Ptr 1008  
                              ??_get_data 0070                __size_of_SYSTEM_Initialize 0017  
         __size_of_USBCtrlTrfSetupHandler 002C                                   clrloop0 093F  
                          _is_end_of_scan 0000                      end_of_initialization 0020  
                      __end_of_USB_SD_Ptr 1006                       _pBDTEntryEP0OutNext 0059  
                                 memset@c 0070                                   memset@n 0072  
                                 memset@p 0074                     __end_of_process_level 0000  
                ?_USBStdFeatureReqHandler 0070                         __end_of_set_timer 0000  
                   ??_USBStdSetCfgHandler 007A                                _note_event 014B  
                      __end_of_USBSuspend 0653                   _USBCtrlEPAllowDataStage 0FC0  
                            __pstringtext 1000                  _USBCtrlEPServiceComplete 0F61  
                              _wait_timer 00ED                _USBStatusStageEnabledFlag1 00E3  
              _USBStatusStageEnabledFlag2 00E4                        USBEnableEndpoint@p 0077  
                               _PORTAbits 000C            ?_APP_DeviceAudioMIDISOFHandler 0070  
                        __CFG_FOSC$INTOSC 0000                                 _TRISAbits 008C  
                               _TRISCbits 008E                        _ReceivedDataBuffer 00A0  
                  __end_of_is_end_of_scan 0000                        _BothEP0OutUOWNsSet 014F  
               USBStdSetCfgHandler@i_1928 007C                 USBConfigureEndpoint@EPNum 0072  
       __size_of_APP_DeviceAudioMIDITasks 00DE                ?_USBCtrlEPAllowStatusStage 0070  
               ?_APP_DeviceAudioMIDITasks 0070       USER_USB_CALLBACK_EVENT_HANDLER@size 0064  
                               _USTATcopy 0060              __end_of_USBTransferOnePacket 014F  
                          __end_of_LED_On 05DF                     __size_of_is_adc_ready 0000  
                      __CFG_PLLEN$ENABLED 0000                       process_level@old_on 0077  
                     process_level@new_on 0078                    _USBCtrlTrfSetupHandler 0DF4  
                __end_of_BUTTON_IsPressed 0162                     __end_of_USBDeviceInit 0351  
                              LED_Off@led 0070                            __end_of_memset 0F61  
                     start_initialization 0008                   ?_USBStdGetStatusHandler 0070  
                   __end_of_BUTTON_Enable 035A             USBCtrlTrfRxService@byteToRead 0075  
                         ?_is_end_of_scan 0070                            _is_initialized 00E7  
                            _is_adc_ready 0000              __end_of_USBConfigureEndpoint 07F7  
         __end_of_USBStdFeatureReqHandler 044A                                  ??_LED_On 0070  
       __end_of_USBCtrlEPAllowStatusStage 0567                  __end_of_USBCtrlEPService 062D  
               ??_USBCtrlEPAllowDataStage 0071                            USBDeviceInit@i 0073  
                          USBDeviceInit@p 0070                    _pBDTEntryEP0OutCurrent 0058  
                 USBTransferOnePacket@dir 0070                   USBTransferOnePacket@len 0073  
                     _USBStdGetDscHandler 0E5A                                  ??_memset 0074  
                  BUTTON_IsPressed@button 0070                    _USBActiveConfiguration 00EE  
          __end_of_USBStdGetStatusHandler 0EFB                     _waiting_for_timer$813 0070  
                                ?_LED_Off 0070                                 ___latbits 0002  
                           __pcstackBANK0 0061              __size_of_USBCtrlTrfInHandler 0054  
                    ?_USBStdGetDscHandler 0070                         __size_of_get_data 0000  
              __end_of_USBWakeFromSuspend 0663                           _USBStallHandler 062D  
                            _pBDTEntryOut 014D            ?_APP_DeviceAudioMIDIInitialize 0070  
                               __pswtext1 0900                                 __pswtext2 0800  
                               __pswtext3 08EA                                 __pswtext4 091A  
                               __pswtext5 0926                                 __pswtext6 0932  
                                ?_get_adc 0070                      _USBTransferOnePacket 0111  
                               _msCounter 00E8              __end_of_USBCtrlTrfOutHandler 072C  
                   ??_USBStdGetDscHandler 0070                               _ep_data_out 0149  
                                ?_run_adc 0070              __size_of_USBCtrlTrfRxService 006D  
           USBConfigureEndpoint@direction 0070                  __size_of_store_key_level 0000  
                               _scan_init 02AE                                 _scan_task 0162  
            __size_of_USBCtrlTrfTxService 0051                                  _LATCbits 010E  
              ??_USBCtrlEPServiceComplete 0073                                 clear_ram0 093E  
                      _set_clock_and_data 0000                                  _PIE1bits 0091  
                                _PIE2bits 0092                         _waiting_for_timer 0000  
                                _PIR2bits 0012                 USBCtrlEPService@setup_cnt 006D  
                      ?_waiting_for_timer 0070                                 _set_timer 0000  
                                _UEP0bits 0E98                _USBDeferINDataStagePackets 00E0  
             __size_of_USBCheckStdRequest 003A                       ?_set_clock_and_data 0070  
                                _UCONbits 0E8E                      _USBConfigureEndpoint 07CE  
        __size_of_USBStdFeatureReqHandler 00D4          __end_of_APP_DeviceAudioMIDITasks 0111  
                     ??_waiting_for_timer 0070                                _ADCON0bits 009D  
                              _ADCON1bits 009E                                _ADCON2bits 009F  
                   ?_USBTransferOnePacket 0070                         _SYS_InterruptHigh 0004  
                            _RemoteWakeup 0150                          __size_of_LED_Off 001C  
                      ?_SYS_InterruptHigh 0070                   __end_of_USBStallHandler 0648  
                       _process_level$844 0073                         _process_level$845 0075  
                    ??_set_clock_and_data 0071               ??_USBCtrlEPAllowStatusStage 0070  
             __end_of_USBStdSetCfgHandler 0F4F                                ?_scan_init 0070  
                              ?_scan_task 007B                       ??_SYS_InterruptHigh 0070  
               __end_of_waiting_for_timer 0000           ??_APP_DeviceAudioMIDISOFHandler 0070  
                      __end_of_device_dsc 10CD                  ??_APP_LEDUpdateUSBStatus 0071  
                 ?_USBCtrlTrfSetupHandler 0070                   USBStdGetStatusHandler@p 0070  
                  USBTransferOnePacket@ep 0076                                ?_set_timer 0070  
                                _SetupPkt 0040                     ?_USBConfigureEndpoint 0070  
                       ?_BUTTON_IsPressed 0070                 __end_of_SYS_InterruptHigh 0006  
                      ??_BUTTON_IsPressed 0070                          ??_is_end_of_scan 0070  
                              _ANSELAbits 018C                                _ANSELCbits 018E  
                        __size_of_get_adc 0000                    __size_of_process_level 0000  
                 __size_of_USBDeviceTasks 00AF                                  __ptext10 0E20  
                                __ptext11 0EFB                                  __ptext20 07F7  
                                __ptext12 0F4F                                  __ptext21 0799  
                                __ptext13 0EBD                                  __ptext30 035A  
                                __ptext22 07B1                                  __ptext14 0E5A  
                                __ptext31 0351                                  __ptext23 07CE  
                                __ptext15 0376                                  __ptext40 0000  
                                __ptext32 0033                                  __ptext24 0708  
                                __ptext16 04F9                                  __ptext41 0000  
                                __ptext33 0162                                  __ptext25 072C  
                                __ptext17 0567                                  __ptext42 0000  
                                __ptext34 0000                                  __ptext26 0519  
                                __ptext18 05C3                                  __ptext43 0000  
                                __ptext35 0000                                  __ptext27 0663  
                                __ptext19 05A7                                  __ptext44 0000  
                                __ptext36 0000                                  __ptext28 06B7  
                                __ptext45 0111                                  __ptext37 0000  
                                __ptext29 02C9                                  __ptext46 014F  
                                __ptext38 0000                                  __ptext39 02AE  
                                _get_data 0000                          __size_of_run_adc 0000  
                                _midiData 01A0            __end_of_USBCtrlTrfSetupHandler 0E20  
                           __size_of_main 0011                         ?_USBCtrlEPService 0070  
                      ??_USBCtrlEPService 006B                         ??_store_key_level 007A  
                     _USBCtrlTrfInHandler 0663                       BUTTON_Enable@button 0070  
                                _outPipes 0140                      _USBCtrlTrfOutHandler 0708  
               _USBCtrlEPAllowStatusStage 0519                                _LED_Enable 035A  
                  ??_USBTransferOnePacket 0074                 _USBDeferStatusStagePacket 0054  
                              _INTCONbits 000B                      ?_USBCtrlTrfInHandler 0070  
                _APP_DeviceAudioMIDITasks 0033             USBCtrlTrfTxService@byteToSend 0070  
                                memset@p1 0075                          ?_USBStallHandler 0070  
                USBStdFeatureReqHandler@p 0069                                  intlevel1 0000  
                             ??_scan_init 0070                               ??_scan_task 007C  
                  __size_of_USBDeviceInit 0071   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0519  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 0020          ?_USER_USB_CALLBACK_EVENT_HANDLER 0061  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 007A           _USER_USB_CALLBACK_EVENT_HANDLER 04F9  
              __size_of_waiting_for_timer 0000                         __CFG_CLKOUTEN$OFF 0000  
                           _process_level 0000                               _sentNoteOff 00EB  
         __size_of_APP_LEDUpdateUSBStatus 0040     __end_of_APP_DeviceAudioMIDISOFHandler 07FC  
  __size_of_APP_DeviceAudioMIDISOFHandler 0005             _APP_DeviceAudioMIDISOFHandler 07F7  
                             ??_set_timer 0070                    ??_USBConfigureEndpoint 0071  
                   ?_USBCtrlTrfOutHandler 0070                    __size_of_BUTTON_Enable 0009  
                    __CFG_CPUDIV$NOCLKDIV 0000                       _USBCtrlTrfRxService 072C  
                      _USBWakeFromSuspend 0653                   _USBStdFeatureReqHandler 0376  
                     _USBCtrlTrfTxService 06B7                __size_of_SYS_InterruptHigh 0002  
         ??_APP_DeviceAudioMIDIInitialize 007A                       ?_USBWakeFromSuspend 0070  
                   ??_USBCtrlTrfInHandler 0071                     _USBAlternateInterface 00EF  
                     USBEnableEndpoint@ep 0079                           _endpoint_number 00E6  
                    ?_USBCtrlTrfRxService 0070                  ?_USBCtrlEPAllowDataStage 0070  
                    ?_USBCtrlTrfTxService 0070                            ?_process_level 0070  
            _USBStatusStageTimeoutCounter 00E5                      ??_USBWakeFromSuspend 007A  
              USBTransferOnePacket@handle 0077                                _USB_CD_Ptr 1006  
        APP_DeviceAudioMIDITasks@velocity 006D  
